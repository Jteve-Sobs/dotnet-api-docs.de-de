<Type Name="XAttribute" FullName="System.Xml.Linq.XAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d1b3b323f31872f2cc0c79db907a991547478b2c" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70406696" /></Metadata><TypeSignature Language="C#" Value="public class XAttribute : System.Xml.Linq.XObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XAttribute extends System.Xml.Linq.XObject" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Linq.XAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class XAttribute&#xA;Inherits XObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class XAttribute : System::Xml::Linq::XObject" />
  <TypeSignature Language="F#" Value="type XAttribute = class&#xA;    inherit XObject" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XDocument</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Linq</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.Linq.XObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.ComponentModel.TypeDescriptionProvider(typeof(MS.Internal.Xml.Linq.ComponentModel.XTypeDescriptionProvider`1&lt;System.Xml.Linq.XAttribute&gt;))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5">
      <AttributeName>System.ComponentModel.TypeDescriptionProvider(typeof(System.Xml.Linq.ComponentModel.XTypeDescriptionProvider`1&lt;System.Xml.Linq.XAttribute&gt;))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="3eab1-101">Stellt ein XML-Attribut dar.</span><span class="sxs-lookup"><span data-stu-id="3eab1-101">Represents an XML attribute.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3eab1-102">Ein XML-Attribut ist ein Name-Wert-Paar, das einem XML-Element zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="3eab1-102">An XML attribute is a name/value pair associated with an XML element.</span></span>  
  
 <span data-ttu-id="3eab1-103">Jede <xref:System.Xml.Linq.XElement> enthält eine Liste der Attribute für dieses Element.</span><span class="sxs-lookup"><span data-stu-id="3eab1-103">Each <xref:System.Xml.Linq.XElement> contains a list of the attributes for that element.</span></span> <span data-ttu-id="3eab1-104">Attribute müssen einen qualifizierten Namen aufweisen, der für das Element eindeutig ist.</span><span class="sxs-lookup"><span data-stu-id="3eab1-104">Attributes must have a qualified name that is unique to the element.</span></span> <span data-ttu-id="3eab1-105">Attribute sind nicht von <xref:System.Xml.Linq.XNode>abgeleitet; Sie sind keine Knoten in der XML-Struktur.</span><span class="sxs-lookup"><span data-stu-id="3eab1-105">Attributes are not derived from <xref:System.Xml.Linq.XNode>; they are not nodes in the XML tree.</span></span> <span data-ttu-id="3eab1-106">Stattdessen handelt es sich einfach um Name-Wert-Paare, die einem Element zugeordnet sind.</span><span class="sxs-lookup"><span data-stu-id="3eab1-106">Instead, they are simply name/value pairs associated with an element.</span></span>  
  
 <span data-ttu-id="3eab1-107">Attribute werden in der XML-Struktur in der Reihenfolge beibehalten, in der Sie dem-Element hinzugefügt wurden.</span><span class="sxs-lookup"><span data-stu-id="3eab1-107">Attributes are maintained in the XML tree in the order that they were added to the element.</span></span> <span data-ttu-id="3eab1-108">Wenn eine Auflistung von Attributen von <xref:System.Xml.Linq.XElement.Attributes%2A>zurückgegeben wird, werden Sie in der Reihenfolge zurückgegeben, in der Sie dem-Element hinzugefügt wurden, und werden nicht sortiert.</span><span class="sxs-lookup"><span data-stu-id="3eab1-108">When a collection of attributes is returned by <xref:System.Xml.Linq.XElement.Attributes%2A>, they are returned in the order that they were added to the element, and are not sorted.</span></span>  
  
 <span data-ttu-id="3eab1-109">Technisch gesehen sind Namespace Deklarationen in XML keine ordnungsgemäßen Attribute.</span><span class="sxs-lookup"><span data-stu-id="3eab1-109">Technically, in XML, namespace declarations are not attributes proper.</span></span> <span data-ttu-id="3eab1-110">Dieser Unterschied wird jedoch normalerweise nicht von vielen XML-Programmierern getroffen.</span><span class="sxs-lookup"><span data-stu-id="3eab1-110">However, this distinction is not normally made by many XML programmers.</span></span> <span data-ttu-id="3eab1-111">Da Namespace Deklarationen genau dieselbe XML-Syntax wie Attribute aufweisen, stellen die meisten XML-Programmierer Namespaces als Attribute dar.</span><span class="sxs-lookup"><span data-stu-id="3eab1-111">Instead, because namespace declarations have exactly the same XML syntax as attributes, most XML programmers think of namespaces as attributes.</span></span> <span data-ttu-id="3eab1-112">Zum Vereinfachen der [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] Programmierschnittstelle werden Namespaces in der XML-Struktur als Attribute dargestellt.</span><span class="sxs-lookup"><span data-stu-id="3eab1-112">To simplify the [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] programming interface, namespaces are represented in the XML tree as attributes.</span></span> <span data-ttu-id="3eab1-113">Solche Namespace Attribute beeinflussen die Serialisierung einer XML-Struktur.</span><span class="sxs-lookup"><span data-stu-id="3eab1-113">Such namespace attributes impact serialization of an XML tree.</span></span> <span data-ttu-id="3eab1-114">Bei der Serialisierung [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] versucht, mit dem in den Namespace Attributen angegebenen Namespace Präfix zu serialisieren.</span><span class="sxs-lookup"><span data-stu-id="3eab1-114">When serializing, [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] attempts to serialize with the namespace prefix specified in namespace attributes.</span></span> <span data-ttu-id="3eab1-115">Mithilfe <xref:System.Xml.Linq.XAttribute.IsNamespaceDeclaration%2A> von können Sie feststellen, ob es sich bei einem Attribut tatsächlich um eine Namespace Deklaration handelt.</span><span class="sxs-lookup"><span data-stu-id="3eab1-115">You can use the <xref:System.Xml.Linq.XAttribute.IsNamespaceDeclaration%2A> to determine if an attribute is really a namespace declaration.</span></span>  
  
 <span data-ttu-id="3eab1-116">Die <xref:System.Xml.Linq.XAttribute>-Klasse wird von <xref:System.Xml.Linq.XObject> abgeleitet.</span><span class="sxs-lookup"><span data-stu-id="3eab1-116">The <xref:System.Xml.Linq.XAttribute> class derives from <xref:System.Xml.Linq.XObject>.</span></span> <span data-ttu-id="3eab1-117">Sie können den Attributen Anmerkungen hinzufügen und Ereignisse für diese Elemente beobachten.</span><span class="sxs-lookup"><span data-stu-id="3eab1-117">You can add annotations to attributes, and observe events for them.</span></span>  
  
 <span data-ttu-id="3eab1-118">Einige <xref:System.Xml.Linq.XAttribute> Methoden können in XAML verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="3eab1-118">Some <xref:System.Xml.Linq.XAttribute> methods can be used from XAML.</span></span> <span data-ttu-id="3eab1-119">Weitere Informationen finden Sie unter [Dynamische Eigenschaften in LINQ to XML](https://msdn.microsoft.com/library/0455f47c-4a68-4f2e-a3f8-dd1d85b99012).</span><span class="sxs-lookup"><span data-stu-id="3eab1-119">For more information, see [LINQ to XML Dynamic Properties](https://msdn.microsoft.com/library/0455f47c-4a68-4f2e-a3f8-dd1d85b99012).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Linq.XElement" />
    <altmember cref="T:System.Xml.Linq.XDocument" />
    <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="3eab1-120">LINQ to XML</span><span class="sxs-lookup"><span data-stu-id="3eab1-120">LINQ to XML</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/ab0fed32-994c-4593-b307-54aa72c6bdc3"><span data-ttu-id="3eab1-121">Übersicht über die XAttribute-Klasse</span><span class="sxs-lookup"><span data-stu-id="3eab1-121">XAttribute Class Overview</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/0455f47c-4a68-4f2e-a3f8-dd1d85b99012"><span data-ttu-id="3eab1-122">Dynamische Eigenschaften in LINQ to XML</span><span class="sxs-lookup"><span data-stu-id="3eab1-122">LINQ to XML Dynamic Properties</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3eab1-123">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Linq.XAttribute" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="3eab1-123">Initializes a new instance of the <see cref="T:System.Xml.Linq.XAttribute" /> class.</span></span></summary>
        <altmember cref="P:System.Xml.Linq.XAttribute.Name" />
        <altmember cref="P:System.Xml.Linq.XAttribute.Value" />
        <altmember cref="P:System.Xml.Linq.XAttribute.NodeType" />
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="3eab1-124">LINQ to XML</span><span class="sxs-lookup"><span data-stu-id="3eab1-124">LINQ to XML</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/ab0fed32-994c-4593-b307-54aa72c6bdc3"><span data-ttu-id="3eab1-125">Übersicht über die XAttribute-Klasse</span><span class="sxs-lookup"><span data-stu-id="3eab1-125">XAttribute Class Overview</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XAttribute (System.Xml.Linq.XAttribute other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.Linq.XAttribute other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (other As XAttribute)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XAttribute(System::Xml::Linq::XAttribute ^ other);" />
      <MemberSignature Language="F#" Value="new System.Xml.Linq.XAttribute : System.Xml.Linq.XAttribute -&gt; System.Xml.Linq.XAttribute" Usage="new System.Xml.Linq.XAttribute other" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="other" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="3eab1-126">Ein <see cref="T:System.Xml.Linq.XAttribute" />-Objekt, aus dem kopiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="3eab1-126">An <see cref="T:System.Xml.Linq.XAttribute" /> object to copy from.</span></span></param>
        <summary><span data-ttu-id="3eab1-127">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Linq.XAttribute" />-Klasse mit einem anderen <see cref="T:System.Xml.Linq.XAttribute" /> -Objekt.</span><span class="sxs-lookup"><span data-stu-id="3eab1-127">Initializes a new instance of the <see cref="T:System.Xml.Linq.XAttribute" /> class from another <see cref="T:System.Xml.Linq.XAttribute" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3eab1-128">Dieser Konstruktor wird hauptsächlich intern verwendet, wenn Sie eine tiefe Kopie einer XML-Struktur erstellen.</span><span class="sxs-lookup"><span data-stu-id="3eab1-128">This constructor is primarily used internally when making a deep copy of an XML tree.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3eab1-129">In diesem Beispiel wird veranschaulicht, dass das Erstellen einer tiefen Kopie einer XML-Struktur eine Kopie, nicht einen Klon, eines Attributs in der Struktur erstellt.</span><span class="sxs-lookup"><span data-stu-id="3eab1-129">This example demonstrates that creating a deep copy of an XML tree creates a copy, not a clone, of an attribute in the tree.</span></span>  
  
```csharp  
XElement root1 = XElement.Parse("<Root Att1='abc' />");  
// Make a deep copy.  
XElement root2 = new XElement(root1);  
if (root1.Attribute("Att1") == root2.Attribute("Att1"))  
    Console.WriteLine("This will not be printed");  
else  
    Console.WriteLine("Creating a deep copy created a new attribute from the original.");  
```  
  
```vb  
Dim root1 As XElement = <Root Att1='abc'/>  
' Make a deep copy.  
Dim root2 As XElement = New XElement(root1)  
If root1.Attribute("Att1") Is root2.Attribute("Att1") Then  
    Console.WriteLine("This will not be printed")  
Else  
    Console.WriteLine("Creating a deep copy created a new attribute from the original.")  
End If  
```  
  
 <span data-ttu-id="3eab1-130">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="3eab1-130">This example produces the following output:</span></span>  
  
```  
  
Creating a deep copy created a new attribute from the original.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3eab1-131">Der <paramref name="other" />-Parameter ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3eab1-131">The <paramref name="other" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="P:System.Xml.Linq.XAttribute.Name" />
        <altmember cref="P:System.Xml.Linq.XAttribute.Value" />
        <altmember cref="P:System.Xml.Linq.XAttribute.NodeType" />
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="3eab1-132">LINQ to XML</span><span class="sxs-lookup"><span data-stu-id="3eab1-132">LINQ to XML</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/ab0fed32-994c-4593-b307-54aa72c6bdc3"><span data-ttu-id="3eab1-133">Übersicht über die XAttribute-Klasse</span><span class="sxs-lookup"><span data-stu-id="3eab1-133">XAttribute Class Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XAttribute (System.Xml.Linq.XName name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.Linq.XName name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XName,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As XName, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XAttribute(System::Xml::Linq::XName ^ name, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Xml.Linq.XAttribute : System.Xml.Linq.XName * obj -&gt; System.Xml.Linq.XAttribute" Usage="new System.Xml.Linq.XAttribute (name, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.Xml.Linq.XName" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="3eab1-134">Der <see cref="T:System.Xml.Linq.XName" /> des Attributs.</span><span class="sxs-lookup"><span data-stu-id="3eab1-134">The <see cref="T:System.Xml.Linq.XName" /> of the attribute.</span></span></param>
        <param name="value"><span data-ttu-id="3eab1-135">Ein <see cref="T:System.Object" />, das den Wert des Attributs enthält.</span><span class="sxs-lookup"><span data-stu-id="3eab1-135">An <see cref="T:System.Object" /> containing the value of the attribute.</span></span></param>
        <summary><span data-ttu-id="3eab1-136">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Linq.XAttribute" />-Klasse mit dem angegebenen Namen und Wert.</span><span class="sxs-lookup"><span data-stu-id="3eab1-136">Initializes a new instance of the <see cref="T:System.Xml.Linq.XAttribute" /> class from the specified name and value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3eab1-137">Es gibt eine implizite Konvertierung von String in <xref:System.Xml.Linq.XName>.</span><span class="sxs-lookup"><span data-stu-id="3eab1-137">There is an implicit conversion from string to <xref:System.Xml.Linq.XName>.</span></span> <span data-ttu-id="3eab1-138">Die typische Verwendung dieses Konstruktors besteht darin, eine Zeichenfolge als ersten Parameter anzugeben, anstatt wie folgt <xref:System.Xml.Linq.XName>eine neue zu erstellen:</span><span class="sxs-lookup"><span data-stu-id="3eab1-138">Typical use of this constructor is to specify a string as the first parameter instead of creating a new <xref:System.Xml.Linq.XName>, as follows:</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("AnAttributeName", "Content")  
);  
```  
  
 <span data-ttu-id="3eab1-139">Sie können auch die Additions Operator Überladung mit einer <xref:System.Xml.Linq.XNamespace> und eine Zeichenfolge verwenden, <xref:System.Xml.Linq.XName>um eine zu erstellen. gehen Sie dazu wie folgt vor:</span><span class="sxs-lookup"><span data-stu-id="3eab1-139">You can also use the addition operator overload with an <xref:System.Xml.Linq.XNamespace> and a string to create an <xref:System.Xml.Linq.XName>, as follows:</span></span>  
  
```csharp  
XNamespace aw = "http://www.adventure-works.com";  
XElement root = new XElement(aw + "Root",  
    new XAttribute(aw + "AnAttributeName", "Content")  
);  
```  
  
 <span data-ttu-id="3eab1-140">Weitere Informationen finden Sie unter [Arbeiten mit XML-Namespaces](https://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430).</span><span class="sxs-lookup"><span data-stu-id="3eab1-140">For more information, see [Working with XML Namespaces](https://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430).</span></span>  
  
 <span data-ttu-id="3eab1-141">Diese Vorgehensweisen funktionieren auch für Visual Basic, aber XML-Literale bieten einen besseren Ansatz für das Erstellen von XML-Strukturen.</span><span class="sxs-lookup"><span data-stu-id="3eab1-141">These same approaches will work for Visual Basic, however XML literals provide a better approach for creating XML trees.</span></span>  
  
 <span data-ttu-id="3eab1-142">Der `value` -Parameter kann <xref:System.String>, `double`, `float`, ,, `bool` oder sein <xref:System.TimeSpan> . `decimal` <xref:System.DateTime></span><span class="sxs-lookup"><span data-stu-id="3eab1-142">The `value` parameter can be a <xref:System.String>, `double`, `float`, `decimal`, `bool`, <xref:System.DateTime>, or <xref:System.TimeSpan>.</span></span> <span data-ttu-id="3eab1-143">Wenn der Wert ein <xref:System.DateTime> oder <xref:System.TimeSpan>ist, wird der Wert des-Attributs gemäß den W3C-Spezifikationen ordnungsgemäß formatiert.</span><span class="sxs-lookup"><span data-stu-id="3eab1-143">If the value is a <xref:System.DateTime> or <xref:System.TimeSpan>, the value of the attribute is formatted correctly per the W3C specifications.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3eab1-144">Im folgenden Beispiel wird dieser Konstruktor zum Erstellen von Attributen verwendet.</span><span class="sxs-lookup"><span data-stu-id="3eab1-144">The following example uses this constructor to create attributes.</span></span> <span data-ttu-id="3eab1-145">Sie übergibt Zeichen folgen als erstes Argument an den <xref:System.Xml.Linq.XAttribute> Konstruktor, der dann implizit in <xref:System.Xml.Linq.XName> -Objekte konvertiert wird.</span><span class="sxs-lookup"><span data-stu-id="3eab1-145">It passes strings as the first argument to the <xref:System.Xml.Linq.XAttribute> constructor, which are then implicitly converted to <xref:System.Xml.Linq.XName> objects.</span></span> <span data-ttu-id="3eab1-146">Die Attribute werden einem Element hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="3eab1-146">The attributes are added to an element.</span></span>  
  
```csharp  
XElement root;  
  
double dbl = 12.345;  
XAttribute[] attArray = {  
    new XAttribute("Att4", 1),  
    new XAttribute("Att5", 2),  
    new XAttribute("Att6", 3)  
};  
DateTime dt = new DateTime(2006, 10, 6, 12, 30, 00);  
  
// string content  
root = new XElement("Root",  
    new XAttribute("Att1", "Some text"),  
  
    // double content  
    new XAttribute("Att2", dbl),  
  
    // DateTime content  
    new XAttribute("Att3", dt),  
  
    // XAttribute array content  
    attArray  
);  
  
Console.WriteLine(root);  
```  
  
```vb  
Dim dbl As Double = 12.345  
Dim attArray As XAttribute() = { _  
    New XAttribute("Att4", 1), _  
    New XAttribute("Att5", 2), _  
    New XAttribute("Att6", 3) _  
}  
Dim dt As DateTime = New DateTime(2006, 10, 6, 12, 30, 0)  
Dim root As XElement = <Root Att1="Some text"  
                           Att2=<%= dbl %>  
                           Att3=<%= dt %>  
                           <%= attArray %>  
                       />  
Console.WriteLine(root)  
```  
  
 <span data-ttu-id="3eab1-147">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="3eab1-147">This example produces the following output:</span></span>  
  
```  
  
<Root Att1="Some text" Att2="12.345" Att3="2006-10-06T12:30:00" Att4="1" Att5="2" Att6="3" />  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3eab1-148">Der <paramref name="name" />-Parameter oder der <paramref name="value" />-Parameter ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3eab1-148">The <paramref name="name" /> or <paramref name="value" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="P:System.Xml.Linq.XAttribute.Name" />
        <altmember cref="P:System.Xml.Linq.XAttribute.Value" />
        <altmember cref="P:System.Xml.Linq.XAttribute.NodeType" />
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="3eab1-149">LINQ to XML</span><span class="sxs-lookup"><span data-stu-id="3eab1-149">LINQ to XML</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/ab0fed32-994c-4593-b307-54aa72c6bdc3"><span data-ttu-id="3eab1-150">Übersicht über die XAttribute-Klasse</span><span class="sxs-lookup"><span data-stu-id="3eab1-150">XAttribute Class Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EmptySequence">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XAttribute&gt; EmptySequence { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IEnumerable`1&lt;class System.Xml.Linq.XAttribute&gt; EmptySequence" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Linq.XAttribute.EmptySequence" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property EmptySequence As IEnumerable(Of XAttribute)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::Generic::IEnumerable&lt;System::Xml::Linq::XAttribute ^&gt; ^ EmptySequence { System::Collections::Generic::IEnumerable&lt;System::Xml::Linq::XAttribute ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EmptySequence : seq&lt;System.Xml.Linq.XAttribute&gt;" Usage="System.Xml.Linq.XAttribute.EmptySequence" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XAttribute&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3eab1-151">Ruft eine leere Auflistung von Attributen ab.</span><span class="sxs-lookup"><span data-stu-id="3eab1-151">Gets an empty collection of attributes.</span></span></summary>
        <value><span data-ttu-id="3eab1-152">Ein <see cref="T:System.Collections.Generic.IEnumerable`1" /> vom Typ <see cref="T:System.Xml.Linq.XAttribute" />, das eine leere Auflistung enthält.</span><span class="sxs-lookup"><span data-stu-id="3eab1-152">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XAttribute" /> containing an empty collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3eab1-153">Diese Eigenschaft wird normalerweise von Klassen Implementierungen verwendet, wenn Sie eine Methode schreiben, die eine Auflistung von Attributen zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="3eab1-153">This property is typically used by class implementers when writing a method that returns a collection of attributes.</span></span> <span data-ttu-id="3eab1-154">Wenn die Methode eine leere Auflistung von Attributen zurückgeben muss, kann diese Eigenschaft verwendet werden, um eine leere Auflistung von <xref:System.Xml.Linq.XAttribute> -Objekten zu erhalten.</span><span class="sxs-lookup"><span data-stu-id="3eab1-154">If the method needs to return an empty collection of attributes, it could use this property to get an empty collection of <xref:System.Xml.Linq.XAttribute> objects.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.Linq.XElement.EmptySequence" />
        <altmember cref="Overload:System.Xml.Linq.XAttribute.#ctor" />
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="3eab1-155">LINQ to XML</span><span class="sxs-lookup"><span data-stu-id="3eab1-155">LINQ to XML</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsNamespaceDeclaration">
      <MemberSignature Language="C#" Value="public bool IsNamespaceDeclaration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNamespaceDeclaration" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Linq.XAttribute.IsNamespaceDeclaration" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNamespaceDeclaration As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNamespaceDeclaration { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNamespaceDeclaration : bool" Usage="System.Xml.Linq.XAttribute.IsNamespaceDeclaration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3eab1-156">Bestimmt, ob dieses Attribut eine Namespacedeklaration ist.</span><span class="sxs-lookup"><span data-stu-id="3eab1-156">Determines if this attribute is a namespace declaration.</span></span></summary>
        <value><span data-ttu-id="3eab1-157"><see langword="true" />, wenn dieses Attribut eine Namespacedeklaration ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3eab1-157"><see langword="true" /> if this attribute is a namespace declaration; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3eab1-158">Technisch gesehen sind Namespace Deklarationen in XML keine ordnungsgemäßen Attribute.</span><span class="sxs-lookup"><span data-stu-id="3eab1-158">Technically, in XML, namespace declarations are not attributes proper.</span></span> <span data-ttu-id="3eab1-159">Dieser Unterschied wird jedoch normalerweise nicht von den meisten XML-Programmierern getroffen.</span><span class="sxs-lookup"><span data-stu-id="3eab1-159">However, this distinction is not normally made by most XML programmers.</span></span> <span data-ttu-id="3eab1-160">Da Namespace Deklarationen genau dieselbe Syntax wie Attribute aufweisen, stellen die meisten XML-Programmierer Namespaces als Attribute dar.</span><span class="sxs-lookup"><span data-stu-id="3eab1-160">Instead, because namespace declarations have exactly the same syntax as attributes, most XML programmers think of namespaces as attributes.</span></span> <span data-ttu-id="3eab1-161">Zum Vereinfachen der [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] Programmierschnittstelle werden Namespaces in der XML-Struktur als Attribute dargestellt.</span><span class="sxs-lookup"><span data-stu-id="3eab1-161">To simplify the [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] programming interface, namespaces are represented in the XML tree as attributes.</span></span> <span data-ttu-id="3eab1-162">Sie können diese Eigenschaft verwenden, um zu bestimmen, [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] ob ein bestimmtes Attribut wirklich eine Namespace Deklaration ist.</span><span class="sxs-lookup"><span data-stu-id="3eab1-162">You can use this property to determine if a particular [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] attribute is really a namespace declaration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3eab1-163">Im folgenden Beispiel wird ein Attribut erstellt, das eine Namespace Deklaration und ein Attribut ist, das nicht ist.</span><span class="sxs-lookup"><span data-stu-id="3eab1-163">The following example creates an attribute that is a namespace declaration and an attribute that is not.</span></span> <span data-ttu-id="3eab1-164">Anschließend wird diese Eigenschaft verwendet, um anzuzeigen, ob jedes Attribut eine Namespace Deklaration ist.</span><span class="sxs-lookup"><span data-stu-id="3eab1-164">It then uses this property to display whether each attribute is a namespace declaration or not.</span></span>  
  
```csharp  
XNamespace aw = "http://www.adventure-works.com";  
XElement root = new XElement(aw + "Root",  
    new XAttribute(XNamespace.Xmlns + "aw", "http://www.adventure-works.com"),  
    new XAttribute(aw + "Att", "content")  
);  
  
foreach (XAttribute att in root.Attributes()) {  
    if (att.IsNamespaceDeclaration)  
        Console.WriteLine("{0} is a namespace declaration", att.Name);  
    else  
        Console.WriteLine("{0} is not a namespace declaration", att.Name);  
}  
```  
  
```vb  
Dim root As XElement = <aw:Root xmlns:aw='http://www.adventure-works.com'  
                           aw:Att='content'/>  
  
For Each att As XAttribute In root.Attributes()  
    If (att.IsNamespaceDeclaration) Then  
        Console.WriteLine("{0} is a namespace declaration", att.Name)  
    Else  
        Console.WriteLine("{0} is not a namespace declaration", att.Name)  
    End If  
Next  
```  
  
 <span data-ttu-id="3eab1-165">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="3eab1-165">This example produces the following output:</span></span>  
  
```  
{http://www.w3.org/2000/xmlns/}aw is a namespace declaration  
{http://www.adventure-works.com}Att is not a namespace declaration  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Linq.XNamespace" />
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="3eab1-166">LINQ to XML</span><span class="sxs-lookup"><span data-stu-id="3eab1-166">LINQ to XML</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public System.Xml.Linq.XName Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Linq.XName Name" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Linq.XAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As XName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Linq::XName ^ Name { System::Xml::Linq::XName ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : System.Xml.Linq.XName" Usage="System.Xml.Linq.XAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Linq.XName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3eab1-167">Ruft den erweiterten Namen dieses Attributs ab.</span><span class="sxs-lookup"><span data-stu-id="3eab1-167">Gets the expanded name of this attribute.</span></span></summary>
        <value><span data-ttu-id="3eab1-168">Ein <see cref="T:System.Xml.Linq.XName" />, der den Namen dieses Attributs enthält.</span><span class="sxs-lookup"><span data-stu-id="3eab1-168">An <see cref="T:System.Xml.Linq.XName" /> containing the name of this attribute.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3eab1-169">Der von dieser Eigenschaft zurückgegebene erweiterte Name hat das `{namespace}localname`Format.</span><span class="sxs-lookup"><span data-stu-id="3eab1-169">The expanded name returned by this property is in the form of `{namespace}localname`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3eab1-170">Im folgenden Beispiel wird ein-Element mit drei Attributen erstellt.</span><span class="sxs-lookup"><span data-stu-id="3eab1-170">The following example creates an element with three attributes.</span></span> <span data-ttu-id="3eab1-171">Anschließend wird diese Eigenschaft verwendet, um den Namen der einzelnen Attribute auszugeben.</span><span class="sxs-lookup"><span data-stu-id="3eab1-171">It then uses this property to print out the name of each attribute.</span></span> <span data-ttu-id="3eab1-172">Das Beispiel zeigt auch die Erstellung eines neuen Attributs mit dem Namen eines vorhandenen Attributs.</span><span class="sxs-lookup"><span data-stu-id="3eab1-172">The example also shows creation of a new attribute using the name of an existing attribute.</span></span>  
  
```csharp  
XNamespace aw = "http://www.adventure-works.com";  
XElement root = new XElement(aw + "Root",  
    new XAttribute(XNamespace.Xmlns + "aw", "http://www.adventure-works.com"),  
    new XAttribute(aw + "Att", "content"),  
    new XAttribute("Att2", "different content")  
);  
  
foreach (XAttribute att in root.Attributes())  
    Console.WriteLine("{0}={1}", att.Name, att.Value);  
Console.WriteLine("");  
  
XElement newRoot = new XElement(aw + "Root",  
    from att in root.Attributes("Att2")  
    select new XAttribute(att.Name, "new content"));  
  
foreach (XAttribute att in newRoot.Attributes())  
    Console.WriteLine("{0}={1}", att.Name, att.Value);  
```  
  
```vb  
Dim root As XElement = _   
    <aw:Root xmlns:aw='http://www.adventure-works.com'  
        aw:Att='content'  
        Att2='different content'/>  
  
For Each att As XAttribute In root.Attributes()  
    Console.WriteLine("{0}={1}", att.Name, att.Value)  
Next  
Console.WriteLine("")  
  
Dim NewRoot As XElement = _  
<Root  
    <%= _  
        From att In root.Attributes("Att2") _  
        Select New XAttribute(att.Name, "new content") _  
    %>>_  
</Root>  
  
For Each att As XAttribute In NewRoot.Attributes()  
    Console.WriteLine("{0}={1}", att.Name, att.Value)  
Next  
  
```  
  
 <span data-ttu-id="3eab1-173">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="3eab1-173">This example produces the following output:</span></span>  
  
```  
{http://www.w3.org/2000/xmlns/}aw=http://www.adventure-works.com  
{http://www.adventure-works.com}Att=content  
Att2=different content  
  
Att2=new content  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Linq.XName" />
        <altmember cref="P:System.Xml.Linq.XAttribute.Value" />
        <altmember cref="M:System.Xml.Linq.XAttribute.ToString" />
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="3eab1-174">LINQ to XML</span><span class="sxs-lookup"><span data-stu-id="3eab1-174">LINQ to XML</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="NextAttribute">
      <MemberSignature Language="C#" Value="public System.Xml.Linq.XAttribute NextAttribute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Linq.XAttribute NextAttribute" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Linq.XAttribute.NextAttribute" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NextAttribute As XAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Linq::XAttribute ^ NextAttribute { System::Xml::Linq::XAttribute ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NextAttribute : System.Xml.Linq.XAttribute" Usage="System.Xml.Linq.XAttribute.NextAttribute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Linq.XAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3eab1-175">Ruft das nächste Attribut des übergeordneten Elements ab.</span><span class="sxs-lookup"><span data-stu-id="3eab1-175">Gets the next attribute of the parent element.</span></span></summary>
        <value><span data-ttu-id="3eab1-176">Ein <see cref="T:System.Xml.Linq.XAttribute" />, das das nächste Attribut des übergeordneten Elements enthält.</span><span class="sxs-lookup"><span data-stu-id="3eab1-176">An <see cref="T:System.Xml.Linq.XAttribute" /> containing the next attribute of the parent element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3eab1-177">Attribute werden in der XML-Struktur in der Reihenfolge beibehalten, in der Sie dem-Element hinzugefügt wurden.</span><span class="sxs-lookup"><span data-stu-id="3eab1-177">Attributes are maintained in the XML tree in the order that they were added to the element.</span></span> <span data-ttu-id="3eab1-178">Wenn eine Auflistung von Attributen von <xref:System.Xml.Linq.XElement.Attributes%2A>zurückgegeben wird, werden Sie in der Reihenfolge zurückgegeben, in der Sie hinzugefügt wurden, und werden nicht sortiert.</span><span class="sxs-lookup"><span data-stu-id="3eab1-178">When a collection of attributes is returned by <xref:System.Xml.Linq.XElement.Attributes%2A>, they are returned in the order that they were added, and are not sorted.</span></span> <span data-ttu-id="3eab1-179">Wenn Sie das nächste Attribut über diese Eigenschaft anfordern, gibt diese Eigenschaft das Attribut zurück, das nach diesem Attribut hinzugefügt wurde.</span><span class="sxs-lookup"><span data-stu-id="3eab1-179">When you request the next attribute through this property, this property returns the attribute that was added after this attribute.</span></span>  
  
 <span data-ttu-id="3eab1-180">Wenn dieses Attribut nicht über ein übergeordnetes Element verfügt oder wenn kein nächstes Attribut vorhanden ist, gibt diese Eigenschaft `null`zurück.</span><span class="sxs-lookup"><span data-stu-id="3eab1-180">If this attribute does not have a parent, or if there is no next attribute, then this property returns `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3eab1-181">Im folgenden Beispiel wird gezeigt, wie die Attribute eines Elements mithilfe dieser Eigenschaft durchlaufen werden.</span><span class="sxs-lookup"><span data-stu-id="3eab1-181">The following example shows how to iterate through the attributes of an element using this property.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att1", 1),  
    new XAttribute("Att2", 2),  
    new XAttribute("Att3", 3),  
    new XAttribute("Att4", 4)  
);  
  
XAttribute att = root.FirstAttribute;  
do {  
    Console.WriteLine(att);  
}  
while((att = att.NextAttribute) != null);  
```  
  
```vb  
Dim root As XElement = <Root Att1="1" Att2="2" Att3="3" Att4="4"/>  
Dim att As XAttribute = root.FirstAttribute  
Dim val As Boolean = True  
Do  
    Console.WriteLine(att)  
    att = att.NextAttribute  
Loop While (Not (att Is Nothing))  
```  
  
 <span data-ttu-id="3eab1-182">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="3eab1-182">This example produces the following output:</span></span>  
  
```  
Att1="1"  
Att2="2"  
Att3="3"  
Att4="4"  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.Linq.XAttribute.PreviousAttribute" />
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="3eab1-183">LINQ to XML</span><span class="sxs-lookup"><span data-stu-id="3eab1-183">LINQ to XML</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Linq.XAttribute.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NodeType As XmlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNodeType NodeType { System::Xml::XmlNodeType get(); };" />
      <MemberSignature Language="F#" Value="member this.NodeType : System.Xml.XmlNodeType" Usage="System.Xml.Linq.XAttribute.NodeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3eab1-184">Ruft den Knotentyp für diesen Knoten ab.</span><span class="sxs-lookup"><span data-stu-id="3eab1-184">Gets the node type for this node.</span></span></summary>
        <value><span data-ttu-id="3eab1-185">Der Knotentyp.</span><span class="sxs-lookup"><span data-stu-id="3eab1-185">The node type.</span></span> <span data-ttu-id="3eab1-186">Für <see cref="T:System.Xml.Linq.XAttribute" />-Objekte ist dieser Wert <see cref="F:System.Xml.XmlNodeType.Attribute" />.</span><span class="sxs-lookup"><span data-stu-id="3eab1-186">For <see cref="T:System.Xml.Linq.XAttribute" /> objects, this value is <see cref="F:System.Xml.XmlNodeType.Attribute" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3eab1-187">Da alle Klassen, die von <xref:System.Xml.Linq.XObject> abgeleitet werden <xref:System.Xml.Linq.XObject.NodeType%2A> , eine Eigenschaft enthalten, können Sie Code schreiben, der auf Auflistungen <xref:System.Xml.Linq.XObject>der konkreten Unterklasse von angewendet wird.</span><span class="sxs-lookup"><span data-stu-id="3eab1-187">Because all classes that derive from <xref:System.Xml.Linq.XObject> contain a <xref:System.Xml.Linq.XObject.NodeType%2A> property, you can write code that operates on collections of concrete subclass of <xref:System.Xml.Linq.XObject>.</span></span> <span data-ttu-id="3eab1-188">Der Code kann dann auf den Knotentyp der einzelnen Knoten in der Auflistung testen.</span><span class="sxs-lookup"><span data-stu-id="3eab1-188">Your code can then test for the node type of each node in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3eab1-189">Im folgenden Beispiel wird ein-Attribut erstellt, und anschließend wird der Knotentyp mithilfe dieser Eigenschaft angezeigt.</span><span class="sxs-lookup"><span data-stu-id="3eab1-189">The following example creates an attribute, and then displays the node type using this property.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att", "content")  
);  
  
XAttribute att = root.FirstAttribute;  
Console.WriteLine(att.NodeType);  
```  
  
```vb  
Dim root As XElement = <Root Att="content"/>  
Dim att As XAttribute = root.FirstAttribute  
Console.WriteLine(att.NodeType.ToString)  
```  
  
 <span data-ttu-id="3eab1-190">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="3eab1-190">This example produces the following output:</span></span>  
  
```  
  
Attribute  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlNodeType" />
        <altmember cref="T:System.Xml.Linq.XNode" />
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="3eab1-191">LINQ to XML</span><span class="sxs-lookup"><span data-stu-id="3eab1-191">LINQ to XML</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator bool (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Boolean" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator bool(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Xml.Linq.XAttribute -&gt; bool" Usage="System.Xml.Linq.XAttribute.op_Explicit attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute"><span data-ttu-id="3eab1-192">Das <see cref="T:System.Xml.Linq.XAttribute" />, das in <see cref="T:System.Boolean" /> umgewandelt werden soll.</span><span class="sxs-lookup"><span data-stu-id="3eab1-192">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.Boolean" />.</span></span></param>
        <summary><span data-ttu-id="3eab1-193">Wandelt den Wert dieses <see cref="T:System.Xml.Linq.XAttribute" /> in einen <see cref="T:System.Boolean" /> um.</span><span class="sxs-lookup"><span data-stu-id="3eab1-193">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Boolean" />.</span></span></summary>
        <returns><span data-ttu-id="3eab1-194">Ein <see cref="T:System.Boolean" />, das den Inhalt dieses <see cref="T:System.Xml.Linq.XAttribute" /> enthält.</span><span class="sxs-lookup"><span data-stu-id="3eab1-194">A <see cref="T:System.Boolean" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3eab1-195">Beim Konvertieren <xref:System.Boolean> von aus einem Attribut oder Element sind zulässige Werte "0", "1" und eine beliebige Zeichenfolge, die nach dem kürzen und konvertieren in Kleinbuchstaben "true" oder "false" ergibt.</span><span class="sxs-lookup"><span data-stu-id="3eab1-195">When converting to <xref:System.Boolean> from an attribute or element, allowed values are "0", "1", and any string that produces "true" or "false" after trimming and conversion to lower case.</span></span>  
 
## Examples  
 <span data-ttu-id="3eab1-196">Im folgenden Beispiel wird ein Attribut mit einem <xref:System.Boolean> -Wert erstellt und anschließend in <xref:System.Boolean>umgewandelt.</span><span class="sxs-lookup"><span data-stu-id="3eab1-196">The following example creates an attribute with a <xref:System.Boolean> value, then casts it to <xref:System.Boolean>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",   
    new XAttribute("BoolValue", true)  
);  
bool bv = (bool)root.Attribute("BoolValue");  
Console.WriteLine("(bool)BoolValue={0}", bv);  
```  
  
```vb  
Dim root As XElement = <root BoolValue="true"/>  
Dim bv As Boolean = CBool(root.Attribute("BoolValue"))  
Console.WriteLine("(bool)BoolValue={0}", bv)  
```  
  
 <span data-ttu-id="3eab1-197">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="3eab1-197">This example produces the following output:</span></span>  
  
```  
(bool)BoolValue=True  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="3eab1-198">Das Attribut enthält keinen gültigen <see cref="T:System.Boolean" />-Wert.</span><span class="sxs-lookup"><span data-stu-id="3eab1-198">The attribute does not contain a valid <see cref="T:System.Boolean" /> value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3eab1-199">Der <paramref name="attribute" />-Parameter ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3eab1-199">The <paramref name="attribute" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Boolean}" />
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="3eab1-200">LINQ to XML</span><span class="sxs-lookup"><span data-stu-id="3eab1-200">LINQ to XML</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator DateTime (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.DateTime op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTime" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator DateTime(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Xml.Linq.XAttribute -&gt; DateTime" Usage="System.Xml.Linq.XAttribute.op_Explicit attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute"><span data-ttu-id="3eab1-201">Das <see cref="T:System.Xml.Linq.XAttribute" />, das in <see cref="T:System.DateTime" /> umgewandelt werden soll.</span><span class="sxs-lookup"><span data-stu-id="3eab1-201">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.DateTime" />.</span></span></param>
        <summary><span data-ttu-id="3eab1-202">Wandelt den Wert dieses <see cref="T:System.Xml.Linq.XAttribute" /> in einen <see cref="T:System.DateTime" /> um.</span><span class="sxs-lookup"><span data-stu-id="3eab1-202">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="3eab1-203">Ein <see cref="T:System.DateTime" />, das den Inhalt dieses <see cref="T:System.Xml.Linq.XAttribute" /> enthält.</span><span class="sxs-lookup"><span data-stu-id="3eab1-203">A <see cref="T:System.DateTime" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3eab1-204">Der Wert Bereich eines Attributs oder Elements, das Datums-und Uhrzeit Inhalte enthält, ist eng mit den in ISO 8601 beschriebenen Datums-und Uhrzeitangaben verknüpft.</span><span class="sxs-lookup"><span data-stu-id="3eab1-204">The value space of an attribute or element that contains date and time content is closely related to the dates and times described in ISO 8601.</span></span> <span data-ttu-id="3eab1-205">Beim Erstellen eines Attributs oder Elements, das Datums-und Uhrzeit Inhalte enthält, werden die Attribut-oder Element Werte gemäß der W3C-Spezifikation formatiert.</span><span class="sxs-lookup"><span data-stu-id="3eab1-205">When creating an attribute or element that contains date and time content, the attribute or element values are formatted per the W3C specification.</span></span> <span data-ttu-id="3eab1-206">Weitere Informationen finden Sie in der W3C-Spezifikation.</span><span class="sxs-lookup"><span data-stu-id="3eab1-206">See the W3C specification for more details.</span></span>  
  
 <span data-ttu-id="3eab1-207">Das Verhalten ist Lax, wenn eine <xref:System.DateTime> Umwandlung in ein-Attribut oder ein-Element erfolgt.</span><span class="sxs-lookup"><span data-stu-id="3eab1-207">Behavior is lax when casting to a <xref:System.DateTime> from an attribute or element.</span></span> <span data-ttu-id="3eab1-208">Auch wenn der Attribut-oder Elementwert nicht exakt gemäß der W3C-Spezifikation formatiert ist, wird der Wert entsprechend <xref:System.DateTime>in eine konvertiert.</span><span class="sxs-lookup"><span data-stu-id="3eab1-208">Even if the attribute or element value is not formatted exactly per the W3C specification, the value is appropriately converted to a <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="3eab1-209">Dieser Konvertierungs Operator <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> verwendet, um von <xref:System.DateTime>einer zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="3eab1-209">This conversion operator uses <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> to convert from a <xref:System.DateTime>.</span></span>  
 
## Examples  
 <span data-ttu-id="3eab1-210">Im folgenden Beispiel wird ein Attribut mit Datums-und Uhrzeit Inhalt erstellt.</span><span class="sxs-lookup"><span data-stu-id="3eab1-210">The following example creates an attribute with date and time content.</span></span> <span data-ttu-id="3eab1-211">Anschließend wird Sie in <xref:System.DateTime> umgewandelt, um den Wert abzurufen.</span><span class="sxs-lookup"><span data-stu-id="3eab1-211">It then casts it to <xref:System.DateTime> to retrieve the value.</span></span>  
  
```csharp  
// Behavior is strict when formatting an XML element or attribute from a DateTime,  
// but behavior is lax when casting to a DateTime from an element or attribute.  
  
XElement root = new XElement("Root",  
    new XAttribute("Att", new DateTime(2006, 10, 6, 12, 30, 0))  
);  
Console.WriteLine(root);  
  
// casting from a strictly formatted XML attribute  
DateTime dt = (DateTime)root.Attribute("Att");  
Console.WriteLine("dt={0}", dt);  
Console.WriteLine("-----");  
  
// if root is formatted in some different way than the standard ISO 8601, if at all possible,  
// the value is appropriately converted to DateTime  
  
XAttribute dtAtt = new XAttribute("OrderDate", "October 6, 2006");  
Console.WriteLine(dtAtt);  
DateTime orderDate = (DateTime)dtAtt;  
Console.WriteLine("OrderDate={0:d}", orderDate);  
```  
  
```vb  
' Behavior is strict when formatting an XML element or attribute from a DateTime,  
' but behavior is lax when casting to a DateTime from an element or attribute.  
Dim root As XElement = <Root Att=<%= New DateTime(2006, 10, 6, 12, 30, 0) %>/>  
  
Console.WriteLine(root)  
  
' casting from a strictly formatted XML attribute  
Dim dt As DateTime = CType(root.Attribute("Att"), DateTime)  
Console.WriteLine("dt={0}", dt)  
Console.WriteLine("-----")  
  
' if root is formatted in some different way than the standard ISO 8601, if at all possible,  
' the value is appropriately converted to DateTime  
Dim dtAtt As XAttribute = New XAttribute("OrderDate", "October 6, 2006")  
Console.WriteLine(dtAtt)  
Dim orderDate As DateTime = CType(dtAtt, DateTime)  
Console.WriteLine("OrderDate={0:d}", orderDate)  
```  
  
 <span data-ttu-id="3eab1-212">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="3eab1-212">This example produces the following output:</span></span>  
  
```  
<Root Att="2006-10-06T12:30:00" />  
dt=10/6/2006 12:30:00 PM  
-----  
OrderDate="October 6, 2006"  
OrderDate=10/6/2006  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="3eab1-213">Das Attribut enthält keinen gültigen <see cref="T:System.DateTime" />-Wert.</span><span class="sxs-lookup"><span data-stu-id="3eab1-213">The attribute does not contain a valid <see cref="T:System.DateTime" /> value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3eab1-214">Der <paramref name="attribute" />-Parameter ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3eab1-214">The <paramref name="attribute" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTime}" />
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="3eab1-215">LINQ to XML</span><span class="sxs-lookup"><span data-stu-id="3eab1-215">LINQ to XML</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator DateTimeOffset (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.DateTimeOffset op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTimeOffset" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator DateTimeOffset(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Xml.Linq.XAttribute -&gt; DateTimeOffset" Usage="System.Xml.Linq.XAttribute.op_Explicit attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute"><span data-ttu-id="3eab1-216">Das <see cref="T:System.Xml.Linq.XAttribute" />, das in <see cref="T:System.DateTimeOffset" /> umgewandelt werden soll.</span><span class="sxs-lookup"><span data-stu-id="3eab1-216">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.DateTimeOffset" />.</span></span></param>
        <summary><span data-ttu-id="3eab1-217">Wandelt den Wert dieses <see cref="T:System.Xml.Linq.XAttribute" /> in einen <see cref="T:System.DateTimeOffset" /> um.</span><span class="sxs-lookup"><span data-stu-id="3eab1-217">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.DateTimeOffset" />.</span></span></summary>
        <returns><span data-ttu-id="3eab1-218">Ein <see cref="T:System.DateTimeOffset" />, das den Inhalt dieses <see cref="T:System.Xml.Linq.XAttribute" /> enthält.</span><span class="sxs-lookup"><span data-stu-id="3eab1-218">A <see cref="T:System.DateTimeOffset" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3eab1-219">Dieser Konvertierungs Operator verwendet <xref:System.Xml.XmlConvert> die-Klasse, um die Konvertierung durchzuführen.</span><span class="sxs-lookup"><span data-stu-id="3eab1-219">This conversion operator uses the <xref:System.Xml.XmlConvert> class to do the conversion.</span></span>  

## Examples  
 <span data-ttu-id="3eab1-220">Im folgenden Beispiel wird ein Attribut mit Datums-und Uhrzeit Inhalt erstellt.</span><span class="sxs-lookup"><span data-stu-id="3eab1-220">The following example creates an attribute with date and time content.</span></span> <span data-ttu-id="3eab1-221">Anschließend wird Sie in <xref:System.DateTimeOffset> umgewandelt, um den Wert abzurufen.</span><span class="sxs-lookup"><span data-stu-id="3eab1-221">It then casts it to <xref:System.DateTimeOffset> to retrieve the value.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att", new DateTimeOffset(new DateTime(2006, 10, 6, 12, 30, 0)))  
);  
Console.WriteLine(root);  
  
// casting from a strictly formatted XML attribute  
DateTimeOffset dt = (DateTimeOffset)root.Attribute("Att");  
Console.WriteLine("dt={0}", dt);  
```  
  
```vb  
Dim root As XElement = _  
    <Root  
        Att=<%= New DateTimeOffset(New DateTime(2006, 10, 6, 12, 30, 0)) %>/>  
Console.WriteLine(root)  
  
' casting from a strictly formatted XML attribute  
Dim dt As DateTimeOffset = CType(root.Attribute("Att"), DateTimeOffset)  
Console.WriteLine("dt={0}", dt)  
```  
  
 <span data-ttu-id="3eab1-222">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="3eab1-222">This example produces the following output:</span></span>  
  
```  
<Root Att="2006-10-06T12:30:00-07:00" />  
dt=10/6/2006 12:30:00 PM -07:00  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="3eab1-223">Das Attribut enthält keinen gültigen <see cref="T:System.DateTimeOffset" />-Wert.</span><span class="sxs-lookup"><span data-stu-id="3eab1-223">The attribute does not contain a valid <see cref="T:System.DateTimeOffset" /> value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3eab1-224">Der <paramref name="attribute" />-Parameter ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3eab1-224">The <paramref name="attribute" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTimeOffset}" />
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="3eab1-225">LINQ to XML</span><span class="sxs-lookup"><span data-stu-id="3eab1-225">LINQ to XML</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator decimal (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Decimal(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Xml.Linq.XAttribute -&gt; decimal" Usage="System.Xml.Linq.XAttribute.op_Explicit attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute"><span data-ttu-id="3eab1-226">Das <see cref="T:System.Xml.Linq.XAttribute" />, das in <see cref="T:System.Decimal" /> umgewandelt werden soll.</span><span class="sxs-lookup"><span data-stu-id="3eab1-226">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.Decimal" />.</span></span></param>
        <summary><span data-ttu-id="3eab1-227">Wandelt den Wert dieses <see cref="T:System.Xml.Linq.XAttribute" /> in einen <see cref="T:System.Decimal" /> um.</span><span class="sxs-lookup"><span data-stu-id="3eab1-227">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Decimal" />.</span></span></summary>
        <returns><span data-ttu-id="3eab1-228">Ein <see cref="T:System.Decimal" />, das den Inhalt dieses <see cref="T:System.Xml.Linq.XAttribute" /> enthält.</span><span class="sxs-lookup"><span data-stu-id="3eab1-228">A <see cref="T:System.Decimal" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[## Examples  
 <span data-ttu-id="3eab1-229">Im folgenden Beispiel wird ein Attribut mit einem Dezimalwert erstellt.</span><span class="sxs-lookup"><span data-stu-id="3eab1-229">The following example creates an attribute with a decimal value.</span></span> <span data-ttu-id="3eab1-230">Anschließend wird der Wert des-Attributs durch Umwandeln von in <xref:System.Decimal>abgerufen.</span><span class="sxs-lookup"><span data-stu-id="3eab1-230">It then retrieves the value of the attribute by casting to <xref:System.Decimal>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att", "79228162514264337593543950335")  
);  
decimal value = (decimal)root.Attribute("Att");  
Console.WriteLine("value={0}", value);  
```  
  
```vb  
Dim root As XElement = <Root Att="79228162514264337593543950335"/>  
Dim value As Decimal = CDec(root.Attribute("Att"))  
Console.WriteLine("value={0}", value)  
```  
  
 <span data-ttu-id="3eab1-231">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="3eab1-231">This example produces the following output:</span></span>  
  
```  
value=79228162514264337593543950335  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="3eab1-232">Das Attribut enthält keinen gültigen <see cref="T:System.Decimal" />-Wert.</span><span class="sxs-lookup"><span data-stu-id="3eab1-232">The attribute does not contain a valid <see cref="T:System.Decimal" /> value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3eab1-233">Der <paramref name="attribute" />-Parameter ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3eab1-233">The <paramref name="attribute" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Decimal}" />
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="3eab1-234">LINQ to XML</span><span class="sxs-lookup"><span data-stu-id="3eab1-234">LINQ to XML</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator double (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname float64 op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Double" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator double(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Xml.Linq.XAttribute -&gt; double" Usage="System.Xml.Linq.XAttribute.op_Explicit attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute"><span data-ttu-id="3eab1-235">Das <see cref="T:System.Xml.Linq.XAttribute" />, das in <see cref="T:System.Double" /> umgewandelt werden soll.</span><span class="sxs-lookup"><span data-stu-id="3eab1-235">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.Double" />.</span></span></param>
        <summary><span data-ttu-id="3eab1-236">Wandelt den Wert dieses <see cref="T:System.Xml.Linq.XAttribute" /> in einen <see cref="T:System.Double" /> um.</span><span class="sxs-lookup"><span data-stu-id="3eab1-236">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Double" />.</span></span></summary>
        <returns><span data-ttu-id="3eab1-237">Ein <see cref="T:System.Double" />, das den Inhalt dieses <see cref="T:System.Xml.Linq.XAttribute" /> enthält.</span><span class="sxs-lookup"><span data-stu-id="3eab1-237">A <see cref="T:System.Double" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[## Examples  
 <span data-ttu-id="3eab1-238">Im folgenden Beispiel wird ein Attribut mit <xref:System.Double> Inhalt erstellt.</span><span class="sxs-lookup"><span data-stu-id="3eab1-238">The following example creates an attribute with <xref:System.Double> content.</span></span> <span data-ttu-id="3eab1-239">Anschließend wird der Wert durch Umwandeln von in <xref:System.Double>abgerufen.</span><span class="sxs-lookup"><span data-stu-id="3eab1-239">It then retrieves the value by casting to <xref:System.Double>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att", 1.79769313486231e308)  
);  
double value = (double)root.Attribute("Att");  
Console.WriteLine("value={0}", value);  
```  
  
```vb  
Dim root As XElement = <Root Att="1.79769313486231E+308"/>  
Dim value As Double = CDbl(root.Attribute("Att"))  
Console.WriteLine("value={0}", value)  
```  
  
 <span data-ttu-id="3eab1-240">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="3eab1-240">This example produces the following output:</span></span>  
  
```  
value=1.79769313486231E+308  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="3eab1-241">Das Attribut enthält keinen gültigen <see cref="T:System.Double" />-Wert.</span><span class="sxs-lookup"><span data-stu-id="3eab1-241">The attribute does not contain a valid <see cref="T:System.Double" /> value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3eab1-242">Der <paramref name="attribute" />-Parameter ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3eab1-242">The <paramref name="attribute" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Double}" />
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="3eab1-243">LINQ to XML</span><span class="sxs-lookup"><span data-stu-id="3eab1-243">LINQ to XML</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator Guid (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Guid op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Guid" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator Guid(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Xml.Linq.XAttribute -&gt; Guid" Usage="System.Xml.Linq.XAttribute.op_Explicit attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute"><span data-ttu-id="3eab1-244">Das <see cref="T:System.Xml.Linq.XAttribute" />, das in <see cref="T:System.Guid" /> umgewandelt werden soll.</span><span class="sxs-lookup"><span data-stu-id="3eab1-244">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.Guid" />.</span></span></param>
        <summary><span data-ttu-id="3eab1-245">Wandelt den Wert dieses <see cref="T:System.Xml.Linq.XAttribute" /> in einen <see cref="T:System.Guid" /> um.</span><span class="sxs-lookup"><span data-stu-id="3eab1-245">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Guid" />.</span></span></summary>
        <returns><span data-ttu-id="3eab1-246">Ein <see cref="T:System.Guid" />, das den Inhalt dieses <see cref="T:System.Xml.Linq.XAttribute" /> enthält.</span><span class="sxs-lookup"><span data-stu-id="3eab1-246">A <see cref="T:System.Guid" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[## Examples  
 <span data-ttu-id="3eab1-247">Im folgenden Beispiel wird ein Attribut mit einer GUID als Inhalt erstellt.</span><span class="sxs-lookup"><span data-stu-id="3eab1-247">The following example creates an attribute with a GUID as content.</span></span> <span data-ttu-id="3eab1-248">Anschließend wird der Wert durch Umwandeln von in <xref:System.Guid>abgerufen.</span><span class="sxs-lookup"><span data-stu-id="3eab1-248">It then retrieves the value by casting to <xref:System.Guid>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att", new Guid("3c1cc55b-baff-4b7a-9d17-077af3aa5730"))  
);  
Guid value = (Guid)root.Attribute("Att");  
Console.WriteLine("value={0}", value);  
```  
  
```vb  
Dim root As XElement = <Root Att=<%= New Guid("3c1cc55b-baff-4b7a-9d17-077af3aa5730") %>/>  
Dim value As Guid = CType(root.Attribute("Att"), Guid)  
Console.WriteLine("value={0}", value)  
```  
  
 <span data-ttu-id="3eab1-249">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="3eab1-249">This example produces the following output:</span></span>  
  
```  
value=3c1cc55b-baff-4b7a-9d17-077af3aa5730  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="3eab1-250">Das Attribut enthält keinen gültigen <see cref="T:System.Guid" />-Wert.</span><span class="sxs-lookup"><span data-stu-id="3eab1-250">The attribute does not contain a valid <see cref="T:System.Guid" /> value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3eab1-251">Der <paramref name="attribute" />-Parameter ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3eab1-251">The <paramref name="attribute" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Guid}" />
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="3eab1-252">LINQ to XML</span><span class="sxs-lookup"><span data-stu-id="3eab1-252">LINQ to XML</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator int (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int32 op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int32" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator int(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Xml.Linq.XAttribute -&gt; int" Usage="System.Xml.Linq.XAttribute.op_Explicit attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute"><span data-ttu-id="3eab1-253">Das <see cref="T:System.Xml.Linq.XAttribute" />, das in <see cref="T:System.Int32" /> umgewandelt werden soll.</span><span class="sxs-lookup"><span data-stu-id="3eab1-253">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.Int32" />.</span></span></param>
        <summary><span data-ttu-id="3eab1-254">Wandelt den Wert dieses <see cref="T:System.Xml.Linq.XAttribute" /> in einen <see cref="T:System.Int32" /> um.</span><span class="sxs-lookup"><span data-stu-id="3eab1-254">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to an <see cref="T:System.Int32" />.</span></span></summary>
        <returns><span data-ttu-id="3eab1-255">Ein <see cref="T:System.Int32" />, das den Inhalt dieses <see cref="T:System.Xml.Linq.XAttribute" /> enthält.</span><span class="sxs-lookup"><span data-stu-id="3eab1-255">A <see cref="T:System.Int32" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[## Examples  
 <span data-ttu-id="3eab1-256">Im folgenden Beispiel wird ein Attribut mit einer Ganzzahl als Inhalt erstellt.</span><span class="sxs-lookup"><span data-stu-id="3eab1-256">The following example creates an attribute with an integer as content.</span></span> <span data-ttu-id="3eab1-257">Anschließend wird der Wert durch Umwandeln von in <xref:System.Int32>abgerufen.</span><span class="sxs-lookup"><span data-stu-id="3eab1-257">It then retrieves the value by casting to <xref:System.Int32>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att", 2147483647)  
);  
int value = (int)root.Attribute("Att");  
Console.WriteLine("value={0}", value);  
```  
  
```vb  
Dim root As XElement = <Root Att="2147483647"/>  
Dim value As Integer = CInt(root.Attribute("Att"))  
Console.WriteLine("value={0}", value)  
```  
  
 <span data-ttu-id="3eab1-258">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="3eab1-258">This example produces the following output:</span></span>  
  
```  
value=2147483647  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="3eab1-259">Das Attribut enthält keinen gültigen <see cref="T:System.Int32" />-Wert.</span><span class="sxs-lookup"><span data-stu-id="3eab1-259">The attribute does not contain a valid <see cref="T:System.Int32" /> value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3eab1-260">Der <paramref name="attribute" />-Parameter ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3eab1-260">The <paramref name="attribute" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Int32}" />
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="3eab1-261">LINQ to XML</span><span class="sxs-lookup"><span data-stu-id="3eab1-261">LINQ to XML</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator long (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int64 op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int64" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator long(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Xml.Linq.XAttribute -&gt; int64" Usage="System.Xml.Linq.XAttribute.op_Explicit attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute"><span data-ttu-id="3eab1-262">Das <see cref="T:System.Xml.Linq.XAttribute" />, das in <see cref="T:System.Int64" /> umgewandelt werden soll.</span><span class="sxs-lookup"><span data-stu-id="3eab1-262">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.Int64" />.</span></span></param>
        <summary><span data-ttu-id="3eab1-263">Wandelt den Wert dieses <see cref="T:System.Xml.Linq.XAttribute" /> in einen <see cref="T:System.Int64" /> um.</span><span class="sxs-lookup"><span data-stu-id="3eab1-263">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to an <see cref="T:System.Int64" />.</span></span></summary>
        <returns><span data-ttu-id="3eab1-264">Ein <see cref="T:System.Int64" />, das den Inhalt dieses <see cref="T:System.Xml.Linq.XAttribute" /> enthält.</span><span class="sxs-lookup"><span data-stu-id="3eab1-264">A <see cref="T:System.Int64" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[## Examples  
 <span data-ttu-id="3eab1-265">Im folgenden Beispiel wird ein Attribut mit einer langen ganzen Zahl als Inhalt erstellt.</span><span class="sxs-lookup"><span data-stu-id="3eab1-265">The following example creates an attribute with a long integer as content.</span></span> <span data-ttu-id="3eab1-266">Anschließend wird der Wert des-Attributs durch Umwandeln von in <xref:System.Int64>abgerufen.</span><span class="sxs-lookup"><span data-stu-id="3eab1-266">It then retrieves the value of the attribute by casting to <xref:System.Int64>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att", 9223372036854775807)  
);  
long value = (long)root.Attribute("Att");  
Console.WriteLine("value={0}", value);  
```  
  
```vb  
Dim root As XElement = <Root Att="9223372036854775807"/>  
Dim value As Long = CLng(root.Attribute("Att"))  
Console.WriteLine("value={0}", value)  
```  
  
 <span data-ttu-id="3eab1-267">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="3eab1-267">This example produces the following output:</span></span>  
  
```  
value=9223372036854775807  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="3eab1-268">Das Attribut enthält keinen gültigen <see cref="T:System.Int64" />-Wert.</span><span class="sxs-lookup"><span data-stu-id="3eab1-268">The attribute does not contain a valid <see cref="T:System.Int64" /> value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3eab1-269">Der <paramref name="attribute" />-Parameter ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3eab1-269">The <paramref name="attribute" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Int64}" />
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="3eab1-270">LINQ to XML</span><span class="sxs-lookup"><span data-stu-id="3eab1-270">LINQ to XML</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator Nullable&lt;bool&gt; (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Nullable`1&lt;bool&gt; op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Boolean}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator Nullable&lt;bool&gt;(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Xml.Linq.XAttribute -&gt; Nullable&lt;bool&gt;" Usage="System.Xml.Linq.XAttribute.op_Explicit attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute"><span data-ttu-id="3eab1-271">Das <see cref="T:System.Xml.Linq.XAttribute" />, das in ein <see cref="T:System.Nullable`1" /> vom Typ <see cref="T:System.Boolean" /> umgewandelt werden soll.</span><span class="sxs-lookup"><span data-stu-id="3eab1-271">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.Nullable`1" /> of <see cref="T:System.Boolean" />.</span></span></param>
        <summary><span data-ttu-id="3eab1-272">Wandelt den Wert dieses <see cref="T:System.Xml.Linq.XAttribute" /> in ein <see cref="T:System.Nullable`1" /> vom Typ <see cref="T:System.Boolean" /> um.</span><span class="sxs-lookup"><span data-stu-id="3eab1-272">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.Boolean" />.</span></span></summary>
        <returns><span data-ttu-id="3eab1-273">Ein <see cref="T:System.Nullable`1" /> vom Typ <see cref="T:System.Boolean" />, das den Inhalt dieses <see cref="T:System.Xml.Linq.XAttribute" /> enthält.</span><span class="sxs-lookup"><span data-stu-id="3eab1-273">A <see cref="T:System.Nullable`1" /> of <see cref="T:System.Boolean" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3eab1-274">Beim Konvertieren <xref:System.Boolean> von aus einem Attribut oder Element sind zulässige Werte "0", "1" und eine beliebige Zeichenfolge, die nach dem kürzen und konvertieren in Kleinbuchstaben "true" oder "false" ergibt.</span><span class="sxs-lookup"><span data-stu-id="3eab1-274">When converting to <xref:System.Boolean> from an attribute or element, allowed values are "0", "1", and any string that produces "true" or "false" after trimming and conversion to lower case.</span></span>  

## Examples  
 <span data-ttu-id="3eab1-275">Im folgenden Beispiel wird ein Attribut mit booleschem Inhalt erstellt.</span><span class="sxs-lookup"><span data-stu-id="3eab1-275">The following example creates an attribute with Boolean content.</span></span> <span data-ttu-id="3eab1-276">Anschließend wird der Wert durch Umwandeln von in <xref:System.Nullable%601> aus <xref:System.Boolean>abgerufen.</span><span class="sxs-lookup"><span data-stu-id="3eab1-276">It then retrieves the value by casting to <xref:System.Nullable%601> of <xref:System.Boolean>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",   
    new XAttribute("BoolValue1", true),  
    new XAttribute("BoolValue2", false)  
);  
bool? bool1 = (bool?)root.Attribute("BoolValue1");  
bool? bool2 = (bool?)root.Attribute("BoolValue2");  
Console.WriteLine("Nullable boolean: BoolValue1={0}", bool1);  
Console.WriteLine("Nullable boolean: BoolValue2={0}", bool2);  
```  
  
```vb  
Dim root As XElement = <Root BoolValue1="true" BoolValue2="false"/>  
Dim bool1 As Nullable(Of Boolean) = CType(root.Attribute("BoolValue1"), Nullable(Of Boolean))  
Dim bool2 As Nullable(Of Boolean) = CType(root.Attribute("BoolValue2"), Nullable(Of Boolean))  
Console.WriteLine("Nullable boolean: BoolValue1={0}", bool1)  
Console.WriteLine("Nullable boolean: BoolValue2={0}", bool2)  
```  
  
 <span data-ttu-id="3eab1-277">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="3eab1-277">This example produces the following output:</span></span>  
  
```  
Nullable boolean: BoolValue1=True  
Nullable boolean: BoolValue2=False  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="3eab1-278">Das Attribut enthält keinen gültigen <see cref="T:System.Boolean" />-Wert.</span><span class="sxs-lookup"><span data-stu-id="3eab1-278">The attribute does not contain a valid <see cref="T:System.Boolean" /> value.</span></span></exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Boolean" />
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="3eab1-279">LINQ to XML</span><span class="sxs-lookup"><span data-stu-id="3eab1-279">LINQ to XML</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator Nullable&lt;DateTime&gt; (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTime}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As Nullable(Of DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator Nullable&lt;DateTime&gt;(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Xml.Linq.XAttribute -&gt; Nullable&lt;DateTime&gt;" Usage="System.Xml.Linq.XAttribute.op_Explicit attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTime&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute"><span data-ttu-id="3eab1-280">Das <see cref="T:System.Xml.Linq.XAttribute" />, das in ein <see cref="T:System.Nullable`1" /> vom Typ <see cref="T:System.DateTime" /> umgewandelt werden soll.</span><span class="sxs-lookup"><span data-stu-id="3eab1-280">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.DateTime" />.</span></span></param>
        <summary><span data-ttu-id="3eab1-281">Wandelt den Wert dieses <see cref="T:System.Xml.Linq.XAttribute" /> in ein <see cref="T:System.Nullable`1" /> vom Typ <see cref="T:System.DateTime" /> um.</span><span class="sxs-lookup"><span data-stu-id="3eab1-281">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="3eab1-282">Ein <see cref="T:System.Nullable`1" /> vom Typ <see cref="T:System.DateTime" />, das den Inhalt dieses <see cref="T:System.Xml.Linq.XAttribute" /> enthält.</span><span class="sxs-lookup"><span data-stu-id="3eab1-282">A <see cref="T:System.Nullable`1" /> of <see cref="T:System.DateTime" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3eab1-283">Der Wert Bereich eines Attributs oder Elements, das Datums-und Uhrzeit Inhalte enthält, ist eng mit den in ISO 8601 beschriebenen Datums-und Uhrzeitangaben verknüpft.</span><span class="sxs-lookup"><span data-stu-id="3eab1-283">The value space of an attribute or element that contains date and time content is closely related to the dates and times described in ISO 8601.</span></span> <span data-ttu-id="3eab1-284">Beim Erstellen eines Attributs oder Elements, das Datums-und Uhrzeit Inhalte enthält, werden die Attribut-oder Element Werte gemäß der W3C-Spezifikation formatiert.</span><span class="sxs-lookup"><span data-stu-id="3eab1-284">When creating an attribute or element that contains date and time content, the attribute or element values are formatted per the W3C specification.</span></span> <span data-ttu-id="3eab1-285">Weitere Informationen finden Sie in der W3C-Spezifikation.</span><span class="sxs-lookup"><span data-stu-id="3eab1-285">See the W3C specification for more details.</span></span>  
  
 <span data-ttu-id="3eab1-286">Verhalten ist Lax bei der Umwandlung in <xref:System.Nullable%601> einen <xref:System.DateTime> von aus einem Attribut oder Element.</span><span class="sxs-lookup"><span data-stu-id="3eab1-286">Behavior is lax when casting to a <xref:System.Nullable%601> of <xref:System.DateTime> from an attribute or element.</span></span> <span data-ttu-id="3eab1-287">Auch wenn der Attribut-oder Elementwert nicht exakt gemäß der W3C-Spezifikation formatiert ist, wird der Wert Ordnungs <xref:System.Nullable%601> gemäß <xref:System.DateTime>in einen-Wert konvertiert.</span><span class="sxs-lookup"><span data-stu-id="3eab1-287">Even if the attribute or element value is not formatted exactly per the W3C specification, the value is appropriately converted to a <xref:System.Nullable%601> of <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="3eab1-288">Dieser Konvertierungs Operator <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> verwendet, um von <xref:System.DateTime>einer zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="3eab1-288">This conversion operator uses <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> to convert from a <xref:System.DateTime>.</span></span>  
  
## Examples  
 <span data-ttu-id="3eab1-289">Im folgenden Beispiel wird ein Attribut mit einem Datum und einer Uhrzeit als Inhalt erstellt.</span><span class="sxs-lookup"><span data-stu-id="3eab1-289">The following example creates an attribute with a date and time as content.</span></span> <span data-ttu-id="3eab1-290">Anschließend wird der Wert durch Umwandeln von in <xref:System.Nullable%601> aus <xref:System.DateTime>abgerufen.</span><span class="sxs-lookup"><span data-stu-id="3eab1-290">It then retrieves the value by casting to <xref:System.Nullable%601> of <xref:System.DateTime>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att", new DateTime(2006, 10, 6, 12, 30, 0))  
);  
DateTime? value = (DateTime?)root.Attribute("Att");  
Console.WriteLine("Nullable DateTime: value={0}", value == null ? "null" : value.ToString());  
```  
  
```vb  
Dim root As XElement = <Root Att=<%= New DateTime(2006, 10, 6, 12, 30, 0) %>/>  
Dim value As Nullable(Of DateTime) = CType(root.Attribute("Att"), Nullable(Of DateTime))  
Console.WriteLine("Nullable DateTime: value={0}", IIf(value.HasValue, value.ToString(), "null"))  
```  
  
 <span data-ttu-id="3eab1-291">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="3eab1-291">This example produces the following output:</span></span>  
  
```  
Nullable DateTime: value=10/6/2006 12:30:00 PM  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="3eab1-292">Das Attribut enthält keinen gültigen <see cref="T:System.DateTime" />-Wert.</span><span class="sxs-lookup"><span data-stu-id="3eab1-292">The attribute does not contain a valid <see cref="T:System.DateTime" /> value.</span></span></exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTime" />
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="3eab1-293">LINQ to XML</span><span class="sxs-lookup"><span data-stu-id="3eab1-293">LINQ to XML</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator Nullable&lt;DateTimeOffset&gt; (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTimeOffset}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As Nullable(Of DateTimeOffset)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator Nullable&lt;DateTimeOffset&gt;(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Xml.Linq.XAttribute -&gt; Nullable&lt;DateTimeOffset&gt;" Usage="System.Xml.Linq.XAttribute.op_Explicit attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTimeOffset&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute"><span data-ttu-id="3eab1-294">Das <see cref="T:System.Xml.Linq.XAttribute" />, das in ein <see cref="T:System.Nullable`1" /> vom Typ <see cref="T:System.DateTimeOffset" /> umgewandelt werden soll.</span><span class="sxs-lookup"><span data-stu-id="3eab1-294">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.DateTimeOffset" />.</span></span></param>
        <summary><span data-ttu-id="3eab1-295">Wandelt den Wert dieses <see cref="T:System.Xml.Linq.XAttribute" /> in ein <see cref="T:System.Nullable`1" /> vom Typ <see cref="T:System.DateTimeOffset" /> um.</span><span class="sxs-lookup"><span data-stu-id="3eab1-295">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.DateTimeOffset" />.</span></span></summary>
        <returns><span data-ttu-id="3eab1-296">Ein <see cref="T:System.Nullable`1" /> vom Typ <see cref="T:System.DateTimeOffset" />, das den Inhalt dieses <see cref="T:System.Xml.Linq.XAttribute" /> enthält.</span><span class="sxs-lookup"><span data-stu-id="3eab1-296">A <see cref="T:System.Nullable`1" /> of <see cref="T:System.DateTimeOffset" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3eab1-297">Dieser Konvertierungs Operator verwendet <xref:System.Xml.XmlConvert> die-Klasse, um die Konvertierung durchzuführen.</span><span class="sxs-lookup"><span data-stu-id="3eab1-297">This conversion operator uses the <xref:System.Xml.XmlConvert> class to do the conversion.</span></span>  
 
## Examples  
 <span data-ttu-id="3eab1-298">Im folgenden Beispiel wird ein Attribut mit einem Datum und einer Uhrzeit als Inhalt erstellt.</span><span class="sxs-lookup"><span data-stu-id="3eab1-298">The following example creates an attribute with a date and time as content.</span></span> <span data-ttu-id="3eab1-299">Anschließend wird der Wert durch Umwandeln von in <xref:System.Nullable%601> aus <xref:System.DateTimeOffset>abgerufen.</span><span class="sxs-lookup"><span data-stu-id="3eab1-299">It then retrieves the value by casting to <xref:System.Nullable%601> of <xref:System.DateTimeOffset>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att", new DateTimeOffset(new DateTime(2006, 10, 6, 12, 30, 0)))  
);  
DateTimeOffset? value = (DateTimeOffset?)root.Attribute("Att");  
Console.WriteLine("Nullable DateTimeOffset: value={0}", value == null ? "null" : value.ToString());  
```  
  
```vb  
Dim root As XElement = _  
    <Root  
        Att=<%= New DateTimeOffset(New DateTime(2006, 10, 6, 12, 30, 0)) %>/>  
Dim value As Nullable(Of DateTimeOffset) = CType(root.Attribute("Att"), Nullable(Of DateTimeOffset))  
Console.WriteLine("Nullable DateTimeOffset: value={0}", IIf(value.HasValue, value.ToString(), "null"))  
```  
  
 <span data-ttu-id="3eab1-300">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="3eab1-300">This example produces the following output:</span></span>  
  
```  
Nullable DateTimeOffset: value=10/6/2006 12:30:00 PM -07:00  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="3eab1-301">Das Attribut enthält keinen gültigen <see cref="T:System.DateTimeOffset" />-Wert.</span><span class="sxs-lookup"><span data-stu-id="3eab1-301">The attribute does not contain a valid <see cref="T:System.DateTimeOffset" /> value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator Nullable&lt;decimal&gt; (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Decimal}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As Nullable(Of Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator Nullable&lt;System::Decimal&gt;(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Xml.Linq.XAttribute -&gt; Nullable&lt;decimal&gt;" Usage="System.Xml.Linq.XAttribute.op_Explicit attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Decimal&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute"><span data-ttu-id="3eab1-302">Das <see cref="T:System.Xml.Linq.XAttribute" />, das in ein <see cref="T:System.Nullable`1" /> vom Typ <see cref="T:System.Decimal" /> umgewandelt werden soll.</span><span class="sxs-lookup"><span data-stu-id="3eab1-302">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.Nullable`1" /> of <see cref="T:System.Decimal" />.</span></span></param>
        <summary><span data-ttu-id="3eab1-303">Wandelt den Wert dieses <see cref="T:System.Xml.Linq.XAttribute" /> in ein <see cref="T:System.Nullable`1" /> vom Typ <see cref="T:System.Decimal" /> um.</span><span class="sxs-lookup"><span data-stu-id="3eab1-303">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.Decimal" />.</span></span></summary>
        <returns><span data-ttu-id="3eab1-304">Ein <see cref="T:System.Nullable`1" /> vom Typ <see cref="T:System.Decimal" />, das den Inhalt dieses <see cref="T:System.Xml.Linq.XAttribute" /> enthält.</span><span class="sxs-lookup"><span data-stu-id="3eab1-304">A <see cref="T:System.Nullable`1" /> of <see cref="T:System.Decimal" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[## Examples  
 <span data-ttu-id="3eab1-305">Im folgenden Beispiel wird ein Attribut mit Decimal-Inhalt erstellt.</span><span class="sxs-lookup"><span data-stu-id="3eab1-305">The following example creates an attribute with decimal content.</span></span> <span data-ttu-id="3eab1-306">Anschließend wird der Wert durch Umwandeln von in <xref:System.Nullable%601> aus <xref:System.Decimal>abgerufen.</span><span class="sxs-lookup"><span data-stu-id="3eab1-306">It then retrieves the value by casting to <xref:System.Nullable%601> of <xref:System.Decimal>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att", "79228162514264337593543950335")  
);  
decimal? value = (decimal?)root.Attribute("Att");  
Console.WriteLine("Nullable decimal: value={0}", value == null ? "null" : value.ToString());  
```  
  
```vb  
Dim root As XElement = <Root Att="79228162514264337593543950335"/>  
Dim value As Nullable(Of Decimal) = CType(root.Attribute("Att"), Nullable(Of Decimal))  
Console.WriteLine("Nullable decimal: value={0}", IIf(value.HasValue, value.ToString(), "null"))  
```  
  
 <span data-ttu-id="3eab1-307">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="3eab1-307">This example produces the following output:</span></span>  
  
```  
Nullable decimal: value=79228162514264337593543950335  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="3eab1-308">Das Attribut enthält keinen gültigen <see cref="T:System.Decimal" />-Wert.</span><span class="sxs-lookup"><span data-stu-id="3eab1-308">The attribute does not contain a valid <see cref="T:System.Decimal" /> value.</span></span></exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Decimal" />
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="3eab1-309">LINQ to XML</span><span class="sxs-lookup"><span data-stu-id="3eab1-309">LINQ to XML</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator Nullable&lt;double&gt; (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Nullable`1&lt;float64&gt; op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Double}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator Nullable&lt;double&gt;(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Xml.Linq.XAttribute -&gt; Nullable&lt;double&gt;" Usage="System.Xml.Linq.XAttribute.op_Explicit attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute"><span data-ttu-id="3eab1-310">Das <see cref="T:System.Xml.Linq.XAttribute" />, das in ein <see cref="T:System.Nullable`1" /> vom Typ <see cref="T:System.Double" /> umgewandelt werden soll.</span><span class="sxs-lookup"><span data-stu-id="3eab1-310">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.Nullable`1" /> of <see cref="T:System.Double" />.</span></span></param>
        <summary><span data-ttu-id="3eab1-311">Wandelt den Wert dieses <see cref="T:System.Xml.Linq.XAttribute" /> in ein <see cref="T:System.Nullable`1" /> vom Typ <see cref="T:System.Double" /> um.</span><span class="sxs-lookup"><span data-stu-id="3eab1-311">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.Double" />.</span></span></summary>
        <returns><span data-ttu-id="3eab1-312">Ein <see cref="T:System.Nullable`1" /> vom Typ <see cref="T:System.Double" />, das den Inhalt dieses <see cref="T:System.Xml.Linq.XAttribute" /> enthält.</span><span class="sxs-lookup"><span data-stu-id="3eab1-312">A <see cref="T:System.Nullable`1" /> of <see cref="T:System.Double" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[## Examples  
 <span data-ttu-id="3eab1-313">Im folgenden Beispiel wird ein Attribut mit Gleit Komma Inhalt mit doppelter Genauigkeit erstellt.</span><span class="sxs-lookup"><span data-stu-id="3eab1-313">The following example creates an attribute with double precision floating point content.</span></span> <span data-ttu-id="3eab1-314">Anschließend wird der Wert durch Umwandeln von in <xref:System.Nullable%601> aus <xref:System.Double>abgerufen.</span><span class="sxs-lookup"><span data-stu-id="3eab1-314">It then retrieves the value by casting to <xref:System.Nullable%601> of <xref:System.Double>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att", 1.79769313486231e308)  
);  
double? value = (double?)root.Attribute("Att");  
Console.WriteLine("Nullable double: value={0}", value == null ? "null" : value.ToString());  
```  
  
```vb  
Dim root As XElement = <Root Att="1.79769313486231E+308"/>  
Dim value As Nullable(Of Double) = CType(root.Attribute("Att"), Nullable(Of Double))  
Console.WriteLine("Nullable double: value={0}", IIf(value.HasValue, value.ToString(), "null"))  
```  
  
 <span data-ttu-id="3eab1-315">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="3eab1-315">This example produces the following output:</span></span>  
  
```  
Nullable double: value=1.79769313486231E+308  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="3eab1-316">Das Attribut enthält keinen gültigen <see cref="T:System.Double" />-Wert.</span><span class="sxs-lookup"><span data-stu-id="3eab1-316">The attribute does not contain a valid <see cref="T:System.Double" /> value.</span></span></exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Double" />
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="3eab1-317">LINQ to XML</span><span class="sxs-lookup"><span data-stu-id="3eab1-317">LINQ to XML</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator Nullable&lt;Guid&gt; (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Nullable`1&lt;valuetype System.Guid&gt; op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Guid}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As Nullable(Of Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator Nullable&lt;Guid&gt;(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Xml.Linq.XAttribute -&gt; Nullable&lt;Guid&gt;" Usage="System.Xml.Linq.XAttribute.op_Explicit attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Guid&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute"><span data-ttu-id="3eab1-318">Das <see cref="T:System.Xml.Linq.XAttribute" />, das in ein <see cref="T:System.Nullable`1" /> vom Typ <see cref="T:System.Guid" /> umgewandelt werden soll.</span><span class="sxs-lookup"><span data-stu-id="3eab1-318">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.Guid" />.</span></span></param>
        <summary><span data-ttu-id="3eab1-319">Wandelt den Wert dieses <see cref="T:System.Xml.Linq.XAttribute" /> in ein <see cref="T:System.Nullable`1" /> vom Typ <see cref="T:System.Guid" /> um.</span><span class="sxs-lookup"><span data-stu-id="3eab1-319">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.Guid" />.</span></span></summary>
        <returns><span data-ttu-id="3eab1-320">Ein <see cref="T:System.Nullable`1" /> vom Typ <see cref="T:System.Guid" />, das den Inhalt dieses <see cref="T:System.Xml.Linq.XAttribute" /> enthält.</span><span class="sxs-lookup"><span data-stu-id="3eab1-320">A <see cref="T:System.Nullable`1" /> of <see cref="T:System.Guid" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[## Examples  
 <span data-ttu-id="3eab1-321">Im folgenden Beispiel wird ein Attribut mit dem GUID-Inhalt erstellt.</span><span class="sxs-lookup"><span data-stu-id="3eab1-321">The following example creates an attribute with guid content.</span></span> <span data-ttu-id="3eab1-322">Anschließend wird der Wert durch Umwandeln von in <xref:System.Nullable%601> aus <xref:System.Guid>abgerufen.</span><span class="sxs-lookup"><span data-stu-id="3eab1-322">It then retrieves the value by casting to <xref:System.Nullable%601> of <xref:System.Guid>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att", new Guid("3c1cc55b-baff-4b7a-9d17-077af3aa5730"))  
);  
Guid? value = (Guid?)root.Attribute("Att");  
Console.WriteLine("Nullable Guid: value={0}", value == null ? "null" : value.ToString());  
```  
  
```vb  
Dim root As XElement = <Root Att=<%= New Guid("3c1cc55b-baff-4b7a-9d17-077af3aa5730") %>/>  
Dim value As Nullable(Of Guid) = CType(root.Attribute("Att"), Nullable(Of Guid))  
Console.WriteLine("Nullable Guid: value={0}", IIf(value.HasValue, value.ToString(), "null"))  
```  
  
 <span data-ttu-id="3eab1-323">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="3eab1-323">This example produces the following output:</span></span>  
  
```  
Nullable Guid: value=3c1cc55b-baff-4b7a-9d17-077af3aa5730  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="3eab1-324">Das Attribut enthält keinen gültigen <see cref="T:System.Guid" />-Wert.</span><span class="sxs-lookup"><span data-stu-id="3eab1-324">The attribute does not contain a valid <see cref="T:System.Guid" /> value.</span></span></exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Guid" />
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="3eab1-325">LINQ to XML</span><span class="sxs-lookup"><span data-stu-id="3eab1-325">LINQ to XML</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator Nullable&lt;int&gt; (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Nullable`1&lt;int32&gt; op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Int32}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator Nullable&lt;int&gt;(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Xml.Linq.XAttribute -&gt; Nullable&lt;int&gt;" Usage="System.Xml.Linq.XAttribute.op_Explicit attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute"><span data-ttu-id="3eab1-326">Das <see cref="T:System.Xml.Linq.XAttribute" />, das in ein <see cref="T:System.Nullable`1" /> vom Typ <see cref="T:System.Int32" /> umgewandelt werden soll.</span><span class="sxs-lookup"><span data-stu-id="3eab1-326">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.Int32" />.</span></span></param>
        <summary><span data-ttu-id="3eab1-327">Wandelt den Wert dieses <see cref="T:System.Xml.Linq.XAttribute" /> in ein <see cref="T:System.Nullable`1" /> vom Typ <see cref="T:System.Int32" /> um.</span><span class="sxs-lookup"><span data-stu-id="3eab1-327">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.Int32" />.</span></span></summary>
        <returns><span data-ttu-id="3eab1-328">Ein <see cref="T:System.Nullable`1" /> vom Typ <see cref="T:System.Int32" />, das den Inhalt dieses <see cref="T:System.Xml.Linq.XAttribute" /> enthält.</span><span class="sxs-lookup"><span data-stu-id="3eab1-328">A <see cref="T:System.Nullable`1" /> of <see cref="T:System.Int32" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[## Examples  
 <span data-ttu-id="3eab1-329">Im folgenden Beispiel wird ein Attribut mit ganzzahligen Inhalten erstellt.</span><span class="sxs-lookup"><span data-stu-id="3eab1-329">The following example creates an attribute with integer content.</span></span> <span data-ttu-id="3eab1-330">Anschließend wird der Wert durch Umwandeln von in <xref:System.Nullable%601> aus <xref:System.Int32>abgerufen.</span><span class="sxs-lookup"><span data-stu-id="3eab1-330">It then retrieves the value by casting to <xref:System.Nullable%601> of <xref:System.Int32>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",   
    new XAttribute("Att", 2147483647)  
);  
int? value = (int?)root.Attribute("Att");  
Console.WriteLine("Nullable int: value={0}", value == null ? "null" : value.ToString());  
```  
  
```vb  
Dim root As XElement = <Root Att="2147483647"/>  
Dim value As Nullable(Of Integer) = CType(root.Attribute("Att"), Nullable(Of Integer))  
Console.WriteLine("Nullable int: value={0}", IIf(value.HasValue, value.ToString(), "null"))  
```  
  
 <span data-ttu-id="3eab1-331">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="3eab1-331">This example produces the following output:</span></span>  
  
```  
Nullable int: value=2147483647  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int32" />
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="3eab1-332">LINQ to XML</span><span class="sxs-lookup"><span data-stu-id="3eab1-332">LINQ to XML</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator Nullable&lt;long&gt; (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Nullable`1&lt;int64&gt; op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Int64}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As Nullable(Of Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator Nullable&lt;long&gt;(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Xml.Linq.XAttribute -&gt; Nullable&lt;int64&gt;" Usage="System.Xml.Linq.XAttribute.op_Explicit attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute"><span data-ttu-id="3eab1-333">Das <see cref="T:System.Xml.Linq.XAttribute" />, das in ein <see cref="T:System.Nullable`1" /> vom Typ <see cref="T:System.Int64" /> umgewandelt werden soll.</span><span class="sxs-lookup"><span data-stu-id="3eab1-333">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.Int64" />.</span></span></param>
        <summary><span data-ttu-id="3eab1-334">Wandelt den Wert dieses <see cref="T:System.Xml.Linq.XAttribute" /> in ein <see cref="T:System.Nullable`1" /> vom Typ <see cref="T:System.Int64" /> um.</span><span class="sxs-lookup"><span data-stu-id="3eab1-334">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.Int64" />.</span></span></summary>
        <returns><span data-ttu-id="3eab1-335">Ein <see cref="T:System.Nullable`1" /> vom Typ <see cref="T:System.Int64" />, das den Inhalt dieses <see cref="T:System.Xml.Linq.XAttribute" /> enthält.</span><span class="sxs-lookup"><span data-stu-id="3eab1-335">A <see cref="T:System.Nullable`1" /> of <see cref="T:System.Int64" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[## Examples  
 <span data-ttu-id="3eab1-336">Im folgenden Beispiel wird ein Attribut mit Long Integer-Inhalt erstellt.</span><span class="sxs-lookup"><span data-stu-id="3eab1-336">The following example creates an attribute with long integer content.</span></span> <span data-ttu-id="3eab1-337">Anschließend wird der Wert durch Umwandeln von in <xref:System.Nullable%601> aus <xref:System.Int64>abgerufen.</span><span class="sxs-lookup"><span data-stu-id="3eab1-337">It then retrieves the value by casting to <xref:System.Nullable%601> of <xref:System.Int64>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",   
    new XAttribute("Att", 9223372036854775807)  
);  
long? value = (long?)root.Attribute("Att");  
Console.WriteLine("Nullable long: value={0}", value == null ? "null" : value.ToString());  
```  
  
```vb  
Dim root As XElement = <Root Att="9223372036854775807"/>  
Dim value As Nullable(Of Long) = CType(root.Attribute("Att"), Nullable(Of Long))  
Console.WriteLine("Nullable long: value={0}", IIf(value.HasValue, value.ToString(), "null"))  
```  
  
 <span data-ttu-id="3eab1-338">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="3eab1-338">This example produces the following output:</span></span>  
  
```  
Nullable long: value=9223372036854775807  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="3eab1-339">Das Attribut enthält keinen gültigen <see cref="T:System.Int64" />-Wert.</span><span class="sxs-lookup"><span data-stu-id="3eab1-339">The attribute does not contain a valid <see cref="T:System.Int64" /> value.</span></span></exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int64" />
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="3eab1-340">LINQ to XML</span><span class="sxs-lookup"><span data-stu-id="3eab1-340">LINQ to XML</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator Nullable&lt;float&gt; (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Nullable`1&lt;float32&gt; op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Single}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As Nullable(Of Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator Nullable&lt;float&gt;(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Xml.Linq.XAttribute -&gt; Nullable&lt;single&gt;" Usage="System.Xml.Linq.XAttribute.op_Explicit attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute"><span data-ttu-id="3eab1-341">Das <see cref="T:System.Xml.Linq.XAttribute" />, das in ein <see cref="T:System.Nullable`1" /> vom Typ <see cref="T:System.Single" /> umgewandelt werden soll.</span><span class="sxs-lookup"><span data-stu-id="3eab1-341">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.Nullable`1" /> of <see cref="T:System.Single" />.</span></span></param>
        <summary><span data-ttu-id="3eab1-342">Wandelt den Wert dieses <see cref="T:System.Xml.Linq.XAttribute" /> in ein <see cref="T:System.Nullable`1" /> vom Typ <see cref="T:System.Single" /> um.</span><span class="sxs-lookup"><span data-stu-id="3eab1-342">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.Single" />.</span></span></summary>
        <returns><span data-ttu-id="3eab1-343">Ein <see cref="T:System.Nullable`1" /> vom Typ <see cref="T:System.Single" />, das den Inhalt dieses <see cref="T:System.Xml.Linq.XAttribute" /> enthält.</span><span class="sxs-lookup"><span data-stu-id="3eab1-343">A <see cref="T:System.Nullable`1" /> of <see cref="T:System.Single" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[## Examples  
 <span data-ttu-id="3eab1-344">Im folgenden Beispiel wird ein Attribut mit einem Gleit Komma Inhalt mit einfacher Genauigkeit erstellt.</span><span class="sxs-lookup"><span data-stu-id="3eab1-344">The following example creates an attribute with single precision floating point content.</span></span> <span data-ttu-id="3eab1-345">Anschließend wird der Wert durch Umwandeln von in <xref:System.Nullable%601> aus <xref:System.Single>abgerufen.</span><span class="sxs-lookup"><span data-stu-id="3eab1-345">It then retrieves the value by casting to <xref:System.Nullable%601> of <xref:System.Single>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",   
    new XAttribute("Att", 3.402823e38)  
);  
float? value = (float?)root.Attribute("Att");  
Console.WriteLine("Nullable Single: value={0}", value == null ? "null" : value.ToString());  
```  
  
```vb  
Dim root As XElement = <Root Att="3.402823E+38"/>  
Dim value As Nullable(Of Single) = CType(root.Attribute("Att"), Nullable(Of Single))  
Console.WriteLine("Nullable Single: value={0}", IIf(value.HasValue, value.ToString(), "null"))  
```  
  
 <span data-ttu-id="3eab1-346">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="3eab1-346">This example produces the following output:</span></span>  
  
```  
Nullable Single: value=3.402823E+38  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="3eab1-347">Das Attribut enthält keinen gültigen <see cref="T:System.Single" />-Wert.</span><span class="sxs-lookup"><span data-stu-id="3eab1-347">The attribute does not contain a valid <see cref="T:System.Single" /> value.</span></span></exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Single" />
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="3eab1-348">LINQ to XML</span><span class="sxs-lookup"><span data-stu-id="3eab1-348">LINQ to XML</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator Nullable&lt;TimeSpan&gt; (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.TimeSpan}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As Nullable(Of TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator Nullable&lt;TimeSpan&gt;(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Xml.Linq.XAttribute -&gt; Nullable&lt;TimeSpan&gt;" Usage="System.Xml.Linq.XAttribute.op_Explicit attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute"><span data-ttu-id="3eab1-349">Das <see cref="T:System.Xml.Linq.XAttribute" />, das in ein <see cref="T:System.Nullable`1" /> vom Typ <see cref="T:System.TimeSpan" /> umgewandelt werden soll.</span><span class="sxs-lookup"><span data-stu-id="3eab1-349">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.TimeSpan" />.</span></span></param>
        <summary><span data-ttu-id="3eab1-350">Wandelt den Wert dieses <see cref="T:System.Xml.Linq.XAttribute" /> in ein <see cref="T:System.Nullable`1" /> vom Typ <see cref="T:System.TimeSpan" /> um.</span><span class="sxs-lookup"><span data-stu-id="3eab1-350">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.TimeSpan" />.</span></span></summary>
        <returns><span data-ttu-id="3eab1-351">Ein <see cref="T:System.Nullable`1" /> vom Typ <see cref="T:System.TimeSpan" />, das den Inhalt dieses <see cref="T:System.Xml.Linq.XAttribute" /> enthält.</span><span class="sxs-lookup"><span data-stu-id="3eab1-351">A <see cref="T:System.Nullable`1" /> of <see cref="T:System.TimeSpan" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3eab1-352">Der Wert Bereich eines Attributs oder Elements, das Zeitspannen Inhalte enthält, ist eng mit dem Dauer Inhalt verknüpft, wie in ISO 8601 beschrieben.</span><span class="sxs-lookup"><span data-stu-id="3eab1-352">The value space of an attribute or element that contains time span content is closely related to duration content as described in ISO 8601.</span></span> <span data-ttu-id="3eab1-353">Beim Erstellen eines Attributs oder Elements, das Zeitspannen Inhalte enthält, werden die Attribut-oder Element Werte gemäß der W3C-Spezifikation formatiert.</span><span class="sxs-lookup"><span data-stu-id="3eab1-353">When creating an attribute or element that contains time span content, the attribute or element values are formatted per the W3C specification.</span></span> <span data-ttu-id="3eab1-354">Weitere Informationen finden Sie in der W3C-Spezifikation.</span><span class="sxs-lookup"><span data-stu-id="3eab1-354">Please see the W3C specification for more details.</span></span>  
  
 <span data-ttu-id="3eab1-355">Verhalten ist Lax bei der Umwandlung in <xref:System.Nullable%601> einen <xref:System.TimeSpan> von aus einem Attribut oder Element.</span><span class="sxs-lookup"><span data-stu-id="3eab1-355">Behavior is lax when casting to a <xref:System.Nullable%601> of <xref:System.TimeSpan> from an attribute or element.</span></span> <span data-ttu-id="3eab1-356">Auch wenn der Attribut-oder Elementwert nicht exakt gemäß der W3C-Spezifikation formatiert ist, wird der Wert Ordnungs <xref:System.Nullable%601> gemäß <xref:System.TimeSpan>in einen-Wert konvertiert.</span><span class="sxs-lookup"><span data-stu-id="3eab1-356">Even if the attribute or element value is not formatted exactly per the W3C specification, the value is appropriately converted to a <xref:System.Nullable%601> of <xref:System.TimeSpan>.</span></span>  

## Examples  
 <span data-ttu-id="3eab1-357">Im folgenden Beispiel wird ein Attribut mit Zeitspannen Inhalt erstellt.</span><span class="sxs-lookup"><span data-stu-id="3eab1-357">The following example creates an attribute with time span content.</span></span> <span data-ttu-id="3eab1-358">Anschließend wird der Wert durch Umwandeln von in <xref:System.Nullable%601> aus <xref:System.TimeSpan>abgerufen.</span><span class="sxs-lookup"><span data-stu-id="3eab1-358">It then retrieves the value by casting to <xref:System.Nullable%601> of <xref:System.TimeSpan>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att", new TimeSpan(1, 5, 30))  
);  
TimeSpan? value = (TimeSpan?)root.Attribute("Att");  
Console.WriteLine("Nullable TimeSpan: value={0}", value == null ? "null" : value.ToString());  
```  
  
```vb  
Dim root As XElement = <Root Att=<%= New TimeSpan(1, 5, 30) %>/>  
Dim value As Nullable(Of TimeSpan) = CType(root.Attribute("Att"), Nullable(Of TimeSpan))  
Console.WriteLine("Nullable TimeSpan: value={0}", IIf(value.HasValue, value.ToString(), "null"))  
```  
  
 <span data-ttu-id="3eab1-359">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="3eab1-359">This example produces the following output:</span></span>  
  
```  
Nullable TimeSpan: value=01:05:30  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="3eab1-360">Das Attribut enthält keinen gültigen <see cref="T:System.TimeSpan" />-Wert.</span><span class="sxs-lookup"><span data-stu-id="3eab1-360">The attribute does not contain a valid <see cref="T:System.TimeSpan" /> value.</span></span></exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.TimeSpan" />
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="3eab1-361">LINQ to XML</span><span class="sxs-lookup"><span data-stu-id="3eab1-361">LINQ to XML</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator Nullable&lt;uint&gt; (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Nullable`1&lt;unsigned int32&gt; op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.UInt32}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As Nullable(Of UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator Nullable&lt;System::UInt32&gt;(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Xml.Linq.XAttribute -&gt; Nullable&lt;uint32&gt;" Usage="System.Xml.Linq.XAttribute.op_Explicit attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute"><span data-ttu-id="3eab1-362">Das <see cref="T:System.Xml.Linq.XAttribute" />, das in ein <see cref="T:System.Nullable`1" /> vom Typ <see cref="T:System.UInt32" /> umgewandelt werden soll.</span><span class="sxs-lookup"><span data-stu-id="3eab1-362">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.UInt32" />.</span></span></param>
        <summary><span data-ttu-id="3eab1-363">Wandelt den Wert dieses <see cref="T:System.Xml.Linq.XAttribute" /> in ein <see cref="T:System.Nullable`1" /> vom Typ <see cref="T:System.UInt32" /> um.</span><span class="sxs-lookup"><span data-stu-id="3eab1-363">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.UInt32" />.</span></span></summary>
        <returns><span data-ttu-id="3eab1-364">Ein <see cref="T:System.Nullable`1" /> vom Typ <see cref="T:System.UInt32" />, das den Inhalt dieses <see cref="T:System.Xml.Linq.XAttribute" /> enthält.</span><span class="sxs-lookup"><span data-stu-id="3eab1-364">A <see cref="T:System.Nullable`1" /> of <see cref="T:System.UInt32" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[## Examples  
 <span data-ttu-id="3eab1-365">Im folgenden Beispiel wird ein Attribut mit einem ganzzahligen Inhalt ohne Vorzeichen erstellt.</span><span class="sxs-lookup"><span data-stu-id="3eab1-365">The following example creates an attribute with unsigned integer content.</span></span> <span data-ttu-id="3eab1-366">Anschließend wird der Wert durch Umwandeln von in <xref:System.Nullable%601> aus <xref:System.UInt32>abgerufen.</span><span class="sxs-lookup"><span data-stu-id="3eab1-366">It then retrieves the value by casting to <xref:System.Nullable%601> of <xref:System.UInt32>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",   
    new XAttribute("Att", 4294967295)  
);  
uint? value = (uint?)root.Attribute("Att");  
Console.WriteLine("Nullable uint: value={0}", value == null ? "null" : value.ToString());  
```  
  
```vb  
Dim root As XElement = <Root Att="4294967295"/>  
Dim value As Nullable(Of UInteger) = CType(root.Attribute("Att"), Nullable(Of UInteger))  
Console.WriteLine("Nullable uint: value={0}", IIf(value.HasValue, value.ToString(), "null"))  
```  
  
 <span data-ttu-id="3eab1-367">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="3eab1-367">This example produces the following output:</span></span>  
  
```  
Nullable uint: value=4294967295  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="3eab1-368">Das Attribut enthält keinen gültigen <see cref="T:System.UInt32" />-Wert.</span><span class="sxs-lookup"><span data-stu-id="3eab1-368">The attribute does not contain a valid <see cref="T:System.UInt32" /> value.</span></span></exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt32" />
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="3eab1-369">LINQ to XML</span><span class="sxs-lookup"><span data-stu-id="3eab1-369">LINQ to XML</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator Nullable&lt;ulong&gt; (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Nullable`1&lt;unsigned int64&gt; op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.UInt64}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As Nullable(Of ULong)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator Nullable&lt;System::UInt64&gt;(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Xml.Linq.XAttribute -&gt; Nullable&lt;uint64&gt;" Usage="System.Xml.Linq.XAttribute.op_Explicit attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute"><span data-ttu-id="3eab1-370">Das <see cref="T:System.Xml.Linq.XAttribute" />, das in ein <see cref="T:System.Nullable`1" /> vom Typ <see cref="T:System.UInt64" /> umgewandelt werden soll.</span><span class="sxs-lookup"><span data-stu-id="3eab1-370">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.UInt64" />.</span></span></param>
        <summary><span data-ttu-id="3eab1-371">Wandelt den Wert dieses <see cref="T:System.Xml.Linq.XAttribute" /> in ein <see cref="T:System.Nullable`1" /> vom Typ <see cref="T:System.UInt64" /> um.</span><span class="sxs-lookup"><span data-stu-id="3eab1-371">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.UInt64" />.</span></span></summary>
        <returns><span data-ttu-id="3eab1-372">Ein <see cref="T:System.Nullable`1" /> vom Typ <see cref="T:System.UInt64" />, das den Inhalt dieses <see cref="T:System.Xml.Linq.XAttribute" /> enthält.</span><span class="sxs-lookup"><span data-stu-id="3eab1-372">A <see cref="T:System.Nullable`1" /> of <see cref="T:System.UInt64" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[## Examples  
 <span data-ttu-id="3eab1-373">Im folgenden Beispiel wird ein Attribut mit einem unsignierten langen ganzzahligen Inhalt erstellt.</span><span class="sxs-lookup"><span data-stu-id="3eab1-373">The following example creates an attribute with unsigned long integer content.</span></span> <span data-ttu-id="3eab1-374">Anschließend wird der Wert durch Umwandeln von in <xref:System.Nullable%601> aus <xref:System.UInt64>abgerufen.</span><span class="sxs-lookup"><span data-stu-id="3eab1-374">It then retrieves the value by casting to <xref:System.Nullable%601> of <xref:System.UInt64>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",   
    new XAttribute("Att", 9223372036854775807)  
);  
ulong? value = (ulong?)root.Attribute("Att");  
Console.WriteLine("Nullable ulong: value={0}", value == null ? "null" : value.ToString());  
```  
  
```vb  
Dim root As XElement = <Root Att="9223372036854775807"/>  
Dim value As Nullable(Of ULong) = CType(root.Attribute("Att"), Nullable(Of ULong))  
Console.WriteLine("Nullable ulong: value={0}", IIf(value.HasValue, value.ToString(), "null"))  
```  
  
 <span data-ttu-id="3eab1-375">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="3eab1-375">This example produces the following output:</span></span>  
  
```  
Nullable ulong: value=9223372036854775807  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="3eab1-376">Das Attribut enthält keinen gültigen <see cref="T:System.UInt64" />-Wert.</span><span class="sxs-lookup"><span data-stu-id="3eab1-376">The attribute does not contain a valid <see cref="T:System.UInt64" /> value.</span></span></exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt64" />
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="3eab1-377">LINQ to XML</span><span class="sxs-lookup"><span data-stu-id="3eab1-377">LINQ to XML</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator float (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname float32 op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Single" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator float(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Xml.Linq.XAttribute -&gt; single" Usage="System.Xml.Linq.XAttribute.op_Explicit attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute"><span data-ttu-id="3eab1-378">Das <see cref="T:System.Xml.Linq.XAttribute" />, das in <see cref="T:System.Single" /> umgewandelt werden soll.</span><span class="sxs-lookup"><span data-stu-id="3eab1-378">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.Single" />.</span></span></param>
        <summary><span data-ttu-id="3eab1-379">Wandelt den Wert dieses <see cref="T:System.Xml.Linq.XAttribute" /> in einen <see cref="T:System.Single" /> um.</span><span class="sxs-lookup"><span data-stu-id="3eab1-379">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Single" />.</span></span></summary>
        <returns><span data-ttu-id="3eab1-380">Ein <see cref="T:System.Single" />, das den Inhalt dieses <see cref="T:System.Xml.Linq.XAttribute" /> enthält.</span><span class="sxs-lookup"><span data-stu-id="3eab1-380">A <see cref="T:System.Single" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[## Examples  
 <span data-ttu-id="3eab1-381">Im folgenden Beispiel wird ein Attribut mit einem Gleit Komma Inhalt mit einfacher Genauigkeit erstellt.</span><span class="sxs-lookup"><span data-stu-id="3eab1-381">The following example creates an attribute with single precision floating point content.</span></span> <span data-ttu-id="3eab1-382">Anschließend wird der Wert durch Umwandeln von in <xref:System.Single>abgerufen.</span><span class="sxs-lookup"><span data-stu-id="3eab1-382">It then retrieves the value by casting to <xref:System.Single>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att", 3.402823e38)  
);  
float value = (float)root.Attribute("Att");  
Console.WriteLine("value={0}", value);  
```  
  
```vb  
Dim root As XElement = <Root Att="3.402823E+38"/>  
Dim value As Single = CSng(root.Attribute("Att"))  
Console.WriteLine("value={0}", value)  
```  
  
 <span data-ttu-id="3eab1-383">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="3eab1-383">This example produces the following output:</span></span>  
  
```  
value=3.402823E+38  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="3eab1-384">Das Attribut enthält keinen gültigen <see cref="T:System.Single" />-Wert.</span><span class="sxs-lookup"><span data-stu-id="3eab1-384">The attribute does not contain a valid <see cref="T:System.Single" /> value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3eab1-385">Der <paramref name="attribute" />-Parameter ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3eab1-385">The <paramref name="attribute" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Single}" />
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="3eab1-386">LINQ to XML</span><span class="sxs-lookup"><span data-stu-id="3eab1-386">LINQ to XML</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator string (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname string op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.String" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::String ^(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Xml.Linq.XAttribute -&gt; string" Usage="System.Xml.Linq.XAttribute.op_Explicit attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute"><span data-ttu-id="3eab1-387">Das <see cref="T:System.Xml.Linq.XAttribute" />, das in <see cref="T:System.String" /> umgewandelt werden soll.</span><span class="sxs-lookup"><span data-stu-id="3eab1-387">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.String" />.</span></span></param>
        <summary><span data-ttu-id="3eab1-388">Wandelt den Wert dieses <see cref="T:System.Xml.Linq.XAttribute" /> in einen <see cref="T:System.String" /> um.</span><span class="sxs-lookup"><span data-stu-id="3eab1-388">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="3eab1-389">Ein <see cref="T:System.String" />, das den Inhalt dieses <see cref="T:System.Xml.Linq.XAttribute" /> enthält.</span><span class="sxs-lookup"><span data-stu-id="3eab1-389">A <see cref="T:System.String" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[## Examples  
 <span data-ttu-id="3eab1-390">Im folgenden Beispiel wird ein Attribut mit Zeichen folgen Inhalt erstellt.</span><span class="sxs-lookup"><span data-stu-id="3eab1-390">The following example creates an attribute with string content.</span></span> <span data-ttu-id="3eab1-391">Anschließend wird der Wert durch Umwandeln von in <xref:System.String>abgerufen.</span><span class="sxs-lookup"><span data-stu-id="3eab1-391">It then retrieves the value by casting to <xref:System.String>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att", "attribute content")  
);  
XAttribute att = root.Attribute("Att");  
string str = (string)att;  
Console.WriteLine("(string)att={0}", str);  
```  
  
```vb  
Dim root As XElement = <Root Att="attribute content"/>  
Dim att As XAttribute = root.Attribute("Att")  
Dim str As String = CStr(att)  
Console.WriteLine("(string)att={0}", str)  
```  
  
 <span data-ttu-id="3eab1-392">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="3eab1-392">This example produces the following output:</span></span>  
  
```  
(string)att=attribute content  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.Linq.XAttribute.ToString" />
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="3eab1-393">LINQ to XML</span><span class="sxs-lookup"><span data-stu-id="3eab1-393">LINQ to XML</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator TimeSpan (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.TimeSpan op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.TimeSpan" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator TimeSpan(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Xml.Linq.XAttribute -&gt; TimeSpan" Usage="System.Xml.Linq.XAttribute.op_Explicit attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute"><span data-ttu-id="3eab1-394">Das <see cref="T:System.Xml.Linq.XAttribute" />, das in <see cref="T:System.TimeSpan" /> umgewandelt werden soll.</span><span class="sxs-lookup"><span data-stu-id="3eab1-394">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.TimeSpan" />.</span></span></param>
        <summary><span data-ttu-id="3eab1-395">Wandelt den Wert dieses <see cref="T:System.Xml.Linq.XAttribute" /> in einen <see cref="T:System.TimeSpan" /> um.</span><span class="sxs-lookup"><span data-stu-id="3eab1-395">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.TimeSpan" />.</span></span></summary>
        <returns><span data-ttu-id="3eab1-396">Ein <see cref="T:System.TimeSpan" />, das den Inhalt dieses <see cref="T:System.Xml.Linq.XAttribute" /> enthält.</span><span class="sxs-lookup"><span data-stu-id="3eab1-396">A <see cref="T:System.TimeSpan" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3eab1-397">Der Wert Bereich eines Attributs oder Elements, das Zeitspannen Inhalte enthält, ist eng mit dem Dauer Inhalt verknüpft, wie in ISO 8601 beschrieben.</span><span class="sxs-lookup"><span data-stu-id="3eab1-397">The value space of an attribute or element that contains time span content is closely related to duration content as described in ISO 8601.</span></span> <span data-ttu-id="3eab1-398">Beim Erstellen eines Attributs oder Elements, das Zeitspannen Inhalte enthält, werden die Attribut-oder Element Werte gemäß der W3C-Spezifikation formatiert.</span><span class="sxs-lookup"><span data-stu-id="3eab1-398">When creating an attribute or element that contains time span content, the attribute or element values are formatted per the W3C specification.</span></span> <span data-ttu-id="3eab1-399">Weitere Informationen finden Sie in der W3C-Spezifikation.</span><span class="sxs-lookup"><span data-stu-id="3eab1-399">Please see the W3C specification for more details.</span></span>  
  
 <span data-ttu-id="3eab1-400">Das Verhalten ist Lax, wenn eine <xref:System.TimeSpan> Umwandlung in ein-Attribut oder ein-Element erfolgt.</span><span class="sxs-lookup"><span data-stu-id="3eab1-400">Behavior is lax when casting to a <xref:System.TimeSpan> from an attribute or element.</span></span> <span data-ttu-id="3eab1-401">Auch wenn der Attribut-oder Elementwert nicht exakt gemäß der W3C-Spezifikation formatiert ist, wird der Wert entsprechend <xref:System.TimeSpan>in eine konvertiert.</span><span class="sxs-lookup"><span data-stu-id="3eab1-401">Even if the attribute or element value is not formatted exactly per the W3C specification, the value is appropriately converted to a <xref:System.TimeSpan>.</span></span>  

## Examples  
 <span data-ttu-id="3eab1-402">Im folgenden Beispiel wird ein Attribut mit Zeitspannen Inhalt erstellt.</span><span class="sxs-lookup"><span data-stu-id="3eab1-402">The following example creates an attribute with time span content.</span></span> <span data-ttu-id="3eab1-403">Anschließend wird der Wert durch Umwandeln von in <xref:System.TimeSpan>abgerufen.</span><span class="sxs-lookup"><span data-stu-id="3eab1-403">It then retrieves the value by casting to <xref:System.TimeSpan>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att", new TimeSpan(1, 5, 30))  
);  
TimeSpan value = (TimeSpan)root.Attribute("Att");  
Console.WriteLine("value={0}", value);  
```  
  
```vb  
Dim root As XElement = <Root Att=<%= New TimeSpan(1, 5, 30) %>/>  
Dim value As TimeSpan = CType(root.Attribute("Att"), TimeSpan)  
Console.WriteLine("value={0}", value)  
```  
  
 <span data-ttu-id="3eab1-404">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="3eab1-404">This example produces the following output:</span></span>  
  
```  
value=01:05:30  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="3eab1-405">Das Attribut enthält keinen gültigen <see cref="T:System.TimeSpan" />-Wert.</span><span class="sxs-lookup"><span data-stu-id="3eab1-405">The attribute does not contain a valid <see cref="T:System.TimeSpan" /> value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3eab1-406">Der <paramref name="attribute" />-Parameter ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3eab1-406">The <paramref name="attribute" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.TimeSpan}" />
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="3eab1-407">LINQ to XML</span><span class="sxs-lookup"><span data-stu-id="3eab1-407">LINQ to XML</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator uint (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int32 op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt32" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::UInt32(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Xml.Linq.XAttribute -&gt; uint32" Usage="System.Xml.Linq.XAttribute.op_Explicit attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute"><span data-ttu-id="3eab1-408">Das <see cref="T:System.Xml.Linq.XAttribute" />, das in <see cref="T:System.UInt32" /> umgewandelt werden soll.</span><span class="sxs-lookup"><span data-stu-id="3eab1-408">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.UInt32" />.</span></span></param>
        <summary><span data-ttu-id="3eab1-409">Wandelt den Wert dieses <see cref="T:System.Xml.Linq.XAttribute" /> in einen <see cref="T:System.UInt32" /> um.</span><span class="sxs-lookup"><span data-stu-id="3eab1-409">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.UInt32" />.</span></span></summary>
        <returns><span data-ttu-id="3eab1-410">Ein <see cref="T:System.UInt32" />, das den Inhalt dieses <see cref="T:System.Xml.Linq.XAttribute" /> enthält.</span><span class="sxs-lookup"><span data-stu-id="3eab1-410">A <see cref="T:System.UInt32" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[## Examples  
 <span data-ttu-id="3eab1-411">Im folgenden Beispiel wird ein Attribut mit einem ganzzahligen Inhalt ohne Vorzeichen erstellt.</span><span class="sxs-lookup"><span data-stu-id="3eab1-411">The following example creates an attribute with unsigned integer content.</span></span> <span data-ttu-id="3eab1-412">Anschließend wird der Wert durch Umwandeln von in <xref:System.UInt32>abgerufen.</span><span class="sxs-lookup"><span data-stu-id="3eab1-412">It then retrieves the value by casting to <xref:System.UInt32>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",   
    new XAttribute("Att", 4294967295)  
);  
uint value = (uint)root.Attribute("Att");  
Console.WriteLine("value={0}", value);  
```  
  
```vb  
Dim root As XElement = <Root Att="4294967295"/>  
Dim value As UInteger = CUInt(root.Attribute("Att"))  
Console.WriteLine("value={0}", value)  
```  
  
 <span data-ttu-id="3eab1-413">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="3eab1-413">This example produces the following output:</span></span>  
  
```  
value=4294967295  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="3eab1-414">Das Attribut enthält keinen gültigen <see cref="T:System.UInt32" />-Wert.</span><span class="sxs-lookup"><span data-stu-id="3eab1-414">The attribute does not contain a valid <see cref="T:System.UInt32" /> value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3eab1-415">Der <paramref name="attribute" />-Parameter ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3eab1-415">The <paramref name="attribute" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.UInt32}" />
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="3eab1-416">LINQ to XML</span><span class="sxs-lookup"><span data-stu-id="3eab1-416">LINQ to XML</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator ulong (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int64 op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt64" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::UInt64(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Xml.Linq.XAttribute -&gt; uint64" Usage="System.Xml.Linq.XAttribute.op_Explicit attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute"><span data-ttu-id="3eab1-417">Das <see cref="T:System.Xml.Linq.XAttribute" />, das in <see cref="T:System.UInt64" /> umgewandelt werden soll.</span><span class="sxs-lookup"><span data-stu-id="3eab1-417">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.UInt64" />.</span></span></param>
        <summary><span data-ttu-id="3eab1-418">Wandelt den Wert dieses <see cref="T:System.Xml.Linq.XAttribute" /> in einen <see cref="T:System.UInt64" /> um.</span><span class="sxs-lookup"><span data-stu-id="3eab1-418">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.UInt64" />.</span></span></summary>
        <returns><span data-ttu-id="3eab1-419">Ein <see cref="T:System.UInt64" />, das den Inhalt dieses <see cref="T:System.Xml.Linq.XAttribute" /> enthält.</span><span class="sxs-lookup"><span data-stu-id="3eab1-419">A <see cref="T:System.UInt64" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[## Examples  
 <span data-ttu-id="3eab1-420">Im folgenden Beispiel wird ein Attribut mit einem unsignierten langen ganzzahligen Inhalt erstellt.</span><span class="sxs-lookup"><span data-stu-id="3eab1-420">The following example creates an attribute with unsigned long integer content.</span></span> <span data-ttu-id="3eab1-421">Anschließend wird der Wert durch Umwandeln von in <xref:System.UInt64>abgerufen.</span><span class="sxs-lookup"><span data-stu-id="3eab1-421">It then retrieves the value by casting to <xref:System.UInt64>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att", 1844674407370955161)  
);  
ulong value = (ulong)root.Attribute("Att");  
Console.WriteLine("value={0}", value);  
```  
  
```vb  
Dim root As XElement = <Root Att="1844674407370955161"/>  
Dim value As ULong = CULng(root.Attribute("Att"))  
Console.WriteLine("value={0}", value)  
```  
  
 <span data-ttu-id="3eab1-422">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="3eab1-422">This example produces the following output:</span></span>  
  
```  
value=1844674407370955161  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="3eab1-423">Das Attribut enthält keinen gültigen <see cref="T:System.UInt64" />-Wert.</span><span class="sxs-lookup"><span data-stu-id="3eab1-423">The attribute does not contain a valid <see cref="T:System.UInt64" /> value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3eab1-424">Der <paramref name="attribute" />-Parameter ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3eab1-424">The <paramref name="attribute" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.UInt64}" />
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="3eab1-425">LINQ to XML</span><span class="sxs-lookup"><span data-stu-id="3eab1-425">LINQ to XML</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="PreviousAttribute">
      <MemberSignature Language="C#" Value="public System.Xml.Linq.XAttribute PreviousAttribute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Linq.XAttribute PreviousAttribute" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Linq.XAttribute.PreviousAttribute" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreviousAttribute As XAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Linq::XAttribute ^ PreviousAttribute { System::Xml::Linq::XAttribute ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreviousAttribute : System.Xml.Linq.XAttribute" Usage="System.Xml.Linq.XAttribute.PreviousAttribute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Linq.XAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3eab1-426">Ruft das vorherige Attribut des übergeordneten Elements ab.</span><span class="sxs-lookup"><span data-stu-id="3eab1-426">Gets the previous attribute of the parent element.</span></span></summary>
        <value><span data-ttu-id="3eab1-427">Ein <see cref="T:System.Xml.Linq.XAttribute" />, das das vorherige Attribut des übergeordneten Elements enthält.</span><span class="sxs-lookup"><span data-stu-id="3eab1-427">An <see cref="T:System.Xml.Linq.XAttribute" /> containing the previous attribute of the parent element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3eab1-428">Attribute werden in der XML-Struktur in der Reihenfolge beibehalten, in der Sie dem-Element hinzugefügt wurden.</span><span class="sxs-lookup"><span data-stu-id="3eab1-428">Attributes are maintained in the XML tree in the order that they were added to the element.</span></span> <span data-ttu-id="3eab1-429">Wenn eine Auflistung von Attributen von <xref:System.Xml.Linq.XElement.Attributes%2A>zurückgegeben wird, werden Sie in der Reihenfolge zurückgegeben, in der Sie hinzugefügt wurden, und werden nicht sortiert.</span><span class="sxs-lookup"><span data-stu-id="3eab1-429">When a collection of attributes is returned by <xref:System.Xml.Linq.XElement.Attributes%2A>, they are returned in the order that they were added, and are not sorted.</span></span> <span data-ttu-id="3eab1-430">Wenn Sie das vorherige Attribut über diese Eigenschaft anfordern, gibt diese Eigenschaft das Attribut zurück, das vor diesem Attribut hinzugefügt wurde.</span><span class="sxs-lookup"><span data-stu-id="3eab1-430">When you request the previous attribute through this property, this property returns the attribute that was added before this attribute.</span></span>  
  
 <span data-ttu-id="3eab1-431">Wenn dieses Attribut nicht über ein übergeordnetes Element verfügt oder wenn dieses Attribut das erste Attribut ist, gibt diese Eigenschaft `null`zurück.</span><span class="sxs-lookup"><span data-stu-id="3eab1-431">If this attribute does not have a parent, or if this attribute is the first attribute, then this property returns `null`.</span></span>  
  
 <span data-ttu-id="3eab1-432">Die <xref:System.Xml.Linq.XElement> -Klasse speichert ihre Attribute als einzeln verknüpfte Liste von <xref:System.Xml.Linq.XAttribute> -Objekten.</span><span class="sxs-lookup"><span data-stu-id="3eab1-432">The <xref:System.Xml.Linq.XElement> class stores its attributes as a singly-linked list of <xref:System.Xml.Linq.XAttribute> objects.</span></span> <span data-ttu-id="3eab1-433">Dies bedeutet, dass <xref:System.Xml.Linq.XAttribute.PreviousAttribute%2A> die-Eigenschaft die Liste der Attribute durchlaufen muss, die zum-Element gehören.</span><span class="sxs-lookup"><span data-stu-id="3eab1-433">This means that the <xref:System.Xml.Linq.XAttribute.PreviousAttribute%2A> property must traverse the list of attributes that belong to the element.</span></span> <span data-ttu-id="3eab1-434">Daher kann sich die Verwendung dieser Eigenschaft auf die Leistung auswirken.</span><span class="sxs-lookup"><span data-stu-id="3eab1-434">Therefore, using this property might affect your performance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3eab1-435">Im folgenden Beispiel wird gezeigt, wie die Attribute eines Elements mithilfe dieser Eigenschaft durchlaufen werden.</span><span class="sxs-lookup"><span data-stu-id="3eab1-435">The following example shows how to iterate through the attributes of an element using this property.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att1", 1),  
    new XAttribute("Att2", 2),  
    new XAttribute("Att3", 3),  
    new XAttribute("Att4", 4)  
);  
XAttribute att = root.LastAttribute;  
do {  
    Console.WriteLine(att);  
}  
while((att = att.PreviousAttribute) != null);  
```  
  
```vb  
Dim root As XElement = <Root Att1="1" Att2="2" Att3="3" Att4="4"/>  
Dim att As XAttribute = root.LastAttribute  
Dim val As Boolean = True  
Do  
    Console.WriteLine(att)  
    att = att.PreviousAttribute  
Loop While (Not (att Is Nothing))  
```  
  
 <span data-ttu-id="3eab1-436">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="3eab1-436">This example produces the following output:</span></span>  
  
```  
Att4="4"  
Att3="3"  
Att2="2"  
Att1="1"  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.Linq.XAttribute.NextAttribute" />
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="3eab1-437">LINQ to XML</span><span class="sxs-lookup"><span data-stu-id="3eab1-437">LINQ to XML</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.Remove" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove();" />
      <MemberSignature Language="F#" Value="member this.Remove : unit -&gt; unit" Usage="xAttribute.Remove " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3eab1-438">Entfernt dieses Attribut aus seinem übergeordneten Element.</span><span class="sxs-lookup"><span data-stu-id="3eab1-438">Removes this attribute from its parent element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3eab1-439">Mit dieser Methode können Sie eine XML-Struktur ändern.</span><span class="sxs-lookup"><span data-stu-id="3eab1-439">You can use this method to modify an XML tree.</span></span> <span data-ttu-id="3eab1-440">Diese Methode führt zu Ereignissen.</span><span class="sxs-lookup"><span data-stu-id="3eab1-440">This method will cause events to occur.</span></span>  
  
 <span data-ttu-id="3eab1-441">Es gibt viele Szenarien, in denen Sie möglicherweise einen Satz von Attributen entfernen möchten.</span><span class="sxs-lookup"><span data-stu-id="3eab1-441">There are many scenarios in which you might want to remove a set of attributes.</span></span> <span data-ttu-id="3eab1-442">Beim [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] programmieren sollten Sie eine Gruppe von Knoten nicht bearbeiten oder ändern, während Sie die Knoten in dieser Gruppe Abfragen.</span><span class="sxs-lookup"><span data-stu-id="3eab1-442">In [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] programming, you should not manipulate or modify a set of nodes while you are querying for nodes in that set.</span></span> <span data-ttu-id="3eab1-443">In praktischer Hinsicht bedeutet dies, dass Sie eine Gruppe von Attributen nicht durchlaufen und Sie entfernen sollten.</span><span class="sxs-lookup"><span data-stu-id="3eab1-443">In practical terms, this means that you should not iterate over a set of attributes and remove them.</span></span> <span data-ttu-id="3eab1-444">Stattdessen sollten Sie diese mithilfe der <xref:System.Collections.Generic.List%601> <xref:System.Linq.Enumerable.ToList%2A> -Erweiterungsmethode in einen materialisieren.</span><span class="sxs-lookup"><span data-stu-id="3eab1-444">Instead, you should materialize them into a <xref:System.Collections.Generic.List%601> using the <xref:System.Linq.Enumerable.ToList%2A> extension method.</span></span> <span data-ttu-id="3eab1-445">Anschließend können Sie die Liste durchlaufen und die Attribute entfernen.</span><span class="sxs-lookup"><span data-stu-id="3eab1-445">Then you can iterate over the list, removing the attributes.</span></span> <span data-ttu-id="3eab1-446">Weitere Informationen finden Sie unter [Fehler mit gemischtem deklarativem Code/imperativem Code (LINQ to XML)](https://msdn.microsoft.com/library/d9a5c404-2b0e-46cd-a358-0e78773b3094).</span><span class="sxs-lookup"><span data-stu-id="3eab1-446">For more information, see [Mixed Declarative Code/Imperative Code Bugs (LINQ to XML)](https://msdn.microsoft.com/library/d9a5c404-2b0e-46cd-a358-0e78773b3094).</span></span>  
  
 <span data-ttu-id="3eab1-447">Wenn Sie einen Satz von Attributen entfernen möchten, empfiehlt es sich, die <xref:System.Xml.Linq.Extensions.Remove%2A?displayProperty=nameWithType> -Methode zu verwenden.</span><span class="sxs-lookup"><span data-stu-id="3eab1-447">Alternatively, if you want to remove a set of attributes, it is recommended that you use the <xref:System.Xml.Linq.Extensions.Remove%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="3eab1-448">Diese Methode kopiert die Attribute in eine Liste, durchläuft dann die Liste, wobei die Attribute entfernt werden.</span><span class="sxs-lookup"><span data-stu-id="3eab1-448">This method copies the attributes to a list, then iterates over the list, removing the attributes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3eab1-449">Im folgenden Beispiel wird ein-Element mit drei Attributen erstellt.</span><span class="sxs-lookup"><span data-stu-id="3eab1-449">The following example creates an element with three attributes.</span></span> <span data-ttu-id="3eab1-450">Anschließend wird eines der Attribute entfernt.</span><span class="sxs-lookup"><span data-stu-id="3eab1-450">It then removes one of the attributes.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att1", "content1"),  
    new XAttribute("Att2", "content2"),  
    new XAttribute("Att3", "content3")  
);  
XAttribute att = root.Attribute("Att2");  
att.Remove();  
Console.WriteLine(root);  
```  
  
```vb  
Dim root As XElement = <Root Att1="content1" Att2="content2" Att3="content3"/>  
Dim att As XAttribute = root.Attribute("Att2")  
att.Remove()  
Console.WriteLine(root)  
```  
  
 <span data-ttu-id="3eab1-451">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="3eab1-451">This example produces the following output:</span></span>  
  
```  
<Root Att1="content1" Att3="content3" />  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3eab1-452">Das übergeordnete Element ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3eab1-452">The parent element is <see langword="null" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="3eab1-453">LINQ to XML</span><span class="sxs-lookup"><span data-stu-id="3eab1-453">LINQ to XML</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.SetValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.SetValue : obj -&gt; unit" Usage="xAttribute.SetValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="3eab1-454">Der Wert, der diesem Attribut zugewiesen werden soll.</span><span class="sxs-lookup"><span data-stu-id="3eab1-454">The value to assign to this attribute.</span></span></param>
        <summary><span data-ttu-id="3eab1-455">Legt den Wert dieses Attributs fest.</span><span class="sxs-lookup"><span data-stu-id="3eab1-455">Sets the value of this attribute.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3eab1-456">Der Wert wird in seine Zeichenfolgenentsprechung konvertiert und der <xref:System.Xml.Linq.XAttribute.Value%2A>-Eigenschaft zugewiesen.</span><span class="sxs-lookup"><span data-stu-id="3eab1-456">The value is converted to its string representation and assigned to the <xref:System.Xml.Linq.XAttribute.Value%2A> property.</span></span>  
  
 <span data-ttu-id="3eab1-457">Es ist ungültig, eine Instanz einer Klasse, die von <xref:System.Xml.Linq.XObject>abgeleitet ist, zu übergeben, <xref:System.Xml.Linq.XAttribute> <xref:System.Xml.Linq.XElement> z. b. oder.</span><span class="sxs-lookup"><span data-stu-id="3eab1-457">It is invalid to pass an instance of a class that derives from <xref:System.Xml.Linq.XObject>, such as <xref:System.Xml.Linq.XElement> or <xref:System.Xml.Linq.XAttribute>.</span></span>  
  
 <span data-ttu-id="3eab1-458">Diese Methode gibt das <xref:System.Xml.Linq.XObject.Changed> -Ereignis und das <xref:System.Xml.Linq.XObject.Changing> -Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="3eab1-458">This method will raise the <xref:System.Xml.Linq.XObject.Changed> and the <xref:System.Xml.Linq.XObject.Changing> events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3eab1-459">Im folgenden Beispiel wird ein-Element mit mehreren Attributen erstellt.</span><span class="sxs-lookup"><span data-stu-id="3eab1-459">The following example creates an element with several attributes.</span></span> <span data-ttu-id="3eab1-460">Anschließend wird der Inhalt eines der Attribute geändert.</span><span class="sxs-lookup"><span data-stu-id="3eab1-460">It then changes the contents of one of the attributes.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att1", "content1"),  
    new XAttribute("Att2", "content2"),  
    new XAttribute("Att3", "content3")  
);  
XAttribute att = root.Attribute("Att2");  
att.SetValue("new content");  
Console.WriteLine(root);  
```  
  
```vb  
Dim root As XElement = <Root Att1="content1" Att2="content2" Att3="content3"/>  
Dim att As XAttribute = root.Attribute("Att2")  
att.SetValue("new content")  
Console.WriteLine(root)  
```  
  
 <span data-ttu-id="3eab1-461">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="3eab1-461">This example produces the following output:</span></span>  
  
```  
<Root Att1="content1" Att2="new content" Att3="content3" />  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3eab1-462">Der <paramref name="value" />-Parameter ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3eab1-462">The <paramref name="value" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3eab1-463">Der <paramref name="value" /> ist ein <see cref="T:System.Xml.Linq.XObject" />.</span><span class="sxs-lookup"><span data-stu-id="3eab1-463">The <paramref name="value" /> is an <see cref="T:System.Xml.Linq.XObject" />.</span></span></exception>
        <altmember cref="M:System.Xml.Linq.XElement.SetValue(System.Object)" />
        <altmember cref="M:System.Xml.Linq.XElement.SetAttributeValue(System.Xml.Linq.XName,System.Object)" />
        <altmember cref="M:System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName,System.Object)" />
        <altmember cref="P:System.Xml.Linq.XAttribute.Value" />
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="3eab1-464">LINQ to XML</span><span class="sxs-lookup"><span data-stu-id="3eab1-464">LINQ to XML</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="xAttribute.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3eab1-465">Konvertiert das aktuelle <see cref="T:System.Xml.Linq.XAttribute" />-Objekt in eine Zeichenfolgendarstellung.</span><span class="sxs-lookup"><span data-stu-id="3eab1-465">Converts the current <see cref="T:System.Xml.Linq.XAttribute" /> object to a string representation.</span></span></summary>
        <returns><span data-ttu-id="3eab1-466">Eine <see cref="T:System.String" />, die die XML-Textdarstellung eines Attributs und seines Werts enthält.</span><span class="sxs-lookup"><span data-stu-id="3eab1-466">A <see cref="T:System.String" /> containing the XML text representation of an attribute and its value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3eab1-467">Diese Methode gibt eine Zeichenfolge in Form von `AttributeName="content"`zurück.</span><span class="sxs-lookup"><span data-stu-id="3eab1-467">This method returns a string in the form of `AttributeName="content"`.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="3eab1-468">Wenn diese Methode aufgerufen wird und <xref:System.Xml.Linq.XAttribute> ein Steuerzeichen enthält, wird eine Ausnahme mit einer Meldung wie der Hexadezimalwert 0x0B, einem ungültigen Zeichen, ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="3eab1-468">When this method is called and <xref:System.Xml.Linq.XAttribute> contains control character, an exception is thrown with a message like: hexadecimal value 0x0B, is an invalid character.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3eab1-469">Im folgenden Beispiel wird ein-Element mit mehreren Attributen erstellt.</span><span class="sxs-lookup"><span data-stu-id="3eab1-469">The following example creates an element with several attributes.</span></span> <span data-ttu-id="3eab1-470">Anschließend ruft er ein Attribut ab und zeigt ihn und seinen Inhalt durch Aufrufen dieser Methode an.</span><span class="sxs-lookup"><span data-stu-id="3eab1-470">It then gets an attribute and displays it and its content by calling this method.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att1", "content1"),  
    new XAttribute("Att2", "content2"),  
    new XAttribute("Att3", "content3")  
);  
XAttribute att = root.Attribute("Att2");  
Console.WriteLine(att.ToString());  
```  
  
```vb  
Dim root As XElement = <Root Att1="content1" Att2="content2" Att3="content3"/>  
Dim att As XAttribute = root.Attribute("Att2")  
Console.WriteLine(att.ToString())  
```  
  
 <span data-ttu-id="3eab1-471">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="3eab1-471">This example produces the following output:</span></span>  
  
```  
Att2="content2"  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.Linq.XAttribute.Name" />
        <altmember cref="P:System.Xml.Linq.XAttribute.Value" />
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.String" />
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="3eab1-472">LINQ to XML</span><span class="sxs-lookup"><span data-stu-id="3eab1-472">LINQ to XML</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Linq.XAttribute.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : string with get, set" Usage="System.Xml.Linq.XAttribute.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3eab1-473">Ruft den Wert des Attributs ab oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="3eab1-473">Gets or sets the value of this attribute.</span></span></summary>
        <value><span data-ttu-id="3eab1-474">Ein <see cref="T:System.String" />-Objekt, das den Wert dieses Attributs enthält.</span><span class="sxs-lookup"><span data-stu-id="3eab1-474">A <see cref="T:System.String" /> containing the value of this attribute.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3eab1-475">Sie können diese Eigenschaft verwenden, um den Wert eines Attributs zu erhalten oder festzulegen.</span><span class="sxs-lookup"><span data-stu-id="3eab1-475">You can use this property to get or set the value of an attribute.</span></span>  
  
 <span data-ttu-id="3eab1-476">Durch Festlegen dieser Eigenschaft werden das <xref:System.Xml.Linq.XObject.Changed> -Ereignis <xref:System.Xml.Linq.XObject.Changing> und das-Ereignis angehoben.</span><span class="sxs-lookup"><span data-stu-id="3eab1-476">Setting this property will raise the <xref:System.Xml.Linq.XObject.Changed> and the <xref:System.Xml.Linq.XObject.Changing> events.</span></span>  
  
 <span data-ttu-id="3eab1-477">Wenn Sie den-Wert erhalten und das-Attribut nicht vorhanden ist, empfiehlt es sich, die expliziten Konvertierungs Operatoren zu verwenden und das-Attribut einem Typ zuzuweisen, `string` der <xref:System.Nullable%601> NULL <xref:System.Int32>-Werte zulässt, wie z. b. oder.</span><span class="sxs-lookup"><span data-stu-id="3eab1-477">If you are getting the value and the attribute might not exist, it is more convenient to use the explicit conversion operators, and assign the attribute to a nullable type such as `string` or <xref:System.Nullable%601> of <xref:System.Int32>.</span></span> <span data-ttu-id="3eab1-478">Wenn das Attribut nicht vorhanden ist, wird der Werte zulässt-Typ auf `null`festgelegt.</span><span class="sxs-lookup"><span data-stu-id="3eab1-478">If the attribute does not exist, then the nullable type is set to `null`.</span></span> <span data-ttu-id="3eab1-479">Bevor Sie diese Eigenschaft verwenden, müssen Sie sicherstellen, <xref:System.Xml.Linq.XElement.Attribute%2A> dass die Methode nicht `null`zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="3eab1-479">Before using this property, you must make sure that the <xref:System.Xml.Linq.XElement.Attribute%2A> method does not return `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3eab1-480">Im folgenden Beispiel wird ein-Element mit einem-Attribut erstellt.</span><span class="sxs-lookup"><span data-stu-id="3eab1-480">The following example creates an element with an attribute.</span></span> <span data-ttu-id="3eab1-481">Anschließend ruft Sie den Wert des Attributs ab und legt ihn fest.</span><span class="sxs-lookup"><span data-stu-id="3eab1-481">It then retrieves the value of the attribute, and then sets it.</span></span>  
  
 <span data-ttu-id="3eab1-482">Beachten Sie, dass im Visual Basic Beispiel die XML-Attribut Eigenschaft verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="3eab1-482">Note that the Visual Basic example uses the XML attribute property.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att", "content")  
);  
XAttribute att = root.FirstAttribute;  
Console.WriteLine(att.Value);  
att.Value = "new text";  
Console.WriteLine(att.Value);  
```  
  
```vb  
Dim root As XElement = <Root Att="content"/>  
Console.WriteLine(root.@Att)  
root.@Att = "new text"  
Console.WriteLine(root.@Att)  
```  
  
 <span data-ttu-id="3eab1-483">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="3eab1-483">This example produces the following output:</span></span>  
  
```  
content  
new text  
```  
  
 <span data-ttu-id="3eab1-484">Das folgende Beispiel zeigt den Vorteil, dass die expliziten Konvertierungs Operatoren verwendet werden, um den Wert eines Attributs zu erhalten, das möglicherweise nicht existiert:</span><span class="sxs-lookup"><span data-stu-id="3eab1-484">The following example shows the benefit of using the explicit conversion operators to get the value of an attribute that might not exist:</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att1", "attribute 1 content"),  
    new XAttribute("Att2", "2")  
);  
  
// The following assignments demonstrate why it is easier to use  
// casting when the attribute might or might not exist.  
  
string c1 = (string)root.Attribute("Att1");  
Console.WriteLine("c1:{0}", c1 == null ? "attribute does not exist" : c1);  
  
int? c2 = (int?)root.Attribute("Att2");  
Console.WriteLine("c2:{0}", c2 == null ? "attribute does not exist" : c2.ToString());  
  
string c3 = (string)root.Attribute("Att3");  
Console.WriteLine("c3:{0}", c3 == null ? "attribute does not exist" : c3);  
  
int? c4 = (int?)root.Attribute("Att4");  
Console.WriteLine("c4:{0}", c4 == null ? "attribute does not exist" : c4.ToString());  
  
Console.WriteLine();  
  
// The following assignments show the necessary code when using  
// the value property when the attribute might or might not exist.  
  
XAttribute att1 = root.Attribute("Att1");  
string v1;  
if (att1 == null)  
    v1 = null;  
else  
    v1 = att1.Value;  
Console.WriteLine("v1:{0}", v1 == null ? "attribute does not exist" : v1);  
  
XAttribute att2 = root.Attribute("Att2");  
int? v2;  
if (att2 == null)  
    v2 = null;  
else  
    v2 = Int32.Parse(att2.Value);  
Console.WriteLine("v2:{0}", v2 == null ? "attribute does not exist" : v2.ToString());  
  
XAttribute att3 = root.Attribute("Att3");  
string v3;  
if (att3 == null)  
    v3 = null;  
else  
    v3 = att3.Value;  
Console.WriteLine("v3:{0}", v3 == null ? "attribute does not exist" : v3);  
  
XAttribute att4 = root.Attribute("Att4");  
int? v4;  
if (att4 == null)  
    v4 = null;  
else  
    v4 = Int32.Parse(att4.Value);  
Console.WriteLine("v4:{0}", v4 == null ? "attribute does not exist" : v4.ToString());  
```  
  
```vb  
Dim root As XElement = <Root Att1="attribute 1 content" Att2="2"/>  
  
' The following assignments demonstrate why it is easier to use  
' casting when the attribute might or might not exist.  
  
Dim c1 As String = CStr(root.Attribute("Att1"))  
Console.WriteLine("c1:{0}", IIf(c1 Is Nothing, "attribute does not exist", c1))  
  
Dim c2 As Nullable(Of Integer) = CType(root.Attribute("Att2"), Nullable(Of Integer))  
Console.WriteLine("c2:{0}", IIf(c2.HasValue, c2, "attribute does not exist"))  
  
Dim c3 As String = CStr(root.Attribute("Att3"))  
Console.WriteLine("c3:{0}", IIf(c3 Is Nothing, "attribute does not exist", c3))  
  
Dim c4 As Nullable(Of Integer) = CType(root.Attribute("Att4"), Nullable(Of Integer))  
Console.WriteLine("c4:{0}", IIf(c4.HasValue, c4, "attribute does not exist"))  
  
Console.WriteLine()  
  
' The following assignments show the necessary code when using  
' the value property when the attribute might or might not exist.  
  
Dim att1 As XAttribute = root.Attribute("Att1")  
Dim v1 As String  
If att1 Is Nothing Then  
    v1 = Nothing  
Else  
    v1 = att1.Value  
End If  
  
Console.WriteLine("v1:{0}", IIf(v1 Is Nothing, "attribute does not exist", v1))  
  
Dim att2 As XAttribute = root.Attribute("Att2")  
Dim v2 As Nullable(Of Integer)  
If att2 Is Nothing Then  
    v2 = Nothing  
Else  
    v2 = Int32.Parse(att2.Value)  
End If  
  
Console.WriteLine("v2:{0}", IIf(v2.HasValue, v2, "attribute does not exist"))  
  
Dim att3 As XAttribute = root.Attribute("Att3")  
Dim v3 As String  
If att3 Is Nothing Then  
    v3 = Nothing  
Else  
    v3 = att3.Value  
End If  
  
Console.WriteLine("v3:{0}", IIf(v3 Is Nothing, "attribute does not exist", v3))  
  
Dim att4 As XAttribute = root.Attribute("Att4")  
Dim v4 As Nullable(Of Integer)  
If att4 Is Nothing Then  
    v4 = Nothing  
Else  
    v4 = Int32.Parse(att4.Value)  
End If  
  
Console.WriteLine("v4:{0}", IIf(v4.HasValue, v4, "attribute does not exist"))  
```  
  
 <span data-ttu-id="3eab1-485">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="3eab1-485">This example produces the following output:</span></span>  
  
```  
c1:attribute 1 content  
c2:2  
c3:attribute does not exist  
c4:attribute does not exist  
  
v1:attribute 1 content  
v2:2  
v3:attribute does not exist  
v4:attribute does not exist  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3eab1-486">Beim Festlegen ist <paramref name="value" /> gleich <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3eab1-486">When setting, the <paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.SetValue(System.Object)" />
        <altmember cref="P:System.Xml.Linq.XAttribute.Name" />
        <altmember cref="M:System.Xml.Linq.XAttribute.ToString" />
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="3eab1-487">LINQ to XML</span><span class="sxs-lookup"><span data-stu-id="3eab1-487">LINQ to XML</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
