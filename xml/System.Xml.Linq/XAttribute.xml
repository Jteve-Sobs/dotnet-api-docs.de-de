<Type Name="XAttribute" FullName="System.Xml.Linq.XAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6883ebc737eb1ddebe8158e03b05b8f7dbfc05d5" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39969312" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XAttribute : System.Xml.Linq.XObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XAttribute extends System.Xml.Linq.XObject" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Linq.XAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class XAttribute&#xA;Inherits XObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class XAttribute : System::Xml::Linq::XObject" />
  <TypeSignature Language="F#" Value="type XAttribute = class&#xA;    inherit XObject" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XDocument</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Linq</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.Linq.XObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.ComponentModel.TypeDescriptionProvider(typeof(MS.Internal.Xml.Linq.ComponentModel.XTypeDescriptionProvider`1&lt;System.Xml.Linq.XAttribute&gt;))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5">
      <AttributeName>System.ComponentModel.TypeDescriptionProvider(typeof(System.Xml.Linq.ComponentModel.XTypeDescriptionProvider`1&lt;System.Xml.Linq.XAttribute&gt;))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="efed9-101">Stellt ein XML-Attribut dar.</span>
      <span class="sxs-lookup">
        <span data-stu-id="efed9-101">Represents an XML attribute.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efed9-102">Ein XML-Attribut ist ein Name-Wert-Paar, das ein XML-Element zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="efed9-102">An XML attribute is a name/value pair associated with an XML element.</span></span>  
  
 <span data-ttu-id="efed9-103">Jede <xref:System.Xml.Linq.XElement> enthält eine Liste der Attribute für dieses Element.</span><span class="sxs-lookup"><span data-stu-id="efed9-103">Each <xref:System.Xml.Linq.XElement> contains a list of the attributes for that element.</span></span> <span data-ttu-id="efed9-104">Attribute müssen einen vollqualifizierten Namen aufweisen, der auf das Element eindeutig ist.</span><span class="sxs-lookup"><span data-stu-id="efed9-104">Attributes must have a qualified name that is unique to the element.</span></span> <span data-ttu-id="efed9-105">Attribute werden nicht von abgeleitet <xref:System.Xml.Linq.XNode>; sie sind sich nicht um Knoten in der XML-Struktur.</span><span class="sxs-lookup"><span data-stu-id="efed9-105">Attributes are not derived from <xref:System.Xml.Linq.XNode>; they are not nodes in the XML tree.</span></span> <span data-ttu-id="efed9-106">Stattdessen sind sie einfach Name/Wert-Paaren, die einem Element zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="efed9-106">Instead, they are simply name/value pairs associated with an element.</span></span>  
  
 <span data-ttu-id="efed9-107">Attribute werden in der XML-Struktur in der Reihenfolge verwaltet, dass sie auf das Element hinzugefügt wurden.</span><span class="sxs-lookup"><span data-stu-id="efed9-107">Attributes are maintained in the XML tree in the order that they were added to the element.</span></span> <span data-ttu-id="efed9-108">Wenn eine Auflistung von Attributen zurückgegeben wird, indem <xref:System.Xml.Linq.XElement.Attributes%2A>, sie sind in der Reihenfolge zurückgegeben, dass sie auf das Element hinzugefügt wurden, und nicht sortiert sind.</span><span class="sxs-lookup"><span data-stu-id="efed9-108">When a collection of attributes is returned by <xref:System.Xml.Linq.XElement.Attributes%2A>, they are returned in the order that they were added to the element, and are not sorted.</span></span>  
  
 <span data-ttu-id="efed9-109">In XML sind Namespacedeklarationen technisch gesehen keine Attribute, die richtige.</span><span class="sxs-lookup"><span data-stu-id="efed9-109">Technically, in XML, namespace declarations are not attributes proper.</span></span> <span data-ttu-id="efed9-110">Diese Unterscheidung ist jedoch nicht normalerweise viele XML-Programmierer vorgenommen.</span><span class="sxs-lookup"><span data-stu-id="efed9-110">However, this distinction is not normally made by many XML programmers.</span></span> <span data-ttu-id="efed9-111">Da Namespacedeklarationen dieselbe XML-Syntax als Attribute haben, stellen Sie sich stattdessen die meisten Programmierer von XML-Namespaces als Attribute.</span><span class="sxs-lookup"><span data-stu-id="efed9-111">Instead, because namespace declarations have exactly the same XML syntax as attributes, most XML programmers think of namespaces as attributes.</span></span> <span data-ttu-id="efed9-112">Zur Vereinfachung der [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] Programmierschnittstelle, Namespaces in der XML-Struktur als Attribute dargestellt werden.</span><span class="sxs-lookup"><span data-stu-id="efed9-112">To simplify the [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] programming interface, namespaces are represented in the XML tree as attributes.</span></span> <span data-ttu-id="efed9-113">Solche Namespaceattribute Auswirkungen auf die Serialisierung einer XML-Struktur.</span><span class="sxs-lookup"><span data-stu-id="efed9-113">Such namespace attributes impact serialization of an XML tree.</span></span> <span data-ttu-id="efed9-114">Beim Serialisieren von [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] versucht, mit dem Namespacepräfix, das in den Namespaceattributen angegeben zu serialisieren.</span><span class="sxs-lookup"><span data-stu-id="efed9-114">When serializing, [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] attempts to serialize with the namespace prefix specified in namespace attributes.</span></span> <span data-ttu-id="efed9-115">Sie können die <xref:System.Xml.Linq.XAttribute.IsNamespaceDeclaration%2A> zu bestimmen, ob ein Attribut tatsächlich eine Namespacedeklaration ist.</span><span class="sxs-lookup"><span data-stu-id="efed9-115">You can use the <xref:System.Xml.Linq.XAttribute.IsNamespaceDeclaration%2A> to determine if an attribute is really a namespace declaration.</span></span>  
  
 <span data-ttu-id="efed9-116">Die <xref:System.Xml.Linq.XAttribute>-Klasse wird von <xref:System.Xml.Linq.XObject> abgeleitet.</span><span class="sxs-lookup"><span data-stu-id="efed9-116">The <xref:System.Xml.Linq.XAttribute> class derives from <xref:System.Xml.Linq.XObject>.</span></span> <span data-ttu-id="efed9-117">Sie können Attribute Anmerkungen hinzu, und Sie können Ereignisse für diese beobachten.</span><span class="sxs-lookup"><span data-stu-id="efed9-117">You can add annotations to attributes, and observe events for them.</span></span>  
  
 <span data-ttu-id="efed9-118">Einige <xref:System.Xml.Linq.XAttribute> aus XAML können Methoden verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="efed9-118">Some <xref:System.Xml.Linq.XAttribute> methods can be used from XAML.</span></span> <span data-ttu-id="efed9-119">Weitere Informationen finden Sie unter [Dynamische Eigenschaften in LINQ to XML](http://msdn.microsoft.com/library/0455f47c-4a68-4f2e-a3f8-dd1d85b99012).</span><span class="sxs-lookup"><span data-stu-id="efed9-119">For more information, see [LINQ to XML Dynamic Properties](http://msdn.microsoft.com/library/0455f47c-4a68-4f2e-a3f8-dd1d85b99012).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Linq.XElement" />
    <altmember cref="T:System.Xml.Linq.XDocument" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="efed9-120">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Linq.XAttribute" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-120">Initializes a new instance of the <see cref="T:System.Xml.Linq.XAttribute" /> class.</span>
          </span>
        </summary>
        <altmember cref="P:System.Xml.Linq.XAttribute.Name" />
        <altmember cref="P:System.Xml.Linq.XAttribute.Value" />
        <altmember cref="P:System.Xml.Linq.XAttribute.NodeType" />
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XAttribute (System.Xml.Linq.XAttribute other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.Linq.XAttribute other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (other As XAttribute)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XAttribute(System::Xml::Linq::XAttribute ^ other);" />
      <MemberSignature Language="F#" Value="new System.Xml.Linq.XAttribute : System.Xml.Linq.XAttribute -&gt; System.Xml.Linq.XAttribute" Usage="new System.Xml.Linq.XAttribute other" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="other" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="efed9-121">Ein <see cref="T:System.Xml.Linq.XAttribute" />-Objekt, aus dem kopiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-121">An <see cref="T:System.Xml.Linq.XAttribute" /> object to copy from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="efed9-122">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Linq.XAttribute" />-Klasse mit einem anderen <see cref="T:System.Xml.Linq.XAttribute" /> -Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-122">Initializes a new instance of the <see cref="T:System.Xml.Linq.XAttribute" /> class from another <see cref="T:System.Xml.Linq.XAttribute" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efed9-123">Dieser Konstruktor wird hauptsächlich intern verwendet, wenn Sie eine tiefe Kopie einer XML-Struktur vornehmen.</span><span class="sxs-lookup"><span data-stu-id="efed9-123">This constructor is primarily used internally when making a deep copy of an XML tree.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="efed9-124">Dieses Beispiel zeigt, dass eine Kopie, der nicht Klon eines Attributs in der Struktur erstellen eine tiefe Kopie einer XML-Struktur erstellt werden.</span><span class="sxs-lookup"><span data-stu-id="efed9-124">This example demonstrates that creating a deep copy of an XML tree creates a copy, not a clone, of an attribute in the tree.</span></span>  
  
```csharp  
XElement root1 = XElement.Parse("<Root Att1='abc' />");  
// Make a deep copy.  
XElement root2 = new XElement(root1);  
if (root1.Attribute("Att1") == root2.Attribute("Att1"))  
    Console.WriteLine("This will not be printed");  
else  
    Console.WriteLine("Creating a deep copy created a new attribute from the original.");  
```  
  
```vb  
Dim root1 As XElement = <Root Att1='abc'/>  
' Make a deep copy.  
Dim root2 As XElement = New XElement(root1)  
If root1.Attribute("Att1") Is root2.Attribute("Att1") Then  
    Console.WriteLine("This will not be printed")  
Else  
    Console.WriteLine("Creating a deep copy created a new attribute from the original.")  
End If  
```  
  
 <span data-ttu-id="efed9-125">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="efed9-125">This example produces the following output:</span></span>  
  
```  
  
Creating a deep copy created a new attribute from the original.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="efed9-126">Der <paramref name="other" />-Parameter ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-126">The <paramref name="other" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Xml.Linq.XAttribute.Name" />
        <altmember cref="P:System.Xml.Linq.XAttribute.Value" />
        <altmember cref="P:System.Xml.Linq.XAttribute.NodeType" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XAttribute (System.Xml.Linq.XName name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.Linq.XName name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XName,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As XName, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XAttribute(System::Xml::Linq::XName ^ name, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Xml.Linq.XAttribute : System.Xml.Linq.XName * obj -&gt; System.Xml.Linq.XAttribute" Usage="new System.Xml.Linq.XAttribute (name, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.Xml.Linq.XName" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="efed9-127">Der <see cref="T:System.Xml.Linq.XName" /> des Attributs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-127">The <see cref="T:System.Xml.Linq.XName" /> of the attribute.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="efed9-128">Ein <see cref="T:System.Object" />, das den Wert des Attributs enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-128">An <see cref="T:System.Object" /> containing the value of the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="efed9-129">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Linq.XAttribute" />-Klasse mit dem angegebenen Namen und Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-129">Initializes a new instance of the <see cref="T:System.Xml.Linq.XAttribute" /> class from the specified name and value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efed9-130">Es gibt eine implizite Konvertierung einer Zeichenfolge in ein <xref:System.Xml.Linq.XName>.</span><span class="sxs-lookup"><span data-stu-id="efed9-130">There is an implicit conversion from string to <xref:System.Xml.Linq.XName>.</span></span> <span data-ttu-id="efed9-131">Typische Verwendung dieses Konstruktors ist an eine Zeichenfolge als erster Parameter statt ein neues <xref:System.Xml.Linq.XName>wie folgt:</span><span class="sxs-lookup"><span data-stu-id="efed9-131">Typical use of this constructor is to specify a string as the first parameter instead of creating a new <xref:System.Xml.Linq.XName>, as follows:</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("AnAttributeName", "Content")  
);  
```  
  
 <span data-ttu-id="efed9-132">Können Sie auch die additionsoperatorüberladung mit einer <xref:System.Xml.Linq.XNamespace> und eine Zeichenfolge zum Erstellen einer <xref:System.Xml.Linq.XName>wie folgt:</span><span class="sxs-lookup"><span data-stu-id="efed9-132">You can also use the addition operator overload with an <xref:System.Xml.Linq.XNamespace> and a string to create an <xref:System.Xml.Linq.XName>, as follows:</span></span>  
  
```csharp  
XNamespace aw = "http://www.adventure-works.com";  
XElement root = new XElement(aw + "Root",  
    new XAttribute(aw + "AnAttributeName", "Content")  
);  
```  
  
 <span data-ttu-id="efed9-133">Weitere Informationen finden Sie unter [arbeiten mit XML-Namespaces](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430).</span><span class="sxs-lookup"><span data-stu-id="efed9-133">For more information, see [Working with XML Namespaces](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430).</span></span>  
  
 <span data-ttu-id="efed9-134">Diese gleichen Methoden funktionieren für Visual Basic jedoch XML-Literale einen besseren Ansatz zum Erstellen von XML-Strukturen bereitzustellen.</span><span class="sxs-lookup"><span data-stu-id="efed9-134">These same approaches will work for Visual Basic, however XML literals provide a better approach for creating XML trees.</span></span>  
  
 <span data-ttu-id="efed9-135">Die `value` Parameter kann sein, eine <xref:System.String>, `double`, `float`, `decimal`, `bool`, <xref:System.DateTime>, oder <xref:System.TimeSpan>.</span><span class="sxs-lookup"><span data-stu-id="efed9-135">The `value` parameter can be a <xref:System.String>, `double`, `float`, `decimal`, `bool`, <xref:System.DateTime>, or <xref:System.TimeSpan>.</span></span> <span data-ttu-id="efed9-136">Wenn der Wert ist eine <xref:System.DateTime> oder <xref:System.TimeSpan>, entsprechend der W3C-Spezifikationen ist der Wert des Attributs richtig formatiert.</span><span class="sxs-lookup"><span data-stu-id="efed9-136">If the value is a <xref:System.DateTime> or <xref:System.TimeSpan>, the value of the attribute is formatted correctly per the W3C specifications.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="efed9-137">Im folgenden Beispiel wird dieser Konstruktor zum Erstellen von Attributen.</span><span class="sxs-lookup"><span data-stu-id="efed9-137">The following example uses this constructor to create attributes.</span></span> <span data-ttu-id="efed9-138">Übergibt Zeichenfolgen als das erste Argument für die <xref:System.Xml.Linq.XAttribute> -Konstruktor, der dann implizit in konvertiert werden <xref:System.Xml.Linq.XName> Objekte.</span><span class="sxs-lookup"><span data-stu-id="efed9-138">It passes strings as the first argument to the <xref:System.Xml.Linq.XAttribute> constructor, which are then implicitly converted to <xref:System.Xml.Linq.XName> objects.</span></span> <span data-ttu-id="efed9-139">Die Attribute werden auf ein Element hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="efed9-139">The attributes are added to an element.</span></span>  
  
```csharp  
XElement root;  
  
double dbl = 12.345;  
XAttribute[] attArray = {  
    new XAttribute("Att4", 1),  
    new XAttribute("Att5", 2),  
    new XAttribute("Att6", 3)  
};  
DateTime dt = new DateTime(2006, 10, 6, 12, 30, 00);  
  
// string content  
root = new XElement("Root",  
    new XAttribute("Att1", "Some text"),  
  
    // double content  
    new XAttribute("Att2", dbl),  
  
    // DateTime content  
    new XAttribute("Att3", dt),  
  
    // XAttribute array content  
    attArray  
);  
  
Console.WriteLine(root);  
```  
  
```vb  
Dim dbl As Double = 12.345  
Dim attArray As XAttribute() = { _  
    New XAttribute("Att4", 1), _  
    New XAttribute("Att5", 2), _  
    New XAttribute("Att6", 3) _  
}  
Dim dt As DateTime = New DateTime(2006, 10, 6, 12, 30, 0)  
Dim root As XElement = <Root Att1="Some text"  
                           Att2=<%= dbl %>  
                           Att3=<%= dt %>  
                           <%= attArray %>  
                       />  
Console.WriteLine(root)  
```  
  
 <span data-ttu-id="efed9-140">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="efed9-140">This example produces the following output:</span></span>  
  
```  
  
<Root Att1="Some text" Att2="12.345" Att3="2006-10-06T12:30:00" Att4="1" Att5="2" Att6="3" />  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="efed9-141">Der <paramref name="name" />-Parameter oder der <paramref name="value" />-Parameter ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-141">The <paramref name="name" /> or <paramref name="value" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Xml.Linq.XAttribute.Name" />
        <altmember cref="P:System.Xml.Linq.XAttribute.Value" />
        <altmember cref="P:System.Xml.Linq.XAttribute.NodeType" />
      </Docs>
    </Member>
    <Member MemberName="EmptySequence">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XAttribute&gt; EmptySequence { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IEnumerable`1&lt;class System.Xml.Linq.XAttribute&gt; EmptySequence" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Linq.XAttribute.EmptySequence" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property EmptySequence As IEnumerable(Of XAttribute)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::Generic::IEnumerable&lt;System::Xml::Linq::XAttribute ^&gt; ^ EmptySequence { System::Collections::Generic::IEnumerable&lt;System::Xml::Linq::XAttribute ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EmptySequence : seq&lt;System.Xml.Linq.XAttribute&gt;" Usage="System.Xml.Linq.XAttribute.EmptySequence" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XAttribute&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="efed9-142">Ruft eine leere Auflistung von Attributen ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-142">Gets an empty collection of attributes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="efed9-143">Ein <see cref="T:System.Collections.Generic.IEnumerable`1" /> vom Typ <see cref="T:System.Xml.Linq.XAttribute" />, das eine leere Auflistung enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-143">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XAttribute" /> containing an empty collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efed9-144">Diese Eigenschaft wird in der Regel durch Implementierungen der Klasse verwendet, wenn eine Methode schreiben, die eine Auflistung von Attributen zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="efed9-144">This property is typically used by class implementers when writing a method that returns a collection of attributes.</span></span> <span data-ttu-id="efed9-145">Wenn die Methode eine leere Auflistung von Attributen zurück muss, können sie mithilfe dieser Eigenschaft erhalten eine leere Auflistung von <xref:System.Xml.Linq.XAttribute> Objekte.</span><span class="sxs-lookup"><span data-stu-id="efed9-145">If the method needs to return an empty collection of attributes, it could use this property to get an empty collection of <xref:System.Xml.Linq.XAttribute> objects.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.Linq.XElement.EmptySequence" />
        <altmember cref="Overload:System.Xml.Linq.XAttribute.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="IsNamespaceDeclaration">
      <MemberSignature Language="C#" Value="public bool IsNamespaceDeclaration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNamespaceDeclaration" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Linq.XAttribute.IsNamespaceDeclaration" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNamespaceDeclaration As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNamespaceDeclaration { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNamespaceDeclaration : bool" Usage="System.Xml.Linq.XAttribute.IsNamespaceDeclaration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="efed9-146">Bestimmt, ob dieses Attribut eine Namespacedeklaration ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-146">Determines if this attribute is a namespace declaration.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="efed9-147">
            <see langword="true" />, wenn dieses Attribut eine Namespacedeklaration ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-147">
              <see langword="true" /> if this attribute is a namespace declaration; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efed9-148">In XML sind Namespacedeklarationen technisch gesehen keine Attribute, die richtige.</span><span class="sxs-lookup"><span data-stu-id="efed9-148">Technically, in XML, namespace declarations are not attributes proper.</span></span> <span data-ttu-id="efed9-149">Diese Unterscheidung ist jedoch nicht normalerweise durch die meisten XML-Programmierer getroffen.</span><span class="sxs-lookup"><span data-stu-id="efed9-149">However, this distinction is not normally made by most XML programmers.</span></span> <span data-ttu-id="efed9-150">Da Namespacedeklarationen dieselbe Syntax wie Attribute haben, stellen Sie sich stattdessen die meisten Programmierer von XML-Namespaces als Attribute.</span><span class="sxs-lookup"><span data-stu-id="efed9-150">Instead, because namespace declarations have exactly the same syntax as attributes, most XML programmers think of namespaces as attributes.</span></span> <span data-ttu-id="efed9-151">Zur Vereinfachung der [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] Programmierschnittstelle, Namespaces in der XML-Struktur als Attribute dargestellt werden.</span><span class="sxs-lookup"><span data-stu-id="efed9-151">To simplify the [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] programming interface, namespaces are represented in the XML tree as attributes.</span></span> <span data-ttu-id="efed9-152">Sie können diese Eigenschaft verwenden, um zu bestimmen, ob eine bestimmte [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] Attribut eine Namespacedeklaration ist.</span><span class="sxs-lookup"><span data-stu-id="efed9-152">You can use this property to determine if a particular [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] attribute is really a namespace declaration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="efed9-153">Das folgende Beispiel erstellt ein Attribut, das eine Namespacedeklaration ist und ein Attribut, das nicht ist.</span><span class="sxs-lookup"><span data-stu-id="efed9-153">The following example creates an attribute that is a namespace declaration and an attribute that is not.</span></span> <span data-ttu-id="efed9-154">Dann wird diese Eigenschaft verwendet, um anzuzeigen, ob jedes Attribut eine Namespacedeklaration oder nicht ist.</span><span class="sxs-lookup"><span data-stu-id="efed9-154">It then uses this property to display whether each attribute is a namespace declaration or not.</span></span>  
  
```csharp  
XNamespace aw = "http://www.adventure-works.com";  
XElement root = new XElement(aw + "Root",  
    new XAttribute(XNamespace.Xmlns + "aw", "http://www.adventure-works.com"),  
    new XAttribute(aw + "Att", "content")  
);  
  
foreach (XAttribute att in root.Attributes()) {  
    if (att.IsNamespaceDeclaration)  
        Console.WriteLine("{0} is a namespace declaration", att.Name);  
    else  
        Console.WriteLine("{0} is not a namespace declaration", att.Name);  
}  
```  
  
```vb  
Dim root As XElement = <aw:Root xmlns:aw='http://www.adventure-works.com'  
                           aw:Att='content'/>  
  
For Each att As XAttribute In root.Attributes()  
    If (att.IsNamespaceDeclaration) Then  
        Console.WriteLine("{0} is a namespace declaration", att.Name)  
    Else  
        Console.WriteLine("{0} is not a namespace declaration", att.Name)  
    End If  
Next  
```  
  
 <span data-ttu-id="efed9-155">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="efed9-155">This example produces the following output:</span></span>  
  
```  
{http://www.w3.org/2000/xmlns/}aw is a namespace declaration  
{http://www.adventure-works.com}Att is not a namespace declaration  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Linq.XNamespace" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public System.Xml.Linq.XName Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Linq.XName Name" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Linq.XAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As XName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Linq::XName ^ Name { System::Xml::Linq::XName ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : System.Xml.Linq.XName" Usage="System.Xml.Linq.XAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Linq.XName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="efed9-156">Ruft den erweiterten Namen dieses Attributs ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-156">Gets the expanded name of this attribute.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="efed9-157">Ein <see cref="T:System.Xml.Linq.XName" />, der den Namen dieses Attributs enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-157">An <see cref="T:System.Xml.Linq.XName" /> containing the name of this attribute.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efed9-158">Der erweiterte Namen, die von dieser Eigenschaft zurückgegeben wird, in Form von `{namespace}localname`.</span><span class="sxs-lookup"><span data-stu-id="efed9-158">The expanded name returned by this property is in the form of `{namespace}localname`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="efed9-159">Das folgende Beispiel erstellt ein Element mit drei Attributen.</span><span class="sxs-lookup"><span data-stu-id="efed9-159">The following example creates an element with three attributes.</span></span> <span data-ttu-id="efed9-160">Klicken Sie dann wird diese Eigenschaft verwendet, um den Namen der einzelnen Attribute auszugeben.</span><span class="sxs-lookup"><span data-stu-id="efed9-160">It then uses this property to print out the name of each attribute.</span></span> <span data-ttu-id="efed9-161">Das Beispiel zeigt auch die Erstellung eines neuen Attributs mit dem Namen eines vorhandenen Attributs.</span><span class="sxs-lookup"><span data-stu-id="efed9-161">The example also shows creation of a new attribute using the name of an existing attribute.</span></span>  
  
```csharp  
XNamespace aw = "http://www.adventure-works.com";  
XElement root = new XElement(aw + "Root",  
    new XAttribute(XNamespace.Xmlns + "aw", "http://www.adventure-works.com"),  
    new XAttribute(aw + "Att", "content"),  
    new XAttribute("Att2", "different content")  
);  
  
foreach (XAttribute att in root.Attributes())  
    Console.WriteLine("{0}={1}", att.Name, att.Value);  
Console.WriteLine("");  
  
XElement newRoot = new XElement(aw + "Root",  
    from att in root.Attributes("Att2")  
    select new XAttribute(att.Name, "new content"));  
  
foreach (XAttribute att in newRoot.Attributes())  
    Console.WriteLine("{0}={1}", att.Name, att.Value);  
```  
  
```vb  
Dim root As XElement = _   
    <aw:Root xmlns:aw='http://www.adventure-works.com'  
        aw:Att='content'  
        Att2='different content'/>  
  
For Each att As XAttribute In root.Attributes()  
    Console.WriteLine("{0}={1}", att.Name, att.Value)  
Next  
Console.WriteLine("")  
  
Dim NewRoot As XElement = _  
<Root  
    <%= _  
        From att In root.Attributes("Att2") _  
        Select New XAttribute(att.Name, "new content") _  
    %>>_  
</Root>  
  
For Each att As XAttribute In NewRoot.Attributes()  
    Console.WriteLine("{0}={1}", att.Name, att.Value)  
Next  
  
```  
  
 <span data-ttu-id="efed9-162">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="efed9-162">This example produces the following output:</span></span>  
  
```  
{http://www.w3.org/2000/xmlns/}aw=http://www.adventure-works.com  
{http://www.adventure-works.com}Att=content  
Att2=different content  
  
Att2=new content  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Linq.XName" />
        <altmember cref="P:System.Xml.Linq.XAttribute.Value" />
        <altmember cref="M:System.Xml.Linq.XAttribute.ToString" />
      </Docs>
    </Member>
    <Member MemberName="NextAttribute">
      <MemberSignature Language="C#" Value="public System.Xml.Linq.XAttribute NextAttribute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Linq.XAttribute NextAttribute" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Linq.XAttribute.NextAttribute" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NextAttribute As XAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Linq::XAttribute ^ NextAttribute { System::Xml::Linq::XAttribute ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NextAttribute : System.Xml.Linq.XAttribute" Usage="System.Xml.Linq.XAttribute.NextAttribute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Linq.XAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="efed9-163">Ruft das nächste Attribut des übergeordneten Elements ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-163">Gets the next attribute of the parent element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="efed9-164">Ein <see cref="T:System.Xml.Linq.XAttribute" />, das das nächste Attribut des übergeordneten Elements enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-164">An <see cref="T:System.Xml.Linq.XAttribute" /> containing the next attribute of the parent element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efed9-165">Attribute werden in der XML-Struktur in der Reihenfolge verwaltet, dass sie auf das Element hinzugefügt wurden.</span><span class="sxs-lookup"><span data-stu-id="efed9-165">Attributes are maintained in the XML tree in the order that they were added to the element.</span></span> <span data-ttu-id="efed9-166">Wenn eine Auflistung von Attributen zurückgegeben wird, indem <xref:System.Xml.Linq.XElement.Attributes%2A>, diese in der Reihenfolge, die sie hinzugefügt wurden, und werden nicht sortiert zurückgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="efed9-166">When a collection of attributes is returned by <xref:System.Xml.Linq.XElement.Attributes%2A>, they are returned in the order that they were added, and are not sorted.</span></span> <span data-ttu-id="efed9-167">Wenn Sie das nächste Attribut über diese Eigenschaft anfordern, gibt diese Eigenschaft das Attribut, das nach diesem Attribut hinzugefügt wurde.</span><span class="sxs-lookup"><span data-stu-id="efed9-167">When you request the next attribute through this property, this property returns the attribute that was added after this attribute.</span></span>  
  
 <span data-ttu-id="efed9-168">Wenn dieses Attribut nicht über ein übergeordnetes Element verfügt, oder wenn kein nächstes Attribut vorhanden ist, dann diese Eigenschaft gibt `null`.</span><span class="sxs-lookup"><span data-stu-id="efed9-168">If this attribute does not have a parent, or if there is no next attribute, then this property returns `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="efed9-169">Das folgende Beispiel zeigt, wie Sie die Attribute eines Elements mit dieser Eigenschaft durchlaufen wird.</span><span class="sxs-lookup"><span data-stu-id="efed9-169">The following example shows how to iterate through the attributes of an element using this property.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att1", 1),  
    new XAttribute("Att2", 2),  
    new XAttribute("Att3", 3),  
    new XAttribute("Att4", 4)  
);  
  
XAttribute att = root.FirstAttribute;  
do {  
    Console.WriteLine(att);  
}  
while((att = att.NextAttribute) != null);  
```  
  
```vb  
Dim root As XElement = <Root Att1="1" Att2="2" Att3="3" Att4="4"/>  
Dim att As XAttribute = root.FirstAttribute  
Dim val As Boolean = True  
Do  
    Console.WriteLine(att)  
    att = att.NextAttribute  
Loop While (Not (att Is Nothing))  
```  
  
 <span data-ttu-id="efed9-170">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="efed9-170">This example produces the following output:</span></span>  
  
```  
Att1="1"  
Att2="2"  
Att3="3"  
Att4="4"  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.Linq.XAttribute.PreviousAttribute" />
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Linq.XAttribute.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NodeType As XmlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNodeType NodeType { System::Xml::XmlNodeType get(); };" />
      <MemberSignature Language="F#" Value="member this.NodeType : System.Xml.XmlNodeType" Usage="System.Xml.Linq.XAttribute.NodeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="efed9-171">Ruft den Knotentyp für diesen Knoten ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-171">Gets the node type for this node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="efed9-172">Der Knotentyp.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-172">The node type.</span>
          </span>
          <span data-ttu-id="efed9-173">Für <see cref="T:System.Xml.Linq.XAttribute" />-Objekte ist dieser Wert <see cref="F:System.Xml.XmlNodeType.Attribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-173">For <see cref="T:System.Xml.Linq.XAttribute" /> objects, this value is <see cref="F:System.Xml.XmlNodeType.Attribute" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efed9-174">Da alle Klassen, die abgeleitet <xref:System.Xml.Linq.XObject> enthalten eine <xref:System.Xml.Linq.XObject.NodeType%2A> -Eigenschaft, können Sie Code, der ausgeführt wird schreiben, auf Sammlungen von konkreten Unterklasse von <xref:System.Xml.Linq.XObject>.</span><span class="sxs-lookup"><span data-stu-id="efed9-174">Because all classes that derive from <xref:System.Xml.Linq.XObject> contain a <xref:System.Xml.Linq.XObject.NodeType%2A> property, you can write code that operates on collections of concrete subclass of <xref:System.Xml.Linq.XObject>.</span></span> <span data-ttu-id="efed9-175">Der Code kann dann für den Knotentyp jedes Knotens in der Auflistung überprüfen.</span><span class="sxs-lookup"><span data-stu-id="efed9-175">Your code can then test for the node type of each node in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="efed9-176">Im folgenden Beispiel wird ein Attribut erstellt, und zeigt dann den Knotentyp, der mit dieser Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="efed9-176">The following example creates an attribute, and then displays the node type using this property.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att", "content")  
);  
  
XAttribute att = root.FirstAttribute;  
Console.WriteLine(att.NodeType);  
```  
  
```vb  
Dim root As XElement = <Root Att="content"/>  
Dim att As XAttribute = root.FirstAttribute  
Console.WriteLine(att.NodeType.ToString)  
```  
  
 <span data-ttu-id="efed9-177">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="efed9-177">This example produces the following output:</span></span>  
  
```  
  
Attribute  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlNodeType" />
        <altmember cref="T:System.Xml.Linq.XNode" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator bool (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Boolean" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator bool(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Xml.Linq.XAttribute -&gt; bool" Usage="System.Xml.Linq.XAttribute.op_Explicit attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="efed9-178">Das <see cref="T:System.Xml.Linq.XAttribute" />, das in <see cref="T:System.Boolean" /> umgewandelt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-178">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.Boolean" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="efed9-179">Wandelt den Wert dieses <see cref="T:System.Xml.Linq.XAttribute" /> in einen <see cref="T:System.Boolean" /> um.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-179">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Boolean" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="efed9-180">Ein <see cref="T:System.Boolean" />, das den Inhalt dieses <see cref="T:System.Xml.Linq.XAttribute" /> enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-180">A <see cref="T:System.Boolean" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efed9-181">Beim Konvertieren in <xref:System.Boolean> über ein Attribut oder Element, nach dem verkürzen und die Konvertierung in Kleinbuchstaben zulässige Werte sind "0", "1", und eine beliebige Zeichenfolge, die von "true" erstellt oder "False".</span><span class="sxs-lookup"><span data-stu-id="efed9-181">When converting to <xref:System.Boolean> from an attribute or element, allowed values are "0", "1", and any string that produces "true" or "false" after trimming and conversion to lower case.</span></span>  
 
## Examples  
 <span data-ttu-id="efed9-182">Das folgende Beispiel erstellt ein Attribut mit einem <xref:System.Boolean> Wert ein, und wandelt es <xref:System.Boolean>.</span><span class="sxs-lookup"><span data-stu-id="efed9-182">The following example creates an attribute with a <xref:System.Boolean> value, then casts it to <xref:System.Boolean>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",   
    new XAttribute("BoolValue", true)  
);  
bool bv = (bool)root.Attribute("BoolValue");  
Console.WriteLine("(bool)BoolValue={0}", bv);  
```  
  
```vb  
Dim root As XElement = <root BoolValue="true"/>  
Dim bv As Boolean = CBool(root.Attribute("BoolValue"))  
Console.WriteLine("(bool)BoolValue={0}", bv)  
```  
  
 <span data-ttu-id="efed9-183">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="efed9-183">This example produces the following output:</span></span>  
  
```  
(bool)BoolValue=True  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="efed9-184">Das Attribut enthält keinen gültigen <see cref="T:System.Boolean" />-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-184">The attribute does not contain a valid <see cref="T:System.Boolean" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="efed9-185">Der <paramref name="attribute" />-Parameter ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-185">The <paramref name="attribute" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Boolean}" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator DateTime (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.DateTime op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTime" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator DateTime(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Xml.Linq.XAttribute -&gt; DateTime" Usage="System.Xml.Linq.XAttribute.op_Explicit attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="efed9-186">Das <see cref="T:System.Xml.Linq.XAttribute" />, das in <see cref="T:System.DateTime" /> umgewandelt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-186">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.DateTime" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="efed9-187">Wandelt den Wert dieses <see cref="T:System.Xml.Linq.XAttribute" /> in einen <see cref="T:System.DateTime" /> um.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-187">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.DateTime" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="efed9-188">Ein <see cref="T:System.DateTime" />, das den Inhalt dieses <see cref="T:System.Xml.Linq.XAttribute" /> enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-188">A <see cref="T:System.DateTime" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efed9-189">Der Wertebereich eines Attributs oder Elements, Datum und Uhrzeit enthält, ist eng an die Datums- und Uhrzeitangaben, die in ISO 8601 beschrieben.</span><span class="sxs-lookup"><span data-stu-id="efed9-189">The value space of an attribute or element that contains date and time content is closely related to the dates and times described in ISO 8601.</span></span> <span data-ttu-id="efed9-190">Beim Erstellen eines Attributs oder Elements, das Datum und Uhrzeit-Inhalt enthält, werden die Attribut- oder Elementwerte gemäß der W3C-Spezifikation formatiert.</span><span class="sxs-lookup"><span data-stu-id="efed9-190">When creating an attribute or element that contains date and time content, the attribute or element values are formatted per the W3C specification.</span></span> <span data-ttu-id="efed9-191">Finden Sie weitere Details die W3C-Spezifikation.</span><span class="sxs-lookup"><span data-stu-id="efed9-191">See the W3C specification for more details.</span></span>  
  
 <span data-ttu-id="efed9-192">Verhalten ist lax, bei der Umwandlung in einen <xref:System.DateTime> über ein Attribut oder Element.</span><span class="sxs-lookup"><span data-stu-id="efed9-192">Behavior is lax when casting to a <xref:System.DateTime> from an attribute or element.</span></span> <span data-ttu-id="efed9-193">Selbst wenn der Wert von Attribut- oder Elementwert genau gemäß der W3C-Spezifikation nicht formatiert ist, wird der Wert entsprechend in konvertiert eine <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="efed9-193">Even if the attribute or element value is not formatted exactly per the W3C specification, the value is appropriately converted to a <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="efed9-194">Dieser Konvertierungsoperator verwendet <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> Konvertieren von einem <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="efed9-194">This conversion operator uses <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> to convert from a <xref:System.DateTime>.</span></span>  
 
## Examples  
 <span data-ttu-id="efed9-195">Das folgende Beispiel erstellt ein Attribut mit Datum und Uhrzeit-Inhalt.</span><span class="sxs-lookup"><span data-stu-id="efed9-195">The following example creates an attribute with date and time content.</span></span> <span data-ttu-id="efed9-196">Klicken Sie dann wandelt es <xref:System.DateTime> zum Abrufen des Werts.</span><span class="sxs-lookup"><span data-stu-id="efed9-196">It then casts it to <xref:System.DateTime> to retrieve the value.</span></span>  
  
```csharp  
// Behavior is strict when formatting an XML element or attribute from a DateTime,  
// but behavior is lax when casting to a DateTime from an element or attribute.  
  
XElement root = new XElement("Root",  
    new XAttribute("Att", new DateTime(2006, 10, 6, 12, 30, 0))  
);  
Console.WriteLine(root);  
  
// casting from a strictly formatted XML attribute  
DateTime dt = (DateTime)root.Attribute("Att");  
Console.WriteLine("dt={0}", dt);  
Console.WriteLine("-----");  
  
// if root is formatted in some different way than the standard ISO 8601, if at all possible,  
// the value is appropriately converted to DateTime  
  
XAttribute dtAtt = new XAttribute("OrderDate", "October 6, 2006");  
Console.WriteLine(dtAtt);  
DateTime orderDate = (DateTime)dtAtt;  
Console.WriteLine("OrderDate={0:d}", orderDate);  
```  
  
```vb  
' Behavior is strict when formatting an XML element or attribute from a DateTime,  
' but behavior is lax when casting to a DateTime from an element or attribute.  
Dim root As XElement = <Root Att=<%= New DateTime(2006, 10, 6, 12, 30, 0) %>/>  
  
Console.WriteLine(root)  
  
' casting from a strictly formatted XML attribute  
Dim dt As DateTime = CType(root.Attribute("Att"), DateTime)  
Console.WriteLine("dt={0}", dt)  
Console.WriteLine("-----")  
  
' if root is formatted in some different way than the standard ISO 8601, if at all possible,  
' the value is appropriately converted to DateTime  
Dim dtAtt As XAttribute = New XAttribute("OrderDate", "October 6, 2006")  
Console.WriteLine(dtAtt)  
Dim orderDate As DateTime = CType(dtAtt, DateTime)  
Console.WriteLine("OrderDate={0:d}", orderDate)  
```  
  
 <span data-ttu-id="efed9-197">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="efed9-197">This example produces the following output:</span></span>  
  
```  
<Root Att="2006-10-06T12:30:00" />  
dt=10/6/2006 12:30:00 PM  
-----  
OrderDate="October 6, 2006"  
OrderDate=10/6/2006  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="efed9-198">Das Attribut enthält keinen gültigen <see cref="T:System.DateTime" />-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-198">The attribute does not contain a valid <see cref="T:System.DateTime" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="efed9-199">Der <paramref name="attribute" />-Parameter ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-199">The <paramref name="attribute" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTime}" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator DateTimeOffset (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.DateTimeOffset op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTimeOffset" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator DateTimeOffset(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Xml.Linq.XAttribute -&gt; DateTimeOffset" Usage="System.Xml.Linq.XAttribute.op_Explicit attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="efed9-200">Das <see cref="T:System.Xml.Linq.XAttribute" />, das in <see cref="T:System.DateTimeOffset" /> umgewandelt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-200">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.DateTimeOffset" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="efed9-201">Wandelt den Wert dieses <see cref="T:System.Xml.Linq.XAttribute" /> in einen <see cref="T:System.DateTimeOffset" /> um.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-201">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.DateTimeOffset" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="efed9-202">Ein <see cref="T:System.DateTimeOffset" />, das den Inhalt dieses <see cref="T:System.Xml.Linq.XAttribute" /> enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-202">A <see cref="T:System.DateTimeOffset" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efed9-203">Dieser Konvertierungsoperator verwendet die <xref:System.Xml.XmlConvert> Klasse, um die Konvertierung erforderlich sind.</span><span class="sxs-lookup"><span data-stu-id="efed9-203">This conversion operator uses the <xref:System.Xml.XmlConvert> class to do the conversion.</span></span>  

## Examples  
 <span data-ttu-id="efed9-204">Das folgende Beispiel erstellt ein Attribut mit Datum und Uhrzeit-Inhalt.</span><span class="sxs-lookup"><span data-stu-id="efed9-204">The following example creates an attribute with date and time content.</span></span> <span data-ttu-id="efed9-205">Klicken Sie dann wandelt es <xref:System.DateTimeOffset> zum Abrufen des Werts.</span><span class="sxs-lookup"><span data-stu-id="efed9-205">It then casts it to <xref:System.DateTimeOffset> to retrieve the value.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att", new DateTimeOffset(new DateTime(2006, 10, 6, 12, 30, 0)))  
);  
Console.WriteLine(root);  
  
// casting from a strictly formatted XML attribute  
DateTimeOffset dt = (DateTimeOffset)root.Attribute("Att");  
Console.WriteLine("dt={0}", dt);  
```  
  
```vb  
Dim root As XElement = _  
    <Root  
        Att=<%= New DateTimeOffset(New DateTime(2006, 10, 6, 12, 30, 0)) %>/>  
Console.WriteLine(root)  
  
' casting from a strictly formatted XML attribute  
Dim dt As DateTimeOffset = CType(root.Attribute("Att"), DateTimeOffset)  
Console.WriteLine("dt={0}", dt)  
```  
  
 <span data-ttu-id="efed9-206">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="efed9-206">This example produces the following output:</span></span>  
  
```  
<Root Att="2006-10-06T12:30:00-07:00" />  
dt=10/6/2006 12:30:00 PM -07:00  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="efed9-207">Das Attribut enthält keinen gültigen <see cref="T:System.DateTimeOffset" />-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-207">The attribute does not contain a valid <see cref="T:System.DateTimeOffset" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="efed9-208">Der <paramref name="attribute" />-Parameter ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-208">The <paramref name="attribute" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTimeOffset}" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator decimal (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Decimal(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Xml.Linq.XAttribute -&gt; decimal" Usage="System.Xml.Linq.XAttribute.op_Explicit attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="efed9-209">Das <see cref="T:System.Xml.Linq.XAttribute" />, das in <see cref="T:System.Decimal" /> umgewandelt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-209">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.Decimal" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="efed9-210">Wandelt den Wert dieses <see cref="T:System.Xml.Linq.XAttribute" /> in einen <see cref="T:System.Decimal" /> um.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-210">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Decimal" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="efed9-211">Ein <see cref="T:System.Decimal" />, das den Inhalt dieses <see cref="T:System.Xml.Linq.XAttribute" /> enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-211">A <see cref="T:System.Decimal" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[## Examples  
 <span data-ttu-id="efed9-212">Das folgende Beispiel erstellt ein Attribut mit einem Dezimalwert.</span><span class="sxs-lookup"><span data-stu-id="efed9-212">The following example creates an attribute with a decimal value.</span></span> <span data-ttu-id="efed9-213">Klicken Sie dann der Wert des Attributs durch Umwandeln in abgerufen <xref:System.Decimal>.</span><span class="sxs-lookup"><span data-stu-id="efed9-213">It then retrieves the value of the attribute by casting to <xref:System.Decimal>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att", "79228162514264337593543950335")  
);  
decimal value = (decimal)root.Attribute("Att");  
Console.WriteLine("value={0}", value);  
```  
  
```vb  
Dim root As XElement = <Root Att="79228162514264337593543950335"/>  
Dim value As Decimal = CDec(root.Attribute("Att"))  
Console.WriteLine("value={0}", value)  
```  
  
 <span data-ttu-id="efed9-214">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="efed9-214">This example produces the following output:</span></span>  
  
```  
value=79228162514264337593543950335  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="efed9-215">Das Attribut enthält keinen gültigen <see cref="T:System.Decimal" />-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-215">The attribute does not contain a valid <see cref="T:System.Decimal" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="efed9-216">Der <paramref name="attribute" />-Parameter ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-216">The <paramref name="attribute" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Decimal}" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator double (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname float64 op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Double" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator double(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Xml.Linq.XAttribute -&gt; double" Usage="System.Xml.Linq.XAttribute.op_Explicit attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="efed9-217">Das <see cref="T:System.Xml.Linq.XAttribute" />, das in <see cref="T:System.Double" /> umgewandelt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-217">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.Double" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="efed9-218">Wandelt den Wert dieses <see cref="T:System.Xml.Linq.XAttribute" /> in einen <see cref="T:System.Double" /> um.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-218">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Double" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="efed9-219">Ein <see cref="T:System.Double" />, das den Inhalt dieses <see cref="T:System.Xml.Linq.XAttribute" /> enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-219">A <see cref="T:System.Double" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[## Examples  
 <span data-ttu-id="efed9-220">Das folgende Beispiel erstellt ein Attribut mit <xref:System.Double> Inhalt.</span><span class="sxs-lookup"><span data-stu-id="efed9-220">The following example creates an attribute with <xref:System.Double> content.</span></span> <span data-ttu-id="efed9-221">Klicken Sie dann Ruft den Wert ab, indem Sie eine Umwandlung zu <xref:System.Double>.</span><span class="sxs-lookup"><span data-stu-id="efed9-221">It then retrieves the value by casting to <xref:System.Double>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att", 1.79769313486231e308)  
);  
double value = (double)root.Attribute("Att");  
Console.WriteLine("value={0}", value);  
```  
  
```vb  
Dim root As XElement = <Root Att="1.79769313486231E+308"/>  
Dim value As Double = CDbl(root.Attribute("Att"))  
Console.WriteLine("value={0}", value)  
```  
  
 <span data-ttu-id="efed9-222">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="efed9-222">This example produces the following output:</span></span>  
  
```  
value=1.79769313486231E+308  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="efed9-223">Das Attribut enthält keinen gültigen <see cref="T:System.Double" />-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-223">The attribute does not contain a valid <see cref="T:System.Double" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="efed9-224">Der <paramref name="attribute" />-Parameter ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-224">The <paramref name="attribute" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Double}" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator Guid (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Guid op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Guid" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator Guid(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Xml.Linq.XAttribute -&gt; Guid" Usage="System.Xml.Linq.XAttribute.op_Explicit attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="efed9-225">Das <see cref="T:System.Xml.Linq.XAttribute" />, das in <see cref="T:System.Guid" /> umgewandelt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-225">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.Guid" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="efed9-226">Wandelt den Wert dieses <see cref="T:System.Xml.Linq.XAttribute" /> in einen <see cref="T:System.Guid" /> um.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-226">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Guid" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="efed9-227">Ein <see cref="T:System.Guid" />, das den Inhalt dieses <see cref="T:System.Xml.Linq.XAttribute" /> enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-227">A <see cref="T:System.Guid" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[## Examples  
 <span data-ttu-id="efed9-228">Im folgende Beispiel wird ein Attribut mit einer GUID als Inhalt erstellt.</span><span class="sxs-lookup"><span data-stu-id="efed9-228">The following example creates an attribute with a GUID as content.</span></span> <span data-ttu-id="efed9-229">Klicken Sie dann Ruft den Wert ab, indem Sie eine Umwandlung zu <xref:System.Guid>.</span><span class="sxs-lookup"><span data-stu-id="efed9-229">It then retrieves the value by casting to <xref:System.Guid>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att", new Guid("3c1cc55b-baff-4b7a-9d17-077af3aa5730"))  
);  
Guid value = (Guid)root.Attribute("Att");  
Console.WriteLine("value={0}", value);  
```  
  
```vb  
Dim root As XElement = <Root Att=<%= New Guid("3c1cc55b-baff-4b7a-9d17-077af3aa5730") %>/>  
Dim value As Guid = CType(root.Attribute("Att"), Guid)  
Console.WriteLine("value={0}", value)  
```  
  
 <span data-ttu-id="efed9-230">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="efed9-230">This example produces the following output:</span></span>  
  
```  
value=3c1cc55b-baff-4b7a-9d17-077af3aa5730  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="efed9-231">Das Attribut enthält keinen gültigen <see cref="T:System.Guid" />-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-231">The attribute does not contain a valid <see cref="T:System.Guid" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="efed9-232">Der <paramref name="attribute" />-Parameter ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-232">The <paramref name="attribute" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Guid}" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator int (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int32 op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int32" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator int(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Xml.Linq.XAttribute -&gt; int" Usage="System.Xml.Linq.XAttribute.op_Explicit attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="efed9-233">Das <see cref="T:System.Xml.Linq.XAttribute" />, das in <see cref="T:System.Int32" /> umgewandelt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-233">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.Int32" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="efed9-234">Wandelt den Wert dieses <see cref="T:System.Xml.Linq.XAttribute" /> in einen <see cref="T:System.Int32" /> um.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-234">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to an <see cref="T:System.Int32" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="efed9-235">Ein <see cref="T:System.Int32" />, das den Inhalt dieses <see cref="T:System.Xml.Linq.XAttribute" /> enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-235">A <see cref="T:System.Int32" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[## Examples  
 <span data-ttu-id="efed9-236">Im folgende Beispiel wird ein Attribut mit einer ganzen Zahl als Inhalt erstellt.</span><span class="sxs-lookup"><span data-stu-id="efed9-236">The following example creates an attribute with an integer as content.</span></span> <span data-ttu-id="efed9-237">Klicken Sie dann Ruft den Wert ab, indem Sie eine Umwandlung zu <xref:System.Int32>.</span><span class="sxs-lookup"><span data-stu-id="efed9-237">It then retrieves the value by casting to <xref:System.Int32>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att", 2147483647)  
);  
int value = (int)root.Attribute("Att");  
Console.WriteLine("value={0}", value);  
```  
  
```vb  
Dim root As XElement = <Root Att="2147483647"/>  
Dim value As Integer = CInt(root.Attribute("Att"))  
Console.WriteLine("value={0}", value)  
```  
  
 <span data-ttu-id="efed9-238">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="efed9-238">This example produces the following output:</span></span>  
  
```  
value=2147483647  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="efed9-239">Das Attribut enthält keinen gültigen <see cref="T:System.Int32" />-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-239">The attribute does not contain a valid <see cref="T:System.Int32" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="efed9-240">Der <paramref name="attribute" />-Parameter ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-240">The <paramref name="attribute" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Int32}" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator long (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int64 op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int64" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator long(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Xml.Linq.XAttribute -&gt; int64" Usage="System.Xml.Linq.XAttribute.op_Explicit attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="efed9-241">Das <see cref="T:System.Xml.Linq.XAttribute" />, das in <see cref="T:System.Int64" /> umgewandelt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-241">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.Int64" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="efed9-242">Wandelt den Wert dieses <see cref="T:System.Xml.Linq.XAttribute" /> in einen <see cref="T:System.Int64" /> um.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-242">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to an <see cref="T:System.Int64" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="efed9-243">Ein <see cref="T:System.Int64" />, das den Inhalt dieses <see cref="T:System.Xml.Linq.XAttribute" /> enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-243">A <see cref="T:System.Int64" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[## Examples  
 <span data-ttu-id="efed9-244">Im folgende Beispiel wird ein Attribut mit einer langen ganzen Zahl als Inhalt erstellt.</span><span class="sxs-lookup"><span data-stu-id="efed9-244">The following example creates an attribute with a long integer as content.</span></span> <span data-ttu-id="efed9-245">Klicken Sie dann der Wert des Attributs durch Umwandeln in abgerufen <xref:System.Int64>.</span><span class="sxs-lookup"><span data-stu-id="efed9-245">It then retrieves the value of the attribute by casting to <xref:System.Int64>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att", 9223372036854775807)  
);  
long value = (long)root.Attribute("Att");  
Console.WriteLine("value={0}", value);  
```  
  
```vb  
Dim root As XElement = <Root Att="9223372036854775807"/>  
Dim value As Long = CLng(root.Attribute("Att"))  
Console.WriteLine("value={0}", value)  
```  
  
 <span data-ttu-id="efed9-246">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="efed9-246">This example produces the following output:</span></span>  
  
```  
value=9223372036854775807  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="efed9-247">Das Attribut enthält keinen gültigen <see cref="T:System.Int64" />-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-247">The attribute does not contain a valid <see cref="T:System.Int64" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="efed9-248">Der <paramref name="attribute" />-Parameter ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-248">The <paramref name="attribute" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Int64}" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator Nullable&lt;bool&gt; (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Nullable`1&lt;bool&gt; op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Boolean}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator Nullable&lt;bool&gt;(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Xml.Linq.XAttribute -&gt; Nullable&lt;bool&gt;" Usage="System.Xml.Linq.XAttribute.op_Explicit attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="efed9-249">Das <see cref="T:System.Xml.Linq.XAttribute" />, das in ein <see cref="T:System.Nullable`1" /> vom Typ <see cref="T:System.Boolean" /> umgewandelt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-249">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.Nullable`1" /> of <see cref="T:System.Boolean" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="efed9-250">Wandelt den Wert dieses <see cref="T:System.Xml.Linq.XAttribute" /> in ein <see cref="T:System.Nullable`1" /> vom Typ <see cref="T:System.Boolean" /> um.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-250">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.Boolean" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="efed9-251">Ein <see cref="T:System.Nullable`1" /> vom Typ <see cref="T:System.Boolean" />, das den Inhalt dieses <see cref="T:System.Xml.Linq.XAttribute" /> enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-251">A <see cref="T:System.Nullable`1" /> of <see cref="T:System.Boolean" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efed9-252">Beim Konvertieren in <xref:System.Boolean> über ein Attribut oder Element, nach dem verkürzen und die Konvertierung in Kleinbuchstaben zulässige Werte sind "0", "1", und eine beliebige Zeichenfolge, die von "true" erstellt oder "False".</span><span class="sxs-lookup"><span data-stu-id="efed9-252">When converting to <xref:System.Boolean> from an attribute or element, allowed values are "0", "1", and any string that produces "true" or "false" after trimming and conversion to lower case.</span></span>  

## Examples  
 <span data-ttu-id="efed9-253">Im folgende Beispiel wird ein Attribut mit booleschem Inhalt erstellt.</span><span class="sxs-lookup"><span data-stu-id="efed9-253">The following example creates an attribute with Boolean content.</span></span> <span data-ttu-id="efed9-254">Klicken Sie dann Ruft den Wert ab, indem Sie eine Umwandlung zu <xref:System.Nullable%601> von <xref:System.Boolean>.</span><span class="sxs-lookup"><span data-stu-id="efed9-254">It then retrieves the value by casting to <xref:System.Nullable%601> of <xref:System.Boolean>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",   
    new XAttribute("BoolValue1", true),  
    new XAttribute("BoolValue2", false)  
);  
bool? bool1 = (bool?)root.Attribute("BoolValue1");  
bool? bool2 = (bool?)root.Attribute("BoolValue2");  
Console.WriteLine("Nullable boolean: BoolValue1={0}", bool1);  
Console.WriteLine("Nullable boolean: BoolValue2={0}", bool2);  
```  
  
```vb  
Dim root As XElement = <Root BoolValue1="true" BoolValue2="false"/>  
Dim bool1 As Nullable(Of Boolean) = CType(root.Attribute("BoolValue1"), Nullable(Of Boolean))  
Dim bool2 As Nullable(Of Boolean) = CType(root.Attribute("BoolValue2"), Nullable(Of Boolean))  
Console.WriteLine("Nullable boolean: BoolValue1={0}", bool1)  
Console.WriteLine("Nullable boolean: BoolValue2={0}", bool2)  
```  
  
 <span data-ttu-id="efed9-255">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="efed9-255">This example produces the following output:</span></span>  
  
```  
Nullable boolean: BoolValue1=True  
Nullable boolean: BoolValue2=False  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="efed9-256">Das Attribut enthält keinen gültigen <see cref="T:System.Boolean" />-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-256">The attribute does not contain a valid <see cref="T:System.Boolean" /> value.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Boolean" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator Nullable&lt;DateTime&gt; (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTime}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As Nullable(Of DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator Nullable&lt;DateTime&gt;(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Xml.Linq.XAttribute -&gt; Nullable&lt;DateTime&gt;" Usage="System.Xml.Linq.XAttribute.op_Explicit attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTime&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="efed9-257">Das <see cref="T:System.Xml.Linq.XAttribute" />, das in ein <see cref="T:System.Nullable`1" /> vom Typ <see cref="T:System.DateTime" /> umgewandelt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-257">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.DateTime" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="efed9-258">Wandelt den Wert dieses <see cref="T:System.Xml.Linq.XAttribute" /> in ein <see cref="T:System.Nullable`1" /> vom Typ <see cref="T:System.DateTime" /> um.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-258">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.DateTime" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="efed9-259">Ein <see cref="T:System.Nullable`1" /> vom Typ <see cref="T:System.DateTime" />, das den Inhalt dieses <see cref="T:System.Xml.Linq.XAttribute" /> enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-259">A <see cref="T:System.Nullable`1" /> of <see cref="T:System.DateTime" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efed9-260">Der Wertebereich eines Attributs oder Elements, Datum und Uhrzeit enthält, ist eng an die Datums- und Uhrzeitangaben, die in ISO 8601 beschrieben.</span><span class="sxs-lookup"><span data-stu-id="efed9-260">The value space of an attribute or element that contains date and time content is closely related to the dates and times described in ISO 8601.</span></span> <span data-ttu-id="efed9-261">Beim Erstellen eines Attributs oder Elements, das Datum und Uhrzeit-Inhalt enthält, werden die Attribut- oder Elementwerte gemäß der W3C-Spezifikation formatiert.</span><span class="sxs-lookup"><span data-stu-id="efed9-261">When creating an attribute or element that contains date and time content, the attribute or element values are formatted per the W3C specification.</span></span> <span data-ttu-id="efed9-262">Finden Sie weitere Details die W3C-Spezifikation.</span><span class="sxs-lookup"><span data-stu-id="efed9-262">See the W3C specification for more details.</span></span>  
  
 <span data-ttu-id="efed9-263">Verhalten ist lax, bei der Umwandlung in einen <xref:System.Nullable%601> von <xref:System.DateTime> über ein Attribut oder Element.</span><span class="sxs-lookup"><span data-stu-id="efed9-263">Behavior is lax when casting to a <xref:System.Nullable%601> of <xref:System.DateTime> from an attribute or element.</span></span> <span data-ttu-id="efed9-264">Selbst wenn der Wert von Attribut- oder Elementwert genau gemäß der W3C-Spezifikation nicht formatiert ist, wird der Wert entsprechend in konvertiert eine <xref:System.Nullable%601> von <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="efed9-264">Even if the attribute or element value is not formatted exactly per the W3C specification, the value is appropriately converted to a <xref:System.Nullable%601> of <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="efed9-265">Dieser Konvertierungsoperator verwendet <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> Konvertieren von einem <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="efed9-265">This conversion operator uses <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> to convert from a <xref:System.DateTime>.</span></span>  
  
## Examples  
 <span data-ttu-id="efed9-266">Das folgende Beispiel erstellt ein Attribut mit einer Datums- und Uhrzeitangabe als Inhalt.</span><span class="sxs-lookup"><span data-stu-id="efed9-266">The following example creates an attribute with a date and time as content.</span></span> <span data-ttu-id="efed9-267">Klicken Sie dann Ruft den Wert ab, indem Sie eine Umwandlung zu <xref:System.Nullable%601> von <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="efed9-267">It then retrieves the value by casting to <xref:System.Nullable%601> of <xref:System.DateTime>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att", new DateTime(2006, 10, 6, 12, 30, 0))  
);  
DateTime? value = (DateTime?)root.Attribute("Att");  
Console.WriteLine("Nullable DateTime: value={0}", value == null ? "null" : value.ToString());  
```  
  
```vb  
Dim root As XElement = <Root Att=<%= New DateTime(2006, 10, 6, 12, 30, 0) %>/>  
Dim value As Nullable(Of DateTime) = CType(root.Attribute("Att"), Nullable(Of DateTime))  
Console.WriteLine("Nullable DateTime: value={0}", IIf(value.HasValue, value.ToString(), "null"))  
```  
  
 <span data-ttu-id="efed9-268">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="efed9-268">This example produces the following output:</span></span>  
  
```  
Nullable DateTime: value=10/6/2006 12:30:00 PM  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="efed9-269">Das Attribut enthält keinen gültigen <see cref="T:System.DateTime" />-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-269">The attribute does not contain a valid <see cref="T:System.DateTime" /> value.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTime" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator Nullable&lt;DateTimeOffset&gt; (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTimeOffset}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As Nullable(Of DateTimeOffset)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator Nullable&lt;DateTimeOffset&gt;(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Xml.Linq.XAttribute -&gt; Nullable&lt;DateTimeOffset&gt;" Usage="System.Xml.Linq.XAttribute.op_Explicit attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTimeOffset&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="efed9-270">Das <see cref="T:System.Xml.Linq.XAttribute" />, das in ein <see cref="T:System.Nullable`1" /> vom Typ <see cref="T:System.DateTimeOffset" /> umgewandelt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-270">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.DateTimeOffset" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="efed9-271">Wandelt den Wert dieses <see cref="T:System.Xml.Linq.XAttribute" /> in ein <see cref="T:System.Nullable`1" /> vom Typ <see cref="T:System.DateTimeOffset" /> um.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-271">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.DateTimeOffset" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="efed9-272">Ein <see cref="T:System.Nullable`1" /> vom Typ <see cref="T:System.DateTimeOffset" />, das den Inhalt dieses <see cref="T:System.Xml.Linq.XAttribute" /> enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-272">A <see cref="T:System.Nullable`1" /> of <see cref="T:System.DateTimeOffset" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efed9-273">Dieser Konvertierungsoperator verwendet die <xref:System.Xml.XmlConvert> Klasse, um die Konvertierung erforderlich sind.</span><span class="sxs-lookup"><span data-stu-id="efed9-273">This conversion operator uses the <xref:System.Xml.XmlConvert> class to do the conversion.</span></span>  
 
## Examples  
 <span data-ttu-id="efed9-274">Das folgende Beispiel erstellt ein Attribut mit einer Datums- und Uhrzeitangabe als Inhalt.</span><span class="sxs-lookup"><span data-stu-id="efed9-274">The following example creates an attribute with a date and time as content.</span></span> <span data-ttu-id="efed9-275">Klicken Sie dann Ruft den Wert ab, indem Sie eine Umwandlung zu <xref:System.Nullable%601> von <xref:System.DateTimeOffset>.</span><span class="sxs-lookup"><span data-stu-id="efed9-275">It then retrieves the value by casting to <xref:System.Nullable%601> of <xref:System.DateTimeOffset>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att", new DateTimeOffset(new DateTime(2006, 10, 6, 12, 30, 0)))  
);  
DateTimeOffset? value = (DateTimeOffset?)root.Attribute("Att");  
Console.WriteLine("Nullable DateTimeOffset: value={0}", value == null ? "null" : value.ToString());  
```  
  
```vb  
Dim root As XElement = _  
    <Root  
        Att=<%= New DateTimeOffset(New DateTime(2006, 10, 6, 12, 30, 0)) %>/>  
Dim value As Nullable(Of DateTimeOffset) = CType(root.Attribute("Att"), Nullable(Of DateTimeOffset))  
Console.WriteLine("Nullable DateTimeOffset: value={0}", IIf(value.HasValue, value.ToString(), "null"))  
```  
  
 <span data-ttu-id="efed9-276">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="efed9-276">This example produces the following output:</span></span>  
  
```  
Nullable DateTimeOffset: value=10/6/2006 12:30:00 PM -07:00  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="efed9-277">Das Attribut enthält keinen gültigen <see cref="T:System.DateTimeOffset" />-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-277">The attribute does not contain a valid <see cref="T:System.DateTimeOffset" /> value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator Nullable&lt;decimal&gt; (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Decimal}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As Nullable(Of Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator Nullable&lt;System::Decimal&gt;(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Xml.Linq.XAttribute -&gt; Nullable&lt;decimal&gt;" Usage="System.Xml.Linq.XAttribute.op_Explicit attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Decimal&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="efed9-278">Das <see cref="T:System.Xml.Linq.XAttribute" />, das in ein <see cref="T:System.Nullable`1" /> vom Typ <see cref="T:System.Decimal" /> umgewandelt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-278">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.Nullable`1" /> of <see cref="T:System.Decimal" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="efed9-279">Wandelt den Wert dieses <see cref="T:System.Xml.Linq.XAttribute" /> in ein <see cref="T:System.Nullable`1" /> vom Typ <see cref="T:System.Decimal" /> um.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-279">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.Decimal" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="efed9-280">Ein <see cref="T:System.Nullable`1" /> vom Typ <see cref="T:System.Decimal" />, das den Inhalt dieses <see cref="T:System.Xml.Linq.XAttribute" /> enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-280">A <see cref="T:System.Nullable`1" /> of <see cref="T:System.Decimal" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[## Examples  
 <span data-ttu-id="efed9-281">Im folgende Beispiel wird ein Attribut mit decimal Inhalt erstellt.</span><span class="sxs-lookup"><span data-stu-id="efed9-281">The following example creates an attribute with decimal content.</span></span> <span data-ttu-id="efed9-282">Klicken Sie dann Ruft den Wert ab, indem Sie eine Umwandlung zu <xref:System.Nullable%601> von <xref:System.Decimal>.</span><span class="sxs-lookup"><span data-stu-id="efed9-282">It then retrieves the value by casting to <xref:System.Nullable%601> of <xref:System.Decimal>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att", "79228162514264337593543950335")  
);  
decimal? value = (decimal?)root.Attribute("Att");  
Console.WriteLine("Nullable decimal: value={0}", value == null ? "null" : value.ToString());  
```  
  
```vb  
Dim root As XElement = <Root Att="79228162514264337593543950335"/>  
Dim value As Nullable(Of Decimal) = CType(root.Attribute("Att"), Nullable(Of Decimal))  
Console.WriteLine("Nullable decimal: value={0}", IIf(value.HasValue, value.ToString(), "null"))  
```  
  
 <span data-ttu-id="efed9-283">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="efed9-283">This example produces the following output:</span></span>  
  
```  
Nullable decimal: value=79228162514264337593543950335  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="efed9-284">Das Attribut enthält keinen gültigen <see cref="T:System.Decimal" />-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-284">The attribute does not contain a valid <see cref="T:System.Decimal" /> value.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator Nullable&lt;double&gt; (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Nullable`1&lt;float64&gt; op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Double}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator Nullable&lt;double&gt;(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Xml.Linq.XAttribute -&gt; Nullable&lt;double&gt;" Usage="System.Xml.Linq.XAttribute.op_Explicit attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="efed9-285">Das <see cref="T:System.Xml.Linq.XAttribute" />, das in ein <see cref="T:System.Nullable`1" /> vom Typ <see cref="T:System.Double" /> umgewandelt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-285">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.Nullable`1" /> of <see cref="T:System.Double" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="efed9-286">Wandelt den Wert dieses <see cref="T:System.Xml.Linq.XAttribute" /> in ein <see cref="T:System.Nullable`1" /> vom Typ <see cref="T:System.Double" /> um.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-286">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.Double" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="efed9-287">Ein <see cref="T:System.Nullable`1" /> vom Typ <see cref="T:System.Double" />, das den Inhalt dieses <see cref="T:System.Xml.Linq.XAttribute" /> enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-287">A <see cref="T:System.Nullable`1" /> of <see cref="T:System.Double" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[## Examples  
 <span data-ttu-id="efed9-288">Das folgende Beispiel erstellt ein Attribut mit doppelter Genauigkeit, Gleitkomma-Inhalte.</span><span class="sxs-lookup"><span data-stu-id="efed9-288">The following example creates an attribute with double precision floating point content.</span></span> <span data-ttu-id="efed9-289">Klicken Sie dann Ruft den Wert ab, indem Sie eine Umwandlung zu <xref:System.Nullable%601> von <xref:System.Double>.</span><span class="sxs-lookup"><span data-stu-id="efed9-289">It then retrieves the value by casting to <xref:System.Nullable%601> of <xref:System.Double>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att", 1.79769313486231e308)  
);  
double? value = (double?)root.Attribute("Att");  
Console.WriteLine("Nullable double: value={0}", value == null ? "null" : value.ToString());  
```  
  
```vb  
Dim root As XElement = <Root Att="1.79769313486231E+308"/>  
Dim value As Nullable(Of Double) = CType(root.Attribute("Att"), Nullable(Of Double))  
Console.WriteLine("Nullable double: value={0}", IIf(value.HasValue, value.ToString(), "null"))  
```  
  
 <span data-ttu-id="efed9-290">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="efed9-290">This example produces the following output:</span></span>  
  
```  
Nullable double: value=1.79769313486231E+308  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="efed9-291">Das Attribut enthält keinen gültigen <see cref="T:System.Double" />-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-291">The attribute does not contain a valid <see cref="T:System.Double" /> value.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Double" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator Nullable&lt;Guid&gt; (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Nullable`1&lt;valuetype System.Guid&gt; op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Guid}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As Nullable(Of Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator Nullable&lt;Guid&gt;(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Xml.Linq.XAttribute -&gt; Nullable&lt;Guid&gt;" Usage="System.Xml.Linq.XAttribute.op_Explicit attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Guid&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="efed9-292">Das <see cref="T:System.Xml.Linq.XAttribute" />, das in ein <see cref="T:System.Nullable`1" /> vom Typ <see cref="T:System.Guid" /> umgewandelt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-292">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.Guid" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="efed9-293">Wandelt den Wert dieses <see cref="T:System.Xml.Linq.XAttribute" /> in ein <see cref="T:System.Nullable`1" /> vom Typ <see cref="T:System.Guid" /> um.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-293">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.Guid" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="efed9-294">Ein <see cref="T:System.Nullable`1" /> vom Typ <see cref="T:System.Guid" />, das den Inhalt dieses <see cref="T:System.Xml.Linq.XAttribute" /> enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-294">A <see cref="T:System.Nullable`1" /> of <see cref="T:System.Guid" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[## Examples  
 <span data-ttu-id="efed9-295">Das folgende Beispiel erstellt ein Attribut mit Guid-Inhalt.</span><span class="sxs-lookup"><span data-stu-id="efed9-295">The following example creates an attribute with guid content.</span></span> <span data-ttu-id="efed9-296">Klicken Sie dann Ruft den Wert ab, indem Sie eine Umwandlung zu <xref:System.Nullable%601> von <xref:System.Guid>.</span><span class="sxs-lookup"><span data-stu-id="efed9-296">It then retrieves the value by casting to <xref:System.Nullable%601> of <xref:System.Guid>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att", new Guid("3c1cc55b-baff-4b7a-9d17-077af3aa5730"))  
);  
Guid? value = (Guid?)root.Attribute("Att");  
Console.WriteLine("Nullable Guid: value={0}", value == null ? "null" : value.ToString());  
```  
  
```vb  
Dim root As XElement = <Root Att=<%= New Guid("3c1cc55b-baff-4b7a-9d17-077af3aa5730") %>/>  
Dim value As Nullable(Of Guid) = CType(root.Attribute("Att"), Nullable(Of Guid))  
Console.WriteLine("Nullable Guid: value={0}", IIf(value.HasValue, value.ToString(), "null"))  
```  
  
 <span data-ttu-id="efed9-297">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="efed9-297">This example produces the following output:</span></span>  
  
```  
Nullable Guid: value=3c1cc55b-baff-4b7a-9d17-077af3aa5730  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="efed9-298">Das Attribut enthält keinen gültigen <see cref="T:System.Guid" />-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-298">The attribute does not contain a valid <see cref="T:System.Guid" /> value.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Guid" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator Nullable&lt;int&gt; (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Nullable`1&lt;int32&gt; op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Int32}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator Nullable&lt;int&gt;(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Xml.Linq.XAttribute -&gt; Nullable&lt;int&gt;" Usage="System.Xml.Linq.XAttribute.op_Explicit attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="efed9-299">Das <see cref="T:System.Xml.Linq.XAttribute" />, das in ein <see cref="T:System.Nullable`1" /> vom Typ <see cref="T:System.Int32" /> umgewandelt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-299">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.Int32" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="efed9-300">Wandelt den Wert dieses <see cref="T:System.Xml.Linq.XAttribute" /> in ein <see cref="T:System.Nullable`1" /> vom Typ <see cref="T:System.Int32" /> um.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-300">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.Int32" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="efed9-301">Ein <see cref="T:System.Nullable`1" /> vom Typ <see cref="T:System.Int32" />, das den Inhalt dieses <see cref="T:System.Xml.Linq.XAttribute" /> enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-301">A <see cref="T:System.Nullable`1" /> of <see cref="T:System.Int32" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[## Examples  
 <span data-ttu-id="efed9-302">Das folgende Beispiel erstellt ein Attribut mit Integer-Inhalt.</span><span class="sxs-lookup"><span data-stu-id="efed9-302">The following example creates an attribute with integer content.</span></span> <span data-ttu-id="efed9-303">Klicken Sie dann Ruft den Wert ab, indem Sie eine Umwandlung zu <xref:System.Nullable%601> von <xref:System.Int32>.</span><span class="sxs-lookup"><span data-stu-id="efed9-303">It then retrieves the value by casting to <xref:System.Nullable%601> of <xref:System.Int32>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",   
    new XAttribute("Att", 2147483647)  
);  
int? value = (int?)root.Attribute("Att");  
Console.WriteLine("Nullable int: value={0}", value == null ? "null" : value.ToString());  
```  
  
```vb  
Dim root As XElement = <Root Att="2147483647"/>  
Dim value As Nullable(Of Integer) = CType(root.Attribute("Att"), Nullable(Of Integer))  
Console.WriteLine("Nullable int: value={0}", IIf(value.HasValue, value.ToString(), "null"))  
```  
  
 <span data-ttu-id="efed9-304">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="efed9-304">This example produces the following output:</span></span>  
  
```  
Nullable int: value=2147483647  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator Nullable&lt;long&gt; (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Nullable`1&lt;int64&gt; op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Int64}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As Nullable(Of Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator Nullable&lt;long&gt;(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Xml.Linq.XAttribute -&gt; Nullable&lt;int64&gt;" Usage="System.Xml.Linq.XAttribute.op_Explicit attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="efed9-305">Das <see cref="T:System.Xml.Linq.XAttribute" />, das in ein <see cref="T:System.Nullable`1" /> vom Typ <see cref="T:System.Int64" /> umgewandelt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-305">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.Int64" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="efed9-306">Wandelt den Wert dieses <see cref="T:System.Xml.Linq.XAttribute" /> in ein <see cref="T:System.Nullable`1" /> vom Typ <see cref="T:System.Int64" /> um.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-306">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.Int64" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="efed9-307">Ein <see cref="T:System.Nullable`1" /> vom Typ <see cref="T:System.Int64" />, das den Inhalt dieses <see cref="T:System.Xml.Linq.XAttribute" /> enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-307">A <see cref="T:System.Nullable`1" /> of <see cref="T:System.Int64" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[## Examples  
 <span data-ttu-id="efed9-308">Das folgende Beispiel erstellt ein Attribut mit long integer-Wert-Inhalt.</span><span class="sxs-lookup"><span data-stu-id="efed9-308">The following example creates an attribute with long integer content.</span></span> <span data-ttu-id="efed9-309">Klicken Sie dann Ruft den Wert ab, indem Sie eine Umwandlung zu <xref:System.Nullable%601> von <xref:System.Int64>.</span><span class="sxs-lookup"><span data-stu-id="efed9-309">It then retrieves the value by casting to <xref:System.Nullable%601> of <xref:System.Int64>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",   
    new XAttribute("Att", 9223372036854775807)  
);  
long? value = (long?)root.Attribute("Att");  
Console.WriteLine("Nullable long: value={0}", value == null ? "null" : value.ToString());  
```  
  
```vb  
Dim root As XElement = <Root Att="9223372036854775807"/>  
Dim value As Nullable(Of Long) = CType(root.Attribute("Att"), Nullable(Of Long))  
Console.WriteLine("Nullable long: value={0}", IIf(value.HasValue, value.ToString(), "null"))  
```  
  
 <span data-ttu-id="efed9-310">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="efed9-310">This example produces the following output:</span></span>  
  
```  
Nullable long: value=9223372036854775807  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="efed9-311">Das Attribut enthält keinen gültigen <see cref="T:System.Int64" />-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-311">The attribute does not contain a valid <see cref="T:System.Int64" /> value.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int64" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator Nullable&lt;float&gt; (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Nullable`1&lt;float32&gt; op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Single}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As Nullable(Of Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator Nullable&lt;float&gt;(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Xml.Linq.XAttribute -&gt; Nullable&lt;single&gt;" Usage="System.Xml.Linq.XAttribute.op_Explicit attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="efed9-312">Das <see cref="T:System.Xml.Linq.XAttribute" />, das in ein <see cref="T:System.Nullable`1" /> vom Typ <see cref="T:System.Single" /> umgewandelt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-312">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.Nullable`1" /> of <see cref="T:System.Single" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="efed9-313">Wandelt den Wert dieses <see cref="T:System.Xml.Linq.XAttribute" /> in ein <see cref="T:System.Nullable`1" /> vom Typ <see cref="T:System.Single" /> um.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-313">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.Single" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="efed9-314">Ein <see cref="T:System.Nullable`1" /> vom Typ <see cref="T:System.Single" />, das den Inhalt dieses <see cref="T:System.Xml.Linq.XAttribute" /> enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-314">A <see cref="T:System.Nullable`1" /> of <see cref="T:System.Single" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[## Examples  
 <span data-ttu-id="efed9-315">Das folgende Beispiel erstellt ein Attribut mit einfacher Genauigkeit, Gleitkomma-Inhalte.</span><span class="sxs-lookup"><span data-stu-id="efed9-315">The following example creates an attribute with single precision floating point content.</span></span> <span data-ttu-id="efed9-316">Klicken Sie dann Ruft den Wert ab, indem Sie eine Umwandlung zu <xref:System.Nullable%601> von <xref:System.Single>.</span><span class="sxs-lookup"><span data-stu-id="efed9-316">It then retrieves the value by casting to <xref:System.Nullable%601> of <xref:System.Single>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",   
    new XAttribute("Att", 3.402823e38)  
);  
float? value = (float?)root.Attribute("Att");  
Console.WriteLine("Nullable Single: value={0}", value == null ? "null" : value.ToString());  
```  
  
```vb  
Dim root As XElement = <Root Att="3.402823E+38"/>  
Dim value As Nullable(Of Single) = CType(root.Attribute("Att"), Nullable(Of Single))  
Console.WriteLine("Nullable Single: value={0}", IIf(value.HasValue, value.ToString(), "null"))  
```  
  
 <span data-ttu-id="efed9-317">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="efed9-317">This example produces the following output:</span></span>  
  
```  
Nullable Single: value=3.402823E+38  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="efed9-318">Das Attribut enthält keinen gültigen <see cref="T:System.Single" />-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-318">The attribute does not contain a valid <see cref="T:System.Single" /> value.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Single" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator Nullable&lt;TimeSpan&gt; (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.TimeSpan}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As Nullable(Of TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator Nullable&lt;TimeSpan&gt;(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Xml.Linq.XAttribute -&gt; Nullable&lt;TimeSpan&gt;" Usage="System.Xml.Linq.XAttribute.op_Explicit attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="efed9-319">Das <see cref="T:System.Xml.Linq.XAttribute" />, das in ein <see cref="T:System.Nullable`1" /> vom Typ <see cref="T:System.TimeSpan" /> umgewandelt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-319">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.TimeSpan" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="efed9-320">Wandelt den Wert dieses <see cref="T:System.Xml.Linq.XAttribute" /> in ein <see cref="T:System.Nullable`1" /> vom Typ <see cref="T:System.TimeSpan" /> um.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-320">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.TimeSpan" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="efed9-321">Ein <see cref="T:System.Nullable`1" /> vom Typ <see cref="T:System.TimeSpan" />, das den Inhalt dieses <see cref="T:System.Xml.Linq.XAttribute" /> enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-321">A <see cref="T:System.Nullable`1" /> of <see cref="T:System.TimeSpan" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efed9-322">Der Wertebereich eines Attributs oder Elements, das Time spanneninhalt enthält ist zur Dauer eng wie beschrieben im ISO 8601.</span><span class="sxs-lookup"><span data-stu-id="efed9-322">The value space of an attribute or element that contains time span content is closely related to duration content as described in ISO 8601.</span></span> <span data-ttu-id="efed9-323">Beim Erstellen eines Attributs oder Elements, das Time Span-Inhalt enthält, werden die Attribut- oder Elementwerte gemäß der W3C-Spezifikation formatiert.</span><span class="sxs-lookup"><span data-stu-id="efed9-323">When creating an attribute or element that contains time span content, the attribute or element values are formatted per the W3C specification.</span></span> <span data-ttu-id="efed9-324">Informieren Sie sich die W3C-Spezifikation für die weitere Details.</span><span class="sxs-lookup"><span data-stu-id="efed9-324">Please see the W3C specification for more details.</span></span>  
  
 <span data-ttu-id="efed9-325">Verhalten ist lax, bei der Umwandlung in einen <xref:System.Nullable%601> von <xref:System.TimeSpan> über ein Attribut oder Element.</span><span class="sxs-lookup"><span data-stu-id="efed9-325">Behavior is lax when casting to a <xref:System.Nullable%601> of <xref:System.TimeSpan> from an attribute or element.</span></span> <span data-ttu-id="efed9-326">Selbst wenn der Wert von Attribut- oder Elementwert genau gemäß der W3C-Spezifikation nicht formatiert ist, wird der Wert entsprechend in konvertiert eine <xref:System.Nullable%601> von <xref:System.TimeSpan>.</span><span class="sxs-lookup"><span data-stu-id="efed9-326">Even if the attribute or element value is not formatted exactly per the W3C specification, the value is appropriately converted to a <xref:System.Nullable%601> of <xref:System.TimeSpan>.</span></span>  

## Examples  
 <span data-ttu-id="efed9-327">Im folgende Beispiel wird ein Attribut mit der Zeit erstellt.</span><span class="sxs-lookup"><span data-stu-id="efed9-327">The following example creates an attribute with time span content.</span></span> <span data-ttu-id="efed9-328">Klicken Sie dann Ruft den Wert ab, indem Sie eine Umwandlung zu <xref:System.Nullable%601> von <xref:System.TimeSpan>.</span><span class="sxs-lookup"><span data-stu-id="efed9-328">It then retrieves the value by casting to <xref:System.Nullable%601> of <xref:System.TimeSpan>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att", new TimeSpan(1, 5, 30))  
);  
TimeSpan? value = (TimeSpan?)root.Attribute("Att");  
Console.WriteLine("Nullable TimeSpan: value={0}", value == null ? "null" : value.ToString());  
```  
  
```vb  
Dim root As XElement = <Root Att=<%= New TimeSpan(1, 5, 30) %>/>  
Dim value As Nullable(Of TimeSpan) = CType(root.Attribute("Att"), Nullable(Of TimeSpan))  
Console.WriteLine("Nullable TimeSpan: value={0}", IIf(value.HasValue, value.ToString(), "null"))  
```  
  
 <span data-ttu-id="efed9-329">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="efed9-329">This example produces the following output:</span></span>  
  
```  
Nullable TimeSpan: value=01:05:30  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="efed9-330">Das Attribut enthält keinen gültigen <see cref="T:System.TimeSpan" />-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-330">The attribute does not contain a valid <see cref="T:System.TimeSpan" /> value.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.TimeSpan" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator Nullable&lt;uint&gt; (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Nullable`1&lt;unsigned int32&gt; op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.UInt32}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As Nullable(Of UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator Nullable&lt;System::UInt32&gt;(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Xml.Linq.XAttribute -&gt; Nullable&lt;uint32&gt;" Usage="System.Xml.Linq.XAttribute.op_Explicit attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="efed9-331">Das <see cref="T:System.Xml.Linq.XAttribute" />, das in ein <see cref="T:System.Nullable`1" /> vom Typ <see cref="T:System.UInt32" /> umgewandelt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-331">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.UInt32" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="efed9-332">Wandelt den Wert dieses <see cref="T:System.Xml.Linq.XAttribute" /> in ein <see cref="T:System.Nullable`1" /> vom Typ <see cref="T:System.UInt32" /> um.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-332">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.UInt32" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="efed9-333">Ein <see cref="T:System.Nullable`1" /> vom Typ <see cref="T:System.UInt32" />, das den Inhalt dieses <see cref="T:System.Xml.Linq.XAttribute" /> enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-333">A <see cref="T:System.Nullable`1" /> of <see cref="T:System.UInt32" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[## Examples  
 <span data-ttu-id="efed9-334">Das folgende Beispiel erstellt ein Attribut mit Inhalt für ganze Zahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="efed9-334">The following example creates an attribute with unsigned integer content.</span></span> <span data-ttu-id="efed9-335">Klicken Sie dann Ruft den Wert ab, indem Sie eine Umwandlung zu <xref:System.Nullable%601> von <xref:System.UInt32>.</span><span class="sxs-lookup"><span data-stu-id="efed9-335">It then retrieves the value by casting to <xref:System.Nullable%601> of <xref:System.UInt32>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",   
    new XAttribute("Att", 4294967295)  
);  
uint? value = (uint?)root.Attribute("Att");  
Console.WriteLine("Nullable uint: value={0}", value == null ? "null" : value.ToString());  
```  
  
```vb  
Dim root As XElement = <Root Att="4294967295"/>  
Dim value As Nullable(Of UInteger) = CType(root.Attribute("Att"), Nullable(Of UInteger))  
Console.WriteLine("Nullable uint: value={0}", IIf(value.HasValue, value.ToString(), "null"))  
```  
  
 <span data-ttu-id="efed9-336">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="efed9-336">This example produces the following output:</span></span>  
  
```  
Nullable uint: value=4294967295  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="efed9-337">Das Attribut enthält keinen gültigen <see cref="T:System.UInt32" />-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-337">The attribute does not contain a valid <see cref="T:System.UInt32" /> value.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt32" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator Nullable&lt;ulong&gt; (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Nullable`1&lt;unsigned int64&gt; op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.UInt64}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As Nullable(Of ULong)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator Nullable&lt;System::UInt64&gt;(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Xml.Linq.XAttribute -&gt; Nullable&lt;uint64&gt;" Usage="System.Xml.Linq.XAttribute.op_Explicit attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="efed9-338">Das <see cref="T:System.Xml.Linq.XAttribute" />, das in ein <see cref="T:System.Nullable`1" /> vom Typ <see cref="T:System.UInt64" /> umgewandelt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-338">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.UInt64" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="efed9-339">Wandelt den Wert dieses <see cref="T:System.Xml.Linq.XAttribute" /> in ein <see cref="T:System.Nullable`1" /> vom Typ <see cref="T:System.UInt64" /> um.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-339">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.UInt64" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="efed9-340">Ein <see cref="T:System.Nullable`1" /> vom Typ <see cref="T:System.UInt64" />, das den Inhalt dieses <see cref="T:System.Xml.Linq.XAttribute" /> enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-340">A <see cref="T:System.Nullable`1" /> of <see cref="T:System.UInt64" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[## Examples  
 <span data-ttu-id="efed9-341">Das folgende Beispiel erstellt ein Attribut mit Inhalt für lange Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="efed9-341">The following example creates an attribute with unsigned long integer content.</span></span> <span data-ttu-id="efed9-342">Klicken Sie dann Ruft den Wert ab, indem Sie eine Umwandlung zu <xref:System.Nullable%601> von <xref:System.UInt64>.</span><span class="sxs-lookup"><span data-stu-id="efed9-342">It then retrieves the value by casting to <xref:System.Nullable%601> of <xref:System.UInt64>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",   
    new XAttribute("Att", 9223372036854775807)  
);  
ulong? value = (ulong?)root.Attribute("Att");  
Console.WriteLine("Nullable ulong: value={0}", value == null ? "null" : value.ToString());  
```  
  
```vb  
Dim root As XElement = <Root Att="9223372036854775807"/>  
Dim value As Nullable(Of ULong) = CType(root.Attribute("Att"), Nullable(Of ULong))  
Console.WriteLine("Nullable ulong: value={0}", IIf(value.HasValue, value.ToString(), "null"))  
```  
  
 <span data-ttu-id="efed9-343">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="efed9-343">This example produces the following output:</span></span>  
  
```  
Nullable ulong: value=9223372036854775807  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="efed9-344">Das Attribut enthält keinen gültigen <see cref="T:System.UInt64" />-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-344">The attribute does not contain a valid <see cref="T:System.UInt64" /> value.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt64" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator float (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname float32 op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Single" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator float(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Xml.Linq.XAttribute -&gt; single" Usage="System.Xml.Linq.XAttribute.op_Explicit attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="efed9-345">Das <see cref="T:System.Xml.Linq.XAttribute" />, das in <see cref="T:System.Single" /> umgewandelt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-345">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.Single" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="efed9-346">Wandelt den Wert dieses <see cref="T:System.Xml.Linq.XAttribute" /> in einen <see cref="T:System.Single" /> um.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-346">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Single" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="efed9-347">Ein <see cref="T:System.Single" />, das den Inhalt dieses <see cref="T:System.Xml.Linq.XAttribute" /> enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-347">A <see cref="T:System.Single" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[## Examples  
 <span data-ttu-id="efed9-348">Das folgende Beispiel erstellt ein Attribut mit einfacher Genauigkeit, Gleitkomma-Inhalte.</span><span class="sxs-lookup"><span data-stu-id="efed9-348">The following example creates an attribute with single precision floating point content.</span></span> <span data-ttu-id="efed9-349">Klicken Sie dann Ruft den Wert ab, indem Sie eine Umwandlung zu <xref:System.Single>.</span><span class="sxs-lookup"><span data-stu-id="efed9-349">It then retrieves the value by casting to <xref:System.Single>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att", 3.402823e38)  
);  
float value = (float)root.Attribute("Att");  
Console.WriteLine("value={0}", value);  
```  
  
```vb  
Dim root As XElement = <Root Att="3.402823E+38"/>  
Dim value As Single = CSng(root.Attribute("Att"))  
Console.WriteLine("value={0}", value)  
```  
  
 <span data-ttu-id="efed9-350">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="efed9-350">This example produces the following output:</span></span>  
  
```  
value=3.402823E+38  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="efed9-351">Das Attribut enthält keinen gültigen <see cref="T:System.Single" />-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-351">The attribute does not contain a valid <see cref="T:System.Single" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="efed9-352">Der <paramref name="attribute" />-Parameter ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-352">The <paramref name="attribute" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Single}" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator string (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname string op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.String" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::String ^(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Xml.Linq.XAttribute -&gt; string" Usage="System.Xml.Linq.XAttribute.op_Explicit attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="efed9-353">Das <see cref="T:System.Xml.Linq.XAttribute" />, das in <see cref="T:System.String" /> umgewandelt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-353">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.String" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="efed9-354">Wandelt den Wert dieses <see cref="T:System.Xml.Linq.XAttribute" /> in einen <see cref="T:System.String" /> um.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-354">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="efed9-355">Ein <see cref="T:System.String" />, das den Inhalt dieses <see cref="T:System.Xml.Linq.XAttribute" /> enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-355">A <see cref="T:System.String" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[## Examples  
 <span data-ttu-id="efed9-356">Das folgende Beispiel erstellt ein Attribut mit Zeichenfolgeninhalt.</span><span class="sxs-lookup"><span data-stu-id="efed9-356">The following example creates an attribute with string content.</span></span> <span data-ttu-id="efed9-357">Klicken Sie dann Ruft den Wert ab, indem Sie eine Umwandlung zu <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="efed9-357">It then retrieves the value by casting to <xref:System.String>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att", "attribute content")  
);  
XAttribute att = root.Attribute("Att");  
string str = (string)att;  
Console.WriteLine("(string)att={0}", str);  
```  
  
```vb  
Dim root As XElement = <Root Att="attribute content"/>  
Dim att As XAttribute = root.Attribute("Att")  
Dim str As String = CStr(att)  
Console.WriteLine("(string)att={0}", str)  
```  
  
 <span data-ttu-id="efed9-358">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="efed9-358">This example produces the following output:</span></span>  
  
```  
(string)att=attribute content  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.Linq.XAttribute.ToString" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator TimeSpan (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.TimeSpan op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.TimeSpan" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator TimeSpan(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Xml.Linq.XAttribute -&gt; TimeSpan" Usage="System.Xml.Linq.XAttribute.op_Explicit attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="efed9-359">Das <see cref="T:System.Xml.Linq.XAttribute" />, das in <see cref="T:System.TimeSpan" /> umgewandelt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-359">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.TimeSpan" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="efed9-360">Wandelt den Wert dieses <see cref="T:System.Xml.Linq.XAttribute" /> in einen <see cref="T:System.TimeSpan" /> um.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-360">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.TimeSpan" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="efed9-361">Ein <see cref="T:System.TimeSpan" />, das den Inhalt dieses <see cref="T:System.Xml.Linq.XAttribute" /> enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-361">A <see cref="T:System.TimeSpan" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efed9-362">Der Wertebereich eines Attributs oder Elements, das Time spanneninhalt enthält ist zur Dauer eng wie beschrieben im ISO 8601.</span><span class="sxs-lookup"><span data-stu-id="efed9-362">The value space of an attribute or element that contains time span content is closely related to duration content as described in ISO 8601.</span></span> <span data-ttu-id="efed9-363">Beim Erstellen eines Attributs oder Elements, das Time Span-Inhalt enthält, werden die Attribut- oder Elementwerte gemäß der W3C-Spezifikation formatiert.</span><span class="sxs-lookup"><span data-stu-id="efed9-363">When creating an attribute or element that contains time span content, the attribute or element values are formatted per the W3C specification.</span></span> <span data-ttu-id="efed9-364">Informieren Sie sich die W3C-Spezifikation für die weitere Details.</span><span class="sxs-lookup"><span data-stu-id="efed9-364">Please see the W3C specification for more details.</span></span>  
  
 <span data-ttu-id="efed9-365">Verhalten ist lax, bei der Umwandlung in einen <xref:System.TimeSpan> über ein Attribut oder Element.</span><span class="sxs-lookup"><span data-stu-id="efed9-365">Behavior is lax when casting to a <xref:System.TimeSpan> from an attribute or element.</span></span> <span data-ttu-id="efed9-366">Selbst wenn der Wert von Attribut- oder Elementwert genau gemäß der W3C-Spezifikation nicht formatiert ist, wird der Wert entsprechend in konvertiert eine <xref:System.TimeSpan>.</span><span class="sxs-lookup"><span data-stu-id="efed9-366">Even if the attribute or element value is not formatted exactly per the W3C specification, the value is appropriately converted to a <xref:System.TimeSpan>.</span></span>  

## Examples  
 <span data-ttu-id="efed9-367">Im folgende Beispiel wird ein Attribut mit der Zeit erstellt.</span><span class="sxs-lookup"><span data-stu-id="efed9-367">The following example creates an attribute with time span content.</span></span> <span data-ttu-id="efed9-368">Klicken Sie dann Ruft den Wert ab, indem Sie eine Umwandlung zu <xref:System.TimeSpan>.</span><span class="sxs-lookup"><span data-stu-id="efed9-368">It then retrieves the value by casting to <xref:System.TimeSpan>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att", new TimeSpan(1, 5, 30))  
);  
TimeSpan value = (TimeSpan)root.Attribute("Att");  
Console.WriteLine("value={0}", value);  
```  
  
```vb  
Dim root As XElement = <Root Att=<%= New TimeSpan(1, 5, 30) %>/>  
Dim value As TimeSpan = CType(root.Attribute("Att"), TimeSpan)  
Console.WriteLine("value={0}", value)  
```  
  
 <span data-ttu-id="efed9-369">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="efed9-369">This example produces the following output:</span></span>  
  
```  
value=01:05:30  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="efed9-370">Das Attribut enthält keinen gültigen <see cref="T:System.TimeSpan" />-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-370">The attribute does not contain a valid <see cref="T:System.TimeSpan" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="efed9-371">Der <paramref name="attribute" />-Parameter ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-371">The <paramref name="attribute" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.TimeSpan}" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator uint (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int32 op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt32" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::UInt32(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Xml.Linq.XAttribute -&gt; uint32" Usage="System.Xml.Linq.XAttribute.op_Explicit attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="efed9-372">Das <see cref="T:System.Xml.Linq.XAttribute" />, das in <see cref="T:System.UInt32" /> umgewandelt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-372">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.UInt32" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="efed9-373">Wandelt den Wert dieses <see cref="T:System.Xml.Linq.XAttribute" /> in einen <see cref="T:System.UInt32" /> um.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-373">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.UInt32" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="efed9-374">Ein <see cref="T:System.UInt32" />, das den Inhalt dieses <see cref="T:System.Xml.Linq.XAttribute" /> enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-374">A <see cref="T:System.UInt32" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[## Examples  
 <span data-ttu-id="efed9-375">Das folgende Beispiel erstellt ein Attribut mit Inhalt für ganze Zahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="efed9-375">The following example creates an attribute with unsigned integer content.</span></span> <span data-ttu-id="efed9-376">Klicken Sie dann Ruft den Wert ab, indem Sie eine Umwandlung zu <xref:System.UInt32>.</span><span class="sxs-lookup"><span data-stu-id="efed9-376">It then retrieves the value by casting to <xref:System.UInt32>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",   
    new XAttribute("Att", 4294967295)  
);  
uint value = (uint)root.Attribute("Att");  
Console.WriteLine("value={0}", value);  
```  
  
```vb  
Dim root As XElement = <Root Att="4294967295"/>  
Dim value As UInteger = CUInt(root.Attribute("Att"))  
Console.WriteLine("value={0}", value)  
```  
  
 <span data-ttu-id="efed9-377">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="efed9-377">This example produces the following output:</span></span>  
  
```  
value=4294967295  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="efed9-378">Das Attribut enthält keinen gültigen <see cref="T:System.UInt32" />-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-378">The attribute does not contain a valid <see cref="T:System.UInt32" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="efed9-379">Der <paramref name="attribute" />-Parameter ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-379">The <paramref name="attribute" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.UInt32}" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator ulong (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int64 op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt64" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::UInt64(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Xml.Linq.XAttribute -&gt; uint64" Usage="System.Xml.Linq.XAttribute.op_Explicit attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="efed9-380">Das <see cref="T:System.Xml.Linq.XAttribute" />, das in <see cref="T:System.UInt64" /> umgewandelt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-380">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.UInt64" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="efed9-381">Wandelt den Wert dieses <see cref="T:System.Xml.Linq.XAttribute" /> in einen <see cref="T:System.UInt64" /> um.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-381">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.UInt64" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="efed9-382">Ein <see cref="T:System.UInt64" />, das den Inhalt dieses <see cref="T:System.Xml.Linq.XAttribute" /> enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-382">A <see cref="T:System.UInt64" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[## Examples  
 <span data-ttu-id="efed9-383">Das folgende Beispiel erstellt ein Attribut mit Inhalt für lange Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="efed9-383">The following example creates an attribute with unsigned long integer content.</span></span> <span data-ttu-id="efed9-384">Klicken Sie dann Ruft den Wert ab, indem Sie eine Umwandlung zu <xref:System.UInt64>.</span><span class="sxs-lookup"><span data-stu-id="efed9-384">It then retrieves the value by casting to <xref:System.UInt64>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att", 1844674407370955161)  
);  
ulong value = (ulong)root.Attribute("Att");  
Console.WriteLine("value={0}", value);  
```  
  
```vb  
Dim root As XElement = <Root Att="1844674407370955161"/>  
Dim value As ULong = CULng(root.Attribute("Att"))  
Console.WriteLine("value={0}", value)  
```  
  
 <span data-ttu-id="efed9-385">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="efed9-385">This example produces the following output:</span></span>  
  
```  
value=1844674407370955161  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="efed9-386">Das Attribut enthält keinen gültigen <see cref="T:System.UInt64" />-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-386">The attribute does not contain a valid <see cref="T:System.UInt64" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="efed9-387">Der <paramref name="attribute" />-Parameter ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-387">The <paramref name="attribute" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.UInt64}" />
      </Docs>
    </Member>
    <Member MemberName="PreviousAttribute">
      <MemberSignature Language="C#" Value="public System.Xml.Linq.XAttribute PreviousAttribute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Linq.XAttribute PreviousAttribute" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Linq.XAttribute.PreviousAttribute" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreviousAttribute As XAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Linq::XAttribute ^ PreviousAttribute { System::Xml::Linq::XAttribute ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreviousAttribute : System.Xml.Linq.XAttribute" Usage="System.Xml.Linq.XAttribute.PreviousAttribute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Linq.XAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="efed9-388">Ruft das vorherige Attribut des übergeordneten Elements ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-388">Gets the previous attribute of the parent element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="efed9-389">Ein <see cref="T:System.Xml.Linq.XAttribute" />, das das vorherige Attribut des übergeordneten Elements enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-389">An <see cref="T:System.Xml.Linq.XAttribute" /> containing the previous attribute of the parent element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efed9-390">Attribute werden in der XML-Struktur in der Reihenfolge verwaltet, dass sie auf das Element hinzugefügt wurden.</span><span class="sxs-lookup"><span data-stu-id="efed9-390">Attributes are maintained in the XML tree in the order that they were added to the element.</span></span> <span data-ttu-id="efed9-391">Wenn eine Auflistung von Attributen zurückgegeben wird, indem <xref:System.Xml.Linq.XElement.Attributes%2A>, diese in der Reihenfolge, die sie hinzugefügt wurden, und werden nicht sortiert zurückgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="efed9-391">When a collection of attributes is returned by <xref:System.Xml.Linq.XElement.Attributes%2A>, they are returned in the order that they were added, and are not sorted.</span></span> <span data-ttu-id="efed9-392">Wenn Sie das vorherige Attribut über diese Eigenschaft anfordern, gibt diese Eigenschaft das Attribut, das vor diesem Attribut hinzugefügt wurde.</span><span class="sxs-lookup"><span data-stu-id="efed9-392">When you request the previous attribute through this property, this property returns the attribute that was added before this attribute.</span></span>  
  
 <span data-ttu-id="efed9-393">Wenn dieses Attribut nicht über ein übergeordnetes Element verfügt, oder wenn dieses Attribut auf das erste Attribut ist, dann diese Eigenschaft gibt `null`.</span><span class="sxs-lookup"><span data-stu-id="efed9-393">If this attribute does not have a parent, or if this attribute is the first attribute, then this property returns `null`.</span></span>  
  
 <span data-ttu-id="efed9-394">Die <xref:System.Xml.Linq.XElement> Klasse speichert die Attribute als einfach verknüpfte Liste von <xref:System.Xml.Linq.XAttribute> Objekte.</span><span class="sxs-lookup"><span data-stu-id="efed9-394">The <xref:System.Xml.Linq.XElement> class stores its attributes as a singly-linked list of <xref:System.Xml.Linq.XAttribute> objects.</span></span> <span data-ttu-id="efed9-395">Dies bedeutet, dass die <xref:System.Xml.Linq.XAttribute.PreviousAttribute%2A> -Eigenschaft durchlaufen muss die Liste der Attribute, die auf das Element gehören.</span><span class="sxs-lookup"><span data-stu-id="efed9-395">This means that the <xref:System.Xml.Linq.XAttribute.PreviousAttribute%2A> property must traverse the list of attributes that belong to the element.</span></span> <span data-ttu-id="efed9-396">Aus diesem Grund könnte die Verwendung dieser Eigenschaft die Leistung beeinträchtigen.</span><span class="sxs-lookup"><span data-stu-id="efed9-396">Therefore, using this property might affect your performance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="efed9-397">Das folgende Beispiel zeigt, wie Sie die Attribute eines Elements mit dieser Eigenschaft durchlaufen wird.</span><span class="sxs-lookup"><span data-stu-id="efed9-397">The following example shows how to iterate through the attributes of an element using this property.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att1", 1),  
    new XAttribute("Att2", 2),  
    new XAttribute("Att3", 3),  
    new XAttribute("Att4", 4)  
);  
XAttribute att = root.LastAttribute;  
do {  
    Console.WriteLine(att);  
}  
while((att = att.PreviousAttribute) != null);  
```  
  
```vb  
Dim root As XElement = <Root Att1="1" Att2="2" Att3="3" Att4="4"/>  
Dim att As XAttribute = root.LastAttribute  
Dim val As Boolean = True  
Do  
    Console.WriteLine(att)  
    att = att.PreviousAttribute  
Loop While (Not (att Is Nothing))  
```  
  
 <span data-ttu-id="efed9-398">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="efed9-398">This example produces the following output:</span></span>  
  
```  
Att4="4"  
Att3="3"  
Att2="2"  
Att1="1"  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.Linq.XAttribute.NextAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.Remove" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove();" />
      <MemberSignature Language="F#" Value="member this.Remove : unit -&gt; unit" Usage="xAttribute.Remove " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="efed9-399">Entfernt dieses Attribut aus seinem übergeordneten Element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-399">Removes this attribute from its parent element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efed9-400">Sie können diese Methode verwenden, um eine XML-Struktur zu ändern.</span><span class="sxs-lookup"><span data-stu-id="efed9-400">You can use this method to modify an XML tree.</span></span> <span data-ttu-id="efed9-401">Diese Methode bewirkt die Ereignisse auftreten.</span><span class="sxs-lookup"><span data-stu-id="efed9-401">This method will cause events to occur.</span></span>  
  
 <span data-ttu-id="efed9-402">Es gibt viele Szenarien, in denen Sie einen Satz von Attributen entfernen möchten.</span><span class="sxs-lookup"><span data-stu-id="efed9-402">There are many scenarios in which you might want to remove a set of attributes.</span></span> <span data-ttu-id="efed9-403">In [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] Programmierung, sollten nicht bearbeiten oder eine Gruppe von Knoten zu ändern, während Sie für Knoten in diesem Satz Abfragen.</span><span class="sxs-lookup"><span data-stu-id="efed9-403">In [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] programming, you should not manipulate or modify a set of nodes while you are querying for nodes in that set.</span></span> <span data-ttu-id="efed9-404">Praktisch bedeutet dies, dass Sie nicht eine durch einen Satz von Attributen Iteration und entfernen Sie sie.</span><span class="sxs-lookup"><span data-stu-id="efed9-404">In practical terms, this means that you should not iterate over a set of attributes and remove them.</span></span> <span data-ttu-id="efed9-405">Sie sollten stattdessen materialisieren in einer <xref:System.Collections.Generic.List%601> mithilfe der <xref:System.Linq.Enumerable.ToList%2A> -Erweiterungsmethode.</span><span class="sxs-lookup"><span data-stu-id="efed9-405">Instead, you should materialize them into a <xref:System.Collections.Generic.List%601> using the <xref:System.Linq.Enumerable.ToList%2A> extension method.</span></span> <span data-ttu-id="efed9-406">Dann können Sie der Liste aus, durchlaufen die Attribute zu entfernen.</span><span class="sxs-lookup"><span data-stu-id="efed9-406">Then you can iterate over the list, removing the attributes.</span></span> <span data-ttu-id="efed9-407">Weitere Informationen finden Sie unter [Mixed Declarative Code/Imperative Code Bugs (LINQ to XML)](http://msdn.microsoft.com/library/d9a5c404-2b0e-46cd-a358-0e78773b3094).</span><span class="sxs-lookup"><span data-stu-id="efed9-407">For more information, see [Mixed Declarative Code/Imperative Code Bugs (LINQ to XML)](http://msdn.microsoft.com/library/d9a5c404-2b0e-46cd-a358-0e78773b3094).</span></span>  
  
 <span data-ttu-id="efed9-408">Auch wenn Sie einen Satz von Attributen entfernen möchten, es wird empfohlen, Sie verwenden die <xref:System.Xml.Linq.Extensions.Remove%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="efed9-408">Alternatively, if you want to remove a set of attributes, it is recommended that you use the <xref:System.Xml.Linq.Extensions.Remove%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="efed9-409">Diese Methode kopiert die Attribute in einer Liste und anschließend durchläuft die Liste, die die Attribute zu entfernen.</span><span class="sxs-lookup"><span data-stu-id="efed9-409">This method copies the attributes to a list, then iterates over the list, removing the attributes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="efed9-410">Das folgende Beispiel erstellt ein Element mit drei Attributen.</span><span class="sxs-lookup"><span data-stu-id="efed9-410">The following example creates an element with three attributes.</span></span> <span data-ttu-id="efed9-411">Klicken Sie dann entfernt er eines der Attribute.</span><span class="sxs-lookup"><span data-stu-id="efed9-411">It then removes one of the attributes.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att1", "content1"),  
    new XAttribute("Att2", "content2"),  
    new XAttribute("Att3", "content3")  
);  
XAttribute att = root.Attribute("Att2");  
att.Remove();  
Console.WriteLine(root);  
```  
  
```vb  
Dim root As XElement = <Root Att1="content1" Att2="content2" Att3="content3"/>  
Dim att As XAttribute = root.Attribute("Att2")  
att.Remove()  
Console.WriteLine(root)  
```  
  
 <span data-ttu-id="efed9-412">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="efed9-412">This example produces the following output:</span></span>  
  
```  
<Root Att1="content1" Att3="content3" />  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="efed9-413">Das übergeordnete Element ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-413">The parent element is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.SetValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.SetValue : obj -&gt; unit" Usage="xAttribute.SetValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="efed9-414">Der Wert, der diesem Attribut zugewiesen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-414">The value to assign to this attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="efed9-415">Legt den Wert dieses Attributs fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-415">Sets the value of this attribute.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efed9-416">Der Wert wird in seine Zeichenfolgenentsprechung konvertiert und der <xref:System.Xml.Linq.XAttribute.Value%2A>-Eigenschaft zugewiesen.</span><span class="sxs-lookup"><span data-stu-id="efed9-416">The value is converted to its string representation and assigned to the <xref:System.Xml.Linq.XAttribute.Value%2A> property.</span></span>  
  
 <span data-ttu-id="efed9-417">Es ist unzulässig, eine Instanz einer Klasse zu übergeben, die von abgeleitet <xref:System.Xml.Linq.XObject>, z. B. <xref:System.Xml.Linq.XElement> oder <xref:System.Xml.Linq.XAttribute>.</span><span class="sxs-lookup"><span data-stu-id="efed9-417">It is invalid to pass an instance of a class that derives from <xref:System.Xml.Linq.XObject>, such as <xref:System.Xml.Linq.XElement> or <xref:System.Xml.Linq.XAttribute>.</span></span>  
  
 <span data-ttu-id="efed9-418">Diese Methode löst die <xref:System.Xml.Linq.XObject.Changed> und <xref:System.Xml.Linq.XObject.Changing> Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="efed9-418">This method will raise the <xref:System.Xml.Linq.XObject.Changed> and the <xref:System.Xml.Linq.XObject.Changing> events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="efed9-419">Das folgende Beispiel erstellt ein Element mit mehreren Attributen.</span><span class="sxs-lookup"><span data-stu-id="efed9-419">The following example creates an element with several attributes.</span></span> <span data-ttu-id="efed9-420">Anschließend wird der Inhalt eines der Attribute geändert.</span><span class="sxs-lookup"><span data-stu-id="efed9-420">It then changes the contents of one of the attributes.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att1", "content1"),  
    new XAttribute("Att2", "content2"),  
    new XAttribute("Att3", "content3")  
);  
XAttribute att = root.Attribute("Att2");  
att.SetValue("new content");  
Console.WriteLine(root);  
```  
  
```vb  
Dim root As XElement = <Root Att1="content1" Att2="content2" Att3="content3"/>  
Dim att As XAttribute = root.Attribute("Att2")  
att.SetValue("new content")  
Console.WriteLine(root)  
```  
  
 <span data-ttu-id="efed9-421">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="efed9-421">This example produces the following output:</span></span>  
  
```  
<Root Att1="content1" Att2="new content" Att3="content3" />  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="efed9-422">Der <paramref name="value" />-Parameter ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-422">The <paramref name="value" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="efed9-423">Der <paramref name="value" /> ist ein <see cref="T:System.Xml.Linq.XObject" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-423">The <paramref name="value" /> is an <see cref="T:System.Xml.Linq.XObject" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.Linq.XElement.SetValue(System.Object)" />
        <altmember cref="M:System.Xml.Linq.XElement.SetAttributeValue(System.Xml.Linq.XName,System.Object)" />
        <altmember cref="M:System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName,System.Object)" />
        <altmember cref="P:System.Xml.Linq.XAttribute.Value" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="xAttribute.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="efed9-424">Konvertiert das aktuelle <see cref="T:System.Xml.Linq.XAttribute" />-Objekt in eine Zeichenfolgendarstellung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-424">Converts the current <see cref="T:System.Xml.Linq.XAttribute" /> object to a string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="efed9-425">Eine <see cref="T:System.String" />, die die XML-Textdarstellung eines Attributs und seines Werts enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-425">A <see cref="T:System.String" /> containing the XML text representation of an attribute and its value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efed9-426">Diese Methode gibt eine Zeichenfolge zurück, in Form von `AttributeName="content"`.</span><span class="sxs-lookup"><span data-stu-id="efed9-426">This method returns a string in the form of `AttributeName="content"`.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="efed9-427">Wenn diese Methode wird aufgerufen und <xref:System.Xml.Linq.XAttribute> -Steuerelement enthält Zeichen, wird mit einer Meldung wie wird eine Ausnahme ausgelöst: Hexadezimalwert 0x0B, ist ein ungültiges Zeichen.</span><span class="sxs-lookup"><span data-stu-id="efed9-427">When this method is called and <xref:System.Xml.Linq.XAttribute> contains control character, an exception is thrown with a message like: hexadecimal value 0x0B, is an invalid character.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="efed9-428">Das folgende Beispiel erstellt ein Element mit mehreren Attributen.</span><span class="sxs-lookup"><span data-stu-id="efed9-428">The following example creates an element with several attributes.</span></span> <span data-ttu-id="efed9-429">Anschließend ruft ein Attribut ab und zeigt sie und ihren Inhalt durch Aufrufen dieser Methode.</span><span class="sxs-lookup"><span data-stu-id="efed9-429">It then gets an attribute and displays it and its content by calling this method.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att1", "content1"),  
    new XAttribute("Att2", "content2"),  
    new XAttribute("Att3", "content3")  
);  
XAttribute att = root.Attribute("Att2");  
Console.WriteLine(att.ToString());  
```  
  
```vb  
Dim root As XElement = <Root Att1="content1" Att2="content2" Att3="content3"/>  
Dim att As XAttribute = root.Attribute("Att2")  
Console.WriteLine(att.ToString())  
```  
  
 <span data-ttu-id="efed9-430">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="efed9-430">This example produces the following output:</span></span>  
  
```  
Att2="content2"  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.Linq.XAttribute.Name" />
        <altmember cref="P:System.Xml.Linq.XAttribute.Value" />
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.String" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Linq.XAttribute.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : string with get, set" Usage="System.Xml.Linq.XAttribute.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="efed9-431">Ruft den Wert des Attributs ab oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-431">Gets or sets the value of this attribute.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="efed9-432">Ein <see cref="T:System.String" />-Objekt, das den Wert dieses Attributs enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-432">A <see cref="T:System.String" /> containing the value of this attribute.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efed9-433">Sie können diese Eigenschaft zum Abrufen oder Festlegen des Werts eines Attributs verwenden.</span><span class="sxs-lookup"><span data-stu-id="efed9-433">You can use this property to get or set the value of an attribute.</span></span>  
  
 <span data-ttu-id="efed9-434">Einstellung, die diese Eigenschaft löst die <xref:System.Xml.Linq.XObject.Changed> und <xref:System.Xml.Linq.XObject.Changing> Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="efed9-434">Setting this property will raise the <xref:System.Xml.Linq.XObject.Changed> and the <xref:System.Xml.Linq.XObject.Changing> events.</span></span>  
  
 <span data-ttu-id="efed9-435">Wenn Sie den Wert abrufen und das Attribut möglicherweise nicht vorhanden, ist es praktischer, die explizite Konvertierungsoperatoren, und weisen Sie das-Attribut auf einen nullable-Typ wie z. B. `string` oder <xref:System.Nullable%601> von <xref:System.Int32>.</span><span class="sxs-lookup"><span data-stu-id="efed9-435">If you are getting the value and the attribute might not exist, it is more convenient to use the explicit conversion operators, and assign the attribute to a nullable type such as `string` or <xref:System.Nullable%601> of <xref:System.Int32>.</span></span> <span data-ttu-id="efed9-436">Wenn das Attribut nicht vorhanden, und klicken Sie dann einen nullable-Typ, um festgelegt wird `null`.</span><span class="sxs-lookup"><span data-stu-id="efed9-436">If the attribute does not exist, then the nullable type is set to `null`.</span></span> <span data-ttu-id="efed9-437">Bevor Sie diese Eigenschaft verwenden, Sie müssen sicherstellen, dass die <xref:System.Xml.Linq.XElement.Attribute%2A> Methode nicht zurückgegeben `null`.</span><span class="sxs-lookup"><span data-stu-id="efed9-437">Before using this property, you must make sure that the <xref:System.Xml.Linq.XElement.Attribute%2A> method does not return `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="efed9-438">Das folgende Beispiel erstellt ein Element mit einem Attribut.</span><span class="sxs-lookup"><span data-stu-id="efed9-438">The following example creates an element with an attribute.</span></span> <span data-ttu-id="efed9-439">Es ruft dann den Wert des Attributs ab, und klicken Sie dann festgelegt.</span><span class="sxs-lookup"><span data-stu-id="efed9-439">It then retrieves the value of the attribute, and then sets it.</span></span>  
  
 <span data-ttu-id="efed9-440">Beachten Sie, dass die Visual Basic-Beispiel-Eigenschaft der XML-Attributs.</span><span class="sxs-lookup"><span data-stu-id="efed9-440">Note that the Visual Basic example uses the XML attribute property.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att", "content")  
);  
XAttribute att = root.FirstAttribute;  
Console.WriteLine(att.Value);  
att.Value = "new text";  
Console.WriteLine(att.Value);  
```  
  
```vb  
Dim root As XElement = <Root Att="content"/>  
Console.WriteLine(root.@Att)  
root.@Att = "new text"  
Console.WriteLine(root.@Att)  
```  
  
 <span data-ttu-id="efed9-441">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="efed9-441">This example produces the following output:</span></span>  
  
```  
content  
new text  
```  
  
 <span data-ttu-id="efed9-442">Im folgenden Beispiel wird des Vorteil der Verwendung der explizite Konvertierungsoperatoren, die um den Wert eines Attributs zu erhalten, die möglicherweise nicht vorhanden:</span><span class="sxs-lookup"><span data-stu-id="efed9-442">The following example shows the benefit of using the explicit conversion operators to get the value of an attribute that might not exist:</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att1", "attribute 1 content"),  
    new XAttribute("Att2", "2")  
);  
  
// The following assignments demonstrate why it is easier to use  
// casting when the attribute might or might not exist.  
  
string c1 = (string)root.Attribute("Att1");  
Console.WriteLine("c1:{0}", c1 == null ? "attribute does not exist" : c1);  
  
int? c2 = (int?)root.Attribute("Att2");  
Console.WriteLine("c2:{0}", c2 == null ? "attribute does not exist" : c2.ToString());  
  
string c3 = (string)root.Attribute("Att3");  
Console.WriteLine("c3:{0}", c3 == null ? "attribute does not exist" : c3);  
  
int? c4 = (int?)root.Attribute("Att4");  
Console.WriteLine("c4:{0}", c4 == null ? "attribute does not exist" : c4.ToString());  
  
Console.WriteLine();  
  
// The following assignments show the necessary code when using  
// the value property when the attribute might or might not exist.  
  
XAttribute att1 = root.Attribute("Att1");  
string v1;  
if (att1 == null)  
    v1 = null;  
else  
    v1 = att1.Value;  
Console.WriteLine("v1:{0}", v1 == null ? "attribute does not exist" : v1);  
  
XAttribute att2 = root.Attribute("Att2");  
int? v2;  
if (att2 == null)  
    v2 = null;  
else  
    v2 = Int32.Parse(att2.Value);  
Console.WriteLine("v2:{0}", v2 == null ? "attribute does not exist" : v2.ToString());  
  
XAttribute att3 = root.Attribute("Att3");  
string v3;  
if (att3 == null)  
    v3 = null;  
else  
    v3 = att3.Value;  
Console.WriteLine("v3:{0}", v3 == null ? "attribute does not exist" : v3);  
  
XAttribute att4 = root.Attribute("Att4");  
int? v4;  
if (att4 == null)  
    v4 = null;  
else  
    v4 = Int32.Parse(att4.Value);  
Console.WriteLine("v4:{0}", v4 == null ? "attribute does not exist" : v4.ToString());  
```  
  
```vb  
Dim root As XElement = <Root Att1="attribute 1 content" Att2="2"/>  
  
' The following assignments demonstrate why it is easier to use  
' casting when the attribute might or might not exist.  
  
Dim c1 As String = CStr(root.Attribute("Att1"))  
Console.WriteLine("c1:{0}", IIf(c1 Is Nothing, "attribute does not exist", c1))  
  
Dim c2 As Nullable(Of Integer) = CType(root.Attribute("Att2"), Nullable(Of Integer))  
Console.WriteLine("c2:{0}", IIf(c2.HasValue, c2, "attribute does not exist"))  
  
Dim c3 As String = CStr(root.Attribute("Att3"))  
Console.WriteLine("c3:{0}", IIf(c3 Is Nothing, "attribute does not exist", c3))  
  
Dim c4 As Nullable(Of Integer) = CType(root.Attribute("Att4"), Nullable(Of Integer))  
Console.WriteLine("c4:{0}", IIf(c4.HasValue, c4, "attribute does not exist"))  
  
Console.WriteLine()  
  
' The following assignments show the necessary code when using  
' the value property when the attribute might or might not exist.  
  
Dim att1 As XAttribute = root.Attribute("Att1")  
Dim v1 As String  
If att1 Is Nothing Then  
    v1 = Nothing  
Else  
    v1 = att1.Value  
End If  
  
Console.WriteLine("v1:{0}", IIf(v1 Is Nothing, "attribute does not exist", v1))  
  
Dim att2 As XAttribute = root.Attribute("Att2")  
Dim v2 As Nullable(Of Integer)  
If att2 Is Nothing Then  
    v2 = Nothing  
Else  
    v2 = Int32.Parse(att2.Value)  
End If  
  
Console.WriteLine("v2:{0}", IIf(v2.HasValue, v2, "attribute does not exist"))  
  
Dim att3 As XAttribute = root.Attribute("Att3")  
Dim v3 As String  
If att3 Is Nothing Then  
    v3 = Nothing  
Else  
    v3 = att3.Value  
End If  
  
Console.WriteLine("v3:{0}", IIf(v3 Is Nothing, "attribute does not exist", v3))  
  
Dim att4 As XAttribute = root.Attribute("Att4")  
Dim v4 As Nullable(Of Integer)  
If att4 Is Nothing Then  
    v4 = Nothing  
Else  
    v4 = Int32.Parse(att4.Value)  
End If  
  
Console.WriteLine("v4:{0}", IIf(v4.HasValue, v4, "attribute does not exist"))  
```  
  
 <span data-ttu-id="efed9-443">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="efed9-443">This example produces the following output:</span></span>  
  
```  
c1:attribute 1 content  
c2:2  
c3:attribute does not exist  
c4:attribute does not exist  
  
v1:attribute 1 content  
v2:2  
v3:attribute does not exist  
v4:attribute does not exist  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="efed9-444">Wenn dieser Ausnahmetyp festgelegt wird, ist <paramref name="value" /><see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efed9-444">When setting, the <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.SetValue(System.Object)" />
        <altmember cref="P:System.Xml.Linq.XAttribute.Name" />
        <altmember cref="M:System.Xml.Linq.XAttribute.ToString" />
      </Docs>
    </Member>
  </Members>
</Type>