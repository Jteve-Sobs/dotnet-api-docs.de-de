<Type Name="XComment" FullName="System.Xml.Linq.XComment">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fe7749d2ad56cb40556f3c979ee506f19a213b6a" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36443749" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XComment : System.Xml.Linq.XNode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XComment extends System.Xml.Linq.XNode" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Linq.XComment" />
  <TypeSignature Language="VB.NET" Value="Public Class XComment&#xA;Inherits XNode" />
  <TypeSignature Language="C++ CLI" Value="public ref class XComment : System::Xml::Linq::XNode" />
  <TypeSignature Language="F#" Value="type XComment = class&#xA;    inherit XNode" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XDocument</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Linq</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.Linq.XNode</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="de386-101">Stellt einen XML-Kommentar dar.</span>
      <span class="sxs-lookup">
        <span data-stu-id="de386-101">Represents an XML comment.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de386-102">Sie können einen XML-Kommentar als untergeordneter Knoten eines Elements hinzufügen.</span><span class="sxs-lookup"><span data-stu-id="de386-102">You can add an XML comment as a child node of an element.</span></span> <span data-ttu-id="de386-103">Sie können auch einen XML-Kommentar zum Hinzufügen einer <xref:System.Xml.Linq.XDocument> als ein gleichgeordnetes Element des Stammknotens-Element.</span><span class="sxs-lookup"><span data-stu-id="de386-103">You can also add an XML comment to an <xref:System.Xml.Linq.XDocument> as a sibling of the root element node.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Linq.XElement" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="de386-104">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Linq.XComment" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de386-104">Initializes a new instance of the <see cref="T:System.Xml.Linq.XComment" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XComment (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XComment.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XComment(System::String ^ value);" />
      <MemberSignature Language="F#" Value="new System.Xml.Linq.XComment : string -&gt; System.Xml.Linq.XComment" Usage="new System.Xml.Linq.XComment value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="de386-105">Eine Zeichenfolge, die den Inhalt des neuen <see cref="T:System.Xml.Linq.XComment" />-Objekts enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de386-105">A string that contains the contents of the new <see cref="T:System.Xml.Linq.XComment" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de386-106">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Linq.XComment" />-Klasse mit dem angegebenen Zeichenfolgeninhalt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de386-106">Initializes a new instance of the <see cref="T:System.Xml.Linq.XComment" /> class with the specified string content.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="de386-107">Das folgende Beispiel erstellt ein Element, das einen Kommentar als untergeordneter Knoten enthält.</span><span class="sxs-lookup"><span data-stu-id="de386-107">The following example creates an element that contains a comment as a child node.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XComment("This is a comment")  
);  
Console.WriteLine(root);  
```  
  
```vb  
Dim root As XElement = <Root>  
                           <!--This is a comment-->  
                       </Root>  
Console.WriteLine(root)  
```  
  
 <span data-ttu-id="de386-108">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="de386-108">This example produces the following output:</span></span>  
  
```xml  
<Root>  
  <!--This is a comment-->  
</Root>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="de386-109">Der <paramref name="value" />-Parameter ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de386-109">The <paramref name="value" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XComment (System.Xml.Linq.XComment other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.Linq.XComment other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XComment.#ctor(System.Xml.Linq.XComment)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (other As XComment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XComment(System::Xml::Linq::XComment ^ other);" />
      <MemberSignature Language="F#" Value="new System.Xml.Linq.XComment : System.Xml.Linq.XComment -&gt; System.Xml.Linq.XComment" Usage="new System.Xml.Linq.XComment other" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="other" Type="System.Xml.Linq.XComment" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="de386-110">Der <see cref="T:System.Xml.Linq.XComment" />-Knoten, aus dem kopiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de386-110">The <see cref="T:System.Xml.Linq.XComment" /> node to copy from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de386-111">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Linq.XComment" />-Klasse mit einem vorhandenen Kommentarknoten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de386-111">Initializes a new instance of the <see cref="T:System.Xml.Linq.XComment" /> class from an existing comment node.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de386-112">Dieser Konstruktor wird hauptsächlich intern verwendet, um eine tiefe Kopie einer XML-Struktur erstellen.</span><span class="sxs-lookup"><span data-stu-id="de386-112">This constructor is primarily used internally to make a deep copy of an XML tree.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="de386-113">Der <paramref name="other" />-Parameter ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de386-113">The <paramref name="other" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Linq.XComment.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NodeType As XmlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNodeType NodeType { System::Xml::XmlNodeType get(); };" />
      <MemberSignature Language="F#" Value="member this.NodeType : System.Xml.XmlNodeType" Usage="System.Xml.Linq.XComment.NodeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="de386-114">Ruft den Knotentyp für diesen Knoten ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de386-114">Gets the node type for this node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="de386-115">Der Knotentyp.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de386-115">The node type.</span>
          </span>
          <span data-ttu-id="de386-116">Für <see cref="T:System.Xml.Linq.XComment" />-Objekte ist dieser Wert <see cref="F:System.Xml.XmlNodeType.Comment" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de386-116">For <see cref="T:System.Xml.Linq.XComment" /> objects, this value is <see cref="F:System.Xml.XmlNodeType.Comment" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de386-117">Da alle, die von Klassen abgeleitet werden <xref:System.Xml.Linq.XObject> enthalten eine <xref:System.Xml.Linq.XObject.NodeType%2A> -Eigenschaft, können Sie Code schreiben, der ausgeführt wird auf Sammlungen von konkrete Unterklasse von <xref:System.Xml.Linq.XObject>.</span><span class="sxs-lookup"><span data-stu-id="de386-117">Because all classes that derive from <xref:System.Xml.Linq.XObject> contain a <xref:System.Xml.Linq.XObject.NodeType%2A> property, you can write code that operates on collections of concrete subclass of <xref:System.Xml.Linq.XObject>.</span></span> <span data-ttu-id="de386-118">Code kann dann für jeden Knoten in der Auflistung den Knotentyp testen.</span><span class="sxs-lookup"><span data-stu-id="de386-118">Your code can then test for the node type of each node in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="de386-119">Im folgenden Beispiel wird ein Kommentarknoten erstellt und druckt der Knotentyp.</span><span class="sxs-lookup"><span data-stu-id="de386-119">The following example creates a comment node and prints its node type.</span></span>  
  
```csharp  
XComment com = new XComment("This is a comment");  
XNode node = com;  
Console.WriteLine(node.NodeType);  
```  
  
```vb  
Dim com As XComment = New XComment("This is a comment")  
Dim node As XNode = com  
Console.WriteLine(node.NodeType.ToString())  
```  
  
 <span data-ttu-id="de386-120">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="de386-120">This example produces the following output:</span></span>  
  
```  
Comment  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlNodeType" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Linq.XComment.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : string with get, set" Usage="System.Xml.Linq.XComment.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="de386-121">Ruft den Zeichenfolgenwert des Kommentars ab oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de386-121">Gets or sets the string value of this comment.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="de386-122">Ein <see cref="T:System.String" /> mit dem Zeichenfolgenwert dieses Kommentars.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de386-122">A <see cref="T:System.String" /> that contains the string value of this comment.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de386-123">Im Gegensatz zu <xref:System.Xml.Linq.XElement> und <xref:System.Xml.Linq.XAttribute>, Sie können nicht den Inhalt eines Kommentars abrufen, indem er in eine Zeichenfolge umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="de386-123">Unlike <xref:System.Xml.Linq.XElement> and <xref:System.Xml.Linq.XAttribute>, you cannot retrieve the contents of a comment by casting it to a string.</span></span> <span data-ttu-id="de386-124">Stattdessen müssen Sie diese Eigenschaft verwenden, um den Inhalt abzurufen.</span><span class="sxs-lookup"><span data-stu-id="de386-124">Instead, you must use this property to retrieve the contents.</span></span>  
  
 <span data-ttu-id="de386-125">Diese Eigenschaft löst Einstellung der <xref:System.Xml.Linq.XObject.Changed> und die <xref:System.Xml.Linq.XObject.Changing> Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="de386-125">Setting this property will raise the <xref:System.Xml.Linq.XObject.Changed> and the <xref:System.Xml.Linq.XObject.Changing> events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="de386-126">Das folgende Beispiel erstellt einen Kommentarknoten.</span><span class="sxs-lookup"><span data-stu-id="de386-126">The following example creates a comment node.</span></span> <span data-ttu-id="de386-127">Er ruft dann den Inhalt des Kommentarknotens ab.</span><span class="sxs-lookup"><span data-stu-id="de386-127">It then retrieves the contents of the comment node.</span></span>  
  
```csharp  
XComment com = new XComment("This is a comment");  
Console.WriteLine(com.Value);  
```  
  
```vb  
Dim com As XComment = New XComment("This is a comment")  
Console.WriteLine(com.Value)  
```  
  
 <span data-ttu-id="de386-128">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="de386-128">This example produces the following output:</span></span>  
  
```  
This is a comment  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="de386-129">
            <paramref name="value" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de386-129">The <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.Linq.XComment.WriteTo(System.Xml.XmlWriter)" />
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public override void WriteTo (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteTo(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XComment.WriteTo(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteTo (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteTo(System::Xml::XmlWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.WriteTo : System.Xml.XmlWriter -&gt; unit" Usage="xComment.WriteTo writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="de386-130">Ein <see cref="T:System.Xml.XmlWriter" />, in den diese Methode schreibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de386-130">An <see cref="T:System.Xml.XmlWriter" /> into which this method will write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de386-131">Schreibt diesen Kommentar in einen <see cref="T:System.Xml.XmlWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de386-131">Write this comment to an <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de386-132">Diese Methode wird hauptsächlich intern verwendet, durch die Methoden, die eine XML-Struktur zum Schreiben einer <xref:System.Xml.XmlWriter>.</span><span class="sxs-lookup"><span data-stu-id="de386-132">This method is primarily used internally by the methods that write an XML tree to an <xref:System.Xml.XmlWriter>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.Linq.XComment.Value" />
      </Docs>
    </Member>
    <Member MemberName="WriteToAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteToAsync (System.Xml.XmlWriter writer, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteToAsync(class System.Xml.XmlWriter writer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XComment.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteToAsync(System::Xml::XmlWriter ^ writer, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.WriteToAsync : System.Xml.XmlWriter * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="xComment.WriteToAsync (writer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="writer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>