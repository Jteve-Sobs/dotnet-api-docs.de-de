<Type Name="XCData" FullName="System.Xml.Linq.XCData">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a3becea7c3b0ac68eb341a5c9cce4f08851f5a21" /><Meta Name="ms.sourcegitcommit" Value="7272961f6714a2bc372d0c197cb2eb92abf6bf8d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/03/2019" /><Meta Name="ms.locfileid" Value="70230830" /></Metadata><TypeSignature Language="C#" Value="public class XCData : System.Xml.Linq.XText" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XCData extends System.Xml.Linq.XText" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Linq.XCData" />
  <TypeSignature Language="VB.NET" Value="Public Class XCData&#xA;Inherits XText" />
  <TypeSignature Language="C++ CLI" Value="public ref class XCData : System::Xml::Linq::XText" />
  <TypeSignature Language="F#" Value="type XCData = class&#xA;    inherit XText" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XDocument</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Linq</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.Linq.XText</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="48099-101">Stellt einen Textknoten dar, der CDATA enthält.</span><span class="sxs-lookup"><span data-stu-id="48099-101">Represents a text node that contains CDATA.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48099-102">Ein XML-CDATA-Abschnitt ermöglicht es Ihnen, fast jede beliebige Zeichenfolge als Inhalt eines XML-Elements zu speichern.</span><span class="sxs-lookup"><span data-stu-id="48099-102">An XML CDATA section allows you to store almost any arbitrary string as the contents of an XML element.</span></span> <span data-ttu-id="48099-103">Diese Klasse stellt das XML-Konzept eines CDATA-Text Knotens dar.</span><span class="sxs-lookup"><span data-stu-id="48099-103">This class represents the XML concept of a CDATA text node.</span></span>  
  
 <span data-ttu-id="48099-104">Diese Klasse wird von <xref:System.Xml.Linq.XText>abgeleitet, das XML-Text darstellt.</span><span class="sxs-lookup"><span data-stu-id="48099-104">This class derives from <xref:System.Xml.Linq.XText>, which represents XML text.</span></span> <span data-ttu-id="48099-105">CDATA-Abschnitte sind Sonderfälle von XML-Text.</span><span class="sxs-lookup"><span data-stu-id="48099-105">CDATA sections are special cases of XML text.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="48099-106">LINQ to XML</span><span class="sxs-lookup"><span data-stu-id="48099-106">LINQ to XML</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="48099-107">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Linq.XCData" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="48099-107">Initializes a new instance of the <see cref="T:System.Xml.Linq.XCData" /> class.</span></span></summary>
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="48099-108">LINQ to XML</span><span class="sxs-lookup"><span data-stu-id="48099-108">LINQ to XML</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XCData (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XCData.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XCData(System::String ^ value);" />
      <MemberSignature Language="F#" Value="new System.Xml.Linq.XCData : string -&gt; System.Xml.Linq.XCData" Usage="new System.Xml.Linq.XCData value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="48099-109">Eine Zeichenfolge, die den Wert des <see cref="T:System.Xml.Linq.XCData" />-Knotens enthält.</span><span class="sxs-lookup"><span data-stu-id="48099-109">A string that contains the value of the <see cref="T:System.Xml.Linq.XCData" /> node.</span></span></param>
        <summary><span data-ttu-id="48099-110">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Linq.XCData" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="48099-110">Initializes a new instance of the <see cref="T:System.Xml.Linq.XCData" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="48099-111">Im folgenden Beispiel wird ein-Element erstellt, das einen CDATA-Knoten enthält.</span><span class="sxs-lookup"><span data-stu-id="48099-111">The following example creates an element that contains a CDATA node.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XCData("Some content")  
);  
Console.WriteLine(root);  
```  
  
```vb  
Dim root As XElement = <Root>  
                           <![CDATA[Some content]]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="48099-112">LINQ to XML</span><span class="sxs-lookup"><span data-stu-id="48099-112">LINQ to XML</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XCData (System.Xml.Linq.XCData other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.Linq.XCData other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XCData.#ctor(System.Xml.Linq.XCData)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (other As XCData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XCData(System::Xml::Linq::XCData ^ other);" />
      <MemberSignature Language="F#" Value="new System.Xml.Linq.XCData : System.Xml.Linq.XCData -&gt; System.Xml.Linq.XCData" Usage="new System.Xml.Linq.XCData other" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="other" Type="System.Xml.Linq.XCData" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="48099-113">Der <see cref="T:System.Xml.Linq.XCData" />-Knoten, aus dem kopiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="48099-113">The <see cref="T:System.Xml.Linq.XCData" /> node to copy from.</span></span></param>
        <summary><span data-ttu-id="48099-114">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Linq.XCData" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="48099-114">Initializes a new instance of the <see cref="T:System.Xml.Linq.XCData" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48099-115">Dieser Konstruktor wird hauptsächlich intern verwendet, um eine tiefe Kopie einer XML-Struktur zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="48099-115">This constructor is primarily used internally to make a deep copy of an XML tree.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="48099-116">LINQ to XML</span><span class="sxs-lookup"><span data-stu-id="48099-116">LINQ to XML</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Linq.XCData.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NodeType As XmlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNodeType NodeType { System::Xml::XmlNodeType get(); };" />
      <MemberSignature Language="F#" Value="member this.NodeType : System.Xml.XmlNodeType" Usage="System.Xml.Linq.XCData.NodeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="48099-117">Ruft den Knotentyp für diesen Knoten ab.</span><span class="sxs-lookup"><span data-stu-id="48099-117">Gets the node type for this node.</span></span></summary>
        <value><span data-ttu-id="48099-118">Der Knotentyp.</span><span class="sxs-lookup"><span data-stu-id="48099-118">The node type.</span></span> <span data-ttu-id="48099-119">Für <see cref="T:System.Xml.Linq.XCData" />-Objekte ist dieser Wert <see cref="F:System.Xml.XmlNodeType.CDATA" />.</span><span class="sxs-lookup"><span data-stu-id="48099-119">For <see cref="T:System.Xml.Linq.XCData" /> objects, this value is <see cref="F:System.Xml.XmlNodeType.CDATA" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48099-120">Da alle Klassen, die von <xref:System.Xml.Linq.XObject> abgeleitet werden <xref:System.Xml.Linq.XObject.NodeType%2A> , eine Eigenschaft enthalten, können Sie Code schreiben, der auf Auflistungen <xref:System.Xml.Linq.XObject>der konkreten Unterklasse von angewendet wird.</span><span class="sxs-lookup"><span data-stu-id="48099-120">Because all classes that derive from <xref:System.Xml.Linq.XObject> contain a <xref:System.Xml.Linq.XObject.NodeType%2A> property, you can write code that operates on collections of concrete subclass of <xref:System.Xml.Linq.XObject>.</span></span> <span data-ttu-id="48099-121">Der Code kann dann auf den Knotentyp der einzelnen Knoten in der Auflistung testen.</span><span class="sxs-lookup"><span data-stu-id="48099-121">Your code can then test for the node type of each node in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="48099-122">Im folgenden Beispiel wird eine XML-Struktur erstellt, die verschiedene Typen von Knoten enthält.</span><span class="sxs-lookup"><span data-stu-id="48099-122">The following example creates an XML tree that contains various types of nodes.</span></span> <span data-ttu-id="48099-123">Anschließend durchläuft er die Struktur und gibt den Knotentyp der einzelnen Knoten aus.</span><span class="sxs-lookup"><span data-stu-id="48099-123">It then iterates through the tree, and prints the node type of each node.</span></span>  
  
```csharp  
// Note that XNode uses XmlNodeType, which is in the System.Xml namespace.  
XDocument xmlTree = new XDocument(  
    new XComment("a comment"),  
    new XProcessingInstruction("xml-stylesheet", "type=\"text/xsl\" href=\"hello.xsl\""),  
    new XElement("Root",  
        new XAttribute("Att", "attContent"),  
        new XElement("Child1",  
            new XCData("CDATA content")  
        ),  
        new XElement("Child2",  
            new XText("Text content")  
        )  
    )  
);  
  
foreach (XNode node in xmlTree.DescendantNodes())  
{  
    Console.WriteLine(node.NodeType);  
    if (node.NodeType == XmlNodeType.Element)  
    {  
        foreach (XAttribute att in ((XElement)node).Attributes())  
            Console.WriteLine(att.NodeType);  
    }  
}  
```  
  
```vb  
Dim xmlTree As XDocument = _   
    <?xml version="1.0" encoding="utf-8"?>  
        <!--a comment-->  
        <?xml-stylesheet type='text/xsl' href='hello.xsl'?>  
        <Root Att="attContent">  
            <Child1><![CDATA[CDATA content]]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlNodeType" />
        <altmember cref="T:System.Xml.Linq.XNode" />
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="48099-124">LINQ to XML</span><span class="sxs-lookup"><span data-stu-id="48099-124">LINQ to XML</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public override void WriteTo (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteTo(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XCData.WriteTo(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteTo (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteTo(System::Xml::XmlWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.WriteTo : System.Xml.XmlWriter -&gt; unit" Usage="xCData.WriteTo writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="48099-125">Ein <see cref="T:System.Xml.XmlWriter" />, in den diese Methode schreibt.</span><span class="sxs-lookup"><span data-stu-id="48099-125">An <see cref="T:System.Xml.XmlWriter" /> into which this method will write.</span></span></param>
        <summary><span data-ttu-id="48099-126">Schreibt dieses CDATA-Objekt in einen <see cref="T:System.Xml.XmlWriter" />.</span><span class="sxs-lookup"><span data-stu-id="48099-126">Writes this CDATA object to an <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48099-127">Diese Methode wird hauptsächlich intern von den Methoden verwendet, die eine XML-Struktur <xref:System.Xml.XmlWriter>in einen schreiben.</span><span class="sxs-lookup"><span data-stu-id="48099-127">This method is primarily used internally by the methods that write an XML tree to an <xref:System.Xml.XmlWriter>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="48099-128">LINQ to XML</span><span class="sxs-lookup"><span data-stu-id="48099-128">LINQ to XML</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/f01bdf96-c5a9-4859-b220-125ee531e71f"><span data-ttu-id="48099-129">Serialisieren von XML-Strukturen</span><span class="sxs-lookup"><span data-stu-id="48099-129">Serializing XML Trees</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteToAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteToAsync (System.Xml.XmlWriter writer, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteToAsync(class System.Xml.XmlWriter writer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XCData.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteToAsync(System::Xml::XmlWriter ^ writer, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.WriteToAsync : System.Xml.XmlWriter * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="xCData.WriteToAsync (writer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="48099-130">Das Writer-Objekt, in das <see cref="T:System.Xml.Linq.XCData" /> geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="48099-130">The writer to write this <see cref="T:System.Xml.Linq.XCData" /> to.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="48099-131">Ein Token, das verwendet werden kann, um den Abbruch des asynchronen Vorgangs anzufordern.</span><span class="sxs-lookup"><span data-stu-id="48099-131">A token that can be used to request cancellation of the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="48099-132">Schreibt <see cref="T:System.Xml.Linq.XCData" /> in die angegebene <see cref="T:System.Xml.XmlWriter" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="48099-132">Writes this <see cref="T:System.Xml.Linq.XCData" /> to the given <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <returns><span data-ttu-id="48099-133">Ein Task, der den asynchronen Schreibvorgang darstellt.</span><span class="sxs-lookup"><span data-stu-id="48099-133">A task representing the asynchronous write operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
