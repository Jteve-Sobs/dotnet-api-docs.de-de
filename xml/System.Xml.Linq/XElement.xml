<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XElement.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac515213489ac8be26d6703a879772581c4b4082467.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">15213489ac8be26d6703a879772581c4b4082467</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XElement">
          <source>Represents an XML element.</source>
          <target state="translated">Stellt ein XML-Element dar.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XElement">
          <source>See <bpt id="p1">[</bpt>XElement Class Overview<ept id="p1">](http://msdn.microsoft.com/library/d35180fe-7016-4895-9bfc-ba1e3f7875ec)</ept> and the Remarks section on this page for usage information and examples.</source>
          <target state="translated">Unter <bpt id="p1">[</bpt>Übersicht über die XElement-Klasse<ept id="p1">](http://msdn.microsoft.com/library/d35180fe-7016-4895-9bfc-ba1e3f7875ec)</ept> und im Abschnitt „Hinweise“ auf dieser Seite finden Sie Nutzungsinformationen und Beispiele.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>This class represents an XML element, the fundamental XML construct.</source>
          <target state="translated">Diese Klasse stellt ein XML-Element, das grundlegende XML-Konstrukt.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>See <bpt id="p1">[</bpt>XElement Class Overview<ept id="p1">](http://msdn.microsoft.com/library/d35180fe-7016-4895-9bfc-ba1e3f7875ec)</ept> for other usage information.</source>
          <target state="translated">Finden Sie unter <bpt id="p1">[</bpt>"XElement"-Klassenübersicht<ept id="p1">](http://msdn.microsoft.com/library/d35180fe-7016-4895-9bfc-ba1e3f7875ec)</ept> für Weitere Informationen zur Verwendung.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>An element has an <ph id="ph1">&lt;xref:System.Xml.Linq.XName&gt;</ph>, optionally one or more attributes, and can optionally contain content (for more information, see <ph id="ph2">&lt;xref:System.Xml.Linq.XContainer.Nodes%2A&gt;</ph>).</source>
          <target state="translated">Ein Element verfügt über eine <ph id="ph1">&lt;xref:System.Xml.Linq.XName&gt;</ph>, können Sie optional eine oder mehrere Attribute und optional Inhalte enthalten kann (Weitere Informationen finden Sie unter <ph id="ph2">&lt;xref:System.Xml.Linq.XContainer.Nodes%2A&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>An <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> can contain the following types of content:</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> kann die folgenden Typen von Inhalt enthalten:</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>For details about the valid content of an <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph>, see <bpt id="p1">[</bpt>Valid Content of XElement and XDocument Objects<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</source>
          <target state="translated">Weitere Informationen zu den gültigen Inhalt, der eine <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph>, finden Sie unter <bpt id="p1">[</bpt>gültiger Inhalt von "XElement" und "XDocument" Objekte<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source><ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> derives from <ph id="ph2">&lt;xref:System.Xml.Linq.XContainer&gt;</ph>, which derives from <ph id="ph3">&lt;xref:System.Xml.Linq.XNode&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> leitet sich von <ph id="ph2">&lt;xref:System.Xml.Linq.XContainer&gt;</ph>, die sich daraus ableitet <ph id="ph3">&lt;xref:System.Xml.Linq.XNode&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>Some <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> methods can be used from XAML.</source>
          <target state="translated">Einige <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> Methoden können in XAML verwendet werden.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>For more information, see <bpt id="p1">[</bpt>LINQ to XML Dynamic Properties<ept id="p1">](http://msdn.microsoft.com/library/0455f47c-4a68-4f2e-a3f8-dd1d85b99012)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>Dynamische Eigenschaften in LINQ to XML<ept id="p1">](http://msdn.microsoft.com/library/0455f47c-4a68-4f2e-a3f8-dd1d85b99012)</ept>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>The following example creates an XML tree.</source>
          <target state="translated">Das folgende Beispiel erstellt eine XML-Struktur.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>The content of the new element comes from a LINQ query.</source>
          <target state="translated">Der Inhalt des neuen Elements stammt von einer LINQ-Abfrage ab.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>The following is the same example, but in this case the XML is in a namespace.</source>
          <target state="translated">Im folgenden wird das gleiche Beispiel, aber in diesem Fall wird des XML-Codes in einem Namespace.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>For more information, see <bpt id="p1">[</bpt>Working with XML Namespaces<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>arbeiten mit XML-Namespaces<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XElement">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>For details about the valid content that can be passed to this constructor, see <bpt id="p1">[</bpt>Valid Content of XElement and XDocument Objects<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</source>
          <target state="translated">Weitere Informationen zu den gültigen Inhalt, der an diesen Konstruktor übergeben werden kann, finden Sie unter <bpt id="p1">[</bpt>gültiger Inhalt von "XElement" und "XDocument" Objekte<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>There is an implicit conversion from string to <ph id="ph1">&lt;xref:System.Xml.Linq.XName&gt;</ph>.</source>
          <target state="translated">Es wird eine implizite Konvertierung von String in <ph id="ph1">&lt;xref:System.Xml.Linq.XName&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>Typical use of this constructor is to specify a string as the parameter instead of creating a new <ph id="ph1">&lt;xref:System.Xml.Linq.XName&gt;</ph>.</source>
          <target state="translated">Typische Verwendung dieses Konstruktors ist die Angabe eine Zeichenfolge als Parameter anstelle von beim Erstellen eines neuen <ph id="ph1">&lt;xref:System.Xml.Linq.XName&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>When creating an element in a namespace, typical use is to use the addition operator overload with an <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> and a string to create an <ph id="ph2">&lt;xref:System.Xml.Linq.XName&gt;</ph>.</source>
          <target state="translated">Wenn Sie ein Element in einem Namespace zu erstellen, dient gewöhnlich zum Verwenden der additionsoperatorüberladung mit einer <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> und eine Zeichenfolge zum Erstellen einer <ph id="ph2">&lt;xref:System.Xml.Linq.XName&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>For more information, see <bpt id="p1">[</bpt>Working with XML Namespaces<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>arbeiten mit XML-Namespaces<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>The following example creates an XML tree.</source>
          <target state="translated">Das folgende Beispiel erstellt eine XML-Struktur.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>The content of the new element comes from a LINQ query.</source>
          <target state="translated">Der Inhalt des neuen Elements stammt von einer LINQ-Abfrage ab.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XElement)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> object to copy from.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>-Objekt, aus dem kopiert werden soll.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XElement)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> class from another <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> object.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>-Klasse mit einem anderen <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> -Objekt.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XElement)">
          <source>This constructor makes a deep copy of an element.</source>
          <target state="translated">Dieser Konstruktor erstellt eine tiefe Kopie eines Elements.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XElement)">
          <source>The following example creates an XML tree, creates a clone of the tree, and then calls <ph id="ph1">&lt;xref:System.Xml.Linq.XNode.DeepEquals%2A&gt;</ph>, which tests whether the two XML trees are equal.</source>
          <target state="translated">Im folgende Beispiel wird eine XML-Struktur erstellt, erstellt einen Klon der Struktur und ruft dann <ph id="ph1">&lt;xref:System.Xml.Linq.XNode.DeepEquals%2A&gt;</ph>, die testet, ob die beiden XML-Strukturen gleich sind.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XElement)">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> that contains the name of the element.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph>, der den Namen des Elements enthält.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> class with the specified name.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>-Klasse mit dem angegebenen Namen.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName)">
          <source>This constructor creates an element with no content and no attributes.</source>
          <target state="translated">Dieser Konstruktor erstellt ein Element ohne Inhalt und keine Attribute.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName)">
          <source>There is an implicit conversion from string to <ph id="ph1">&lt;xref:System.Xml.Linq.XName&gt;</ph>.</source>
          <target state="translated">Es wird eine implizite Konvertierung von String in <ph id="ph1">&lt;xref:System.Xml.Linq.XName&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName)">
          <source>Typical use of this constructor is to specify a string as the parameter instead of creating a new <ph id="ph1">&lt;xref:System.Xml.Linq.XName&gt;</ph>.</source>
          <target state="translated">Typische Verwendung dieses Konstruktors ist die Angabe eine Zeichenfolge als Parameter anstelle von beim Erstellen eines neuen <ph id="ph1">&lt;xref:System.Xml.Linq.XName&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName)">
          <source>When creating an element in a namespace, typical use is to use the addition operator overload with an <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> and a string to create an <ph id="ph2">&lt;xref:System.Xml.Linq.XName&gt;</ph>.</source>
          <target state="translated">Wenn Sie ein Element in einem Namespace zu erstellen, dient gewöhnlich zum Verwenden der additionsoperatorüberladung mit einer <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> und eine Zeichenfolge zum Erstellen einer <ph id="ph2">&lt;xref:System.Xml.Linq.XName&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName)">
          <source>For more information, see <bpt id="p1">[</bpt>Working with XML Namespaces<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>arbeiten mit XML-Namespaces<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName)">
          <source>The following example creates an element with no content.</source>
          <target state="translated">Das folgende Beispiel erstellt ein Element ohne Inhalt.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName)">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName)">
          <source>The following example creates an element in a namespace with no content.</source>
          <target state="translated">Das folgende Beispiel erstellt ein Element in einem Namespace ohne Inhalt.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName)">
          <source>For more information, see <bpt id="p1">[</bpt>Working with XML Namespaces<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>arbeiten mit XML-Namespaces<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName)">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XStreamingElement)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XStreamingElement" /&gt;</ph> that contains unevaluated queries that will be iterated for the contents of this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XStreamingElement" /&gt;</ph>, das nicht ausgewertete Abfragen enthält, die zum Ermitteln des Inhalts des <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>durchlaufen werden.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XStreamingElement)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> class from an <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XStreamingElement" /&gt;</ph> object.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>-Klasse mit einem <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XStreamingElement" /&gt;</ph>-Objekt.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XStreamingElement)">
          <source>This constructor iterates through the contents of the specified <ph id="ph1">&lt;xref:System.Xml.Linq.XStreamingElement&gt;</ph>, and creates an element with its contents.</source>
          <target state="translated">Dieser Konstruktor durchläuft den Inhalt des angegebenen <ph id="ph1">&lt;xref:System.Xml.Linq.XStreamingElement&gt;</ph>, und erstellt ein Element mit seinen Inhalt.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XStreamingElement)">
          <source>The following example creates a source XML tree, and then creates an <ph id="ph1">&lt;xref:System.Xml.Linq.XStreamingElement&gt;</ph> from a query on the source XML tree.</source>
          <target state="translated">Das folgende Beispiel erstellt eine Quell-XML-Struktur, und anschließend eine <ph id="ph1">&lt;xref:System.Xml.Linq.XStreamingElement&gt;</ph> aus einer Abfrage auf der ursprünglichen XML-Struktur.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XStreamingElement)">
          <source>It then serializes the <ph id="ph1">&lt;xref:System.Xml.Linq.XStreamingElement&gt;</ph> to the console, adds a new element to the source XML tree, and then serializes the <ph id="ph2">&lt;xref:System.Xml.Linq.XStreamingElement&gt;</ph> again.</source>
          <target state="translated">Klicken Sie dann serialisiert die <ph id="ph1">&lt;xref:System.Xml.Linq.XStreamingElement&gt;</ph> fügt Sie an der Konsole ein neues Element auf der ursprünglichen XML-Struktur, und klicken Sie dann serialisiert die <ph id="ph2">&lt;xref:System.Xml.Linq.XStreamingElement&gt;</ph> erneut.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XStreamingElement)">
          <source>You can see that element newly added to the source XML tree is not included in the first serialization, but is included in the second.</source>
          <target state="translated">Sie können sehen, an der ursprünglichen XML-Struktur neu hinzugefügten Element ist nicht in der ersten Serialisierung enthalten, aber in der zweiten enthalten ist.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XStreamingElement)">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> that contains the element name.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph>, der den Elementnamen enthält.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object)">
          <source>The contents of the element.</source>
          <target state="translated">Der Inhalt des Elements.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> class with the specified name and content.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>-Klasse mit dem angegebenen Namen und Inhalt.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object)">
          <source>This constructor creates an element with the specified content and attributes.</source>
          <target state="translated">Dieser Konstruktor erstellt ein Element mit dem angegebenen Inhalt und Attribute.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object)">
          <source>There is an implicit conversion from string to <ph id="ph1">&lt;xref:System.Xml.Linq.XName&gt;</ph>.</source>
          <target state="translated">Es wird eine implizite Konvertierung von String in <ph id="ph1">&lt;xref:System.Xml.Linq.XName&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object)">
          <source>Typical use of this constructor is to specify a string as the parameter instead of creating a new <ph id="ph1">&lt;xref:System.Xml.Linq.XName&gt;</ph>.</source>
          <target state="translated">Typische Verwendung dieses Konstruktors ist die Angabe eine Zeichenfolge als Parameter anstelle von beim Erstellen eines neuen <ph id="ph1">&lt;xref:System.Xml.Linq.XName&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object)">
          <source>When creating an element in a namespace, typical use is to use the addition operator overload with an <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> and a string to create an <ph id="ph2">&lt;xref:System.Xml.Linq.XName&gt;</ph>.</source>
          <target state="translated">Wenn Sie ein Element in einem Namespace zu erstellen, dient gewöhnlich zum Verwenden der additionsoperatorüberladung mit einer <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> und eine Zeichenfolge zum Erstellen einer <ph id="ph2">&lt;xref:System.Xml.Linq.XName&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object)">
          <source>For more information, see <bpt id="p1">[</bpt>Working with XML Namespaces<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>arbeiten mit XML-Namespaces<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object)">
          <source>For details about the valid content that can be passed to this constructor, see <bpt id="p1">[</bpt>Valid Content of XElement and XDocument Objects<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</source>
          <target state="translated">Weitere Informationen zu den gültigen Inhalt, der an diesen Konstruktor übergeben werden kann, finden Sie unter <bpt id="p1">[</bpt>gültiger Inhalt von "XElement" und "XDocument" Objekte<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object)">
          <source>The following example creates an XML tree.</source>
          <target state="translated">Das folgende Beispiel erstellt eine XML-Struktur.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object)">
          <source>The content of the new element comes from a LINQ query.</source>
          <target state="translated">Der Inhalt des neuen Elements stammt von einer LINQ-Abfrage ab.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object)">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object)">
          <source>The following example creates an XML tree with a variety of types of content.</source>
          <target state="translated">Das folgende Beispiel erstellt eine XML-Struktur mit einer Vielzahl von Inhaltstypen.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object)">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object)">
          <source>The following example creates an XML tree in a namespace.</source>
          <target state="translated">Das folgende Beispiel erstellt eine XML-Struktur in einem Namespace.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object)">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object)">
          <source>The following example creates an XML tree with nested namespaces.</source>
          <target state="translated">Das folgende Beispiel erstellt eine XML-Struktur mit geschachtelten Namespaces.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object)">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> that contains the element name.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph>, der den Elementnamen enthält.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object[])">
          <source>The initial content of the element.</source>
          <target state="translated">Der ursprüngliche Inhalt des Elements.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> class with the specified name and content.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>-Klasse mit dem angegebenen Namen und Inhalt.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object[])">
          <source>This constructor creates an element with the specified content and attributes.</source>
          <target state="translated">Dieser Konstruktor erstellt ein Element mit dem angegebenen Inhalt und Attribute.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object[])">
          <source>There is an implicit conversion from string to <ph id="ph1">&lt;xref:System.Xml.Linq.XName&gt;</ph>.</source>
          <target state="translated">Es wird eine implizite Konvertierung von String in <ph id="ph1">&lt;xref:System.Xml.Linq.XName&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object[])">
          <source>Typical use of this constructor is to specify a string as the parameter instead of creating a new <ph id="ph1">&lt;xref:System.Xml.Linq.XName&gt;</ph>.</source>
          <target state="translated">Typische Verwendung dieses Konstruktors ist die Angabe eine Zeichenfolge als Parameter anstelle von beim Erstellen eines neuen <ph id="ph1">&lt;xref:System.Xml.Linq.XName&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object[])">
          <source>When creating an element in a namespace, typical use is to use the addition operator overload with an <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> and a string to create an <ph id="ph2">&lt;xref:System.Xml.Linq.XName&gt;</ph>.</source>
          <target state="translated">Wenn Sie ein Element in einem Namespace zu erstellen, dient gewöhnlich zum Verwenden der additionsoperatorüberladung mit einer <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> und eine Zeichenfolge zum Erstellen einer <ph id="ph2">&lt;xref:System.Xml.Linq.XName&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object[])">
          <source>For more information, see <bpt id="p1">[</bpt>Working with XML Namespaces<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>arbeiten mit XML-Namespaces<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object[])">
          <source>For details about the valid content that can be passed to this constructor, see <bpt id="p1">[</bpt>Valid Content of XElement and XDocument Objects<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</source>
          <target state="translated">Weitere Informationen zu den gültigen Inhalt, der an diesen Konstruktor übergeben werden kann, finden Sie unter <bpt id="p1">[</bpt>gültiger Inhalt von "XElement" und "XDocument" Objekte<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object[])">
          <source>The following example creates an XML tree.</source>
          <target state="translated">Das folgende Beispiel erstellt eine XML-Struktur.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object[])">
          <source>The content of the new element comes from a LINQ query.</source>
          <target state="translated">Der Inhalt des neuen Elements stammt von einer LINQ-Abfrage ab.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object[])">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object[])">
          <source>The following example creates an XML tree with a variety of types of content.</source>
          <target state="translated">Das folgende Beispiel erstellt eine XML-Struktur mit einer Vielzahl von Inhaltstypen.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object[])">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object[])">
          <source>The following example creates an XML tree in a namespace.</source>
          <target state="translated">Das folgende Beispiel erstellt eine XML-Struktur in einem Namespace.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object[])">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object[])">
          <source>The following example creates an XML tree with nested namespaces.</source>
          <target state="translated">Das folgende Beispiel erstellt eine XML-Struktur mit geschachtelten Namespaces.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object[])">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XElement">
          <source>Returns a collection of elements that contain this element, and the ancestors of this element.</source>
          <target state="translated">Gibt eine Auflistung von Elementen mit diesem Element und den übergeordneten Elementen dieses Elements zurück.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>The elements in the returned collection are in reverse document order.</source>
          <target state="translated">Die Elemente in der zurückgegebenen Auflistung sind in umgekehrter Dokumentenreihenfolge vor.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>This method uses deferred execution.</source>
          <target state="translated">Diese Methode verwendet verzögerte Ausführung.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.AncestorsAndSelf">
          <source>Returns a collection of elements that contain this element, and the ancestors of this element.</source>
          <target state="translated">Gibt eine Auflistung von Elementen mit diesem Element und den übergeordneten Elementen dieses Elements zurück.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.AncestorsAndSelf">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> of elements that contain this element, and the ancestors of this element.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> vom Typ <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> von Elementen mit diesem Element und den übergeordneten Elementen dieses Elements.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.AncestorsAndSelf">
          <source>The elements in the returned collection are in reverse document order.</source>
          <target state="translated">Die Elemente in der zurückgegebenen Auflistung sind in umgekehrter Dokumentenreihenfolge vor.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.AncestorsAndSelf">
          <source>This method uses deferred execution.</source>
          <target state="translated">Diese Methode verwendet verzögerte Ausführung.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.AncestorsAndSelf">
          <source>The following example creates an XML tree.</source>
          <target state="translated">Das folgende Beispiel erstellt eine XML-Struktur.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.AncestorsAndSelf">
          <source>It then finds the <ph id="ph1">`GrandChild`</ph> element, and then prints the ancestors of it.</source>
          <target state="translated">Sucht dann nach der <ph id="ph1">`GrandChild`</ph> Element, und klicken Sie dann druckt die Vorgänger des Zertifikats.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.AncestorsAndSelf">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.AncestorsAndSelf(System.Xml.Linq.XName)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> to match.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph>, mit dem eine Übereinstimmung gefunden werden soll.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.AncestorsAndSelf(System.Xml.Linq.XName)">
          <source>Returns a filtered collection of elements that contain this element, and the ancestors of this element.</source>
          <target state="translated">Gibt eine gefilterte Auflistung von Elementen mit diesem Element und den übergeordneten Elementen dieses Elements zurück.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.AncestorsAndSelf(System.Xml.Linq.XName)">
          <source>Only elements that have a matching <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> are included in the collection.</source>
          <target state="translated">Nur Elemente, die über einen übereinstimmenden <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> verfügen, sind in der Auflistung enthalten.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.AncestorsAndSelf(System.Xml.Linq.XName)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> that contain this element, and the ancestors of this element.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> vom Typ <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> mit diesem Element und den übergeordneten Elementen dieses Elements.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.AncestorsAndSelf(System.Xml.Linq.XName)">
          <source>Only elements that have a matching <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> are included in the collection.</source>
          <target state="translated">Nur Elemente, die über einen übereinstimmenden <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> verfügen, sind in der Auflistung enthalten.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.AncestorsAndSelf(System.Xml.Linq.XName)">
          <source>The elements in the returned collection are in reverse document order.</source>
          <target state="translated">Die Elemente in der zurückgegebenen Auflistung sind in umgekehrter Dokumentenreihenfolge vor.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.AncestorsAndSelf(System.Xml.Linq.XName)">
          <source>This method uses deferred execution.</source>
          <target state="translated">Diese Methode verwendet verzögerte Ausführung.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.AncestorsAndSelf(System.Xml.Linq.XName)">
          <source>The following example uses this .</source>
          <target state="translated">Im folgende Beispiel wird verwendet.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.AncestorsAndSelf(System.Xml.Linq.XName)">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Attribute(System.Xml.Linq.XName)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> of the <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to get.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> des abzurufenden <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Attribute(System.Xml.Linq.XName)">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> of this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> that has the specified <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph>.</source>
          <target state="translated">Gibt das <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> des <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> zurück, das über den angegebenen <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph>verfügt.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Attribute(System.Xml.Linq.XName)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> that has the specified <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph>; <ph id="ph3">&lt;see langword="null" /&gt;</ph> if there is no attribute with the specified name.</source>
          <target state="translated">An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>, das über den angegebenen <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph>verfügt; <ph id="ph3">&lt;see langword="null" /&gt;</ph>, wenn kein Attribut mit dem angegebenen Namen vorhanden ist.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Attribute(System.Xml.Linq.XName)">
          <source>Some  return collections of elements or attributes.</source>
          <target state="translated">Einige werden die Auflistungen von Elementen oder Attributen zurückgegeben.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Attribute(System.Xml.Linq.XName)">
          <source>This method returns only a single attribute.</source>
          <target state="translated">Diese Methode gibt nur ein einzelnes Attribut zurück.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Attribute(System.Xml.Linq.XName)">
          <source>Sometimes this is referred to as a <bpt id="p1">*</bpt>singleton<ept id="p1">*</ept> (in contrast to a <bpt id="p2">*</bpt>collection<ept id="p2">*</ept>).</source>
          <target state="translated">Dies wird manchmal als eine <bpt id="p1">*</bpt>Singleton<ept id="p1">*</ept> (im Gegensatz zu einer <bpt id="p2">*</bpt>Auflistung<ept id="p2">*</ept>).</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Attribute(System.Xml.Linq.XName)">
          <source>Visual Basic users can use the integrated attribute axis to retrieve the value of an attribute with a specified name.</source>
          <target state="translated">Visual Basic-Benutzer können die integrierte Attributachse zum Abrufen des Werts eines Attributs mit dem angegebenen Namen.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Attribute(System.Xml.Linq.XName)">
          <source>The following example creates an element with an attribute.</source>
          <target state="translated">Im folgende Beispiel wird ein Element mit einem Attribut erstellt.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Attribute(System.Xml.Linq.XName)">
          <source>It then retrieves the attribute using this method.</source>
          <target state="translated">Anschließend wird das Attribut, das mit dieser Methode abgerufen.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Attribute(System.Xml.Linq.XName)">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Attribute(System.Xml.Linq.XName)">
          <source>The following is the same example, but in this case the XML is in a namespace.</source>
          <target state="translated">Im folgenden wird das gleiche Beispiel, aber in diesem Fall wird des XML-Codes in einem Namespace.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Attribute(System.Xml.Linq.XName)">
          <source>For more information, see <bpt id="p1">[</bpt>Working with XML Namespaces<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>arbeiten mit XML-Namespaces<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Attribute(System.Xml.Linq.XName)">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XElement">
          <source>Returns a collection of attributes of this element.</source>
          <target state="translated">Gibt eine Auflistung von Attributen dieses Elements zurück.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>This method uses deferred execution.</source>
          <target state="translated">Diese Methode verwendet verzögerte Ausführung.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Attributes">
          <source>Returns a collection of attributes of this element.</source>
          <target state="translated">Gibt eine Auflistung von Attributen dieses Elements zurück.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Attributes">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> of attributes of this element.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> vom Typ <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> der Attribute dieses Elements.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Attributes">
          <source>The attributes in the returned collection are in the order that they were added to the element.</source>
          <target state="translated">Die Attribute in der zurückgegebenen Auflistung sind in der Reihenfolge an, dass sie auf das Element hinzugefügt wurden.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Attributes">
          <source>If the XML tree was parsed from XML, the attributes are returned in document order.</source>
          <target state="translated">Wenn die XML-Struktur aus XML analysiert wurde, werden die Attribute in der Dokumentreihenfolge zurückgegeben.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Attributes">
          <source>This method uses deferred execution.</source>
          <target state="translated">Diese Methode verwendet verzögerte Ausführung.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Attributes">
          <source>The following example creates an element with two attributes.</source>
          <target state="translated">Das folgende Beispiel erstellt ein Element mit zwei Attributen.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Attributes">
          <source>It then uses this  to retrieve all attributes of the element.</source>
          <target state="translated">Er verwendet diese dann alle Attribute des Elements abgerufen.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Attributes">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Attributes">
          <source>The following is the same example, but in this case the XML is in a namespace.</source>
          <target state="translated">Im folgenden wird das gleiche Beispiel, aber in diesem Fall wird des XML-Codes in einem Namespace.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Attributes">
          <source>For more information, see <bpt id="p1">[</bpt>Working with XML Namespaces<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>arbeiten mit XML-Namespaces<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Attributes">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Attributes(System.Xml.Linq.XName)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> to match.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph>, mit dem eine Übereinstimmung gefunden werden soll.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Attributes(System.Xml.Linq.XName)">
          <source>Returns a filtered collection of attributes of this element.</source>
          <target state="translated">Gibt eine gefilterte Auflistung der Attribute dieses Elements zurück.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Attributes(System.Xml.Linq.XName)">
          <source>Only elements that have a matching <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> are included in the collection.</source>
          <target state="translated">Nur Elemente, die über einen übereinstimmenden <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> verfügen, sind in der Auflistung enthalten.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Attributes(System.Xml.Linq.XName)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> that contains the attributes of this element.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> vom Typ <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>, das die Attribute dieses Elements enthält.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Attributes(System.Xml.Linq.XName)">
          <source>Only elements that have a matching <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> are included in the collection.</source>
          <target state="translated">Nur Elemente, die über einen übereinstimmenden <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> verfügen, sind in der Auflistung enthalten.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Attributes(System.Xml.Linq.XName)">
          <source>Attribute names must be unique within an element.</source>
          <target state="translated">Attributnamen müssen innerhalb eines Elements eindeutig sein.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Attributes(System.Xml.Linq.XName)">
          <source>Therefore, this  can return either a collection that contains only one attribute, or it can return an empty collection.</source>
          <target state="translated">Aus diesem Grund Rückgabewert kann entweder eine Auflistung, die nur ein Attribut enthält, oder es kann eine leere Auflistung zurückgegeben.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Attributes(System.Xml.Linq.XName)">
          <source>This method uses deferred execution.</source>
          <target state="translated">Diese Methode verwendet verzögerte Ausführung.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Attributes(System.Xml.Linq.XName)">
          <source>The following example uses this .</source>
          <target state="translated">Im folgende Beispiel wird verwendet.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Attributes(System.Xml.Linq.XName)">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Attributes(System.Xml.Linq.XName)">
          <source>The following is the same example, but in this case the XML is in a namespace.</source>
          <target state="translated">Im folgenden wird das gleiche Beispiel, aber in diesem Fall wird des XML-Codes in einem Namespace.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Attributes(System.Xml.Linq.XName)">
          <source>For more information, see <bpt id="p1">[</bpt>Working with XML Namespaces<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>arbeiten mit XML-Namespaces<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Attributes(System.Xml.Linq.XName)">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.DescendantNodesAndSelf">
          <source>Returns a collection of nodes that contain this element, and all descendant nodes of this element, in document order.</source>
          <target state="translated">Gibt eine Auflistung von Knoten mit diesem Element und allen Nachfolgerknoten dieses Elements in Dokumentreihenfolge zurück.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.DescendantNodesAndSelf">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> that contain this element, and all descendant nodes of this element, in document order.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> vom Typ <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> mit diesem Element und allen Nachfolgerknoten dieses Elements in Dokumentreihenfolge.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.DescendantNodesAndSelf">
          <source>This method uses deferred execution.</source>
          <target state="translated">Diese Methode verwendet verzögerte Ausführung.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.DescendantNodesAndSelf">
          <source>The following example creates an XML tree, and then uses this .</source>
          <target state="translated">Das folgende Beispiel erstellt eine XML-Struktur und verwendet diesen anschließend.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.DescendantNodesAndSelf">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XElement">
          <source>Returns a collection of elements that contain this element, and all descendant elements of this element, in document order.</source>
          <target state="translated">Gibt eine Auflistung von Elementen mit diesem Element und allen Nachfolgerelementen dieses Elements in Dokumentreihenfolge zurück.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>This method uses deferred execution.</source>
          <target state="translated">Diese Methode verwendet verzögerte Ausführung.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.DescendantsAndSelf">
          <source>Returns a collection of elements that contain this element, and all descendant elements of this element, in document order.</source>
          <target state="translated">Gibt eine Auflistung von Elementen mit diesem Element und allen Nachfolgerelementen dieses Elements in Dokumentreihenfolge zurück.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.DescendantsAndSelf">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> of elements that contain this element, and all descendant elements of this element, in document order.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> vom Typ <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> von Elementen mit diesem Element und allen Nachfolgerelementen dieses Elements in Dokumentreihenfolge.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.DescendantsAndSelf">
          <source>This method uses deferred execution.</source>
          <target state="translated">Diese Methode verwendet verzögerte Ausführung.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.DescendantsAndSelf">
          <source>The following example creates an XML tree, and then uses this .</source>
          <target state="translated">Das folgende Beispiel erstellt eine XML-Struktur und verwendet diesen anschließend.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.DescendantsAndSelf">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.DescendantsAndSelf(System.Xml.Linq.XName)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> to match.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph>, mit dem eine Übereinstimmung gefunden werden soll.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.DescendantsAndSelf(System.Xml.Linq.XName)">
          <source>Returns a filtered collection of elements that contain this element, and all descendant elements of this element, in document order.</source>
          <target state="translated">Gibt eine gefilterte Auflistung von Elementen mit diesem Element und allen Nachfolgerelementen dieses Elements in Dokumentreihenfolge zurück.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.DescendantsAndSelf(System.Xml.Linq.XName)">
          <source>Only elements that have a matching <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> are included in the collection.</source>
          <target state="translated">Nur Elemente, die über einen übereinstimmenden <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> verfügen, sind in der Auflistung enthalten.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.DescendantsAndSelf(System.Xml.Linq.XName)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> that contain this element, and all descendant elements of this element, in document order.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> vom Typ <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> mit diesem Element und allen Nachfolgerelementen dieses Elements in Dokumentreihenfolge.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.DescendantsAndSelf(System.Xml.Linq.XName)">
          <source>Only elements that have a matching <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> are included in the collection.</source>
          <target state="translated">Nur Elemente, die über einen übereinstimmenden <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> verfügen, sind in der Auflistung enthalten.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.DescendantsAndSelf(System.Xml.Linq.XName)">
          <source>This method uses deferred execution.</source>
          <target state="translated">Diese Methode verwendet verzögerte Ausführung.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.DescendantsAndSelf(System.Xml.Linq.XName)">
          <source>The following example creates an XML tree, and then uses this .</source>
          <target state="translated">Das folgende Beispiel erstellt eine XML-Struktur und verwendet diesen anschließend.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.DescendantsAndSelf(System.Xml.Linq.XName)">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XElement.EmptySequence">
          <source>Gets an empty collection of elements.</source>
          <target state="translated">Ruft eine leere Auflistung von Elementen ab.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.EmptySequence">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> that contains an empty collection.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> vom Typ <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>, das eine leere Auflistung enthält.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.EmptySequence">
          <source>This property is typically used by class implementers when writing a method that returns a collection of elements.</source>
          <target state="translated">Diese Eigenschaft wird i. d. r. durch Implementierung der Klasse verwendet, wenn eine Methode schreiben, die eine Auflistung von Elementen zurückgibt.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.EmptySequence">
          <source>If the method must return no elements, it can use this property to get an empty collection of <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> objects.</source>
          <target state="translated">Wenn die Methode keine Elemente zurückgeben muss, können sie diese Eigenschaft verwenden, eine leere Auflistung von abzurufenden <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> Objekte.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XElement.FirstAttribute">
          <source>Gets the first attribute of this element.</source>
          <target state="translated">Ruft das erste Attribut dieses Elements ab.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.FirstAttribute">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> that contains the first attribute of this element.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>, das das erste Attribut dieses Elements enthält.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.FirstAttribute">
          <source>Attributes are stored in the element in the order that they were added to the element.</source>
          <target state="translated">Attribute werden in das Element in der Reihenfolge gespeichert, dass sie auf das Element hinzugefügt wurden.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.FirstAttribute">
          <source>The following example uses this property.</source>
          <target state="translated">Im folgenden Beispiel wird diese Eigenschaft an.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.FirstAttribute">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.GetDefaultNamespace">
          <source>Gets the default <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> of this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</source>
          <target state="translated">Ruft den Standard-<ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> dieses <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> ab.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.GetDefaultNamespace">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> that contains the default namespace of this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph>, der den Standardnamespace dieses <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>enthält.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.GetDefaultNamespace">
          <source>Namespace declarations may be persisted as attributes in the XML tree.</source>
          <target state="translated">Namespace-Deklarationen können als Attribute in der XML-Struktur beibehalten werden.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.GetDefaultNamespace">
          <source>These special attributes declare namespaces, including default namespaces.</source>
          <target state="translated">Diese speziellen Attribute Deklarieren von Namespaces, einschließlich Standardnamespaces.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.GetDefaultNamespace">
          <source>This method finds the namespace declaration that declares the default namespace, if there is one, and returns the <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> for the default namespace.</source>
          <target state="translated">Diese Methode sucht nach der Namespacedeklaration, die im Standard-Namespace deklariert werden, sofern vorhanden, und gibt die <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> für den Standardnamespace.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.GetDefaultNamespace">
          <source>If there is no attribute that declares the default namespace, then this method returns <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace.None%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Wenn kein Attribut, das den Standardnamespace deklariert vorhanden ist, gibt diese Methode <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace.None%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.GetDefaultNamespace">
          <source>When creating XML trees using C#, even if an XML tree would be serialized with a default namespace, if the namespace is not persisted in the XML tree as an attribute, this method will not report the namespace as the default namespace.</source>
          <target state="translated">Beim XML-Strukturen mit c# erstellen, selbst wenn eine XML-Struktur mit einem Standardnamespace serialisiert werden würde, wenn der Namespace in der XML-Struktur als ein Attribut nicht persistent gespeichert wird, meldet diese Methode nicht den Namespace als Standardnamespace.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.GetDefaultNamespace">
          <source>When creating XML trees using Visual Basic and XML literals, if you create the XML in a default namespace using the Imports statement, then a namespace attribute will be created in the tree by the Visual Basic compiler, and this method will report that namespace.</source>
          <target state="translated">Wenn XML-Strukturen mit Visual Basic und XML-Literale wird erstellt, wenn Sie den XML-Code in einem Standardnamespace mithilfe der Imports-Anweisung erstellen, klicken Sie dann ein Namespaceattribut erstellt werden in der Struktur von Visual Basic-Compiler, und diese Methode meldet diesen Namespace.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.GetDefaultNamespace">
          <source>The following example creates an XML tree that has a default namespace.</source>
          <target state="translated">Das folgende Beispiel erstellt eine XML-Struktur, die einen Standardnamespace besitzt.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.GetDefaultNamespace">
          <source>It then uses this method to retrieve the default namespace.</source>
          <target state="translated">Dann wird diese Methode verwendet, um den Standardnamespace zu abzurufen.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.GetDefaultNamespace">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.GetNamespaceOfPrefix(System.String)">
          <source>A string that contains the namespace prefix to look up.</source>
          <target state="translated">Eine Zeichenfolge, die das zu suchende Namespacepräfix enthält.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.GetNamespaceOfPrefix(System.String)">
          <source>Gets the namespace associated with a particular prefix for this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</source>
          <target state="translated">Ruft den Namespace ab, der einem bestimmten Präfix für dieses <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>zugeordnet ist.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.GetNamespaceOfPrefix(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> for the namespace associated with the prefix for this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> für den Namespace, der dem Präfix für dieses <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>zugeordnet ist.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.GetNamespaceOfPrefix(System.String)">
          <source>This method looks through the XML tree for namespace attributes that are in scope for this element.</source>
          <target state="translated">Diese Methode sucht in der XML-Struktur für Namespaceattribute, die im Bereich für dieses Element sind.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.GetNamespaceOfPrefix(System.String)">
          <source>Namespace prefixes are specified in namespace attributes that are in the XML tree.</source>
          <target state="translated">Namespace-Präfixe sind in Namespaceattributen angegeben, die in der XML-Struktur sind.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.GetNamespaceOfPrefix(System.String)">
          <source>The following example creates an XML tree that has a namespace with an associated prefix.</source>
          <target state="translated">Das folgende Beispiel erstellt eine XML-Struktur, die einen Namespace ein Präfix zugeordnet ist.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.GetNamespaceOfPrefix(System.String)">
          <source>It then uses this method to retrieve the <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> for the prefix.</source>
          <target state="translated">Es verwendet dann diese Methode zum Abrufen der <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> für das Präfix.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.GetNamespaceOfPrefix(System.String)">
          <source>When using Visual Basic, you would typically use the <bpt id="p1">[</bpt>GetXmlNamespace Operator<ept id="p1">](~/docs/visual-basic/language-reference/operators/getxmlnamespace-operator.md)</ept> operator, as follows</source>
          <target state="translated">Wenn Sie Visual Basic verwenden, verwenden Sie in der Regel die <bpt id="p1">[</bpt>GetXmlNamespace-Operator<ept id="p1">](~/docs/visual-basic/language-reference/operators/getxmlnamespace-operator.md)</ept> -Operator, wie folgt</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.GetNamespaceOfPrefix(System.String)">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.GetPrefixOfNamespace(System.Xml.Linq.XNamespace)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> to look up.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph>, der gesucht werden soll.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.GetPrefixOfNamespace(System.Xml.Linq.XNamespace)">
          <source>Gets the prefix associated with a namespace for this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</source>
          <target state="translated">Ruft das Präfix ab, das einem Namespace für dieses <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>zugeordnet ist.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.GetPrefixOfNamespace(System.Xml.Linq.XNamespace)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the namespace prefix.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>, der das Namespacepräfix enthält.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.GetPrefixOfNamespace(System.Xml.Linq.XNamespace)">
          <source>This method looks through the XML tree for namespace attributes that are in scope for this element.</source>
          <target state="translated">Diese Methode sucht in der XML-Struktur für Namespaceattribute, die im Bereich für dieses Element sind.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.GetPrefixOfNamespace(System.Xml.Linq.XNamespace)">
          <source>Namespace prefixes are specified in namespace attributes that are in the XML tree.</source>
          <target state="translated">Namespace-Präfixe sind in Namespaceattributen angegeben, die in der XML-Struktur sind.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.GetPrefixOfNamespace(System.Xml.Linq.XNamespace)">
          <source>If the namespace is the default namespace, and there is no prefix for the namespace, then this method returns null.</source>
          <target state="translated">Wenn der Namespace der Standardnamespace ist und kein Präfix für den Namespace vorhanden ist, gibt diese Methode null zurück.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.GetPrefixOfNamespace(System.Xml.Linq.XNamespace)">
          <source>The following example creates an XML tree that contains a namespace with a prefix.</source>
          <target state="translated">Das folgende Beispiel erstellt eine XML-Struktur, die einen Namespace mit einem Präfix enthält.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.GetPrefixOfNamespace(System.Xml.Linq.XNamespace)">
          <source>It then uses this method to retrieve the prefix for the namespace.</source>
          <target state="translated">Klicken Sie dann wird diese Methode verwendet, um das Präfix für den Namespace abzurufen.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.GetPrefixOfNamespace(System.Xml.Linq.XNamespace)">
          <source>Notice that this example uses the implicit conversion from string to <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> when calling this method.</source>
          <target state="translated">Beachten Sie, dass es sich bei diesem Beispiel wird die implizite Konvertierung von Zeichenfolge, die mit <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> beim Aufrufen dieser Methode.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.GetPrefixOfNamespace(System.Xml.Linq.XNamespace)">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XElement.HasAttributes">
          <source>Gets a value indicating whether this element has at least one attribute.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob dieses Element über mindestens ein Attribut verfügt.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.HasAttributes">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this element has at least one attribute; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn dieses Element über mindestens ein Attribut verfügt, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.HasAttributes">
          <source>The following example uses this property.</source>
          <target state="translated">Im folgenden Beispiel wird diese Eigenschaft an.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.HasAttributes">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XElement.HasElements">
          <source>Gets a value indicating whether this element has at least one child element.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob dieses Element über mindestens ein untergeordnetes Element verfügt.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.HasElements">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this element has at least one child element; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn dieses Element über mindestens ein untergeordnetes Element verfügt, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.HasElements">
          <source>The following example uses this property.</source>
          <target state="translated">Im folgenden Beispiel wird diese Eigenschaft an.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.HasElements">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XElement.IsEmpty">
          <source>Gets a value indicating whether this element contains no content.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob dieses Element keinen Inhalt enthält.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.IsEmpty">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this element contains no content; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn dieses Element keinen Inhalt enthält, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.IsEmpty">
          <source>Note that an element that contains a start and end tag with no content between the tags is not considered to be an empty element.</source>
          <target state="translated">Beachten Sie, dass ein Element mit einem Start- und Endtag ohne Inhalt zwischen die Tags nicht berücksichtigt wird, um ein leeres Element sein.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.IsEmpty">
          <source>It has content with no length.</source>
          <target state="translated">Enthält Inhalte, ohne Länge.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.IsEmpty">
          <source>Only an element that contains only a start tag, and is expressed as a terminated empty element, is considered to be empty.</source>
          <target state="translated">Nur ein Elements, das enthält nur ein Starttag, und wird als eine beendete leeres Element, gilt leer sein.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.IsEmpty">
          <source>The following example creates a variety of XML trees, and shows the value of this property with each tree.</source>
          <target state="translated">Das folgende Beispiel erstellt eine Vielzahl von XML-Strukturen und zeigt den Wert dieser Eigenschaft für jede Struktur.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.IsEmpty">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XElement.LastAttribute">
          <source>Gets the last attribute of this element.</source>
          <target state="translated">Ruft das letzte Attribut dieses Elements ab.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.LastAttribute">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> that contains the last attribute of this element.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>, das das letzte Attribut dieses Elements enthält.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.LastAttribute">
          <source>Attributes are stored in the element in the order that they were added to the element.</source>
          <target state="translated">Attribute werden in das Element in der Reihenfolge gespeichert, dass sie auf das Element hinzugefügt wurden.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.LastAttribute">
          <source>The following example creates an XML tree with three attributes.</source>
          <target state="translated">Im folgende Beispiel wird eine XML-Struktur mit drei Attributen erstellt.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.LastAttribute">
          <source>It then writes the last attribute as output.</source>
          <target state="translated">Anschließend wird das letzte Attribut als Ausgabe geschrieben.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.LastAttribute">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XElement">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> from a file specified by a URI, from an <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>, or from an <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">Erstellt ein neues <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> aus einer mit einem URI angegebenen Datei, aus einem <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> oder aus einem <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>You can use one of the overloads of this method to load an <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> from a file, a <ph id="ph2">&lt;xref:System.IO.TextReader&gt;</ph>, or an <ph id="ph3">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">Können Sie eine der Überladungen dieser Methode Laden einer <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> aus einer Datei, ein <ph id="ph2">&lt;xref:System.IO.TextReader&gt;</ph>, oder ein <ph id="ph3">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>To create an <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> from a string that contains XML, use <ph id="ph2">&lt;xref:System.Xml.Linq.XElement.Parse%2A&gt;</ph>.</source>
          <target state="translated">Zum Erstellen einer <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> aus einer Zeichenfolge, die XML enthält, verwenden Sie <ph id="ph2">&lt;xref:System.Xml.Linq.XElement.Parse%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Load(System.IO.Stream)">
          <source>The stream that contains the XML data.</source>
          <target state="translated">Der Stream, der die XML-Daten enthält.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Load(System.IO.Stream)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> instance by using the specified stream.</source>
          <target state="translated">Erstellt mit dem angegebenen Stream eine neue <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>-Instanz.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Load(System.IO.Stream)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> object used to read the data that is contained in the stream.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>-Objekt, mit dem die im Stream enthaltenen Daten gelesen werden.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.IO.Stream)">
          <source>If you want to control load options, use the <ph id="ph1">&lt;xref:System.Xml.Linq.XElement.Load%2A&gt;</ph> overload that takes <ph id="ph2">&lt;xref:System.Xml.Linq.LoadOptions&gt;</ph> as a parameter.</source>
          <target state="translated">Wenn Sie die Ladeoptionen steuern möchten, verwenden Sie die <ph id="ph1">&lt;xref:System.Xml.Linq.XElement.Load%2A&gt;</ph> Überladung mit <ph id="ph2">&lt;xref:System.Xml.Linq.LoadOptions&gt;</ph> als Parameter.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.IO.Stream)">
          <source>LINQ to XML's loading functionality is built upon <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">LINQ to XML Funktionalität basiert auf <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.IO.Stream)">
          <source>Therefore, you might catch any exceptions that are thrown by the <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> overload methods and the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> methods that read and parse the document.</source>
          <target state="translated">Aus diesem Grund können Sie durch ausgelöste Ausnahmen abfangen der <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> Überladen von Methoden und die <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> Methoden, die das Dokument lesen und analysieren.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.IO.Stream)">
          <source>If you have to modify <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph>, following these steps:</source>
          <target state="translated">Wenn Sie ändern müssen, <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph>, folgende Schritte:</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.IO.Stream)">
          <source>Create an <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> by calling one of the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> overloads that take <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> as a parameter.</source>
          <target state="translated">Erstellen einer <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> durch Aufrufen einer der <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> -Überladungen nehmen <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> als Parameter.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.IO.Stream)">
          <source>Pass the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> to one of the <ph id="ph2">&lt;xref:System.Xml.Linq.XElement&gt;</ph>'s <ph id="ph3">&lt;xref:System.Xml.Linq.XElement.Load%2A&gt;</ph> overloads that takes <ph id="ph4">&lt;xref:System.Xml.XmlReader&gt;</ph> as a parameter.</source>
          <target state="translated">Übergeben Sie die <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> in eines der <ph id="ph2">&lt;xref:System.Xml.Linq.XElement&gt;</ph>des <ph id="ph3">&lt;xref:System.Xml.Linq.XElement.Load%2A&gt;</ph> Überladungen, die <ph id="ph4">&lt;xref:System.Xml.XmlReader&gt;</ph> als Parameter.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Load(System.IO.TextReader)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> that will be read for the <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> content.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>, dessen <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>-Inhalt gelesen wird.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Load(System.IO.TextReader)">
          <source>Loads an <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> from a <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated">Lädt ein <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> aus einem <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Load(System.IO.TextReader)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> that contains the XML that was read from the specified <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> mit dem XML, das aus dem angegebenen <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> gelesen wurde.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.IO.TextReader)">
          <source>This method reads the raw XML into the XML tree.</source>
          <target state="translated">Diese Methode liest das unformatierte XML in die XML-Struktur.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.IO.TextReader)">
          <source>It discards all insignificant white space in the file.</source>
          <target state="translated">Gesamte nicht signifikante Leerraum in der Datei werden verworfen.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.IO.TextReader)">
          <source>LINQ to XML's loading functionality is built upon <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">LINQ to XML Funktionalität basiert auf <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.IO.TextReader)">
          <source>Therefore, you might catch any exceptions that are thrown by the <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> overload methods and the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> methods that read and parse the document.</source>
          <target state="translated">Aus diesem Grund können Sie durch ausgelöste Ausnahmen abfangen der <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> Überladen von Methoden und die <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> Methoden, die das Dokument lesen und analysieren.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.IO.TextReader)">
          <source>The following example loads an element from a <ph id="ph1">&lt;xref:System.IO.StringReader&gt;</ph>.</source>
          <target state="translated">Im folgende Beispiel lädt ein Element aus einem <ph id="ph1">&lt;xref:System.IO.StringReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.IO.TextReader)">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Load(System.String)">
          <source>A URI string referencing the file to load into a new <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</source>
          <target state="translated">Eine URI-Zeichenfolge, die auf die Datei verweist, die in ein neues <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>geladen werden soll.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Load(System.String)">
          <source>Loads an <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> from a file.</source>
          <target state="translated">Lädt ein <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> aus einer Datei.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Load(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> that contains the contents of the specified file.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> mit dem Inhalt der angegebenen Datei.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.String)">
          <source>This method reads the raw XML into the XML tree.</source>
          <target state="translated">Diese Methode liest das unformatierte XML in die XML-Struktur.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.String)">
          <source>It discards all insignificant white space in the file.</source>
          <target state="translated">Gesamte nicht signifikante Leerraum in der Datei werden verworfen.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.String)">
          <source>LINQ to XML's loading functionality is built upon <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">LINQ to XML Funktionalität basiert auf <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.String)">
          <source>Therefore, you might catch any exceptions that are thrown by the <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> overload methods and the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> methods that read and parse the document.</source>
          <target state="translated">Aus diesem Grund können Sie durch ausgelöste Ausnahmen abfangen der <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> Überladen von Methoden und die <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> Methoden, die das Dokument lesen und analysieren.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.String)">
          <source>The following example creates an XML tree, saves it to a file, and then uses this method to load the <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> from the file.</source>
          <target state="translated">Im folgende Beispiel wird eine XML-Struktur erstellt, speichert es in einer Datei und verwendet dann diese Methode beim Laden der <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> aus der Datei.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.String)">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> that will be read for the content of the <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>, der zum Ermitteln des Inhalts von <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> gelesen wird.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader)">
          <source>Loads an <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> from an <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">Lädt ein <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> aus einem <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> that contains the XML that was read from the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> mit dem XML, das aus dem angegebenen <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> gelesen wurde.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader)">
          <source>By creating an <ph id="ph1">&lt;xref:System.Xml.XmlNodeReader&gt;</ph> from a DOM document, and then using the <ph id="ph2">&lt;xref:System.Xml.XmlNodeReader&gt;</ph> to create an <ph id="ph3">&lt;xref:System.Xml.Linq.XElement&gt;</ph>, this method can be used to create a copy of a DOM document in a LINQ to XML tree.</source>
          <target state="translated">Durch das Erstellen einer <ph id="ph1">&lt;xref:System.Xml.XmlNodeReader&gt;</ph> in einem DOM-Dokument, und klicken Sie dann mit der <ph id="ph2">&lt;xref:System.Xml.XmlNodeReader&gt;</ph> erstellen eine <ph id="ph3">&lt;xref:System.Xml.Linq.XElement&gt;</ph>, diese Methode kann verwendet werden, um eine Kopie des DOM-Dokument in einer LINQ to XML-Struktur zu erstellen.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader)">
          <source>LINQ to XML's loading functionality is built upon <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">LINQ to XML Funktionalität basiert auf <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader)">
          <source>Therefore, you might catch any exceptions that are thrown by the <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> overload methods and the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> methods that read and parse the document.</source>
          <target state="translated">Aus diesem Grund können Sie durch ausgelöste Ausnahmen abfangen der <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> Überladen von Methoden und die <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> Methoden, die das Dokument lesen und analysieren.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader)">
          <source>The following example creates a DOM document, creates an <ph id="ph1">&lt;xref:System.Xml.XmlNodeReader&gt;</ph> from the DOM document, instantiates a tree from the reader.</source>
          <target state="translated">Im folgenden Beispiel wird ein DOM-Dokument erstellt wird, erstellt eine <ph id="ph1">&lt;xref:System.Xml.XmlNodeReader&gt;</ph> aus dem DOM-Dokument, eine Struktur aus dem Reader instanziiert.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader)">
          <source>This code effectively copies a DOM document into a LINQ to XML tree.</source>
          <target state="translated">Dieser Code kopiert effektiv ein DOM-Dokument in einer LINQ to XML-Struktur.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader)">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Load(System.IO.Stream,System.Xml.Linq.LoadOptions)">
          <source>The stream containing the XML data.</source>
          <target state="translated">Der Stream, der die XML-Daten enthält.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Load(System.IO.Stream,System.Xml.Linq.LoadOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.Linq.LoadOptions" /&gt;</ph> object that specifies whether to load base URI and line information.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xml.Linq.LoadOptions" /&gt;</ph>-Objekt, das angibt, ob Basis-URI- und Zeileninformationen geladen werden.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Load(System.IO.Stream,System.Xml.Linq.LoadOptions)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> instance by using the specified stream, optionally preserving white space, setting the base URI, and retaining line information.</source>
          <target state="translated">Erstellt mithilfe des angegebenen Streams eine neue <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>-Instanz, wobei optional Leerraum und Zeileninformationen beibehalten werden und der Basis-URI festgelegt wird.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Load(System.IO.Stream,System.Xml.Linq.LoadOptions)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> object used to read the data that the stream contains.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>-Objekt, das angibt, ob Basis-URI- und Zeileninformationen geladen werden.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.IO.Stream,System.Xml.Linq.LoadOptions)">
          <source>LINQ to XML's loading functionality is built upon <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">LINQ to XML Funktionalität basiert auf <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.IO.Stream,System.Xml.Linq.LoadOptions)">
          <source>Therefore, you might catch any exceptions that are thrown by the <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> overload methods and the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> methods that read and parse the document.</source>
          <target state="translated">Aus diesem Grund können Sie durch ausgelöste Ausnahmen abfangen der <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> Überladen von Methoden und die <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> Methoden, die das Dokument lesen und analysieren.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.IO.Stream,System.Xml.Linq.LoadOptions)">
          <source>If you have to modify <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph>, following these steps:</source>
          <target state="translated">Wenn Sie ändern müssen, <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph>, folgende Schritte:</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.IO.Stream,System.Xml.Linq.LoadOptions)">
          <source>Create an <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> by calling one of the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> overloads that take <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> as a parameter.</source>
          <target state="translated">Erstellen einer <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> durch Aufrufen einer der <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> -Überladungen nehmen <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> als Parameter.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.IO.Stream,System.Xml.Linq.LoadOptions)">
          <source>Pass the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> to one of the <ph id="ph2">&lt;xref:System.Xml.Linq.XElement&gt;</ph>'s <ph id="ph3">&lt;xref:System.Xml.Linq.XElement.Load%2A&gt;</ph> overloads that takes <ph id="ph4">&lt;xref:System.Xml.XmlReader&gt;</ph> as a parameter.</source>
          <target state="translated">Übergeben Sie die <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> in eines der <ph id="ph2">&lt;xref:System.Xml.Linq.XElement&gt;</ph>des <ph id="ph3">&lt;xref:System.Xml.Linq.XElement.Load%2A&gt;</ph> Überladungen, die <ph id="ph4">&lt;xref:System.Xml.XmlReader&gt;</ph> als Parameter.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> that will be read for the <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> content.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>, dessen <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>-Inhalt gelesen wird.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.Linq.LoadOptions" /&gt;</ph> that specifies white space behavior, and whether to load base URI and line information.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xml.Linq.LoadOptions" /&gt;</ph>, das Leerraumverhalten angibt und festlegt, ob Basis-URI- und Zeileninformationen geladen werden.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>Loads an <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> from a <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>, optionally preserving white space and retaining line information.</source>
          <target state="translated">Lädt ein <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> aus einem <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>, wobei optional Leerraum und Zeileninformationen beibehalten werden.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> that contains the XML that was read from the specified <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> mit dem XML, das aus dem angegebenen <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> gelesen wurde.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>If the source XML is indented, setting the <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> flag in <ph id="ph2">`options`</ph> causes the reader to read all white space in the source XML.</source>
          <target state="translated">Wenn das Quell-XML eingezogen wird, wird durch Festlegen der <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> -flag in <ph id="ph2">`options`</ph> bewirkt, dass den Reader zum Lesen der gesamte Leerraum in der XML-Quelle.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>Nodes of type <ph id="ph1">&lt;xref:System.Xml.Linq.XText&gt;</ph> are created for both significant and insignificant white space.</source>
          <target state="translated">Knoten vom Typ <ph id="ph1">&lt;xref:System.Xml.Linq.XText&gt;</ph> für signifikante und nicht signifikante Leerraum erstellt werden.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>If the source XML is indented, not setting the <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> flag in <ph id="ph2">`options`</ph> causes the reader to ignore all of the insignificant white space in the source XML.</source>
          <target state="translated">Wenn das Quell-XML eingezogen wird, wird nicht durch Festlegen der <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> -flag in <ph id="ph2">`options`</ph> bewirkt, dass den Reader, der nicht signifikante Leerraum in der XML-Quelle zu ignorieren.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>The XML tree is created without any text nodes for insignificant white space.</source>
          <target state="translated">Die XML-Struktur wird ohne Textknoten für nicht signifikante Leerraum erstellt.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>If the source XML is not indented, setting the <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> flag in <ph id="ph2">`options`</ph> has no effect.</source>
          <target state="translated">Wenn das Quell-XML nicht eingezogen ist, wird durch Festlegen der <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> -flag in <ph id="ph2">`options`</ph> hat keine Auswirkungen.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>Significant white space is still preserved, and there are no spans of insignificant white space that could cause the creation of more white space text nodes.</source>
          <target state="translated">Signifikanter Leerraum wird weiterhin erhalten, und es gibt keine Passage mit insignifikante Leerzeichen, die die Erstellung von weitere Leerraumtextknoten verursachen könnten.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>For more information, see <bpt id="p1">[</bpt>Preserving White Space while Loading or Parsing XML<ept id="p1">](http://msdn.microsoft.com/library/093a7169-a04e-4638-b08c-d1cb98aa650d)</ept> and <bpt id="p2">[</bpt>Preserving White Space While Serializing<ept id="p2">](http://msdn.microsoft.com/library/fb146217-0a49-4efc-ac84-7265b91d3939)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>bleiben Leerraum beim Laden oder Analysieren der XML-<ept id="p1">](http://msdn.microsoft.com/library/093a7169-a04e-4638-b08c-d1cb98aa650d)</ept> und <bpt id="p2">[</bpt>bleiben Leerzeichen beim Serialisieren<ept id="p2">](http://msdn.microsoft.com/library/fb146217-0a49-4efc-ac84-7265b91d3939)</ept>.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>Use <ph id="ph1">&lt;xref:System.Xml.Linq.XElement.Parse%2A&gt;</ph> to create an <ph id="ph2">&lt;xref:System.Xml.Linq.XElement&gt;</ph> from a string that contains XML.</source>
          <target state="translated">Verwendung <ph id="ph1">&lt;xref:System.Xml.Linq.XElement.Parse%2A&gt;</ph> zum Erstellen einer <ph id="ph2">&lt;xref:System.Xml.Linq.XElement&gt;</ph> aus einer Zeichenfolge, die XML enthält.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>Setting <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.SetBaseUri&gt;</ph> will have no effect when loading from a <ph id="ph2">&lt;xref:System.IO.TextReader&gt;</ph>.</source>
          <target state="translated">Festlegen von <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.SetBaseUri&gt;</ph> haben keine Auswirkungen, der beim Laden von Daten aus einer <ph id="ph2">&lt;xref:System.IO.TextReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>There is a performance penalty if you set the <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.SetLineInfo&gt;</ph> flag.</source>
          <target state="translated">Es ist eine Leistungseinbuße, wenn Sie festlegen der <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.SetLineInfo&gt;</ph> Flag.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>The line information is accurate immediately after loading the XML document.</source>
          <target state="translated">Die Zeileninformationen wird unmittelbar nach dem Laden des XML-Dokuments präzisesten angezeigt.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>If you modify the XML tree after loading the document, the line information may become meaningless.</source>
          <target state="translated">Wenn Sie die XML-Struktur nach dem Laden des Dokuments ändern, sind die Zeileninformationen möglicherweise unbrauchbar.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>LINQ to XML's loading functionality is built upon <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">LINQ to XML Funktionalität basiert auf <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>Therefore, you might catch any exceptions that are thrown by the <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> overload methods and the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> methods that read and parse the document.</source>
          <target state="translated">Aus diesem Grund können Sie durch ausgelöste Ausnahmen abfangen der <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> Überladen von Methoden und die <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> Methoden, die das Dokument lesen und analysieren.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>The following example loads an <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> from a <ph id="ph2">&lt;xref:System.IO.StringReader&gt;</ph> in two different ways: preserving white space, and not preserving white space.</source>
          <target state="translated">Im folgende Beispiel lädt eine <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> aus einer <ph id="ph2">&lt;xref:System.IO.StringReader&gt;</ph> auf zwei unterschiedliche Arten: Leerraum und Leerraum nicht beibehalten.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>It then uses a query to determine the number of white space nodes in the resulting XML tree.</source>
          <target state="translated">Anschließend wird eine Abfrage verwendet, um die Anzahl von Leerraumknoten in die resultierende XML-Struktur zu bestimmen.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>The following example loads the line information as it loads from the <ph id="ph1">&lt;xref:System.IO.TextReader&gt;</ph>.</source>
          <target state="translated">Im folgende Beispiel lädt die Daten aus, die geladen der <ph id="ph1">&lt;xref:System.IO.TextReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>It then prints the line information.</source>
          <target state="translated">Anschließend werden die Zeileninformationen ausgegeben.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>A URI string referencing the file to load into an <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</source>
          <target state="translated">Eine URI-Zeichenfolge, die auf die Datei verweist, die in ein <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>geladen werden soll.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.Linq.LoadOptions" /&gt;</ph> that specifies white space behavior, and whether to load base URI and line information.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xml.Linq.LoadOptions" /&gt;</ph>, das Leerraumverhalten angibt und festlegt, ob Basis-URI- und Zeileninformationen geladen werden.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>Loads an <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> from a file, optionally preserving white space, setting the base URI, and retaining line information.</source>
          <target state="translated">Lädt ein <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> aus einer Datei, wobei optional Leerraum und Zeileninformationen beibehalten werden und der Basis-URI festgelegt wird.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> that contains the contents of the specified file.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> mit dem Inhalt der angegebenen Datei.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>If the source XML is indented, setting the <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> flag in <ph id="ph2">`options`</ph> causes the reader to read all white space in the source XML.</source>
          <target state="translated">Wenn das Quell-XML eingezogen wird, wird durch Festlegen der <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> -flag in <ph id="ph2">`options`</ph> bewirkt, dass den Reader zum Lesen der gesamte Leerraum in der XML-Quelle.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>Nodes of type <ph id="ph1">&lt;xref:System.Xml.Linq.XText&gt;</ph> are created for both significant and insignificant white space.</source>
          <target state="translated">Knoten vom Typ <ph id="ph1">&lt;xref:System.Xml.Linq.XText&gt;</ph> für signifikante und nicht signifikante Leerraum erstellt werden.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>If the source XML is indented, not setting the <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> flag in <ph id="ph2">`options`</ph> causes the reader to ignore all of the insignificant white space in the source XML.</source>
          <target state="translated">Wenn das Quell-XML eingezogen wird, wird nicht durch Festlegen der <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> -flag in <ph id="ph2">`options`</ph> bewirkt, dass den Reader, der nicht signifikante Leerraum in der XML-Quelle zu ignorieren.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>The XML tree is created without any text nodes for insignificant white space.</source>
          <target state="translated">Die XML-Struktur wird ohne Textknoten für nicht signifikante Leerraum erstellt.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>If the source XML is not indented, setting the <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> flag in <ph id="ph2">`options`</ph> has no effect.</source>
          <target state="translated">Wenn das Quell-XML nicht eingezogen ist, wird durch Festlegen der <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> -flag in <ph id="ph2">`options`</ph> hat keine Auswirkungen.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>Significant white space is still preserved, and there are no spans of insignificant white space that could cause the creation of more white space text nodes.</source>
          <target state="translated">Signifikanter Leerraum wird weiterhin erhalten, und es gibt keine Passage mit insignifikante Leerzeichen, die die Erstellung von weitere Leerraumtextknoten verursachen könnten.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>For more information, see <bpt id="p1">[</bpt>Preserving White Space while Loading or Parsing XML<ept id="p1">](http://msdn.microsoft.com/library/093a7169-a04e-4638-b08c-d1cb98aa650d)</ept> and <bpt id="p2">[</bpt>Preserving White Space While Serializing<ept id="p2">](http://msdn.microsoft.com/library/fb146217-0a49-4efc-ac84-7265b91d3939)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>bleiben Leerraum beim Laden oder Analysieren der XML-<ept id="p1">](http://msdn.microsoft.com/library/093a7169-a04e-4638-b08c-d1cb98aa650d)</ept> und <bpt id="p2">[</bpt>bleiben Leerzeichen beim Serialisieren<ept id="p2">](http://msdn.microsoft.com/library/fb146217-0a49-4efc-ac84-7265b91d3939)</ept>.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>Use <ph id="ph1">&lt;xref:System.Xml.Linq.XElement.Parse%2A&gt;</ph> to create an <ph id="ph2">&lt;xref:System.Xml.Linq.XElement&gt;</ph> from a string that contains XML.</source>
          <target state="translated">Verwendung <ph id="ph1">&lt;xref:System.Xml.Linq.XElement.Parse%2A&gt;</ph> zum Erstellen einer <ph id="ph2">&lt;xref:System.Xml.Linq.XElement&gt;</ph> aus einer Zeichenfolge, die XML enthält.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>There is a performance penalty if you set the <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.SetBaseUri&gt;</ph> and the <ph id="ph2">&lt;xref:System.Xml.Linq.LoadOptions.SetLineInfo&gt;</ph> flags.</source>
          <target state="translated">Es ist eine Leistungseinbuße, wenn Sie festlegen der <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.SetBaseUri&gt;</ph> und <ph id="ph2">&lt;xref:System.Xml.Linq.LoadOptions.SetLineInfo&gt;</ph> Flags.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>The base URI and the line information are accurate immediately after loading the XML document.</source>
          <target state="translated">Die Basis-URI und die Zeileninformationen sind genau unmittelbar nach dem Laden des XML-Dokuments.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>If you modify the XML tree after loading the document, the base URI and line information may become meaningless.</source>
          <target state="translated">Wenn Sie die XML-Struktur nach dem Laden des Dokuments ändern, ist die base-URI- und Zeileninformationen Informationen möglicherweise unbrauchbar.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>LINQ to XML's loading functionality is built upon <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">LINQ to XML Funktionalität basiert auf <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>Therefore, you might catch any exceptions that are thrown by the <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> overload methods and the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> methods that read and parse the document.</source>
          <target state="translated">Aus diesem Grund können Sie durch ausgelöste Ausnahmen abfangen der <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> Überladen von Methoden und die <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> Methoden, die das Dokument lesen und analysieren.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>The following example loads an <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> from a file in two different ways: preserving white space, and not preserving white space.</source>
          <target state="translated">Im folgende Beispiel lädt eine <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> aus einer Datei auf zwei unterschiedliche Arten: Leerraum und Leerraum nicht beibehalten.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>It then uses a query to determine the number of white space nodes in the resulting XML tree.</source>
          <target state="translated">Anschließend wird eine Abfrage verwendet, um die Anzahl von Leerraumknoten in die resultierende XML-Struktur zu bestimmen.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>The following example loads the base URI and line information as it loads the file.</source>
          <target state="translated">Im folgende Beispiel lädt die base-URI- und Zeileninformationen Informationen, die die Datei geladen.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>It then prints the base URI and the line information.</source>
          <target state="translated">Klicken Sie dann den Basis-URI- und Zeileninformationen ausgegeben.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>This example uses the following resource file: <bpt id="p1">[</bpt>Sample XML File: Typical Purchase Order (LINQ to XML)<ept id="p1">](http://msdn.microsoft.com/library/0606c09f-6e43-4f8d-95c8-e8e2e08d2348)</ept>.</source>
          <target state="translated">Dieses Beispiel verwendet die folgenden Ressourcendatei: <bpt id="p1">[</bpt>XML-Beispieldatei: Typical Purchase Order (LINQ to XML)<ept id="p1">](http://msdn.microsoft.com/library/0606c09f-6e43-4f8d-95c8-e8e2e08d2348)</ept>.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> that will be read for the content of the <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>, der zum Ermitteln des Inhalts von <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> gelesen wird.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.Linq.LoadOptions" /&gt;</ph> that specifies white space behavior, and whether to load base URI and line information.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xml.Linq.LoadOptions" /&gt;</ph>, das Leerraumverhalten angibt und festlegt, ob Basis-URI- und Zeileninformationen geladen werden.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>Loads an <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> from an <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>, optionally preserving white space, setting the base URI, and retaining line information.</source>
          <target state="translated">Lädt ein <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> aus einem <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>, wobei optional Leerraum und Zeileninformationen beibehalten werden und der Basis-URI festgelegt wird.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> that contains the XML that was read from the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> mit dem XML, das aus dem angegebenen <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> gelesen wurde.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>By creating an <ph id="ph1">&lt;xref:System.Xml.XmlNodeReader&gt;</ph> from a DOM document, and then using the <ph id="ph2">&lt;xref:System.Xml.XmlNodeReader&gt;</ph> to create an <ph id="ph3">&lt;xref:System.Xml.Linq.XElement&gt;</ph>, this method can be used to create a copy of a DOM document in a LINQ to XML tree.</source>
          <target state="translated">Durch das Erstellen einer <ph id="ph1">&lt;xref:System.Xml.XmlNodeReader&gt;</ph> in einem DOM-Dokument, und klicken Sie dann mit der <ph id="ph2">&lt;xref:System.Xml.XmlNodeReader&gt;</ph> erstellen eine <ph id="ph3">&lt;xref:System.Xml.Linq.XElement&gt;</ph>, diese Methode kann verwendet werden, um eine Kopie des DOM-Dokument in einer LINQ to XML-Struktur zu erstellen.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>Use <ph id="ph1">&lt;xref:System.Xml.Linq.XElement.Parse%2A&gt;</ph> to create an <ph id="ph2">&lt;xref:System.Xml.Linq.XElement&gt;</ph> from a string that contains XML.</source>
          <target state="translated">Verwendung <ph id="ph1">&lt;xref:System.Xml.Linq.XElement.Parse%2A&gt;</ph> zum Erstellen einer <ph id="ph2">&lt;xref:System.Xml.Linq.XElement&gt;</ph> aus einer Zeichenfolge, die XML enthält.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>Setting <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> is not valid when loading from a <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">Festlegen von <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> ist ungültig, wenn das Laden von Daten aus einer <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> will be configured to either read whitespace or not.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> wird entweder lesen Leerräumen konfiguriert werden, oder nicht.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>The LINQ to XML tree will be populated with the whitespace nodes that the reader surfaces.</source>
          <target state="translated">LINQ to XML-Struktur wird mit den Leerraumknoten aufgefüllt, die der Reader angibt.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>This will be the behavior regardless of whether <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> is set or not.</source>
          <target state="translated">Dies ist das Verhalten unabhängig davon, ob wird <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> oder nicht festgelegt ist.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> may have a valid base URI or not.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> möglicherweise einen gültigen Basis-URI oder nicht.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>If you set <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.SetBaseUri&gt;</ph>, the base URI will be set in the XML tree from the base URI that is reported by the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">Wenn Sie festlegen, <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.SetBaseUri&gt;</ph>, der Base URI in der XML-Struktur festgelegt werden, aus der Basis-URI, der gemeldet wird wird, indem Sie die <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> may have a valid line information or not.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> möglicherweise eine gültige Zeileninformationen oder nicht.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>If you set <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.SetLineInfo&gt;</ph>, the line information will be set in the XML tree from the line information that is reported by the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">Wenn Sie festlegen, <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.SetLineInfo&gt;</ph>, die Zeileninformationen wird in der XML-Struktur festgelegt werden, aus der Zeileninformationen, die von berichtet wird die <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>There is a performance penalty if you set the <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.SetLineInfo&gt;</ph> flag.</source>
          <target state="translated">Es ist eine Leistungseinbuße, wenn Sie festlegen der <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.SetLineInfo&gt;</ph> Flag.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>The line information is accurate immediately after loading the XML document.</source>
          <target state="translated">Die Zeileninformationen wird unmittelbar nach dem Laden des XML-Dokuments präzisesten angezeigt.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>If you modify the XML tree after loading the document, the line information may become meaningless.</source>
          <target state="translated">Wenn Sie die XML-Struktur nach dem Laden des Dokuments ändern, sind die Zeileninformationen möglicherweise unbrauchbar.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>LINQ to XML's loading functionality is built upon <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">LINQ to XML Funktionalität basiert auf <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>Therefore, you might catch any exceptions that are thrown by the <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> overload methods and the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> methods that read and parse the document.</source>
          <target state="translated">Aus diesem Grund können Sie durch ausgelöste Ausnahmen abfangen der <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> Überladen von Methoden und die <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> Methoden, die das Dokument lesen und analysieren.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>The following example loads the line information that it loads from the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">Im folgende Beispiel lädt die Daten, die aus dem geladen der <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>It then prints the line information.</source>
          <target state="translated">Anschließend werden die Zeileninformationen ausgegeben.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XElement.Name">
          <source>Gets or sets the name of this element.</source>
          <target state="translated">Ruft den Namen dieses Elements ab oder legt diesen fest.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.Name">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> that contains the name of this element.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph>, der den Namen dieses Elements enthält.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.Name">
          <source>Setting this property will raise the <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> and the <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> events.</source>
          <target state="translated">Diese Eigenschaft löst Einstellung der <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> und die <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> Ereignisse.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.Name">
          <source>The following example uses this property to determine the name of an element.</source>
          <target state="translated">Im folgenden Beispiel wird diese Eigenschaft auf um den Namen eines Elements zu bestimmen.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.Name">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XElement.NodeType">
          <source>Gets the node type for this node.</source>
          <target state="translated">Ruft den Knotentyp für diesen Knoten ab.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.NodeType">
          <source>The node type.</source>
          <target state="translated">Der Knotentyp.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.NodeType">
          <source>For <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> objects, this value is <ph id="ph2">&lt;see cref="F:System.Xml.XmlNodeType.Element" /&gt;</ph>.</source>
          <target state="translated">Für <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>-Objekte ist dieser Wert <ph id="ph2">&lt;see cref="F:System.Xml.XmlNodeType.Element" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.NodeType">
          <source>Because all classes that derive from <ph id="ph1">&lt;xref:System.Xml.Linq.XObject&gt;</ph> contain a <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.NodeType%2A&gt;</ph> property, you can write code that operates on collections of concrete subclass of <ph id="ph3">&lt;xref:System.Xml.Linq.XObject&gt;</ph>.</source>
          <target state="translated">Da alle, die von Klassen abgeleitet werden <ph id="ph1">&lt;xref:System.Xml.Linq.XObject&gt;</ph> enthalten eine <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.NodeType%2A&gt;</ph> -Eigenschaft, können Sie Code schreiben, der ausgeführt wird auf Sammlungen von konkrete Unterklasse von <ph id="ph3">&lt;xref:System.Xml.Linq.XObject&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.NodeType">
          <source>Your code can then test for the node type of each node in the collection.</source>
          <target state="translated">Code kann dann für jeden Knoten in der Auflistung den Knotentyp testen.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.NodeType">
          <source>The following example uses this property to print the node type of an element.</source>
          <target state="translated">Im folgenden Beispiel wird diese Eigenschaft so drucken Sie die Knotentyp eines Elements.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.NodeType">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Boolean">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.Boolean" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>, das in <ph id="ph2">&lt;see cref="T:System.Boolean" /&gt;</ph> umgewandelt werden soll.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Boolean">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Boolean" /&gt;</ph>.</source>
          <target state="translated">Wandelt den Wert dieses <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> in einen <ph id="ph2">&lt;see cref="T:System.Boolean" /&gt;</ph> um.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Boolean">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> that contains the content of this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph>, das den Inhalt dieses <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> enthält.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Boolean">
          <source>When converting to <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> from an attribute or element, allowed values are "0", "1", and any string that produces "true" or "false" after trimming and conversion to lower case.</source>
          <target state="translated">Beim Konvertieren in <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> aus einem Attribut oder Element, nach dem Kürzen und Konvertierung in Kleinbuchstaben zulässig Werte sind "0", "1", und eine beliebige Zeichenfolge, die "Wahr" erzeugt oder "False".</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Boolean">
          <source>The following example creates some elements with boolean values.</source>
          <target state="translated">Im folgende Beispiel werden einige Elemente mit booleschen Werten erstellt.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Boolean">
          <source>It then casts them to <ph id="ph1">&lt;xref:System.Boolean&gt;</ph>.</source>
          <target state="translated">Klicken Sie dann wandelt diese <ph id="ph1">&lt;xref:System.Boolean&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Boolean">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Boolean">
          <source>The element does not contain a valid <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value.</source>
          <target state="translated">Das Element enthält keinen gültigen <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph>-Wert.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Boolean">
          <source>The <ph id="ph1">&lt;paramref name="element" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Der <ph id="ph1">&lt;paramref name="element" /&gt;</ph>-Parameter ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTime">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.DateTime" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>, das in <ph id="ph2">&lt;see cref="T:System.DateTime" /&gt;</ph> umgewandelt werden soll.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTime">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.DateTime" /&gt;</ph>.</source>
          <target state="translated">Wandelt den Wert dieses <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> in einen <ph id="ph2">&lt;see cref="T:System.DateTime" /&gt;</ph> um.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTime">
          <source>A <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> that contains the content of this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph>, das den Inhalt dieses <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> enthält.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTime">
          <source>The value space of an attribute or element that contains date and time content is closely related to the dates and times described in ISO 8601.</source>
          <target state="translated">Der Wertebereich eines Attributs oder Elements, das Datum und Uhrzeit Inhalt enthält ist eng mit den Datums- und Uhrzeitangaben, die in ISO 8601 beschriebenen verknüpft.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTime">
          <source>When creating an attribute or element that contains date and time content, the attribute or element values are formatted per the W3C specification.</source>
          <target state="translated">Beim Erstellen eines Attributs oder Elements, das Datum und Uhrzeit Inhalt enthält, werden die Attribut- oder Elementwerten gemäß der W3C-Spezifikation formatiert.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTime">
          <source>See the W3C specification for more details.</source>
          <target state="translated">Finden Sie unter der W3C-Spezifikation für weitere Details.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTime">
          <source>Behavior is lax when casting to a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> from an attribute or element.</source>
          <target state="translated">Verhalten ist weniger strenge bei der Umwandlung in einen <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> aus einem Attribut oder Element.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTime">
          <source>Even if the attribute or element value is not formatted exactly per the W3C specification, the value is appropriately converted to a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph>.</source>
          <target state="translated">Auch wenn der Wert von Attribut- oder Elementwert nicht exakt gemäß der W3C-Spezifikation formatiert ist, wird entsprechend konvertierte Wert eine <ph id="ph1">&lt;xref:System.DateTime&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTime">
          <source>This conversion operator uses <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType&gt;</ph> to convert from a <ph id="ph2">&lt;xref:System.DateTime&gt;</ph>.</source>
          <target state="translated">Dieses Konvertierungsoperators verwendet <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType&gt;</ph> zum Konvertieren von einem <ph id="ph2">&lt;xref:System.DateTime&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTime">
          <source>The following example creates an element with date and time content.</source>
          <target state="translated">Das folgende Beispiel erstellt ein Element mit Datum und Uhrzeit-Inhalt.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTime">
          <source>It then casts it to <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> to retrieve the value.</source>
          <target state="translated">Klicken Sie dann wandelt es <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> zum Abrufen des Werts.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTime">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTime">
          <source>The element does not contain a valid <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> value.</source>
          <target state="translated">Das Element enthält keinen gültigen <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph>-Wert.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTime">
          <source>The <ph id="ph1">&lt;paramref name="element" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Der <ph id="ph1">&lt;paramref name="element" /&gt;</ph>-Parameter ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTimeOffset">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>, das in <ph id="ph2">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> umgewandelt werden soll.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTimeOffset">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph>.</source>
          <target state="translated">Wandelt den Wert dieses <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> in einen <ph id="ph2">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> um.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTimeOffset">
          <source>A <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> that contains the content of this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph>, das den Inhalt dieses <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> enthält.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTimeOffset">
          <source>This conversion operator uses the <ph id="ph1">&lt;xref:System.Xml.XmlConvert&gt;</ph> class to do the conversion.</source>
          <target state="translated">Dieses Konvertierungsoperators verwendet die <ph id="ph1">&lt;xref:System.Xml.XmlConvert&gt;</ph> Klasse, um die Konvertierung erforderlich sind.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTimeOffset">
          <source>The following example creates an element with date and time content.</source>
          <target state="translated">Das folgende Beispiel erstellt ein Element mit Datum und Uhrzeit-Inhalt.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTimeOffset">
          <source>It then casts to <ph id="ph1">&lt;xref:System.DateTimeOffset&gt;</ph> to retrieve the value.</source>
          <target state="translated">Klicken Sie dann in umgewandelt <ph id="ph1">&lt;xref:System.DateTimeOffset&gt;</ph> zum Abrufen des Werts.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTimeOffset">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTimeOffset">
          <source>The element does not contain a valid <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> value.</source>
          <target state="translated">Das Element enthält keinen gültigen <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph>-Wert.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTimeOffset">
          <source>The <ph id="ph1">&lt;paramref name="element" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Der <ph id="ph1">&lt;paramref name="element" /&gt;</ph>-Parameter ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Decimal">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>, das in <ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph> umgewandelt werden soll.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Decimal">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          <target state="translated">Wandelt den Wert dieses <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> in einen <ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph> um.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Decimal">
          <source>A <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> that contains the content of this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>, das den Inhalt dieses <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> enthält.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Decimal">
          <source>The following example creates an element with a decimal value.</source>
          <target state="translated">Das folgende Beispiel erstellt ein Element mit einem Dezimalwert.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Decimal">
          <source>It then retrieves the value of the attribute by casting to <ph id="ph1">&lt;xref:System.Decimal&gt;</ph>.</source>
          <target state="translated">Anschließend ruft den Wert des Attributs ab, durch die Umwandlung in <ph id="ph1">&lt;xref:System.Decimal&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Decimal">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Decimal">
          <source>The element does not contain a valid <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> value.</source>
          <target state="translated">Das Element enthält keinen gültigen <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>-Wert.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Decimal">
          <source>The <ph id="ph1">&lt;paramref name="element" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Der <ph id="ph1">&lt;paramref name="element" /&gt;</ph>-Parameter ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Double">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>, das in <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph> umgewandelt werden soll.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Double">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph>.</source>
          <target state="translated">Wandelt den Wert dieses <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> in einen <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph> um.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Double">
          <source>A <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> that contains the content of this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph>, das den Inhalt dieses <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> enthält.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Double">
          <source>The following example creates an attribute with <ph id="ph1">`double`</ph> content.</source>
          <target state="translated">Das folgende Beispiel erstellt ein Attribut mit <ph id="ph1">`double`</ph> Inhalt.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Double">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.Double&gt;</ph>.</source>
          <target state="translated">Anschließend ruft den Wert ab, durch die Umwandlung in <ph id="ph1">&lt;xref:System.Double&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Double">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Double">
          <source>The element does not contain a valid <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> value.</source>
          <target state="translated">Das Element enthält keinen gültigen <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph>-Wert.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Double">
          <source>The <ph id="ph1">&lt;paramref name="element" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Der <ph id="ph1">&lt;paramref name="element" /&gt;</ph>-Parameter ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Guid">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.Guid" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>, das in <ph id="ph2">&lt;see cref="T:System.Guid" /&gt;</ph> umgewandelt werden soll.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Guid">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Guid" /&gt;</ph>.</source>
          <target state="translated">Wandelt den Wert dieses <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> in einen <ph id="ph2">&lt;see cref="T:System.Guid" /&gt;</ph> um.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Guid">
          <source>A <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> that contains the content of this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph>, das den Inhalt dieses <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> enthält.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Guid">
          <source>The following example creates an element with a guid as content.</source>
          <target state="translated">Im folgende Beispiel wird ein Element mit einer Guid als Inhalt erstellt.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Guid">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.Guid&gt;</ph>.</source>
          <target state="translated">Anschließend ruft den Wert ab, durch die Umwandlung in <ph id="ph1">&lt;xref:System.Guid&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Guid">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Guid">
          <source>The element does not contain a valid <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> value.</source>
          <target state="translated">Das Element enthält keinen gültigen <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph>-Wert.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Guid">
          <source>The <ph id="ph1">&lt;paramref name="element" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Der <ph id="ph1">&lt;paramref name="element" /&gt;</ph>-Parameter ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int32">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.Int32" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>, das in <ph id="ph2">&lt;see cref="T:System.Int32" /&gt;</ph> umgewandelt werden soll.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int32">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to an <ph id="ph2">&lt;see cref="T:System.Int32" /&gt;</ph>.</source>
          <target state="translated">Wandelt den Wert dieses <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> in einen <ph id="ph2">&lt;see cref="T:System.Int32" /&gt;</ph> um.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int32">
          <source>A <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> that contains the content of this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>, das den Inhalt dieses <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> enthält.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int32">
          <source>The following example creates an element with an integer as content.</source>
          <target state="translated">Im folgende Beispiel wird ein Element mit einer ganzen Zahl als Inhalt erstellt.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int32">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.Int32&gt;</ph>.</source>
          <target state="translated">Anschließend ruft den Wert ab, durch die Umwandlung in <ph id="ph1">&lt;xref:System.Int32&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int32">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int32">
          <source>The element does not contain a valid <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> value.</source>
          <target state="translated">Das Element enthält keinen gültigen <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>-Wert.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int32">
          <source>The <ph id="ph1">&lt;paramref name="element" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Der <ph id="ph1">&lt;paramref name="element" /&gt;</ph>-Parameter ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int64">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.Int64" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>, das in <ph id="ph2">&lt;see cref="T:System.Int64" /&gt;</ph> umgewandelt werden soll.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int64">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to an <ph id="ph2">&lt;see cref="T:System.Int64" /&gt;</ph>.</source>
          <target state="translated">Wandelt den Wert dieses <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> in einen <ph id="ph2">&lt;see cref="T:System.Int64" /&gt;</ph> um.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int64">
          <source>A <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> that contains the content of this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph>, das den Inhalt dieses <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> enthält.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int64">
          <source>The following example creates an element with a long integer as content.</source>
          <target state="translated">Im folgende Beispiel wird ein Element mit einer langen ganzen Zahl als Inhalt erstellt.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int64">
          <source>It then retrieves the value of the element by casting to <ph id="ph1">&lt;xref:System.Int64&gt;</ph>.</source>
          <target state="translated">Anschließend ruft den Wert des Elements ab, durch die Umwandlung in <ph id="ph1">&lt;xref:System.Int64&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int64">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int64">
          <source>The element does not contain a valid <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> value.</source>
          <target state="translated">Das Element enthält keinen gültigen <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph>-Wert.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int64">
          <source>The <ph id="ph1">&lt;paramref name="element" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Der <ph id="ph1">&lt;paramref name="element" /&gt;</ph>-Parameter ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Boolean}">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.Boolean" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>, das in ein <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> vom Typ <ph id="ph3">&lt;see cref="T:System.Boolean" /&gt;</ph> umgewandelt werden soll.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Boolean}">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.Boolean" /&gt;</ph>.</source>
          <target state="translated">Wandelt den Wert dieses <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> in ein <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> vom Typ <ph id="ph3">&lt;see cref="T:System.Boolean" /&gt;</ph> um.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Boolean}">
          <source>A <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Boolean" /&gt;</ph> that contains the content of this <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> vom Typ <ph id="ph2">&lt;see cref="T:System.Boolean" /&gt;</ph>, das den Inhalt dieses <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> enthält.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Boolean}">
          <source>When converting to <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> of <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> from an attribute or element, allowed values are "0", "1", and any string that produces "true" or "false" after trimming and conversion to lower case.</source>
          <target state="translated">Beim Konvertieren in <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> von <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> aus einem Attribut oder Element, nach dem Kürzen und Konvertierung in Kleinbuchstaben zulässig Werte sind "0", "1", und eine beliebige Zeichenfolge, die "Wahr" erzeugt oder "False".</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Boolean}">
          <source>The following example creates an element with boolean content.</source>
          <target state="translated">Das folgende Beispiel erstellt ein Element mit booleschen Inhalt.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Boolean}">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> of <ph id="ph2">&lt;xref:System.Boolean&gt;</ph>.</source>
          <target state="translated">Anschließend ruft den Wert ab, durch die Umwandlung in <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> von <ph id="ph2">&lt;xref:System.Boolean&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Boolean}">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Boolean}">
          <source>The element does not contain a valid <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value.</source>
          <target state="translated">Das Element enthält keinen gültigen <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph>-Wert.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTime}">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.DateTime" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>, das in ein <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> vom Typ <ph id="ph3">&lt;see cref="T:System.DateTime" /&gt;</ph> umgewandelt werden soll.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTime}">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.DateTime" /&gt;</ph>.</source>
          <target state="translated">Wandelt den Wert dieses <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> in ein <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> vom Typ <ph id="ph3">&lt;see cref="T:System.DateTime" /&gt;</ph> um.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTime}">
          <source>A <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.DateTime" /&gt;</ph> that contains the content of this <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> vom Typ <ph id="ph2">&lt;see cref="T:System.DateTime" /&gt;</ph>, das den Inhalt dieses <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> enthält.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTime}">
          <source>The value space of an attribute or element that contains date and time content is closely related to the dates and times described in ISO 8601.</source>
          <target state="translated">Der Wertebereich eines Attributs oder Elements, das Datum und Uhrzeit Inhalt enthält ist eng mit den Datums- und Uhrzeitangaben, die in ISO 8601 beschriebenen verknüpft.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTime}">
          <source>When creating an attribute or element that contains date and time content, the attribute or element values are formatted per the W3C specification.</source>
          <target state="translated">Beim Erstellen eines Attributs oder Elements, das Datum und Uhrzeit Inhalt enthält, werden die Attribut- oder Elementwerten gemäß der W3C-Spezifikation formatiert.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTime}">
          <source>See the W3C specification for more details.</source>
          <target state="translated">Finden Sie unter der W3C-Spezifikation für weitere Details.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTime}">
          <source>The behavior is lax when casting to a <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> of <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> from an attribute or element.</source>
          <target state="translated">Das Verhalten ist weniger strenge bei der Umwandlung in einen <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> von <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> aus einem Attribut oder Element.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTime}">
          <source>Even if the attribute or element value is not formatted exactly per the W3C specification, the value is appropriately converted to a <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> of <ph id="ph2">&lt;xref:System.DateTime&gt;</ph>.</source>
          <target state="translated">Auch wenn der Wert von Attribut- oder Elementwert nicht exakt gemäß der W3C-Spezifikation formatiert ist, wird entsprechend konvertierte Wert eine <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> von <ph id="ph2">&lt;xref:System.DateTime&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTime}">
          <source>This conversion operator uses <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType&gt;</ph> to convert from a <ph id="ph2">&lt;xref:System.DateTime&gt;</ph>.</source>
          <target state="translated">Dieses Konvertierungsoperators verwendet <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType&gt;</ph> zum Konvertieren von einem <ph id="ph2">&lt;xref:System.DateTime&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTime}">
          <source>The following example creates an element with a date and time as content.</source>
          <target state="translated">Das folgende Beispiel erstellt ein Element mit einer Datums- und Uhrzeitangabe als Inhalt.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTime}">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> of <ph id="ph2">&lt;xref:System.DateTime&gt;</ph>.</source>
          <target state="translated">Anschließend ruft den Wert ab, durch die Umwandlung in <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> von <ph id="ph2">&lt;xref:System.DateTime&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTime}">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTime}">
          <source>The element does not contain a valid <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> value.</source>
          <target state="translated">Das Element enthält keinen gültigen <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph>-Wert.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTimeOffset}">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to cast to an <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>, das in ein <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> vom Typ <ph id="ph3">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph>umgewandelt werden soll.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTimeOffset}">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph>.</source>
          <target state="translated">Wandelt den Wert dieses <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> in ein <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> vom Typ <ph id="ph3">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> um.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTimeOffset}">
          <source>A <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> that contains the content of this <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> vom Typ <ph id="ph2">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph>, das den Inhalt dieses <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> enthält.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTimeOffset}">
          <source>This conversion operator uses the <ph id="ph1">&lt;xref:System.Xml.XmlConvert&gt;</ph> class to do the conversion.</source>
          <target state="translated">Dieses Konvertierungsoperators verwendet die <ph id="ph1">&lt;xref:System.Xml.XmlConvert&gt;</ph> Klasse, um die Konvertierung erforderlich sind.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTimeOffset}">
          <source>The following example creates an element with date and time content.</source>
          <target state="translated">Das folgende Beispiel erstellt ein Element mit Datum und Uhrzeit-Inhalt.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTimeOffset}">
          <source>It then casts to <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> of <ph id="ph2">&lt;xref:System.DateTimeOffset&gt;</ph> to retrieve the value.</source>
          <target state="translated">Klicken Sie dann in umgewandelt <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> von <ph id="ph2">&lt;xref:System.DateTimeOffset&gt;</ph> zum Abrufen des Werts.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTimeOffset}">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTimeOffset}">
          <source>The element does not contain a valid <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> value.</source>
          <target state="translated">Das Element enthält keinen gültigen <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph>-Wert.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Decimal}">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>, das in ein <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> vom Typ <ph id="ph3">&lt;see cref="T:System.Decimal" /&gt;</ph> umgewandelt werden soll.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Decimal}">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          <target state="translated">Wandelt den Wert dieses <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> in ein <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> vom Typ <ph id="ph3">&lt;see cref="T:System.Decimal" /&gt;</ph> um.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Decimal}">
          <source>A <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph> that contains the content of this <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> vom Typ <ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph>, das den Inhalt dieses <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> enthält.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Decimal}">
          <source>The following example creates an element with decimal content.</source>
          <target state="translated">Das folgende Beispiel erstellt ein Element mit decimal Inhalt.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Decimal}">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> of <ph id="ph2">&lt;xref:System.Decimal&gt;</ph>.</source>
          <target state="translated">Anschließend ruft den Wert ab, durch die Umwandlung in <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> von <ph id="ph2">&lt;xref:System.Decimal&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Decimal}">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Decimal}">
          <source>The element does not contain a valid <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> value.</source>
          <target state="translated">Das Element enthält keinen gültigen <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>-Wert.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Double}">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.Double" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>, das in ein <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> vom Typ <ph id="ph3">&lt;see cref="T:System.Double" /&gt;</ph> umgewandelt werden soll.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Double}">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.Double" /&gt;</ph>.</source>
          <target state="translated">Wandelt den Wert dieses <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> in ein <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> vom Typ <ph id="ph3">&lt;see cref="T:System.Double" /&gt;</ph> um.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Double}">
          <source>A <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph> that contains the content of this <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> vom Typ <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph>, das den Inhalt dieses <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> enthält.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Double}">
          <source>The following example creates an element with double precision floating point content.</source>
          <target state="translated">Das folgende Beispiel erstellt ein Element mit doppelter Genauigkeit floating Point-Inhalt.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Double}">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> of <ph id="ph2">&lt;xref:System.Double&gt;</ph>.</source>
          <target state="translated">Anschließend ruft den Wert ab, durch die Umwandlung in <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> von <ph id="ph2">&lt;xref:System.Double&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Double}">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Double}">
          <source>The element does not contain a valid <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> value.</source>
          <target state="translated">Das Element enthält keinen gültigen <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph>-Wert.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Guid}">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.Guid" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>, das in ein <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> vom Typ <ph id="ph3">&lt;see cref="T:System.Guid" /&gt;</ph> umgewandelt werden soll.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Guid}">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.Guid" /&gt;</ph>.</source>
          <target state="translated">Wandelt den Wert dieses <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> in ein <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> vom Typ <ph id="ph3">&lt;see cref="T:System.Guid" /&gt;</ph> um.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Guid}">
          <source>A <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Guid" /&gt;</ph> that contains the content of this <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> vom Typ <ph id="ph2">&lt;see cref="T:System.Guid" /&gt;</ph>, das den Inhalt dieses <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> enthält.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Guid}">
          <source>The following example creates an element with guid content.</source>
          <target state="translated">Das folgende Beispiel erstellt ein Element mit Guid-Inhalt.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Guid}">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> of <ph id="ph2">&lt;xref:System.Guid&gt;</ph>.</source>
          <target state="translated">Anschließend ruft den Wert ab, durch die Umwandlung in <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> von <ph id="ph2">&lt;xref:System.Guid&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Guid}">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Guid}">
          <source>The element does not contain a valid <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> value.</source>
          <target state="translated">Das Element enthält keinen gültigen <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph>-Wert.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int32}">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.Int32" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>, das in ein <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> vom Typ <ph id="ph3">&lt;see cref="T:System.Int32" /&gt;</ph> umgewandelt werden soll.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int32}">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.Int32" /&gt;</ph>.</source>
          <target state="translated">Wandelt den Wert dieses <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> in ein <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> vom Typ <ph id="ph3">&lt;see cref="T:System.Int32" /&gt;</ph> um.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int32}">
          <source>A <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Int32" /&gt;</ph> that contains the content of this <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> vom Typ <ph id="ph2">&lt;see cref="T:System.Int32" /&gt;</ph>, das den Inhalt dieses <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> enthält.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int32}">
          <source>The following example creates an element with unsigned integer content.</source>
          <target state="translated">Das folgende Beispiel erstellt ein Element mit Inhalt Ganzzahl ohne Vorzeichen.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int32}">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> of <ph id="ph2">&lt;xref:System.Int32&gt;</ph>.</source>
          <target state="translated">Anschließend ruft den Wert ab, durch die Umwandlung in <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> von <ph id="ph2">&lt;xref:System.Int32&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int32}">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int32}">
          <source>The element does not contain a valid <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> value.</source>
          <target state="translated">Das Element enthält keinen gültigen <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>-Wert.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int64}">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.Int64" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>, das in ein <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> vom Typ <ph id="ph3">&lt;see cref="T:System.Int64" /&gt;</ph> umgewandelt werden soll.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int64}">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.Int64" /&gt;</ph>.</source>
          <target state="translated">Wandelt den Wert dieses <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> in ein <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> vom Typ <ph id="ph3">&lt;see cref="T:System.Int64" /&gt;</ph> um.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int64}">
          <source>A <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Int64" /&gt;</ph> that contains the content of this <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> vom Typ <ph id="ph2">&lt;see cref="T:System.Int64" /&gt;</ph>, das den Inhalt dieses <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> enthält.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int64}">
          <source>The following example creates an element with long integer content.</source>
          <target state="translated">Das folgende Beispiel erstellt ein Element mit long integer-Wert-Inhalt.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int64}">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> of <ph id="ph2">&lt;xref:System.Int64&gt;</ph>.</source>
          <target state="translated">Anschließend ruft den Wert ab, durch die Umwandlung in <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> von <ph id="ph2">&lt;xref:System.Int64&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int64}">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int64}">
          <source>The element does not contain a valid <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> value.</source>
          <target state="translated">Das Element enthält keinen gültigen <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph>-Wert.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Single}">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.Single" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>, das in ein <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> vom Typ <ph id="ph3">&lt;see cref="T:System.Single" /&gt;</ph> umgewandelt werden soll.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Single}">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.Single" /&gt;</ph>.</source>
          <target state="translated">Wandelt den Wert dieses <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> in ein <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> vom Typ <ph id="ph3">&lt;see cref="T:System.Single" /&gt;</ph> um.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Single}">
          <source>A <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Single" /&gt;</ph> that contains the content of this <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> vom Typ <ph id="ph2">&lt;see cref="T:System.Single" /&gt;</ph>, das den Inhalt dieses <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> enthält.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Single}">
          <source>The following example creates an element with single precision floating point content.</source>
          <target state="translated">Das folgende Beispiel erstellt ein Element mit einfacher Genauigkeit floating Point-Inhalt.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Single}">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> of <ph id="ph2">&lt;xref:System.Single&gt;</ph>.</source>
          <target state="translated">Anschließend ruft den Wert ab, durch die Umwandlung in <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> von <ph id="ph2">&lt;xref:System.Single&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Single}">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Single}">
          <source>The element does not contain a valid <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> value.</source>
          <target state="translated">Das Element enthält keinen gültigen <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph>-Wert.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.TimeSpan}">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.TimeSpan" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>, das in ein <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> vom Typ <ph id="ph3">&lt;see cref="T:System.TimeSpan" /&gt;</ph> umgewandelt werden soll.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.TimeSpan}">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.TimeSpan" /&gt;</ph>.</source>
          <target state="translated">Wandelt den Wert dieses <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> in ein <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> vom Typ <ph id="ph3">&lt;see cref="T:System.TimeSpan" /&gt;</ph> um.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.TimeSpan}">
          <source>A <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that contains the content of this <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> vom Typ <ph id="ph2">&lt;see cref="T:System.TimeSpan" /&gt;</ph>, das den Inhalt dieses <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> enthält.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.TimeSpan}">
          <source>The value space of an attribute or element that contains time span content is closely related to duration content as described in ISO 8601.</source>
          <target state="translated">Der Wertebereich eines Attributs oder Elements, das spanneninhalts Zeit enthält eng Dauer Inhalt bezieht sich auf gemäß ISO 8601.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.TimeSpan}">
          <source>When creating an attribute or element that contains time span content, the attribute or element values are formatted per the W3C specification.</source>
          <target state="translated">Beim Erstellen eines Attributs oder Elements, das Span Inhalt enthält, werden die Attribut- oder Elementwerten gemäß der W3C-Spezifikation formatiert.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.TimeSpan}">
          <source>Please see the W3C specification for more details.</source>
          <target state="translated">Finden Sie in der W3C-Spezifikation für weitere Details.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.TimeSpan}">
          <source>Behavior is lax when casting to a <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> of <ph id="ph2">&lt;xref:System.TimeSpan&gt;</ph> from an attribute or element.</source>
          <target state="translated">Verhalten ist weniger strenge bei der Umwandlung in einen <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> von <ph id="ph2">&lt;xref:System.TimeSpan&gt;</ph> aus einem Attribut oder Element.</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.TimeSpan}">
          <source>Even if the attribute or element value is not formatted exactly per the W3C specification, the value is appropriately converted to a <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> of <ph id="ph2">&lt;xref:System.TimeSpan&gt;</ph>.</source>
          <target state="translated">Auch wenn der Wert von Attribut- oder Elementwert nicht exakt gemäß der W3C-Spezifikation formatiert ist, wird entsprechend konvertierte Wert eine <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> von <ph id="ph2">&lt;xref:System.TimeSpan&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.TimeSpan}">
          <source>The following example creates an element with time span content.</source>
          <target state="translated">Im folgende Beispiel wird ein Element mit Zeitspanne erstellt.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.TimeSpan}">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> of <ph id="ph2">&lt;xref:System.TimeSpan&gt;</ph>.</source>
          <target state="translated">Anschließend ruft den Wert ab, durch die Umwandlung in <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> von <ph id="ph2">&lt;xref:System.TimeSpan&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.TimeSpan}">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.TimeSpan}">
          <source>The element does not contain a valid <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> value.</source>
          <target state="translated">Das Element enthält keinen gültigen <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>-Wert.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt32}">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.UInt32" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>, das in ein <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> vom Typ <ph id="ph3">&lt;see cref="T:System.UInt32" /&gt;</ph> umgewandelt werden soll.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt32}">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.UInt32" /&gt;</ph>.</source>
          <target state="translated">Wandelt den Wert dieses <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> in ein <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> vom Typ <ph id="ph3">&lt;see cref="T:System.UInt32" /&gt;</ph> um.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt32}">
          <source>A <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.UInt32" /&gt;</ph> that contains the content of this <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> vom Typ <ph id="ph2">&lt;see cref="T:System.UInt32" /&gt;</ph>, das den Inhalt dieses <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> enthält.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt32}">
          <source>The following example creates an element with unsigned integer content.</source>
          <target state="translated">Das folgende Beispiel erstellt ein Element mit Inhalt Ganzzahl ohne Vorzeichen.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt32}">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> of <ph id="ph2">&lt;xref:System.UInt32&gt;</ph>.</source>
          <target state="translated">Anschließend ruft den Wert ab, durch die Umwandlung in <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> von <ph id="ph2">&lt;xref:System.UInt32&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt32}">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt32}">
          <source>The element does not contain a valid <ph id="ph1">&lt;see cref="T:System.UInt32" /&gt;</ph> value.</source>
          <target state="translated">Das Element enthält keinen gültigen <ph id="ph1">&lt;see cref="T:System.UInt32" /&gt;</ph>-Wert.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt64}">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.UInt64" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>, das in ein <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> vom Typ <ph id="ph3">&lt;see cref="T:System.UInt64" /&gt;</ph> umgewandelt werden soll.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt64}">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.UInt64" /&gt;</ph>.</source>
          <target state="translated">Wandelt den Wert dieses <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> in ein <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> vom Typ <ph id="ph3">&lt;see cref="T:System.UInt64" /&gt;</ph> um.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt64}">
          <source>A <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.UInt64" /&gt;</ph> that contains the content of this <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> vom Typ <ph id="ph2">&lt;see cref="T:System.UInt64" /&gt;</ph>, das den Inhalt dieses <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> enthält.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt64}">
          <source>The following example creates an element with unsigned long integer content.</source>
          <target state="translated">Das folgende Beispiel erstellt ein Element mit Inhalt unsigned long integer-Wert.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt64}">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> of <ph id="ph2">&lt;xref:System.UInt64&gt;</ph>.</source>
          <target state="translated">Anschließend ruft den Wert ab, durch die Umwandlung in <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> von <ph id="ph2">&lt;xref:System.UInt64&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt64}">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt64}">
          <source>The element does not contain a valid <ph id="ph1">&lt;see cref="T:System.UInt64" /&gt;</ph> value.</source>
          <target state="translated">Das Element enthält keinen gültigen <ph id="ph1">&lt;see cref="T:System.UInt64" /&gt;</ph>-Wert.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Single">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.Single" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>, das in <ph id="ph2">&lt;see cref="T:System.Single" /&gt;</ph> umgewandelt werden soll.</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Single">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Single" /&gt;</ph>.</source>
          <target state="translated">Wandelt den Wert dieses <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> in einen <ph id="ph2">&lt;see cref="T:System.Single" /&gt;</ph> um.</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Single">
          <source>A <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> that contains the content of this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph>, das den Inhalt dieses <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> enthält.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Single">
          <source>The following example creates an element with single precision floating point content.</source>
          <target state="translated">Das folgende Beispiel erstellt ein Element mit einfacher Genauigkeit floating Point-Inhalt.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Single">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.Single&gt;</ph>.</source>
          <target state="translated">Anschließend ruft den Wert ab, durch die Umwandlung in <ph id="ph1">&lt;xref:System.Single&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Single">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Single">
          <source>The element does not contain a valid <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> value.</source>
          <target state="translated">Das Element enthält keinen gültigen <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph>-Wert.</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Single">
          <source>The <ph id="ph1">&lt;paramref name="element" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Der <ph id="ph1">&lt;paramref name="element" /&gt;</ph>-Parameter ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.String">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>, das in <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph> umgewandelt werden soll.</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.String">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>.</source>
          <target state="translated">Wandelt den Wert dieses <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> in einen <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph> um.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.String">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the content of this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>, das den Inhalt dieses <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> enthält.</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.String">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> has children, the concatenated string value of all of the element's text and descendant's text is returned.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> untergeordnete Elemente besitzt, wird der Wert der verketteten Zeichenfolge mit sämtlichen Text des Elements und des abhängigen Elements Text zurückgegeben.</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.String">
          <source>The following example creates an element with string content.</source>
          <target state="translated">Das folgende Beispiel erstellt ein Element mit Zeichenfolgeninhalt.</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.String">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.String&gt;</ph>.</source>
          <target state="translated">Anschließend ruft den Wert ab, durch die Umwandlung in <ph id="ph1">&lt;xref:System.String&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.String">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.TimeSpan">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.TimeSpan" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>, das in <ph id="ph2">&lt;see cref="T:System.TimeSpan" /&gt;</ph> umgewandelt werden soll.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.TimeSpan">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.TimeSpan" /&gt;</ph>.</source>
          <target state="translated">Wandelt den Wert dieses <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> in einen <ph id="ph2">&lt;see cref="T:System.TimeSpan" /&gt;</ph> um.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.TimeSpan">
          <source>A <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that contains the content of this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>, das den Inhalt dieses <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> enthält.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.TimeSpan">
          <source>The value space of an attribute or element that contains time span content is closely related to duration content as described in ISO 8601.</source>
          <target state="translated">Der Wertebereich eines Attributs oder Elements, das spanneninhalts Zeit enthält eng Dauer Inhalt bezieht sich auf gemäß ISO 8601.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.TimeSpan">
          <source>When creating an attribute or element that contains time span content, the attribute or element values are formatted per the W3C specification.</source>
          <target state="translated">Beim Erstellen eines Attributs oder Elements, das Span Inhalt enthält, werden die Attribut- oder Elementwerten gemäß der W3C-Spezifikation formatiert.</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.TimeSpan">
          <source>Please see the W3C specification for more details.</source>
          <target state="translated">Finden Sie in der W3C-Spezifikation für weitere Details.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.TimeSpan">
          <source>Behavior is lax when casting to a <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph> from an attribute or element.</source>
          <target state="translated">Verhalten ist weniger strenge bei der Umwandlung in einen <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph> aus einem Attribut oder Element.</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.TimeSpan">
          <source>Even if the attribute or element value is not formatted exactly per the W3C specification, the value is appropriately converted to a <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph>.</source>
          <target state="translated">Auch wenn der Wert von Attribut- oder Elementwert nicht exakt gemäß der W3C-Spezifikation formatiert ist, wird entsprechend konvertierte Wert eine <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.TimeSpan">
          <source>The following example creates an element with time span content.</source>
          <target state="translated">Im folgende Beispiel wird ein Element mit Zeitspanne erstellt.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.TimeSpan">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph>.</source>
          <target state="translated">Anschließend ruft den Wert ab, durch die Umwandlung in <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.TimeSpan">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.TimeSpan">
          <source>The element does not contain a valid <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> value.</source>
          <target state="translated">Das Element enthält keinen gültigen <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>-Wert.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.TimeSpan">
          <source>The <ph id="ph1">&lt;paramref name="element" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Der <ph id="ph1">&lt;paramref name="element" /&gt;</ph>-Parameter ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt32">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.UInt32" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>, das in <ph id="ph2">&lt;see cref="T:System.UInt32" /&gt;</ph> umgewandelt werden soll.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt32">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.UInt32" /&gt;</ph>.</source>
          <target state="translated">Wandelt den Wert dieses <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> in einen <ph id="ph2">&lt;see cref="T:System.UInt32" /&gt;</ph> um.</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt32">
          <source>A <ph id="ph1">&lt;see cref="T:System.UInt32" /&gt;</ph> that contains the content of this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.UInt32" /&gt;</ph>, das den Inhalt dieses <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> enthält.</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt32">
          <source>The following example creates an element with unsigned integer content.</source>
          <target state="translated">Das folgende Beispiel erstellt ein Element mit Inhalt Ganzzahl ohne Vorzeichen.</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt32">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.UInt32&gt;</ph>.</source>
          <target state="translated">Anschließend ruft den Wert ab, durch die Umwandlung in <ph id="ph1">&lt;xref:System.UInt32&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt32">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt32">
          <source>The element does not contain a valid <ph id="ph1">&lt;see cref="T:System.UInt32" /&gt;</ph> value.</source>
          <target state="translated">Das Element enthält keinen gültigen <ph id="ph1">&lt;see cref="T:System.UInt32" /&gt;</ph>-Wert.</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt32">
          <source>The <ph id="ph1">&lt;paramref name="element" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Der <ph id="ph1">&lt;paramref name="element" /&gt;</ph>-Parameter ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt64">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.UInt64" /&gt;</ph>.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>, das in <ph id="ph2">&lt;see cref="T:System.UInt64" /&gt;</ph> umgewandelt werden soll.</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt64">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.UInt64" /&gt;</ph>.</source>
          <target state="translated">Wandelt den Wert dieses <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> in einen <ph id="ph2">&lt;see cref="T:System.UInt64" /&gt;</ph> um.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt64">
          <source>A <ph id="ph1">&lt;see cref="T:System.UInt64" /&gt;</ph> that contains the content of this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.UInt64" /&gt;</ph>, das den Inhalt dieses <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> enthält.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt64">
          <source>The following example creates an element with unsigned long integer content.</source>
          <target state="translated">Das folgende Beispiel erstellt ein Element mit Inhalt unsigned long integer-Wert.</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt64">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.UInt64&gt;</ph>.</source>
          <target state="translated">Anschließend ruft den Wert ab, durch die Umwandlung in <ph id="ph1">&lt;xref:System.UInt64&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt64">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt64">
          <source>The element does not contain a valid <ph id="ph1">&lt;see cref="T:System.UInt64" /&gt;</ph> value.</source>
          <target state="translated">Das Element enthält keinen gültigen <ph id="ph1">&lt;see cref="T:System.UInt64" /&gt;</ph>-Wert.</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt64">
          <source>The <ph id="ph1">&lt;paramref name="element" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Der <ph id="ph1">&lt;paramref name="element" /&gt;</ph>-Parameter ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XElement">
          <source>Load an <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> from a string that contains XML, optionally preserving white space and retaining line information.</source>
          <target state="translated">Lädt ein <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> aus einer Zeichenfolge, die XML enthält, wobei optional Leerraum und Zeileninformationen beibehalten werden.</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Parse(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains XML.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>, der XML enthält.</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Parse(System.String)">
          <source>Load an <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> from a string that contains XML.</source>
          <target state="translated">Lädt ein <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> aus einer Zeichenfolge, die XML enthält.</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Parse(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> populated from the string that contains XML.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>, das aus der Zeichenfolge aufgefüllt wird, die XML enthält.</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Parse(System.String)">
          <source>This method does not preserve white space.</source>
          <target state="translated">Diese Methode wird Leerraum nicht beibehalten.</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Parse(System.String)">
          <source>If you want to preserve white space in the XML tree, use the overload of the <ph id="ph1">&lt;xref:System.Xml.Linq.XElement.Parse%2A&gt;</ph> method that takes <ph id="ph2">&lt;xref:System.Xml.Linq.LoadOptions&gt;</ph> as a parameter.</source>
          <target state="translated">Wenn Sie den Leerraum in der XML-Struktur beibehalten möchten, verwenden Sie die Überladung von der <ph id="ph1">&lt;xref:System.Xml.Linq.XElement.Parse%2A&gt;</ph> Methode, <ph id="ph2">&lt;xref:System.Xml.Linq.LoadOptions&gt;</ph> als Parameter.</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Parse(System.String)">
          <source>For more information, see <bpt id="p1">[</bpt>Preserving White Space while Loading or Parsing XML<ept id="p1">](http://msdn.microsoft.com/library/093a7169-a04e-4638-b08c-d1cb98aa650d)</ept> and <bpt id="p2">[</bpt>Preserving White Space While Serializing<ept id="p2">](http://msdn.microsoft.com/library/fb146217-0a49-4efc-ac84-7265b91d3939)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>bleiben Leerraum beim Laden oder Analysieren der XML-<ept id="p1">](http://msdn.microsoft.com/library/093a7169-a04e-4638-b08c-d1cb98aa650d)</ept> und <bpt id="p2">[</bpt>bleiben Leerzeichen beim Serialisieren<ept id="p2">](http://msdn.microsoft.com/library/fb146217-0a49-4efc-ac84-7265b91d3939)</ept>.</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Parse(System.String)">
          <source>LINQ to XML's loading functionality is built upon <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">LINQ to XML Funktionalität basiert auf <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Parse(System.String)">
          <source>Therefore, you might catch any exceptions that are thrown by the <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> overload methods and the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> methods that read and parse the document.</source>
          <target state="translated">Aus diesem Grund können Sie durch ausgelöste Ausnahmen abfangen der <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> Überladen von Methoden und die <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> Methoden, die das Dokument lesen und analysieren.</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Parse(System.String)">
          <source>The following example creates a string that contains XML.</source>
          <target state="translated">Das folgende Beispiel erstellt eine Zeichenfolge, die XML enthält.</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Parse(System.String)">
          <source>It then parses the string into an <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph>.</source>
          <target state="translated">Klicken Sie dann Analysieren der Zeichenfolge in eine <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Parse(System.String)">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains XML.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>, der XML enthält.</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.Linq.LoadOptions" /&gt;</ph> that specifies white space behavior, and whether to load base URI and line information.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xml.Linq.LoadOptions" /&gt;</ph>, das Leerraumverhalten angibt und festlegt, ob Basis-URI- und Zeileninformationen geladen werden.</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>Load an <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> from a string that contains XML, optionally preserving white space and retaining line information.</source>
          <target state="translated">Lädt ein <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> aus einer Zeichenfolge, die XML enthält, wobei optional Leerraum und Zeileninformationen beibehalten werden.</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> populated from the string that contains XML.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>, das aus der Zeichenfolge aufgefüllt wird, die XML enthält.</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>If the source XML is indented, setting the <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> flag in <ph id="ph2">`options`</ph> causes the reader to read all white space in the source XML.</source>
          <target state="translated">Wenn das Quell-XML eingezogen wird, wird durch Festlegen der <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> -flag in <ph id="ph2">`options`</ph> bewirkt, dass den Reader zum Lesen der gesamte Leerraum in der XML-Quelle.</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>Nodes of type <ph id="ph1">&lt;xref:System.Xml.Linq.XText&gt;</ph> are created for both significant and insignificant white space.</source>
          <target state="translated">Knoten vom Typ <ph id="ph1">&lt;xref:System.Xml.Linq.XText&gt;</ph> für signifikante und nicht signifikante Leerraum erstellt werden.</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>If the source XML is indented, not setting the <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> flag in <ph id="ph2">`options`</ph> causes the reader to ignore all of the insignificant white space in the source XML.</source>
          <target state="translated">Wenn das Quell-XML eingezogen wird, wird nicht durch Festlegen der <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> -flag in <ph id="ph2">`options`</ph> bewirkt, dass den Reader, der nicht signifikante Leerraum in der XML-Quelle zu ignorieren.</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>The XML tree is created without any text nodes for insignificant white space.</source>
          <target state="translated">Die XML-Struktur wird ohne Textknoten für nicht signifikante Leerraum erstellt.</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>If the source XML is not indented, setting the <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> flag in <ph id="ph2">`options`</ph> has no effect.</source>
          <target state="translated">Wenn das Quell-XML nicht eingezogen ist, wird durch Festlegen der <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> -flag in <ph id="ph2">`options`</ph> hat keine Auswirkungen.</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>Significant white space is still preserved, and there are no spans of insignificant white space that could cause the creation of more white space text nodes.</source>
          <target state="translated">Signifikanter Leerraum wird weiterhin erhalten, und es gibt keine Passage mit insignifikante Leerzeichen, die die Erstellung von weitere Leerraumtextknoten verursachen könnten.</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>For more information, see <bpt id="p1">[</bpt>Preserving White Space while Loading or Parsing XML<ept id="p1">](http://msdn.microsoft.com/library/093a7169-a04e-4638-b08c-d1cb98aa650d)</ept> and <bpt id="p2">[</bpt>Preserving White Space While Serializing<ept id="p2">](http://msdn.microsoft.com/library/fb146217-0a49-4efc-ac84-7265b91d3939)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>bleiben Leerraum beim Laden oder Analysieren der XML-<ept id="p1">](http://msdn.microsoft.com/library/093a7169-a04e-4638-b08c-d1cb98aa650d)</ept> und <bpt id="p2">[</bpt>bleiben Leerzeichen beim Serialisieren<ept id="p2">](http://msdn.microsoft.com/library/fb146217-0a49-4efc-ac84-7265b91d3939)</ept>.</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>Setting <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.SetBaseUri&gt;</ph> will have no effect when parsing from a <ph id="ph2">&lt;xref:System.String&gt;</ph>.</source>
          <target state="translated">Festlegen von <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.SetBaseUri&gt;</ph> hat keine Auswirkungen, bei der Analyse aus einem <ph id="ph2">&lt;xref:System.String&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> may have a valid line information or not.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> möglicherweise eine gültige Zeileninformationen oder nicht.</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>If you set <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.SetLineInfo&gt;</ph>, the line information will be set in the XML tree from the line information that is reported by the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">Wenn Sie festlegen, <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.SetLineInfo&gt;</ph>, die Zeileninformationen wird in der XML-Struktur festgelegt werden, aus der Zeileninformationen, die von berichtet wird die <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>There is a performance penalty if you set the <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.SetLineInfo&gt;</ph> flag.</source>
          <target state="translated">Es ist eine Leistungseinbuße, wenn Sie festlegen der <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.SetLineInfo&gt;</ph> Flag.</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>The line information is accurate immediately after loading the XML document.</source>
          <target state="translated">Die Zeileninformationen wird unmittelbar nach dem Laden des XML-Dokuments präzisesten angezeigt.</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>If you modify the XML tree after loading the document, the line information may become meaningless.</source>
          <target state="translated">Wenn Sie die XML-Struktur nach dem Laden des Dokuments ändern, sind die Zeileninformationen möglicherweise unbrauchbar.</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>LINQ to XML's loading functionality is built upon <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">LINQ to XML Funktionalität basiert auf <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>Therefore, you might catch any exceptions that are thrown by the <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> overload methods and the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> methods that read and parse the document.</source>
          <target state="translated">Aus diesem Grund können Sie durch ausgelöste Ausnahmen abfangen der <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> Überladen von Methoden und die <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> Methoden, die das Dokument lesen und analysieren.</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>The following example parses a string into an <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> in two different ways: preserving white space, and not preserving white space.</source>
          <target state="translated">Im folgenden Beispiel wird analysiert eine Zeichenfolge in eine <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> auf zwei unterschiedliche Arten: Leerraum und Leerraum nicht beibehalten.</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>It then uses a query to determine the number of white space nodes in the resulting XML tree.</source>
          <target state="translated">Anschließend wird eine Abfrage verwendet, um die Anzahl von Leerraumknoten in die resultierende XML-Struktur zu bestimmen.</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>The following example retains line information as it parses the string.</source>
          <target state="translated">Im folgende Beispiel werden Zeileninformationen beibehalten, wie sie die Zeichenfolge analysiert.</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.RemoveAll">
          <source>Removes nodes and attributes from this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</source>
          <target state="translated">Entfernt Knoten und Attribute aus diesem <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.RemoveAll">
          <source>This method will raise the <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> and the <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> events.</source>
          <target state="translated">Diese Methode löst die <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> und <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> Ereignisse.</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.RemoveAll">
          <source>The following example creates an element with attributes and child elements.</source>
          <target state="translated">Das folgende Beispiel erstellt ein Element mit Attributen und untergeordneten Elementen.</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.RemoveAll">
          <source>It then calls this method to remove both the attributes and the child elements.</source>
          <target state="translated">Er ruft dann diese Methode, um die Attribute und die untergeordneten Elemente zu entfernen.</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.RemoveAll">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.RemoveAttributes">
          <source>Removes the attributes of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</source>
          <target state="translated">Entfernt die Attribute dieses <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.RemoveAttributes">
          <source>This method will raise the <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> and the <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> events.</source>
          <target state="translated">Diese Methode löst die <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> und <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> Ereignisse.</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.RemoveAttributes">
          <source>The following example creates an element with attributes and child elements.</source>
          <target state="translated">Das folgende Beispiel erstellt ein Element mit Attributen und untergeordneten Elementen.</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.RemoveAttributes">
          <source>It then calls this method to remove the attributes.</source>
          <target state="translated">Er ruft dann diese Methode, um die Attribute zu entfernen.</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.RemoveAttributes">
          <source>The child elements remain.</source>
          <target state="translated">Die untergeordneten Elemente bleiben.</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.RemoveAttributes">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XElement">
          <source>Replaces the child nodes and the attributes of this element with the specified content.</source>
          <target state="translated">Ersetzt die untergeordneten Knoten und die Attribute dieses Elements durch den angegebenen Inhalt.</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>This method uses snapshot semantics—that is, it creates a separate copy of the new content before replacing the contents of the current element with the new content.</source>
          <target state="translated">Diese Methode verwendet die Momentaufnahmensemantik – das heißt, eine separate Kopie der neue Inhalt erstellt, bevor Sie den Inhalt des aktuellen Elements durch den neuen Inhalt ersetzt.</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>This means that you can query the contents of the current element and use the results of the query as the specified new content.</source>
          <target state="translated">Dies bedeutet, dass Sie des Inhalts des aktuellen Elements Abfragen und die Ergebnisse der Abfrage als den angegebenen neuen Inhalt verwenden können.</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>For details about the valid content that can be passed to this function, see <bpt id="p1">[</bpt>Valid Content of XElement and XDocument Objects<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</source>
          <target state="translated">Weitere Informationen zu den gültigen Inhalt, der an diese Funktion übergeben werden kann, finden Sie unter <bpt id="p1">[</bpt>gültiger Inhalt von "XElement" und "XDocument" Objekte<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>This method will raise the <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> and the <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> events.</source>
          <target state="translated">Diese Methode löst die <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> und <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> Ereignisse.</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>The following example passes the results of a LINQ query to this method, replacing the contents of an element with the query results.</source>
          <target state="translated">Das folgende Beispiel übergibt die Ergebnisse einer LINQ-Abfrage an diese Methode, und Ersetzen Sie dabei den Inhalt eines Elements mit den Abfrageergebnissen.</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>It queries the element that is having its contents replaced.</source>
          <target state="translated">Anschließend fragt es das Element, das seinen Inhalt ersetzt aufgetreten sind.</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.ReplaceAll(System.Object)">
          <source>The content that will replace the child nodes and attributes of this element.</source>
          <target state="translated">Der Inhalt, durch den die untergeordneten Knoten und die Attribute dieses Elements ersetzt werden.</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.ReplaceAll(System.Object)">
          <source>Replaces the child nodes and the attributes of this element with the specified content.</source>
          <target state="translated">Ersetzt die untergeordneten Knoten und die Attribute dieses Elements durch den angegebenen Inhalt.</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.ReplaceAll(System.Object)">
          <source>This method first removes existing content and attributes.</source>
          <target state="translated">Diese Methode entfernt zunächst vorhandene Inhalte und Attribute.</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.ReplaceAll(System.Object)">
          <source>It then adds the specified <ph id="ph1">`content`</ph>.</source>
          <target state="translated">Es fügt dann die angegebenen <ph id="ph1">`content`</ph>.</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.ReplaceAll(System.Object)">
          <source>This method uses snapshot semantics—that is, it creates a separate copy of the new content before replacing the contents of the current element with the new content.</source>
          <target state="translated">Diese Methode verwendet die Momentaufnahmensemantik – das heißt, eine separate Kopie der neue Inhalt erstellt, bevor Sie den Inhalt des aktuellen Elements durch den neuen Inhalt ersetzt.</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.ReplaceAll(System.Object)">
          <source>This means that you can query the contents of the current element and use the results of the query as the specified new content.</source>
          <target state="translated">Dies bedeutet, dass Sie des Inhalts des aktuellen Elements Abfragen und die Ergebnisse der Abfrage als den angegebenen neuen Inhalt verwenden können.</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.ReplaceAll(System.Object)">
          <source>For details about the valid content that can be passed to this function, see <bpt id="p1">[</bpt>Valid Content of XElement and XDocument Objects<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</source>
          <target state="translated">Weitere Informationen zu den gültigen Inhalt, der an diese Funktion übergeben werden kann, finden Sie unter <bpt id="p1">[</bpt>gültiger Inhalt von "XElement" und "XDocument" Objekte<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.ReplaceAll(System.Object)">
          <source>This method will raise the <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> and the <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> events.</source>
          <target state="translated">Diese Methode löst die <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> und <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> Ereignisse.</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.ReplaceAll(System.Object)">
          <source>The following example uses this method.</source>
          <target state="translated">Im folgenden Beispiel wird diese Methode.</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.ReplaceAll(System.Object)">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.ReplaceAll(System.Object[])">
          <source>A parameter list of content objects.</source>
          <target state="translated">Eine Parameterliste von Inhaltsobjekten.</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.ReplaceAll(System.Object[])">
          <source>Replaces the child nodes and the attributes of this element with the specified content.</source>
          <target state="translated">Ersetzt die untergeordneten Knoten und die Attribute dieses Elements durch den angegebenen Inhalt.</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.ReplaceAll(System.Object[])">
          <source>This method first removes existing content and attributes.</source>
          <target state="translated">Diese Methode entfernt zunächst vorhandene Inhalte und Attribute.</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.ReplaceAll(System.Object[])">
          <source>It then adds the specified <ph id="ph1">`content`</ph>.</source>
          <target state="translated">Es fügt dann die angegebenen <ph id="ph1">`content`</ph>.</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.ReplaceAll(System.Object[])">
          <source>This method uses snapshot semantics—that is, it creates a separate copy of the new content before replacing the contents of the current element with the new content.</source>
          <target state="translated">Diese Methode verwendet die Momentaufnahmensemantik – das heißt, eine separate Kopie der neue Inhalt erstellt, bevor Sie den Inhalt des aktuellen Elements durch den neuen Inhalt ersetzt.</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.ReplaceAll(System.Object[])">
          <source>This means that you can query the contents of the current element and use the results of the query as the specified new content.</source>
          <target state="translated">Dies bedeutet, dass Sie des Inhalts des aktuellen Elements Abfragen und die Ergebnisse der Abfrage als den angegebenen neuen Inhalt verwenden können.</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.ReplaceAll(System.Object[])">
          <source>For details about the valid content that can be passed to this function, see <bpt id="p1">[</bpt>Valid Content of XElement and XDocument Objects<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</source>
          <target state="translated">Weitere Informationen zu den gültigen Inhalt, der an diese Funktion übergeben werden kann, finden Sie unter <bpt id="p1">[</bpt>gültiger Inhalt von "XElement" und "XDocument" Objekte<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.ReplaceAll(System.Object[])">
          <source>This method will raise the <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> and the <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> events.</source>
          <target state="translated">Diese Methode löst die <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> und <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> Ereignisse.</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.ReplaceAll(System.Object[])">
          <source>The following example passes the results of a LINQ query to this method, replacing the contents of an element with the query results.</source>
          <target state="translated">Das folgende Beispiel übergibt die Ergebnisse einer LINQ-Abfrage an diese Methode, und Ersetzen Sie dabei den Inhalt eines Elements mit den Abfrageergebnissen.</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.ReplaceAll(System.Object[])">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XElement">
          <source>Replaces the attributes of this element with the specified content.</source>
          <target state="translated">Ersetzt die Attribute dieses Elements durch den angegebenen Inhalt.</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>This method will raise the <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> and the <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> events.</source>
          <target state="translated">Diese Methode löst die <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> und <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> Ereignisse.</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>For details about the valid content that can be passed to this function, see <bpt id="p1">[</bpt>Valid Content of XElement and XDocument Objects<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</source>
          <target state="translated">Weitere Informationen zu den gültigen Inhalt, der an diese Funktion übergeben werden kann, finden Sie unter <bpt id="p1">[</bpt>gültiger Inhalt von "XElement" und "XDocument" Objekte<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>The following example creates an element with three attributes.</source>
          <target state="translated">Das folgende Beispiel erstellt ein Element mit drei Attributen an.</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>It then uses this method to replace all of the attributes of the element with a single attribute.</source>
          <target state="translated">Dann wird diese Methode verwendet, um alle Attribute des Elements mit einem einzelnen Attribut zu ersetzen.</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XElement">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.ReplaceAttributes(System.Object)">
          <source>The content that will replace the attributes of this element.</source>
          <target state="translated">Der Inhalt, durch den die Attribute dieses Elements ersetzt werden.</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.ReplaceAttributes(System.Object)">
          <source>Replaces the attributes of this element with the specified content.</source>
          <target state="translated">Ersetzt die Attribute dieses Elements durch den angegebenen Inhalt.</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.ReplaceAttributes(System.Object)">
          <source>This method first removes existing attributes.</source>
          <target state="translated">Diese Methode entfernt zunächst vorhandene Attribute.</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.ReplaceAttributes(System.Object)">
          <source>It then adds the specified <ph id="ph1">`content`</ph>.</source>
          <target state="translated">Es fügt dann die angegebenen <ph id="ph1">`content`</ph>.</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.ReplaceAttributes(System.Object)">
          <source>For details about the valid content that can be passed to this function, see <bpt id="p1">[</bpt>Valid Content of XElement and XDocument Objects<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</source>
          <target state="translated">Weitere Informationen zu den gültigen Inhalt, der an diese Funktion übergeben werden kann, finden Sie unter <bpt id="p1">[</bpt>gültiger Inhalt von "XElement" und "XDocument" Objekte<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.ReplaceAttributes(System.Object)">
          <source>This method will raise the <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> and the <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> events.</source>
          <target state="translated">Diese Methode löst die <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> und <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> Ereignisse.</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.ReplaceAttributes(System.Object)">
          <source>The following example creates an element with three attributes.</source>
          <target state="translated">Das folgende Beispiel erstellt ein Element mit drei Attributen an.</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.ReplaceAttributes(System.Object)">
          <source>It then uses this method to replace all of the attributes of the element with a single attribute.</source>
          <target state="translated">Dann wird diese Methode verwendet, um alle Attribute des Elements mit einem einzelnen Attribut zu ersetzen.</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.ReplaceAttributes(System.Object)">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.ReplaceAttributes(System.Object[])">
          <source>A parameter list of content objects.</source>
          <target state="translated">Eine Parameterliste von Inhaltsobjekten.</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.ReplaceAttributes(System.Object[])">
          <source>Replaces the attributes of this element with the specified content.</source>
          <target state="translated">Ersetzt die Attribute dieses Elements durch den angegebenen Inhalt.</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.ReplaceAttributes(System.Object[])">
          <source>This method first removes existing attributes.</source>
          <target state="translated">Diese Methode entfernt zunächst vorhandene Attribute.</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.ReplaceAttributes(System.Object[])">
          <source>It then adds the specified <ph id="ph1">`content`</ph>.</source>
          <target state="translated">Es fügt dann die angegebenen <ph id="ph1">`content`</ph>.</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.ReplaceAttributes(System.Object[])">
          <source>For details about the valid content that can be passed to this function, see <bpt id="p1">[</bpt>Valid Content of XElement and XDocument Objects<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</source>
          <target state="translated">Weitere Informationen zu den gültigen Inhalt, der an diese Funktion übergeben werden kann, finden Sie unter <bpt id="p1">[</bpt>gültiger Inhalt von "XElement" und "XDocument" Objekte<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.ReplaceAttributes(System.Object[])">
          <source>This method will raise the <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> and the <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> events.</source>
          <target state="translated">Diese Methode löst die <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> und <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> Ereignisse.</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.ReplaceAttributes(System.Object[])">
          <source>The following example creates an element with three attributes.</source>
          <target state="translated">Das folgende Beispiel erstellt ein Element mit drei Attributen an.</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.ReplaceAttributes(System.Object[])">
          <source>It then replaces the attributes with other attributes.</source>
          <target state="translated">Anschließend wird die Attribute mit anderen Attributen ersetzt.</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.ReplaceAttributes(System.Object[])">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XElement">
          <source>Serialize this element's underlying XML tree.</source>
          <target state="translated">Serialisiert die zugrunde liegende XML-Struktur dieses Elements.</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XElement">
          <source>The output can be saved to a file, an <ph id="ph1">&lt;see cref="T:System.Xml.XmlTextWriter" /&gt;</ph>, a <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>, or an <ph id="ph3">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated">Die Ausgabe kann in einer Datei, einem <ph id="ph1">&lt;see cref="T:System.Xml.XmlTextWriter" /&gt;</ph>, einem <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> oder einem <ph id="ph3">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> gespeichert werden.</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XElement">
          <source>Optionally, formatting (indenting) can be disabled.</source>
          <target state="translated">Die Formatierung (Einzug) kann optional deaktiviert werden.</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Save(System.IO.Stream)">
          <source>The stream to output this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to.</source>
          <target state="translated">Der Stream, in den dieses <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> ausgegeben werden soll.</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Save(System.IO.Stream)">
          <source>Outputs this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to the specified <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated">Gibt diesen <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> an den angegebenen <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph> aus.</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.IO.Stream)">
          <source>The serialized XML will be indented.</source>
          <target state="translated">Das serialisierte XML wird mit Einzug dargestellt werden.</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.IO.Stream)">
          <source>All insignificant white space will be removed, and additional white space will be added so that the XML will be properly indented.</source>
          <target state="translated">Gesamte nicht signifikante Leerraum wird entfernt, und zusätzlicher Leerraum wird hinzugefügt, damit das XML ordnungsgemäß eingezogen werden.</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.IO.Stream)">
          <source>The behavior of this method is that insignificant white space will not be preserved.</source>
          <target state="translated">Das Verhalten dieser Methode wird nicht signifikante Leerraum nicht beibehalten wird.</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.IO.Stream)">
          <source>If you want to control white space, use the overload of <ph id="ph1">&lt;xref:System.Xml.Linq.XElement.Save%2A&gt;</ph> that takes <ph id="ph2">&lt;xref:System.Xml.Linq.SaveOptions&gt;</ph> as a parameter.</source>
          <target state="translated">Wenn Sie Leerraum steuern möchten, verwenden Sie die Überladung der <ph id="ph1">&lt;xref:System.Xml.Linq.XElement.Save%2A&gt;</ph> , akzeptiert <ph id="ph2">&lt;xref:System.Xml.Linq.SaveOptions&gt;</ph> als Parameter.</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.IO.Stream)">
          <source>Use the <ph id="ph1">&lt;xref:System.Xml.Linq.SaveOptions.DisableFormatting&gt;</ph> option to save unindented XML.</source>
          <target state="translated">Verwenden der <ph id="ph1">&lt;xref:System.Xml.Linq.SaveOptions.DisableFormatting&gt;</ph> Option zum Speichern von XML ohne Einzug.</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.IO.Stream)">
          <source>This will cause the writer to write all white spaces exactly as represented in the XML tree.</source>
          <target state="translated">Dadurch wird den Writer, Schreiben alle Leerzeichen genau wie in der XML-Struktur dargestellt.</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.IO.Stream)">
          <source>Use the <ph id="ph1">&lt;xref:System.Xml.Linq.SaveOptions.OmitDuplicateNamespaces&gt;</ph> option if you want to remove duplicate namespace declarations.</source>
          <target state="translated">Verwenden der <ph id="ph1">&lt;xref:System.Xml.Linq.SaveOptions.OmitDuplicateNamespaces&gt;</ph> option, wenn doppelte Namespacedeklarationen entfernt werden sollen.</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Save(System.IO.TextWriter)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> that the <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> will be written to.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>, in den das <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> geschrieben wird.</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Save(System.IO.TextWriter)">
          <source>Serialize this element to a <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</source>
          <target state="translated">Serialisiert dieses Element in einem <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.IO.TextWriter)">
          <source>The serialized XML will be indented.</source>
          <target state="translated">Das serialisierte XML wird mit Einzug dargestellt werden.</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.IO.TextWriter)">
          <source>All insignificant white space will be removed, and additional white space will be added so that the XML will be properly indented.</source>
          <target state="translated">Gesamte nicht signifikante Leerraum wird entfernt, und zusätzlicher Leerraum wird hinzugefügt, damit das XML ordnungsgemäß eingezogen werden.</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.IO.TextWriter)">
          <source>The behavior of this method is that white space will not be preserved.</source>
          <target state="translated">Das Verhalten dieser Methode ist, dass Leerraum nicht beibehalten wird.</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.IO.TextWriter)">
          <source>If you want to control white space, use the overload of <ph id="ph1">&lt;xref:System.Xml.Linq.XElement.Save%2A&gt;</ph> that allows you to specify <ph id="ph2">&lt;xref:System.Xml.Linq.SaveOptions&gt;</ph> as a parameter.</source>
          <target state="translated">Wenn Sie Leerraum steuern möchten, verwenden Sie die Überladung der <ph id="ph1">&lt;xref:System.Xml.Linq.XElement.Save%2A&gt;</ph> ermöglicht Ihnen die Angabe <ph id="ph2">&lt;xref:System.Xml.Linq.SaveOptions&gt;</ph> als Parameter.</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.IO.TextWriter)">
          <source>For more information, see <bpt id="p1">[</bpt>Preserving White Space while Loading or Parsing XML<ept id="p1">](http://msdn.microsoft.com/library/093a7169-a04e-4638-b08c-d1cb98aa650d)</ept> and <bpt id="p2">[</bpt>Preserving White Space While Serializing<ept id="p2">](http://msdn.microsoft.com/library/fb146217-0a49-4efc-ac84-7265b91d3939)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>bleiben Leerraum beim Laden oder Analysieren der XML-<ept id="p1">](http://msdn.microsoft.com/library/093a7169-a04e-4638-b08c-d1cb98aa650d)</ept> und <bpt id="p2">[</bpt>bleiben Leerzeichen beim Serialisieren<ept id="p2">](http://msdn.microsoft.com/library/fb146217-0a49-4efc-ac84-7265b91d3939)</ept>.</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.IO.TextWriter)">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph>, saves the document to a <ph id="ph2">&lt;xref:System.IO.StringWriter&gt;</ph>, and then prints the string to the console.</source>
          <target state="translated">Das folgende Beispiel erstellt ein <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph>, speichert das Dokument an eine <ph id="ph2">&lt;xref:System.IO.StringWriter&gt;</ph>, und klicken Sie dann die Zeichenfolge in der Konsole ausgegeben.</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.IO.TextWriter)">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Save(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the name of the file.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>, der den Namen der Datei enthält.</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Save(System.String)">
          <source>Serialize this element to a file.</source>
          <target state="translated">Serialisiert dieses Element in eine Datei.</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.String)">
          <source>The serialized XML will be indented.</source>
          <target state="translated">Das serialisierte XML wird mit Einzug dargestellt werden.</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.String)">
          <source>All insignificant white space will be removed, and additional white space will be added so that the XML will be properly indented.</source>
          <target state="translated">Gesamte nicht signifikante Leerraum wird entfernt, und zusätzlicher Leerraum wird hinzugefügt, damit das XML ordnungsgemäß eingezogen werden.</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.String)">
          <source>The behavior of this method is that insignificant white space nodes in the XML tree will not be preserved.</source>
          <target state="translated">Das Verhalten dieser Methode wird nicht signifikanter Leerraum, die Knoten in der XML-Struktur nicht beibehalten werden sollen.</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.String)">
          <source>If you want to control white space, use the overload of <ph id="ph1">&lt;xref:System.Xml.Linq.XElement.Save%2A&gt;</ph> that allows you to specify <ph id="ph2">&lt;xref:System.Xml.Linq.SaveOptions&gt;</ph> as a parameter.</source>
          <target state="translated">Wenn Sie Leerraum steuern möchten, verwenden Sie die Überladung der <ph id="ph1">&lt;xref:System.Xml.Linq.XElement.Save%2A&gt;</ph> ermöglicht Ihnen die Angabe <ph id="ph2">&lt;xref:System.Xml.Linq.SaveOptions&gt;</ph> als Parameter.</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.String)">
          <source>For more information, see <bpt id="p1">[</bpt>Preserving White Space while Loading or Parsing XML<ept id="p1">](http://msdn.microsoft.com/library/093a7169-a04e-4638-b08c-d1cb98aa650d)</ept> and <bpt id="p2">[</bpt>Preserving White Space While Serializing<ept id="p2">](http://msdn.microsoft.com/library/fb146217-0a49-4efc-ac84-7265b91d3939)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>bleiben Leerraum beim Laden oder Analysieren der XML-<ept id="p1">](http://msdn.microsoft.com/library/093a7169-a04e-4638-b08c-d1cb98aa650d)</ept> und <bpt id="p2">[</bpt>bleiben Leerzeichen beim Serialisieren<ept id="p2">](http://msdn.microsoft.com/library/fb146217-0a49-4efc-ac84-7265b91d3939)</ept>.</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.String)">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph>, saves the document to a file, and then prints the file to the console.</source>
          <target state="translated">Das folgende Beispiel erstellt eine <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph>, speichert das Dokument in einer Datei und gibt dann die Datei in die Konsole.</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.String)">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Save(System.Xml.XmlWriter)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> that the <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> will be written to.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>, in den das <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> geschrieben wird.</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Save(System.Xml.XmlWriter)">
          <source>Serialize this element to an <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated">Serialisiert dieses Element in einem <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.Xml.XmlWriter)">
          <source>The following example shows how to save an <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> to an <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>.</source>
          <target state="translated">Das folgende Beispiel zeigt die Vorgehensweise beim Speichern eines <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> in einem <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.Xml.XmlWriter)">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)">
          <source>The stream to output this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to.</source>
          <target state="translated">Der Stream, in den dieses <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> ausgegeben werden soll.</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.Linq.SaveOptions" /&gt;</ph> object that specifies formatting behavior.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xml.Linq.SaveOptions" /&gt;</ph>-Objekt, das das Formatierungsverhalten angibt.</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)">
          <source>Outputs this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to the specified <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, optionally specifying formatting behavior.</source>
          <target state="translated">Gibt dieses <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> zum angegebenen <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph> aus und gibt Formatierungsverhalten optional an.</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)">
          <source>By default the <ph id="ph1">`options`</ph> are set to <ph id="ph2">&lt;xref:System.Xml.Linq.SaveOptions.None&gt;</ph>.</source>
          <target state="translated">Standardmäßig die <ph id="ph1">`options`</ph> festgelegt <ph id="ph2">&lt;xref:System.Xml.Linq.SaveOptions.None&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)">
          <source>This option will remove all extraneous insignificant white space, and add appropriate insignificant white space so that the XML is properly indented.</source>
          <target state="translated">Diese Option entfernen alle überflüssigen nicht signifikanter Leerraum und fügen entsprechenden nicht signifikanten Leerraum, sodass XML ordnungsgemäß eingezogen ist.</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)">
          <source>If you want to save unindented XML, specify the <ph id="ph1">&lt;xref:System.Xml.Linq.SaveOptions.DisableFormatting&gt;</ph> flag for <ph id="ph2">`options`</ph>.</source>
          <target state="translated">Wenn Sie XML ohne Einzug speichern möchten, geben Sie die <ph id="ph1">&lt;xref:System.Xml.Linq.SaveOptions.DisableFormatting&gt;</ph> mit einem flag für <ph id="ph2">`options`</ph>.</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)">
          <source>This will cause the writer to write all white spaces exactly as represented in the XML tree.</source>
          <target state="translated">Dadurch wird den Writer, Schreiben alle Leerzeichen genau wie in der XML-Struktur dargestellt.</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)">
          <source>Use <ph id="ph1">&lt;xref:System.Xml.Linq.SaveOptions.OmitDuplicateNamespaces&gt;</ph> option if you want to remove duplicate namespace declarations.</source>
          <target state="translated">Verwendung <ph id="ph1">&lt;xref:System.Xml.Linq.SaveOptions.OmitDuplicateNamespaces&gt;</ph> option, wenn doppelte Namespacedeklarationen entfernt werden sollen.</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> to output the XML to.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>, an den das XML ausgegeben werden soll.</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.Linq.SaveOptions" /&gt;</ph> that specifies formatting behavior.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xml.Linq.SaveOptions" /&gt;</ph>, das Formatierungsverhalten angibt.</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
          <source>Serialize this element to a <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>, optionally disabling formatting.</source>
          <target state="translated">Serialisiert dieses Element in einen <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>, wobei optional die Formatierung deaktiviert wird.</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
          <source>If you want to save unindented XML, specify the <ph id="ph1">&lt;xref:System.Xml.Linq.SaveOptions.DisableFormatting&gt;</ph> flag for <ph id="ph2">`options`</ph>.</source>
          <target state="translated">Wenn Sie XML ohne Einzug speichern möchten, geben Sie die <ph id="ph1">&lt;xref:System.Xml.Linq.SaveOptions.DisableFormatting&gt;</ph> mit einem flag für <ph id="ph2">`options`</ph>.</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
          <source>This will cause the writer to write all white space exactly as represented in the XML tree.</source>
          <target state="translated">Dadurch wird den Writer, Schreiben alle Leerzeichen genau wie in der XML-Struktur dargestellt.</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
          <source>If you want to save indented XML, do not specify the <ph id="ph1">&lt;xref:System.Xml.Linq.SaveOptions.DisableFormatting&gt;</ph> flag for <ph id="ph2">`options`</ph>.</source>
          <target state="translated">Wenn Sie die eingezogene XML speichern möchten, geben Sie keine der <ph id="ph1">&lt;xref:System.Xml.Linq.SaveOptions.DisableFormatting&gt;</ph> mit einem flag für <ph id="ph2">`options`</ph>.</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
          <source>This will remove all extraneous insignificant white space, and add appropriate insignificant white space so that the XML is properly indented.</source>
          <target state="translated">Hiermit entfernen Sie alle überflüssigen nicht signifikanter Leerraum und fügen entsprechenden nicht signifikanten Leerraum, sodass XML ordnungsgemäß eingezogen ist.</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
          <source>This is the default behavior, and the behavior of the overloads of the <ph id="ph1">&lt;xref:System.Xml.Linq.XElement.Save%2A&gt;</ph> methods that do not take <ph id="ph2">`options`</ph> as a parameter.</source>
          <target state="translated">Dies ist das Standardverhalten und das Verhalten der Überladungen der der <ph id="ph1">&lt;xref:System.Xml.Linq.XElement.Save%2A&gt;</ph> Methoden, die keinen akzeptieren <ph id="ph2">`options`</ph> als Parameter.</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
          <source>For more information, see <bpt id="p1">[</bpt>Preserving White Space while Loading or Parsing XML<ept id="p1">](http://msdn.microsoft.com/library/093a7169-a04e-4638-b08c-d1cb98aa650d)</ept> and <bpt id="p2">[</bpt>Preserving White Space While Serializing<ept id="p2">](http://msdn.microsoft.com/library/fb146217-0a49-4efc-ac84-7265b91d3939)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>bleiben Leerraum beim Laden oder Analysieren der XML-<ept id="p1">](http://msdn.microsoft.com/library/093a7169-a04e-4638-b08c-d1cb98aa650d)</ept> und <bpt id="p2">[</bpt>bleiben Leerzeichen beim Serialisieren<ept id="p2">](http://msdn.microsoft.com/library/fb146217-0a49-4efc-ac84-7265b91d3939)</ept>.</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
          <source>The following example shows two uses of this method.</source>
          <target state="translated">Das folgende Beispiel zeigt zwei Verwendungen von dieser Methode.</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
          <source>The first use preserves white space.</source>
          <target state="translated">Die erste Verwendung wird Leerraum beibehalten.</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
          <source>The second serializes the <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> with formatting.</source>
          <target state="translated">Die zweite serialisiert die <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> mit Formatierung.</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
          <source>Because the document has no white space in it as constructed, preserving white space outputs the XML without any indenting.</source>
          <target state="translated">Da das Dokument keine Leerzeichen enthält, wie erstellt, gibt das Beibehalten von Leerzeichen XML ohne Einzug.</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Save(System.String,System.Xml.Linq.SaveOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the name of the file.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>, der den Namen der Datei enthält.</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Save(System.String,System.Xml.Linq.SaveOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.Linq.SaveOptions" /&gt;</ph> that specifies formatting behavior.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xml.Linq.SaveOptions" /&gt;</ph>, das Formatierungsverhalten angibt.</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.Save(System.String,System.Xml.Linq.SaveOptions)">
          <source>Serialize this element to a file, optionally disabling formatting.</source>
          <target state="translated">Serialisiert dieses Element in eine Datei, wobei optional die Formatierung deaktiviert wird.</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.String,System.Xml.Linq.SaveOptions)">
          <source>If you want to save unindented XML, specify the <ph id="ph1">&lt;xref:System.Xml.Linq.SaveOptions.DisableFormatting&gt;</ph> flag for <ph id="ph2">`options`</ph>.</source>
          <target state="translated">Wenn Sie XML ohne Einzug speichern möchten, geben Sie die <ph id="ph1">&lt;xref:System.Xml.Linq.SaveOptions.DisableFormatting&gt;</ph> mit einem flag für <ph id="ph2">`options`</ph>.</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.String,System.Xml.Linq.SaveOptions)">
          <source>This will cause the writer to write all white space exactly as represented in the XML tree.</source>
          <target state="translated">Dadurch wird den Writer, Schreiben alle Leerzeichen genau wie in der XML-Struktur dargestellt.</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.String,System.Xml.Linq.SaveOptions)">
          <source>If you want to save indented XML, do not specify the <ph id="ph1">&lt;xref:System.Xml.Linq.SaveOptions.DisableFormatting&gt;</ph> flag for <ph id="ph2">`options`</ph>.</source>
          <target state="translated">Wenn Sie die eingezogene XML speichern möchten, geben Sie keine der <ph id="ph1">&lt;xref:System.Xml.Linq.SaveOptions.DisableFormatting&gt;</ph> mit einem flag für <ph id="ph2">`options`</ph>.</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.String,System.Xml.Linq.SaveOptions)">
          <source>This will remove all extraneous insignificant white space, and add appropriate insignificant white space so that the XML is properly indented.</source>
          <target state="translated">Hiermit entfernen Sie alle überflüssigen nicht signifikanter Leerraum und fügen entsprechenden nicht signifikanten Leerraum, sodass XML ordnungsgemäß eingezogen ist.</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.String,System.Xml.Linq.SaveOptions)">
          <source>This is the default behavior, and the behavior of the overloads of the <ph id="ph1">&lt;xref:System.Xml.Linq.XElement.Save%2A&gt;</ph> methods that do not take <ph id="ph2">`options`</ph> as a parameter.</source>
          <target state="translated">Dies ist das Standardverhalten und das Verhalten der Überladungen der der <ph id="ph1">&lt;xref:System.Xml.Linq.XElement.Save%2A&gt;</ph> Methoden, die keinen akzeptieren <ph id="ph2">`options`</ph> als Parameter.</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.String,System.Xml.Linq.SaveOptions)">
          <source>For more information, see <bpt id="p1">[</bpt>Preserving White Space while Loading or Parsing XML<ept id="p1">](http://msdn.microsoft.com/library/093a7169-a04e-4638-b08c-d1cb98aa650d)</ept> and <bpt id="p2">[</bpt>Preserving White Space While Serializing<ept id="p2">](http://msdn.microsoft.com/library/fb146217-0a49-4efc-ac84-7265b91d3939)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>bleiben Leerraum beim Laden oder Analysieren der XML-<ept id="p1">](http://msdn.microsoft.com/library/093a7169-a04e-4638-b08c-d1cb98aa650d)</ept> und <bpt id="p2">[</bpt>bleiben Leerzeichen beim Serialisieren<ept id="p2">](http://msdn.microsoft.com/library/fb146217-0a49-4efc-ac84-7265b91d3939)</ept>.</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.String,System.Xml.Linq.SaveOptions)">
          <source>The following example shows two uses of this method.</source>
          <target state="translated">Das folgende Beispiel zeigt zwei Verwendungen von dieser Methode.</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.String,System.Xml.Linq.SaveOptions)">
          <source>The first use preserves white space.</source>
          <target state="translated">Die erste Verwendung wird Leerraum beibehalten.</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.String,System.Xml.Linq.SaveOptions)">
          <source>The second one serializes the <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> with formatting.</source>
          <target state="translated">Serialisiert das zweite Argument der <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> mit Formatierung.</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.Save(System.String,System.Xml.Linq.SaveOptions)">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.SetAttributeValue(System.Xml.Linq.XName,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> that contains the name of the attribute to change.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph>, der den Namen des zu ändernden Attributs enthält.</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.SetAttributeValue(System.Xml.Linq.XName,System.Object)">
          <source>The value to assign to the attribute.</source>
          <target state="translated">Der Wert, der dem Attribut zugewiesen werden soll.</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.SetAttributeValue(System.Xml.Linq.XName,System.Object)">
          <source>The attribute is removed if the value is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das Attribut wird entfernt, wenn der Wert <ph id="ph1">&lt;see langword="null" /&gt;</ph> ist.</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.SetAttributeValue(System.Xml.Linq.XName,System.Object)">
          <source>Otherwise, the value is converted to its string representation and assigned to the <ph id="ph1">&lt;see cref="P:System.Xml.Linq.XAttribute.Value" /&gt;</ph> property of the attribute.</source>
          <target state="translated">Andernfalls wird der Wert in seine Zeichenfolgenentsprechung konvertiert und der <ph id="ph1">&lt;see cref="P:System.Xml.Linq.XAttribute.Value" /&gt;</ph>-Eigenschaft des Attributs zugewiesen.</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.SetAttributeValue(System.Xml.Linq.XName,System.Object)">
          <source>Sets the value of an attribute, adds an attribute, or removes an attribute.</source>
          <target state="translated">Legt den Wert eines Attributs fest, fügt ein Attribut hinzu oder entfernt ein Attribut.</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.SetAttributeValue(System.Xml.Linq.XName,System.Object)">
          <source>This method is designed to make it easy to maintain a list of name/value pairs as a set of attributes.</source>
          <target state="translated">Diese Methode dient zum Verwalten einer Liste von Name/Wert-Paaren als einen Satz von Attributen zu erleichtern.</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.SetAttributeValue(System.Xml.Linq.XName,System.Object)">
          <source>When maintaining the list, you need to add pairs, modify pairs, or delete pairs.</source>
          <target state="translated">Beim Verwalten der Liste müssen Sie Paare hinzufügen, ändern oder Löschen von Paare.</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.SetAttributeValue(System.Xml.Linq.XName,System.Object)">
          <source>If you call this method passing a name that does not exist as an attribute, this method creates an attribute for you.</source>
          <target state="translated">Beim Aufrufen dieser Methode übergeben einen Namen, der nicht vorhanden ist, als ein Attribut, erstellt diese Methode ein Attribut für Sie.</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.SetAttributeValue(System.Xml.Linq.XName,System.Object)">
          <source>If you call this method passing the name of an existing attribute, this method modifies the value of the attribute to the value that you specify.</source>
          <target state="translated">Wenn Sie diese Methode und übergeben den Namen eines vorhandenen Attributs aufrufen, wird diese Methode den Wert des Attributs auf den Wert an dem von Ihnen geändert.</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.SetAttributeValue(System.Xml.Linq.XName,System.Object)">
          <source>If you pass <ph id="ph1">`null`</ph> for <ph id="ph2">`value`</ph>, this method removes the attribute.</source>
          <target state="translated">Wenn Sie übergeben <ph id="ph1">`null`</ph> für <ph id="ph2">`value`</ph>, diese Methode entfernt das Attribut.</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.SetAttributeValue(System.Xml.Linq.XName,System.Object)">
          <source>This method will raise the <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> and the <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> events.</source>
          <target state="translated">Diese Methode löst die <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> und <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> Ereignisse.</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.SetAttributeValue(System.Xml.Linq.XName,System.Object)">
          <source>The value is assigned to the attribute with the specified name.</source>
          <target state="translated">Das Attribut mit dem angegebenen Namen wird der Wert zugewiesen.</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.SetAttributeValue(System.Xml.Linq.XName,System.Object)">
          <source>If no attribute with the specified name exists, a new attribute is added.</source>
          <target state="translated">Wenn kein Attribut mit dem angegebenen Namen vorhanden ist, wird ein neues Attribut hinzugefügt.</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.SetAttributeValue(System.Xml.Linq.XName,System.Object)">
          <source>If the value is <ph id="ph1">`null`</ph>, the attribute with the specified name, if any, is deleted.</source>
          <target state="translated">Wenn der Wert <ph id="ph1">`null`</ph>, das Attribut mit dem angegebenen Namen, sofern vorhanden, wird gelöscht.</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.SetAttributeValue(System.Xml.Linq.XName,System.Object)">
          <source>For more information, see <bpt id="p1">[</bpt>Maintaining Name/Value Pairs<ept id="p1">](http://msdn.microsoft.com/library/fe9798bf-b5e2-4a3c-a86c-7f8638912691)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>Verwalten von Name/Wert-Paare<ept id="p1">](http://msdn.microsoft.com/library/fe9798bf-b5e2-4a3c-a86c-7f8638912691)</ept>.</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.SetAttributeValue(System.Xml.Linq.XName,System.Object)">
          <source>The following example creates an element with an attribute.</source>
          <target state="translated">Im folgende Beispiel wird ein Element mit einem Attribut erstellt.</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.SetAttributeValue(System.Xml.Linq.XName,System.Object)">
          <source>It then uses this method to replace the content of the attribute.</source>
          <target state="translated">Dann wird diese Methode verwendet, um den Inhalt des Attributs zu ersetzen.</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.SetAttributeValue(System.Xml.Linq.XName,System.Object)">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.SetAttributeValue(System.Xml.Linq.XName,System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is an instance of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</source>
          <target state="translated">Der <ph id="ph1">&lt;paramref name="value" /&gt;</ph> ist eine Instanz von <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> that contains the name of the child element to change.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph>, der den Namen des untergeordneten Elements enthält, das geändert werden soll.</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName,System.Object)">
          <source>The value to assign to the child element.</source>
          <target state="translated">Der dem untergeordneten Element zuzuweisende Wert.</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName,System.Object)">
          <source>The child element is removed if the value is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Das untergeordnete Element wird entfernt, wenn der Wert <ph id="ph1">&lt;see langword="null" /&gt;</ph>ist.</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName,System.Object)">
          <source>Otherwise, the value is converted to its string representation and assigned to the <ph id="ph1">&lt;see cref="P:System.Xml.Linq.XElement.Value" /&gt;</ph> property of the child element.</source>
          <target state="translated">Andernfalls wird der Wert in seine Zeichenfolgenentsprechung konvertiert und der <ph id="ph1">&lt;see cref="P:System.Xml.Linq.XElement.Value" /&gt;</ph>-Eigenschaft des untergeordneten Elements zugewiesen.</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName,System.Object)">
          <source>Sets the value of a child element, adds a child element, or removes a child element.</source>
          <target state="translated">Legt den Wert eines untergeordneten Elements fest, fügt ein untergeordnetes Element hinzu oder entfernt ein untergeordnetes Element.</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName,System.Object)">
          <source>This method is designed to make it easy to maintain a list of name/value pairs as a set of children elements.</source>
          <target state="translated">Diese Methode dient zum Verwalten einer Liste von Name/Wert-Paaren als einen Satz von untergeordneten Elementen zu erleichtern.</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName,System.Object)">
          <source>When maintaining the list, you need to add pairs, modify pairs, or delete pairs.</source>
          <target state="translated">Beim Verwalten der Liste müssen Sie Paare hinzufügen, ändern oder Löschen von Paare.</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName,System.Object)">
          <source>If you call this method passing a name that does not exist as a child element, this method creates a child element for you.</source>
          <target state="translated">Beim Aufrufen dieser Methode übergeben als untergeordnetes Element ein Name, der nicht vorhanden ist, erstellt diese Methode ein untergeordnetes Element für Sie.</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName,System.Object)">
          <source>If you call this method passing the name of an existing child element, this method modifies the value of the child element to the value that you specify.</source>
          <target state="translated">Wenn Sie diese Methode und übergeben den Namen eines vorhandenen untergeordneten Elements aufrufen, wird diese Methode den Wert des untergeordneten Elements auf den Wert an dem von Ihnen geändert.</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName,System.Object)">
          <source>If you pass <ph id="ph1">`null`</ph> for <ph id="ph2">`value`</ph>, this method removes the child element.</source>
          <target state="translated">Wenn Sie übergeben <ph id="ph1">`null`</ph> für <ph id="ph2">`value`</ph>, diese Methode entfernt das untergeordnete Element.</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName,System.Object)">
          <source>This method will raise events.</source>
          <target state="translated">Diese Methode löst Ereignisse.</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName,System.Object)">
          <source>The value is assigned to the first child element with the specified name.</source>
          <target state="translated">Der Wert wird auf das erste untergeordnete Element mit dem angegebenen Namen zugewiesen.</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName,System.Object)">
          <source>If no child element with the specified name exists, a new child element is added.</source>
          <target state="translated">Wenn kein untergeordnetes Element mit dem angegebenen Namen vorhanden ist, wird ein neues untergeordnetes Element hinzugefügt.</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName,System.Object)">
          <source>If the value is null, the first child element with the specified name, if any, is deleted.</source>
          <target state="translated">Wenn der Wert null ist, wird das erste untergeordnete Element mit dem angegebenen Namen, sofern vorhanden, gelöscht.</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName,System.Object)">
          <source>This method does not add child nodes or attributes to the specified child element.</source>
          <target state="translated">Diese Methode fügt keine untergeordneten Knoten bzw. Attribute das angegebene untergeordnete Element hinzu.</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName,System.Object)">
          <source>This method throws an exception if any object that derives from <ph id="ph1">&lt;xref:System.Xml.Linq.XObject&gt;</ph> is passed as <ph id="ph2">`value`</ph>.</source>
          <target state="translated">Diese Methode löst eine Ausnahme aus, wenn jedes Objekt, das von abgeleitet <ph id="ph1">&lt;xref:System.Xml.Linq.XObject&gt;</ph> übergeben wird, als <ph id="ph2">`value`</ph>.</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName,System.Object)">
          <source>For more information, see <bpt id="p1">[</bpt>Maintaining Name/Value Pairs<ept id="p1">](http://msdn.microsoft.com/library/fe9798bf-b5e2-4a3c-a86c-7f8638912691)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>Verwalten von Name/Wert-Paare<ept id="p1">](http://msdn.microsoft.com/library/fe9798bf-b5e2-4a3c-a86c-7f8638912691)</ept>.</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName,System.Object)">
          <source>The following example creates an element with a child element.</source>
          <target state="translated">Das folgende Beispiel erstellt ein Element mit einem untergeordneten Element.</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName,System.Object)">
          <source>It then uses this method to set the value of the child element.</source>
          <target state="translated">Dann wird diese Methode zum Festlegen des Werts des untergeordneten Elements verwendet.</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName,System.Object)">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName,System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is an instance of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</source>
          <target state="translated">Der <ph id="ph1">&lt;paramref name="value" /&gt;</ph> ist eine Instanz von <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.SetValue(System.Object)">
          <source>The value to assign to this element.</source>
          <target state="translated">Der diesem Element zuzuweisende Wert.</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.SetValue(System.Object)">
          <source>The value is converted to its string representation and assigned to the <ph id="ph1">&lt;see cref="P:System.Xml.Linq.XElement.Value" /&gt;</ph> property.</source>
          <target state="translated">Der Wert wird in seine Zeichenfolgenentsprechung konvertiert und der <ph id="ph1">&lt;see cref="P:System.Xml.Linq.XElement.Value" /&gt;</ph>-Eigenschaft zugewiesen.</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.SetValue(System.Object)">
          <source>Sets the value of this element.</source>
          <target state="translated">Legt den Wert dieses Elements fest.</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.SetValue(System.Object)">
          <source>This method will raise the <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> and the <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> events.</source>
          <target state="translated">Diese Methode löst die <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> und <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> Ereignisse.</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.SetValue(System.Object)">
          <source>It is invalid to pass an instance of a class that derives from <ph id="ph1">&lt;xref:System.Xml.Linq.XObject&gt;</ph>, such as <ph id="ph2">&lt;xref:System.Xml.Linq.XElement&gt;</ph>.</source>
          <target state="translated">Es ist unzulässig, eine Instanz einer Klasse zu übergeben, die abgeleitet <ph id="ph1">&lt;xref:System.Xml.Linq.XObject&gt;</ph>, wie z. B. <ph id="ph2">&lt;xref:System.Xml.Linq.XElement&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.SetValue(System.Object)">
          <source>The following example creates an element that contains a child element.</source>
          <target state="translated">Das folgende Beispiel erstellt ein Element, das ein untergeordnetes Element enthält.</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.SetValue(System.Object)">
          <source>It then sets the value of the element using this method.</source>
          <target state="translated">Klicken Sie dann festgelegt den Wert des Elements mit dieser Methode.</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.SetValue(System.Object)">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.SetValue(System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.SetValue(System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is an <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</source>
          <target state="translated">Der <ph id="ph1">&lt;paramref name="value" /&gt;</ph> ist ein <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.System#Xml#Serialization#IXmlSerializable#GetSchema">
          <source>Gets an XML schema definition that describes the XML representation of this object.</source>
          <target state="translated">Ruft eine XML-Schemadefinition ab, die die XML-Darstellung dieses Objekts beschreibt.</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.System#Xml#Serialization#IXmlSerializable#GetSchema">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> that describes the XML representation of the object that is produced by the <ph id="ph2">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /&gt;</ph> method and consumed by the <ph id="ph3">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /&gt;</ph> method.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> zur Beschreibung der XML-Darstellung des Objekts, das von der <ph id="ph2">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /&gt;</ph>-Methode erstellt und von der <ph id="ph3">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /&gt;</ph>-Methode verwendet wird.</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.System#Xml#Serialization#IXmlSerializable#GetSchema">
          <source>This method is part of implementation of the <ph id="ph1">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph> interface.</source>
          <target state="translated">Diese Methode ist Teil der Implementierung der <ph id="ph1">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph> Schnittstelle.</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.System#Xml#Serialization#IXmlSerializable#GetSchema">
          <source>This method is used internally for serializing object graphs that contain LINQ to XML objects.</source>
          <target state="translated">Diese Methode wird intern verwendet, für die Serialisierung von Objektdiagrammen, die LINQ to XML-Objekte enthalten.</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.System#Xml#Serialization#IXmlSerializable#GetSchema">
          <source>For an example of serializing an object graph that contains LINQ to XML objects, see <bpt id="p1">[</bpt>Serializing Object Graphs that Contain XElement Objects<ept id="p1">](http://msdn.microsoft.com/library/443d7904-a6f0-450a-b1a4-5d7ed869d1d5)</ept>.</source>
          <target state="translated">Ein Beispiel für das Serialisieren eines Objektdiagramms, das LINQ to XML-Objekte enthält, finden Sie unter <bpt id="p1">[</bpt>Serializing Object Graphs, "XElement"-Objekte enthalten<ept id="p1">](http://msdn.microsoft.com/library/443d7904-a6f0-450a-b1a4-5d7ed869d1d5)</ept>.</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> from which the object is deserialized.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>, aus dem das Objekt deserialisiert wird.</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
          <source>Generates an object from its XML representation.</source>
          <target state="translated">Generiert ein Objekt aus seiner XML-Darstellung.</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
          <source>This method is part of implementation of the <ph id="ph1">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph> interface.</source>
          <target state="translated">Diese Methode ist Teil der Implementierung der <ph id="ph1">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph> Schnittstelle.</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
          <source>This method is used internally for serializing object graphs that contain LINQ to XML objects.</source>
          <target state="translated">Diese Methode wird intern verwendet, für die Serialisierung von Objektdiagrammen, die LINQ to XML-Objekte enthalten.</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
          <source>For an example of serializing an object graph that contains LINQ to XML objects, see <bpt id="p1">[</bpt>Serializing Object Graphs that Contain XElement Objects<ept id="p1">](http://msdn.microsoft.com/library/443d7904-a6f0-450a-b1a4-5d7ed869d1d5)</ept>.</source>
          <target state="translated">Ein Beispiel für das Serialisieren eines Objektdiagramms, das LINQ to XML-Objekte enthält, finden Sie unter <bpt id="p1">[</bpt>Serializing Object Graphs, "XElement"-Objekte enthalten<ept id="p1">](http://msdn.microsoft.com/library/443d7904-a6f0-450a-b1a4-5d7ed869d1d5)</ept>.</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> to which this object is serialized.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>, in den dieses Objekt serialisiert wird.</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
          <source>Converts an object into its XML representation.</source>
          <target state="translated">Konvertiert ein Objekt in seine XML-Darstellung.</target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
          <source>This method is used internally for marshaling object graphs that contain LINQ to XML objects.</source>
          <target state="translated">Diese Methode wird intern verwendet, für das Marshalling von Objektdiagrammen, die LINQ to XML-Objekte enthalten.</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
          <source>For an example of serializing an object graph that contains LINQ to XML objects, see <bpt id="p1">[</bpt>Serializing Object Graphs that Contain XElement Objects<ept id="p1">](http://msdn.microsoft.com/library/443d7904-a6f0-450a-b1a4-5d7ed869d1d5)</ept>.</source>
          <target state="translated">Ein Beispiel für das Serialisieren eines Objektdiagramms, das LINQ to XML-Objekte enthält, finden Sie unter <bpt id="p1">[</bpt>Serializing Object Graphs, "XElement"-Objekte enthalten<ept id="p1">](http://msdn.microsoft.com/library/443d7904-a6f0-450a-b1a4-5d7ed869d1d5)</ept>.</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XElement.Value">
          <source>Gets or sets the concatenated text contents of this element.</source>
          <target state="translated">Ruft den verketteten Textinhalt dieses Elements ab oder legt ihn fest.</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.Value">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains all of the text content of this element.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>, der den gesamten Textinhalt dieses Elements enthält.</target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.Value">
          <source>If there are multiple text nodes, they will be concatenated.</source>
          <target state="translated">Wenn mehrere Textknoten vorhanden sind, werden sie verkettet.</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.Value">
          <source>Using this property, you can get or set the value of an element.</source>
          <target state="translated">Diese Eigenschaft verwenden, können Sie abrufen oder festlegen den Wert eines Elements.</target>       </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.Value">
          <source>Setting this property will raise the <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> and the <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> events.</source>
          <target state="translated">Diese Eigenschaft löst Einstellung der <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> und die <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> Ereignisse.</target>       </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.Value">
          <source>If you want to get the value of an element but you are not sure that it exists, it is more convenient to use the explicit conversion operators, and assign the element to a nullable type such as <ph id="ph1">`string`</ph> or <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> of <ph id="ph3">&lt;xref:System.Int32&gt;</ph>.</source>
          <target state="translated">Wenn Sie den Wert eines Elements abrufen möchten, aber Sie nicht sicher sind, dass sie vorhanden ist, ist es einfacher, die explizite Konvertierungsoperatoren, und weisen das Element dem nullable-Typ wie z. B. <ph id="ph1">`string`</ph> oder <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> von <ph id="ph3">&lt;xref:System.Int32&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.Value">
          <source>If the element does not exist, the nullable type is set to <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Wenn das Element nicht vorhanden ist, auf die nullable-Typ festgelegt <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.Value">
          <source>By contrast, if you want to use this property, you must make sure that the <ph id="ph1">&lt;xref:System.Xml.Linq.XContainer.Element%2A&gt;</ph> method does not return <ph id="ph2">`null`</ph> before you access this property.</source>
          <target state="translated">Im Gegensatz dazu, wenn Sie diese Eigenschaft verwenden möchten, Sie müssen sicherstellen, dass die <ph id="ph1">&lt;xref:System.Xml.Linq.XContainer.Element%2A&gt;</ph> Methode gibt keinen zurück <ph id="ph2">`null`</ph> vor dem Zugriff auf diese Eigenschaft.</target>       </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.Value">
          <source>The following example uses this property to retrieve the text of an element with mixed content.</source>
          <target state="translated">Im folgenden Beispiel wird diese Eigenschaft zum Abrufen des Texts eines Elements mit gemischtem Inhalt.</target>       </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XElement.Value">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.WriteTo(System.Xml.XmlWriter)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> into which this method will write.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>, in den diese Methode schreibt.</target>       </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XElement.WriteTo(System.Xml.XmlWriter)">
          <source>Write this element to an <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated">Schreibt dieses Element in einen <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.WriteTo(System.Xml.XmlWriter)">
          <source>The following example shows how to write an <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> to an <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>.</source>
          <target state="translated">Das folgende Beispiel zeigt, wie Sie schreiben eine <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> auf eine <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.WriteTo(System.Xml.XmlWriter)">
          <source>Note that the example did not write an XML declaration.</source>
          <target state="translated">Beachten Sie, dass im Beispiel wird eine XML-Deklaration nicht geschrieben haben.</target>       </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XElement.WriteTo(System.Xml.XmlWriter)">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>