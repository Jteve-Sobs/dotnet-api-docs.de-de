<Type Name="XText" FullName="System.Xml.Linq.XText">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="77d57ca54e835df4736aef64a20960eedc7b778e" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36443262" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XText : System.Xml.Linq.XNode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XText extends System.Xml.Linq.XNode" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Linq.XText" />
  <TypeSignature Language="VB.NET" Value="Public Class XText&#xA;Inherits XNode" />
  <TypeSignature Language="C++ CLI" Value="public ref class XText : System::Xml::Linq::XNode" />
  <TypeSignature Language="F#" Value="type XText = class&#xA;    inherit XNode" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XDocument</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Linq</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.Linq.XNode</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="c4f1c-101">Stellt einen Textknoten dar.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c4f1c-101">Represents a text node.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4f1c-102">XML-Elemente können Textinhalt nicht enthalten.</span><span class="sxs-lookup"><span data-stu-id="c4f1c-102">XML elements can contain text content.</span></span> <span data-ttu-id="c4f1c-103">Der Inhalt ist manchmal einfach (das Element enthält nur-Text-Inhalt), und in einigen Fällen wird der Inhalt gemischt (der Inhalt des Elements enthält Text und andere Elemente).</span><span class="sxs-lookup"><span data-stu-id="c4f1c-103">Sometimes the content is simple (the element only contains text content), and sometimes the content is mixed (the contents of the element contains both text and other elements).</span></span> <span data-ttu-id="c4f1c-104">In beiden Fällen wird jeder Ausschnitt von Text als dargestellt ein <xref:System.Xml.Linq.XText> Knoten.</span><span class="sxs-lookup"><span data-stu-id="c4f1c-104">In either case, each chunk of text is represented as an <xref:System.Xml.Linq.XText> node.</span></span>  
  
 [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]<span data-ttu-id="c4f1c-105"> Entwickler müssen häufig zum Schreiben von Code zum Arbeiten mit beliebigen [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] Strukturen, die sie nicht erstellt haben.</span><span class="sxs-lookup"><span data-stu-id="c4f1c-105"> developers will often have to write code to work with arbitrary [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] trees that they did not create.</span></span> <span data-ttu-id="c4f1c-106">Wenn Sie Code schreiben, der mit funktionieren [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] Strukturen, die Sie keine Kontrolle über erstellt haben, sollten Sie Bedenken der Steuerung des Verhaltens von <xref:System.Xml.Linq.XText> Knoten.</span><span class="sxs-lookup"><span data-stu-id="c4f1c-106">If you are writing code that has to work with [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] trees that you have no control over creating, you should be aware of certain behaviors of <xref:System.Xml.Linq.XText> nodes.</span></span>  
  
 <span data-ttu-id="c4f1c-107">Wenn der Inhalt der XML-Strukturen auf Knotenebene verarbeitet werden, sollten Sie für mehrere vorbereitet <xref:System.Xml.Linq.XText> Knoten miteinander benachbart sind.</span><span class="sxs-lookup"><span data-stu-id="c4f1c-107">When processing the contents of an XML tree at the node level, you should be prepared for multiple <xref:System.Xml.Linq.XText> nodes to be adjacent to each other.</span></span> <span data-ttu-id="c4f1c-108">Darüber hinaus sollten Sie für vorbereitet werden <xref:System.Xml.Linq.XText> Knoten, die keinen Text enthalten.</span><span class="sxs-lookup"><span data-stu-id="c4f1c-108">Further, you should be prepared for <xref:System.Xml.Linq.XText> nodes that contain no text.</span></span> <span data-ttu-id="c4f1c-109">Es ist möglich durch [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] Methoden, um den Inhalt eines Textknotens zu löschen.</span><span class="sxs-lookup"><span data-stu-id="c4f1c-109">It is possible through [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] methods to remove the content of a text node.</span></span> <span data-ttu-id="c4f1c-110">Allerdings [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] den Knoten nicht automatisch gelöscht.</span><span class="sxs-lookup"><span data-stu-id="c4f1c-110">However, [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] does not automatically delete the node.</span></span> <span data-ttu-id="c4f1c-111">Der Knoten Identität besitzt und haben Anmerkungen, sodass [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] leere Knoten in der Struktur ermöglicht.</span><span class="sxs-lookup"><span data-stu-id="c4f1c-111">The node has identity, and might have annotations, so [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] allows for zero-length nodes in the tree.</span></span>  
  
 <span data-ttu-id="c4f1c-112">Weitere Informationen finden Sie unter [Programmieren mit Knoten](http://msdn.microsoft.com/library/18680d1c-6e7c-4645-8d53-27b5a96f2d3f).</span><span class="sxs-lookup"><span data-stu-id="c4f1c-112">For more information, see [Programming with Nodes](http://msdn.microsoft.com/library/18680d1c-6e7c-4645-8d53-27b5a96f2d3f).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c4f1c-113">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Linq.XText" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4f1c-113">Initializes a new instance of the <see cref="T:System.Xml.Linq.XText" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XText (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XText.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XText(System::String ^ value);" />
      <MemberSignature Language="F#" Value="new System.Xml.Linq.XText : string -&gt; System.Xml.Linq.XText" Usage="new System.Xml.Linq.XText value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c4f1c-114">Der <see cref="T:System.String" />, der den Wert des <see cref="T:System.Xml.Linq.XText" />-Knotens enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4f1c-114">The <see cref="T:System.String" /> that contains the value of the <see cref="T:System.Xml.Linq.XText" /> node.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4f1c-115">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Linq.XText" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4f1c-115">Initializes a new instance of the <see cref="T:System.Xml.Linq.XText" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4f1c-116">In der Regel nicht erstellt Textknoten mithilfe der <xref:System.Xml.Linq.XText> Konstruktoren.</span><span class="sxs-lookup"><span data-stu-id="c4f1c-116">You typically do not create text nodes by using the <xref:System.Xml.Linq.XText> constructors.</span></span> <span data-ttu-id="c4f1c-117">Wenn Sie Text-Inhalt übergeben, beim Erstellen einer <xref:System.Xml.Linq.XElement>, Textknoten werden automatisch erstellt.</span><span class="sxs-lookup"><span data-stu-id="c4f1c-117">When you pass text content when constructing an <xref:System.Xml.Linq.XElement>, text nodes are automatically created.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4f1c-118">Das folgende Beispiel erstellt ein Element, das einen Textknoten enthält.</span><span class="sxs-lookup"><span data-stu-id="c4f1c-118">The following example creates an element that contains a text node.</span></span>  
  
```csharp  
XElement root = new XElement("Root", "Some text");  
Console.WriteLine(root);  
```  
  
```vb  
Dim root As XElement = <Root>Some text</Root>  
Console.WriteLine(root)  
```  
  
 <span data-ttu-id="c4f1c-119">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="c4f1c-119">This example produces the following output:</span></span>  
  
```xml  
<Root>Some text</Root>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XText (System.Xml.Linq.XText other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.Linq.XText other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XText.#ctor(System.Xml.Linq.XText)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (other As XText)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XText(System::Xml::Linq::XText ^ other);" />
      <MemberSignature Language="F#" Value="new System.Xml.Linq.XText : System.Xml.Linq.XText -&gt; System.Xml.Linq.XText" Usage="new System.Xml.Linq.XText other" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="other" Type="System.Xml.Linq.XText" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="c4f1c-120">Der <see cref="T:System.Xml.Linq.XText" />-Knoten, aus dem kopiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4f1c-120">The <see cref="T:System.Xml.Linq.XText" /> node to copy from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4f1c-121">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Linq.XText" />-Klasse mit einem anderen <see cref="T:System.Xml.Linq.XText" /> -Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4f1c-121">Initializes a new instance of the <see cref="T:System.Xml.Linq.XText" /> class from another <see cref="T:System.Xml.Linq.XText" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4f1c-122">Dieser Konstruktor wird hauptsächlich intern verwendet, um eine tiefe Kopie einer XML-Struktur erstellen.</span><span class="sxs-lookup"><span data-stu-id="c4f1c-122">This constructor is primarily used internally to make a deep copy of an XML tree.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Linq.XText.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NodeType As XmlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNodeType NodeType { System::Xml::XmlNodeType get(); };" />
      <MemberSignature Language="F#" Value="member this.NodeType : System.Xml.XmlNodeType" Usage="System.Xml.Linq.XText.NodeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4f1c-123">Ruft den Knotentyp für diesen Knoten ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4f1c-123">Gets the node type for this node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4f1c-124">Der Knotentyp.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4f1c-124">The node type.</span>
          </span>
          <span data-ttu-id="c4f1c-125">Für <see cref="T:System.Xml.Linq.XText" />-Objekte ist dieser Wert <see cref="F:System.Xml.XmlNodeType.Text" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4f1c-125">For <see cref="T:System.Xml.Linq.XText" /> objects, this value is <see cref="F:System.Xml.XmlNodeType.Text" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4f1c-126">Da alle, die von Klassen abgeleitet werden <xref:System.Xml.Linq.XObject> enthalten eine <xref:System.Xml.Linq.XObject.NodeType%2A> -Eigenschaft, können Sie Code schreiben, der ausgeführt wird auf Sammlungen von konkrete Unterklasse von <xref:System.Xml.Linq.XObject>.</span><span class="sxs-lookup"><span data-stu-id="c4f1c-126">Because all classes that derive from <xref:System.Xml.Linq.XObject> contain a <xref:System.Xml.Linq.XObject.NodeType%2A> property, you can write code that operates on collections of concrete subclass of <xref:System.Xml.Linq.XObject>.</span></span> <span data-ttu-id="c4f1c-127">Code kann dann für jeden Knoten in der Auflistung den Knotentyp testen.</span><span class="sxs-lookup"><span data-stu-id="c4f1c-127">Your code can then test for the node type of each node in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4f1c-128">Das folgende Beispiel erstellt eine XML-Struktur, die eine Anzahl von Typen von Knoten enthält.</span><span class="sxs-lookup"><span data-stu-id="c4f1c-128">The following example creates an XML tree that contains a number of types of nodes.</span></span> <span data-ttu-id="c4f1c-129">Es durchläuft dann der Struktur der Ausgabe der einzelnen Knoten des Knotentyp.</span><span class="sxs-lookup"><span data-stu-id="c4f1c-129">It then iterates through the tree, outputting the node type of each node.</span></span>  
  
 <span data-ttu-id="c4f1c-130">Beachten Sie, dass `Child2` enthält ein <xref:System.Xml.Linq.XText> Knoten, von dem Zeichenfolgeninhalt implizit konvertiert.</span><span class="sxs-lookup"><span data-stu-id="c4f1c-130">Note that `Child2` contains an <xref:System.Xml.Linq.XText> node, implicitly converted from the string content.</span></span>  
  
```csharp  
// Note that XNode uses XmlNodeType, which is in the System.Xml namespace.  
XDocument xmlTree = new XDocument(  
    new XComment("a comment"),  
    new XProcessingInstruction("xml-stylesheet", "type=\"text/xsl\" href=\"hello.xsl\""),  
    new XElement("Root",  
        new XAttribute("Att", "attContent"),  
        new XElement("Child1",  
            new XCData("CDATA content")  
        ),  
        new XElement("Child2", "Text content")  
    )  
);  
  
foreach (XNode node in xmlTree.DescendantNodes())  
{  
    Console.WriteLine(node.NodeType);  
    if (node.NodeType == XmlNodeType.Element)  
    {  
        foreach (XAttribute att in ((XElement)node).Attributes())  
            Console.WriteLine(att.NodeType);  
    }  
}  
```  
  
```vb  
' Note that XNode uses XmlNodeType, which is in the System.Xml namespace.  
Dim xmlTree As XDocument = _  
    <?xml version='1.0'?>  
    <!-- a comment -->  
    <?xml-stylesheet type='text/xsl' href='hello.xsl'?>  
    <Root Att="attContent">  
        <Child1>  
            <![CDATA[CDATA content]]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Linq.XText.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : string with get, set" Usage="System.Xml.Linq.XText.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4f1c-131">Ruft den Wert des Knotens ab oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4f1c-131">Gets or sets the value of this node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4f1c-132">Ein <see cref="T:System.String" />, der den Wert dieses Knotens enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4f1c-132">A <see cref="T:System.String" /> that contains the value of this node.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4f1c-133">Diese Eigenschaft löst Einstellung der <xref:System.Xml.Linq.XObject.Changed> und die <xref:System.Xml.Linq.XObject.Changing> Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="c4f1c-133">Setting this property will raise the <xref:System.Xml.Linq.XObject.Changed> and the <xref:System.Xml.Linq.XObject.Changing> events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4f1c-134">Das folgende Beispiel zeigt das Abrufen und Festlegen dieser Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c4f1c-134">The following example shows getting and setting this property.</span></span>  
  
```csharp  
XElement root = new XElement("Root", "Some text");  
XText txtNode = root.Nodes().OfType<XText>().First();  
Console.WriteLine(txtNode.Value);  
txtNode.Value = "New text";  
Console.WriteLine(txtNode.Value);  
  
root.Value = "Newer text";  
txtNode = root.Nodes().OfType<XText>().First();  
Console.WriteLine(txtNode.Value);  
```  
  
```vb  
Dim root As XElement = <Root>Some text</Root>  
Dim txtNode As XText = root.Nodes().OfType(Of XText).First()  
Console.WriteLine(txtNode.Value)  
txtNode.Value = "New text"  
Console.WriteLine(txtNode.Value)  
  
root.Value = "Newer text"  
txtNode = root.Nodes().OfType(Of XText).First()  
Console.WriteLine(txtNode.Value)  
```  
  
 <span data-ttu-id="c4f1c-135">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="c4f1c-135">This example produces the following output:</span></span>  
  
```  
Some text  
New text  
Newer text  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public override void WriteTo (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteTo(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XText.WriteTo(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteTo (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteTo(System::Xml::XmlWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.WriteTo : System.Xml.XmlWriter -&gt; unit" Usage="xText.WriteTo writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="c4f1c-136">Ein <see cref="T:System.Xml.XmlWriter" />, in den diese Methode schreibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4f1c-136">An <see cref="T:System.Xml.XmlWriter" /> into which this method will write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4f1c-137">Schreibt diesen Knoten in einen <see cref="T:System.Xml.XmlWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4f1c-137">Writes this node to an <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4f1c-138">Diese Methode wird hauptsächlich intern verwendet, durch die Methoden, die eine XML-Struktur zum Schreiben einer <xref:System.Xml.XmlWriter>.</span><span class="sxs-lookup"><span data-stu-id="c4f1c-138">This method is primarily used internally by the methods that write an XML tree to an <xref:System.Xml.XmlWriter>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteToAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteToAsync (System.Xml.XmlWriter writer, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteToAsync(class System.Xml.XmlWriter writer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XText.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteToAsync(System::Xml::XmlWriter ^ writer, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.WriteToAsync : System.Xml.XmlWriter * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="xText.WriteToAsync (writer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="writer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>