<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XText.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5245a09a0817a51dfb4d1be16c89c4bc0aa549cf5.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">245a09a0817a51dfb4d1be16c89c4bc0aa549cf5</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XText">
          <source>Represents a text node.</source>
          <target state="translated">Stellt einen Textknoten dar.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XText">
          <source>XML elements can contain text content.</source>
          <target state="translated">XML-Elemente können Textinhalt nicht enthalten.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XText">
          <source>Sometimes the content is simple (the element only contains text content), and sometimes the content is mixed (the contents of the element contains both text and other elements).</source>
          <target state="translated">Der Inhalt ist manchmal einfach (das Element enthält nur-Text-Inhalt), und in einigen Fällen wird der Inhalt gemischt (der Inhalt des Elements enthält Text und andere Elemente).</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XText">
          <source>In either case, each chunk of text is represented as an <ph id="ph1">&lt;xref:System.Xml.Linq.XText&gt;</ph> node.</source>
          <target state="translated">In beiden Fällen wird jeder Ausschnitt von Text als dargestellt ein <ph id="ph1">&lt;xref:System.Xml.Linq.XText&gt;</ph> Knoten.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XText">
          <source><ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> developers will often have to write code to work with arbitrary <ph id="ph2">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> trees that they did not create.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> Entwickler müssen häufig zum Schreiben von Code zum Arbeiten mit beliebigen <ph id="ph2">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> Strukturen, die sie nicht erstellt haben.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XText">
          <source>If you are writing code that has to work with <ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> trees that you have no control over creating, you should be aware of certain behaviors of <ph id="ph2">&lt;xref:System.Xml.Linq.XText&gt;</ph> nodes.</source>
          <target state="translated">Wenn Sie Code schreiben, der mit funktionieren <ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> Strukturen, die Sie keine Kontrolle über erstellt haben, sollten Sie Bedenken der Steuerung des Verhaltens von <ph id="ph2">&lt;xref:System.Xml.Linq.XText&gt;</ph> Knoten.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XText">
          <source>When processing the contents of an XML tree at the node level, you should be prepared for multiple <ph id="ph1">&lt;xref:System.Xml.Linq.XText&gt;</ph> nodes to be adjacent to each other.</source>
          <target state="translated">Wenn der Inhalt der XML-Strukturen auf Knotenebene verarbeitet werden, sollten Sie für mehrere vorbereitet <ph id="ph1">&lt;xref:System.Xml.Linq.XText&gt;</ph> Knoten miteinander benachbart sind.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XText">
          <source>Further, you should be prepared for <ph id="ph1">&lt;xref:System.Xml.Linq.XText&gt;</ph> nodes that contain no text.</source>
          <target state="translated">Darüber hinaus sollten Sie für vorbereitet werden <ph id="ph1">&lt;xref:System.Xml.Linq.XText&gt;</ph> Knoten, die keinen Text enthalten.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XText">
          <source>It is possible through <ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> methods to remove the content of a text node.</source>
          <target state="translated">Es ist möglich durch <ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> Methoden, um den Inhalt eines Textknotens zu löschen.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XText">
          <source>However, <ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> does not automatically delete the node.</source>
          <target state="translated">Allerdings <ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> den Knoten nicht automatisch gelöscht.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XText">
          <source>The node has identity, and might have annotations, so <ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> allows for zero-length nodes in the tree.</source>
          <target state="translated">Der Knoten Identität besitzt und haben Anmerkungen, sodass <ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> leere Knoten in der Struktur ermöglicht.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XText">
          <source>For more information, see <bpt id="p1">[</bpt>Programming with Nodes<ept id="p1">](http://msdn.microsoft.com/library/18680d1c-6e7c-4645-8d53-27b5a96f2d3f)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>Programmieren mit Knoten<ept id="p1">](http://msdn.microsoft.com/library/18680d1c-6e7c-4645-8d53-27b5a96f2d3f)</ept>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XText">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XText" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XText" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XText.#ctor(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the value of the <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XText" /&gt;</ph> node.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>, der den Wert des <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XText" /&gt;</ph>-Knotens enthält.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XText.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XText" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XText" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XText.#ctor(System.String)">
          <source>You typically do not create text nodes by using the <ph id="ph1">&lt;xref:System.Xml.Linq.XText&gt;</ph> constructors.</source>
          <target state="translated">In der Regel nicht erstellt Textknoten mithilfe der <ph id="ph1">&lt;xref:System.Xml.Linq.XText&gt;</ph> Konstruktoren.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XText.#ctor(System.String)">
          <source>When you pass text content when constructing an <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph>, text nodes are automatically created.</source>
          <target state="translated">Wenn Sie Text-Inhalt übergeben, beim Erstellen einer <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph>, Textknoten werden automatisch erstellt.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XText.#ctor(System.String)">
          <source>The following example creates an element that contains a text node.</source>
          <target state="translated">Das folgende Beispiel erstellt ein Element, das einen Textknoten enthält.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XText.#ctor(System.String)">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XText.#ctor(System.Xml.Linq.XText)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XText" /&gt;</ph> node to copy from.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XText" /&gt;</ph>-Knoten, aus dem kopiert werden soll.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XText.#ctor(System.Xml.Linq.XText)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XText" /&gt;</ph> class from another <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XText" /&gt;</ph> object.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XText" /&gt;</ph>-Klasse mit einem anderen <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XText" /&gt;</ph> -Objekt.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XText.#ctor(System.Xml.Linq.XText)">
          <source>This constructor is primarily used internally to make a deep copy of an XML tree.</source>
          <target state="translated">Dieser Konstruktor wird hauptsächlich intern verwendet, um eine tiefe Kopie einer XML-Struktur erstellen.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XText.NodeType">
          <source>Gets the node type for this node.</source>
          <target state="translated">Ruft den Knotentyp für diesen Knoten ab.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XText.NodeType">
          <source>The node type.</source>
          <target state="translated">Der Knotentyp.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XText.NodeType">
          <source>For <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XText" /&gt;</ph> objects, this value is <ph id="ph2">&lt;see cref="F:System.Xml.XmlNodeType.Text" /&gt;</ph>.</source>
          <target state="translated">Für <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XText" /&gt;</ph>-Objekte ist dieser Wert <ph id="ph2">&lt;see cref="F:System.Xml.XmlNodeType.Text" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XText.NodeType">
          <source>Because all classes that derive from <ph id="ph1">&lt;xref:System.Xml.Linq.XObject&gt;</ph> contain a <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.NodeType%2A&gt;</ph> property, you can write code that operates on collections of concrete subclass of <ph id="ph3">&lt;xref:System.Xml.Linq.XObject&gt;</ph>.</source>
          <target state="translated">Da alle, die von Klassen abgeleitet werden <ph id="ph1">&lt;xref:System.Xml.Linq.XObject&gt;</ph> enthalten eine <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.NodeType%2A&gt;</ph> -Eigenschaft, können Sie Code schreiben, der ausgeführt wird auf Sammlungen von konkrete Unterklasse von <ph id="ph3">&lt;xref:System.Xml.Linq.XObject&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XText.NodeType">
          <source>Your code can then test for the node type of each node in the collection.</source>
          <target state="translated">Code kann dann für jeden Knoten in der Auflistung den Knotentyp testen.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XText.NodeType">
          <source>The following example creates an XML tree that contains a number of types of nodes.</source>
          <target state="translated">Das folgende Beispiel erstellt eine XML-Struktur, die eine Anzahl von Typen von Knoten enthält.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XText.NodeType">
          <source>It then iterates through the tree, outputting the node type of each node.</source>
          <target state="translated">Es durchläuft dann der Struktur der Ausgabe der einzelnen Knoten des Knotentyp.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XText.NodeType">
          <source>Note that <ph id="ph1">`Child2`</ph> contains an <ph id="ph2">&lt;xref:System.Xml.Linq.XText&gt;</ph> node, implicitly converted from the string content.</source>
          <target state="translated">Beachten Sie, dass <ph id="ph1">`Child2`</ph> enthält ein <ph id="ph2">&lt;xref:System.Xml.Linq.XText&gt;</ph> Knoten, von dem Zeichenfolgeninhalt implizit konvertiert.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XText.NodeType">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XText.Value">
          <source>Gets or sets the value of this node.</source>
          <target state="translated">Ruft den Wert des Knotens ab oder legt diesen fest.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XText.Value">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the value of this node.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>, der den Wert dieses Knotens enthält.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XText.Value">
          <source>Setting this property will raise the <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> and the <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> events.</source>
          <target state="translated">Diese Eigenschaft löst Einstellung der <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> und die <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> Ereignisse.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XText.Value">
          <source>The following example shows getting and setting this property.</source>
          <target state="translated">Das folgende Beispiel zeigt das Abrufen und Festlegen dieser Eigenschaft.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XText.Value">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XText.WriteTo(System.Xml.XmlWriter)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> into which this method will write.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>, in den diese Methode schreibt.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XText.WriteTo(System.Xml.XmlWriter)">
          <source>Writes this node to an <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated">Schreibt diesen Knoten in einen <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XText.WriteTo(System.Xml.XmlWriter)">
          <source>This method is primarily used internally by the methods that write an XML tree to an <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph>.</source>
          <target state="translated">Diese Methode wird hauptsächlich intern verwendet, durch die Methoden, die eine XML-Struktur zum Schreiben einer <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>