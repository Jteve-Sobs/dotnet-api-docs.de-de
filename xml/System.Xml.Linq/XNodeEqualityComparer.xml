<Type Name="XNodeEqualityComparer" FullName="System.Xml.Linq.XNodeEqualityComparer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d40a42376bd1ab5c4ec82e315e449b4f56ac3852" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86691849" /></Metadata><TypeSignature Language="C#" Value="public sealed class XNodeEqualityComparer : System.Collections.Generic.IEqualityComparer&lt;System.Xml.Linq.XNode&gt;, System.Collections.IEqualityComparer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XNodeEqualityComparer extends System.Object implements class System.Collections.Generic.IEqualityComparer`1&lt;class System.Xml.Linq.XNode&gt;, class System.Collections.IEqualityComparer" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Linq.XNodeEqualityComparer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XNodeEqualityComparer&#xA;Implements IEqualityComparer, IEqualityComparer(Of XNode)" />
  <TypeSignature Language="C++ CLI" Value="public ref class XNodeEqualityComparer sealed : System::Collections::Generic::IEqualityComparer&lt;System::Xml::Linq::XNode ^&gt;, System::Collections::IEqualityComparer" />
  <TypeSignature Language="F#" Value="type XNodeEqualityComparer = class&#xA;    interface IEqualityComparer&lt;XNode&gt;&#xA;    interface IEqualityComparer" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="F#" Value="type XNodeEqualityComparer = class&#xA;    interface IEqualityComparer&#xA;    interface IEqualityComparer&lt;XNode&gt;" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XDocument</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Linq</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.Xml.Linq" FromVersion="4.0.0.0" To="System.Xml.XDocument" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Xml.XDocument" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEqualityComparer&lt;System.Xml.Linq.XNode&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEqualityComparer</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="3387a-101">Vergleicht Knoten auf Gleichheit.</span><span class="sxs-lookup"><span data-stu-id="3387a-101">Compares nodes to determine whether they are equal.</span></span> <span data-ttu-id="3387a-102">Diese Klasse kann nicht vererbt werden.</span><span class="sxs-lookup"><span data-stu-id="3387a-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3387a-103">Der Zweck dieser Klasse besteht darin, und zu implementieren <xref:System.Collections.IEqualityComparer?displayProperty=nameWithType> <xref:System.Collections.Generic.IEqualityComparer%601?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="3387a-103">The purpose of this class is to implement <xref:System.Collections.IEqualityComparer?displayProperty=nameWithType> and <xref:System.Collections.Generic.IEqualityComparer%601?displayProperty=nameWithType>.</span></span> <span data-ttu-id="3387a-104">Klassen, für die eine Identität erforderlich ist (z. b. <xref:System.Collections.Generic.Dictionary%602> ), benötigen eine Instanz einer Klasse, die eine dieser Schnittstellen implementiert.</span><span class="sxs-lookup"><span data-stu-id="3387a-104">Classes that require identity (such as <xref:System.Collections.Generic.Dictionary%602> ) require an instance of a class that implements one of these interfaces.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="3387a-105">LINQ to XML</span><span class="sxs-lookup"><span data-stu-id="3387a-105">LINQ to XML</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XNodeEqualityComparer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XNodeEqualityComparer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XNodeEqualityComparer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3387a-106">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Linq.XNodeEqualityComparer" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="3387a-106">Initializes a new instance of the <see cref="T:System.Xml.Linq.XNodeEqualityComparer" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3387a-107">Im folgenden Beispiel wird diese Klasse verwendet, um zu bestimmen, ob zwei Knoten gleich sind.</span><span class="sxs-lookup"><span data-stu-id="3387a-107">The following example uses this class to determine whether two nodes are equal.</span></span>  
  
```csharp  
XElement xmlTree1 = new XElement("Root",  
    new XAttribute("Att1", 1),  
    new XAttribute("Att2", 2),  
    new XElement("Child1", 1),  
    new XElement("Child2", "some content")  
);  
XElement xmlTree2 = new XElement("Root",  
    new XAttribute("Att1", 1),  
    new XAttribute("Att2", 2),  
    new XElement("Child1", 1),  
    new XElement("Child2", "some content")  
);  
XNodeEqualityComparer equalityComparer = new XNodeEqualityComparer();  
Console.WriteLine(equalityComparer.Equals(xmlTree1, xmlTree2));  
xmlTree2.Add(new XElement("NewChild", "new content"));  
Console.WriteLine(equalityComparer.Equals(xmlTree1, xmlTree2));  
```  
  
 <span data-ttu-id="3387a-108">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="3387a-108">This example produces the following output:</span></span>  
  
```  
True  
False  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="3387a-109">LINQ to XML</span><span class="sxs-lookup"><span data-stu-id="3387a-109">LINQ to XML</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Xml.Linq.XNode x, System.Xml.Linq.XNode y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Xml.Linq.XNode x, class System.Xml.Linq.XNode y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XNodeEqualityComparer.Equals(System.Xml.Linq.XNode,System.Xml.Linq.XNode)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (x As XNode, y As XNode) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Xml::Linq::XNode ^ x, System::Xml::Linq::XNode ^ y);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Xml.Linq.XNode * System.Xml.Linq.XNode -&gt; bool" Usage="xNodeEqualityComparer.Equals (x, y)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Xml.Linq.XNode" />
        <Parameter Name="y" Type="System.Xml.Linq.XNode" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="3387a-110">Der erste zu vergleichende <see cref="T:System.Xml.Linq.XNode" />.</span><span class="sxs-lookup"><span data-stu-id="3387a-110">The first <see cref="T:System.Xml.Linq.XNode" /> to compare.</span></span></param>
        <param name="y"><span data-ttu-id="3387a-111">Der zweite zu vergleichende <see cref="T:System.Xml.Linq.XNode" />.</span><span class="sxs-lookup"><span data-stu-id="3387a-111">The second <see cref="T:System.Xml.Linq.XNode" /> to compare.</span></span></param>
        <summary><span data-ttu-id="3387a-112">Vergleicht die Werte zweier Knoten.</span><span class="sxs-lookup"><span data-stu-id="3387a-112">Compares the values of two nodes.</span></span></summary>
        <returns><span data-ttu-id="3387a-113">Ein <see cref="T:System.Boolean" />, das angibt, ob die Knoten gleich sind.</span><span class="sxs-lookup"><span data-stu-id="3387a-113">A <see cref="T:System.Boolean" /> indicating if the nodes are equal.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3387a-114">Die folgenden Kriterien bestimmen, ob zwei Knoten gleich sind:</span><span class="sxs-lookup"><span data-stu-id="3387a-114">The following criteria determine whether two nodes are equal:</span></span>  
  
-   <span data-ttu-id="3387a-115">Ein `null` Knoten entspricht einem anderen Knoten, ist `null` jedoch ungleich einem Knoten, der nicht `null` Knoten ist.</span><span class="sxs-lookup"><span data-stu-id="3387a-115">A `null` node is equal to another `null` node but unequal to a non-`null` node.</span></span>  
  
-   <span data-ttu-id="3387a-116">Zwei <xref:System.Xml.Linq.XNode> Objekte unterschiedlicher Typen sind nie gleich.</span><span class="sxs-lookup"><span data-stu-id="3387a-116">Two <xref:System.Xml.Linq.XNode> objects of different types are never equal.</span></span>  
  
-   <span data-ttu-id="3387a-117">Zwei <xref:System.Xml.Linq.XText> Knoten sind gleich, wenn Sie denselben Text enthalten.</span><span class="sxs-lookup"><span data-stu-id="3387a-117">Two <xref:System.Xml.Linq.XText> nodes are equal if they contain the same text.</span></span>  
  
-   <span data-ttu-id="3387a-118">Zwei <xref:System.Xml.Linq.XElement> Knoten sind gleich, wenn Sie denselben Tagnamen, denselben Satz von Attributen mit denselben Werten aufweisen und (ignorieren von Kommentaren und Verarbeitungsanweisungen) zwei Sequenzen gleicher Längen von paarweise identischen Inhalts Knoten enthalten.</span><span class="sxs-lookup"><span data-stu-id="3387a-118">Two <xref:System.Xml.Linq.XElement> nodes are equal if they have the same tag name, the same set of attributes with the same values, and (ignoring comments and processing instructions), contain two equal-length sequences of pairwise equal content nodes.</span></span>  
  
-   <span data-ttu-id="3387a-119">Zwei <xref:System.Xml.Linq.XDocument> Objekte sind gleich, wenn Ihre Stamm Knoten gleich sind.</span><span class="sxs-lookup"><span data-stu-id="3387a-119">Two <xref:System.Xml.Linq.XDocument> objects are equal if their root nodes are equal.</span></span>  
  
-   <span data-ttu-id="3387a-120">Zwei <xref:System.Xml.Linq.XComment> Knoten sind gleich, wenn Sie denselben Kommentartext enthalten.</span><span class="sxs-lookup"><span data-stu-id="3387a-120">Two <xref:System.Xml.Linq.XComment> nodes are equal if they contain the same comment text.</span></span>  
  
-   <span data-ttu-id="3387a-121">Zwei <xref:System.Xml.Linq.XProcessingInstruction> Knoten sind gleich, wenn Sie über das gleiche Ziel und die gleichen Daten verfügen.</span><span class="sxs-lookup"><span data-stu-id="3387a-121">Two <xref:System.Xml.Linq.XProcessingInstruction> nodes are equal if they have the same target and data.</span></span>  
  
-   <span data-ttu-id="3387a-122">Zwei <xref:System.Xml.Linq.XDocumentType> Knoten sind gleich, wenn die gleichen Namen, die gleiche öffentliche ID, die System-ID und die interne Teilmenge aufweisen.</span><span class="sxs-lookup"><span data-stu-id="3387a-122">Two <xref:System.Xml.Linq.XDocumentType> nodes are equal if the have the same name, public ID, system ID, and internal subset.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3387a-123">Im folgenden Beispiel wird diese Klasse zum Vergleichen von zwei Knoten verwendet.</span><span class="sxs-lookup"><span data-stu-id="3387a-123">The following example uses this class to compare two nodes.</span></span>  
  
```csharp  
XElement xmlTree1 = new XElement("Root",  
    new XAttribute("Att1", 1),  
    new XAttribute("Att2", 2),  
    new XElement("Child1", 1),  
    new XElement("Child2", "some content")  
);  
XElement xmlTree2 = new XElement("Root",  
    new XAttribute("Att1", 1),  
    new XAttribute("Att2", 2),  
    new XElement("Child1", 1),  
    new XElement("Child2", "some content")  
);  
XNodeEqualityComparer equalityComparer = new XNodeEqualityComparer();  
Console.WriteLine(equalityComparer.Equals(xmlTree1, xmlTree2));  
xmlTree2.Add(new XElement("NewChild", "new content"));  
Console.WriteLine(equalityComparer.Equals(xmlTree1, xmlTree2));  
```  
  
 <span data-ttu-id="3387a-124">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="3387a-124">This example produces the following output:</span></span>  
  
```  
True  
False  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="3387a-125">LINQ to XML</span><span class="sxs-lookup"><span data-stu-id="3387a-125">LINQ to XML</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode (System.Xml.Linq.XNode obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(class System.Xml.Linq.XNode obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XNodeEqualityComparer.GetHashCode(System.Xml.Linq.XNode)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode (obj As XNode) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetHashCode(System::Xml::Linq::XNode ^ obj);" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : System.Xml.Linq.XNode -&gt; int" Usage="xNodeEqualityComparer.GetHashCode obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Xml.Linq.XNode" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="3387a-126">Der zu hashende <see cref="T:System.Xml.Linq.XNode" />.</span><span class="sxs-lookup"><span data-stu-id="3387a-126">The <see cref="T:System.Xml.Linq.XNode" /> to hash.</span></span></param>
        <summary><span data-ttu-id="3387a-127">Gibt einen Hashcode auf der Grundlage eines <see cref="T:System.Xml.Linq.XNode" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="3387a-127">Returns a hash code based on an <see cref="T:System.Xml.Linq.XNode" />.</span></span></summary>
        <returns><span data-ttu-id="3387a-128">Ein <see cref="T:System.Int32" />, das einen wertbasierten Hashcode für den Knoten enthält.</span><span class="sxs-lookup"><span data-stu-id="3387a-128">A <see cref="T:System.Int32" /> that contains a value-based hash code for the node.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3387a-129">Die <xref:System.Xml.Linq.XNode> Implementierung von  <xref:System.Object.GetHashCode%2A> basiert auf der referenziellen Identität des-Knotens.</span><span class="sxs-lookup"><span data-stu-id="3387a-129">The <xref:System.Xml.Linq.XNode> implementation of  <xref:System.Object.GetHashCode%2A> is based on the referential identity of the node.</span></span> <span data-ttu-id="3387a-130">Diese Methode berechnet einen Deep-Hashcode basierend auf dem Wert des Knotens und allen nachfolgenden Werten.</span><span class="sxs-lookup"><span data-stu-id="3387a-130">This method computes a deep hash code based on the value of the node and all descendants.</span></span> <span data-ttu-id="3387a-131">Der Hashcode reflektiert alle Attribute und alle Nachfolger Knoten.</span><span class="sxs-lookup"><span data-stu-id="3387a-131">The hash code reflects all attributes and all descendent nodes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3387a-132">Im folgenden Beispiel wird diese Methode verwendet, um einen Deep-Hashcode für eine XML-Struktur zu erhalten.</span><span class="sxs-lookup"><span data-stu-id="3387a-132">The following example uses this method to get a deep hash code for an XML tree.</span></span>  
  
```csharp  
XElement xmlTree = new XElement("Root",  
    new XAttribute("Att1", 1),  
    new XAttribute("Att2", 2),  
    new XElement("Child1", 1),  
    new XElement("Child2", "some content")  
);  
XNodeEqualityComparer equalityComparer = new XNodeEqualityComparer();  
Console.WriteLine("HashCode: {0}", equalityComparer.GetHashCode(xmlTree).ToString("X"));  
xmlTree.Add(new XElement("NewChild", "new content"));  
Console.WriteLine("HashCode: {0}", equalityComparer.GetHashCode(xmlTree).ToString("X"));  
```  
  
 <span data-ttu-id="3387a-133">Dieses Beispiel erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="3387a-133">This example produces the following output:</span></span>  
  
```  
HashCode: 958CCD0  
HashCode: AD26516B  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="3387a-134">LINQ to XML</span><span class="sxs-lookup"><span data-stu-id="3387a-134">LINQ to XML</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEqualityComparer.Equals">
      <MemberSignature Language="C#" Value="bool IEqualityComparer.Equals (object x, object y);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IEqualityComparer.Equals(object x, object y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XNodeEqualityComparer.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Equals (x As Object, y As Object) As Boolean Implements IEqualityComparer.Equals" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IEqualityComparer.Equals(System::Object ^ x, System::Object ^ y) = System::Collections::IEqualityComparer::Equals;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IEqualityComparer.Equals : obj * obj -&gt; bool&#xA;override this.System.Collections.IEqualityComparer.Equals : obj * obj -&gt; bool" Usage="xNodeEqualityComparer.System.Collections.IEqualityComparer.Equals (x, y)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEqualityComparer.Equals(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Object" />
        <Parameter Name="y" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="3387a-135">Der erste zu vergleichende <see cref="T:System.Xml.Linq.XNode" />.</span><span class="sxs-lookup"><span data-stu-id="3387a-135">The first <see cref="T:System.Xml.Linq.XNode" /> to compare.</span></span></param>
        <param name="y"><span data-ttu-id="3387a-136">Der zweite zu vergleichende <see cref="T:System.Xml.Linq.XNode" />.</span><span class="sxs-lookup"><span data-stu-id="3387a-136">The second <see cref="T:System.Xml.Linq.XNode" /> to compare.</span></span></param>
        <summary><span data-ttu-id="3387a-137">Vergleicht die Werte zweier Knoten.</span><span class="sxs-lookup"><span data-stu-id="3387a-137">Compares the values of two nodes.</span></span></summary>
        <returns><span data-ttu-id="3387a-138"><see langword="true" />, wenn die Knoten gleich sind, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3387a-138"><see langword="true" /> if the nodes are equal; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3387a-139">Die folgenden Kriterien bestimmen, ob zwei Knoten gleich sind:</span><span class="sxs-lookup"><span data-stu-id="3387a-139">The following criteria determine whether two nodes are equal:</span></span>  
  
-   <span data-ttu-id="3387a-140">Ein `null` Knoten entspricht einem anderen Knoten, ist `null` jedoch ungleich einem Knoten, der nicht `null` Knoten ist.</span><span class="sxs-lookup"><span data-stu-id="3387a-140">A `null` node is equal to another `null` node but unequal to a non-`null` node.</span></span>  
  
-   <span data-ttu-id="3387a-141">Zwei <xref:System.Xml.Linq.XNode> Objekte unterschiedlicher Typen sind nie gleich.</span><span class="sxs-lookup"><span data-stu-id="3387a-141">Two <xref:System.Xml.Linq.XNode> objects of different types are never equal.</span></span>  
  
-   <span data-ttu-id="3387a-142">Zwei <xref:System.Xml.Linq.XText> Knoten sind gleich, wenn Sie denselben Text enthalten.</span><span class="sxs-lookup"><span data-stu-id="3387a-142">Two <xref:System.Xml.Linq.XText> nodes are equal if they contain the same text.</span></span>  
  
-   <span data-ttu-id="3387a-143">Zwei <xref:System.Xml.Linq.XElement> Knoten sind gleich, wenn Sie denselben Tagnamen, denselben Satz von Attributen mit denselben Werten aufweisen und (ignorieren von Kommentaren und Verarbeitungsanweisungen) zwei Equa-Längen Sequenzen von paarweise identischen Inhalts Knoten enthalten.</span><span class="sxs-lookup"><span data-stu-id="3387a-143">Two <xref:System.Xml.Linq.XElement> nodes are equal if they have the same tag name, the same set of attributes with the same values, and (ignoring comments and processing instructions), contain two equa-length sequences of pairwise equal content nodes.</span></span>  
  
-   <span data-ttu-id="3387a-144">Zwei <xref:System.Xml.Linq.XDocument> Objekte sind gleich, wenn Ihre Stamm Knoten gleich sind.</span><span class="sxs-lookup"><span data-stu-id="3387a-144">Two <xref:System.Xml.Linq.XDocument> objects are equal if their root nodes are equal.</span></span>  
  
-   <span data-ttu-id="3387a-145">Zwei <xref:System.Xml.Linq.XComment> Knoten sind gleich, wenn Sie denselben Kommentartext enthalten.</span><span class="sxs-lookup"><span data-stu-id="3387a-145">Two <xref:System.Xml.Linq.XComment> nodes are equal if they contain the same comment text.</span></span>  
  
-   <span data-ttu-id="3387a-146">Zwei <xref:System.Xml.Linq.XProcessingInstruction> Knoten sind gleich, wenn Sie über das gleiche Ziel und die gleichen Daten verfügen.</span><span class="sxs-lookup"><span data-stu-id="3387a-146">Two <xref:System.Xml.Linq.XProcessingInstruction> nodes are equal if they have the same target and data.</span></span>  
  
-   <span data-ttu-id="3387a-147">Zwei <xref:System.Xml.Linq.XDocumentType> Knoten sind gleich, wenn die gleichen Namen, die gleiche öffentliche ID, die System-ID und die interne Teilmenge aufweisen.</span><span class="sxs-lookup"><span data-stu-id="3387a-147">Two <xref:System.Xml.Linq.XDocumentType> nodes are equal if the have the same name, public ID, system ID, and internal subset.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEqualityComparer.GetHashCode">
      <MemberSignature Language="C#" Value="int IEqualityComparer.GetHashCode (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IEqualityComparer.GetHashCode(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XNodeEqualityComparer.System#Collections#IEqualityComparer#GetHashCode(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function GetHashCode (obj As Object) As Integer Implements IEqualityComparer.GetHashCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IEqualityComparer.GetHashCode(System::Object ^ obj) = System::Collections::IEqualityComparer::GetHashCode;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IEqualityComparer.GetHashCode : obj -&gt; int&#xA;override this.System.Collections.IEqualityComparer.GetHashCode : obj -&gt; int" Usage="xNodeEqualityComparer.System.Collections.IEqualityComparer.GetHashCode obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEqualityComparer.GetHashCode(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="3387a-148">Der zu hashende Knoten.</span><span class="sxs-lookup"><span data-stu-id="3387a-148">The node to hash.</span></span></param>
        <summary><span data-ttu-id="3387a-149">Gibt einen Hashcode auf der Grundlage des Werts eines Knotens zurück.</span><span class="sxs-lookup"><span data-stu-id="3387a-149">Returns a hash code based on the value of a node.</span></span></summary>
        <returns><span data-ttu-id="3387a-150">Ein <see cref="T:System.Int32" />, das einen wertbasierten Hashcode für den Knoten enthält.</span><span class="sxs-lookup"><span data-stu-id="3387a-150">A <see cref="T:System.Int32" /> that contains a value-based hash code for the node.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3387a-151">Die <xref:System.Xml.Linq.XNode> Implementierung von <xref:System.Object.GetHashCode%2A> basiert auf der referenziellen Identität des-Knotens.</span><span class="sxs-lookup"><span data-stu-id="3387a-151">The <xref:System.Xml.Linq.XNode> implementation of <xref:System.Object.GetHashCode%2A> is based on the referential identity of the node.</span></span> <span data-ttu-id="3387a-152">Diese Methode berechnet einen Deep-Hashcode basierend auf dem Wert des Knotens, seinen Attributen und seinen nachfolgenden Werten.</span><span class="sxs-lookup"><span data-stu-id="3387a-152">This method computes a deep hash code based on the value of the node, its attributes, and its descendants.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
