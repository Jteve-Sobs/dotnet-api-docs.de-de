<Type Name="DialogPropertyValueEditor" FullName="System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8b670f12ecf4dc921e6de88a5df630def102b2bb" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="63925335" /></Metadata><TypeSignature Language="C#" Value="public class DialogPropertyValueEditor : System.Activities.Presentation.PropertyEditing.PropertyValueEditor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DialogPropertyValueEditor extends System.Activities.Presentation.PropertyEditing.PropertyValueEditor" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor" />
  <TypeSignature Language="VB.NET" Value="Public Class DialogPropertyValueEditor&#xA;Inherits PropertyValueEditor" />
  <TypeSignature Language="C++ CLI" Value="public ref class DialogPropertyValueEditor : System::Activities::Presentation::PropertyEditing::PropertyValueEditor" />
  <TypeSignature Language="F#" Value="type DialogPropertyValueEditor = class&#xA;    inherit PropertyValueEditor" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Activities.Presentation.PropertyEditing.PropertyValueEditor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Container für die gesamte Logik der Dialogfeldbearbeitung für <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyEntry" />-Objekte.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor>-Klasse, um einen Inline-Editor anzuzeigen, der einen zugeordneten Dialogfeld-Editor aufweisen kann.  
  
 Die <xref:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor>-Klasse kann eine <xref:System.Windows.DataTemplate> für einen Dialogfeld-Editor oder benutzerdefinierte Logik enthalten, die aufgerufen wird, wenn das Dialogfeld aufgerufen wird.  
  
 Verwenden Sie die <xref:System.Activities.Presentation.PropertyEditing.EditModeSwitchButton> in der <xref:System.Windows.DataTemplate>, um die benutzerdefinierte <xref:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor>-Klasse aufzurufen.  
  
 Sie können eine <xref:System.Windows.DataTemplate> bereitstellen, der in einem Hostdialogfeld angezeigt wird, oder Sie können die <xref:System.Windows.Forms.Form.ShowDialog>-Methode überschreiben, die die Wiederverwendung von vorhandenen oder Systemdialogfeldern ermöglicht.  
  
 Die folgende Liste zeigt die Regeln an, mit denen bestimmt wird, ob die <xref:System.Windows.DataTemplate>-Methode oder die <xref:System.Windows.Forms.Form.ShowDialog>-Methode verwendet wird.  
  
 Wenn die <xref:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor.DialogEditorTemplate%2A> Eigenschaft ist kein null-Verweis (Nothing in Visual Basic), <xref:System.Windows.DataTemplate> befindet sich in einem hostspezifischen Dialogfeld, das hostformatierung bereitstellt. <xref:System.Windows.Forms.Form.ShowDialog> wird nicht aufgerufen.  
  
 Wenn die <xref:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor.DialogEditorTemplate%2A> -Eigenschaft ist ein null-Verweis (Nothing in Visual Basic), die virtuelle <xref:System.Windows.Forms.Form.ShowDialog> Methode wird aufgerufen, und Sie können angeben, überschreiben diese Methode, um ein Dialogfeld anzuzeigen.  
  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Erstellt eine neue Instanz der <see cref="T:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DialogPropertyValueEditor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DialogPropertyValueEditor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Erstellt eine neue Instanz der <see cref="T:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor" />-Klasse ohne bestimmte Vorlagen.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DialogPropertyValueEditor (System.Windows.DataTemplate dialogEditorTemplate, System.Windows.DataTemplate inlineEditorTemplate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.DataTemplate dialogEditorTemplate, class System.Windows.DataTemplate inlineEditorTemplate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor.#ctor(System.Windows.DataTemplate,System.Windows.DataTemplate)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dialogEditorTemplate As DataTemplate, inlineEditorTemplate As DataTemplate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DialogPropertyValueEditor(System::Windows::DataTemplate ^ dialogEditorTemplate, System::Windows::DataTemplate ^ inlineEditorTemplate);" />
      <MemberSignature Language="F#" Value="new System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor : System.Windows.DataTemplate * System.Windows.DataTemplate -&gt; System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor" Usage="new System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor (dialogEditorTemplate, inlineEditorTemplate)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="dialogEditorTemplate" Type="System.Windows.DataTemplate" />
        <Parameter Name="inlineEditorTemplate" Type="System.Windows.DataTemplate" />
      </Parameters>
      <Docs>
        <param name="dialogEditorTemplate">Eine <see cref="T:System.Windows.DataTemplate" />, die in einem hostspezifischen Dialogfeldchrom gehostet wird und deren <see cref="P:System.Activities.ActivityContext.DataContext" /> auf den <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" /> festgelegt ist, der der bearbeiteten Eigenschaft entspricht.</param>
        <param name="inlineEditorTemplate">Eine <see cref="T:System.Windows.DataTemplate" />, die für die Benutzeroberfläche den Inline-Editors verwendet wird. Wenn sie verwendet wird, wird der <see cref="P:System.Activities.ActivityContext.DataContext" /> auf den <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" /> festgelegt, der der bearbeiteten Eigenschaft entspricht.</param>
        <summary>Erstellt eine neue Instanz der <see cref="T:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor" />-Klasse mit dem angegebenen Dialog-Editor und Inline-Editorvorlagen.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DialogEditorTemplate">
      <MemberSignature Language="C#" Value="public System.Windows.DataTemplate DialogEditorTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DataTemplate DialogEditorTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor.DialogEditorTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property DialogEditorTemplate As DataTemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DataTemplate ^ DialogEditorTemplate { System::Windows::DataTemplate ^ get(); void set(System::Windows::DataTemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DialogEditorTemplate : System.Windows.DataTemplate with get, set" Usage="System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor.DialogEditorTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.DataTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die <see cref="T:System.Windows.DataTemplate" /> ab oder legt sie fest, die von einem hostspezifischen Dialogfeld gehostet wird und deren <see cref="P:System.Activities.ActivityContext.DataContext" /> auf einen <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyEntry.PropertyValue" /> festgelegt wurde.</summary>
        <value>Das <see cref="T:System.Windows.DataTemplate" />-Objekt, das von einem hostspezifischen Dialogfeld gehostet wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn diese Eigenschaft gibt `null`, <xref:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor.ShowDialog%2A> -Methode erfolgt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowDialog">
      <MemberSignature Language="C#" Value="public virtual void ShowDialog (System.Activities.Presentation.PropertyEditing.PropertyValue propertyValue, System.Windows.IInputElement commandSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowDialog(class System.Activities.Presentation.PropertyEditing.PropertyValue propertyValue, class System.Windows.IInputElement commandSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor.ShowDialog(System.Activities.Presentation.PropertyEditing.PropertyValue,System.Windows.IInputElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ShowDialog(System::Activities::Presentation::PropertyEditing::PropertyValue ^ propertyValue, System::Windows::IInputElement ^ commandSource);" />
      <MemberSignature Language="F#" Value="abstract member ShowDialog : System.Activities.Presentation.PropertyEditing.PropertyValue * System.Windows.IInputElement -&gt; unit&#xA;override this.ShowDialog : System.Activities.Presentation.PropertyEditing.PropertyValue * System.Windows.IInputElement -&gt; unit" Usage="dialogPropertyValueEditor.ShowDialog (propertyValue, commandSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyValue" Type="System.Activities.Presentation.PropertyEditing.PropertyValue" />
        <Parameter Name="commandSource" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="propertyValue">Der <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyEntry.PropertyValue" /> für die bearbeitete Eigenschaft.</param>
        <param name="commandSource">Das <see cref="T:System.Windows.IInputElement" />, das als Quelle für die Ausführung von <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValueEditorCommands" /> verwendet werden kann.</param>
        <summary>Wird aufgerufen, wenn die <see cref="P:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor.DialogEditorTemplate" /> NULL ist und ein Dialogfeld vom Benutzer aufgerufen wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Da die Befehle vom Host verarbeitet werden und da benutzerdefinierte Dialogfelder kein Teil dieser visuellen Struktur sein werden, macht `commandSource` ein <xref:System.Windows.IInputElement> verfügbar, das Teil der visuellen Struktur des Hosts ist und daher verwendet werden kann, um Eigenschaftenbearbeitungsbefehle so auszuführen, dass sie ordnungsgemäß verarbeitet werden können. Durch das Überschreiben dieser Methode können Sie eine benutzerdefinierte Dialogfeldlogik implementieren, z. B. das Aufrufen vorhandener Systemdialogfelder.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>