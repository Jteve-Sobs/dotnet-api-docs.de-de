<Type Name="PropertyFilter" FullName="System.Activities.Presentation.PropertyEditing.PropertyFilter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="84711af8a3ce7bd9c7b6fdff5e956b56f3f11af8" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70497256" /></Metadata><TypeSignature Language="C#" Value="public class PropertyFilter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PropertyFilter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.PropertyEditing.PropertyFilter" />
  <TypeSignature Language="VB.NET" Value="Public Class PropertyFilter" />
  <TypeSignature Language="C++ CLI" Value="public ref class PropertyFilter" />
  <TypeSignature Language="F#" Value="type PropertyFilter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="dbebb-101">Stellt die Filterfunktionalität für einen Host zur Eigenschaftenbearbeitung bereit.</span><span class="sxs-lookup"><span data-stu-id="dbebb-101">Provides filtering functionality for a property editing host.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dbebb-102">Enthält eine Liste von Zeichenfolgen, den so genannten *Prädikaten*, die mit Namen von Zieleigenschaften verglichen werden, bis eine Übereinstimmung gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="dbebb-102">Contains a list of strings, called *predicates*, that are compared against a target property name until a match is found.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dbebb-103">Erstellt eine neue Instanz der <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyFilter" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="dbebb-103">Creates a new instance of the <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyFilter" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PropertyFilter (System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate&gt; predicates);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate&gt; predicates) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.PropertyFilter.#ctor(System.Collections.Generic.IEnumerable{System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (predicates As IEnumerable(Of PropertyFilterPredicate))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PropertyFilter(System::Collections::Generic::IEnumerable&lt;System::Activities::Presentation::PropertyEditing::PropertyFilterPredicate ^&gt; ^ predicates);" />
      <MemberSignature Language="F#" Value="new System.Activities.Presentation.PropertyEditing.PropertyFilter : seq&lt;System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate&gt; -&gt; System.Activities.Presentation.PropertyEditing.PropertyFilter" Usage="new System.Activities.Presentation.PropertyEditing.PropertyFilter predicates" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="predicates" Type="System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate&gt;" />
      </Parameters>
      <Docs>
        <param name="predicates"><span data-ttu-id="dbebb-104">Eine <see cref="T:System.Collections.IEnumerable" />-Liste von Prädikaten oder Zeichenfolgen, die zum Abgleichen verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="dbebb-104">An <see cref="T:System.Collections.IEnumerable" /> list of predicates, or strings used for matching.</span></span></param>
        <summary><span data-ttu-id="dbebb-105">Erstellt eine neue Instanz der <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyFilter" />-Klasse, die eine Enumeration von Filterzeichenfolgen, den *Prädikaten*, umfasst, die mit den Namen von Zieleigenschaften verglichen werden können, bis eine Übereinstimmung gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="dbebb-105">Creates a new instance of the <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyFilter" /> class that includes an enumeration of filtering strings, called *predicates*, that can be compared against a target property name until a match is found.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PropertyFilter (string filterText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filterText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.PropertyFilter.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filterText As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PropertyFilter(System::String ^ filterText);" />
      <MemberSignature Language="F#" Value="new System.Activities.Presentation.PropertyEditing.PropertyFilter : string -&gt; System.Activities.Presentation.PropertyEditing.PropertyFilter" Usage="new System.Activities.Presentation.PropertyEditing.PropertyFilter filterText" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filterText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filterText"><span data-ttu-id="dbebb-106">Eine <see cref="T:System.String" />, die durch Leerzeichen getrennte Prädikate für die Eigenschaftenfilterung enthält.</span><span class="sxs-lookup"><span data-stu-id="dbebb-106">A <see cref="T:System.String" /> that contains space-delimited predicates for property filtering.</span></span></param>
        <summary><span data-ttu-id="dbebb-107">Erstellt eine neue Instanz der <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyFilter" />-Klasse, die eine <see cref="T:System.String" /> umfasst, die eine durch Leerzeichen getrennte Sequenz mit Filterausdrücken, den *Prädikaten*, enthält, die mit Namen von Zieleigenschaften verglichen werden können, bis eine Übereinstimmung gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="dbebb-107">Creates a new instance of the <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyFilter" /> class that includes a <see cref="T:System.String" /> that contains a space-delimited sequence of filtering phrases, called *predicates*, that can be compared against a target property name until a match is found.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.PropertyEditing.PropertyFilter.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEmpty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEmpty : bool" Usage="System.Activities.Presentation.PropertyEditing.PropertyFilter.IsEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dbebb-108">Schreibgeschützte Eigenschaft, die angibt, ob dieser <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyFilter" /> keine Filterprädikate aufweist.</span><span class="sxs-lookup"><span data-stu-id="dbebb-108">Read-only property that indicates whether this <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyFilter" /> does not have any filtering predicates.</span></span></summary>
        <value><span data-ttu-id="dbebb-109"><see langword="true" />, wenn keine Prädikate vorhanden sind; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dbebb-109"><see langword="true" /> if predicates are absent; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public bool Match (System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Match(class System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.PropertyFilter.Match(System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget)" />
      <MemberSignature Language="VB.NET" Value="Public Function Match (target As IPropertyFilterTarget) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Match(System::Activities::Presentation::PropertyEditing::IPropertyFilterTarget ^ target);" />
      <MemberSignature Language="F#" Value="member this.Match : System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget -&gt; bool" Usage="propertyFilter.Match target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="dbebb-110">Der Name der Eigenschaft, mit dem der aktuelle Filter verglichen wird, wenn nach einer Übereinstimmung gesucht wird.</span><span class="sxs-lookup"><span data-stu-id="dbebb-110">The name of the property that the current filter will be compared against when looking for a match.</span></span></param>
        <summary><span data-ttu-id="dbebb-111">Gleicht die Prädikatzeichenfolgen des aktuellen Filterobjekts mit dem angegebenen Namen der Zieleigenschaften ab und gibt einen booleschen Wert zurück, der angibt, ob eine oder mehrere Prädikatzeichenfolgen mit dem Zielnamen übereinstimmen oder ob dieser <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyFilter" /> keine Prädikate aufweist.</span><span class="sxs-lookup"><span data-stu-id="dbebb-111">Matches the predicate strings of the current filtering object against the specified target property name and returns a Boolean that indicates whether one or more of the predicate strings matches the target name or whether this <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyFilter" /> does not have any predicates.</span></span></summary>
        <returns><span data-ttu-id="dbebb-112"><see langword="true" />, wenn es eine Filter-/Zielübereinstimmung gibt oder wenn es keine Werte für den Vergleich gibt; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dbebb-112"><see langword="true" /> if there is a filter/target match or if there is nothing to use for the comparison; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
