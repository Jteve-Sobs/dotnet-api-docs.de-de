<Type Name="Membership" FullName="System.Web.Security.Membership">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0788d39f203f2d2f4467028cf4ac18908bdd6a23" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86844201" /></Metadata><TypeSignature Language="C#" Value="public static class Membership" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Membership extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.Membership" />
  <TypeSignature Language="VB.NET" Value="Public Class Membership" />
  <TypeSignature Language="C++ CLI" Value="public ref class Membership abstract sealed" />
  <TypeSignature Language="F#" Value="type Membership = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Überprüft Benutzeranmeldeinformationen und verwaltet Benutzereinstellungen. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.Membership> -Klasse wird in ASP.NET-Anwendungen zum Überprüfen von Benutzer Anmelde Informationen und Verwalten von Benutzereinstellungen wie Kenn Wörtern und e-Mail-Adressen verwendet Die- <xref:System.Web.Security.Membership> Klasse kann eigenständig oder in Verbindung mit verwendet werden, <xref:System.Web.Security.FormsAuthentication> um ein umfassendes System zum Authentifizieren von Benutzern einer Webanwendung oder Website zu erstellen. Das- <xref:System.Web.UI.WebControls.Login> Steuerelement kapselt die- <xref:System.Web.Security.Membership> Klasse, um einen geeigneten Mechanismus zum Überprüfen von Benutzern bereitzustellen.  
  
> [!NOTE]
>  Wenn Sie mit den Mitgliedschafts Features von ASP.net nicht vertraut sind, finden Sie weitere Informationen unter [Introduction to Membership](https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)) , bevor Sie fortfahren. Eine Liste mit anderen Themen im Zusammenhang mit der Mitgliedschaft finden Sie unter [Verwalten von Benutzern mithilfe der Mitgliedschaft](https://docs.microsoft.com/previous-versions/aspnet/tw292whz(v=vs.100)).  
  
 Die- <xref:System.Web.Security.Membership> Klasse stellt Funktionen für Folgendes bereit:  
  
-   Erstellen neuer Benutzer.  
  
-   Speichern von Mitgliedschafts Informationen (Benutzernamen, Kenn Wörter, e-Mail-Adressen und unterstützende Daten) in Microsoft SQL Server oder in einem alternativen Datenspeicher.  
  
-   Authentifizieren von Benutzern, die Ihre Website besuchen. Sie können Benutzerprogramm gesteuert authentifizieren, oder Sie können das-Steuerelement verwenden, <xref:System.Web.UI.WebControls.Login> um ein umfassendes Authentifizierungssystem zu erstellen, das nur wenig oder gar keinen Code erfordert.  
  
-   Verwalten von Kenn Wörtern, einschließlich erstellen, ändern, abrufen und Zurücksetzen von Kenn Wörtern usw. Optional können Sie die ASP.NET-Mitgliedschaft so konfigurieren, dass eine Kenn Wort Zurücksetzung und-Antwort erforderlich ist, um die Kenn Wort Zurücksetzung oder Abruf Anforderungen für Benutzer zu authentifizieren  
  
 Obwohl die ASP.NET-Mitgliedschaft eine selbstständige Funktion in ASP.net für die Authentifizierung ist, kann Sie in ASP.net Role Management integriert werden, um Autorisierungs Dienste für Ihre Website bereitzustellen. Die Mitgliedschaft kann auch in den ASP.NET-Benutzer integriert werden <xref:System.Web.Profile> , um anwendungsspezifische Anpassungen bereitzustellen, die an einzelne Benutzer angepasst werden können. Weitere Informationen finden Sie Untergrund Legendes zur [Rollen Verwaltung](https://docs.microsoft.com/previous-versions/aspnet/5k850zwb(v=vs.100)) und [ASP.NET Profil Eigenschaften (Übersicht](https://docs.microsoft.com/previous-versions/aspnet/2y3fs9xs(v=vs.100))).  
  
 Die-Klasse ist für die <xref:System.Web.Security.Membership> Kommunikation mit einer Datenquelle von Mitgliedschafts Anbietern abhängig. Der .NET Framework enthält eine <xref:System.Web.Security.SqlMembershipProvider> , in der Benutzerinformationen in einer Microsoft SQL Server-Datenbank gespeichert werden, sowie einen <xref:System.Web.Security.ActiveDirectoryMembershipProvider> , mit dem Sie Benutzerinformationen auf einem Active Directory oder Active Directory Anwendungsmodus (Adam) speichern können. Sie können auch einen benutzerdefinierten Mitgliedschafts Anbieter implementieren, um mit einer alternativen Datenquelle zu kommunizieren, die von der-Klasse verwendet werden kann <xref:System.Web.Security.Membership> . Benutzerdefinierte Mitgliedschafts Anbieter erben die <xref:System.Web.Security.MembershipProvider> abstrakte-Klasse. Weitere Informationen finden Sie unter [Implementieren eines Mitgliedschafts Anbieters](https://docs.microsoft.com/previous-versions/aspnet/f1kyba5e(v=vs.100)).  
  
 Standardmäßig ist die ASP.NET-Mitgliedschaft für alle ASP.NET-Anwendungen aktiviert. Der Standard Mitgliedschafts Anbieter ist das <xref:System.Web.Security.SqlMembershipProvider> und wird in der Computerkonfiguration mit dem Namen angegeben `AspNetSqlProvider` . Die Standard Instanz von <xref:System.Web.Security.SqlMembershipProvider> ist für das Herstellen einer Verbindung mit einer lokalen Instanz von Microsoft SQL Server konfiguriert.  
  
 Sie können die Standardeinstellungen ändern, um eine <xref:System.Web.Security.SqlMembershipProvider> andere als die- `AspNetSqlProvider` Instanz als Standardanbieter anzugeben, oder eine Instanz eines benutzerdefinierten Anbieters als Standardanbieter für Ihre ASP.NET-Anwendung mit der Web.config-Datei angeben. Sie können die ASP.net-Mitgliedschafts Konfiguration für Ihre Webanwendung mithilfe des Abschnitts [Mitgliedschafts](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100)) Konfiguration in der Web.config-Datei angeben. Sie können den unter Abschnitt [Anbieter](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/6d4936ht(v%3dvs.100)) des [Mitgliedschafts](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100)) Abschnitts verwenden, um einen anderen Mitgliedschafts Anbieter als einen der Standardanbieter anzugeben. Im folgenden [Mitgliedschafts](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100)) Abschnitt werden z. b. die Standard Mitgliedschafts Anbieter aus der aktuellen Anwendungskonfiguration entfernt und ein neuer Anbieter mit dem Namen hinzugefügt, der eine Verbindung mit `SqlProvider` einer SQL Server Instanz namens herstellt `AspSqlServer` .  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString="Data Source=AspSqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
  </connectionStrings>  
  <system.web>  
    <membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
      <providers>  
        <remove name="AspNetSqlProvider" />  
        <add name="SqlProvider"  
          type="System.Web.Security.SqlMembershipProvider"  
          connectionStringName="SqlServices"  
          enablePasswordRetrieval="false"  
          enablePasswordReset="true"  
          requiresQuestionAndAnswer="true"  
          passwordFormat="Hashed"  
          applicationName="/" />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt die Anmeldeseite für eine ASP.NET-Anwendung, die für die Verwendung von Formular Authentifizierung und ASP.NET-Mitgliedschaft konfiguriert ist. Wenn die angegebenen Benutzer Anmelde Informationen ungültig sind, wird dem Benutzer eine Meldung angezeigt. Andernfalls wird der Benutzer mithilfe der-Methode an die ursprünglich angeforderte URL umgeleitet <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> .  
  
> [!NOTE]
>  Die ASP.net-Anmeldungs Steuerelemente ( <xref:System.Web.UI.WebControls.Login> , <xref:System.Web.UI.WebControls.LoginView> , <xref:System.Web.UI.WebControls.LoginStatus> , <xref:System.Web.UI.WebControls.LoginName> und <xref:System.Web.UI.WebControls.PasswordRecovery> ) Kapseln praktisch die gesamte Logik, die erforderlich ist, um Benutzer zur Eingabe von Anmelde Informationen aufzufordern und die Anmelde Informationen im Mitgliedschaftssystem zu überprüfen. Sie können anstelle der programmgesteuerten Prüfung mit der-Klasse verwendet werden <xref:System.Web.Security.Membership> .  
  
> [!IMPORTANT]
>  Dieses Beispiel enthält ein Textfeld, das Benutzereingaben akzeptiert. Dies ist eine potenzielle Sicherheitsbedrohung. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/logincs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/loginvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">Einführung in die Mitgliedschaft</related>
  </Docs>
  <Members>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public static string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Web.Security.Membership.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Anwendung ab oder legt diesen fest.</summary>
        <value>Der Namen der Anwendung.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der <xref:System.Web.Security.Membership.ApplicationName%2A> wird zum Identifizieren von Benutzern verwendet, die für eine Anwendung spezifisch sind. Das heißt, dass der gleiche Benutzername in der Datenbank für mehrere ASP.NET-Anwendungen vorhanden sein kann, die eine andere angeben <xref:System.Web.Security.Membership.ApplicationName%2A> . Dadurch können mehrere Anwendungen die gleiche Datenbank verwenden, um Benutzerinformationen zu speichern, ohne dass doppelte Benutzernamen Konflikte auftreten. Alternativ können mehrere ASP.NET-Anwendungen dieselbe Benutzerdatenbank verwenden, indem Sie denselben angeben <xref:System.Web.Security.Membership.ApplicationName%2A> . <xref:System.Web.Security.Membership.ApplicationName%2A>Kann Programm gesteuert oder deklarativ in der Konfiguration für die Webanwendung festgelegt werden.  
  
> [!CAUTION]
>  Da für alle Anforderungen, die von einem Objekt verarbeitet werden, eine einzelne standardmäßige Mitgliedschafts Anbieter Instanz verwendet wird <xref:System.Web.HttpApplication> , können mehrere Anforderungen gleichzeitig ausgeführt werden, und es wird versucht, den <xref:System.Web.Security.Membership.ApplicationName%2A> Eigenschafts Wert festzulegen. Die <xref:System.Web.Security.Membership.ApplicationName%2A> -Eigenschaft ist für mehrere Schreibvorgänge nicht Thread sicher, und <xref:System.Web.Security.Membership.ApplicationName%2A> eine Änderung des Eigenschafts Werts kann zu unerwartetem Verhalten bei mehreren Benutzern einer Anwendung führen. Es wird empfohlen, das Schreiben von Code zu vermeiden, mit dem Benutzer die-Eigenschaft festlegen können <xref:System.Web.Security.Membership.ApplicationName%2A> , sofern dies nicht erforderlich ist. Ein Beispiel für eine Anwendung, in der die-Eigenschaft festgelegt <xref:System.Web.Security.Membership.ApplicationName%2A> werden kann, ist eine administrative Anwendung, die Mitgliedschafts Daten für mehrere Anwendungen verwaltet. Eine solche Anwendung sollte eine Einzelbenutzer Anwendung und keine Webanwendung sein.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt das [Mitgliedschafts](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100)) Element im- `system.web` Abschnitt der Web.config Datei für eine ASP.NET-Anwendung. Er gibt an, dass die Anwendung eine <xref:System.Web.Security.SqlMembershipProvider> -Instanz verwendet und auf festgelegt wird <xref:System.Web.Security.Membership.ApplicationName%2A> `MyApplication` .  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="true"  
      enablePasswordReset="false"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Encrypted"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">Einführung in ASP.NET Mitgliedschaft</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateUser">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Fügt dem Datenspeicher einen neuen Benutzer hinzu.</summary>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">Einführung in ASP.NET Mitgliedschaft</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser CreateUser (string username, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser CreateUser(string username, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.CreateUser(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateUser (username As String, password As String) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ CreateUser(System::String ^ username, System::String ^ password);" />
      <MemberSignature Language="F#" Value="static member CreateUser : string * string -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.CreateUser (username, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Der Benutzername für den neuen Benutzer.</param>
        <param name="password">Das Kennwort für den neuen Benutzer.</param>
        <summary>Fügt dem Datenspeicher einen neuen Benutzer hinzu.</summary>
        <returns>Ein <see cref="T:System.Web.Security.MembershipUser" />-Objekt für den neu erstellten Benutzer.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.CreateUser%2A> Fügt dem Datenspeicher einen neuen Benutzer hinzu und gibt ein- <xref:System.Web.Security.MembershipUser> Objekt für den neu erstellten Benutzer zurück. Wenn beim Erstellen des Benutzers ein Fehler auftritt, wird eine ausgelöst <xref:System.Web.Security.MembershipCreateUserException> . Sie können einen <xref:System.Web.Security.MembershipCreateStatus> Wert aus der- <xref:System.Web.Security.MembershipCreateUserException.StatusCode%2A> Eigenschaft des-Objekts abrufen <xref:System.Web.Security.MembershipCreateUserException> , das angibt, warum die Benutzer Erstellung fehlgeschlagen ist.  
  
 Nachdem ein Mitgliedschafts Benutzer erstellt wurde und Sie über einen Verweis auf ein- <xref:System.Web.Security.MembershipUser> Objekt für diesen Benutzer verfügen, können Sie die Einstellungen für diesen Benutzer mit den <xref:System.Web.Security.MembershipUser> öffentlichen Methoden ändern, z. b. <xref:System.Web.Security.MembershipUser.ChangePasswordQuestionAndAnswer%2A> für Anwendungen, bei denen <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> ist `true` , oder indem Sie die Eigenschaftswerte des <xref:System.Web.Security.MembershipUser> -Objekts festlegen und an die- <xref:System.Web.Security.Membership.UpdateUser%2A> Methode übergeben.  
  
 Wenn ein Benutzer bereits in der Datenquelle für die Anwendung vorhanden ist, können Sie <xref:System.Web.Security.MembershipUser> mit der-Methode ein-Objekt für den vorhandenen Benutzer abrufen <xref:System.Web.Security.Membership.GetUser%2A> .  
  
 <xref:System.Web.Security.SqlMembershipProvider>Bietet eine Option, mit der eine eindeutige e-Mail-Adresse für jeden Benutzer erforderlich ist. Wenn die <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A> -Eigenschaft ist `true` , müssen Sie eine der <xref:System.Web.Security.Membership.CreateUser%2A> -über Ladungen verwenden, mit der Sie eine e-Mail-Adresse für den erstellten Benutzer angeben können. Andernfalls wird eine ausgelöst <xref:System.Web.Security.MembershipCreateUserException> .  
  
 Führende und nachfolgende Leerzeichen werden aus allen Parameterwerten abgeschnitten.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein neuer Benutzer für eine ASP.NET-Anwendung erstellt, die für die Verwendung von Formular Authentifizierung und ASP.NET-Mitgliedschaft konfiguriert ist. Wenn der Benutzer nicht erfolgreich erstellt wurde, wird dem Benutzer eine Meldung angezeigt. Andernfalls wird der Benutzer zur Anmeldeseite für die Anwendung umgeleitet.  
  
> [!IMPORTANT]
>  Dieses Beispiel enthält ein Textfeld, das Benutzereingaben akzeptiert. Dies ist eine potenzielle Sicherheitsbedrohung. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).  
  
 [!code-aspx-csharp[System.Web.Security.Membership#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/createuser2cs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.Membership#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/createuser2vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.Security.MembershipCreateUserException">Der Benutzer wurde nicht erstellt. Überprüfen Sie die <see cref="P:System.Web.Security.MembershipCreateUserException.StatusCode" />-Eigenschaft auf einen <see cref="T:System.Web.Security.MembershipCreateStatus" />-Wert.</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">Einführung in ASP.NET Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="CreateUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser CreateUser (string username, string password, string email);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser CreateUser(string username, string password, string email) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.CreateUser(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateUser (username As String, password As String, email As String) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ CreateUser(System::String ^ username, System::String ^ password, System::String ^ email);" />
      <MemberSignature Language="F#" Value="static member CreateUser : string * string * string -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.CreateUser (username, password, email)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="email" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Der Benutzername für den neuen Benutzer.</param>
        <param name="password">Das Kennwort für den neuen Benutzer.</param>
        <param name="email">Die E-Mail-Adresse für den neuen Benutzer.</param>
        <summary>Fügt dem Datenspeicher einen neuen Benutzer mit einer angegebenen E-Mail-Adresse hinzu.</summary>
        <returns>Ein <see cref="T:System.Web.Security.MembershipUser" />-Objekt für den neu erstellten Benutzer.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.CreateUser%2A> Fügt dem Datenspeicher einen neuen Benutzer hinzu und gibt ein- <xref:System.Web.Security.MembershipUser> Objekt für den neu erstellten Benutzer zurück. Wenn beim Erstellen des Benutzers ein Fehler auftritt, wird eine ausgelöst <xref:System.Web.Security.MembershipCreateUserException> . Sie können einen <xref:System.Web.Security.MembershipCreateStatus> Wert aus der- <xref:System.Web.Security.MembershipCreateUserException.StatusCode%2A> Eigenschaft des-Objekts abrufen <xref:System.Web.Security.MembershipCreateUserException> , das angibt, warum die Benutzer Erstellung fehlgeschlagen ist.  
  
 Nachdem ein Mitgliedschafts Benutzer erstellt wurde und Sie über einen Verweis auf ein- <xref:System.Web.Security.MembershipUser> Objekt für diesen Benutzer verfügen, können Sie die Einstellungen für diesen Benutzer mit den <xref:System.Web.Security.MembershipUser> öffentlichen Methoden ändern, z. b. <xref:System.Web.Security.MembershipUser.ChangePasswordQuestionAndAnswer%2A> für Anwendungen, bei denen <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> ist `true` , oder indem Sie die Eigenschaftswerte des <xref:System.Web.Security.MembershipUser> -Objekts festlegen und an die- <xref:System.Web.Security.Membership.UpdateUser%2A> Methode übergeben.  
  
 Wenn ein Benutzer bereits in der Datenquelle für die Anwendung vorhanden ist, können Sie <xref:System.Web.Security.MembershipUser> mit der-Methode ein-Objekt für den vorhandenen Benutzer abrufen <xref:System.Web.Security.Membership.GetUser%2A> .  
  
 Führende und nachfolgende Leerzeichen werden aus allen Parameterwerten abgeschnitten.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein neuer Benutzer für eine ASP.NET-Anwendung erstellt, die für die Verwendung von Formular Authentifizierung und ASP.NET-Mitgliedschaft konfiguriert ist. Wenn der Benutzer nicht erfolgreich erstellt wurde, wird dem Benutzer eine Meldung angezeigt. Andernfalls wird der Benutzer zur Anmeldeseite für die Anwendung umgeleitet.  
  
> [!IMPORTANT]
>  Dieses Beispiel enthält ein Textfeld, das Benutzereingaben akzeptiert. Dies ist eine potenzielle Sicherheitsbedrohung. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).  
  
 [!code-aspx-csharp[System.Web.Security.Membership#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/createuser1cs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.Membership#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/createuser1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.Security.MembershipCreateUserException">Der Benutzer wurde nicht erstellt. Überprüfen Sie die <see cref="P:System.Web.Security.MembershipCreateUserException.StatusCode" />-Eigenschaft auf einen <see cref="T:System.Web.Security.MembershipCreateStatus" />-Wert.</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">Einführung in ASP.NET Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="CreateUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser CreateUser (string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, out System.Web.Security.MembershipCreateStatus status);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser CreateUser(string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, [out] valuetype System.Web.Security.MembershipCreateStatus&amp; status) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Web.Security.MembershipCreateStatus@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateUser (username As String, password As String, email As String, passwordQuestion As String, passwordAnswer As String, isApproved As Boolean, ByRef status As MembershipCreateStatus) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ CreateUser(System::String ^ username, System::String ^ password, System::String ^ email, System::String ^ passwordQuestion, System::String ^ passwordAnswer, bool isApproved, [Runtime::InteropServices::Out] System::Web::Security::MembershipCreateStatus % status);" />
      <MemberSignature Language="F#" Value="static member CreateUser : string * string * string * string * string * bool * MembershipCreateStatus -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.CreateUser (username, password, email, passwordQuestion, passwordAnswer, isApproved, status)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="email" Type="System.String" />
        <Parameter Name="passwordQuestion" Type="System.String" />
        <Parameter Name="passwordAnswer" Type="System.String" />
        <Parameter Name="isApproved" Type="System.Boolean" />
        <Parameter Name="status" Type="System.Web.Security.MembershipCreateStatus" RefType="out" />
      </Parameters>
      <Docs>
        <param name="username">Der Benutzername für den neuen Benutzer.</param>
        <param name="password">Das Kennwort für den neuen Benutzer.</param>
        <param name="email">Die E-Mail-Adresse für den neuen Benutzer.</param>
        <param name="passwordQuestion">Der Wert der Kennwortfrage für den Mitgliedschaftsbenutzer.</param>
        <param name="passwordAnswer">Der Wert der Kennwortantwort für den Mitgliedschaftsbenutzer.</param>
        <param name="isApproved">Ein boolescher Wert, der angibt, ob die Anmeldung des neuen Benutzers zulässig ist.</param>
        <param name="status">Eine <see cref="T:System.Web.Security.MembershipCreateStatus" />-Enumeration, die das erfolgreiche Erstellen des Benutzers bzw. den Grund dafür angibt, dass der Benutzer nicht erstellt werden konnte.</param>
        <summary>Fügt dem Datenspeicher einen neuen Benutzer mit angegebenen Eigenschaftswerten hinzu und gibt einen Statusparameter zurück, der das erfolgreiche Erstellen des Benutzers bzw. den Grund dafür angibt, dass der Benutzer nicht erstellt werden konnte.</summary>
        <returns>Ein <see cref="T:System.Web.Security.MembershipUser" />-Objekt für den neu erstellten Benutzer. Wenn kein Benutzer erstellt wurde, gibt diese Methode <see langword="null" /> zurück.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.CreateUser%2A> Fügt dem Datenspeicher einen neuen Benutzer hinzu und gibt ein- <xref:System.Web.Security.MembershipUser> Objekt für den neu erstellten Benutzer zurück. Wenn die Benutzer Erstellung fehlschlägt, können Sie einen <xref:System.Web.Security.MembershipCreateStatus> Wert aus dem `status` Output-Parameter abrufen, der angibt, warum die Benutzer Erstellung fehlgeschlagen ist.  
  
 Die <xref:System.Web.Security.Membership.CreateUser%2A> Methode gibt zurück, `null` Wenn `password` eine leere Zeichenfolge ist oder `null` , `username` eine leere Zeichenfolge oder `null` ein Komma (,) ist, `passwordQuestion` nicht ist `null` und eine leere Zeichenfolge ist, oder `passwordAnswer` nicht ist `null` und eine leere Zeichenfolge enthält.  
  
 Nachdem ein Mitgliedschafts Benutzer erstellt wurde und Sie über einen Verweis auf ein- <xref:System.Web.Security.MembershipUser> Objekt für diesen Benutzer verfügen, können Sie die Einstellungen für diesen Benutzer mit den <xref:System.Web.Security.MembershipUser> öffentlichen Methoden ändern und die Eigenschaftswerte des <xref:System.Web.Security.MembershipUser> -Objekts festlegen und dann das- <xref:System.Web.Security.MembershipUser> Objekt an die- <xref:System.Web.Security.Membership.UpdateUser%2A> Methode übergeben.  
  
 Wenn ein Benutzer bereits in der Datenquelle für die Anwendung vorhanden ist, können Sie <xref:System.Web.Security.MembershipUser> mit der-Methode ein-Objekt für den vorhandenen Benutzer abrufen <xref:System.Web.Security.Membership.GetUser%2A> .  
  
 Führende und nachfolgende Leerzeichen werden aus allen Zeichen folgen Parameterwerten entfernt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein neuer Benutzer für eine ASP.NET-Anwendung erstellt, die für die Verwendung von Formular Authentifizierung und ASP.NET-Mitgliedschaft konfiguriert ist. Wenn der Benutzer nicht erfolgreich erstellt wurde, wird dem Benutzer eine Meldung angezeigt. Andernfalls wird der Benutzer zur Anmeldeseite für die Anwendung umgeleitet.  
  
> [!IMPORTANT]
>  Dieses Beispiel enthält ein Textfeld, das Benutzereingaben akzeptiert. Dies ist eine potenzielle Sicherheitsbedrohung. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/CreateUsercs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/CreateUservb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">Einführung in ASP.NET Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="CreateUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser CreateUser (string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, out System.Web.Security.MembershipCreateStatus status);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser CreateUser(string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, [out] valuetype System.Web.Security.MembershipCreateStatus&amp; status) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateUser (username As String, password As String, email As String, passwordQuestion As String, passwordAnswer As String, isApproved As Boolean, providerUserKey As Object, ByRef status As MembershipCreateStatus) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ CreateUser(System::String ^ username, System::String ^ password, System::String ^ email, System::String ^ passwordQuestion, System::String ^ passwordAnswer, bool isApproved, System::Object ^ providerUserKey, [Runtime::InteropServices::Out] System::Web::Security::MembershipCreateStatus % status);" />
      <MemberSignature Language="F#" Value="static member CreateUser : string * string * string * string * string * bool * obj * MembershipCreateStatus -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.CreateUser (username, password, email, passwordQuestion, passwordAnswer, isApproved, providerUserKey, status)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="email" Type="System.String" />
        <Parameter Name="passwordQuestion" Type="System.String" />
        <Parameter Name="passwordAnswer" Type="System.String" />
        <Parameter Name="isApproved" Type="System.Boolean" />
        <Parameter Name="providerUserKey" Type="System.Object" />
        <Parameter Name="status" Type="System.Web.Security.MembershipCreateStatus" RefType="out" />
      </Parameters>
      <Docs>
        <param name="username">Der Benutzername für den neuen Benutzer.</param>
        <param name="password">Das Kennwort für den neuen Benutzer.</param>
        <param name="email">Die E-Mail-Adresse für den neuen Benutzer.</param>
        <param name="passwordQuestion">Der Wert der Kennwortfrage für den Mitgliedschaftsbenutzer.</param>
        <param name="passwordAnswer">Der Wert der Kennwortantwort für den Mitgliedschaftsbenutzer.</param>
        <param name="isApproved">Ein boolescher Wert, der angibt, ob die Anmeldung des neuen Benutzers zulässig ist.</param>
        <param name="providerUserKey">Der Benutzerbezeichner für den Benutzer, der im Mitgliedschaftsdatenspeicher gespeichert werden soll.</param>
        <param name="status">Eine <see cref="T:System.Web.Security.MembershipCreateStatus" />-Enumeration, die das erfolgreiche Erstellen des Benutzers bzw. den Grund dafür angibt, dass der Benutzer nicht erstellt werden konnte.</param>
        <summary>Fügt dem Datenspeicher einen neuen Benutzer mit angegebenen Eigenschaftswerten und einem eindeutigen Bezeichner hinzu und gibt einen Statusparameter zurück, der das erfolgreiche Erstellen des Benutzers bzw. den Grund dafür angibt, dass der Benutzer nicht erstellt werden konnte.</summary>
        <returns>Ein <see cref="T:System.Web.Security.MembershipUser" />-Objekt für den neu erstellten Benutzer. Wenn kein Benutzer erstellt wurde, gibt diese Methode <see langword="null" /> zurück.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.CreateUser%2A> Fügt dem Datenspeicher einen neuen Benutzer hinzu und gibt ein- <xref:System.Web.Security.MembershipUser> Objekt für den neu erstellten Benutzer zurück. Wenn die Benutzer Erstellung fehlschlägt, können Sie einen <xref:System.Web.Security.MembershipCreateStatus> Wert aus dem `status` Output-Parameter abrufen, der angibt, warum die Benutzer Erstellung fehlgeschlagen ist. Sie können einen eindeutigen Bezeichner für den Benutzer angeben, z. b. einen Primärschlüssel Wert für eine Datenbank, indem Sie den- `providerUserKey` Parameter verwenden.  
  
 Die <xref:System.Web.Security.Membership.CreateUser%2A> Methode gibt zurück, `null` Wenn `password` eine leere Zeichenfolge ist oder `null` , `username` eine leere Zeichenfolge oder `null` ein Komma (,) ist, `passwordQuestion` nicht ist `null` und eine leere Zeichenfolge enthält, oder `passwordAnswer` nicht `null` und eine leere Zeichenfolge enthält.  
  
 Nachdem ein Mitgliedschafts Benutzer erstellt wurde und Sie über einen Verweis auf ein- <xref:System.Web.Security.MembershipUser> Objekt für diesen Benutzer verfügen, können Sie die Einstellungen für diesen Benutzer mit den <xref:System.Web.Security.MembershipUser> öffentlichen Methoden ändern und die Eigenschaftswerte des <xref:System.Web.Security.MembershipUser> -Objekts festlegen und dann das- <xref:System.Web.Security.MembershipUser> Objekt an die- <xref:System.Web.Security.Membership.UpdateUser%2A> Methode übergeben.  
  
 Wenn ein Benutzer bereits in der Datenquelle für die Anwendung vorhanden ist, können Sie <xref:System.Web.Security.MembershipUser> mit der-Methode ein-Objekt für den vorhandenen Benutzer abrufen <xref:System.Web.Security.Membership.GetUser%2A> .  
  
 Führende und nachfolgende Leerzeichen werden aus allen Zeichen folgen Parameterwerten entfernt.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">Einführung in ASP.NET Mitgliedschaft</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="DeleteUser">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Löscht einen Benutzer aus der Datenbank.</summary>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">Einführung in ASP.NET Mitgliedschaft</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeleteUser">
      <MemberSignature Language="C#" Value="public static bool DeleteUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool DeleteUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.DeleteUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DeleteUser (username As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool DeleteUser(System::String ^ username);" />
      <MemberSignature Language="F#" Value="static member DeleteUser : string -&gt; bool" Usage="System.Web.Security.Membership.DeleteUser username" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Der Name des zu löschenden Benutzers.</param>
        <summary>Löscht einen Benutzer und alle zugehörigen Benutzerdaten aus der Datenbank.</summary>
        <returns><see langword="true" />, wenn der Benutzer gelöscht wurde, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Benutzerdaten, die in der-Datenbank für die <xref:System.Web.Security.Roles> <xref:System.Web.HttpContext.Profile%2A> -, <xref:System.Web.UI.WebControls.WebParts.WebPart> -oder-Personalisierung gespeichert sind, werden ebenfalls gelöscht, wenn Sie die <xref:System.Web.Security.SqlRoleProvider> -, <xref:System.Web.Profile.SqlProfileProvider> -und- <xref:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider> Objekte für die Datenspeicherung verwenden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel werden der aktuell angemeldete Benutzer und alle zugehörigen Daten gelöscht.  
  
 [!code-aspx-csharp[System.Web.Security.Membership#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/DeleteUsercs.aspx#8)]
 [!code-aspx-vb[System.Web.Security.Membership#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/DeleteUservb.aspx#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="username" /> ist eine leere Zeichenfolge oder enthält ein Komma (,).</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="username" /> ist <see langword="null" />.</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">Einführung in ASP.NET Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteUser">
      <MemberSignature Language="C#" Value="public static bool DeleteUser (string username, bool deleteAllRelatedData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool DeleteUser(string username, bool deleteAllRelatedData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.DeleteUser(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DeleteUser (username As String, deleteAllRelatedData As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool DeleteUser(System::String ^ username, bool deleteAllRelatedData);" />
      <MemberSignature Language="F#" Value="static member DeleteUser : string * bool -&gt; bool" Usage="System.Web.Security.Membership.DeleteUser (username, deleteAllRelatedData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="deleteAllRelatedData" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">Der Name des zu löschenden Benutzers.</param>
        <param name="deleteAllRelatedData"><see langword="true" />, um mit dem Benutzer zusammenhängende Daten aus der Datenbank zu löschen; <see langword="false" />, um die mit dem Benutzer zusammenhängenden Daten in der Datenbank zu belassen.</param>
        <summary>Löscht einen Benutzer aus der Datenbank.</summary>
        <returns><see langword="true" />, wenn der Benutzer gelöscht wurde, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Benutzer, die aus der Datenbank gelöscht wurden, werden nur aus dem konfigurierten gelöscht `applicationName` .  
  
 Wenn `deleteAllRelatedData` `true` den Wert hat, werden Benutzerdaten, die in der Datenbank für die <xref:System.Web.Security.Roles> <xref:System.Web.HttpContext.Profile%2A> -,-oder <xref:System.Web.UI.WebControls.WebParts.WebPart> -Personalisierung gespeichert sind, auch gelöscht, wenn Sie die <xref:System.Web.Security.SqlRoleProvider> <xref:System.Web.Profile.SqlProfileProvider> -,-und- <xref:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider> Objekte für die Datenspeicherung verwenden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel werden der aktuell angemeldete Benutzer und alle zugehörigen Daten gelöscht.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/DeleteUsercs.aspx#6)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/DeleteUservb.aspx#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="username" /> ist eine leere Zeichenfolge oder enthält ein Komma (,).</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="username" /> ist <see langword="null" />.</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">Einführung in ASP.NET Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="EnablePasswordReset">
      <MemberSignature Language="C#" Value="public static bool EnablePasswordReset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool EnablePasswordReset" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.EnablePasswordReset" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property EnablePasswordReset As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool EnablePasswordReset { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EnablePasswordReset : bool" Usage="System.Web.Security.Membership.EnablePasswordReset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der aktuelle Mitgliedschaftsanbieter so konfiguriert ist, dass Benutzer ihre Kennwörter zurücksetzen können.</summary>
        <value><see langword="true" />, wenn der Mitgliedschaftsanbieter das Zurücksetzen von Kennwörtern unterstützt, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Kenn Wort Zurücksetzung ist die Fähigkeit der ASP.NET-Mitgliedschaft, das aktuelle Kennwort für einen Benutzernamen durch ein neues, zufällig generiertes Kennwort zu ersetzen, wenn ein Benutzer sein Kennwort vergessen hat oder das aktuelle Kennwort nicht mehr gültig ist. Dies ist besonders nützlich, wenn das Kenn Wort Format auf festgelegt ist <xref:System.Web.Security.MembershipPasswordFormat.Hashed> , da Benutzer keine Hashwerte für das Hashwert abrufen können.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt das [Mitgliedschafts](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100)) Element im- `system.web` Abschnitt der Web.config Datei für eine ASP.NET-Anwendung. Er gibt an, dass die Anwendung eine Instanz von verwendet und die Kenn Wort Zurücksetzung <xref:System.Web.Security.SqlMembershipProvider> aktiviert.  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="false"  
      enablePasswordReset="true"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Hashed"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 Im folgenden Codebeispiel wird zuerst überprüft, ob <xref:System.Web.Security.Membership.EnablePasswordReset%2A> ist. Anschließend wird das `true` Kennwort eines Benutzers zurückgesetzt, und das neue automatisch generierte Kennwort wird zurückgegeben.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ResetPasswordcs.aspx#8)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ResetPasswordvb.aspx#8)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">Einführung in ASP.NET Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="EnablePasswordRetrieval">
      <MemberSignature Language="C#" Value="public static bool EnablePasswordRetrieval { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool EnablePasswordRetrieval" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.EnablePasswordRetrieval" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property EnablePasswordRetrieval As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool EnablePasswordRetrieval { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EnablePasswordRetrieval : bool" Usage="System.Web.Security.Membership.EnablePasswordRetrieval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der aktuelle Mitgliedschaftsanbieter so konfiguriert ist, dass Benutzer ihre Kennwörter abrufen können.</summary>
        <value><see langword="true" />, wenn der Mitgliedschaftsanbieter das Abrufen von Kennwörtern unterstützt, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn <xref:System.Web.Security.Membership.EnablePasswordRetrieval%2A> ist `false` , kann der zugrunde liegende Mitgliedschafts Anbieter eine auslösen <xref:System.Web.HttpException> .  
  
 Die im .NET Framework enthaltenen Anbieter unterstützen mehrere Kenn Wort Formate, um die Kenn Wort Sicherheit zu verbessern. Wenn das Kenn Wort Format auf festgelegt ist <xref:System.Web.Security.MembershipPasswordFormat.Hashed> , können Benutzer Ihr vorhandenes Kennwort nicht aus der Datenbank abrufen. Das Kenn <xref:System.Web.Security.MembershipPasswordFormat.Hashed> Wort Format bietet eine unidirektionale Codierung von Kenn Wort Werten. Kenn Wörter werden "Hashwert" und im Vergleich zu den in der Datenbank gespeicherten Werten für die Authentifizierung verwendet. "Hashed"-Werte können nicht als nicht codiert werden, um den ursprünglichen Kenn Wort Wert abzurufen. Weitere Informationen finden Sie unter <xref:System.Web.Security.MembershipPasswordFormat>.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt das [Mitgliedschafts](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100)) Element im- `system.web` Abschnitt der Web.config Datei für eine ASP.NET-Anwendung. Er gibt an, dass die Anwendung eine Instanz von verwendet und das Abrufen von Kenn <xref:System.Web.Security.SqlMembershipProvider> Wörtern ermöglicht.  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="true"  
      enablePasswordReset="false"  
      requiresQuestionAndAnswer="false"  
      passwordFormat="Encrypted"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 Im folgenden Codebeispiel wird zuerst überprüft, ob <xref:System.Web.Security.Membership.EnablePasswordRetrieval%2A> ist. `true` anschließend wird das Kennwort für einen angegebenen Benutzernamen abgerufen und an die e-Mail-Adresse des angegebenen Benutzers gesendet.  
  
> [!IMPORTANT]
>  Das Zurückgeben eines Kennworts in Klartext per e-Mail wird für Websites, die ein hohes Maß an Sicherheit erfordern, nicht empfohlen. Für Standorte mit hoher Sicherheit wird empfohlen, dass Sie Kenn Wörter mithilfe der Verschlüsselung (z. b. SSL) zurückgeben.  
>   
>  Dieses Beispiel enthält ein Textfeld, das Benutzereingaben akzeptiert. Dies ist eine potenzielle Sicherheitsbedrohung. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/RetrievePasswordcs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/RetrievePasswordvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">Einführung in ASP.NET Mitgliedschaft</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindUsersByEmail">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ruft eine Auflistung von Mitgliedschaftsbenutzern ab, bei denen die E-Mail-Adresse die zu vergleichende angegebene E-Mail-Adresse enthält.</summary>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">Einführung in ASP.NET Mitgliedschaft</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindUsersByEmail">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUserCollection FindUsersByEmail (string emailToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUserCollection FindUsersByEmail(string emailToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.FindUsersByEmail(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindUsersByEmail (emailToMatch As String) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUserCollection ^ FindUsersByEmail(System::String ^ emailToMatch);" />
      <MemberSignature Language="F#" Value="static member FindUsersByEmail : string -&gt; System.Web.Security.MembershipUserCollection" Usage="System.Web.Security.Membership.FindUsersByEmail emailToMatch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="emailToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="emailToMatch">Die gesuchte E-Mail-Adresse.</param>
        <summary>Ruft eine Auflistung von Mitgliedschaftsbenutzern ab, bei denen die E-Mail-Adresse die zu vergleichende angegebene E-Mail-Adresse enthält.</summary>
        <returns>Eine <see cref="T:System.Web.Security.MembershipUserCollection" />, die alle Benutzer enthält, die dem <paramref name="emailToMatch" />-Parameter entsprechen.  
  
Beim <paramref name="emailToMatch" />-Parameterwert werden führende und nachstehende Leerzeichen abgeschnitten.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.FindUsersByEmail%2A>gibt eine Liste der Mitgliedschafts Benutzer zurück, bei denen die e-Mail-Adresse mit der `emailToMatch` für den konfigurierten angegebenen `applicationName`  
  
 <xref:System.Web.Security.SqlMembershipProvider>Führt die Suche mit einer LIKE-Klausel für den `emailToMatch` Parameter aus. Alle Platzhalter, die von SQL Server in like-Klauseln unterstützt werden, können im `emailToMatch` Parameterwert verwendet werden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die- <xref:System.Web.Security.Membership.FindUsersByEmail%2A> Methode verwendet, um Mitgliedschafts Benutzerinformationen aus der Mitgliedschafts Datenbank basierend auf Benutzereingaben abzurufen, und die Ergebnisse werden in Datenseiten angezeigt.  
  
> [!IMPORTANT]
>  Dieses Beispiel enthält ein Textfeld, das Benutzereingaben akzeptiert. Dies ist eine potenzielle Sicherheitsbedrohung. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).  
  
 [!code-aspx-csharp[System.Web.Security.Membership#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/FindUsersByEmailcs.aspx#9)]
 [!code-aspx-vb[System.Web.Security.Membership#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/FindUsersByEmailvb.aspx#9)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">Einführung in ASP.NET Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="FindUsersByEmail">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUserCollection FindUsersByEmail (string emailToMatch, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUserCollection FindUsersByEmail(string emailToMatch, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindUsersByEmail (emailToMatch As String, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUserCollection ^ FindUsersByEmail(System::String ^ emailToMatch, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="static member FindUsersByEmail : string * int * int * int -&gt; System.Web.Security.MembershipUserCollection" Usage="System.Web.Security.Membership.FindUsersByEmail (emailToMatch, pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="emailToMatch" Type="System.String" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="emailToMatch">Die gesuchte E-Mail-Adresse.</param>
        <param name="pageIndex">Der Index der zurückzugebenden Ergebnisseite. <paramref name="pageIndex" /> ist nullbasiert.</param>
        <param name="pageSize">Die Größe der zurückzugebenden Ergebnisseite.</param>
        <param name="totalRecords">Die Gesamtanzahl übereinstimmender Benutzer.</param>
        <summary>Ruft eine Auflistung von Mitgliedschaftsbenutzern auf einer Datenseite ab, deren E-Mail-Adresse die angegebene E-Mail-Adresse enthält.</summary>
        <returns>Eine <see cref="T:System.Web.Security.MembershipUserCollection" />, die eine Seite mit <paramref name="pageSize" /><see cref="T:System.Web.Security.MembershipUser" />-Objekten enthält, die auf der durch <paramref name="pageIndex" /> angegebenen Seite beginnen.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.FindUsersByEmail%2A>gibt eine Liste der Mitgliedschafts Benutzer zurück, bei denen die e-Mail-Adresse mit der `emailToMatch` für den konfigurierten angegebenen `applicationName`  
  
 <xref:System.Web.Security.SqlMembershipProvider>Führt die Suche mit einer LIKE-Klausel für den `emailToMatch` Parameter aus. Alle Platzhalter, die von SQL Server in like-Klauseln unterstützt werden, können im `emailToMatch` Parameterwert verwendet werden.  
  
 Die von zurückgegebenen Ergebnisse <xref:System.Web.Security.Membership.FindUsersByEmail%2A> werden durch den `pageIndex` -Parameter und den- `pageSize` Parameter eingeschränkt. Der- `pageSize` Parameter gibt die maximale Anzahl von- <xref:System.Web.Security.MembershipUser> Objekten an, die in der zurückgegeben werden <xref:System.Web.Security.MembershipUserCollection> . Der- `pageIndex` Parameter identifiziert, welche Ergebnisseite zurückgegeben werden soll, wobei 0 die erste Seite angibt. Der- `totalRecords` Parameter ist ein `out` Parameter, der auf die Gesamtzahl der Mitgliedschafts Benutzer festgelegt wird, die mit dem Wert übereinstimmen `emailToMatch` . Wenn z. b. 13 Benutzer gefunden `emailToMatch` werden, bei denen ein Teil von oder die gesamte e-Mail-Adresse übereinstimmt, und der `pageIndex` Wert 1 mit einem `pageSize` von 5 war, würde die zurückgegebene-enumerationszeichen <xref:System.Web.Security.MembershipUserCollection> den sechsten Wert enthalten `totalRecords` wird auf 13 festgelegt.  
  
 Beim `emailToMatch`-Parameterwert werden führende und nachstehende Leerzeichen abgeschnitten.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die- <xref:System.Web.Security.Membership.FindUsersByEmail%2A> Methode verwendet, um Mitgliedschafts Benutzerinformationen aus der Mitgliedschafts Datenbank basierend auf Benutzereingaben abzurufen, und die Ergebnisse werden in Datenseiten angezeigt.  
  
> [!IMPORTANT]
>  Dieses Beispiel enthält ein Textfeld, das Benutzereingaben akzeptiert. Dies ist eine potenzielle Sicherheitsbedrohung. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#13](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/FindUsersByEmailcs.aspx#13)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/FindUsersByEmailvb.aspx#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="pageIndex" /> ist kleiner als Null.  
  
- oder - 
 <paramref name="pageSize" /> ist kleiner als 1.</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">Einführung in ASP.NET Mitgliedschaft</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindUsersByName">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ruft eine Auflistung von Mitgliedschaftsbenutzern ab, deren Benutzername den angegebenen Vergleichsbenutzernamen enthält.</summary>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">Einführung in ASP.NET Mitgliedschaft</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindUsersByName">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUserCollection FindUsersByName (string usernameToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUserCollection FindUsersByName(string usernameToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.FindUsersByName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindUsersByName (usernameToMatch As String) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUserCollection ^ FindUsersByName(System::String ^ usernameToMatch);" />
      <MemberSignature Language="F#" Value="static member FindUsersByName : string -&gt; System.Web.Security.MembershipUserCollection" Usage="System.Web.Security.Membership.FindUsersByName usernameToMatch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernameToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="usernameToMatch">Der zu suchende Benutzername.</param>
        <summary>Ruft eine Auflistung von Mitgliedschaftsbenutzern ab, deren Benutzername den angegebenen Vergleichsbenutzernamen enthält.</summary>
        <returns>Eine <see cref="T:System.Web.Security.MembershipUserCollection" />, die alle Benutzer enthält, die dem <paramref name="usernameToMatch" />-Parameter entsprechen.  
  
Beim <paramref name="usernameToMatch" />-Parameterwert werden führende und nachstehende Leerzeichen abgeschnitten.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A> gibt eine Liste der Mitgliedschafts Benutzer zurück, bei denen der Benutzername mit dem `usernameToMatch` für den konfigurierten angegebenen übereinstimmt `applicationName` .  
  
 <xref:System.Web.Security.SqlMembershipProvider>Führt die Suche mit einer LIKE-Klausel für den `usernameToMatch` Parameter aus. Alle Platzhalter, die von SQL Server in like-Klauseln unterstützt werden, können im `usernameToMatch` Parameterwert verwendet werden.  
  
 Führende und nachfolgende Leerzeichen werden aus allen Parameterwerten abgeschnitten.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die- <xref:System.Web.Security.Membership.FindUsersByName%2A> Methode verwendet, um Mitgliedschafts Benutzerinformationen aus der Mitgliedschafts Datenbank basierend auf Benutzereingaben abzurufen, und die Ergebnisse werden in Datenseiten angezeigt.  
  
> [!IMPORTANT]
>  Dieses Beispiel enthält ein Textfeld, das Benutzereingaben akzeptiert. Dies ist eine potenzielle Sicherheitsbedrohung. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).  
  
 [!code-aspx-csharp[System.Web.Security.Membership#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/FindUsersByNamecs.aspx#10)]
 [!code-aspx-vb[System.Web.Security.Membership#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/FindUsersByNamevb.aspx#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="usernameToMatch" /> ist eine leere Zeichenfolge.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="usernameToMatch" /> ist <see langword="null" />.</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">Einführung in ASP.NET Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="FindUsersByName">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUserCollection FindUsersByName (string usernameToMatch, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUserCollection FindUsersByName(string usernameToMatch, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindUsersByName (usernameToMatch As String, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUserCollection ^ FindUsersByName(System::String ^ usernameToMatch, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="static member FindUsersByName : string * int * int * int -&gt; System.Web.Security.MembershipUserCollection" Usage="System.Web.Security.Membership.FindUsersByName (usernameToMatch, pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernameToMatch" Type="System.String" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="usernameToMatch">Der zu suchende Benutzername.</param>
        <param name="pageIndex">Der Index der zurückzugebenden Ergebnisseite. <paramref name="pageIndex" /> ist nullbasiert.</param>
        <param name="pageSize">Die Größe der zurückzugebenden Ergebnisseite.</param>
        <param name="totalRecords">Die Gesamtanzahl übereinstimmender Benutzer.</param>
        <summary>Ruft eine Auflistung von Mitgliedschaftsbenutzern auf einer Datenseite ab, deren Benutzername den angegebenen Vergleichsbenutzernamen enthält.</summary>
        <returns>Eine <see cref="T:System.Web.Security.MembershipUserCollection" />, die eine Seite mit <paramref name="pageSize" /><see cref="T:System.Web.Security.MembershipUser" />-Objekten enthält, die auf der durch <paramref name="pageIndex" /> angegebenen Seite beginnen.  
  
Beim <paramref name="usernameToMatch" />-Parameterwert werden führende und nachstehende Leerzeichen abgeschnitten.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A> gibt eine Liste der Mitgliedschafts Benutzer zurück, bei denen der Benutzername mit dem `usernameToMatch` für den konfigurierten angegebenen übereinstimmt `applicationName` .  
  
 <xref:System.Web.Security.SqlMembershipProvider>Führt die Suche mit einer LIKE-Klausel für den `usernameToMatch` Parameter aus. Alle Platzhalter, die von SQL Server in like-Klauseln unterstützt werden, können im `usernameToMatch` Parameterwert verwendet werden.  
  
 Die von zurückgegebenen Ergebnisse <xref:System.Web.Security.Membership.FindUsersByName%2A> werden durch den `pageIndex` -Parameter und den- `pageSize` Parameter eingeschränkt. Der- `pageSize` Parameter gibt die maximale Anzahl von- <xref:System.Web.Security.MembershipUser> Objekten an, die in der zurückgegeben werden <xref:System.Web.Security.MembershipUserCollection> . Der- `pageIndex` Parameter identifiziert, welche Ergebnisseite zurückgegeben werden soll, wobei 0 die erste Seite angibt. Der- `totalRecords` Parameter ist ein `out` Parameter, der auf die Gesamtzahl der Mitgliedschafts Benutzer festgelegt wird, die mit dem Wert übereinstimmen `usernameToMatch` . Wenn z. b. 13 Benutzer gefunden werden, bei denen `usernameToMatch` ein Teil von oder der gesamte Benutzername gefunden wurde, und der `pageIndex` Wert 1 mit einem `pageSize` von 5 war, würde die zurückgegebene-enumerationszeichen <xref:System.Web.Security.MembershipUserCollection> den sechsten Wert enthalten, der zurückgegeben wird. `totalRecords` wird auf 13 festgelegt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die- <xref:System.Web.Security.Membership.FindUsersByName%2A> Methode verwendet, um Mitgliedschafts Benutzerinformationen aus der Mitgliedschafts Datenbank basierend auf Benutzereingaben abzurufen, und die Ergebnisse werden in Datenseiten angezeigt.  
  
> [!IMPORTANT]
>  Dieses Beispiel enthält ein Textfeld, das Benutzereingaben akzeptiert. Dies ist eine potenzielle Sicherheitsbedrohung. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#12](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/FindUsersByNamecs.aspx#12)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/FindUsersByNamevb.aspx#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="usernameToMatch" /> ist eine leere Zeichenfolge.  
  
- oder - 
 <paramref name="pageIndex" /> ist kleiner als Null.  
  
- oder - 
 <paramref name="pageSize" /> ist kleiner als 1.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="usernameToMatch" /> ist <see langword="null" />.</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">Einführung in ASP.NET Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="GeneratePassword">
      <MemberSignature Language="C#" Value="public static string GeneratePassword (int length, int numberOfNonAlphanumericCharacters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GeneratePassword(int32 length, int32 numberOfNonAlphanumericCharacters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GeneratePassword(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GeneratePassword (length As Integer, numberOfNonAlphanumericCharacters As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GeneratePassword(int length, int numberOfNonAlphanumericCharacters);" />
      <MemberSignature Language="F#" Value="static member GeneratePassword : int * int -&gt; string" Usage="System.Web.Security.Membership.GeneratePassword (length, numberOfNonAlphanumericCharacters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="numberOfNonAlphanumericCharacters" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="length">Die Anzahl der Zeichen im generierten Kennwort. Die Länge muss zwischen 1 und 128 Zeichen betragen.</param>
        <param name="numberOfNonAlphanumericCharacters">Die Mindestanzahl von nicht alphanumerischen Zeichen (wie z.B. @, #, !, %, &amp; usw.) im generierten Kennwort.</param>
        <summary>Generiert nach dem Zufallsprinzip ein Kennwort mit der angegebenen Länge.</summary>
        <returns>Ein nach dem Zufallsprinzip generiertes Kennwort mit der angegebenen Länge.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.Membership.GeneratePassword%2A> -Methode wird verwendet, um ein zufälliges Kennwort zu generieren, und wird am häufigsten von der <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> von einem Mitgliedschafts Anbieter implementierten Methode verwendet, um das Kennwort eines Benutzers auf ein neues temporäres Kennwort zurückzusetzen.  
  
 Das generierte Kennwort enthält nur alphanumerische Zeichen und die folgenden Interpunktions Zeichen: `!@#$%^&*()_-+=[{]};:<>|./?` . Im generierten Kennwort sind keine ausgeblendeten oder nicht druckbaren Steuerzeichen enthalten.  
  
> [!NOTE]
>  Das von der-Methode erstellte Zufalls Kennwort <xref:System.Web.Security.Membership.GeneratePassword%2A> ist nicht garantiert, dass der reguläre Ausdruck in der-Eigenschaft übergeben wird <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A> . Das zufällige Kennwort erfüllt jedoch die Kriterien, die von der <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A> -Eigenschaft und dem-Parameter festgelegt werden `numberOfNonAlphanumericCharacters` .  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein neuer Mitgliedschafts Benutzer erstellt und die- <xref:System.Web.Security.Membership.GeneratePassword%2A> Methode verwendet, um das Kennwort für den neuen Benutzer mit einem zufälligen Wert zu initialisieren, der dem Benutzer angezeigt wird.  
  
> [!IMPORTANT]
>  Dieses Beispiel enthält ein Textfeld, das Benutzereingaben akzeptiert. Dies ist eine potenzielle Sicherheitsbedrohung. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).  
  
 [!code-aspx-csharp[System.Web.Security.Membership#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/GeneratePasswordcs.aspx#5)]
 [!code-aspx-vb[System.Web.Security.Membership#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/GeneratePasswordvb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="length" /> ist kleiner als 1 oder größer als 128 – oder – 
 <paramref name="numberOfNonAlphanumericCharacters" /> ist kleiner als 0 oder größer als <paramref name="length" />.</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">Einführung in ASP.NET Mitgliedschaft</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAllUsers">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ruft eine Auflistung der Benutzer in der Datenbank ab.</summary>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">Einführung in ASP.NET Mitgliedschaft</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAllUsers">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUserCollection GetAllUsers ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUserCollection GetAllUsers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetAllUsers" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllUsers () As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUserCollection ^ GetAllUsers();" />
      <MemberSignature Language="F#" Value="static member GetAllUsers : unit -&gt; System.Web.Security.MembershipUserCollection" Usage="System.Web.Security.Membership.GetAllUsers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft eine Auflistung aller Benutzer in der Datenbank ab.</summary>
        <returns>Eine <see cref="T:System.Web.Security.MembershipUserCollection" /> von <see cref="T:System.Web.Security.MembershipUser" />-Objekten, die alle Benutzer in der Datenbank darstellen.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetAllUsers%2A> Gibt die Informationen für alle Mitgliedschafts Benutzer für eine Anwendung als Auflistung von- <xref:System.Web.Security.MembershipUser> Objekten zurück. Gehen Sie bei der Verwendung der- <xref:System.Web.Security.Membership.GetAllUsers%2A> Methode mit sehr großen Benutzer Datenbanken vorsichtig vor, da die <xref:System.Web.Security.MembershipUserCollection> auf Ihrer ASP.NET-Seite resultierende Leistung die Leistung der Anwendung beeinträchtigen kann.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine Liste der Benutzer mit der Anzahl der Benutzer, die derzeit online sind, zurückgegeben.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ShowUserscs.aspx#5)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ShowUsersvb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">Einführung in ASP.NET Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="GetAllUsers">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUserCollection GetAllUsers (int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUserCollection GetAllUsers(int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetAllUsers(System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllUsers (pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUserCollection ^ GetAllUsers(int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="static member GetAllUsers : int * int * int -&gt; System.Web.Security.MembershipUserCollection" Usage="System.Web.Security.Membership.GetAllUsers (pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pageIndex">Der Index der zurückzugebenden Ergebnisseite. Verwenden Sie 0 (null), um die erste Seite anzugeben.</param>
        <param name="pageSize">Die Größe der zurückzugebenden Ergebnisseite. <paramref name="pageIndex" /> ist nullbasiert.</param>
        <param name="totalRecords">Die Gesamtanzahl der Benutzer.</param>
        <summary>Ruft eine Auflistung aller Benutzer in der Datenbank in Datenseiten ab.</summary>
        <returns>Eine <see cref="T:System.Web.Security.MembershipUserCollection" /> von <see cref="T:System.Web.Security.MembershipUser" />-Objekten, die alle Benutzer in der Datenbank für den konfigurierten <see langword="applicationName" /> darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die von zurückgegebenen Ergebnisse <xref:System.Web.Security.Membership.GetAllUsers%2A> werden durch den `pageIndex` -Parameter und den- `pageSize` Parameter eingeschränkt. Der- `pageSize` Parameter gibt die maximale Anzahl von- <xref:System.Web.Security.MembershipUser> Objekten an, die in der zurückgegeben werden <xref:System.Web.Security.MembershipUserCollection> . Der- `pageIndex` Parameter identifiziert, welche Ergebnisseite zurückgegeben werden soll, wobei 0 die erste Seite angibt. Der- `totalRecords` Parameter ist ein `out` Parameter, der auf die Gesamtzahl der Mitgliedschafts Benutzer für den konfigurierten festgelegt ist `applicationName` . Wenn z. b. 13 Benutzer für den konfigurierten vorhanden sind `applicationName` und der `pageIndex` Wert 1 mit einem `pageSize` von 5 ist, <xref:System.Web.Security.MembershipUserCollection> enthält die zurückgegebene den sechsten bis zum zehnten zurückgegebenen Benutzer. `totalRecords` wird auf 13 festgelegt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine Liste von Benutzern in Datenseiten mit der Anzahl der derzeit Online-Benutzer zurückgegeben.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ShowUserscs.aspx#5)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ShowUsersvb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="pageIndex" /> ist kleiner als Null.  
  
- oder - 
 <paramref name="pageSize" /> ist kleiner als 1.</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">Einführung in ASP.NET Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="GetNumberOfUsersOnline">
      <MemberSignature Language="C#" Value="public static int GetNumberOfUsersOnline ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetNumberOfUsersOnline() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetNumberOfUsersOnline" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNumberOfUsersOnline () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetNumberOfUsersOnline();" />
      <MemberSignature Language="F#" Value="static member GetNumberOfUsersOnline : unit -&gt; int" Usage="System.Web.Security.Membership.GetNumberOfUsersOnline " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft die Anzahl der Benutzer ab, die gegenwärtig auf eine Anwendung zugreifen.</summary>
        <returns>Die Anzahl der Benutzer, die gegenwärtig auf eine Anwendung zugreifen.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline%2A> Gibt die Anzahl der Benutzer für den aktuellen zurück, <xref:System.Web.Security.Membership.ApplicationName%2A> wobei das Datum der letzten Aktivität größer ist als die aktuelle Zeit, die kleiner ist <xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A> . Der Datums-/Uhrzeitstempel der letzten Aktivität wird auf das aktuelle Datum und die Uhrzeit aktualisiert, zu der die Benutzer Anmelde Informationen über die-Methode oder die-Methode überprüft werden, <xref:System.Web.Security.Membership.ValidateUser%2A> <xref:System.Web.Security.Membership.UpdateUser%2A> oder wenn ein Aufruf einer Überladung <xref:System.Web.Security.Membership.GetUser%2A> ohne Parameter oder mit dem-Parameter verwendet wird, `userIsOnline` um anzugeben, dass der Datums-/Uhrzeitstempel aktualisiert werden soll.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine Liste der Benutzer mit der Anzahl der Benutzer, die derzeit online sind, zurückgegeben.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ShowUserscs.aspx#5)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ShowUsersvb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">Einführung in ASP.NET Mitgliedschaft</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUser">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ruft die Informationen für einen Mitgliedschaftsbenutzer aus der Datenquelle ab.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser GetUser ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser GetUser() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetUser" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUser () As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ GetUser();" />
      <MemberSignature Language="F#" Value="static member GetUser : unit -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.GetUser " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft die Informationen aus der Datenquelle ab und aktualisiert den Datums-/Zeitstempel der letzten Aktivität für den derzeit angemeldeten Mitgliedschaftsbenutzer.</summary>
        <returns>Ein <see cref="T:System.Web.Security.MembershipUser" />-Objekt, das den derzeit angemeldeten Benutzer darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetUser> Ruft die Benutzerinformationen aus der Datenquelle ab und erstellt ein- <xref:System.Web.Security.MembershipUser> Objekt, das mit den zurückgegebenen Daten gefüllt ist. Wenn Sie eine der- <xref:System.Web.Security.Membership.GetUser%2A> über Ladungen verwenden, die keinen- `username` Parameter annimmt, werden <xref:System.Web.Security.Membership.GetUser%2A> die Informationen für den aktuell angemeldeten Mitgliedschafts Benutzer zurückgegeben. Der aktuell angemeldete Mitgliedschafts Benutzer wird von der <xref:System.Security.Principal.IIdentity.Name%2A> des Benutzers im aktuellen identifiziert <xref:System.Web.HttpContext> .  
  
 Sie können auch angeben, ob Sie <xref:System.Web.Security.Membership.GetUser%2A> den Datums-/Zeitstempel der letzten Aktivität für den abgerufenen Benutzer mit dem- `userIsOnline` Parameter aktualisieren möchten. Der <xref:System.Web.Security.Membership.GetUser%2A> -über Ladungen, die keinen- `userIsOnline` Parameter verwenden, `GetUser()` aktualisiert implizit den Datums-/Zeitstempel der letzten Aktivität für den Benutzer. `GetUser(System.String)` und `GetUser(System.Object)` nicht.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird der Datums-/Zeitstempel der letzten Aktivität für den aktuell angemeldeten Mitgliedschafts Benutzer aktualisiert, und der Benutzername wird auf der ASP.NET-Seite angezeigt.  
  
 [!code-aspx-csharp[System.Web.Security.Membership#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/default1cs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.Membership#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/default1vb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Kein Mitgliedschaftsbenutzer ist derzeit angemeldet.</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">Einführung in ASP.NET Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser GetUser (bool userIsOnline);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser GetUser(bool userIsOnline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetUser(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUser (userIsOnline As Boolean) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ GetUser(bool userIsOnline);" />
      <MemberSignature Language="F#" Value="static member GetUser : bool -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.GetUser userIsOnline" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userIsOnline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="userIsOnline">Wenn der Wert <see langword="true" /> ist, wird der Datums-/Zeitstempel der letzten Aktivität für den angegebenen Benutzer aktualisiert.</param>
        <summary>Ruft die Informationen für den derzeit angemeldeten Mitgliedschaftsbenutzer aus der Datenquelle ab. Aktualisiert den Datums-/Zeitstempel der letzten Aktivität für den derzeit angemeldeten Mitgliedschaftsbenutzer, falls ein solcher angegeben ist.</summary>
        <returns>Ein <see cref="T:System.Web.Security.MembershipUser" />-Objekt, das den derzeit angemeldeten Benutzer darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.Membership.GetUser%2A> -Methode ruft die Benutzerinformationen aus der Datenquelle ab und erstellt ein- <xref:System.Web.Security.MembershipUser> Objekt, das mit den zurückgegebenen Daten aufgefüllt wurde. Wenn Sie eine der- <xref:System.Web.Security.Membership.GetUser%2A> über Ladungen verwenden, die keinen- `username` Parameter annimmt, werden <xref:System.Web.Security.Membership.GetUser%2A> die Informationen für den aktuell angemeldeten Mitgliedschafts Benutzer zurückgegeben. Der aktuell angemeldete Mitgliedschafts Benutzer wird von der <xref:System.Security.Principal.IIdentity.Name%2A> des Benutzers im aktuellen identifiziert <xref:System.Web.HttpContext> .  
  
 Sie können auch angeben, ob Sie <xref:System.Web.Security.Membership.GetUser%2A> den Datums-/Zeitstempel der letzten Aktivität für den abgerufenen Benutzer mit dem- `userIsOnline` Parameter aktualisieren möchten. Der <xref:System.Web.Security.Membership.GetUser%2A> -über Ladungen, die keinen- `userIsOnline` Parameter verwenden, `GetUser()` aktualisiert implizit den Datums-/Zeitstempel der letzten Aktivität für den Benutzer. `GetUser(System.String)` und `GetUser(System.Object)` nicht.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird der Benutzername für den aktuell angemeldeten Mitgliedschafts Benutzer auf der ASP.NET-Seite angezeigt, ohne den Datums-/Zeitstempel der letzten Aktivität des Benutzers zu aktualisieren.  
  
 [!code-aspx-csharp[System.Web.Security.Membership#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/default2cs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.Membership#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/default2vb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Kein Mitgliedschaftsbenutzer ist derzeit angemeldet.</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">Einführung in ASP.NET Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser GetUser (object providerUserKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser GetUser(object providerUserKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetUser(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUser (providerUserKey As Object) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ GetUser(System::Object ^ providerUserKey);" />
      <MemberSignature Language="F#" Value="static member GetUser : obj -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.GetUser providerUserKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerUserKey" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="providerUserKey">Der eindeutige Benutzerbezeichner aus der Mitgliedschaftsdatenquelle für den Benutzer.</param>
        <summary>Ruft die Informationen für den Mitgliedschaftsbenutzer aus der Datenquelle ab, der dem angegebenen eindeutigen Bezeichner zugeordnet ist.</summary>
        <returns>Ein <see cref="T:System.Web.Security.MembershipUser" />-Objekt, das den Benutzer darstellt, der dem angegebenen eindeutigen Bezeichner zugeordnet ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.Membership.GetUser%2A> -Methode ruft die Benutzerinformationen aus der Datenquelle ab und erstellt ein- <xref:System.Web.Security.MembershipUser> Objekt, das mit den zurückgegebenen Daten aufgefüllt wurde. Der Benutzer wird anhand des eindeutigen Bezeichners aus der Datenquelle identifiziert, die mit dem-Parameter angegeben wird `providerUserKey` .  
  
 Sie können auch angeben, ob Sie <xref:System.Web.Security.Membership.GetUser%2A> den Datums-/Uhrzeitstempel der letzten Aktivität für den Benutzer aktualisieren möchten, der mit dem-Parameter abgerufen wird `userIsOnline` . Der <xref:System.Web.Security.Membership.GetUser%2A> -über Ladungen, die keinen- `userIsOnline` Parameter verwenden, `GetUser()` aktualisiert implizit den Datums-/Zeitstempel der letzten Aktivität für den Benutzer. `GetUser(System.String)` und `GetUser(System.Object)` nicht  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="providerUserKey" /> ist <see langword="null" />.</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">Einführung in ASP.NET Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser GetUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser GetUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUser (username As String) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ GetUser(System::String ^ username);" />
      <MemberSignature Language="F#" Value="static member GetUser : string -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.GetUser username" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Der Name des abzurufenden Benutzers.</param>
        <summary>Ruft die Informationen für den angegebenen Mitgliedschaftsbenutzer aus der Datenquelle ab.</summary>
        <returns>Ein <see cref="T:System.Web.Security.MembershipUser" />-Objekt, das den angegebenen Benutzer darstellt. Wenn der <paramref name="username" />-Parameter nicht einem vorhandenen Benutzer entspricht, gibt diese Methode <see langword="null" /> zurück.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.Membership.GetUser%2A> -Methode ruft die Benutzerinformationen aus der Datenquelle ab und erstellt ein- <xref:System.Web.Security.MembershipUser> Objekt, das mit den zurückgegebenen Daten aufgefüllt wurde. Wenn Sie eine der- <xref:System.Web.Security.Membership.GetUser%2A> über Ladungen verwenden, die keinen- `username` Parameter annimmt, werden <xref:System.Web.Security.Membership.GetUser%2A> die Informationen für den aktuell angemeldeten Mitgliedschafts Benutzer zurückgegeben. Der aktuell angemeldete Mitgliedschafts Benutzer wird von der <xref:System.Security.Principal.IIdentity.Name%2A> des Benutzers im aktuellen identifiziert <xref:System.Web.HttpContext> .  
  
 Sie können auch angeben, ob Sie <xref:System.Web.Security.Membership.GetUser%2A> den Datums-/Uhrzeitstempel der letzten Aktivität für den Benutzer aktualisieren möchten, der mit dem-Parameter abgerufen wird `userIsOnline` . Der <xref:System.Web.Security.Membership.GetUser%2A> -über Ladungen, die keinen- `userIsOnline` Parameter verwenden, <xref:System.Web.Security.Membership.GetUser%2A?displayProperty=nameWithType> aktualisiert implizit den Datums-/Zeitstempel der letzten Aktivität für den Benutzer. <xref:System.Web.Security.Membership.GetUser%2A?displayProperty=nameWithType> und <xref:System.Web.Security.Membership.GetUser%2A> nicht.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die <xref:System.Web.Security.Membership.GetUser%2A> -Methode verwendet, um ein <xref:System.Web.Security.MembershipUser> -Objekt für den aktuell angemeldeten Benutzer zurückzugeben und die e-Mail-Adresse des Benutzers zu aktualisieren.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/UpdateEmailcs.aspx#11)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/UpdateEmailvb.aspx#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="username" /> enthält ein Komma (,).</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="username" /> ist <see langword="null" />.</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">Einführung in ASP.NET Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser GetUser (object providerUserKey, bool userIsOnline);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser GetUser(object providerUserKey, bool userIsOnline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetUser(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUser (providerUserKey As Object, userIsOnline As Boolean) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ GetUser(System::Object ^ providerUserKey, bool userIsOnline);" />
      <MemberSignature Language="F#" Value="static member GetUser : obj * bool -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.GetUser (providerUserKey, userIsOnline)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerUserKey" Type="System.Object" />
        <Parameter Name="userIsOnline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="providerUserKey">Der eindeutige Benutzerbezeichner aus der Mitgliedschaftsdatenquelle für den Benutzer.</param>
        <param name="userIsOnline">Wenn der Wert <see langword="true" /> ist, wird der Datums-/Zeitstempel der letzten Aktivität für den angegebenen Benutzer aktualisiert.</param>
        <summary>Ruft die Informationen für den Mitgliedschaftsbenutzer aus der Datenquelle ab, der dem angegebenen eindeutigen Bezeichner zugeordnet ist. Aktualisiert den Datums-/Zeitstempel der letzten Aktivität für den Benutzer, falls ein solcher angegeben ist.</summary>
        <returns>Ein <see cref="T:System.Web.Security.MembershipUser" />-Objekt, das den Benutzer darstellt, der dem angegebenen eindeutigen Bezeichner zugeordnet ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.Membership.GetUser%2A> -Methode ruft die Benutzerinformationen aus der Datenquelle ab und erstellt ein- <xref:System.Web.Security.MembershipUser> Objekt, das mit den zurückgegebenen Daten aufgefüllt wurde. Der Benutzer wird mit dem eindeutigen Bezeichner aus der Datenquelle identifiziert, die im-Parameter angegeben ist `providerUserKey` .  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="providerUserKey" /> ist <see langword="null" />.</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">Einführung in ASP.NET Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser GetUser (string username, bool userIsOnline);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser GetUser(string username, bool userIsOnline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetUser(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUser (username As String, userIsOnline As Boolean) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ GetUser(System::String ^ username, bool userIsOnline);" />
      <MemberSignature Language="F#" Value="static member GetUser : string * bool -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.GetUser (username, userIsOnline)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="userIsOnline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">Der Name des abzurufenden Benutzers.</param>
        <param name="userIsOnline">Wenn der Wert <see langword="true" /> ist, wird der Datums-/Zeitstempel der letzten Aktivität für den angegebenen Benutzer aktualisiert.</param>
        <summary>Ruft die Informationen für den angegebenen Mitgliedschaftsbenutzer aus der Datenquelle ab. Aktualisiert den Datums-/Zeitstempel der letzten Aktivität für den Benutzer, falls ein solcher angegeben ist.</summary>
        <returns>Ein <see cref="T:System.Web.Security.MembershipUser" />-Objekt, das den angegebenen Benutzer darstellt. Wenn der <paramref name="username" />-Parameter nicht einem vorhandenen Benutzer entspricht, gibt diese Methode <see langword="null" /> zurück.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.Membership.GetUser%2A> -Methode ruft die Benutzerinformationen aus der Datenquelle ab und erstellt ein- <xref:System.Web.Security.MembershipUser> Objekt, das mit den zurückgegebenen Daten aufgefüllt wurde.  
  
 Wenn Sie eine der- <xref:System.Web.Security.Membership.GetUser%2A> über Ladungen verwenden, die keinen- `username` Parameter annimmt, werden <xref:System.Web.Security.Membership.GetUser%2A> die Informationen für den aktuell angemeldeten Mitgliedschafts Benutzer zurückgegeben. Der aktuell angemeldete Mitgliedschafts Benutzer wird von der <xref:System.Security.Principal.IIdentity.Name%2A> des Benutzers im aktuellen identifiziert <xref:System.Web.HttpContext> .  
  
 Sie können auch angeben, ob Sie <xref:System.Web.Security.Membership.GetUser%2A> den Datums-/Uhrzeitstempel der letzten Aktivität für den Benutzer aktualisieren möchten, der mit dem-Parameter abgerufen wird `userIsOnline` . Der <xref:System.Web.Security.Membership.GetUser%2A> -über Ladungen, die keinen- `userIsOnline` Parameter verwenden, <xref:System.Web.Security.Membership.GetUser%2A?displayProperty=nameWithType> aktualisiert implizit den Datums-/Zeitstempel der letzten Aktivität für den Benutzer. <xref:System.Web.Security.Membership.GetUser%2A?displayProperty=nameWithType> und <xref:System.Web.Security.Membership.GetUser%2A> nicht.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird das Kennwort für einen angegebenen Benutzernamen abgerufen und an die e-Mail-Adresse des angegebenen Benutzers gesendet. Der Aufruf von <xref:System.Web.Security.Membership.GetUser%2A> gibt an, dass der Datums-/Zeitstempel der letzten Aktivität für den Benutzer nicht aktualisiert wurde.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/RetrievePasswordcs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/RetrievePasswordvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="username" /> enthält ein Komma (,).</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="username" /> ist <see langword="null" />.</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">Einführung in ASP.NET Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="GetUserNameByEmail">
      <MemberSignature Language="C#" Value="public static string GetUserNameByEmail (string emailToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetUserNameByEmail(string emailToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetUserNameByEmail(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUserNameByEmail (emailToMatch As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetUserNameByEmail(System::String ^ emailToMatch);" />
      <MemberSignature Language="F#" Value="static member GetUserNameByEmail : string -&gt; string" Usage="System.Web.Security.Membership.GetUserNameByEmail emailToMatch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="emailToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="emailToMatch">Die gesuchte E-Mail-Adresse.</param>
        <summary>Ruft einen Benutzernamen ab, bei dem die E-Mail-Adresse für den Benutzer mit der angegebenen E-Mail-Adresse übereinstimmt.</summary>
        <returns>Der Benutzername, bei dem die E-Mail-Adresse für den Benutzer mit der angegebenen E-Mail-Adresse übereinstimmt. Wenn keine Übereinstimmung gefunden wird, wird <see langword="null" /> zurückgegeben.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetUserNameByEmail%2A> kann verwendet werden, um den Benutzernamen für einen Mitgliedschafts Benutzer abzurufen, wenn ein Benutzer seinen Benutzernamen nicht kennt, aber seine e-Mail-Adresse kennt. Wenn mehr als ein Benutzer im Datenspeicher dieselbe e-Mail-Adresse aufweist, wird der erste angetretene Benutzername zurückgegeben.  
  
 Führende und nachfolgende Leerzeichen werden aus allen Parameterwerten abgeschnitten.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird der Benutzername für eine angegebene e-Mail-Adresse abgerufen.  
  
> [!IMPORTANT]
>  Dieses Beispiel enthält ein Textfeld, das Benutzereingaben akzeptiert. Dies ist eine potenzielle Sicherheitsbedrohung. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/GetUserByEmailcs.aspx#7)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/GetUserByEmailvb.aspx#7)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">Einführung in ASP.NET Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="HashAlgorithmType">
      <MemberSignature Language="C#" Value="public static string HashAlgorithmType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string HashAlgorithmType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.HashAlgorithmType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property HashAlgorithmType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ HashAlgorithmType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HashAlgorithmType : string" Usage="System.Web.Security.Membership.HashAlgorithmType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Der Bezeichner des für Hashkennwörter verwendeten Algorithmus.</summary>
        <value>Der Bezeichner des für Hashkennwörter verwendeten Algorithmus oder ein leerer Wert, wenn der Standardhashalgorithmus verwendet werden soll.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die- <xref:System.Web.Security.Membership.HashAlgorithmType%2A> Eigenschaft identifiziert den benutzerdefinierten Hash Algorithmus, der von der-Klasse verwendet wird <xref:System.Web.Security.Membership> . Sie legen die- <xref:System.Web.Security.Membership.HashAlgorithmType%2A> Eigenschaft mithilfe des- `hashAlgorithmType` Attributs des [Mitgliedschafts](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100)) Elements fest.  
  
 Mit der .NET Framework können Sie benutzerdefinierte Kryptografieklassen mithilfe des [`<cryptographySettings>`](/dotnet/framework/configure-apps/file-schema/cryptography/cryptographysettings-element) Element Konfigurations Abschnitts konfigurieren. Die- <xref:System.Web.Security.Membership.HashAlgorithmType%2A> Eigenschaft muss dem- `name` Attribut des- [`<nameEntry>`](/dotnet/framework/configure-apps/file-schema/cryptography/nameentry-element) Elements in einem-Element entsprechen [`<cryptoNameMapping>`](/dotnet/framework/configure-apps/file-schema/cryptography/cryptonamemapping-element) . Weitere Informationen finden Sie unter [Mapping von Algorithmusnamen zu Kryptografieklassen](/dotnet/framework/configure-apps/map-algorithm-names-to-cryptography-classes).  
  
 Wenn die- <xref:System.Web.Security.Membership.HashAlgorithmType%2A> Eigenschaft nicht festgelegt ist, verwendet die- <xref:System.Web.Security.Membership> Klasse den Hash Algorithmus, der im-Attribut des-Elements festgelegt ist `validation` `<machineKey>` .  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">Einführung in ASP.NET Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="MaxInvalidPasswordAttempts">
      <MemberSignature Language="C#" Value="public static int MaxInvalidPasswordAttempts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 MaxInvalidPasswordAttempts" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.MaxInvalidPasswordAttempts" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MaxInvalidPasswordAttempts As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int MaxInvalidPasswordAttempts { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxInvalidPasswordAttempts : int" Usage="System.Web.Security.Membership.MaxInvalidPasswordAttempts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der zulässigen ungültigen Kennwort- oder Kennwortantwortversuche ab, bevor der Mitgliedschaftsbenutzer ausgesperrt wird.</summary>
        <value>Die Anzahl der zulässigen ungültigen Kennwort- oder Kennwortantwortversuche, bevor der Mitgliedschaftsbenutzer ausgesperrt wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die- <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> Eigenschaft wird in Verbindung mit der- <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> Eigenschaft verwendet, um eine unerwünschte Quelle mithilfe wiederholter Versuche zu schützen, um das Kennwort oder die Kenn Wort Antwort eines Mitgliedschafts Benutzers zu erraten.  
  
 Wenn die Anzahl der ungültigen Kenn Wörter oder Kenn Wort Antworten, die für einen Mitgliedschafts Benutzer eingegeben wurden, größer oder gleich dem Wert der- <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> Eigenschaft innerhalb der von der-Eigenschaft angegebenen Anzahl von Minuten ist <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> , wird der Benutzer durch Festlegen der- <xref:System.Web.Security.MembershipUser.IsLockedOut%2A> Eigenschaft auf gesperrt, `true` bis der Benutzer durch einen Rückruf der-Methode entsperrt wird <xref:System.Web.Security.MembershipUser.UnlockUser%2A> .  
  
 Wenn eine gültige Kennwort-oder Kenn Wort Antwort angegeben wird, bevor der Wert der <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> Eigenschaft erreicht wird, wird der Leistungs Monitor, der die Anzahl der ungültigen Versuche nachverfolgt, auf NULL festgelegt.  
  
 Ungültige Kennwort-und Kenn Wort Antwort Versuche werden separat nachverfolgt. Wenn die-Eigenschaft beispielsweise <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> auf 5 festgelegt ist, hat der Benutzer bis zu fünf Versuche, ein gültiges Kennwort einzugeben, und bis zu fünf Versuche, eine korrekte Kenn Wort Antwort einzugeben, ohne gesperrt zu werden.  
  
 Der <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> Eigenschafts Wert wird in der Anwendungskonfiguration mithilfe des- `maxInvalidPasswordAttempts` Attributs des [Mitgliedschafts](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100)) Konfigurations Elements festgelegt.  
  
 Wenn die <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> -Eigenschaft ist `false` , werden ungültige Kenn Wort Antwort Versuche nicht nachverfolgt.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt das [Mitgliedschafts](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100)) Element im `system.web` -Abschnitt der Web.config Datei einer Anwendung. Er gibt an, dass die Anwendung eine Instanz der <xref:System.Web.Security.SqlMembershipProvider> -Klasse verwendet, um Mitgliedschafts Dienste bereitzustellen, und legt das- `maxInvalidPasswordAttempts` Attribut auf fünf ungültige Versuche und `passwordAttemptWindow` auf 30 Minuten fest.  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20>  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      maxInvalidPasswordAttempts="5"  
      passwordAttemptWindow="30"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">Einführung in ASP.NET Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="MinRequiredNonAlphanumericCharacters">
      <MemberSignature Language="C#" Value="public static int MinRequiredNonAlphanumericCharacters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 MinRequiredNonAlphanumericCharacters" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MinRequiredNonAlphanumericCharacters As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int MinRequiredNonAlphanumericCharacters { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MinRequiredNonAlphanumericCharacters : int" Usage="System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die minimale Anzahl von Sonderzeichen ab, die ein gültiges Kennwort enthalten muss.</summary>
        <value>Die minimale Anzahl von Sonderzeichen, die ein gültiges Kennwort enthalten muss.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die- <xref:System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters%2A> Eigenschaft gibt die Mindestanzahl spezieller, nicht alphanumerischer Zeichen zurück, die eingegeben werden müssen, um ein gültiges Kennwort für den Mitgliedschafts Anbieter zu erstellen, der in der-Eigenschaft angegeben ist <xref:System.Web.Security.Membership.Provider%2A> .  
  
 Der <xref:System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters%2A> Eigenschafts Wert wird in der Anwendungskonfiguration mithilfe des- `minRequiredNonAlphanumericCharacters` Attributs des [Mitgliedschafts](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100)) Konfigurations Elements festgelegt.  
  
 Ein nicht alphanumerisches Zeichen ist ein Zeichen, das von der <xref:System.Char.IsLetterOrDigit%2A> Methode zurückgegeben wird `false` .  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt das [Mitgliedschafts](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100)) Konfigurationselement im `system.web` -Abschnitt der Web.config Datei der Anwendung. Er gibt an, dass die Anwendung eine Instanz der- <xref:System.Web.Security.SqlMembershipProvider> Klasse verwendet, um Mitgliedschafts Dienste bereitzustellen, und legt das- `minRequiredNonAlphanumericCharacters` Attribut auf 1 Zeichen fest.  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20>  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      minRequiredNonAlphanumericCharacters="1"  
      />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">Einführung in ASP.NET Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="MinRequiredPasswordLength">
      <MemberSignature Language="C#" Value="public static int MinRequiredPasswordLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 MinRequiredPasswordLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.MinRequiredPasswordLength" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MinRequiredPasswordLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int MinRequiredPasswordLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MinRequiredPasswordLength : int" Usage="System.Web.Security.Membership.MinRequiredPasswordLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die minimale erforderliche Länge für ein Kennwort ab.</summary>
        <value>Die minimale erforderliche Länge für ein Kennwort.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die- <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A> Eigenschaft ruft die Mindestanzahl von Zeichen ab, die eingegeben werden müssen, um ein gültiges Kennwort für den in der-Eigenschaft angegebenen Mitgliedschafts Anbieter zu erstellen <xref:System.Web.Security.Membership.Provider%2A> .  
  
 Der <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A> Eigenschafts Wert wird in der Anwendungskonfiguration mithilfe des- `minRequiredPasswordLength` Attributs des [Mitgliedschafts](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100)) Konfigurations Elements festgelegt.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt das [Mitgliedschafts](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100)) Konfigurationselement im `system.web` -Abschnitt der Web.config Datei der Anwendung. Er gibt an, dass die Anwendung eine Instanz der- <xref:System.Web.Security.SqlMembershipProvider> Klasse verwendet, um Mitgliedschafts Dienste bereitzustellen, und legt das- `minRequiredPasswordLength` Attribut auf sieben Zeichen fest.  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20>  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      minRequiredPasswordLength="7"  
      />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">Einführung in ASP.NET Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="PasswordAttemptWindow">
      <MemberSignature Language="C#" Value="public static int PasswordAttemptWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 PasswordAttemptWindow" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.PasswordAttemptWindow" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property PasswordAttemptWindow As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int PasswordAttemptWindow { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PasswordAttemptWindow : int" Usage="System.Web.Security.Membership.PasswordAttemptWindow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Zeitfenster ab, in dem aufeinander folgende fehlerhafte Versuche, ein gültiges Kennwort oder eine gültige Kennwortantwort bereitzustellen, nachverfolgt werden.</summary>
        <value>Das Zeitfenster, in Minuten, in dem aufeinander folgende fehlerhafte Versuche, ein gültiges Kennwort oder eine gültige Kennwortantwort bereitzustellen, nachverfolgt werden. Standardwert: 10 Minuten. Wenn das Zeitintervall zwischen dem aktuellen fehlerhaften Versuch und dem letzten fehlerhaften Versuch größer als die Einstellung der <see cref="P:System.Web.Security.Membership.PasswordAttemptWindow" />-Eigenschaft ist, wird jeder fehlerhafte Versuch wie der erste fehlerhafte Versuch behandelt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die- <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> Eigenschaft wird in Verbindung mit der- <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> Eigenschaft verwendet, um eine unerwünschte Quelle zu schützen, die das Kennwort oder die Kenn Wort Antwort eines Mitgliedschafts Benutzers durch wiederholte Versuche erraten. Wenn ein Benutzer versucht, sich mit zu anmelden, das Kennwort zu ändern oder zurückzusetzen, ist innerhalb eines angegebenen Zeitfensters nur eine bestimmte Anzahl von aufeinander folgenden versuchen zulässig. Die Länge dieses Zeitfensters wird in der- <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> Eigenschaft angegeben, die die Anzahl der zulässigen Minuten zwischen ungültigen versuchen angibt.  
  
 Wenn die Anzahl der aufeinander folgenden fehlgeschlagenen Versuche, die ein Benutzer zum Zurücksetzen seines Kennworts durchführt, gleich dem Wert ist, der in der-Eigenschaft gespeichert ist <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> , und die verstrichene Zeit seit dem letzten ungültigen Versuch kleiner als die in der-Eigenschaft angegebene Anzahl von Minuten ist <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> , wird der Mitgliedschafts Benutzer gesperrt. Der Benutzer wird gesperrt, indem die- <xref:System.Web.Security.MembershipUser.IsLockedOut%2A> Eigenschaft auf festgelegt wird, `true` bis der Benutzer durch einen Rückruf der-Methode entsperrt wird <xref:System.Web.Security.MembershipUser.UnlockUser%2A> .  
  
 Wenn das Intervall zwischen dem aktuellen fehlgeschlagenen Versuch und dem letzten fehlgeschlagenen Versuch größer ist als die <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> Eigenschafts Einstellung, wird der aktuelle ungültige Versuch als erster gezählt. Wenn eine gültige Kenn Wort Antwort angegeben wird, bevor die maximal zulässige Anzahl zulässiger Versuche erreicht wird, wird die Anzahl der ungültigen Kenn Wort Antwort Versuche auf 0 (null) festgelegt. Wenn ein gültiges Kennwort angegeben wird, bevor die maximale Anzahl zulässiger ungültiger Versuche erreicht ist, wird die Anzahl der ungültigen Kenn Wort Versuche und die Anzahl der ungültigen Kenn Wort Antwort Versuche auf 0 (null) festgelegt.  
  
 Ungültige Kennwort-und Kenn Wort Antwort Versuche werden unabhängig voneinander kumuliert. Wenn z. b. <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> auf 5 festgelegt ist und drei ungültige Kenn Wort Versuche, gefolgt von zwei ungültigen Kenn Wort Antwort versuchen, vorgenommen werden, müssen zwei weitere ungültige Kenn Wort Versuche (oder drei weitere ungültige Kenn Wort Antwort Versuche) in vorgenommen werden, <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> damit der Mitgliedschafts Benutzer gesperrt werden kann.  
  
 Der <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> Eigenschafts Wert wird in der Anwendungskonfiguration mit dem `passwordAttemptWindow` -Attribut des Abschnitts [Mitgliedschafts](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100)) Konfigurationselement festgelegt.  
  
 Wenn die <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> -Eigenschaft auf festgelegt ist `false` , werden ungültige Kenn Wort Antwort Versuche nicht nachverfolgt.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt das [Mitgliedschafts](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100)) Element im- `system.web` Abschnitt der Web.config Datei für eine ASP.NET-Anwendung. Er gibt an, dass die Anwendung eine Instanz von verwendet, <xref:System.Web.Security.SqlMembershipProvider> und legt das- `maxInvalidPasswordAttempts` Attribut auf fünf ungültige Versuche und `passwordAttemptWindow` auf 30 Minuten fest.  
  
```  
<membership defaultProvider="SqlProvider"   
  userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      maxInvalidPasswordAttempts="5"  
      passwordAttemptWindow="30"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">Einführung in ASP.NET Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="PasswordStrengthRegularExpression">
      <MemberSignature Language="C#" Value="public static string PasswordStrengthRegularExpression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string PasswordStrengthRegularExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.PasswordStrengthRegularExpression" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property PasswordStrengthRegularExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ PasswordStrengthRegularExpression { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PasswordStrengthRegularExpression : string" Usage="System.Web.Security.Membership.PasswordStrengthRegularExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den regulären Ausdruck ab, der zum Auswerten eines Kennworts verwendet wird.</summary>
        <value>Ein regulärer Ausdruck, der zum Auswerten eines Kennworts verwendet wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die- <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A> Eigenschaft ruft den regulären Ausdruck ab, mit dem die Kenn Wort Komplexität von dem in der-Eigenschaft angegebenen Anbieter ausgewertet wird <xref:System.Web.Security.Membership.Provider%2A> .  
  
 Die- <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A> Eigenschaft wird in der Anwendungskonfiguration mithilfe des- `passwordStrengthRegularExpression` Attributs des [Mitgliedschafts](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100)) Konfigurations Elements festgelegt.  
  
 Weitere Informationen zu regulären Ausdrücken finden Sie unter [.NET Framework regulären Ausdrücken](/dotnet/standard/base-types/regular-expressions).  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt das [Mitgliedschafts](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100)) Konfigurationselement im `system.web` -Abschnitt der Web.config Datei der Anwendung. Er gibt an, dass die Anwendung eine Instanz der- <xref:System.Web.Security.SqlMembershipProvider> Klasse verwendet, um Mitgliedschafts Dienste bereitzustellen, und legt das- `passwordStrengthRegularExpression` Attribut auf einen regulären Ausdruck fest, der überprüft, ob das Kennwort die folgenden Kriterien erfüllt:  
  
-   Ist größer als sieben Zeichen.  
  
-   Enthält mindestens eine Ziffer.  
  
-   Enthält mindestens ein Sonderzeichen (nicht alphanumerisches Zeichen).  
  
 Wenn das Kennwort diese Kriterien nicht erfüllt, wird das Kennwort vom Mitgliedschafts Anbieter nicht akzeptiert.  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20>  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      passwordStrengthRegularExpression=" @\"(?=.{6,})(?=(.*\d){1,})(?=(.*\W){1,})"  
      />  
   </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">Einführung in ASP.NET Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipProvider Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Security.MembershipProvider Provider" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.Provider" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Provider As MembershipProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Security::MembershipProvider ^ Provider { System::Web::Security::MembershipProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Provider : System.Web.Security.MembershipProvider" Usage="System.Web.Security.Membership.Provider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf den Standardmitgliedschaftsanbieter für die Anwendung ab.</summary>
        <value>Der Standardmitgliedschaftsanbieter für die Anwendung, die mit der abstrakten <see cref="T:System.Web.Security.MembershipProvider" />-Basisklasse verfügbar gemacht wurde.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die- <xref:System.Web.Security.Membership.Provider%2A> Eigenschaft ermöglicht es Ihnen, direkt auf den Standard Mitgliedschafts Anbieter für eine Anwendung zu verweisen. Dies wird häufig für den Zugriff auf benutzerdefinierte Member des Mitgliedschafts Anbieters verwendet, die nicht Teil der <xref:System.Web.Security.MembershipProvider> abstrakten Basisklasse sind.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird <xref:System.Web.Security.SqlMembershipProvider> mithilfe der-Eigenschaft auf den für die Anwendung aktivierten Standard zugegriffen <xref:System.Web.Security.Membership.Provider%2A> , um den Wert der benutzerdefinierten Eigenschaft zu bestimmen <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A> .  
  
 [!code-aspx-csharp[System.Web.Security.Membership#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/Providercs.aspx#6)]
 [!code-aspx-vb[System.Web.Security.Membership#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/Providervb.aspx#6)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">Einführung in ASP.NET Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="Providers">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipProviderCollection Providers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Security.MembershipProviderCollection Providers" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.Providers" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Providers As MembershipProviderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Security::MembershipProviderCollection ^ Providers { System::Web::Security::MembershipProviderCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Providers : System.Web.Security.MembershipProviderCollection" Usage="System.Web.Security.Membership.Providers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipProviderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Auflistung der Mitgliedschaftsanbieter für die ASP.NET-Anwendung ab.</summary>
        <value>Eine <see cref="T:System.Web.Security.MembershipProviderCollection" /> der für die ASP.NET-Anwendung konfigurierten Mitgliedschaftsanbieter.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die- <xref:System.Web.Security.Membership.Providers%2A> Eigenschaft verweist auf alle für eine Anwendung aktivierten Mitgliedschafts Anbieter, einschließlich der in der Web.config-Datei für die Anwendung hinzugefügten Anbieter und der Machine.config Datei für alle Anwendungen. Sie können steuern, welche Mitgliedschafts Anbieter für eine Anwendung verfügbar sind, indem Sie das [Provider](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/6d4936ht(v%3dvs.100)) -Element des [Mitgliedschafts](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100)) Abschnitts in der Konfiguration für die Anwendung verwenden. Das folgende Beispiel zeigt beispielsweise den [Mitgliedschafts](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100)) Abschnitt in der Web.config-Datei für eine Anwendung, die die <xref:System.Web.Security.SqlMembershipProvider> `AspNetSqlProvider` in der Computer Konfigurationsdatei angegebene Instanz () entfernt und eine- <xref:System.Web.Security.SqlMembershipProvider> Instanz mit dem Namen `SqlProvider` als Standard Mitgliedschafts Anbieter für die Anwendung hinzufügt.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString="Data Source=MySqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
  </connectionStrings>  
  <system.web>  
    <membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
      <providers>  
        <remove name="AspNetSqlProvider" />  
          <add name="SqlProvider"  
            type="System.Web.Security.SqlMembershipProvider"  
            connectionStringName="SqlServices"  
            enablePasswordRetrieval="false"  
            enablePasswordReset="true"  
            requiresQuestionAndAnswer="true"  
            passwordFormat="Hashed"  
            applicationName="/" />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
 Wenn Sie den Abschnitt [Mitgliedschafts Element (ASP.NET Settings Schema)](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v=vs.100)) angeben, müssen Sie das- `defaultProvider` Attribut angeben. Wenn Sie im Web.config keinen [Mitgliedschafts Element Abschnitt (ASP.NET Settings Schema)](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v=vs.100)) angeben, werden die Werte aus der Computerkonfiguration verwendet, und die Instanz mit dem <xref:System.Web.Security.SqlMembershipProvider> Namen `AspNetSqlProvider` wird als festgelegt `defaultProvider` .  
  
 Sie können einen stark typisierten Verweis auf einen Anbieter aus der Auflistung abrufen, <xref:System.Web.Security.Membership.Providers%2A> indem Sie den Mitgliedschafts Anbieter nach Namen indizieren und ihn als gewünschten Typ umwandeln.  
  
   
  
## Examples  
 Im folgenden Codebeispiel werden die Anbieter aufgeführt, die für eine Anwendung und ihre jeweiligen Typen aktiviert sind.  
  
 [!code-aspx-csharp[System.Web.Security.Membership#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/Providerscs.aspx#7)]
 [!code-aspx-vb[System.Web.Security.Membership#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/Providersvb.aspx#7)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">Einführung in ASP.NET Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="RequiresQuestionAndAnswer">
      <MemberSignature Language="C#" Value="public static bool RequiresQuestionAndAnswer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool RequiresQuestionAndAnswer" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.RequiresQuestionAndAnswer" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property RequiresQuestionAndAnswer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool RequiresQuestionAndAnswer { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresQuestionAndAnswer : bool" Usage="System.Web.Security.Membership.RequiresQuestionAndAnswer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Benutzer durch den Standardmitgliedschaftsanbieter beim Zurücksetzen und Abrufen des Kennworts aufgefordert wird, eine Kennwortfrage zu beantworten.</summary>
        <value><see langword="true" />, wenn eine Kennwortantwort für das Zurücksetzen und Abrufen von Kennwörtern erforderlich ist, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn eine Kenn Wort Frage und-Antwort erforderlich ist, wird beim Abrufen oder Zurücksetzen eines Benutzer Kennworts eine zusätzliche Sicherheitsebene bereitgestellt. Benutzer können eine Frage und eine Antwort angeben, wenn Ihr Benutzername erstellt wird, den Sie später zum Abrufen oder Zurücksetzen eines vergessenen Kennworts verwenden können.  
  
 <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> wird aktiviert, wenn <xref:System.Web.Security.MembershipUser.ResetPassword%2A> oder <xref:System.Web.Security.MembershipUser.GetPassword%2A> aufgerufen wird. Der mit dem .NET Framework bereitgestellte Anbieter löst eine aus, wenn den Wert hat <xref:System.NotSupportedException> <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> `true` und die angegebene Kenn Wort Antwort ist `null` .  
  
 Wenn <xref:System.Web.Security.Membership.EnablePasswordReset%2A> und <xref:System.Web.Security.Membership.EnablePasswordRetrieval%2A> beide sind `false` , <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> kann weiterhin verwendet werden, um die Erstellung von Fragen und Antworten zu erzwingen, wenn neue Benutzer erstellt werden. die Frage und die Antwort werden jedoch nicht verwendet. Sie können die Frage mithilfe der- <xref:System.Web.Security.MembershipUser> Klasse abrufen.  
  
 Weitere Informationen finden Sie unter <xref:System.Web.Security.MembershipUser.ResetPassword%2A> und <xref:System.Web.Security.MembershipUser.GetPassword%2A>.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt das [Mitgliedschafts](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100)) Element im- `system.web` Abschnitt der Web.config Datei für eine ASP.NET-Anwendung. Er gibt an, dass die Anwendung eine Instanz von verwendet, die Kenn Wort Zurücksetzung <xref:System.Web.Security.SqlMembershipProvider> aktiviert und bei der zurück Setzung eine Kenn Wort Antwort erfordert.  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="false"  
      enablePasswordReset="true"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Hashed"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 Im folgenden Codebeispiel wird der Wert von überprüft <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> und die erforderlichen Steuerelemente für eine Kenn Wort Frage und-Antwort hinzugefügt, die beim Erstellen eines Benutzers bereitgestellt werden.  
  
> [!IMPORTANT]
>  Dieses Beispiel enthält ein Textfeld, das Benutzereingaben akzeptiert. Dies ist eine potenzielle Sicherheitsbedrohung. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/CreateUsercs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/CreateUservb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">Einführung in ASP.NET Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateUser">
      <MemberSignature Language="C#" Value="public static void UpdateUser (System.Web.Security.MembershipUser user);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UpdateUser(class System.Web.Security.MembershipUser user) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.UpdateUser(System.Web.Security.MembershipUser)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub UpdateUser (user As MembershipUser)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void UpdateUser(System::Web::Security::MembershipUser ^ user);" />
      <MemberSignature Language="F#" Value="static member UpdateUser : System.Web.Security.MembershipUser -&gt; unit" Usage="System.Web.Security.Membership.UpdateUser user" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="System.Web.Security.MembershipUser" />
      </Parameters>
      <Docs>
        <param name="user">Ein <see cref="T:System.Web.Security.MembershipUser" />-Objekt, das den zu aktualisierenden Benutzer und die aktualisierten Informationen für den Benutzer darstellt.</param>
        <summary>Aktualisiert die Datenbank mit den Informationen für den angegebenen Benutzer.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.UpdateUser%2A> übernimmt als Eingabe ein <xref:System.Web.Security.MembershipUser> -Objekt, das mit aktuellen Informationen für den Mitgliedschafts Benutzer aufgefüllt ist, und aktualisiert die Datenquelle mit den Eigenschafts Werten des- <xref:System.Web.Security.MembershipUser> Objekts. Mit <xref:System.Web.Security.MembershipUser> den Methoden,, oder können Sie ein neues-Objekt erstellen oder ein-Objekt abrufen, das <xref:System.Web.Security.MembershipUser> mit aktuellen Werten in der Datenquelle aufgefüllt wurde <xref:System.Web.Security.Membership.GetUser%2A> <xref:System.Web.Security.Membership.GetAllUsers%2A> <xref:System.Web.Security.Membership.FindUsersByName%2A> <xref:System.Web.Security.Membership.FindUsersByEmail%2A> .  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die e-Mail-Adresse für den aktuell angemeldeten Benutzer aktualisiert.  
  
> [!IMPORTANT]
>  Dieses Beispiel enthält ein Textfeld, das Benutzereingaben akzeptiert. Dies ist eine potenzielle Sicherheitsbedrohung. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/UpdateEmailcs.aspx#11)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/UpdateEmailvb.aspx#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="user" /> ist <see langword="null" />.</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">Einführung in ASP.NET Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="UserIsOnlineTimeWindow">
      <MemberSignature Language="C#" Value="public static int UserIsOnlineTimeWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 UserIsOnlineTimeWindow" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.UserIsOnlineTimeWindow" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UserIsOnlineTimeWindow As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int UserIsOnlineTimeWindow { int get(); };" />
      <MemberSignature Language="F#" Value="member this.UserIsOnlineTimeWindow : int" Usage="System.Web.Security.Membership.UserIsOnlineTimeWindow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt die Anzahl der Minuten nach dem Datums-/Zeitstempel der letzten Aktivität für einen Benutzer an, während denen der Benutzer als online angesehen wird.</summary>
        <value>Die Anzahl der Minuten nach dem Datums-/Zeitstempel der letzten Aktivität für einen Benutzer, während denen der Benutzer online ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der- <xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A> Eigenschafts Wert wird während des Aufrufes von geprüft <xref:System.Web.Security.Membership.GetNumberOfUsersOnline%2A> . Wenn der <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> für einen Benutzer größer als das aktuelle Datum und die aktuelle Uhrzeit abzüglich des <xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A> Werts in Minuten ist, wird der Benutzer als Online eingestuft. Mit der-Eigenschaft der-Klasse können Sie feststellen, ob ein Mitgliedschafts Benutzer online ist <xref:System.Web.Security.MembershipUser.IsOnline%2A> <xref:System.Web.Security.MembershipUser> .  
  
 Der <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> für einen Benutzer wird aktualisiert, wenn die Anmelde Informationen eines Benutzers von der-Methode erfolgreich überprüft werden <xref:System.Web.Security.Membership.ValidateUser%2A> . Sie können den <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> für einen Mitgliedschafts Benutzer auch aktualisieren, wenn Sie eine der- <xref:System.Web.Security.Membership.GetUser%2A> über Ladungen aufgerufen haben. Wenn Sie eine Überladung aufrufen, <xref:System.Web.Security.Membership.GetUser%2A> die einen- `userIsOnline` Parameter annimmt, geben Sie `true` den Wert an, um den <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> für den Benutzer zu aktualisieren.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt das [Mitgliedschafts](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100)) Element im- `system.web` Abschnitt der Web.config Datei für eine ASP.NET-Anwendung. Er gibt an, dass die Anwendung eine Instanz von verwendet, <xref:System.Web.Security.SqlMembershipProvider> und legt das- `userIsOnlineTimeWindow` Attribut auf 20 Minuten fest.  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="true"  
      enablePasswordReset="false"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Encrypted"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">Einführung in ASP.NET Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="ValidateUser">
      <MemberSignature Language="C#" Value="public static bool ValidateUser (string username, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ValidateUser(string username, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.ValidateUser(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ValidateUser (username As String, password As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ValidateUser(System::String ^ username, System::String ^ password);" />
      <MemberSignature Language="F#" Value="static member ValidateUser : string * string -&gt; bool" Usage="System.Web.Security.Membership.ValidateUser (username, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Der Name des zu überprüfenden Benutzers.</param>
        <param name="password">Das Kennwort für den angegebenen Benutzer.</param>
        <summary>Überprüft, ob der angegebene Benutzername und das angegebene Kennwort gültig sind.</summary>
        <returns><see langword="true" />, wenn der angegebene Benutzername und das Kennwort gültig sind, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.ValidateUser%2A> bietet eine einfache Möglichkeit, einen Benutzernamen und ein Kennwort aus der Datenquelle zu überprüfen. Beachten Sie, dass eine ausgelöst wird, wenn der- `username` Parameter leer oder ist `null` <xref:System.Web.HttpException> .  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt die Anmeldeseite für eine ASP.NET-Anwendung, die für die Verwendung der Formular Authentifizierung und der-Klasse konfiguriert ist <xref:System.Web.Security.Membership> . Wenn die angegebenen Benutzer Anmelde Informationen ungültig sind, wird dem Benutzer eine Meldung angezeigt. Andernfalls wird der Benutzer von der-Methode an die ursprünglich angeforderte URL umgeleitet <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> .  
  
> [!IMPORTANT]
>  Dieses Beispiel enthält ein Textfeld, das Benutzereingaben akzeptiert. Dies ist eine potenzielle Sicherheitsbedrohung. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/logincs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/loginvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">Einführung in ASP.NET Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="ValidatingPassword">
      <MemberSignature Language="C#" Value="public static event System.Web.Security.MembershipValidatePasswordEventHandler ValidatingPassword;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.Security.MembershipValidatePasswordEventHandler ValidatingPassword" />
      <MemberSignature Language="DocId" Value="E:System.Web.Security.Membership.ValidatingPassword" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event ValidatingPassword As MembershipValidatePasswordEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event System::Web::Security::MembershipValidatePasswordEventHandler ^ ValidatingPassword;" />
      <MemberSignature Language="F#" Value="member this.ValidatingPassword : System.Web.Security.MembershipValidatePasswordEventHandler " Usage="member this.ValidatingPassword : System.Web.Security.MembershipValidatePasswordEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipValidatePasswordEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn ein Benutzer erstellt, ein Kennwort geändert oder ein Kennwort zurückgesetzt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das- <xref:System.Web.Security.MembershipProvider.ValidatingPassword> Ereignis wird ausgelöst, wenn die- <xref:System.Web.Security.MembershipProvider.CreateUser%2A> Methode, die- <xref:System.Web.Security.MembershipProvider.ChangePassword%2A> Methode oder die- <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> Methode eines Mitgliedschafts Anbieters aufgerufen wird.  
  
 Sie können das <xref:System.Web.Security.MembershipProvider.ValidatingPassword> Ereignis verwenden, um Kenn Wort Formate und-Werte für Mitgliedschafts Benutzer zu überprüfen.  
  
 Sie können die aktuelle- <xref:System.Web.Security.MembershipProvider.CreateUser%2A> ,-oder-Aktion abbrechen, <xref:System.Web.Security.MembershipProvider.ChangePassword%2A> indem Sie die- <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> <xref:System.Web.Security.ValidatePasswordEventArgs.Cancel%2A> Eigenschaft des angegebenen <xref:System.Web.Security.ValidatePasswordEventArgs> `true` während des-Ereignisses auf festlegen <xref:System.Web.Security.MembershipProvider.ValidatingPassword> .  
  
 Wenn Sie die aktuelle Aktion abbrechen, indem Sie die- <xref:System.Web.Security.ValidatePasswordEventArgs.Cancel%2A> Eigenschaft auf festlegen `true` , können Sie die <xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A> -Eigenschaft des angegebenen-Objekts <xref:System.Web.Security.ValidatePasswordEventArgs> auf eine Ausnahme festlegen, die den Grund für den Fehler bei der Kenn Wort Validierung beschreibt. Die Aufruf Methode löst die Ausnahme aus, auf die die- <xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A> Eigenschaft festgelegt ist. Wenn die- <xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A> Eigenschaft ist, löst der Aufrufer `null` eine generische Ausnahme bei der Kenn Wort Validierung aus.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt ein <xref:System.Web.Security.MembershipProvider.ValidatingPassword> -Ereignis, das das Format des Kennworts für einen Benutzer überprüft und die Aktion abbricht, wenn das Kennwort nicht dem erforderlichen Format entspricht.  
  
 [!code-csharp[System.Web.Security.Membership#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/CreateUser3cs.aspx#11)]
 [!code-vb[System.Web.Security.Membership#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/CreateUser3vb.aspx#11)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">Einführung in ASP.NET Mitgliedschaft</related>
      </Docs>
    </Member>
  </Members>
</Type>
