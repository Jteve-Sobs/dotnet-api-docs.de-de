<Type Name="Membership" FullName="System.Web.Security.Membership">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d0d48d2df26687f1c21c48ff75f0300a56ee6283" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46612461" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class Membership" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Membership extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.Membership" />
  <TypeSignature Language="VB.NET" Value="Public Class Membership" />
  <TypeSignature Language="C++ CLI" Value="public ref class Membership abstract sealed" />
  <TypeSignature Language="F#" Value="type Membership = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Überprüft Benutzeranmeldeinformationen und verwaltet Benutzereinstellungen. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.Membership> Klasse wird zum Überprüfen der Anmeldeinformationen des Benutzers und benutzereinstellungen wie z. B. Kennwörter verwalten und e-Mail-Adressen in ASP.NET-Anwendungen verwendet. Die <xref:System.Web.Security.Membership> Klasse kann verwendet werden, allein oder zusammen mit den <xref:System.Web.Security.FormsAuthentication> um ein vollständiges System zum Authentifizieren von Benutzern einer Webanwendung oder Website zu erstellen. Die <xref:System.Web.UI.WebControls.Login> kapselt die <xref:System.Web.Security.Membership> Klasse, um ein bequemes Verfahren zum Überprüfen von Benutzern bereitzustellen.  
  
> [!NOTE]
>  Wenn Sie nicht mit den Mitgliedschaftsfunktionen von ASP.NET vertraut sind, finden Sie unter [Einführung in die Mitgliedschaft](https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)) vor dem fortfahren. Eine Liste weiterer Themen zur Mitgliedschaft, finden Sie unter [Verwalten von Benutzern durch Mitgliedschaft](http://msdn.microsoft.com/library/824c3a24-f0af-427c-a652-0d2d1e9397cd).  
  
 Die <xref:System.Web.Security.Membership> -Klasse ermöglicht das ausführen:  
  
-   Erstellen neue Benutzer.  
  
-   Das Speichern von Informationen zur Mitgliedschaft (Benutzernamen, Kennwörter, e-Mail-Adressen und unterstützenden Daten) in Microsoft SQL Server oder in einen alternativen Datenspeicher.  
  
-   Authentifizieren von Benutzern, die Ihre Website besuchen. Können Sie die Benutzer programmgesteuert authentifizieren, oder Sie können die <xref:System.Web.UI.WebControls.Login> Steuerelement, um eine vollständige Authentifizierungssystem zu erstellen, die wenig oder keinen Code erfordert.  
  
-   Verwalten von Kennwörtern, die umfasst das Erstellen, ändern, das Abrufen und sie zurückzusetzen und so weiter. Sie können optional konfigurieren ASP.NET-Mitgliedschaft dahingehend einer Kennwortfrage und-Antwort Kennwort zurücksetzen und Abrufen von Anforderungen für Benutzer zu authentifizieren, die ihr Kennwort vergessen haben.  
  
 Obwohl ASP.NET-Mitgliedschaft ein eigenständiges Feature zur Authentifizierung in ASP.NET ist, können sie mit ASP.NET-Rollenverwaltung Autorisierungsdienste für Ihre Website zu integriert werden. Mitgliedschaft auch integriert werden kann die Benutzer von ASP.NET <xref:System.Web.Profile> zum Bereitstellen von anwendungsspezifischen-Anpassung, die angepasst werden kann für einzelne Benutzer. Weitere Informationen finden Sie unter [Grundlegendes zur Rollenverwaltung](http://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6) und [ASP.NET-Profileigenschaften](http://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d).  
  
 Die <xref:System.Web.Security.Membership> -Klasse Mitgliedschaftsanbieter für die Kommunikation mit einer Datenquelle verwendet. .NET Framework enthält eine <xref:System.Web.Security.SqlMembershipProvider>, die Benutzerinformationen in einer Microsoft SQL Server-Datenbank speichert und eine <xref:System.Web.Security.ActiveDirectoryMembershipProvider>, können Sie zum Speichern der Benutzerdaten auf einem Active Directory oder Active Directory Application Mode (ADAM). Sie können auch einen benutzerdefinierten Mitgliedschaftsanbieter Kommunikation mit einer anderen Datenquelle, die von verwendet werden kann implementieren die <xref:System.Web.Security.Membership> Klasse. Benutzerdefinierte Mitgliedschaftsanbieter erben die <xref:System.Web.Security.MembershipProvider> abstrakte Klasse. Weitere Informationen finden Sie unter [Implementieren eines Mitgliedschaftsanbieters](http://msdn.microsoft.com/library/d8658b8e-c962-4f64-95e1-4acce35e4582).  
  
 Standardmäßig ist die ASP.NET-Mitgliedschaft für alle ASP.NET-Anwendungen aktiviert. Der Standard-Mitgliedschaftsanbieter ist die <xref:System.Web.Security.SqlMembershipProvider> und angegeben ist, in der Konfiguration des Computers mit dem Namen `AspNetSqlProvider`. Die Standardinstanz von die <xref:System.Web.Security.SqlMembershipProvider> ist konfiguriert, um eine Verbindung mit einer lokalen Instanz von Microsoft SQL Server herzustellen.  
  
 Sie können die Standardeinstellungen, geben Sie einen <xref:System.Web.Security.SqlMembershipProvider> außer der `AspNetSqlProvider` als Standardanbieter-Instanz aus, oder geben Sie eine Instanz von einem benutzerdefinierten Anbieter als Standardanbieter für Ihre ASP.NET-Anwendung mithilfe der Datei "Web.config". Sie können die ASP.NET-Konfiguration für die Mitgliedschaft für Ihre Web-Anwendung mithilfe des Konfigurationsabschnitts in der Datei "Web.config" angeben. Sie können die `providers` Unterabschnitt des Abschnitts, als die Standardanbieter Mitgliedschaftsanbieter angeben. Z. B. im folgenden Abschnitt den Standardmitgliedschaftsanbieter von der aktuellen Anwendungskonfiguration entfernt, und fügt einen neuen Anbieter mit dem Namen `SqlProvider` , die eine Verbindung mit einer SQL Server-Instanz, die mit dem Namen her `AspSqlServer`.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString="Data Source=AspSqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
  </connectionStrings>  
  <system.web>  
    <membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
      <providers>  
        <remove name="AspNetSqlProvider" />  
        <add name="SqlProvider"  
          type="System.Web.Security.SqlMembershipProvider"  
          connectionStringName="SqlServices"  
          enablePasswordRetrieval="false"  
          enablePasswordReset="true"  
          requiresQuestionAndAnswer="true"  
          passwordFormat="Hashed"  
          applicationName="/" />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt die Anmeldeseite für eine ASP.NET-Anwendung für die Verwendung der Formularauthentifizierung und ASP.NET-Mitgliedschaft konfiguriert. Wenn die angegebenen Anmeldeinformationen ungültig sind, wird eine Meldung, die dem Benutzer angezeigt. Andernfalls wird der Benutzer zur ursprünglich angeforderten URL umgeleitet mithilfe der <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> Methode.  
  
> [!NOTE]
>  Die ASP.NET-Anmeldungssteuerelemente (<xref:System.Web.UI.WebControls.Login>, <xref:System.Web.UI.WebControls.LoginView>, <xref:System.Web.UI.WebControls.LoginStatus>, <xref:System.Web.UI.WebControls.LoginName>, und <xref:System.Web.UI.WebControls.PasswordRecovery>) kapseln praktisch die gesamte Logik, die Benutzer zur Eingabe von Anmeldeinformationen aufgefordert, und überprüfen die Anmeldeinformationen im Mitgliedschaftssystem erforderlich und kann verwendet anstelle programmgesteuerten Überprüfung der <xref:System.Web.Security.Membership> Klasse.  
  
> [!IMPORTANT]
>  Dieses Beispiel enthält das Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko dar. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/logincs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/loginvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Einführung in die Mitgliedschaft</related>
  </Docs>
  <Members>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public static string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Web.Security.Membership.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Anwendung ab oder legt diesen fest.</summary>
        <value>Der Name der Anwendung.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.Membership.ApplicationName%2A> wird verwendet, um Benutzer, die spezifisch für eine Anwendung zu identifizieren. Also der gleichen Benutzernamen in der Datenbank für mehrere ASP.NET-Anwendungen, das Angeben eines anderen vorhanden kann <xref:System.Web.Security.Membership.ApplicationName%2A>. Dadurch können mehrere Anwendungen die gleiche Datenbank verwendet, um Benutzerinformationen zu speichern, ohne Konflikte bei Befehlsnamen doppelten Benutzers. Alternativ können mehrere ASP.NET-Anwendungen dieselbe Benutzerdatenbank verwenden, durch die Angabe derselben <xref:System.Web.Security.Membership.ApplicationName%2A>. Die <xref:System.Web.Security.Membership.ApplicationName%2A> kann programmgesteuert oder deklarativ festgelegt werden, in der Konfiguration für die Webanwendung.  
  
> [!CAUTION]
>  Da eine einzelne Standardinstanz Mitgliedschaft-Anbieter für alle Anforderungen von bedient verwendet wird ein <xref:System.Web.HttpApplication> -Objekt können mehrere Anforderungen parallel ausgeführt werden und es wird versucht, legen Sie die <xref:System.Web.Security.Membership.ApplicationName%2A> -Eigenschaftswert. Die <xref:System.Web.Security.Membership.ApplicationName%2A> Eigenschaft ist nicht threadsicher ist, für mehrere Schreibvorgänge, und Ändern der <xref:System.Web.Security.Membership.ApplicationName%2A> Eigenschaftswert kann zu unerwartetem Verhalten für mehrere Benutzer einer Anwendung führen. Es wird empfohlen, dass Sie keinen Code schreiben, ermöglicht Benutzern das festlegen, der <xref:System.Web.Security.Membership.ApplicationName%2A> -Eigenschaft, es sei denn, Sie müssen. Ein Beispiel für eine Anwendung in dem das Festlegen der <xref:System.Web.Security.Membership.ApplicationName%2A> Eigenschaft ist möglicherweise erforderlich ist eine administrative Anwendung, die Daten der Benutzergruppenmitgliedschaft für mehrere Anwendungen verwaltet. Eine solche Anwendung sollte es sich um eine Anwendung für die einzelnen Benutzer und nicht für eine Webanwendung sein.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt das Element in der `system.web` -Abschnitt der Datei "Web.config" für eine ASP.NET-Anwendung. Er gibt an, dass die Anwendung eine <xref:System.Web.Security.SqlMembershipProvider> -Instanz und legt die <xref:System.Web.Security.Membership.ApplicationName%2A> zu `MyApplication`.  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="true"  
      enablePasswordReset="false"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Encrypted"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Einführung in die ASP.NET-Mitgliedschaft</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateUser">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Fügt dem Datenspeicher einen neuen Benutzer hinzu.</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Einführung in die ASP.NET-Mitgliedschaft</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser CreateUser (string username, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser CreateUser(string username, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.CreateUser(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateUser (username As String, password As String) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ CreateUser(System::String ^ username, System::String ^ password);" />
      <MemberSignature Language="F#" Value="static member CreateUser : string * string -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.CreateUser (username, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Der Benutzername für den neuen Benutzer.</param>
        <param name="password">Das Kennwort für den neuen Benutzer.</param>
        <summary>Fügt dem Datenspeicher einen neuen Benutzer hinzu.</summary>
        <returns>Ein <see cref="T:System.Web.Security.MembershipUser" />-Objekt für den neu erstellten Benutzer.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.CreateUser%2A> Fügt einen neuen Benutzer mit dem Datenspeicher und gibt eine <xref:System.Web.Security.MembershipUser> -Objekt für den neu erstellten Benutzer. Wenn es sich bei der Erstellung des Benutzers ein Fehler auftritt, eine <xref:System.Web.Security.MembershipCreateUserException> ausgelöst. Können Sie Abrufen einer <xref:System.Web.Security.MembershipCreateStatus> Wert aus der <xref:System.Web.Security.MembershipCreateUserException.StatusCode%2A> Eigenschaft der <xref:System.Web.Security.MembershipCreateUserException> , der angibt, warum nicht erstellt werden konnte.  
  
 Nach ein Mitgliedschaftsbenutzer erstellt wurde, und Sie haben einen Verweis auf eine <xref:System.Web.Security.MembershipUser> Objekt für diesen Benutzer können Sie die Einstellungen für diesen Benutzer ändern mit der <xref:System.Web.Security.MembershipUser> öffentliche Methoden, wie z. B. <xref:System.Web.Security.MembershipUser.ChangePasswordQuestionAndAnswer%2A> für Anwendungen, in denen <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> ist `true`, oder durch Festlegen der Eigenschaftswerte der <xref:System.Web.Security.MembershipUser> -Objekt, und übergeben sie die <xref:System.Web.Security.Membership.UpdateUser%2A> Methode.  
  
 Wenn ein Benutzer in der Datenquelle für die Anwendung bereits vorhanden ist, erhalten Sie eine <xref:System.Web.Security.MembershipUser> Objekt für den vorhandenen Benutzer mit der <xref:System.Web.Security.Membership.GetUser%2A> Methode.  
  
 Die <xref:System.Web.Security.SqlMembershipProvider> bietet eine Option aus, um eine eindeutige e-Mail-Adresse für jeden Benutzer erforderlich ist. Wenn die <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A> Eigenschaft `true`, müssen Sie verwenden die <xref:System.Web.Security.Membership.CreateUser%2A> Überladungen, die Ihnen ermöglicht, geben Sie eine e-Mail-Adresse für den Benutzer erstellt wird. Andernfalls ein <xref:System.Web.Security.MembershipCreateUserException> ausgelöst.  
  
 Von der alle Parameterwerte werden führende und nachfolgende Leerzeichen abgeschnitten.  
  
   
  
## Examples  
 Das folgende Codebeispiel erstellt einen neuen Benutzer für eine ASP.NET-Anwendung für die Verwendung der Formularauthentifizierung und ASP.NET-Mitgliedschaft konfiguriert. Wenn der Benutzer nicht erfolgreich erstellt wurde, wird eine Meldung, die dem Benutzer angezeigt. Andernfalls wird der Benutzer zur Anmeldeseite für die Anwendung umgeleitet.  
  
> [!IMPORTANT]
>  Dieses Beispiel enthält das Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko dar. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.Membership#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/createuser2cs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.Membership#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/createuser2vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.Security.MembershipCreateUserException">Der Benutzer wurde nicht erstellt. Überprüfen Sie die <see cref="P:System.Web.Security.MembershipCreateUserException.StatusCode" />-Eigenschaft auf einen <see cref="T:System.Web.Security.MembershipCreateStatus" />-Wert.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Einführung in die ASP.NET-Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="CreateUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser CreateUser (string username, string password, string email);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser CreateUser(string username, string password, string email) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.CreateUser(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateUser (username As String, password As String, email As String) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ CreateUser(System::String ^ username, System::String ^ password, System::String ^ email);" />
      <MemberSignature Language="F#" Value="static member CreateUser : string * string * string -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.CreateUser (username, password, email)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="email" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Der Benutzername für den neuen Benutzer.</param>
        <param name="password">Das Kennwort für den neuen Benutzer.</param>
        <param name="email">Die E-Mail-Adresse für den neuen Benutzer.</param>
        <summary>Fügt dem Datenspeicher einen neuen Benutzer mit einer angegebenen E-Mail-Adresse hinzu.</summary>
        <returns>Ein <see cref="T:System.Web.Security.MembershipUser" />-Objekt für den neu erstellten Benutzer.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.CreateUser%2A> Fügt einen neuen Benutzer mit dem Datenspeicher und gibt eine <xref:System.Web.Security.MembershipUser> -Objekt für den neu erstellten Benutzer. Wenn es sich bei der Erstellung des Benutzers ein Fehler auftritt, eine <xref:System.Web.Security.MembershipCreateUserException> ausgelöst. Können Sie Abrufen einer <xref:System.Web.Security.MembershipCreateStatus> Wert aus der <xref:System.Web.Security.MembershipCreateUserException.StatusCode%2A> Eigenschaft der <xref:System.Web.Security.MembershipCreateUserException> , der angibt, warum nicht erstellt werden konnte.  
  
 Nach ein Mitgliedschaftsbenutzer erstellt wurde, und Sie haben einen Verweis auf eine <xref:System.Web.Security.MembershipUser> Objekt für diesen Benutzer können Sie die Einstellungen für diesen Benutzer ändern mit der <xref:System.Web.Security.MembershipUser> öffentliche Methoden, wie z. B. <xref:System.Web.Security.MembershipUser.ChangePasswordQuestionAndAnswer%2A> für Anwendungen, in denen <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> ist `true`, oder durch Festlegen der Eigenschaftswerte der <xref:System.Web.Security.MembershipUser> -Objekt, und übergeben sie die <xref:System.Web.Security.Membership.UpdateUser%2A> Methode.  
  
 Wenn ein Benutzer in der Datenquelle für die Anwendung bereits vorhanden ist, erhalten Sie eine <xref:System.Web.Security.MembershipUser> Objekt für den vorhandenen Benutzer mit der <xref:System.Web.Security.Membership.GetUser%2A> Methode.  
  
 Von der alle Parameterwerte werden führende und nachfolgende Leerzeichen abgeschnitten.  
  
   
  
## Examples  
 Das folgende Codebeispiel erstellt einen neuen Benutzer für eine ASP.NET-Anwendung für die Verwendung der Formularauthentifizierung und ASP.NET-Mitgliedschaft konfiguriert. Wenn der Benutzer nicht erfolgreich erstellt wurde, wird eine Meldung, die dem Benutzer angezeigt. Andernfalls wird der Benutzer zur Anmeldeseite für die Anwendung umgeleitet.  
  
> [!IMPORTANT]
>  Dieses Beispiel enthält das Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko dar. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.Membership#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/createuser1cs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.Membership#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/createuser1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.Security.MembershipCreateUserException">Der Benutzer wurde nicht erstellt. Überprüfen Sie die <see cref="P:System.Web.Security.MembershipCreateUserException.StatusCode" />-Eigenschaft auf einen <see cref="T:System.Web.Security.MembershipCreateStatus" />-Wert.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Einführung in die ASP.NET-Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="CreateUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser CreateUser (string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, out System.Web.Security.MembershipCreateStatus status);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser CreateUser(string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, [out] valuetype System.Web.Security.MembershipCreateStatus&amp; status) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Web.Security.MembershipCreateStatus@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateUser (username As String, password As String, email As String, passwordQuestion As String, passwordAnswer As String, isApproved As Boolean, ByRef status As MembershipCreateStatus) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ CreateUser(System::String ^ username, System::String ^ password, System::String ^ email, System::String ^ passwordQuestion, System::String ^ passwordAnswer, bool isApproved, [Runtime::InteropServices::Out] System::Web::Security::MembershipCreateStatus % status);" />
      <MemberSignature Language="F#" Value="static member CreateUser : string * string * string * string * string * bool *  -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.CreateUser (username, password, email, passwordQuestion, passwordAnswer, isApproved, status)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="email" Type="System.String" />
        <Parameter Name="passwordQuestion" Type="System.String" />
        <Parameter Name="passwordAnswer" Type="System.String" />
        <Parameter Name="isApproved" Type="System.Boolean" />
        <Parameter Name="status" Type="System.Web.Security.MembershipCreateStatus" RefType="out" />
      </Parameters>
      <Docs>
        <param name="username">Der Benutzername für den neuen Benutzer.</param>
        <param name="password">Das Kennwort für den neuen Benutzer.</param>
        <param name="email">Die E-Mail-Adresse für den neuen Benutzer.</param>
        <param name="passwordQuestion">Der Wert der Kennwortfrage für den Mitgliedschaftsbenutzer.</param>
        <param name="passwordAnswer">Der Wert der Kennwortantwort für den Mitgliedschaftsbenutzer.</param>
        <param name="isApproved">Ein boolescher Wert, der angibt, ob die Anmeldung des neuen Benutzers zulässig ist.</param>
        <param name="status">Eine <see cref="T:System.Web.Security.MembershipCreateStatus" />-Enumeration, die das erfolgreiche Erstellen des Benutzers bzw. den Grund dafür angibt, dass der Benutzer nicht erstellt werden konnte.</param>
        <summary>Fügt dem Datenspeicher einen neuen Benutzer mit angegebenen Eigenschaftswerten hinzu und gibt einen Statusparameter zurück, der das erfolgreiche Erstellen des Benutzers bzw. den Grund dafür angibt, dass der Benutzer nicht erstellt werden konnte.</summary>
        <returns>Ein <see cref="T:System.Web.Security.MembershipUser" />-Objekt für den neu erstellten Benutzer. Wenn kein Benutzer erstellt wurde, gibt diese Methode <see langword="null" /> zurück.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.CreateUser%2A> Fügt einen neuen Benutzer mit dem Datenspeicher und gibt eine <xref:System.Web.Security.MembershipUser> -Objekt für den neu erstellten Benutzer. Wenn es sich bei der Erstellung des Benutzers ein Fehler auftritt, können Sie Abrufen einer <xref:System.Web.Security.MembershipCreateStatus> Wert aus der `status` Output-Parameter, der angibt, warum nicht erstellt werden konnte.  
  
 Die <xref:System.Web.Security.Membership.CreateUser%2A> Methode zurück `null` Wenn `password` ist eine leere Zeichenfolge oder `null`, `username` ist eine leere Zeichenfolge oder `null` oder enthält ein Komma (,), `passwordQuestion` nicht `null` und ist eine leere Zeichenfolge ist, oder `passwordAnswer` nicht `null` und eine leere Zeichenfolge enthält.  
  
 Nach ein Mitgliedschaftsbenutzer erstellt wurde, und Sie haben einen Verweis auf eine <xref:System.Web.Security.MembershipUser> Objekt für diesen Benutzer können Sie die Einstellungen für diesen Benutzer ändern mit der <xref:System.Web.Security.MembershipUser> öffentliche Methoden und durch Festlegen der Eigenschaftswerte des der <xref:System.Web.Security.MembershipUser> -Objekt und dann übergeben die <xref:System.Web.Security.MembershipUser> -Objekt an die <xref:System.Web.Security.Membership.UpdateUser%2A> Methode.  
  
 Wenn ein Benutzer in der Datenquelle für die Anwendung bereits vorhanden ist, erhalten Sie eine <xref:System.Web.Security.MembershipUser> Objekt für den vorhandenen Benutzer mit der <xref:System.Web.Security.Membership.GetUser%2A> Methode.  
  
 Führende und nachfolgende Leerzeichen werden von der alle Parameterwerte für die Zeichenfolge abgeschnitten.  
  
   
  
## Examples  
 Das folgende Codebeispiel erstellt einen neuen Benutzer für eine ASP.NET-Anwendung für die Verwendung der Formularauthentifizierung und ASP.NET-Mitgliedschaft konfiguriert. Wenn der Benutzer nicht erfolgreich erstellt wurde, wird eine Meldung, die dem Benutzer angezeigt. Andernfalls wird der Benutzer zur Anmeldeseite für die Anwendung umgeleitet.  
  
> [!IMPORTANT]
>  Dieses Beispiel enthält das Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko dar. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/CreateUsercs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/CreateUservb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Einführung in die ASP.NET-Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="CreateUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser CreateUser (string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, out System.Web.Security.MembershipCreateStatus status);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser CreateUser(string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, [out] valuetype System.Web.Security.MembershipCreateStatus&amp; status) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateUser (username As String, password As String, email As String, passwordQuestion As String, passwordAnswer As String, isApproved As Boolean, providerUserKey As Object, ByRef status As MembershipCreateStatus) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ CreateUser(System::String ^ username, System::String ^ password, System::String ^ email, System::String ^ passwordQuestion, System::String ^ passwordAnswer, bool isApproved, System::Object ^ providerUserKey, [Runtime::InteropServices::Out] System::Web::Security::MembershipCreateStatus % status);" />
      <MemberSignature Language="F#" Value="static member CreateUser : string * string * string * string * string * bool * obj *  -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.CreateUser (username, password, email, passwordQuestion, passwordAnswer, isApproved, providerUserKey, status)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="email" Type="System.String" />
        <Parameter Name="passwordQuestion" Type="System.String" />
        <Parameter Name="passwordAnswer" Type="System.String" />
        <Parameter Name="isApproved" Type="System.Boolean" />
        <Parameter Name="providerUserKey" Type="System.Object" />
        <Parameter Name="status" Type="System.Web.Security.MembershipCreateStatus" RefType="out" />
      </Parameters>
      <Docs>
        <param name="username">Der Benutzername für den neuen Benutzer.</param>
        <param name="password">Das Kennwort für den neuen Benutzer.</param>
        <param name="email">Die E-Mail-Adresse für den neuen Benutzer.</param>
        <param name="passwordQuestion">Der Wert der Kennwortfrage für den Mitgliedschaftsbenutzer.</param>
        <param name="passwordAnswer">Der Wert der Kennwortantwort für den Mitgliedschaftsbenutzer.</param>
        <param name="isApproved">Ein boolescher Wert, der angibt, ob die Anmeldung des neuen Benutzers zulässig ist.</param>
        <param name="providerUserKey">Der Benutzerbezeichner für den Benutzer, der im Mitgliedschaftsdatenspeicher gespeichert werden soll.</param>
        <param name="status">Eine <see cref="T:System.Web.Security.MembershipCreateStatus" />-Enumeration, die das erfolgreiche Erstellen des Benutzers bzw. den Grund dafür angibt, dass der Benutzer nicht erstellt werden konnte.</param>
        <summary>Fügt dem Datenspeicher einen neuen Benutzer mit angegebenen Eigenschaftswerten und einem eindeutigen Bezeichner hinzu und gibt einen Statusparameter zurück, der das erfolgreiche Erstellen des Benutzers bzw. den Grund dafür angibt, dass der Benutzer nicht erstellt werden konnte.</summary>
        <returns>Ein <see cref="T:System.Web.Security.MembershipUser" />-Objekt für den neu erstellten Benutzer. Wenn kein Benutzer erstellt wurde, gibt diese Methode <see langword="null" /> zurück.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.CreateUser%2A> Fügt einen neuen Benutzer mit dem Datenspeicher und gibt eine <xref:System.Web.Security.MembershipUser> -Objekt für den neu erstellten Benutzer. Wenn es sich bei der Erstellung des Benutzers ein Fehler auftritt, können Sie Abrufen einer <xref:System.Web.Security.MembershipCreateStatus> Wert aus der `status` Output-Parameter, der angibt, warum nicht erstellt werden konnte. Sie können einen eindeutigen Bezeichner für den Benutzer, z. B. ein Primärschlüsselwert für eine Datenbank angeben, indem die `providerUserKey` Parameter.  
  
 Die <xref:System.Web.Security.Membership.CreateUser%2A> Methode zurück `null` Wenn `password` ist eine leere Zeichenfolge oder `null`, `username` ist eine leere Zeichenfolge oder `null` oder enthält ein Komma (,), `passwordQuestion` nicht `null` und enthält eine leere Zeichenfolge oder `passwordAnswer` nicht `null` und eine leere Zeichenfolge enthält.  
  
 Nach ein Mitgliedschaftsbenutzer erstellt wurde, und Sie haben einen Verweis auf eine <xref:System.Web.Security.MembershipUser> Objekt für diesen Benutzer können Sie die Einstellungen für diesen Benutzer ändern mit der <xref:System.Web.Security.MembershipUser> öffentliche Methoden und durch Festlegen der Eigenschaftswerte des der <xref:System.Web.Security.MembershipUser> -Objekt und dann übergeben die <xref:System.Web.Security.MembershipUser> -Objekt an die <xref:System.Web.Security.Membership.UpdateUser%2A> Methode.  
  
 Wenn ein Benutzer in der Datenquelle für die Anwendung bereits vorhanden ist, erhalten Sie eine <xref:System.Web.Security.MembershipUser> Objekt für den vorhandenen Benutzer mit der <xref:System.Web.Security.Membership.GetUser%2A> Methode.  
  
 Führende und nachfolgende Leerzeichen werden von der alle Parameterwerte für die Zeichenfolge abgeschnitten.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Einführung in die ASP.NET-Mitgliedschaft</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="DeleteUser">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Löscht einen Benutzer aus der Datenbank.</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Einführung in die ASP.NET-Mitgliedschaft</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeleteUser">
      <MemberSignature Language="C#" Value="public static bool DeleteUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool DeleteUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.DeleteUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DeleteUser (username As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool DeleteUser(System::String ^ username);" />
      <MemberSignature Language="F#" Value="static member DeleteUser : string -&gt; bool" Usage="System.Web.Security.Membership.DeleteUser username" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Der Name des zu löschenden Benutzers.</param>
        <summary>Löscht einen Benutzer und alle zugehörigen Benutzerdaten aus der Datenbank.</summary>
        <returns>
          <see langword="true" />, wenn der Benutzer gelöscht wurde, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In der Datenbank gespeicherten Benutzerdaten der <xref:System.Web.Security.Roles>, <xref:System.Web.HttpContext.Profile%2A>, oder <xref:System.Web.UI.WebControls.WebParts.WebPart> Personalisierung wird ebenfalls gelöscht werden, bei der Verwendung der <xref:System.Web.Security.SqlRoleProvider>, <xref:System.Web.Profile.SqlProfileProvider>, und <xref:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider> Objekte für die datenspeicherung.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird löscht den aktuell angemeldeten Benutzer ein, und alle zugehörigen Daten.  
  
 [!code-aspx-csharp[System.Web.Security.Membership#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/DeleteUsercs.aspx#8)]
 [!code-aspx-vb[System.Web.Security.Membership#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/DeleteUservb.aspx#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> ist eine leere Zeichenfolge oder enthält ein Komma (,).</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> ist gleich <see langword="null." />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Einführung in die ASP.NET-Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteUser">
      <MemberSignature Language="C#" Value="public static bool DeleteUser (string username, bool deleteAllRelatedData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool DeleteUser(string username, bool deleteAllRelatedData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.DeleteUser(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DeleteUser (username As String, deleteAllRelatedData As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool DeleteUser(System::String ^ username, bool deleteAllRelatedData);" />
      <MemberSignature Language="F#" Value="static member DeleteUser : string * bool -&gt; bool" Usage="System.Web.Security.Membership.DeleteUser (username, deleteAllRelatedData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="deleteAllRelatedData" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">Der Name des zu löschenden Benutzers.</param>
        <param name="deleteAllRelatedData">
          <see langword="true" />, um mit dem Benutzer zusammenhängende Daten aus der Datenbank zu löschen; <see langword="false" />, um die mit dem Benutzer zusammenhängenden Daten in der Datenbank zu belassen.</param>
        <summary>Löscht einen Benutzer aus der Datenbank.</summary>
        <returns>
          <see langword="true" />, wenn der Benutzer gelöscht wurde, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Benutzer, die aus der Datenbank gelöscht werden nur gelöscht werden aus dem konfigurierten `applicationName`.  
  
 Wenn `deleteAllRelatedData` ist `true`, in der Datenbank gespeicherten Benutzerdaten der <xref:System.Web.Security.Roles>, <xref:System.Web.HttpContext.Profile%2A>, oder <xref:System.Web.UI.WebControls.WebParts.WebPart> Personalisierung wird ebenfalls gelöscht werden, bei der Verwendung der <xref:System.Web.Security.SqlRoleProvider>, <xref:System.Web.Profile.SqlProfileProvider>, und <xref:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider> für Objekte Speicherung von Daten.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird löscht den aktuell angemeldeten Benutzer ein, und alle zugehörigen Daten.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/DeleteUsercs.aspx#6)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/DeleteUservb.aspx#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> ist eine leere Zeichenfolge oder enthält ein Komma (,).</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> ist <see langword="null" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Einführung in die ASP.NET-Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="EnablePasswordReset">
      <MemberSignature Language="C#" Value="public static bool EnablePasswordReset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool EnablePasswordReset" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.EnablePasswordReset" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property EnablePasswordReset As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool EnablePasswordReset { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EnablePasswordReset : bool" Usage="System.Web.Security.Membership.EnablePasswordReset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der aktuelle Mitgliedschaftsanbieter so konfiguriert ist, dass Benutzer ihre Kennwörter zurücksetzen können.</summary>
        <value>
          <see langword="true" />, wenn der Mitgliedschaftsanbieter das Zurücksetzen von Kennwörtern unterstützt, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kennwort zurücksetzen kann für die ASP.NET-Mitgliedschaft ersetzen Sie das aktuelle Kennwort für einen Benutzernamen mit einem neuen, zufällig generierten Kennwort aus, wenn ein Benutzer sein Kennwort vergessen hat, oder das aktuelle Kennwort nicht mehr gültig ist. Dies ist besonders nützlich, wenn Kennwortformat, um festgelegt ist <xref:System.Web.Security.MembershipPasswordFormat.Hashed>, wie der Benutzer keine Werte für Hashkennwörter abrufen können.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt das Element in der `system.web` -Abschnitt der Datei "Web.config" für eine ASP.NET-Anwendung. Es gibt an, dass die Anwendung eine Instanz von der <xref:System.Web.Security.SqlMembershipProvider> und ermöglicht das Zurücksetzen des Kennworts.  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="false"  
      enablePasswordReset="true"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Hashed"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 Im folgenden Codebeispiel wird zunächst überprüft, ob <xref:System.Web.Security.Membership.EnablePasswordReset%2A> ist `true`, klicken Sie dann das Kennwort eines Benutzers zurückgesetzt, und gibt das neue, automatisch generierte Kennwort zurück.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ResetPasswordcs.aspx#8)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ResetPasswordvb.aspx#8)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Einführung in die ASP.NET-Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="EnablePasswordRetrieval">
      <MemberSignature Language="C#" Value="public static bool EnablePasswordRetrieval { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool EnablePasswordRetrieval" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.EnablePasswordRetrieval" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property EnablePasswordRetrieval As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool EnablePasswordRetrieval { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EnablePasswordRetrieval : bool" Usage="System.Web.Security.Membership.EnablePasswordRetrieval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der aktuelle Mitgliedschaftsanbieter so konfiguriert ist, dass Benutzer ihre Kennwörter abrufen können.</summary>
        <value>
          <see langword="true" />, wenn der Mitgliedschaftsanbieter das Abrufen von Kennwörtern unterstützt, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn <xref:System.Web.Security.Membership.EnablePasswordRetrieval%2A> ist `false`, der zugrunde liegenden Mitgliedschaftsanbieter Auslösen einer <xref:System.Web.HttpException>.  
  
 Die Anbieter, die mit .NET Framework enthalten sind, unterstützen mehrere Kennwortformaten Kennwort aus Sicherheitsgründen. Wenn das Kennwortformat, um festgelegt ist <xref:System.Web.Security.MembershipPasswordFormat.Hashed>, und klicken Sie dann Benutzern nicht auf ihr vorhandene Kennwort aus der Datenbank abgerufen werden können. Die <xref:System.Web.Security.MembershipPasswordFormat.Hashed> Kennwortformat bietet unidirektionale Codierung Kennwort-Werte. Kennwörter sind "Hash" und in der Datenbank für die Authentifizierung gespeicherten Werten verglichen. "Hash" Werte können nicht zum Abrufen des Werts der ursprünglichen Kennwort nicht codiert sein. Weitere Informationen finden Sie unter <xref:System.Web.Security.MembershipPasswordFormat>.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt das Element in der `system.web` -Abschnitt der Datei "Web.config" für eine ASP.NET-Anwendung. Es gibt an, dass die Anwendung eine Instanz von der <xref:System.Web.Security.SqlMembershipProvider> und ermöglicht das Abrufen von Kennwörtern.  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="true"  
      enablePasswordReset="false"  
      requiresQuestionAndAnswer="false"  
      passwordFormat="Encrypted"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 Im folgenden Codebeispiel wird zunächst überprüft, ob <xref:System.Web.Security.Membership.EnablePasswordRetrieval%2A> ist `true`, klicken Sie dann das Kennwort für einen angegebenen Benutzer abgerufen und sendet sie an die e-Mail-Adresse für den angegebenen Benutzer.  
  
> [!IMPORTANT]
>  Rückgabe des Kennworts in Klartext mithilfe von e-Mail-Adresse wird für Standorte, die ein hohes Maß an Sicherheit erfordern, nicht empfohlen. Für Websites mit hoher Sicherheit empfehlen wir, dass Sie Kennwörter mit Verschlüsselung, z. B. SSL zurückgeben.  
>   
>  Dieses Beispiel enthält das Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko dar. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/RetrievePasswordcs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/RetrievePasswordvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Einführung in die ASP.NET-Mitgliedschaft</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindUsersByEmail">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ruft eine Auflistung von Mitgliedschaftsbenutzern ab, bei denen die E-Mail-Adresse die zu vergleichende angegebene E-Mail-Adresse enthält.</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Einführung in die ASP.NET-Mitgliedschaft</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindUsersByEmail">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUserCollection FindUsersByEmail (string emailToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUserCollection FindUsersByEmail(string emailToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.FindUsersByEmail(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindUsersByEmail (emailToMatch As String) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUserCollection ^ FindUsersByEmail(System::String ^ emailToMatch);" />
      <MemberSignature Language="F#" Value="static member FindUsersByEmail : string -&gt; System.Web.Security.MembershipUserCollection" Usage="System.Web.Security.Membership.FindUsersByEmail emailToMatch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="emailToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="emailToMatch">Die gesuchte E-Mail-Adresse.</param>
        <summary>Ruft eine Auflistung von Mitgliedschaftsbenutzern ab, bei denen die E-Mail-Adresse die zu vergleichende angegebene E-Mail-Adresse enthält.</summary>
        <returns>Eine <see cref="T:System.Web.Security.MembershipUserCollection" />, die alle Benutzer enthält, die dem <paramref name="emailToMatch" />-Parameter entsprechen.  
  
Beim <paramref name="emailToMatch" />-Parameterwert werden führende und nachstehende Leerzeichen abgeschnitten.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.FindUsersByEmail%2A> Gibt eine Liste von Mitgliedschaftsbenutzern, bei denen die e-Mail-Adresse, die dem angegebenen übereinstimmt `emailToMatch` für die konfigurierte `applicationName`.  
  
 Die <xref:System.Web.Security.SqlMembershipProvider> führt seine Suche mit einer LIKE-Klausel für die `emailToMatch` Parameter. Alle Platzhalter, die von SQL Server unterstützt werden, wie in Klauseln verwendet werden können die `emailToMatch` Parameterwert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die <xref:System.Web.Security.Membership.FindUsersByEmail%2A> Methode zum Abrufen von Mitgliedschaftsinformationen für Benutzer aus der Mitgliedschaftsdatenbank auf Grundlage der Benutzereingabe und zeigt die Ergebnisse auf Seiten mit Daten.  
  
> [!IMPORTANT]
>  Dieses Beispiel enthält das Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko dar. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.Membership#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/FindUsersByEmailcs.aspx#9)]
 [!code-aspx-vb[System.Web.Security.Membership#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/FindUsersByEmailvb.aspx#9)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Einführung in die ASP.NET-Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="FindUsersByEmail">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUserCollection FindUsersByEmail (string emailToMatch, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUserCollection FindUsersByEmail(string emailToMatch, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindUsersByEmail (emailToMatch As String, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUserCollection ^ FindUsersByEmail(System::String ^ emailToMatch, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="static member FindUsersByEmail : string * int * int *  -&gt; System.Web.Security.MembershipUserCollection" Usage="System.Web.Security.Membership.FindUsersByEmail (emailToMatch, pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="emailToMatch" Type="System.String" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="emailToMatch">Die gesuchte E-Mail-Adresse.</param>
        <param name="pageIndex">Der Index der zurückzugebenden Ergebnisseite. <c>pageIndex</c> ist nullbasiert.</param>
        <param name="pageSize">Die Größe der zurückzugebenden Ergebnisseite.</param>
        <param name="totalRecords">Die Gesamtanzahl übereinstimmender Benutzer.</param>
        <summary>Ruft eine Auflistung von Mitgliedschaftsbenutzern auf einer Datenseite ab, deren E-Mail-Adresse die angegebene E-Mail-Adresse enthält.</summary>
        <returns>Eine <see cref="T:System.Web.Security.MembershipUserCollection" />, die eine Seite mit <paramref name="pageSize" /><see cref="T:System.Web.Security.MembershipUser" />-Objekten enthält, die auf der durch <paramref name="pageIndex" /> angegebenen Seite beginnen.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.FindUsersByEmail%2A> Gibt eine Liste von Mitgliedschaftsbenutzern, bei denen die e-Mail-Adresse, die dem angegebenen übereinstimmt `emailToMatch` für die konfigurierte `applicationName`.  
  
 Die <xref:System.Web.Security.SqlMembershipProvider> führt seine Suche mit einer LIKE-Klausel für die `emailToMatch` Parameter. Alle Platzhalter, die von SQL Server unterstützt werden, wie in Klauseln verwendet werden können die `emailToMatch` Parameterwert.  
  
 Die Ergebnisse <xref:System.Web.Security.Membership.FindUsersByEmail%2A> sind eingeschränkt, indem die `pageIndex` und `pageSize` Parameter. Die `pageSize` Parameter identifiziert die maximale Anzahl von <xref:System.Web.Security.MembershipUser> zurückzugebenden in Objekte der <xref:System.Web.Security.MembershipUserCollection>. Die `pageIndex` Parameter identifiziert, welche Seite der Ergebnisse zurückgegeben, wobei 0 die erste Seite bezeichnet. Die `totalRecords` -Parameter ist ein `out` Parameter, auf die Gesamtzahl der Mitgliedschaftsbenutzer festgelegt wird, die abgeglichen, der `emailToMatch` Wert. Z. B. 13 Benutzer gefunden wurden `emailToMatch` Teil oder der gesamte e-Mail-Adresse übereinstimmt und die `pageIndex` Wert ist 1 mit einer `pageSize` 5. Dies ist der <xref:System.Web.Security.MembershipUserCollection> zurückgegeben würde den sechsten bis zehnten zurückgegebenen Benutzer enthalten. `totalRecords` wird auf 13 festgelegt werden.  
  
 Beim `emailToMatch`-Parameterwert werden führende und nachstehende Leerzeichen abgeschnitten.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die <xref:System.Web.Security.Membership.FindUsersByEmail%2A> Methode zum Abrufen von Mitgliedschaftsinformationen für Benutzer aus der Mitgliedschaftsdatenbank auf Grundlage der Benutzereingabe und zeigt die Ergebnisse auf Seiten mit Daten.  
  
> [!IMPORTANT]
>  Dieses Beispiel enthält das Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko dar. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#13](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/FindUsersByEmailcs.aspx#13)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/FindUsersByEmailvb.aspx#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="pageIndex" /> ist kleiner als Null.  
  
- oder -  
 <paramref name="pageSize" /> ist kleiner als 1.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Einführung in die ASP.NET-Mitgliedschaft</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindUsersByName">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ruft eine Auflistung von Mitgliedschaftsbenutzern ab, bei der der Benutzername mit einem angegebenen Benutzernamen übereinstimmt.</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Einführung in die ASP.NET-Mitgliedschaft</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindUsersByName">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUserCollection FindUsersByName (string usernameToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUserCollection FindUsersByName(string usernameToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.FindUsersByName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindUsersByName (usernameToMatch As String) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUserCollection ^ FindUsersByName(System::String ^ usernameToMatch);" />
      <MemberSignature Language="F#" Value="static member FindUsersByName : string -&gt; System.Web.Security.MembershipUserCollection" Usage="System.Web.Security.Membership.FindUsersByName usernameToMatch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernameToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="usernameToMatch">Der zu suchende Benutzername.</param>
        <summary>Ruft eine Auflistung von Mitgliedschaftsbenutzern ab, bei der der Benutzername mit einem angegebenen Benutzernamen übereinstimmt.</summary>
        <returns>Eine <see cref="T:System.Web.Security.MembershipUserCollection" />, die alle Benutzer enthält, die dem <paramref name="usernameToMatch" />-Parameter entsprechen.  
  
Beim <paramref name="usernameToMatch" />-Parameterwert werden führende und nachstehende Leerzeichen abgeschnitten.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A> Gibt eine Liste der Mitgliedschaftsbenutzer zurück, in dem angegebenen Benutzernamen den angegebenen `usernameToMatch` für die konfigurierte `applicationName`.  
  
 Die <xref:System.Web.Security.SqlMembershipProvider> führt seine Suche mit einer LIKE-Klausel für die `usernameToMatch` Parameter. Alle Platzhalter, die von SQL Server unterstützt werden, wie in Klauseln verwendet werden können die `usernameToMatch` Parameterwert.  
  
 Von der alle Parameterwerte werden führende und nachfolgende Leerzeichen abgeschnitten.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die <xref:System.Web.Security.Membership.FindUsersByName%2A> Methode zum Abrufen von Mitgliedschaftsinformationen für Benutzer aus der Mitgliedschaftsdatenbank auf Grundlage der Benutzereingabe und zeigt die Ergebnisse auf Seiten mit Daten.  
  
> [!IMPORTANT]
>  Dieses Beispiel enthält das Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko dar. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.Membership#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/FindUsersByNamecs.aspx#10)]
 [!code-aspx-vb[System.Web.Security.Membership#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/FindUsersByNamevb.aspx#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="usernameToMatch" /> ist eine leere Zeichenfolge.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="usernameToMatch" /> ist <see langword="null" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Einführung in die ASP.NET-Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="FindUsersByName">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUserCollection FindUsersByName (string usernameToMatch, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUserCollection FindUsersByName(string usernameToMatch, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindUsersByName (usernameToMatch As String, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUserCollection ^ FindUsersByName(System::String ^ usernameToMatch, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="static member FindUsersByName : string * int * int *  -&gt; System.Web.Security.MembershipUserCollection" Usage="System.Web.Security.Membership.FindUsersByName (usernameToMatch, pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernameToMatch" Type="System.String" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="usernameToMatch">Der zu suchende Benutzername.</param>
        <param name="pageIndex">Der Index der zurückzugebenden Ergebnisseite. <c>pageIndex</c> ist nullbasiert.</param>
        <param name="pageSize">Die Größe der zurückzugebenden Ergebnisseite.</param>
        <param name="totalRecords">Die Gesamtanzahl übereinstimmender Benutzer.</param>
        <summary>Ruft eine Auflistung von Mitgliedschaftsbenutzern auf einer Datenseite ab, deren Benutzername den angegebenen Vergleichsbenutzernamen enthält.</summary>
        <returns>Eine <see cref="T:System.Web.Security.MembershipUserCollection" />, die eine Seite mit <paramref name="pageSize" /><see cref="T:System.Web.Security.MembershipUser" />-Objekten enthält, die auf der durch <paramref name="pageIndex" /> angegebenen Seite beginnen.  
  
Beim <paramref name="usernameToMatch" />-Parameterwert werden führende und nachstehende Leerzeichen abgeschnitten.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A> Gibt eine Liste der Mitgliedschaftsbenutzer zurück, in dem angegebenen Benutzernamen den angegebenen `usernameToMatch` für die konfigurierte `applicationName`.  
  
 Die <xref:System.Web.Security.SqlMembershipProvider> führt seine Suche mit einer LIKE-Klausel für die `usernameToMatch` Parameter. Alle Platzhalter, die von SQL Server unterstützt werden, wie in Klauseln verwendet werden können die `usernameToMatch` Parameterwert.  
  
 Die Ergebnisse <xref:System.Web.Security.Membership.FindUsersByName%2A> sind eingeschränkt, indem die `pageIndex` und `pageSize` Parameter. Die `pageSize` Parameter identifiziert die maximale Anzahl von <xref:System.Web.Security.MembershipUser> zurückzugebenden in Objekte der <xref:System.Web.Security.MembershipUserCollection>. Die `pageIndex` Parameter identifiziert, welche Seite der Ergebnisse zurückgegeben, wobei 0 die erste Seite bezeichnet. Die `totalRecords` -Parameter ist ein `out` Parameter, auf die Gesamtzahl der Mitgliedschaftsbenutzer festgelegt wird, die abgeglichen, der `usernameToMatch` Wert. Z. B. 13 Benutzer gefunden wurden `usernameToMatch` Teil oder den ganzen Benutzernamen übereinstimmt und die `pageIndex` Wert ist 1 mit einer `pageSize` 5. Dies ist die <xref:System.Web.Security.MembershipUserCollection> zurückgegeben würde den sechsten bis zehnten zurückgegebenen Benutzer enthalten. `totalRecords` wird auf 13 festgelegt werden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die <xref:System.Web.Security.Membership.FindUsersByName%2A> Methode zum Abrufen von Mitgliedschaftsinformationen für Benutzer aus der Mitgliedschaftsdatenbank auf Grundlage der Benutzereingabe und zeigt die Ergebnisse auf Seiten mit Daten.  
  
> [!IMPORTANT]
>  Dieses Beispiel enthält das Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko dar. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#12](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/FindUsersByNamecs.aspx#12)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/FindUsersByNamevb.aspx#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="usernameToMatch" /> ist eine leere Zeichenfolge.  
  
- oder -  
 <paramref name="pageIndex" /> ist kleiner als Null.  
  
- oder -  
 <paramref name="pageSize" /> ist kleiner als 1.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="usernameToMatch" /> ist <see langword="null" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Einführung in die ASP.NET-Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="GeneratePassword">
      <MemberSignature Language="C#" Value="public static string GeneratePassword (int length, int numberOfNonAlphanumericCharacters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GeneratePassword(int32 length, int32 numberOfNonAlphanumericCharacters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GeneratePassword(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GeneratePassword (length As Integer, numberOfNonAlphanumericCharacters As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GeneratePassword(int length, int numberOfNonAlphanumericCharacters);" />
      <MemberSignature Language="F#" Value="static member GeneratePassword : int * int -&gt; string" Usage="System.Web.Security.Membership.GeneratePassword (length, numberOfNonAlphanumericCharacters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="numberOfNonAlphanumericCharacters" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="length">Die Anzahl der Zeichen im generierten Kennwort. Die Länge muss zwischen 1 und 128 Zeichen betragen.</param>
        <param name="numberOfNonAlphanumericCharacters">Die Mindestanzahl von nicht alphanumerischen Zeichen (wie z.B. @, #, !, %, &amp; usw.) im generierten Kennwort.</param>
        <summary>Generiert nach dem Zufallsprinzip ein Kennwort mit der angegebenen Länge.</summary>
        <returns>Ein nach dem Zufallsprinzip generiertes Kennwort mit der angegebenen Länge.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.Membership.GeneratePassword%2A> -Methode wird verwendet, um ein zufälliges Kennwort generiert und wird am häufigsten verwendet werden, indem die <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> Methode implementiert, die von einem Mitgliedschaftsanbieter, das Kennwort für einen Benutzer auf eine neue, temporäre Kennwort zurückzusetzen.  
  
 Das generierte Kennwort enthält nur alphanumerische Zeichen und die folgenden Satzzeichen: `!@#$%^&*()_-+=[{]};:<>|./?`. Keine ausgeblendet oder nicht druckbare Zeichen sind in das generierte Kennwort enthalten.  
  
> [!NOTE]
>  Die zufälliges Kennwort erstellt, indem die <xref:System.Web.Security.Membership.GeneratePassword%2A> Methode nicht notwendigerweise die Kriterien für reguläre Ausdrücke in der <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A> Eigenschaft. Zufällige Kennwort entspricht jedoch die Kriterien, die hergestellt, indem die <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A> Eigenschaft und die `numberOfNonAlphanumericCharacters` Parameter.  
  
   
  
## Examples  
 Das folgende Codebeispiel erstellt einen neuen Mitgliedschaftsbenutzer vorgenommen und verwendet die <xref:System.Web.Security.Membership.GeneratePassword%2A> Methode, um das Kennwort für den neuen Benutzer auf einen zufälligen Wert initialisiert werden, die dem Benutzer angezeigt wird.  
  
> [!IMPORTANT]
>  Dieses Beispiel enthält das Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko dar. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.Membership#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/GeneratePasswordcs.aspx#5)]
 [!code-aspx-vb[System.Web.Security.Membership#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/GeneratePasswordvb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="length" /> ist kleiner als 1 oder größer als 128 – oder – 
 <paramref name="numberOfNonAlphanumericCharacters" /> ist kleiner als 0 oder größer als <paramref name="length" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Einführung in die ASP.NET-Mitgliedschaft</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAllUsers">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ruft eine Auflistung der Benutzer in der Datenbank ab.</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Einführung in die ASP.NET-Mitgliedschaft</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAllUsers">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUserCollection GetAllUsers ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUserCollection GetAllUsers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetAllUsers" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllUsers () As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUserCollection ^ GetAllUsers();" />
      <MemberSignature Language="F#" Value="static member GetAllUsers : unit -&gt; System.Web.Security.MembershipUserCollection" Usage="System.Web.Security.Membership.GetAllUsers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft eine Auflistung aller Benutzer in der Datenbank ab.</summary>
        <returns>Eine <see cref="T:System.Web.Security.MembershipUserCollection" /> von <see cref="T:System.Web.Security.MembershipUser" />-Objekten, die alle Benutzer in der Datenbank darstellen.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetAllUsers%2A> Gibt zurück, die Informationen für alle Mitgliedschaftsbenutzer für eine Anwendung als eine Auflistung von <xref:System.Web.Security.MembershipUser> Objekte. Achten Sie bei Verwendung der <xref:System.Web.Security.Membership.GetAllUsers%2A> -Methode mit sehr großen Benutzerdatenbanken, als das resultierende <xref:System.Web.Security.MembershipUserCollection> in ASP.NET kann Seite die Leistung Ihrer Anwendung beeinträchtigen.  
  
   
  
## Examples  
 Das folgende Codebeispiel gibt eine Liste der Benutzer mit der Anzahl der Benutzer derzeit online.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ShowUserscs.aspx#5)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ShowUsersvb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Einführung in die ASP.NET-Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="GetAllUsers">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUserCollection GetAllUsers (int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUserCollection GetAllUsers(int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetAllUsers(System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllUsers (pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUserCollection ^ GetAllUsers(int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="static member GetAllUsers : int * int *  -&gt; System.Web.Security.MembershipUserCollection" Usage="System.Web.Security.Membership.GetAllUsers (pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pageIndex">Der Index der zurückzugebenden Ergebnisseite. Verwenden Sie 0 (null), um die erste Seite anzugeben.</param>
        <param name="pageSize">Die Größe der zurückzugebenden Ergebnisseite. <c>pageIndex</c> ist nullbasiert.</param>
        <param name="totalRecords">Die Gesamtanzahl der Benutzer.</param>
        <summary>Ruft eine Auflistung aller Benutzer in der Datenbank in Datenseiten ab.</summary>
        <returns>Eine <see cref="T:System.Web.Security.MembershipUserCollection" /> von <see cref="T:System.Web.Security.MembershipUser" />-Objekten, die alle Benutzer in der Datenbank für den konfigurierten <see langword="applicationName" /> darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Ergebnisse <xref:System.Web.Security.Membership.GetAllUsers%2A> sind eingeschränkt, indem die `pageIndex` und `pageSize` Parameter. Die `pageSize` Parameter identifiziert die maximale Anzahl von <xref:System.Web.Security.MembershipUser> zurückzugebenden in Objekte der <xref:System.Web.Security.MembershipUserCollection>. Die `pageIndex` Parameter identifiziert, welche Seite der Ergebnisse zurückgegeben, wobei 0 die erste Seite bezeichnet. Die `totalRecords` -Parameter ist ein `out` Parameter, der die Gesamtzahl der Mitgliedschaftsbenutzer für die konfigurierte festgelegt ist `applicationName`. Z. B. 13 Benutzer für die konfigurierte vorhanden sind `applicationName`, und die `pageIndex` Wert ist 1 mit einer `pageSize` 5. Dies ist die <xref:System.Web.Security.MembershipUserCollection> zurückgegeben würde den sechsten bis zehnten zurückgegebenen Benutzer enthalten. `totalRecords` wird auf 13 festgelegt werden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine Liste der Benutzer gibt, in Seiten mit Daten mit der Anzahl der Benutzer derzeit online.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ShowUserscs.aspx#5)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ShowUsersvb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="pageIndex" /> ist kleiner als Null.  
  
- oder -  
 <paramref name="pageSize" /> ist kleiner als 1.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Einführung in die ASP.NET-Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="GetNumberOfUsersOnline">
      <MemberSignature Language="C#" Value="public static int GetNumberOfUsersOnline ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetNumberOfUsersOnline() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetNumberOfUsersOnline" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNumberOfUsersOnline () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetNumberOfUsersOnline();" />
      <MemberSignature Language="F#" Value="static member GetNumberOfUsersOnline : unit -&gt; int" Usage="System.Web.Security.Membership.GetNumberOfUsersOnline " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft die Anzahl der Benutzer ab, die gegenwärtig auf eine Anwendung zugreifen.</summary>
        <returns>Die Anzahl der Benutzer, die gegenwärtig auf eine Anwendung zugreifen.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline%2A> Gibt die Anzahl der Benutzer für die aktuelle <xref:System.Web.Security.Membership.ApplicationName%2A> , in denen das Datum der letzten Aktivität ist größer als die aktuelle Zeit weniger die <xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A>. Der letzten Aktivität Datums-/Zeitstempel wird aktualisiert, um das aktuelle Datum und die Uhrzeit aus, bei der Überprüfung von Anmeldeinformationen mit, der <xref:System.Web.Security.Membership.ValidateUser%2A> oder <xref:System.Web.Security.Membership.UpdateUser%2A> Methode oder wenn bei einem Aufruf einer <xref:System.Web.Security.Membership.GetUser%2A> Überladung, die akzeptiert keine Parameter oder die verwendet`userIsOnline`Parameter, um anzugeben, dass die Datums-/Zeitstempel aktualisiert werden sollen.  
  
   
  
## Examples  
 Das folgende Codebeispiel gibt eine Liste der Benutzer mit der Anzahl der Benutzer derzeit online.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ShowUserscs.aspx#5)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ShowUsersvb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Einführung in die ASP.NET-Mitgliedschaft</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUser">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ruft die Informationen für einen Mitgliedschaftsbenutzer aus der Datenquelle ab.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser GetUser ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser GetUser() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetUser" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUser () As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ GetUser();" />
      <MemberSignature Language="F#" Value="static member GetUser : unit -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.GetUser " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft die Informationen aus der Datenquelle ab und aktualisiert den Datums-/Zeitstempel der letzten Aktivität für den derzeit angemeldeten Mitgliedschaftsbenutzer.</summary>
        <returns>Ein <see cref="T:System.Web.Security.MembershipUser" />-Objekt, das den derzeit angemeldeten Benutzer darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetUser> Ruft die Benutzerinformationen aus der Datenquelle ab und erstellt eine <xref:System.Web.Security.MembershipUser> Objekt mit den zurückgegebenen Daten aufgefüllt wurde. Bei Verwendung eines der <xref:System.Web.Security.Membership.GetUser%2A> Überladungen, die keine `username` Parameter <xref:System.Web.Security.Membership.GetUser%2A> gibt die Informationen für den derzeit angemeldeten Mitgliedschaftsbenutzer zurück. Der derzeit angemeldeten Mitgliedschaftsbenutzer wird durch identifiziert die <xref:System.Security.Principal.IIdentity.Name%2A> des Benutzers in der aktuellen <xref:System.Web.HttpContext>.  
  
 Sie können auch angeben, ob Sie möchten <xref:System.Web.Security.Membership.GetUser%2A> zum Aktualisieren der letzten Aktivität Datums-/Zeitstempel für den Benutzer abgerufen werden, mithilfe der `userIsOnline` Parameter. Von der <xref:System.Web.Security.Membership.GetUser%2A> Überladungen, die keinen akzeptieren einen `userIsOnline` Parameter `GetUser()` implizit Updates der letzten Aktivität Datums-/Zeitstempel für den Benutzer. `GetUser(System.String)` und `GetUser(System.Object)` nicht der Fall.  
  
   
  
## Examples  
 Im folgenden Code-Beispiel aktualisiert der letzten Aktivität Datums-/Zeitstempel für den derzeit angemeldeten Mitgliedschaftsbenutzer und zeigt den Benutzernamen an, auf der ASP.NET-Seite.  
  
 [!code-aspx-csharp[System.Web.Security.Membership#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/default1cs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.Membership#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/default1vb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Kein Mitgliedschaftsbenutzer ist derzeit angemeldet.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Einführung in die ASP.NET-Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser GetUser (bool userIsOnline);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser GetUser(bool userIsOnline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetUser(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUser (userIsOnline As Boolean) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ GetUser(bool userIsOnline);" />
      <MemberSignature Language="F#" Value="static member GetUser : bool -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.GetUser userIsOnline" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userIsOnline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="userIsOnline">Wenn der Wert <see langword="true" /> ist, wird der Datums-/Zeitstempel der letzten Aktivität für den angegebenen Benutzer aktualisiert.</param>
        <summary>Ruft die Informationen für den derzeit angemeldeten Mitgliedschaftsbenutzer aus der Datenquelle ab. Aktualisiert den Datums-/Zeitstempel der letzten Aktivität für den derzeit angemeldeten Mitgliedschaftsbenutzer, falls ein solcher angegeben ist.</summary>
        <returns>Ein <see cref="T:System.Web.Security.MembershipUser" />-Objekt, das den derzeit angemeldeten Benutzer darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.Membership.GetUser%2A> Methode ruft die Benutzerinformationen aus der Datenquelle ab und erstellt eine <xref:System.Web.Security.MembershipUser> Objekt mit den zurückgegebenen Daten aufgefüllt wurde. Bei Verwendung eines der <xref:System.Web.Security.Membership.GetUser%2A> Überladungen, die keine `username` Parameter <xref:System.Web.Security.Membership.GetUser%2A> gibt die Informationen für den derzeit angemeldeten Mitgliedschaftsbenutzer zurück. Der derzeit angemeldeten Mitgliedschaftsbenutzer wird durch identifiziert die <xref:System.Security.Principal.IIdentity.Name%2A> des Benutzers in der aktuellen <xref:System.Web.HttpContext>.  
  
 Sie können auch angeben, ob Sie möchten <xref:System.Web.Security.Membership.GetUser%2A> zum Aktualisieren der letzten Aktivität Datums-/Zeitstempel für den Benutzer abgerufen werden, mithilfe der `userIsOnline` Parameter. Von der <xref:System.Web.Security.Membership.GetUser%2A> Überladungen, die keinen akzeptieren einen `userIsOnline` Parameter `GetUser()` implizit Updates der letzten Aktivität Datums-/Zeitstempel für den Benutzer. `GetUser(System.String)` und `GetUser(System.Object)` nicht der Fall.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt den Benutzernamen, die für den derzeit angemeldeten Mitgliedschaftsbenutzer auf der ASP.NET-Seite ohne Aktualisierung der letzten Aktivität an Datums-/Zeitstempel für den Benutzer.  
  
 [!code-aspx-csharp[System.Web.Security.Membership#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/default2cs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.Membership#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/default2vb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Kein Mitgliedschaftsbenutzer ist derzeit angemeldet.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Einführung in die ASP.NET-Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser GetUser (object providerUserKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser GetUser(object providerUserKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetUser(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUser (providerUserKey As Object) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ GetUser(System::Object ^ providerUserKey);" />
      <MemberSignature Language="F#" Value="static member GetUser : obj -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.GetUser providerUserKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerUserKey" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="providerUserKey">Der eindeutige Benutzerbezeichner aus der Mitgliedschaftsdatenquelle für den Benutzer.</param>
        <summary>Ruft die Informationen für den Mitgliedschaftsbenutzer aus der Datenquelle ab, der dem angegebenen eindeutigen Bezeichner zugeordnet ist.</summary>
        <returns>Ein <see cref="T:System.Web.Security.MembershipUser" />-Objekt, das den Benutzer darstellt, der dem angegebenen eindeutigen Bezeichner zugeordnet ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.Membership.GetUser%2A> Methode ruft die Benutzerinformationen aus der Datenquelle ab und erstellt eine <xref:System.Web.Security.MembershipUser> Objekt mit den zurückgegebenen Daten aufgefüllt wurde. Der Benutzer identifiziert wird, mit dem eindeutigen Bezeichner aus der Datenquelle angegeben, mit der `providerUserKey` Parameter.  
  
 Sie können auch angeben, ob Sie möchten <xref:System.Web.Security.Membership.GetUser%2A> zum Aktualisieren der letzten Aktivität Datums-/Zeitstempel für den Benutzer, die abgerufen werden, mit der `userIsOnline` Parameter. Von der <xref:System.Web.Security.Membership.GetUser%2A> Überladungen, die keinen akzeptieren einen `userIsOnline` Parameter `GetUser()` implizit Updates der letzten Aktivität Datums-/Zeitstempel für den Benutzer. `GetUser(System.String)` und `GetUser(System.Object)` nicht  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="providerUserKey" /> ist <see langword="null" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Einführung in die ASP.NET-Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser GetUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser GetUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUser (username As String) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ GetUser(System::String ^ username);" />
      <MemberSignature Language="F#" Value="static member GetUser : string -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.GetUser username" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Der Name des abzurufenden Benutzers.</param>
        <summary>Ruft die Informationen für den angegebenen Mitgliedschaftsbenutzer aus der Datenquelle ab.</summary>
        <returns>Ein <see cref="T:System.Web.Security.MembershipUser" />-Objekt, das den angegebenen Benutzer darstellt. Wenn der <paramref name="username" />-Parameter nicht einem vorhandenen Benutzer entspricht, gibt diese Methode <see langword="null" /> zurück.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.Membership.GetUser%2A> Methode ruft die Benutzerinformationen aus der Datenquelle ab und erstellt eine <xref:System.Web.Security.MembershipUser> Objekt mit den zurückgegebenen Daten aufgefüllt wurde. Bei Verwendung eines der <xref:System.Web.Security.Membership.GetUser%2A> Überladungen, die keine `username` Parameter <xref:System.Web.Security.Membership.GetUser%2A> gibt die Informationen für den derzeit angemeldeten Mitgliedschaftsbenutzer zurück. Der derzeit angemeldeten Mitgliedschaftsbenutzer wird durch identifiziert die <xref:System.Security.Principal.IIdentity.Name%2A> des Benutzers in der aktuellen <xref:System.Web.HttpContext>.  
  
 Sie können auch angeben, ob Sie möchten <xref:System.Web.Security.Membership.GetUser%2A> zum Aktualisieren der letzten Aktivität Datums-/Zeitstempel für den Benutzer, die abgerufen werden, mit der `userIsOnline` Parameter. Von der <xref:System.Web.Security.Membership.GetUser%2A> Überladungen, die keinen akzeptieren einen `userIsOnline` Parameter <xref:System.Web.Security.Membership.GetUser%2A?displayProperty=nameWithType> implizit Updates der letzten Aktivität Datums-/Zeitstempel für den Benutzer. <xref:System.Web.Security.Membership.GetUser%2A?displayProperty=nameWithType> und <xref:System.Web.Security.Membership.GetUser%2A> nicht der Fall.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die <xref:System.Web.Security.Membership.GetUser%2A> -Methode zur Rückgabe einer <xref:System.Web.Security.MembershipUser> -Objekt für den aktuellen Benutzer angemeldet und Updates, die die e-Mail-Adresse für den Benutzer.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/UpdateEmailcs.aspx#11)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/UpdateEmailvb.aspx#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> enthält ein Komma (,).</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> ist <see langword="null" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Einführung in die ASP.NET-Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser GetUser (object providerUserKey, bool userIsOnline);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser GetUser(object providerUserKey, bool userIsOnline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetUser(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUser (providerUserKey As Object, userIsOnline As Boolean) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ GetUser(System::Object ^ providerUserKey, bool userIsOnline);" />
      <MemberSignature Language="F#" Value="static member GetUser : obj * bool -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.GetUser (providerUserKey, userIsOnline)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerUserKey" Type="System.Object" />
        <Parameter Name="userIsOnline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="providerUserKey">Der eindeutige Benutzerbezeichner aus der Mitgliedschaftsdatenquelle für den Benutzer.</param>
        <param name="userIsOnline">Wenn der Wert <see langword="true" /> ist, wird der Datums-/Zeitstempel der letzten Aktivität für den angegebenen Benutzer aktualisiert.</param>
        <summary>Ruft die Informationen für den Mitgliedschaftsbenutzer aus der Datenquelle ab, der dem angegebenen eindeutigen Bezeichner zugeordnet ist. Aktualisiert den Datums-/Zeitstempel der letzten Aktivität für den Benutzer, falls ein solcher angegeben ist.</summary>
        <returns>Ein <see cref="T:System.Web.Security.MembershipUser" />-Objekt, das den Benutzer darstellt, der dem angegebenen eindeutigen Bezeichner zugeordnet ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.Membership.GetUser%2A> Methode ruft die Benutzerinformationen aus der Datenquelle ab und erstellt eine <xref:System.Web.Security.MembershipUser> Objekt mit den zurückgegebenen Daten aufgefüllt wurde. Der Benutzer wird mit dem eindeutigen Bezeichner aus der Datenquelle, die im angegebenen identifiziert die `providerUserKey` Parameter.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="providerUserKey" /> ist <see langword="null" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Einführung in die ASP.NET-Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser GetUser (string username, bool userIsOnline);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser GetUser(string username, bool userIsOnline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetUser(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUser (username As String, userIsOnline As Boolean) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ GetUser(System::String ^ username, bool userIsOnline);" />
      <MemberSignature Language="F#" Value="static member GetUser : string * bool -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.GetUser (username, userIsOnline)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="userIsOnline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">Der Name des abzurufenden Benutzers.</param>
        <param name="userIsOnline">Wenn der Wert <see langword="true" /> ist, wird der Datums-/Zeitstempel der letzten Aktivität für den angegebenen Benutzer aktualisiert.</param>
        <summary>Ruft die Informationen für den angegebenen Mitgliedschaftsbenutzer aus der Datenquelle ab. Aktualisiert den Datums-/Zeitstempel der letzten Aktivität für den Benutzer, falls ein solcher angegeben ist.</summary>
        <returns>Ein <see cref="T:System.Web.Security.MembershipUser" />-Objekt, das den angegebenen Benutzer darstellt. Wenn der <paramref name="username" />-Parameter nicht einem vorhandenen Benutzer entspricht, gibt diese Methode <see langword="null" /> zurück.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.Membership.GetUser%2A> Methode ruft die Benutzerinformationen aus der Datenquelle ab und erstellt eine <xref:System.Web.Security.MembershipUser> Objekt mit den zurückgegebenen Daten aufgefüllt wurde.  
  
 Bei Verwendung eines der <xref:System.Web.Security.Membership.GetUser%2A> Überladungen, die keine `username` Parameter <xref:System.Web.Security.Membership.GetUser%2A> gibt die Informationen für den derzeit angemeldeten Mitgliedschaftsbenutzer zurück. Der derzeit angemeldeten Mitgliedschaftsbenutzer wird durch identifiziert die <xref:System.Security.Principal.IIdentity.Name%2A> des Benutzers in der aktuellen <xref:System.Web.HttpContext>.  
  
 Sie können auch angeben, ob Sie möchten <xref:System.Web.Security.Membership.GetUser%2A> zum Aktualisieren der letzten Aktivität Datums-/Zeitstempel für den Benutzer, die abgerufen werden, mit der `userIsOnline` Parameter. Von der <xref:System.Web.Security.Membership.GetUser%2A> Überladungen, die keinen akzeptieren einen `userIsOnline` Parameter <xref:System.Web.Security.Membership.GetUser%2A?displayProperty=nameWithType> implizit Updates der letzten Aktivität Datums-/Zeitstempel für den Benutzer. <xref:System.Web.Security.Membership.GetUser%2A?displayProperty=nameWithType> und <xref:System.Web.Security.Membership.GetUser%2A> nicht der Fall.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird das Kennwort für einen angegebenen Benutzer abgerufen und an die e-Mail-Adresse für den angegebenen Benutzer gesendet. Der Aufruf von <xref:System.Web.Security.Membership.GetUser%2A> gibt an, dass der Datums-/Zeitstempel der letzten Aktivität für den Benutzer nicht aktualisiert werden.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/RetrievePasswordcs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/RetrievePasswordvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> enthält ein Komma (,).</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> ist <see langword="null" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Einführung in die ASP.NET-Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="GetUserNameByEmail">
      <MemberSignature Language="C#" Value="public static string GetUserNameByEmail (string emailToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetUserNameByEmail(string emailToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetUserNameByEmail(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUserNameByEmail (emailToMatch As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetUserNameByEmail(System::String ^ emailToMatch);" />
      <MemberSignature Language="F#" Value="static member GetUserNameByEmail : string -&gt; string" Usage="System.Web.Security.Membership.GetUserNameByEmail emailToMatch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="emailToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="emailToMatch">Die gesuchte E-Mail-Adresse.</param>
        <summary>Ruft einen Benutzernamen ab, bei dem die E-Mail-Adresse für den Benutzer mit der angegebenen E-Mail-Adresse übereinstimmt.</summary>
        <returns>Der Benutzername, bei dem die E-Mail-Adresse für den Benutzer mit der angegebenen E-Mail-Adresse übereinstimmt. Wenn keine Übereinstimmung gefunden wird, wird <see langword="null" /> zurückgegeben.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetUserNameByEmail%2A> kann verwendet werden, um den Benutzernamen für einen Mitgliedschaftsbenutzer im Fall abzurufen, in denen ein Benutzer ist nicht bekannt, seinen Benutzernamen ein, aber weiß, dass ihre e-Mail-Adresse. Wenn mehr als einen Benutzer in der Datenquelle die gleiche e-Mail-Adresse verfügt, wird die erste gefundene Benutzername zurückgegeben.  
  
 Von der alle Parameterwerte werden führende und nachfolgende Leerzeichen abgeschnitten.  
  
   
  
## Examples  
 Im folgenden Codebeispiel ruft den Benutzernamen für eine angegebene e-Mail-Adresse ab.  
  
> [!IMPORTANT]
>  Dieses Beispiel enthält das Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko dar. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/GetUserByEmailcs.aspx#7)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/GetUserByEmailvb.aspx#7)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Einführung in die ASP.NET-Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="HashAlgorithmType">
      <MemberSignature Language="C#" Value="public static string HashAlgorithmType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string HashAlgorithmType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.HashAlgorithmType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property HashAlgorithmType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ HashAlgorithmType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HashAlgorithmType : string" Usage="System.Web.Security.Membership.HashAlgorithmType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Der Bezeichner des für Hashkennwörter verwendeten Algorithmus.</summary>
        <value>Der Bezeichner des für Hashkennwörter verwendeten Algorithmus oder ein leerer Wert, wenn der Standardhashalgorithmus verwendet werden soll.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.Membership.HashAlgorithmType%2A> identifiziert die benutzerdefinierten, vom verwendeten Hashalgorithmus die <xref:System.Web.Security.Membership> Klasse. Festlegen der <xref:System.Web.Security.Membership.HashAlgorithmType%2A> Eigenschaft mit dem `hashAlgorithmType` -Attribut des Elements.  
  
 .NET Framework können Sie benutzerdefinierte Kryptografieklassen, die mithilfe des Konfigurationsabschnitts Element zu konfigurieren. Die <xref:System.Web.Security.Membership.HashAlgorithmType%2A> Eigenschaft muss übereinstimmen. die `name` -Attribut des Elements in einem Element. Weitere Informationen finden Sie unter [Zuordnen von Algorithmennamen zu kryptografischen Klassen](~/docs/framework/configure-apps/map-algorithm-names-to-cryptography-classes.md).  
  
 Wenn die <xref:System.Web.Security.Membership.HashAlgorithmType%2A> Eigenschaft nicht festgelegt ist, die <xref:System.Web.Security.Membership> Klasse verwendet den Hashalgorithmus an, legen Sie in der `validation` -Attribut des Elements.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Einführung in die ASP.NET-Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="MaxInvalidPasswordAttempts">
      <MemberSignature Language="C#" Value="public static int MaxInvalidPasswordAttempts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 MaxInvalidPasswordAttempts" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.MaxInvalidPasswordAttempts" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MaxInvalidPasswordAttempts As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int MaxInvalidPasswordAttempts { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxInvalidPasswordAttempts : int" Usage="System.Web.Security.Membership.MaxInvalidPasswordAttempts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der zulässigen ungültigen Kennwort- oder Kennwortantwortversuche ab, bevor der Mitgliedschaftsbenutzer ausgesperrt wird.</summary>
        <value>Die Anzahl der zulässigen ungültigen Kennwort- oder Kennwortantwortversuche, bevor der Mitgliedschaftsbenutzer ausgesperrt wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> Eigenschaft funktioniert in Verbindung mit der <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> -Eigenschaft zum Schutz gegen eine unerwünschte Quelle mit wiederholte Versuche zum Erraten des Kennworts oder einer Antwort für das Kennwort eines Mitgliedschaftsbenutzers.  
  
 Wenn die Anzahl der ungültigen Kennwort- oder Kennwortantworten eingegeben haben, für ein Mitgliedschaftsbenutzer größer als oder gleich dem Wert des ist der <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> Eigenschaft innerhalb der Anzahl von Minuten, die gemäß der <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> -Eigenschaft, und klicken Sie dann auf den Benutzer aus der Website von gesperrt ist Festlegen der <xref:System.Web.Security.MembershipUser.IsLockedOut%2A> Eigenschaft `true` bis der Benutzer durch einen Aufruf von entsperrt ist die <xref:System.Web.Security.MembershipUser.UnlockUser%2A> Methode.  
  
 Wenn Sie ein gültiges Kennwort oder die Antwort für das Kennwort, bevor der Wert des angegeben wird der <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> Eigenschaft erreicht wird, wird der Zähler, der die Anzahl der ungültigen verfolgt auf 0 (null) festgelegt ist.  
  
 Ungültigen Kennwort- und Kennwortantwortversuche werden separat nachverfolgt. Z. B. wenn die <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> -Eigenschaft auf 5 festgelegt ist, die der Benutzer verfügt über bis zu fünf Versuche unternimmt, geben ein korrektes Kennwort ein, und bis zu fünf Versuche, eine Antwort für die richtige Kennwort einzugeben, ohne Sie gesperrt werden.  
  
 Die <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> Eigenschaftswert wird festgelegt, in der Anwendungskonfigurationsdatei mithilfe der `maxInvalidPasswordAttempts` Attribut des Konfigurationselements.  
  
 Wenn die <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> Eigenschaft `false`, ungültige Kennwortantwortversuche nicht nachverfolgt.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt das Element in der `system.web` Abschnitt der Web.config-Datei einer Anwendung. Wird angegeben, dass die Anwendung eine Instanz von verwendet die <xref:System.Web.Security.SqlMembershipProvider> Klasse Mitgliedschaftsdienste und legt die `maxInvalidPasswordAttempts` Attribut fünf ungültige Versuche und die `passwordAttemptWindow` auf 30 Minuten.  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20>  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      maxInvalidPasswordAttempts="5"  
      passwordAttemptWindow="30"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Einführung in die ASP.NET-Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="MinRequiredNonAlphanumericCharacters">
      <MemberSignature Language="C#" Value="public static int MinRequiredNonAlphanumericCharacters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 MinRequiredNonAlphanumericCharacters" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MinRequiredNonAlphanumericCharacters As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int MinRequiredNonAlphanumericCharacters { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MinRequiredNonAlphanumericCharacters : int" Usage="System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die minimale Anzahl von Sonderzeichen ab, die ein gültiges Kennwort enthalten muss.</summary>
        <value>Die minimale Anzahl von Sonderzeichen, die ein gültiges Kennwort enthalten muss.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters%2A> Eigenschaft gibt die Mindestanzahl von nicht alphanumerischen Zeichen, die eingegeben werden muss, um ein gültiges Kennwort für den Mitgliedschaftsanbieter in angegebenen erstellen die <xref:System.Web.Security.Membership.Provider%2A> Eigenschaft.  
  
 Die <xref:System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters%2A> Eigenschaftswert wird festgelegt, in der Anwendungskonfigurationsdatei mithilfe der `minRequiredNonAlphanumericCharacters` Attribut des Konfigurationselements.  
  
 Ein nicht alphanumerisches Zeichen ist ein Zeichen für die die <xref:System.Char.IsLetterOrDigit%2A> Methodenrückgabe `false`.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, das Konfigurationselement in die `system.web` Abschnitt der Web.config-Datei der Anwendung. Es gibt an, dass die Anwendung eine Instanz von der <xref:System.Web.Security.SqlMembershipProvider> Klasse Mitgliedschaftsdienste und legt die `minRequiredNonAlphanumericCharacters` Attribut auf 1 Zeichen.  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20>  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      minRequiredNonAlphanumericCharacters="1"  
      />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Einführung in die ASP.NET-Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="MinRequiredPasswordLength">
      <MemberSignature Language="C#" Value="public static int MinRequiredPasswordLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 MinRequiredPasswordLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.MinRequiredPasswordLength" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MinRequiredPasswordLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int MinRequiredPasswordLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MinRequiredPasswordLength : int" Usage="System.Web.Security.Membership.MinRequiredPasswordLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die minimale erforderliche Länge für ein Kennwort ab.</summary>
        <value>Die minimale erforderliche Länge für ein Kennwort.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A> -Eigenschaft ruft die minimale Anzahl von Zeichen, die eingegeben werden muss, um ein gültiges Kennwort für den Mitgliedschaftsanbieter in angegebenen erstellen die <xref:System.Web.Security.Membership.Provider%2A> Eigenschaft.  
  
 Die <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A> Eigenschaftswert wird festgelegt, in der Anwendungskonfigurationsdatei mithilfe der `minRequiredPasswordLength` Attribut des Konfigurationselements.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, das Konfigurationselement in die `system.web` Abschnitt der Web.config-Datei der Anwendung. Er gibt an, dass die Anwendung eine Instanz von der <xref:System.Web.Security.SqlMembershipProvider> Klasse Mitgliedschaftsdienste und legt die `minRequiredPasswordLength` -Attribut auf sieben Zeichen.  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20>  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      minRequiredPasswordLength="7"  
      />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Einführung in die ASP.NET-Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="PasswordAttemptWindow">
      <MemberSignature Language="C#" Value="public static int PasswordAttemptWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 PasswordAttemptWindow" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.PasswordAttemptWindow" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property PasswordAttemptWindow As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int PasswordAttemptWindow { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PasswordAttemptWindow : int" Usage="System.Web.Security.Membership.PasswordAttemptWindow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Zeitfenster ab, in dem aufeinander folgende fehlerhafte Versuche, ein gültiges Kennwort oder eine gültige Kennwortantwort bereitzustellen, nachverfolgt werden.</summary>
        <value>Das Zeitfenster, in Minuten, in dem aufeinander folgende fehlerhafte Versuche, ein gültiges Kennwort oder eine gültige Kennwortantwort bereitzustellen, nachverfolgt werden. Der Standardwert ist 10 Minuten. Wenn das Zeitintervall zwischen dem aktuellen fehlerhaften Versuch und dem letzten fehlerhaften Versuch größer als die Einstellung der <see cref="P:System.Web.Security.Membership.PasswordAttemptWindow" />-Eigenschaft ist, wird jeder fehlerhafte Versuch wie der erste fehlerhafte Versuch behandelt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> Eigenschaft funktioniert in Verbindung mit der <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> Eigenschaft zum Schutz gegen das Erraten des Kennworts oder einer Antwort für das Kennwort eines Mitgliedschaftsbenutzers über die unerwünschter Quelle wiederholt versucht. Wenn ein Benutzer versucht, melden Sie sich mit, ändern oder Zurücksetzen des Kennworts auffordern, dürfen nur eine bestimmte Anzahl aufeinanderfolgender Anmeldeversuche innerhalb eines angegebenen Zeitfensters. Die Länge dieses Zeitfensters wird angegeben, der <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> -Eigenschaft, die die Anzahl der Minuten zwischen ungültige Versuche identifiziert.  
  
 Wenn die Anzahl der aufeinander folgende fehlerhafte Versuche, mit der ein Benutzer zum, zurücksetzen oder ihr Kennwort dem Wert, der entspricht in gespeicherten der <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> -Eigenschaft, und die Zeit verstrichen seit der letzte ungültige Versuch, die kleiner als die angegebene Anzahl von Minuten ist die <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> Eigenschaft, und klicken Sie dann auf den Mitgliedschaftsbenutzer ist gesperrt. Der Benutzer ist gesperrt, indem die <xref:System.Web.Security.MembershipUser.IsLockedOut%2A> Eigenschaft, um `true` bis der Benutzer durch einen Aufruf von entsperrt ist die <xref:System.Web.Security.MembershipUser.UnlockUser%2A> Methode.  
  
 Wenn das Intervall zwischen dem aktuellen fehlerhaften Versuch und dem letzten fehlerhaften Versuch größer ist die <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> eigenschafteneinstellung, die dem aktuellen ungültigen Versuch wird gezählt, wie die erste. Wenn eine gültige Kennwortantwort angegeben wird, bevor die maximale Anzahl der zulässigen ungültigen erreicht wird, wird die Anzahl der ungültige Kennwortantwortversuche auf 0 (null) festgelegt. Wenn ein gültiges Kennwort angegeben ist, bevor die maximal Anzahl von ungültigen zulässige Versuche erreicht ist, wird die Anzahl der ungültige Kennwortversuche und die Anzahl der ungültige Kennwortantwortversuche werden auf 0 (null) festgelegt.  
  
 Ungültiger Kennwort- und Kennwortantwortversuche Versuche werden unabhängig voneinander. Z. B. wenn die <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> auf 5 festgelegt ist und drei ungültige Kennwortversuche erfolgen gefolgt von zwei ungültige Kennwortantwortversuche, zwei weitere ungültige Kennwortversuche (oder drei weitere ungültige Kennwortantwortversuche) erfolgen müssen innerhalb von <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> für den Mitgliedschaftsbenutzer ausgesperrt werden.  
  
 Die <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> Eigenschaftswert in der Anwendungskonfiguration festgelegt ist, mithilfe der `passwordAttemptWindow` -Attribut des Konfigurationselements.  
  
 Wenn die <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> -Eigenschaftensatz auf `false`, ungültige Kennwortantwortversuche nicht nachverfolgt.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt das Element in der `system.web` -Abschnitt der Datei "Web.config" für eine ASP.NET-Anwendung. Er gibt an, dass die Anwendung eine Instanz von der <xref:System.Web.Security.SqlMembershipProvider> und legt sie fest der `maxInvalidPasswordAttempts` Attribut fünf ungültige Versuche und die `passwordAttemptWindow` auf 30 Minuten.  
  
```  
<membership defaultProvider="SqlProvider"   
  userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      maxInvalidPasswordAttempts="5"  
      passwordAttemptWindow="30"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Einführung in die ASP.NET-Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="PasswordStrengthRegularExpression">
      <MemberSignature Language="C#" Value="public static string PasswordStrengthRegularExpression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string PasswordStrengthRegularExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.PasswordStrengthRegularExpression" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property PasswordStrengthRegularExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ PasswordStrengthRegularExpression { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PasswordStrengthRegularExpression : string" Usage="System.Web.Security.Membership.PasswordStrengthRegularExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den regulären Ausdruck ab, der zum Auswerten eines Kennworts verwendet wird.</summary>
        <value>Ein regulärer Ausdruck, der zum Auswerten eines Kennworts verwendet wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A> Eigenschaft ruft den regulären Ausdruck, der zum Auswerten der Kennwortkomplexität aus den in angegebenen Anbieter die <xref:System.Web.Security.Membership.Provider%2A> Eigenschaft.  
  
 Die <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A> Eigenschaft festgelegt ist, in der Anwendungskonfigurationsdatei mithilfe der `passwordStrengthRegularExpression` Attribut des Konfigurationselements.  
  
 Weitere Informationen zu regulären Ausdrücken finden Sie unter [reguläre Ausdrücke von .NET Framework](~/docs/standard/base-types/regular-expressions.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, das Konfigurationselement in die `system.web` Abschnitt der Web.config-Datei der Anwendung. Er gibt an, dass die Anwendung eine Instanz von der <xref:System.Web.Security.SqlMembershipProvider> Klasse Mitgliedschaftsdienste und legt die `passwordStrengthRegularExpression` Attribut auf einen regulären Ausdruck, der die kennwortüberprüfung durch die folgenden Kriterien erfüllt:  
  
-   Ist größer als 7 Zeichen.  
  
-   Enthält mindestens eine Ziffer an.  
  
-   Enthält mindestens ein Sonderzeichen (nicht alphanumerischen) enthalten.  
  
 Wenn das Kennwort nicht diese Kriterien erfüllt, wird das Kennwort vom Mitgliedschaftsanbieter nicht akzeptiert.  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20>  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      passwordStrengthRegularExpression=" @\"(?=.{6,})(?=(.*\d){1,})(?=(.*\W){1,})"  
      />  
   </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Einführung in die ASP.NET-Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipProvider Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Security.MembershipProvider Provider" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.Provider" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Provider As MembershipProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Security::MembershipProvider ^ Provider { System::Web::Security::MembershipProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Provider : System.Web.Security.MembershipProvider" Usage="System.Web.Security.Membership.Provider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf den Standardmitgliedschaftsanbieter für die Anwendung ab.</summary>
        <value>Der Standardmitgliedschaftsanbieter für die Anwendung, die mit der abstrakten <see cref="T:System.Web.Security.MembershipProvider" />-Basisklasse verfügbar gemacht wurde.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.Membership.Provider%2A> Eigenschaft können Sie direkt auf den Standardmitgliedschaftsanbieter für eine Anwendung verweisen. Dies wird häufig verwendet, um benutzerdefinierte Elemente des Mitgliedschaftsanbieters zugreifen, die nicht Teil der <xref:System.Web.Security.MembershipProvider> abstrakte Basisklasse.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird greift auf die Standardeinstellung <xref:System.Web.Security.SqlMembershipProvider> aktiviert für die Anwendung unter Verwendung der <xref:System.Web.Security.Membership.Provider%2A> Eigenschaft, um zu ermitteln, den Wert des benutzerdefinierten <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A> Eigenschaft.  
  
 [!code-aspx-csharp[System.Web.Security.Membership#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/Providercs.aspx#6)]
 [!code-aspx-vb[System.Web.Security.Membership#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/Providervb.aspx#6)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Einführung in die ASP.NET-Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="Providers">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipProviderCollection Providers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Security.MembershipProviderCollection Providers" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.Providers" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Providers As MembershipProviderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Security::MembershipProviderCollection ^ Providers { System::Web::Security::MembershipProviderCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Providers : System.Web.Security.MembershipProviderCollection" Usage="System.Web.Security.Membership.Providers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipProviderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Auflistung der Mitgliedschaftsanbieter für die ASP.NET-Anwendung ab.</summary>
        <value>Eine <see cref="T:System.Web.Security.MembershipProviderCollection" /> der für die ASP.NET-Anwendung konfigurierten Mitgliedschaftsanbieter.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.Membership.Providers%2A> -Eigenschaft verweist auf alle der Mitgliedschaftsanbieter für eine Anwendung aktiviert werden soll, in der Datei "Web.config" für die Anwendung und die Datei "Machine.config" für alle Anwendungen hinzugefügt u. a.-Anbieter. Sie können steuern, welche Mitgliedschaft für eine Anwendung mit verfügbar sind die `providers` -Element des Abschnitts in der Konfiguration für Ihre Anwendung. Z. B. das folgende Beispiel zeigt den Abschnitt in der Datei "Web.config" für eine Anwendung, die entfernt die <xref:System.Web.Security.SqlMembershipProvider> Instanz (`AspNetSqlProvider`) in der Konfigurationsdatei des Computers angegeben, und fügt eine <xref:System.Web.Security.SqlMembershipProvider> Instanz mit dem Namen `SqlProvider` wie die Der Standardmitgliedschaftsanbieter für die Anwendung.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString="Data Source=MySqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
  </connectionStrings>  
  <system.web>  
    <membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
      <providers>  
        <remove name="AspNetSqlProvider" />  
          <add name="SqlProvider"  
            type="System.Web.Security.SqlMembershipProvider"  
            connectionStringName="SqlServices"  
            enablePasswordRetrieval="false"  
            enablePasswordReset="true"  
            requiresQuestionAndAnswer="true"  
            passwordFormat="Hashed"  
            applicationName="/" />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
 Beim Angeben der [Membership-Element ((ASP.NET Einstellungsschema)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) Abschnitt müssen Sie angeben der `defaultProvider` Attribut. Wenn Sie nicht angeben einer [Membership-Element ((ASP.NET Einstellungsschema)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) Abschnitt in Web.config, die Werte aus der Konfiguration des Computers verwendet werden und die <xref:System.Web.Security.SqlMembershipProvider> Instanz mit dem Namen `AspNetSqlProvider` wird hergestellt, als die `defaultProvider`.  
  
 Sie erhalten einen stark typisierten Verweis auf einen Anbieter aus der <xref:System.Web.Security.Membership.Providers%2A> Auflistung anhand den Mitgliedschaftsanbieter nach Namen zu indizieren und sie den gewünschten Typ umwandeln.  
  
   
  
## Examples  
 Das folgende Codebeispiel listet Anbieter, die für eine Anwendung und ihre jeweiligen Typen aktiviert.  
  
 [!code-aspx-csharp[System.Web.Security.Membership#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/Providerscs.aspx#7)]
 [!code-aspx-vb[System.Web.Security.Membership#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/Providersvb.aspx#7)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Einführung in die ASP.NET-Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="RequiresQuestionAndAnswer">
      <MemberSignature Language="C#" Value="public static bool RequiresQuestionAndAnswer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool RequiresQuestionAndAnswer" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.RequiresQuestionAndAnswer" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property RequiresQuestionAndAnswer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool RequiresQuestionAndAnswer { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresQuestionAndAnswer : bool" Usage="System.Web.Security.Membership.RequiresQuestionAndAnswer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Benutzer durch den Standardmitgliedschaftsanbieter beim Zurücksetzen und Abrufen des Kennworts aufgefordert wird, eine Kennwortfrage zu beantworten.</summary>
        <value>
          <see langword="true" />, wenn zum Zurücksetzen und Abrufen von Kennwörtern eine Kennwortantwort erforderlich ist, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Erfordert eine Kennwortfrage und-Antwort bietet eine zusätzliche Sicherheitsebene beim Abrufen oder Zurücksetzen des Kennworts eines Benutzers. Benutzer können angeben, eine Frage und Antwort Wenn Ihrem jeweiligen Benutzernamen erstellt wird, dass sie später zum Abrufen oder Zurücksetzen eines vergessenen Kennworts verwenden können.  
  
 <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> überprüft, wenn <xref:System.Web.Security.MembershipUser.ResetPassword%2A> oder <xref:System.Web.Security.MembershipUser.GetPassword%2A> aufgerufen wird. Der Anbieter zur Verfügung gestellt, mit dem .NET Framework löst eine <xref:System.NotSupportedException> Wenn <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> ist `true` und die angegebene Kennwortantwort ist `null`.  
  
 Wenn <xref:System.Web.Security.Membership.EnablePasswordReset%2A> und <xref:System.Web.Security.Membership.EnablePasswordRetrieval%2A> sind beide `false`, <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> kann weiterhin verwendet werden, um die Erstellung von Fragen und Antworten zu erzwingen, wenn neue Benutzer erstellt werden; allerdings Frage und Antwort nicht verwendet werden. Sie werden zum Abrufen der Frage mithilfe der <xref:System.Web.Security.MembershipUser> Klasse.  
  
 Weitere Informationen finden Sie unter <xref:System.Web.Security.MembershipUser.ResetPassword%2A> und <xref:System.Web.Security.MembershipUser.GetPassword%2A>.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt das Element in der `system.web` -Abschnitt der Datei "Web.config" für eine ASP.NET-Anwendung. Es gibt an, dass die Anwendung eine Instanz von der <xref:System.Web.Security.SqlMembershipProvider>, Zurücksetzen von Kennwörtern ermöglicht, und eine Kennwortantwort erforderlich ist, beim Zurücksetzen.  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="false"  
      enablePasswordReset="true"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Hashed"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 Das folgende Codebeispiel überprüft den Wert der <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> und fügt die erforderlichen Steuerelemente für eine Kennwortfrage und-Antwort beim Erstellen eines Benutzers.  
  
> [!IMPORTANT]
>  Dieses Beispiel enthält das Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko dar. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/CreateUsercs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/CreateUservb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Einführung in die ASP.NET-Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateUser">
      <MemberSignature Language="C#" Value="public static void UpdateUser (System.Web.Security.MembershipUser user);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UpdateUser(class System.Web.Security.MembershipUser user) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.UpdateUser(System.Web.Security.MembershipUser)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub UpdateUser (user As MembershipUser)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void UpdateUser(System::Web::Security::MembershipUser ^ user);" />
      <MemberSignature Language="F#" Value="static member UpdateUser : System.Web.Security.MembershipUser -&gt; unit" Usage="System.Web.Security.Membership.UpdateUser user" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="System.Web.Security.MembershipUser" />
      </Parameters>
      <Docs>
        <param name="user">Ein <see cref="T:System.Web.Security.MembershipUser" />-Objekt, das den zu aktualisierenden Benutzer und die aktualisierten Informationen für den Benutzer darstellt.</param>
        <summary>Aktualisiert die Datenbank mit den Informationen für den angegebenen Benutzer.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.UpdateUser%2A> akzeptiert als Eingabe eine <xref:System.Web.Security.MembershipUser> Objekt mit aktuellen Informationen für den Mitgliedschaftsbenutzer gefüllt und aktualisiert die Datenquelle mit den Eigenschaftswerten, die von der <xref:System.Web.Security.MembershipUser> Objekt. Sie können ein neues erstellen <xref:System.Web.Security.MembershipUser>, oder Abrufen einer <xref:System.Web.Security.MembershipUser> Objekt mit den aktuellen Werten an die Datenquelle mit der <xref:System.Web.Security.Membership.GetUser%2A>, <xref:System.Web.Security.Membership.GetAllUsers%2A>, <xref:System.Web.Security.Membership.FindUsersByName%2A>, oder <xref:System.Web.Security.Membership.FindUsersByEmail%2A> Methoden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird aktualisiert, die e-Mail-Adresse für den aktuellen Benutzer angemeldet wird.  
  
> [!IMPORTANT]
>  Dieses Beispiel enthält das Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko dar. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/UpdateEmailcs.aspx#11)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/UpdateEmailvb.aspx#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="user" /> ist <see langword="null" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Einführung in die ASP.NET-Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="UserIsOnlineTimeWindow">
      <MemberSignature Language="C#" Value="public static int UserIsOnlineTimeWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 UserIsOnlineTimeWindow" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.UserIsOnlineTimeWindow" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UserIsOnlineTimeWindow As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int UserIsOnlineTimeWindow { int get(); };" />
      <MemberSignature Language="F#" Value="member this.UserIsOnlineTimeWindow : int" Usage="System.Web.Security.Membership.UserIsOnlineTimeWindow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt die Anzahl der Minuten nach dem Datums-/Zeitstempel der letzten Aktivität für einen Benutzer an, während denen der Benutzer als online angesehen wird.</summary>
        <value>Die Anzahl der Minuten nach dem Datums-/Zeitstempel der letzten Aktivität für einen Benutzer, während denen der Benutzer online ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A> Eigenschaftswert aktiviert ist, während des Aufrufs von <xref:System.Web.Security.Membership.GetNumberOfUsersOnline%2A>. Wenn die <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> für ein Benutzer größer als das aktuelle Datum und Uhrzeit abzüglich ist die <xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A> Wert in Minuten an, und klicken Sie dann der Benutzer als online angesehen wird. Sie können bestimmen, ob ein Mitgliedschaftsbenutzer mit online betrachtet wird die <xref:System.Web.Security.MembershipUser.IsOnline%2A> Eigenschaft der <xref:System.Web.Security.MembershipUser> Klasse.  
  
 Die <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> für ein Benutzer aktualisiert wird, wenn die Anmeldeinformationen eines Benutzers erfolgreich, durch validiert wurden die <xref:System.Web.Security.Membership.ValidateUser%2A> Methode. Sie können auch aktualisieren die <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> für einen Mitgliedschaftsbenutzer, wenn Sie eine von Aufrufen der <xref:System.Web.Security.Membership.GetUser%2A> Überladungen. Aufrufen einer <xref:System.Web.Security.Membership.GetUser%2A> -Überladung mit eine `userIsOnline` Parameter, geben Sie den Wert `true` zum Aktualisieren der <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> für den Benutzer.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt das Element in der `system.web` -Abschnitt der Datei "Web.config" für eine ASP.NET-Anwendung. Wird angegeben, dass die Anwendung eine Instanz von verwendet die <xref:System.Web.Security.SqlMembershipProvider> und legt die `userIsOnlineTimeWindow` -Attribut auf 20 Minuten.  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="true"  
      enablePasswordReset="false"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Encrypted"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Einführung in die ASP.NET-Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="ValidateUser">
      <MemberSignature Language="C#" Value="public static bool ValidateUser (string username, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ValidateUser(string username, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.ValidateUser(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ValidateUser (username As String, password As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ValidateUser(System::String ^ username, System::String ^ password);" />
      <MemberSignature Language="F#" Value="static member ValidateUser : string * string -&gt; bool" Usage="System.Web.Security.Membership.ValidateUser (username, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Der Name des zu überprüfenden Benutzers.</param>
        <param name="password">Das Kennwort für den angegebenen Benutzer.</param>
        <summary>Überprüft, ob der angegebene Benutzername und das angegebene Kennwort gültig sind.</summary>
        <returns>
          <see langword="true" />, wenn der angegebene Benutzername und das Kennwort gültig sind, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.ValidateUser%2A> bietet eine einfache Möglichkeit, einen Benutzernamen und Kennwort aus der Datenquelle zu überprüfen. Beachten Sie, dass, wenn die `username` Parameter ist leer oder `null`, <xref:System.Web.HttpException> ausgelöst.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt die Anmeldeseite für eine ASP.NET-Anwendung für die Verwendung der Formularauthentifizierung konfiguriert und die <xref:System.Web.Security.Membership> Klasse. Wenn die angegebenen Anmeldeinformationen ungültig sind, wird eine Meldung, die dem Benutzer angezeigt. Andernfalls wird der Benutzer umgeleitet, an die ursprünglich angeforderte URL durch die <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> Methode.  
  
> [!IMPORTANT]
>  Dieses Beispiel enthält das Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko dar. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/logincs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/loginvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Einführung in die ASP.NET-Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="ValidatingPassword">
      <MemberSignature Language="C#" Value="public static event System.Web.Security.MembershipValidatePasswordEventHandler ValidatingPassword;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.Security.MembershipValidatePasswordEventHandler ValidatingPassword" />
      <MemberSignature Language="DocId" Value="E:System.Web.Security.Membership.ValidatingPassword" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event ValidatingPassword As MembershipValidatePasswordEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event System::Web::Security::MembershipValidatePasswordEventHandler ^ ValidatingPassword;" />
      <MemberSignature Language="F#" Value="member this.ValidatingPassword : System.Web.Security.MembershipValidatePasswordEventHandler " Usage="member this.ValidatingPassword : System.Web.Security.MembershipValidatePasswordEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipValidatePasswordEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn ein Benutzer erstellt, ein Kennwort geändert oder ein Kennwort zurückgesetzt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der <xref:System.Web.Security.MembershipProvider.ValidatingPassword> Ereignis wird ausgelöst, wenn der <xref:System.Web.Security.MembershipProvider.CreateUser%2A> -Methode, der <xref:System.Web.Security.MembershipProvider.ChangePassword%2A> -Methode, oder die <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> eines Mitgliedschaftsanbieters aufgerufen.  
  
 Sie können die <xref:System.Web.Security.MembershipProvider.ValidatingPassword> Ereignis, um das Kennwortformate und Werte für Mitgliedschaftsbenutzer zu validieren.  
  
 Können Sie die aktuelle Abbrechen <xref:System.Web.Security.MembershipProvider.CreateUser%2A>, <xref:System.Web.Security.MembershipProvider.ChangePassword%2A>, oder <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> Aktion durch Festlegen der <xref:System.Web.Security.ValidatePasswordEventArgs.Cancel%2A> Eigenschaft des angegebenen <xref:System.Web.Security.ValidatePasswordEventArgs> zu `true` während der <xref:System.Web.Security.MembershipProvider.ValidatingPassword> Ereignis.  
  
 Wenn Sie die aktuelle Aktion, durch Festlegen Abbrechen der <xref:System.Web.Security.ValidatePasswordEventArgs.Cancel%2A> Eigenschaft, um `true`, Sie können festlegen, die <xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A> Eigenschaft des angegebenen <xref:System.Web.Security.ValidatePasswordEventArgs> auf eine Ausnahme, die den Grund für den kennwortvalidierungsfehler beschreibt. Die aufrufende Methode löst der Ausnahme, die die <xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A> Eigenschaft auf festgelegt ist. Wenn die <xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A> Eigenschaft `null`, löst der Aufrufer eine generische Ausnahme für die Kennwort-Überprüfungsfehler.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt eine <xref:System.Web.Security.MembershipProvider.ValidatingPassword> -Ereignis, überprüft das Format des Kennworts für einen Benutzer aus, und bricht die Aktion ab, wenn das Kennwort nicht das erforderliche Format übereinstimmt.  
  
 [!code-csharp[System.Web.Security.Membership#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/CreateUser3cs.aspx#11)]
 [!code-vb[System.Web.Security.Membership#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/CreateUser3vb.aspx#11)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Einführung in die ASP.NET-Mitgliedschaft</related>
      </Docs>
    </Member>
  </Members>
</Type>