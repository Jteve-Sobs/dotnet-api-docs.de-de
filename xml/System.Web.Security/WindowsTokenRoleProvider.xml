<Type Name="WindowsTokenRoleProvider" FullName="System.Web.Security.WindowsTokenRoleProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2de8fcdf949a82aee1ba0f5624e37b55b68693ad" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30549644" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WindowsTokenRoleProvider : System.Web.Security.RoleProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WindowsTokenRoleProvider extends System.Web.Security.RoleProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.WindowsTokenRoleProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class WindowsTokenRoleProvider&#xA;Inherits RoleProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class WindowsTokenRoleProvider : System::Web::Security::RoleProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Security.RoleProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Ruft Rolleninformationen für eine ASP.NET-Anwendung von der Windows-Gruppenmitgliedschaft ab.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.WindowsTokenRoleProvider> Klasse wird als nur-Lese Rollenmitgliedschaft-Anbieter, der Rolleninformationen für eine Windows-Benutzer, die basierend auf Windows-Sicherheitsgruppen abruft. Es eignet sich am besten mit ASP.NET-Anwendungen, die Windows-Authentifizierungsmodus verwenden, in dem Einstellungen für die IIS-Authentifizierung anonyme Authentifizierung deaktivieren. Sie können konfigurieren, dass ASP.NET-Anwendungen gewähren oder Verweigern von Zugriff auf die Mitgliedschaft eines Benutzers in einer bestimmten Windows-Gruppe basieren.  
  
 Sie können keine der <xref:System.Web.Security.WindowsTokenRoleProvider> Klasse zum Erstellen oder Löschen von Rollen oder ändert die Mitgliedschaft einer Rolle, die auf Windows-Gruppenmitgliedschaft basieren. Diese Funktionalität wird vom Windows-Betriebssystem verwaltet. Die <xref:System.Web.Security.WindowsTokenRoleProvider> -Klasse unterstützt nur die <xref:System.Web.Security.WindowsTokenRoleProvider.IsUserInRole%2A> und <xref:System.Web.Security.WindowsTokenRoleProvider.GetRolesForUser%2A> Methoden die <xref:System.Web.Security.RoleProvider> abstrakte Klasse.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt die Datei "Web.config" für eine ASP.NET-Anwendung. Es gibt an, dass die Anwendung sowohl Windows-Authentifizierung verwendet und die <xref:System.Web.Security.WindowsTokenRoleProvider> Klasse, um Rolleninformationen für Windows-Benutzer abzurufen. Das Element gibt an, dass nur Benutzer in der Gruppe "BUILTIN\Administrators" Zugriff auf die Anwendung zulässig sind.  
  
```  
<configuration>  
  <system.web>  
    <authentication mode="Windows" />  
  
    <authorization>  
      <allow roles="BUILTIN\Administrators" />  
        <deny users="*" />  
      </authorization>  
  
    <roleManager defaultProvider="WindowsProvider"   
      enabled="true"  
      cacheRolesInCookie="false">  
      <providers>  
        <add  
          name="WindowsProvider"  
          type="System.Web.Security.WindowsTokenRoleProvider" />  
      </providers>  
    </roleManager>  
  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowsTokenRoleProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.WindowsTokenRoleProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowsTokenRoleProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Erstellt eine Instanz der <see cref="T:System.Web.Security.WindowsTokenRoleProvider" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.WindowsTokenRoleProvider.%23ctor%2A> Konstruktor wird aufgerufen, von ASP.NET zum Erstellen einer Instanz von der <xref:System.Web.Security.WindowsTokenRoleProvider> -Klasse entsprechend den Angaben in der Konfiguration für die Anwendung. Dieser Konstruktor ist nicht für die Verwendung aus dem Code vorgesehen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddUsersToRoles">
      <MemberSignature Language="C#" Value="public override void AddUsersToRoles (string[] usernames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AddUsersToRoles(string[] usernames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.WindowsTokenRoleProvider.AddUsersToRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub AddUsersToRoles (usernames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void AddUsersToRoles(cli::array &lt;System::String ^&gt; ^ usernames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames">Ein Zeichenfolgenarray mit Benutzernamen, die den angegebenen Rollen hinzugefügt werden sollen.</param>
        <param name="roleNames">Ein Zeichenfolgenarray mit Rollennamen, denen die angegebenen Benutzernamen hinzugefügt werden sollen.</param>
        <summary>Diese Methode wird vom Windows-Tokenrollenanbieter nicht unterstützt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird nicht unterstützt, indem Sie die <xref:System.Web.Security.WindowsTokenRoleProvider> Klasse und löst immer eine <xref:System.Configuration.Provider.ProviderException>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">Eine nicht unterstützte Methode wurde aufgerufen.</exception>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public override string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.WindowsTokenRoleProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Anwendung ab oder legt diesen fest.</summary>
        <value>Der Name der Anwendung.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Im Gegensatz zu anderen Rollenanbieter wie z. B. die <xref:System.Web.Security.SqlRoleProvider>, die <xref:System.Web.Security.WindowsTokenRoleProvider> Klasse ist nicht die Rolleninformationen mit einer Anwendung zuzuordnen. Stattdessen werden die Rolleninformationen aus den Windows-Gruppen auf dem lokalen Computer verwendet. Mehrere Anwendungen auf dem gleichen Server, mit denen die <xref:System.Web.Security.WindowsTokenRoleProvider> Klasse immer die gleiche Rolleninformationen freigeben. Obwohl die `applicationName` kann konfiguriert werden, in der Datei "Web.config" für die Anwendung die <xref:System.Web.Security.WindowsTokenRoleProvider.ApplicationName%2A> Eigenschaft wird nicht verwendet, um Rolleninformationen abzurufen.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt das Element in der `system.web` Abschnitt der Datei "Web.config" für eine ASP.NET-Anwendung. Es gibt an, der Anwendungsverzeichnis <xref:System.Web.Security.WindowsTokenRoleProvider> Instanz und legt die <xref:System.Web.Security.WindowsTokenRoleProvider.ApplicationName%2A> Eigenschaft `MyApplication`.  
  
```  
<roleManager defaultProvider="WindowsProvider"   
  enabled="true"  
  cacheRolesInCookie="false">  
  <providers>  
    <add  
      name="WindowsProvider"  
      type="System.Web.Security.WindowsTokenRoleProvider"   
      applicationName="MyApplication" />  
  </providers>  
</roleManager>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Ein Aufrufer, der nicht über die Berechtigung <see cref="P:System.Web.Security.WindowsTokenRoleProvider.ApplicationName" /> zum Hosten von ASP.NET verfügt, hat versucht, die <see cref="F:System.Web.AspNetHostingPermissionLevel.High" />-Eigenschaft festzulegen.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">
          <see cref="P:System.Web.Security.WindowsTokenRoleProvider.ApplicationName" /> wurde auf eine Zeichenfolge festzulegen versucht, die länger als 256 Zeichen ist.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateRole">
      <MemberSignature Language="C#" Value="public override void CreateRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CreateRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.WindowsTokenRoleProvider.CreateRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CreateRole (roleName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CreateRole(System::String ^ roleName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Der Name der zu erstellenden Rolle.</param>
        <summary>Diese Methode wird vom Windows-Tokenrollenanbieter nicht unterstützt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird nicht unterstützt, indem Sie die <xref:System.Web.Security.WindowsTokenRoleProvider> Klasse und löst immer eine <xref:System.Configuration.Provider.ProviderException>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">Eine nicht unterstützte Methode wurde aufgerufen.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteRole">
      <MemberSignature Language="C#" Value="public override bool DeleteRole (string roleName, bool throwOnPopulatedRole);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool DeleteRole(string roleName, bool throwOnPopulatedRole) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.WindowsTokenRoleProvider.DeleteRole(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DeleteRole (roleName As String, throwOnPopulatedRole As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool DeleteRole(System::String ^ roleName, bool throwOnPopulatedRole);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
        <Parameter Name="throwOnPopulatedRole" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="roleName">Der Name der zu löschenden Rolle.</param>
        <param name="throwOnPopulatedRole">Wenn der Wert <see langword="true" /> ist, wird beim Versuch, eine Rolle zu löschen, die mehrere Mitglieder enthält, eine Ausnahme ausgelöst.</param>
        <summary>Diese Methode wird vom Windows-Tokenrollenanbieter nicht unterstützt.</summary>
        <returns>Keine Die Methode wird von der <see cref="T:System.Web.Security.WindowsTokenRoleProvider" />-Klasse nicht unterstützt und löst immer eine <see cref="T:System.Configuration.Provider.ProviderException" /> aus.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">Eine nicht unterstützte Methode wurde aufgerufen.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindUsersInRole">
      <MemberSignature Language="C#" Value="public override string[] FindUsersInRole (string roleName, string usernameToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] FindUsersInRole(string roleName, string usernameToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.WindowsTokenRoleProvider.FindUsersInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindUsersInRole (roleName As String, usernameToMatch As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ FindUsersInRole(System::String ^ roleName, System::String ^ usernameToMatch);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
        <Parameter Name="usernameToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Die Rolle, in der gesucht werden soll.</param>
        <param name="usernameToMatch">Der Benutzername, der in der Rolle gesucht werden soll.</param>
        <summary>Diese Methode wird vom Windows-Tokenrollenanbieter nicht unterstützt.</summary>
        <returns>Keine Die Methode wird von der <see cref="T:System.Web.Security.WindowsTokenRoleProvider" />-Klasse nicht unterstützt und löst immer eine <see cref="T:System.Configuration.Provider.ProviderException" /> aus.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">Eine nicht unterstützte Methode wurde aufgerufen.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetAllRoles">
      <MemberSignature Language="C#" Value="public override string[] GetAllRoles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetAllRoles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.WindowsTokenRoleProvider.GetAllRoles" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAllRoles () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetAllRoles();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Diese Methode wird vom Windows-Tokenrollenanbieter nicht unterstützt.</summary>
        <returns>Keine Die Methode wird von der <see cref="T:System.Web.Security.WindowsTokenRoleProvider" />-Klasse nicht unterstützt und löst immer eine <see cref="T:System.Configuration.Provider.ProviderException" /> aus.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">Eine nicht unterstützte Methode wurde aufgerufen.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRolesForUser">
      <MemberSignature Language="C#" Value="public override string[] GetRolesForUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetRolesForUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.WindowsTokenRoleProvider.GetRolesForUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetRolesForUser (username As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetRolesForUser(System::String ^ username);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Der Benutzer, für den die Liste der Windowsgruppen im Format DOMAIN\Benutzername zurückgegeben werden soll.</param>
        <summary>Ruft eine Liste der Windows-Gruppen ab, denen ein Benutzer angehört.</summary>
        <returns>Ein Zeichenfolgenarray, das die Namen aller Windows-Gruppen enthält, denen der angegebene Benutzer angehört.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird aufgerufen, indem die <xref:System.Web.Security.Roles> Klasse, um eine Liste der Windows-Gruppen aus dem Windows-Betriebssystem abzurufen, die in der angegebene Benutzer ist. Die <xref:System.Web.Security.WindowsTokenRoleProvider.GetRolesForUser%2A> Methode kann nur für den gegenwärtig angemeldeten Benutzer aufgerufen werden, da durch die Servervariable LOGON_USER identifiziert. Wenn der Wert, in angegeben der `username` Parameter ist nicht der Name des aktuell angemeldeten Benutzers eine <xref:System.Configuration.Provider.ProviderException?displayProperty=nameWithType> ausgelöst.  
  
 Weitere Informationen über ASP.NET und Windows-Authentifizierung finden Sie unter [ASP.NET-Authentifizierung](http://msdn.microsoft.com/library/fc10b0ef-4ce4-4a7f-9174-886325221ee1).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird mit der <xref:System.Web.Security.WindowsTokenRoleProvider.GetRolesForUser%2A> Methode zum Abrufen einer Liste der Rollen für einen angegebenen Benutzer und bindet die Liste der Rollen zu einem <xref:System.Web.UI.WebControls.GridView> Steuerelement. Ein Beispiel der Datei "Web.config", die mit der Rollenverwaltung kann, finden Sie unter <xref:System.Web.Security.WindowsTokenRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.WindowsTokenRoleProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.WindowsTokenRoleProvider/CS/viewrolescs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.WindowsTokenRoleProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.WindowsTokenRoleProvider/VB/viewrolesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">Für den gegenwärtig ausgeführten Benutzer ist keine authentifizierte <see cref="T:System.Security.Principal.WindowsIdentity" /> an <see cref="P:System.Web.UI.Page.User" /> angefügt. In anderen Szenarien als HTTP-Szenarien ist für den gegenwärtig ausgeführten Benutzer keine authentifizierte <see cref="T:System.Security.Principal.WindowsIdentity" /> an <see cref="P:System.Threading.Thread.CurrentPrincipal" /> angefügt.  
  
 - oder -   
  
 <paramref name="username" /> stimmt nicht mit dem <see cref="P:System.Security.Principal.WindowsIdentity.Name" /> der aktuellen <see cref="T:System.Security.Principal.WindowsIdentity" /> überein.  
  
 - oder -   
  
 Beim Abrufen der Windows-Gruppeninformationen des Benutzers ist ein Fehler aufgetreten.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.Web.HttpException">Die Vertrauensebene ist niedriger als <see cref="F:System.Web.AspNetHostingPermissionLevel.Low" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUsersInRole">
      <MemberSignature Language="C#" Value="public override string[] GetUsersInRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetUsersInRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.WindowsTokenRoleProvider.GetUsersInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetUsersInRole (roleName As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetUsersInRole(System::String ^ roleName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Der Name der Rolle, für die die Liste der Benutzer abgerufen werden soll.</param>
        <summary>Diese Methode wird vom Windows-Tokenrollenanbieter nicht unterstützt.</summary>
        <returns>Keine Die Methode wird von der <see cref="T:System.Web.Security.WindowsTokenRoleProvider" />-Klasse nicht unterstützt und löst immer eine <see cref="T:System.Configuration.Provider.ProviderException" /> aus.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">Eine nicht unterstützte Methode wurde aufgerufen.</exception>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.WindowsTokenRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (name As String, config As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ config);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="config" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name">Der Name der zu initialisierenden <see cref="T:System.Web.Security.WindowsTokenRoleProvider" />-Instanz.</param>
        <param name="config">Ein <see cref="T:System.Collections.Specialized.NameValueCollection" />-Konstruktor, der die Namen und Werte der Konfigurationsoptionen für die <see cref="T:System.Web.Security.WindowsTokenRoleProvider" />-Klasse enthält.</param>
        <summary>Initialisiert den Windows-Tokenrollenanbieter mit den Eigenschaftswerten, die in der Konfigurationsdatei der ASP.NET-Anwendung angegeben sind. Diese Methode ist nicht für die direkte Verwendung im Code vorgesehen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.WindowsTokenRoleProvider.Initialize%2A> Methode initialisiert die <xref:System.Web.Security.WindowsTokenRoleProvider> Klasse mit den Eigenschaftswerten in der Anwendungskonfigurationsdatei (Web.config) für das ASP.NET angegeben und nicht direkt aus Ihrem Code verwendet werden soll.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="config" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Das <see langword="applicationName" />-Attribut in der Konfiguration ist länger als 256 Zeichen.  
  
 - oder -   
  
 Die Anwendungskonfigurationsdatei dieser <see cref="T:System.Web.Security.WindowsTokenRoleProvider" />-Instanz enthält ein unbekanntes Attribut.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsUserInRole">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der angegebene Benutzer die angegebene integrierte Windows-Rolle innehat.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsUserInRole">
      <MemberSignature Language="C#" Value="public bool IsUserInRole (string username, System.Security.Principal.WindowsBuiltInRole role);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsUserInRole(string username, valuetype System.Security.Principal.WindowsBuiltInRole role) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.WindowsTokenRoleProvider.IsUserInRole(System.String,System.Security.Principal.WindowsBuiltInRole)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUserInRole (username As String, role As WindowsBuiltInRole) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsUserInRole(System::String ^ username, System::Security::Principal::WindowsBuiltInRole role);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="role" Type="System.Security.Principal.WindowsBuiltInRole" />
      </Parameters>
      <Docs>
        <param name="username">Der zu suchende Benutzername im Format DOMAIN\Benutzername.</param>
        <param name="role">Die Windows-Rolle, in der gesucht werden soll.</param>
        <summary>Ruft einen Wert ab, der angibt, ob der angegebene Benutzer die angegebene integrierte Windows-Rolle innehat.</summary>
        <returns>
          <see langword="true" />, wenn der angegebene Benutzer die angegebene Windows-Rolle innehat, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.WindowsTokenRoleProvider.IsUserInRole%2A> Methode können Sie prüfen, ob ein Benutzer in einem allgemeinen Windows-Rollen beschrieben, die durch die <xref:System.Security.Principal.WindowsBuiltInRole> Enumeration. Diese Methode ist nützlich für Anwendungen, die in mehrere Sprachen lokalisiert werden. Diese Überladung der der <xref:System.Web.Security.WindowsTokenRoleProvider.IsUserInRole%2A> Methode ist nicht Teil der <xref:System.Web.Security.RoleProvider> Basisklasse und kann nur durch Umwandlung zugegriffen werden die <xref:System.Web.Security.Roles.Provider%2A> Eigenschaft von der <xref:System.Web.Security.Roles> der Klasse die <xref:System.Web.Security.WindowsTokenRoleProvider> Typ.  
  
 Sie erreichen die <xref:System.Web.Security.WindowsTokenRoleProvider.IsUserInRole%2A> Methode nur für den aktuell angemeldeten Benutzer als durch die Servervariable LOGON_USER identifiziert. Wenn der Wert, in angegeben der `username` Parameter ist nicht der Name des aktuell angemeldeten Benutzers ein <xref:System.Web.HttpException> ausgelöst.  
  
 <xref:System.Web.Security.WindowsTokenRoleProvider.IsUserInRole%2A> Methode kann nur für den gegenwärtig angemeldeten Benutzer durch die Servervariable LOGON_USER identifiziert aufgerufen werden. Der aktuell angemeldete Benutzer muss einen authentifizierten Windows-Benutzer sein. Weitere Informationen über ASP.NET und Windows-Authentifizierung finden Sie unter [ASP.NET-Authentifizierung](http://msdn.microsoft.com/library/fc10b0ef-4ce4-4a7f-9174-886325221ee1).  
  
   
  
## Examples  
 Im folgenden Codebeispiel werden, ob der gegenwärtig angemeldete Benutzer in der "Administratoren" ist, bevor der Benutzer zum Anzeigen von Rolleninformationen für die Anwendung programmgesteuert überprüft. Ein Beispiel der Datei "Web.config", die mit der Rollenverwaltung kann, finden Sie unter <xref:System.Web.Security.WindowsTokenRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.WindowsTokenRoleProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.WindowsTokenRoleProvider/CS/ViewRoles2cs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.WindowsTokenRoleProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.WindowsTokenRoleProvider/VB/ViewRoles2vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Für den gegenwärtig ausgeführten Benutzer ist keine authentifizierte <see cref="T:System.Security.Principal.WindowsIdentity" /> an <see cref="P:System.Web.UI.Page.User" /> angefügt. In anderen Szenarien als HTTP-Szenarien ist für den gegenwärtig ausgeführten Benutzer keine authentifizierte <see cref="T:System.Security.Principal.WindowsIdentity" /> an <see cref="P:System.Threading.Thread.CurrentPrincipal" /> angefügt.  
  
 - oder -   
  
 <paramref name="username" /> stimmt nicht mit dem <see cref="P:System.Security.Principal.WindowsIdentity.Name" /> der aktuellen <see cref="T:System.Security.Principal.WindowsIdentity" /> überein.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsUserInRole">
      <MemberSignature Language="C#" Value="public override bool IsUserInRole (string username, string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsUserInRole(string username, string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.WindowsTokenRoleProvider.IsUserInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsUserInRole (username As String, roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsUserInRole(System::String ^ username, System::String ^ roleName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Der zu suchende Benutzername im Format DOMAIN\Benutzername.</param>
        <param name="roleName">Die zu suchende Windows-Gruppe im Format DOMAIN\Rollenname.</param>
        <summary>Ruft einen Wert ab, der angibt, ob der angegebene Benutzer der angegebenen Windows-Gruppe angehört.</summary>
        <returns>
          <see langword="true" />, wenn der angegebene Benutzer der angegebenen Windows-Gruppe angehört, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.WindowsTokenRoleProvider.IsUserInRole%2A> Methode wird aufgerufen, indem Sie die <xref:System.Web.Security.Roles> Klasse und die <xref:System.Security.Principal.IPrincipal.IsInRole%2A> Methode der <xref:System.Web.UI.Page.User%2A> Eigenschaft, um zu bestimmen, ob ein Benutzer in einer Windows-Gruppe ist. Sie erreichen die <xref:System.Web.Security.WindowsTokenRoleProvider.IsUserInRole%2A> Methode nur für den aktuell angemeldeten Benutzer als durch die Servervariable LOGON_USER identifiziert. Der aktuelle angemeldete Benutzer muss einen authentifizierten Windows-Benutzer sein. Weitere Informationen über ASP.NET und Windows-Authentifizierung finden Sie unter [ASP.NET-Authentifizierung](http://msdn.microsoft.com/library/fc10b0ef-4ce4-4a7f-9174-886325221ee1).  
  
   
  
## Examples  
 Im folgenden Codebeispiel werden, ob der gegenwärtig angemeldete Benutzer in der "Administratoren" ist, bevor der Benutzer zum Anzeigen von Rolleninformationen für die Anwendung programmgesteuert überprüft. Ein Beispiel der Datei "Web.config", die mit der Rollenverwaltung kann, finden Sie unter <xref:System.Web.Security.WindowsTokenRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.WindowsTokenRoleProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.WindowsTokenRoleProvider/CS/viewrolescs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.WindowsTokenRoleProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.WindowsTokenRoleProvider/VB/viewrolesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> ist <see langword="null" />.  
  
 - oder -   
  
 <paramref name="roleName" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Für den gegenwärtig ausgeführten Benutzer ist keine authentifizierte <see cref="T:System.Security.Principal.WindowsIdentity" /> an <see cref="P:System.Web.UI.Page.User" /> angefügt. In anderen Szenarien als HTTP-Szenarien ist für den gegenwärtig ausgeführten Benutzer keine authentifizierte <see cref="T:System.Security.Principal.WindowsIdentity" /> an <see cref="P:System.Threading.Thread.CurrentPrincipal" /> angefügt.  
  
 - oder -   
  
 <paramref name="username" /> stimmt nicht mit dem <see cref="P:System.Security.Principal.WindowsIdentity.Name" /> der aktuellen <see cref="T:System.Security.Principal.WindowsIdentity" /> überein.  
  
 - oder -   
  
 Beim Abrufen der Windows-Gruppeninformationen des Benutzers ist ein Fehler aufgetreten.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveUsersFromRoles">
      <MemberSignature Language="C#" Value="public override void RemoveUsersFromRoles (string[] usernames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RemoveUsersFromRoles(string[] usernames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.WindowsTokenRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RemoveUsersFromRoles (usernames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RemoveUsersFromRoles(cli::array &lt;System::String ^&gt; ^ usernames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames">Ein Zeichenfolgenarray mit Benutzernamen, die den angegebenen Rollen hinzugefügt werden sollen.</param>
        <param name="roleNames">Ein Zeichenfolgenarray mit Rollennamen, denen die angegebenen Benutzernamen hinzugefügt werden sollen.</param>
        <summary>Diese Methode wird vom Windows-Tokenrollenanbieter nicht unterstützt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird nicht unterstützt, indem Sie die <xref:System.Web.Security.WindowsTokenRoleProvider> Klasse und löst immer eine <xref:System.Configuration.Provider.ProviderException>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">Eine nicht unterstützte Methode wurde aufgerufen.</exception>
      </Docs>
    </Member>
    <Member MemberName="RoleExists">
      <MemberSignature Language="C#" Value="public override bool RoleExists (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool RoleExists(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.WindowsTokenRoleProvider.RoleExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function RoleExists (roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool RoleExists(System::String ^ roleName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Der Name der Rolle, die in der Datenquelle gesucht werden soll.</param>
        <summary>Diese Methode wird vom Windows-Tokenrollenanbieter nicht unterstützt.</summary>
        <returns>Keine Die Methode wird von der <see cref="T:System.Web.Security.WindowsTokenRoleProvider" />-Klasse nicht unterstützt und löst immer eine <see cref="T:System.Configuration.Provider.ProviderException" /> aus.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">Eine nicht unterstützte Methode wurde aufgerufen.</exception>
      </Docs>
    </Member>
  </Members>
</Type>