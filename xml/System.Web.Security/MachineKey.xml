<Type Name="MachineKey" FullName="System.Web.Security.MachineKey">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fd29ebecb8b86a39cdeff7d84129301c17522321" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52242158" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class MachineKey" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit MachineKey extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.MachineKey" />
  <TypeSignature Language="VB.NET" Value="Public Class MachineKey" />
  <TypeSignature Language="C++ CLI" Value="public ref class MachineKey abstract sealed" />
  <TypeSignature Language="F#" Value="type MachineKey = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt eine Möglichkeit bereit, Daten mithilfe der gleichen Algorithmen und Schlüsselwerte zu verschlüsseln oder zu hashen (oder beides), die für die ASP.NET-Formularauthentifizierung und den Ansichtszustand verwendet werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.MachineKey> -Klasse bietet Methoden, die die Logik Hashing- und verschlüsselungseinstellungen verfügbar zu machen, die ASP.NET bereitstellt. Weitere Informationen zur Verschlüsselung und Hashalgorithmen, die ASP.NET verwendet, und die Schlüsselwerte, die sie mit ihnen verwendet, finden Sie unter [MachineKey-Element ((ASP.NET Einstellungsschema)](https://msdn.microsoft.com/library/4b5699a9-bc21-4c4a-85f1-8b3b8ebd2d46).  
  
> [!WARNING]
>  Die <xref:System.Web.Security.MachineKey> APIs sollte nur in einer ASP.NET-Anwendung verwendet werden. Verhalten der MachineKey-APIs außerhalb des Kontexts einer ASP.NET-Anwendung ist nicht definiert  
  
 ]]></format>
    </remarks>
    <exception cref="T:System.ArgumentNullException">Die Daten, die verschlüsselt, mit einem Hash versehen, entschlüsselt oder überprüft werden sollen, sind nicht vorhanden.</exception>
  </Docs>
  <Members>
    <Member MemberName="Decode">
      <MemberSignature Language="C#" Value="public static byte[] Decode (string encodedData, System.Web.Security.MachineKeyProtection protectionOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] Decode(string encodedData, valuetype System.Web.Security.MachineKeyProtection protectionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MachineKey.Decode(System.String,System.Web.Security.MachineKeyProtection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Decode (encodedData As String, protectionOption As MachineKeyProtection) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ Decode(System::String ^ encodedData, System::Web::Security::MachineKeyProtection protectionOption);" />
      <MemberSignature Language="F#" Value="static member Decode : string * System.Web.Security.MachineKeyProtection -&gt; byte[]" Usage="System.Web.Security.MachineKey.Decode (encodedData, protectionOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This method is obsolete and is only provided for compatibility with existing code. It is recommended that new code use the Protect and Unprotect methods instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encodedData" Type="System.String" />
        <Parameter Name="protectionOption" Type="System.Web.Security.MachineKeyProtection" />
      </Parameters>
      <Docs>
        <param name="encodedData">Die verschlüsselten Daten, die verschlüsselt und/oder überprüft werden sollen.</param>
        <param name="protectionOption">Gibt an, ob der <paramref name="encodedData" />-Parameter verschlüsselt werden soll, und/oder Hash.</param>
        <summary>Decodiert und/oder überprüft Daten, die verschlüsselt wurden oder mit einem hashbasierten Meldungsauthentifizierungscode (HMAC) bereitgestellt wurden.</summary>
        <returns>Ein <see cref="T:System.Byte" />-Array, das die entschlüsselten Daten darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zur Verschlüsselung und Hashalgorithmen, die ASP.NET verwendet, zum Entschlüsseln und überprüfen die Daten, die übergeben wird, finden Sie unter [MachineKey-Element ((ASP.NET Einstellungsschema)](https://msdn.microsoft.com/library/4b5699a9-bc21-4c4a-85f1-8b3b8ebd2d46).  
  
   
  
## Examples  
 Ein Codebeispiel finden Sie unter den <xref:System.Web.Security.MachineKey> Übersicht über die Klasse.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public static string Encode (byte[] data, System.Web.Security.MachineKeyProtection protectionOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Encode(unsigned int8[] data, valuetype System.Web.Security.MachineKeyProtection protectionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MachineKey.Encode(System.Byte[],System.Web.Security.MachineKeyProtection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Encode (data As Byte(), protectionOption As MachineKeyProtection) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Encode(cli::array &lt;System::Byte&gt; ^ data, System::Web::Security::MachineKeyProtection protectionOption);" />
      <MemberSignature Language="F#" Value="static member Encode : byte[] * System.Web.Security.MachineKeyProtection -&gt; string" Usage="System.Web.Security.MachineKey.Encode (data, protectionOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This method is obsolete and is only provided for compatibility with existing code. It is recommended that new code use the Protect and Unprotect methods instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="protectionOption" Type="System.Web.Security.MachineKeyProtection" />
      </Parameters>
      <Docs>
        <param name="data">Die zu verschlüsselnden Daten.</param>
        <param name="protectionOption">Gibt an, ob der <paramref name="data" />-Parameter verschlüsselt werden soll, und/oder Hash.</param>
        <summary>Verschlüsselt Daten und/oder fügt einen hashbasierten Meldungsauthentifizierungscode (HMAC) an.</summary>
        <returns>Der verschlüsselte Wert, der Eingabewert mit einem angefügten HMAC oder das Ergebnis der Verschlüsselung des Eingabewerts mit einem angefügten HMAC.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zur Verschlüsselung und Hashalgorithmen, die ASP.NET verwendet, zum Entschlüsseln und überprüfen die Daten, die übergeben wird, finden Sie unter [MachineKey-Element ((ASP.NET Einstellungsschema)](https://msdn.microsoft.com/library/4b5699a9-bc21-4c4a-85f1-8b3b8ebd2d46).  
  
   
  
## Examples  
 Ein Codebeispiel finden Sie unter den <xref:System.Web.Security.MachineKey> Übersicht über die Klasse.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Protect">
      <MemberSignature Language="C#" Value="public static byte[] Protect (byte[] userData, params string[] purposes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] Protect(unsigned int8[] userData, string[] purposes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MachineKey.Protect(System.Byte[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Protect (userData As Byte(), ParamArray purposes As String()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ Protect(cli::array &lt;System::Byte&gt; ^ userData, ... cli::array &lt;System::String ^&gt; ^ purposes);" />
      <MemberSignature Language="F#" Value="static member Protect : byte[] * string[] -&gt; byte[]" Usage="System.Web.Security.MachineKey.Protect (userData, purposes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userData" Type="System.Byte[]" />
        <Parameter Name="purposes" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="userData">Die zu schützenden Daten. Diese Daten werden als "Nur Text" weitergeben.</param>
        <param name="purposes">Eine Liste der Zwecke für die Daten. Wenn dieser Wert angegeben wird, muss die gleiche Liste an die <see cref="M:System.Web.Security.MachineKey.Unprotect(System.Byte[],System.String[])" />-Methode übergeben werden, um den zurückgegebenen verschlüsselten Text zu entschlüsseln.</param>
        <summary>Schützt die angegebenen Daten, indem sie verschlüsselt oder signiert werden.</summary>
        <returns>Die Daten des verschlüsselten Texts.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ersetzt die <xref:System.Web.Security.MachineKey.Encode%2A> -Methode, die erfordert, dass der Aufrufer angeben, ob die Klartextdaten signiert, verschlüsselt werden soll, oder beides. Die <xref:System.Web.Security.MachineKey.Protect%2A> Methode führt den entsprechenden Vorgang und die Daten werden sicher geschützt. Daten des verschlüsselten Texts erstellt, die von dieser Methode können nur entschlüsselt werden, durch die <xref:System.Web.Security.MachineKey.Unprotect%2A> Methode.  
  
 Die `purposes` Parameter ist eine optionale Liste der Gründe, die den verschlüsselten Text auf einen bestimmten Zweck sperren können. Dieser Parameter können Sie die kryptografischen Vorgänge, die von verschiedenen Subsystemen innerhalb einer Anwendung zu isolieren. Ein böswilliger Client sollte nicht in der Lage, bis das Ergebnis von einem Subsystem <xref:System.Web.Security.MachineKey.Protect%2A> -Methode und Feed, die als für ein weiteres Subsystem Eingabe <xref:System.Web.Security.MachineKey.Unprotect%2A> -Methode, die Sicherheit gefährden könnten. Die `purposes` Parameter wird sichergestellt, dass es sich bei geschützte Daten nur von der Komponente verwendet werden können, die ursprünglich generiert hat. Anwendungen stellen Sie sicher, dass jedes Subsystem verwendet, die einen eindeutigen `purposes` Liste.  
  
 Zum Schützen oder Aufheben des Schutzes eines Authentifizierungstokens, könnten Sie z. B. die Methode, die mithilfe von Code wie im folgenden Beispiel aufrufen:  
  
```csharp  
MachineKey.Protect(..., "Authentication token");  
MachineKey.Unprotect(..., "Authentication token");  
```  
  
```vb  
MachineKey.Protect(..., "Authentication token")  
MachineKey.Unprotect(..., "Authentication token")  
```  
  
 Anwendungen können dynamisch generieren die `purposes` Parameter. In diesem Fall Präfix Benutzer angegebenen Werte mit einem festen Wert (z. B. "`Username:` " + *Benutzername*) zum Minimieren des Risikos der ein böswilliger Client mit dem Erstellen der Eingabe, die ein Token entspricht, die von einem anderen Teil des Systems verwendet wird. Beliebige Zeichenfolgen, die dynamisch generierte sollte nach feste Zeichenfolgen stammen. Z. B. zum Schützen oder Aufheben des Schutzes von einer privaten Meldung, die für einen bestimmten Benutzer gebunden ist, verwenden Sie Code wie im folgenden Beispiel an:  
  
```csharp  
MachineKey.Protect(..., "Private message", "Recipient: " + username);  
MachineKey.Unprotect(..., "Private message", "Recipient: " + username);  
```  
  
```vb  
MachineKey.Protect(..., "Private message", "Recipient: " + username)  
MachineKey.Unprotect(..., "Private message", "Recipient: " + username)  
```  
  
 Bei der <xref:System.Web.Security.MachineKey.Unprotect%2A> -Methode aufgerufen wird, wird den Wert, der aus Gründen der der `purposes` Parameter muss denselben Wert, der bereitgestellt wurden, werden die <xref:System.Web.Security.MachineKey.Protect%2A> Methode. Andernfalls schlägt der Vorgang fehl, mit einem <xref:System.Security.Cryptography.CryptographicException> Ausnahme.  
  
 Die Konfigurationseinstellungen, die für erforderlich sind die <xref:System.Web.Configuration.MachineKeyCompatibilityMode.Framework45?displayProperty=nameWithType> Option sind erforderlich, damit diese Methode auch, wenn die <xref:System.Web.Configuration.MachineKeySection.CompatibilityMode%2A?displayProperty=nameWithType> Eigenschaft ist nicht festgelegt, um die <xref:System.Web.Configuration.MachineKeyCompatibilityMode.Framework45> Option.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="userData" />-Parameter ist null.</exception>
        <exception cref="T:System.ArgumentException">Das Begründungsarray enthält mindestens einen Leerstelleneintrag.</exception>
      </Docs>
    </Member>
    <Member MemberName="Unprotect">
      <MemberSignature Language="C#" Value="public static byte[] Unprotect (byte[] protectedData, params string[] purposes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] Unprotect(unsigned int8[] protectedData, string[] purposes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MachineKey.Unprotect(System.Byte[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Unprotect (protectedData As Byte(), ParamArray purposes As String()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ Unprotect(cli::array &lt;System::Byte&gt; ^ protectedData, ... cli::array &lt;System::String ^&gt; ^ purposes);" />
      <MemberSignature Language="F#" Value="static member Unprotect : byte[] * string[] -&gt; byte[]" Usage="System.Web.Security.MachineKey.Unprotect (protectedData, purposes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="protectedData" Type="System.Byte[]" />
        <Parameter Name="purposes" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="protectedData">Die Daten des verschlüsselten Texts, deren Schutz aufgehoben werden soll.</param>
        <param name="purposes">Eine Liste von Zwecken, die beschreiben, wozu die Daten dienen sollen. Das muss der gleiche Wert sein, der an die <see cref="M:System.Web.Security.MachineKey.Protect(System.Byte[],System.String[])" />-Methode übergeben wird, als die Daten geschützt wurden.</param>
        <summary>Hebt den Schutz für die angegebenen Daten auf, welche durch die <see cref="M:System.Web.Security.MachineKey.Protect(System.Byte[],System.String[])" />-Methode geschützt waren.</summary>
        <returns>Die Nur-Text-Daten.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zu dieser Methode finden Sie unter den <xref:System.Web.Security.MachineKey.Protect%2A> Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="protectedData" />-Parameter ist null.</exception>
        <exception cref="T:System.ArgumentException">Das Begründungsarray enthält mindestens einen Leerstelleneintrag.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Die folgenden Ursachen sind möglich: 
–   Die geschützten Daten wurden manipuliert.  
  
–   Der Wert des <paramref name="purposes" />-Parameters ist nicht identisch mit dem Wert, der angegeben wurde, als die Daten mit einem Schutz versehen wurden.  
  
–   Die Anwendung wird mehr als einem Server bereitgestellt und verwendet automatisch generierte Verschlüsselungsschlüssel.</exception>
      </Docs>
    </Member>
  </Members>
</Type>