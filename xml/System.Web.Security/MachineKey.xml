<Type Name="MachineKey" FullName="System.Web.Security.MachineKey">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4f3a1e7ce27804a82d39a1804fd865b04383fe2f" /><Meta Name="ms.sourcegitcommit" Value="1403e40e1f487577d6846a42664d2e74b78a08b7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="01/29/2020" /><Meta Name="ms.locfileid" Value="76825520" /></Metadata><TypeSignature Language="C#" Value="public static class MachineKey" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit MachineKey extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.MachineKey" />
  <TypeSignature Language="VB.NET" Value="Public Class MachineKey" />
  <TypeSignature Language="C++ CLI" Value="public ref class MachineKey abstract sealed" />
  <TypeSignature Language="F#" Value="type MachineKey = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt eine Möglichkeit bereit, Daten mithilfe der gleichen Algorithmen und Schlüsselwerte zu verschlüsseln oder zu hashen (oder beides), die für die ASP.NET-Formularauthentifizierung und den Ansichtszustand verwendet werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.MachineKey>-Klasse stellt Methoden bereit, die die von ASP.NET bereitgestellte Hash-und Verschlüsselungs Logik verfügbar machen. Informationen dazu, welche Verschlüsselungs-und Hash Algorithmen ASP.NET verwendet, und die Schlüsselwerte, die für Sie verwendet werden, finden Sie unter [machineKey-Element (ASP.net-Einstellungs Schema)](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/w8h3skw9(v=vs.100)).  
  
> [!WARNING]
>  Die <xref:System.Web.Security.MachineKey>-APIs sollten nur in einer ASP.net-App verwendet werden. Das Verhalten der machineKey-APIs außerhalb des Kontexts einer ASP.NET-Anwendung ist nicht definiert.  
  
 ]]></format>
    </remarks>
    <exception cref="T:System.ArgumentNullException">Die Daten, die verschlüsselt, mit einem Hash versehen, entschlüsselt oder überprüft werden sollen, sind nicht vorhanden.</exception>
  </Docs>
  <Members>
    <Member MemberName="Decode">
      <MemberSignature Language="C#" Value="public static byte[] Decode (string encodedData, System.Web.Security.MachineKeyProtection protectionOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] Decode(string encodedData, valuetype System.Web.Security.MachineKeyProtection protectionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MachineKey.Decode(System.String,System.Web.Security.MachineKeyProtection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Decode (encodedData As String, protectionOption As MachineKeyProtection) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ Decode(System::String ^ encodedData, System::Web::Security::MachineKeyProtection protectionOption);" />
      <MemberSignature Language="F#" Value="static member Decode : string * System.Web.Security.MachineKeyProtection -&gt; byte[]" Usage="System.Web.Security.MachineKey.Decode (encodedData, protectionOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This method is obsolete and is only provided for compatibility with existing code. It is recommended that new code use the Protect and Unprotect methods instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encodedData" Type="System.String" />
        <Parameter Name="protectionOption" Type="System.Web.Security.MachineKeyProtection" />
      </Parameters>
      <Docs>
        <param name="encodedData">Die verschlüsselten Daten, die verschlüsselt und/oder überprüft werden sollen.</param>
        <param name="protectionOption">Gibt an, ob der <paramref name="encodedData" />-Parameter verschlüsselt werden soll, und/oder Hash.</param>
        <summary>Decodiert und/oder überprüft Daten, die verschlüsselt wurden oder mit einem hashbasierten Meldungsauthentifizierungscode (HMAC) bereitgestellt wurden.</summary>
        <returns>Ein <see cref="T:System.Byte" />-Array, das die entschlüsselten Daten darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Informationen dazu, welche Verschlüsselungs-und Hash Algorithmen ASP.NET verwendet, um die Daten zu entschlüsseln und zu überprüfen, die übermittelt werden, finden Sie unter [machineKey-Element (ASP.net-Einstellungs Schema)](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/w8h3skw9(v=vs.100)).  
  
   
  
## Examples  
 Ein Codebeispiel finden Sie in der Übersicht über <xref:System.Web.Security.MachineKey>-Klasse.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public static string Encode (byte[] data, System.Web.Security.MachineKeyProtection protectionOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Encode(unsigned int8[] data, valuetype System.Web.Security.MachineKeyProtection protectionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MachineKey.Encode(System.Byte[],System.Web.Security.MachineKeyProtection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Encode (data As Byte(), protectionOption As MachineKeyProtection) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Encode(cli::array &lt;System::Byte&gt; ^ data, System::Web::Security::MachineKeyProtection protectionOption);" />
      <MemberSignature Language="F#" Value="static member Encode : byte[] * System.Web.Security.MachineKeyProtection -&gt; string" Usage="System.Web.Security.MachineKey.Encode (data, protectionOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This method is obsolete and is only provided for compatibility with existing code. It is recommended that new code use the Protect and Unprotect methods instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="protectionOption" Type="System.Web.Security.MachineKeyProtection" />
      </Parameters>
      <Docs>
        <param name="data">Die zu verschlüsselnden Daten.</param>
        <param name="protectionOption">Gibt an, ob der <paramref name="data" />-Parameter verschlüsselt werden soll, und/oder Hash.</param>
        <summary>Verschlüsselt Daten und/oder fügt einen hashbasierten Meldungsauthentifizierungscode (HMAC) an.</summary>
        <returns>Der verschlüsselte Wert, der Eingabewert mit einem angefügten HMAC oder das Ergebnis der Verschlüsselung des Eingabewerts mit einem angefügten HMAC.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Informationen dazu, welche Verschlüsselungs-und Hash Algorithmen ASP.NET verwendet, um die Daten zu entschlüsseln und zu überprüfen, die übermittelt werden, finden Sie unter [machineKey-Element (ASP.net-Einstellungs Schema)](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/w8h3skw9(v=vs.100)).  
  
   
  
## Examples  
 Ein Codebeispiel finden Sie in der Übersicht über <xref:System.Web.Security.MachineKey>-Klasse.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Protect">
      <MemberSignature Language="C#" Value="public static byte[] Protect (byte[] userData, params string[] purposes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] Protect(unsigned int8[] userData, string[] purposes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MachineKey.Protect(System.Byte[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Protect (userData As Byte(), ParamArray purposes As String()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ Protect(cli::array &lt;System::Byte&gt; ^ userData, ... cli::array &lt;System::String ^&gt; ^ purposes);" />
      <MemberSignature Language="F#" Value="static member Protect : byte[] * string[] -&gt; byte[]" Usage="System.Web.Security.MachineKey.Protect (userData, purposes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userData" Type="System.Byte[]" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="purposes" Type="System.String[]" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="userData">Die zu schützenden Daten. Diese Daten werden als "Nur Text" weitergeben.</param>
        <param name="purposes">Eine Liste der Zwecke für die Daten. Wenn dieser Wert angegeben wird, muss die gleiche Liste an die <see cref="M:System.Web.Security.MachineKey.Unprotect(System.Byte[],System.String[])" />-Methode übergeben werden, um den zurückgegebenen verschlüsselten Text zu entschlüsseln.</param>
        <summary>Schützt die angegebenen Daten, indem sie verschlüsselt oder signiert werden.</summary>
        <returns>Die Daten des verschlüsselten Texts.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode löst die <xref:System.Web.Security.MachineKey.Encode%2A>-Methode aus, die erfordert, dass der Aufrufer angibt, ob die Klartext-Daten verschlüsselt, signiert oder beides sind. Die <xref:System.Web.Security.MachineKey.Protect%2A>-Methode führt den entsprechenden Vorgang aus und schützt die Daten sicher. Von dieser Methode erstellte Chiffre Text Daten können nur von der <xref:System.Web.Security.MachineKey.Unprotect%2A>-Methode decoiert werden.  
  
 Der `purposes`-Parameter ist eine optionale Liste von Gründen, die den Chiffre Text für einen bestimmten Zweck Sperren können. Mit diesem Parameter können Sie kryptografische Vorgänge isolieren, die von unterschiedlichen Subsystemen in einer Anwendung ausgeführt werden. Ein böswilliger Client sollte nicht in der Lage sein, das Ergebnis der <xref:System.Web.Security.MachineKey.Protect%2A> Methode eines Subsystems zu erhalten und als Eingabe an die <xref:System.Web.Security.MachineKey.Unprotect%2A> Methode eines anderen Subsystems zu übertragen, was die Anwendungssicherheit beeinträchtigen könnte. Mit dem `purposes`-Parameter wird sichergestellt, dass geschützte Daten nur von der Komponente verwendet werden können, die Sie ursprünglich generiert hat. Anwendungen sollten sicherstellen, dass jedes Subsystem eine eindeutige `purposes` Liste verwendet.  
  
 Um z. b. ein Authentifizierungs Token zu schützen oder den Schutz aufzuheben, können Sie die-Methode mithilfe von Code wie im folgenden Beispiel aufzurufen:  
  
```csharp  
MachineKey.Protect(..., "Authentication token");  
MachineKey.Unprotect(..., "Authentication token");  
```  
  
```vb  
MachineKey.Protect(..., "Authentication token")  
MachineKey.Unprotect(..., "Authentication token")  
```  
  
 Anwendungen können den `purposes`-Parameter dynamisch generieren. Stellen Sie in diesem Fall vom Benutzer bereitgestellte Werte mit einem festgelegten Wert (z. b. "`Username:`" + *username*) ein, um das Risiko zu minimieren, dass ein böswilliger Client eine Eingabe durchläuft, die mit einem von einem anderen Teil des Systems verwendeten Token übereinstimmt. Alle dynamisch generierten Zeichen folgen sollten nach fixierten Zeichen folgen liegen. Um z. b. eine private Nachricht, die an einen bestimmten Benutzer gebunden ist, zu schützen oder deren Schutz aufzuheben, verwenden Sie Code wie im folgenden Beispiel:  
  
```csharp  
MachineKey.Protect(..., "Private message", "Recipient: " + username);  
MachineKey.Unprotect(..., "Private message", "Recipient: " + username);  
```  
  
```vb  
MachineKey.Protect(..., "Private message", "Recipient: " + username)  
MachineKey.Unprotect(..., "Private message", "Recipient: " + username)  
```  
  
 Wenn die <xref:System.Web.Security.MachineKey.Unprotect%2A>-Methode aufgerufen wird, muss der Wert, der für den `purposes`-Parameter bereitgestellt wird, mit dem Wert identisch sein, der für die <xref:System.Web.Security.MachineKey.Protect%2A>-Methode bereitgestellt wurde. Andernfalls schlägt der Vorgang mit einer <xref:System.Security.Cryptography.CryptographicException> Ausnahme fehl.  
  
 Die Konfigurationseinstellungen, die für die <xref:System.Web.Configuration.MachineKeyCompatibilityMode.Framework45?displayProperty=nameWithType>-Option erforderlich sind, sind für diese Methode erforderlich, auch wenn die <xref:System.Web.Configuration.MachineKeySection.CompatibilityMode%2A?displayProperty=nameWithType>-Eigenschaft nicht auf die <xref:System.Web.Configuration.MachineKeyCompatibilityMode.Framework45>-Option festgelegt ist.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="userData" />-Parameter ist null.</exception>
        <exception cref="T:System.ArgumentException">Das Begründungsarray enthält mindestens einen Leerstelleneintrag.</exception>
      </Docs>
    </Member>
    <Member MemberName="Unprotect">
      <MemberSignature Language="C#" Value="public static byte[] Unprotect (byte[] protectedData, params string[] purposes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] Unprotect(unsigned int8[] protectedData, string[] purposes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MachineKey.Unprotect(System.Byte[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Unprotect (protectedData As Byte(), ParamArray purposes As String()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ Unprotect(cli::array &lt;System::Byte&gt; ^ protectedData, ... cli::array &lt;System::String ^&gt; ^ purposes);" />
      <MemberSignature Language="F#" Value="static member Unprotect : byte[] * string[] -&gt; byte[]" Usage="System.Web.Security.MachineKey.Unprotect (protectedData, purposes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="protectedData" Type="System.Byte[]" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="purposes" Type="System.String[]" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="protectedData">Die Daten des verschlüsselten Texts, deren Schutz aufgehoben werden soll.</param>
        <param name="purposes">Eine Liste von Zwecken, die beschreiben, wozu die Daten dienen sollen. Das muss der gleiche Wert sein, der an die <see cref="M:System.Web.Security.MachineKey.Protect(System.Byte[],System.String[])" />-Methode übergeben wird, als die Daten geschützt wurden.</param>
        <summary>Hebt den Schutz für die angegebenen Daten auf, welche durch die <see cref="M:System.Web.Security.MachineKey.Protect(System.Byte[],System.String[])" />-Methode geschützt waren.</summary>
        <returns>Die Nur-Text-Daten.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zu dieser Methode finden Sie in der <xref:System.Web.Security.MachineKey.Protect%2A>-Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="protectedData" />-Parameter ist null.</exception>
        <exception cref="T:System.ArgumentException">Das Begründungsarray enthält mindestens einen Leerstelleneintrag.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Zu den möglichen Ursachen gehören: 
–   Die geschützten Daten wurden manipuliert.  
  
–   Der Wert des <paramref name="purposes" />-Parameters ist nicht identisch mit dem Wert, der angegeben wurde, als die Daten mit einem Schutz versehen wurden.  
  
–   Die Anwendung wird mehr als einem Server bereitgestellt und verwendet automatisch generierte Verschlüsselungsschlüssel.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
