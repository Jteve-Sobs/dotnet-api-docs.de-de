<Type Name="MachineKey" FullName="System.Web.Security.MachineKey">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="38b508a388c7a5780f25a8f4d9b18b042a2c0bff" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36596945" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class MachineKey" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit MachineKey extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.MachineKey" />
  <TypeSignature Language="VB.NET" Value="Public Class MachineKey" />
  <TypeSignature Language="C++ CLI" Value="public ref class MachineKey abstract sealed" />
  <TypeSignature Language="F#" Value="type MachineKey = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides a way to encrypt or hash data (or both) by using the same algorithms and key values that are used for ASP.NET forms authentication and view state.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.MachineKey> Klasse enthält Methoden, die die Logik Hashing- und verschlüsselungseinstellungen verfügbar zu machen, die ASP.NET bereitstellt. Weitere Informationen zur Verschlüsselung und Hashalgorithmen ASP.NET verwendet, und die Schlüsselwerte, die mit ihnen verwendet werden, finden Sie unter [MachineKey-Element ((ASP.NET Settings Schema)](http://msdn.microsoft.com/library/4b5699a9-bc21-4c4a-85f1-8b3b8ebd2d46).  
  
> [!WARNING]
>  Die <xref:System.Web.Security.MachineKey> APIs sollte nur in einer ASP.NET-Anwendung verwendet werden. Verhalten der außerhalb des Kontexts einer ASP.NET-Anwendung MachineKey-APIs ist nicht definiert  
  
 ]]></format>
    </remarks>
    <exception cref="T:System.ArgumentNullException">The data to encrypt, hash, decrypt, or validate does not exist</exception>
  </Docs>
  <Members>
    <Member MemberName="Decode">
      <MemberSignature Language="C#" Value="public static byte[] Decode (string encodedData, System.Web.Security.MachineKeyProtection protectionOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] Decode(string encodedData, valuetype System.Web.Security.MachineKeyProtection protectionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MachineKey.Decode(System.String,System.Web.Security.MachineKeyProtection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Decode (encodedData As String, protectionOption As MachineKeyProtection) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ Decode(System::String ^ encodedData, System::Web::Security::MachineKeyProtection protectionOption);" />
      <MemberSignature Language="F#" Value="static member Decode : string * System.Web.Security.MachineKeyProtection -&gt; byte[]" Usage="System.Web.Security.MachineKey.Decode (encodedData, protectionOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This method is obsolete and is only provided for compatibility with existing code. It is recommended that new code use the Protect and Unprotect methods instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encodedData" Type="System.String" />
        <Parameter Name="protectionOption" Type="System.Web.Security.MachineKeyProtection" />
      </Parameters>
      <Docs>
        <param name="encodedData">The encrypted data to decrypt and/or validate.</param>
        <param name="protectionOption">Indicates whether the <c>encodedData</c> parameter should be encrypted and/or hashed.</param>
        <summary>Decodes and/or validates data that has been encrypted or provided with a hash-based message authentication code (HMAC).</summary>
        <returns>A <see cref="T:System.Byte" /> array that represents the decrypted data.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Informationen zur Verschlüsselung und Hashalgorithmen verwendet ASP.NET zu entschlüsseln und zu überprüfen, die Daten, die übergeben wird, finden Sie unter [MachineKey-Element ((ASP.NET Settings Schema)](http://msdn.microsoft.com/library/4b5699a9-bc21-4c4a-85f1-8b3b8ebd2d46).  
  
   
  
## Examples  
 Ein Codebeispiel finden Sie unter der <xref:System.Web.Security.MachineKey> -Klassenübersicht.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public static string Encode (byte[] data, System.Web.Security.MachineKeyProtection protectionOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Encode(unsigned int8[] data, valuetype System.Web.Security.MachineKeyProtection protectionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MachineKey.Encode(System.Byte[],System.Web.Security.MachineKeyProtection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Encode (data As Byte(), protectionOption As MachineKeyProtection) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Encode(cli::array &lt;System::Byte&gt; ^ data, System::Web::Security::MachineKeyProtection protectionOption);" />
      <MemberSignature Language="F#" Value="static member Encode : byte[] * System.Web.Security.MachineKeyProtection -&gt; string" Usage="System.Web.Security.MachineKey.Encode (data, protectionOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This method is obsolete and is only provided for compatibility with existing code. It is recommended that new code use the Protect and Unprotect methods instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="protectionOption" Type="System.Web.Security.MachineKeyProtection" />
      </Parameters>
      <Docs>
        <param name="data">The data to encrypt.</param>
        <param name="protectionOption">Indicates whether the <c>data</c> parameter should be encrypted and/or hashed.</param>
        <summary>Encrypts data and/or appends a hash-based message authentication code (HMAC).</summary>
        <returns>The encrypted value, the input value with an HMAC appended, or the result of encrypting the input value with an HMAC appended.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Informationen zur Verschlüsselung und Hashalgorithmen verwendet ASP.NET zu entschlüsseln und zu überprüfen, die Daten, die übergeben wird, finden Sie unter [MachineKey-Element ((ASP.NET Settings Schema)](http://msdn.microsoft.com/library/4b5699a9-bc21-4c4a-85f1-8b3b8ebd2d46).  
  
   
  
## Examples  
 Ein Codebeispiel finden Sie unter der <xref:System.Web.Security.MachineKey> -Klassenübersicht.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Protect">
      <MemberSignature Language="C#" Value="public static byte[] Protect (byte[] userData, params string[] purposes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] Protect(unsigned int8[] userData, string[] purposes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MachineKey.Protect(System.Byte[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Protect (userData As Byte(), ParamArray purposes As String()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ Protect(cli::array &lt;System::Byte&gt; ^ userData, ... cli::array &lt;System::String ^&gt; ^ purposes);" />
      <MemberSignature Language="F#" Value="static member Protect : byte[] * string[] -&gt; byte[]" Usage="System.Web.Security.MachineKey.Protect (userData, purposes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userData" Type="System.Byte[]" />
        <Parameter Name="purposes" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="userData">The data to protect. This data is passed as plaintext.</param>
        <param name="purposes">A list of purposes for the data. If this value is specified, the same list must be passed to the <see cref="M:System.Web.Security.MachineKey.Unprotect(System.Byte[],System.String[])" /> method in order to decipher the returned ciphertext.</param>
        <summary>Protects the specified data by encrypting or signing it.</summary>
        <returns>The ciphertext data.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ersetzt die <xref:System.Web.Security.MachineKey.Encode%2A> -Methode, die erfordert, dass der Aufrufer angeben, ob die Klartextdaten signiert, verschlüsselt werden soll, oder beides. Die <xref:System.Web.Security.MachineKey.Protect%2A> Methode führt den entsprechenden Vorgang und die Daten sicher geschützt. Chiffretext-Daten nutzen, die von dieser Methode können nur von entschlüsselt werden die <xref:System.Web.Security.MachineKey.Unprotect%2A> Methode.  
  
 Die `purposes` Parameter ist eine optionale Liste der Gründe, die den verschlüsselten Text auf einen bestimmten Zweck sperren können. Dieser Parameter können Sie die kryptografischen Vorgänge, die von verschiedenen Subsysteme innerhalb einer Anwendung ausgeführten zu isolieren. Ein bösartiger Client sollte nicht in der Lage, Abrufen des Ergebnisses ein Subsystem <xref:System.Web.Security.MachineKey.Protect%2A> -Methode und den Feed als an ein weiteres Subsystem Eingabe <xref:System.Web.Security.MachineKey.Unprotect%2A> -Methode, die Sicherheit der Anwendung gefährden könnte. Die `purposes` Parameter wird sichergestellt, dass geschützte Daten nur von der Komponente verwendet werden können, die ursprünglich generiert hat. Anwendungen stellen Sie sicher, dass jedes Subsystem verwendet, die eine eindeutige `purposes` Liste.  
  
 Beispielsweise können Sie zum Schützen oder Aufheben des Schutzes ein Authentifizierungstoken, die Methode mithilfe von Code wie im folgenden Beispiel aufrufen:  
  
```csharp  
MachineKey.Protect(..., "Authentication token");  
MachineKey.Unprotect(..., "Authentication token");  
```  
  
```vb  
MachineKey.Protect(..., "Authentication token")  
MachineKey.Unprotect(..., "Authentication token")  
```  
  
 Anwendungen können dynamisch generieren die `purposes` Parameter. In diesem Fall als Präfix Benutzer bereitgestellte Werte mit einem festen Wert (z. B. "`Username:` " + *Benutzername*) zum Minimieren des Risikos der einen schädlichen Client Objekt Eingabe, die ein Token entspricht, die von einem anderen Teil des Systems verwendet wird. Beliebige Zeichenfolgen, die dynamisch generierte sollte nach dem festgelegten Zeichenfolgen stammen. Verwenden Sie zum Schützen oder Aufheben des Schutzes von einer privaten Nachricht, die mit einem bestimmten Benutzer verknüpft ist, z. B. Code wie im folgenden Beispiel:  
  
```csharp  
MachineKey.Protect(..., "Private message", "Recipient: " + username);  
MachineKey.Unprotect(..., "Private message", "Recipient: " + username);  
```  
  
```vb  
MachineKey.Protect(..., "Private message", "Recipient: " + username)  
MachineKey.Unprotect(..., "Private message", "Recipient: " + username)  
```  
  
 Bei der <xref:System.Web.Security.MachineKey.Unprotect%2A> -Methode aufgerufen wird, wird den Wert, der aus Gründen der `purposes` Parameter muss den gleichen Wert, der bereitgestellt wurde die <xref:System.Web.Security.MachineKey.Protect%2A> Methode. Andernfalls schlägt der Vorgang fehl, mit einem <xref:System.Security.Cryptography.CryptographicException> Ausnahme.  
  
 Die Konfigurationseinstellungen, die für erforderlich sind die <xref:System.Web.Configuration.MachineKeyCompatibilityMode.Framework45?displayProperty=nameWithType> Option sind erforderlich für diese Methode, selbst wenn die <xref:System.Web.Configuration.MachineKeySection.CompatibilityMode%2A?displayProperty=nameWithType> Eigenschaft nicht festgelegt ist, um die <xref:System.Web.Configuration.MachineKeyCompatibilityMode.Framework45> Option.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="userData" /> parameter is null.</exception>
        <exception cref="T:System.ArgumentException">The purposes array contains one or more whitespace-only entries.</exception>
      </Docs>
    </Member>
    <Member MemberName="Unprotect">
      <MemberSignature Language="C#" Value="public static byte[] Unprotect (byte[] protectedData, params string[] purposes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] Unprotect(unsigned int8[] protectedData, string[] purposes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MachineKey.Unprotect(System.Byte[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Unprotect (protectedData As Byte(), ParamArray purposes As String()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ Unprotect(cli::array &lt;System::Byte&gt; ^ protectedData, ... cli::array &lt;System::String ^&gt; ^ purposes);" />
      <MemberSignature Language="F#" Value="static member Unprotect : byte[] * string[] -&gt; byte[]" Usage="System.Web.Security.MachineKey.Unprotect (protectedData, purposes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="protectedData" Type="System.Byte[]" />
        <Parameter Name="purposes" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="protectedData">The ciphertext data to unprotect.</param>
        <param name="purposes">A list of purposes that describe what the data is meant for. This must be the same value that was passed to the <see cref="M:System.Web.Security.MachineKey.Protect(System.Byte[],System.String[])" /> method when the data was protected.</param>
        <summary>Unprotects the specified data, which was protected by the <see cref="M:System.Web.Security.MachineKey.Protect(System.Byte[],System.String[])" /> method.</summary>
        <returns>The plaintext data.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Informationen zu dieser Methode finden Sie unter der <xref:System.Web.Security.MachineKey.Protect%2A> Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="protectedData" /> parameter is null.</exception>
        <exception cref="T:System.ArgumentException">The purposes array contains one or more whitespace-only entries.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Possible causes include the following:  -   The protected data was tampered with.  -   The value of the <paramref name="purposes" /> parameter is not the same as the value that was specified when the data was protected.  -   The application is deployed to more than one server and is using auto-generated encryption keys.</exception>
      </Docs>
    </Member>
  </Members>
</Type>