<Type Name="RolePrincipal" FullName="System.Web.Security.RolePrincipal">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="67099bacb2588ff0b121301612754030c77f8f83" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30550194" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RolePrincipal : System.Security.Claims.ClaimsPrincipal, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit RolePrincipal extends System.Security.Claims.ClaimsPrincipal implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.RolePrincipal" />
  <TypeSignature Language="VB.NET" Value="Public Class RolePrincipal&#xA;Inherits ClaimsPrincipal&#xA;Implements ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class RolePrincipal : System::Security::Claims::ClaimsPrincipal, System::Runtime::Serialization::ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Claims.ClaimsPrincipal</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Stellt Sicherheitsinformationen für die aktuelle HTTP-Anforderung, einschließlich Rollenmitgliedschaft, dar. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.RolePrincipal> -Objekt implementiert die <xref:System.Security.Principal.IPrincipal> -Schnittstelle und den aktuelle Sicherheitskontext für die HTTP-Anforderung darstellt.  
  
 Wenn Rollenverwaltung aktiviert ist (finden Sie unter <xref:System.Web.Security.Roles>), die <xref:System.Web.Security.RoleManagerModule> weist eine <xref:System.Web.Security.RolePrincipal> -Objekt an die <xref:System.Web.HttpContext.User%2A> Eigenschaft von der <xref:System.Web.HttpContext.Current%2A> <xref:System.Web.HttpContext>.  
  
 Die <xref:System.Web.Security.RolePrincipal> Klasse macht die Sicherheitsidentität für die aktuelle HTTP-Anforderung und darüber hinaus überprüft die Mitgliedschaft in Datenbankrolle. Wenn <xref:System.Web.Security.Roles.CacheRolesInCookie%2A> ist `true`, und klicken Sie dann die <xref:System.Web.Security.RolePrincipal> Objekt verwaltet die zwischengespeicherte Liste der Rollen und sucht die Rollenmitgliedschaft für den aktuellen Benutzer in der zwischengespeicherten Listen zuerst, dann die Rolle <xref:System.Web.Security.Roles.Provider%2A>. Wenn <xref:System.Web.Security.Roles.CacheRolesInCookie%2A> ist `false`die <xref:System.Web.Security.RolePrincipal> Objekt immer sucht Rollenmitgliedschaft mithilfe des Rollenanbieters.  
  
 Die <xref:System.Web.Security.RolePrincipal> -Objekt verschlüsselt und entschlüsselt Rolleninformationen in das Cookie durch identifiziert die <xref:System.Web.Security.Roles.CookieName%2A> basierend auf den <xref:System.Web.Security.Roles.CookieProtectionValue%2A>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Erstellt eine neue Instanz der <see cref="T:System.Web.Security.RolePrincipal" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RolePrincipal (System.Security.Principal.IIdentity identity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IIdentity identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.#ctor(System.Security.Principal.IIdentity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As IIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RolePrincipal(System::Security::Principal::IIdentity ^ identity);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IIdentity" />
      </Parameters>
      <Docs>
        <param name="identity">Die Benutzeridentität, für die <see cref="T:System.Web.Security.RolePrincipal" /> erstellt werden soll.</param>
        <summary>Instanziiert ein <see cref="T:System.Web.Security.RolePrincipal" />-Objekt für die angegebene <paramref name="identity" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Überladung von der <xref:System.Web.Security.RolePrincipal.%23ctor%2A> Konstruktor erstellt ein neues <xref:System.Web.Security.RolePrincipal> -Objekt und initialisiert die Eigenschaftswerte. Zwischengespeicherte Rolleninformationen ist nicht aus dem Cookie durch Lesen der <xref:System.Web.Security.Roles.CookieName%2A> Eigenschaft. Die <xref:System.Web.Security.RolePrincipal.ProviderName%2A> -Eigenschaftensatz auf die <xref:System.Configuration.Provider.ProviderBase.Name%2A> des Standardrollenanbieters.  
  
 Informationen zum Aktivieren der Rollenverwaltung finden Sie unter der <xref:System.Web.Security.Roles> Klasse.  
  
   
  
## Examples  
 Das folgende Codebeispiel erstellt ein neues <xref:System.Web.Security.RolePrincipal> Objekt. Wenn <xref:System.Web.Security.Roles.CacheRolesInCookie%2A> ist `true`, das Beispiel erstellt die <xref:System.Web.Security.RolePrincipal> mit Cookie-Informationen aus dem Cookie durch die <xref:System.Web.Security.Roles.CookieName%2A> Eigenschaft.  
  
 [!code-csharp[System.Web.Security.RolePrincipal#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/snippetscs.aspx#2)]
 [!code-vb[System.Web.Security.RolePrincipal#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/snippetsvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="identity" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected RolePrincipal (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; RolePrincipal(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Das mit Daten aufzufüllende <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Objekt.</param>
        <param name="context">Das Ziel dieser Serialisierung.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Security.RolePrincipal" />-Klasse mithilfe der Informationen, die im angegebenen <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Objekt enthalten sind, und des angegebenen Streamingkontexts.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RolePrincipal (System.Security.Principal.IIdentity identity, string encryptedTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IIdentity identity, string encryptedTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.#ctor(System.Security.Principal.IIdentity,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As IIdentity, encryptedTicket As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RolePrincipal(System::Security::Principal::IIdentity ^ identity, System::String ^ encryptedTicket);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IIdentity" />
        <Parameter Name="encryptedTicket" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="identity">Die Benutzeridentität, für die <see cref="T:System.Web.Security.RolePrincipal" /> erstellt werden soll.</param>
        <param name="encryptedTicket">Eine Zeichenfolge, die verschlüsselte Rolleninformationen enthält.</param>
        <summary>Instanziiert ein <see cref="T:System.Web.Security.RolePrincipal" />-Objekt für die angegebene <paramref name="identity" /> mit Rolleninformationen aus dem angegebenen <paramref name="encryptedTicket" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Überladung von der <xref:System.Web.Security.RolePrincipal.%23ctor%2A> Konstruktor erstellt ein neues <xref:System.Web.Security.RolePrincipal> -Objekt und initialisiert die Eigenschaftswerte. Rolleninformationen für den aktuellen Benutzer zu lesen aus dem bereitgestellten `encryptedTicket` und zwischengespeicherte mit der <xref:System.Web.Security.RolePrincipal> Objekt. Die <xref:System.Web.Security.RolePrincipal.ProviderName%2A> -Eigenschaftensatz auf die <xref:System.Configuration.Provider.ProviderBase.Name%2A> des Standardrollenanbieters.  
  
 Informationen zum Aktivieren der Rollenverwaltung finden Sie unter der <xref:System.Web.Security.Roles> Klasse.  
  
   
  
## Examples  
 Das folgende Codebeispiel erstellt ein neues <xref:System.Web.Security.RolePrincipal> Objekt. Wenn <xref:System.Web.Security.Roles.CacheRolesInCookie%2A> ist `true`, das Beispiel erstellt die <xref:System.Web.Security.RolePrincipal> mit Cookie-Informationen aus dem Cookie durch die <xref:System.Web.Security.Roles.CookieName%2A> Eigenschaft.  
  
 [!code-csharp[System.Web.Security.RolePrincipal#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/snippetscs.aspx#2)]
 [!code-vb[System.Web.Security.RolePrincipal#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/snippetsvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="identity" /> ist <see langword="null" />.  
  
 - oder -   
  
 <paramref name="encryptedTicket" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RolePrincipal (string providerName, System.Security.Principal.IIdentity identity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string providerName, class System.Security.Principal.IIdentity identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.#ctor(System.String,System.Security.Principal.IIdentity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (providerName As String, identity As IIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RolePrincipal(System::String ^ providerName, System::Security::Principal::IIdentity ^ identity);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerName" Type="System.String" />
        <Parameter Name="identity" Type="System.Security.Principal.IIdentity" />
      </Parameters>
      <Docs>
        <param name="providerName">Der Name des Rollenanbieters für den Benutzer.</param>
        <param name="identity">Die Benutzeridentität, für die <see cref="T:System.Web.Security.RolePrincipal" /> erstellt werden soll.</param>
        <summary>Instanziiert ein <see cref="T:System.Web.Security.RolePrincipal" />-Objekt für die angegebene <paramref name="identity" /> mit dem angegebenen <paramref name="providerName" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Überladung von der <xref:System.Web.Security.RolePrincipal.%23ctor%2A> Konstruktor erstellt ein neues <xref:System.Web.Security.RolePrincipal> -Objekt und initialisiert die Eigenschaftswerte. Die <xref:System.Web.Security.RolePrincipal.ProviderName%2A> Eigenschaftensatz ist der Wert in der `providerName` Parameter.  
  
 Informationen zum Aktivieren der Rollenverwaltung finden Sie unter der <xref:System.Web.Security.Roles> Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="identity" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="providerName" /> ist <see langword="null" />.  
  
 - oder -   
  
 <paramref name="providerName" /> verweist auf einen Rollenanbieter, der in der Konfiguration für die Anwendung nicht vorhanden ist.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RolePrincipal (string providerName, System.Security.Principal.IIdentity identity, string encryptedTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string providerName, class System.Security.Principal.IIdentity identity, string encryptedTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.#ctor(System.String,System.Security.Principal.IIdentity,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (providerName As String, identity As IIdentity, encryptedTicket As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RolePrincipal(System::String ^ providerName, System::Security::Principal::IIdentity ^ identity, System::String ^ encryptedTicket);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerName" Type="System.String" />
        <Parameter Name="identity" Type="System.Security.Principal.IIdentity" />
        <Parameter Name="encryptedTicket" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="providerName">Der Name des Rollenanbieters für den Benutzer.</param>
        <param name="identity">Die Benutzeridentität, für die <see cref="T:System.Web.Security.RolePrincipal" /> erstellt werden soll.</param>
        <param name="encryptedTicket">Eine Zeichenfolge, die verschlüsselte Rolleninformationen enthält.</param>
        <summary>Instanziiert ein <see cref="T:System.Web.Security.RolePrincipal" />-Objekt für die angegebene <paramref name="identity" /> mit dem angegebenen <paramref name="providerName" /> und den Rolleninformationen aus dem angegebenen <paramref name="encryptedTicket" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Überladung von der <xref:System.Web.Security.RolePrincipal.%23ctor%2A> Konstruktor erstellt ein neues <xref:System.Web.Security.RolePrincipal> -Objekt und initialisiert die Eigenschaftswerte. Rolleninformationen für den aktuellen Benutzer zu lesen aus dem bereitgestellten `encryptedTicket` und zwischengespeicherte mit der <xref:System.Web.Security.RolePrincipal> Objekt. Die <xref:System.Web.Security.RolePrincipal.ProviderName%2A> Eigenschaftensatz ist der Wert in der `providerName` Parameter.  
  
 Informationen zum Aktivieren der Rollenverwaltung finden Sie unter der <xref:System.Web.Security.Roles> Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="identity" /> ist <see langword="null" />.  
  
 - oder -   
  
 <paramref name="encryptedTicket" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="providerName" /> ist <see langword="null" />.  
  
 - oder -   
  
 <paramref name="providerName" /> verweist auf einen Rollenanbieter, der in der Konfiguration für die Anwendung nicht vorhanden ist.</exception>
      </Docs>
    </Member>
    <Member MemberName="CachedListChanged">
      <MemberSignature Language="C#" Value="public bool CachedListChanged { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CachedListChanged" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RolePrincipal.CachedListChanged" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CachedListChanged As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CachedListChanged { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die im <see cref="T:System.Web.Security.RolePrincipal" />-Objekt zwischengespeicherte Liste von Rollennamen geändert wurde.</summary>
        <value>
          <see langword="true" />, wenn die Liste der im <see cref="T:System.Web.Security.RolePrincipal" />-Objekt zwischengespeicherten Rollennamen geändert wurde, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.RolePrincipal.CachedListChanged%2A> Eigenschaft zurück `true` nach Rollennamen, aus denen aus die Standardrolle abgerufen wurden <xref:System.Web.Security.Roles.Provider%2A> und dem Cache durch hinzugefügt der <xref:System.Web.Security.RolePrincipal.GetRoles%2A> -Methode, oder wenn die <xref:System.Web.Security.RolePrincipal.IsInRole%2A> Methodenaufrufe der <xref:System.Web.Security.RoleProvider.IsUserInRole%2A> Methode von der Standard Rollenanbieter und empfängt dann eine Antwort von `true`, den Rollennamen übergeben wodurch die <xref:System.Web.Security.RolePrincipal.IsInRole%2A> Methode, die dem Cache hinzugefügt wird.  
  
 Die <xref:System.Web.Security.RolePrincipal.CachedListChanged%2A> Eigenschaft gibt auch "true" zurück, wenn <xref:System.Web.Security.Roles.CookieSlidingExpiration%2A> festgelegt ist, um `true` und die <xref:System.Web.Security.RolePrincipal.ExpireDate%2A> überschritten wurde, sodass in einem neuen <xref:System.Web.Security.RolePrincipal.ExpireDate%2A> festgelegt wird.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt Rollencache Informationen für den aktuellen Benutzer auf, wenn Rollenverwaltung aktiviert ist. Informationen zum Aktivieren der Rollenverwaltung finden Sie unter der <xref:System.Web.Security.Roles> Klasse.  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/getroleinfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/getroleinfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CookiePath">
      <MemberSignature Language="C#" Value="public string CookiePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CookiePath" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RolePrincipal.CookiePath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CookiePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CookiePath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Pfad für das Cookie mit den zwischengespeicherten Rollennamen ab.</summary>
        <value>Der Pfad des Cookies, in dem Rollennamen zwischengespeichert werden. Der Standardwert ist /.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.RolePrincipal.CookiePath%2A> Eigenschaft gibt den Wert der `cookiePath` Attribut aus der Datei "Web.config", damit Ihre ASP.NET-Anwendung. Weitere Informationen zu Cookies finden Sie unter <xref:System.Web.HttpCookie.Path%2A>.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt Rollencache Informationen für den aktuellen Benutzer auf, wenn Rollenverwaltung aktiviert ist. Informationen zum Aktivieren der Rollenverwaltung finden Sie unter der <xref:System.Web.Security.Roles> Klasse.  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/getroleinfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/getroleinfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Expired">
      <MemberSignature Language="C#" Value="public bool Expired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Expired" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RolePrincipal.Expired" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Expired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Expired { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Gültigkeit des Rollencookies abgelaufen ist.</summary>
        <value>
          <see langword="true" />, wenn die Gültigkeit des Rollencookies abgelaufen ist, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.RolePrincipal.Expired%2A> Eigenschaft gibt eine `Boolean` Wert, der angibt, ob die Rollencookies abgelaufen ist, basierend auf den <xref:System.Web.Security.RolePrincipal.ExpireDate%2A> und das aktuelle Datum und die Uhrzeit.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt Rollencache Informationen für den aktuellen Benutzer auf, wenn Rollenverwaltung aktiviert ist. Informationen zum Aktivieren der Rollenverwaltung finden Sie unter der <xref:System.Web.Security.Roles> Klasse.  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/getroleinfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/getroleinfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpireDate">
      <MemberSignature Language="C#" Value="public DateTime ExpireDate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ExpireDate" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RolePrincipal.ExpireDate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExpireDate As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime ExpireDate { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft Datum und Uhrzeit für den Ablauf der Gültigkeit des Rollencookies ab.</summary>
        <value>Der <see cref="T:System.DateTime" />-Wert für den Ablauf der Gültigkeit des Rollencookies.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Beispiel zeigt Rollencache Informationen für den aktuellen Benutzer auf, wenn Rollenverwaltung aktiviert ist. Informationen zum Aktivieren der Rollenverwaltung finden Sie unter der <xref:System.Web.Security.Roles> Klasse.  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/getroleinfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/getroleinfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Das mit Daten aufzufüllende <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Objekt.</param>
        <param name="context">Das Ziel dieser Serialisierung.</param>
        <summary>Füllt ein <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Objekt mit den Daten aus, die zur Serialisierung des Zielobjekts mithilfe des angegebenen Streamingkontexts erforderlich sind.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen finden Sie unter der Methode <xref:System.Runtime.Serialization.ISerializable.GetObjectData%28System.Runtime.Serialization.SerializationInfo%2CSystem.Runtime.Serialization.StreamingContext%29>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRoles">
      <MemberSignature Language="C#" Value="public string[] GetRoles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetRoles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.GetRoles" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRoles () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetRoles();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft eine Liste der Rollen ab, denen <see cref="T:System.Web.Security.RolePrincipal" /> als Member angehört.</summary>
        <returns>Die Liste der Rollen, denen <see cref="T:System.Web.Security.RolePrincipal" /> als Member angehört.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn <xref:System.Web.Security.Roles.CacheRolesInCookie%2A> ist `true` und für den Benutzer, dargestellt durch Rollennamen zwischengespeichert wurden die <xref:System.Web.Security.RolePrincipal>, und klicken Sie dann die <xref:System.Web.Security.RolePrincipal.GetRoles%2A> Methode wird die Liste von Rollennamen zurück, in den Cache, die der Benutzer Mitglied ist. Wenn Rollennamen, aus denen nicht zwischengespeichert wurden, und klicken Sie dann die <xref:System.Web.Security.RolePrincipal.GetRoles%2A> Methode gibt eine Liste der Rollennamen, aus denen der Benutzer ein Mitglied aus der Rolle "Standard" ist <xref:System.Web.Security.Roles.Provider%2A>. Nur die Rollennamen für den aktuellen <xref:System.Web.Security.Roles.ApplicationName%2A> werden zurückgegeben. Um festzustellen, ob im Rollennamen zwischengespeichert wurden die <xref:System.Web.Security.RolePrincipal> Objekt aktivieren die <xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A> Eigenschaft.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt die Rollen, denen der angemeldete Benutzer Mitglied ist.  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/GetRolescs.aspx#7)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/GetRolesvb.aspx#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">Die <see cref="P:System.Web.Security.RolePrincipal.Identity" />-Eigenschaft ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Identity">
      <MemberSignature Language="C#" Value="public override System.Security.Principal.IIdentity Identity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IIdentity Identity" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RolePrincipal.Identity" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Identity As IIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Principal::IIdentity ^ Identity { System::Security::Principal::IIdentity ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Sicherheitsidentität für die aktuelle HTTP-Anforderung ab.</summary>
        <value>Die Sicherheitsidentität für die aktuelle HTTP-Anforderung.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.RolePrincipal.Identity%2A> von einer <xref:System.Web.Security.RolePrincipal> Objekt wird festgelegt, wenn die <xref:System.Web.Security.RolePrincipal> Konstruktor aufgerufen wird.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt Rollencache Informationen für den aktuellen Benutzer auf, wenn Rollenverwaltung aktiviert ist. Informationen zum Aktivieren der Rollenverwaltung finden Sie unter der <xref:System.Web.Security.Roles> Klasse.  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/getroleinfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/getroleinfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInRole">
      <MemberSignature Language="C#" Value="public override bool IsInRole (string role);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsInRole(string role) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.IsInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsInRole (role As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsInRole(System::String ^ role);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="role">Die zu suchende Rolle.</param>
        <summary>Ruft einen Wert ab, der angibt, ob der durch <see cref="T:System.Web.Security.RolePrincipal" /> dargestellte Benutzer die angegebene Rolle innehat.</summary>
        <returns>
          <see langword="true" />, wenn der durch <see cref="T:System.Web.Security.RolePrincipal" /> dargestellte Benutzer die angegebene Rolle innehat, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RolePrincipal.IsInRole%2A> überprüft zunächst die <xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A> -Eigenschaft können Sie bestimmen, ob eine zwischengespeicherte Liste von Rollennamen für den aktuellen Benutzer verfügbar ist. Wenn die <xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A> Eigenschaft ist `true`, die zwischengespeicherte Liste für die angegebene Rolle aktiviert ist. Wenn die <xref:System.Web.Security.RolePrincipal.IsInRole%2A> -Methode sucht die angegebene Rolle in der zwischengespeicherten Liste, gibt es `true`.  
  
 Wenn <xref:System.Web.Security.RolePrincipal.IsInRole%2A> findet nicht die angegebene Rolle ruft er die <xref:System.Web.Security.RoleProvider.GetRolesForUser%2A> Methode des Standardwerts <xref:System.Web.Security.Roles.Provider%2A> Instanz zu bestimmen, ob der Benutzername einer Rolle aus der Datenquelle für die konfigurierte zugeordnet ist <xref:System.Web.Security.Roles.ApplicationName%2A> Wert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird überprüft, ob der angemeldete Benutzer in der "Administratoren" ist, bevor der Benutzer zu Benutzerrollen anzuzeigen.  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/ViewRolescs.aspx#8)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/ViewRolesvb.aspx#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">Die <see cref="P:System.Web.Security.RolePrincipal.Identity" />-Eigenschaft ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsRoleListCached">
      <MemberSignature Language="C#" Value="public bool IsRoleListCached { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRoleListCached" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RolePrincipal.IsRoleListCached" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRoleListCached As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRoleListCached { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Liste der Rollen für den Benutzer in einem Cookie zwischengespeichert wird.</summary>
        <value>
          <see langword="true" />, wenn Rollennamen in einem Cookie zwischengespeichert werden, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die `cacheRolesInCookie` -Attribut in der Datei "Web.config" für die Anwendung den Wert `true`, und klicken Sie dann eine Liste von Rollennamen für den aktuellen Benutzer auf ein Cookie geschrieben wird, wenn Benutzer die Mitgliedschaft in einer bestimmten Rolle aktiviert ist. Die <xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A> Eigenschaft gibt an, ob Rollennamen, aus denen das Cookie geschrieben wurden. Beachten Sie, dass, obwohl die `cacheRolesInCookie` Konfigurationsattribut möglicherweise `true`, die <xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A> Eigenschaft keinen zurückgibt `true` erst nach der das Cookie Rolleninformationen geschrieben wurde. Wenn keine Rolle überprüft wird, erfolgt für einen Benutzer <xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A> zurück `false`.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt Rollencache Informationen für den aktuellen Benutzer auf, wenn Rollenverwaltung aktiviert ist. Informationen zum Aktivieren der Rollenverwaltung finden Sie unter der <xref:System.Web.Security.Roles> Klasse.  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/getroleinfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/getroleinfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IssueDate">
      <MemberSignature Language="C#" Value="public DateTime IssueDate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime IssueDate" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RolePrincipal.IssueDate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IssueDate As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime IssueDate { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft Datum und Uhrzeit der Ausgabe des Rollencookies ab.</summary>
        <value>
          <see cref="T:System.DateTime" /> des Zeitpunkts, zu dem das Rollencookie ausgegeben wurde.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Beispiel zeigt Rollencache Informationen für den aktuellen Benutzer auf, wenn Rollenverwaltung aktiviert ist. Informationen zum Aktivieren der Rollenverwaltung finden Sie unter der <xref:System.Web.Security.Roles> Klasse.  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/getroleinfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/getroleinfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderName">
      <MemberSignature Language="C#" Value="public string ProviderName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProviderName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RolePrincipal.ProviderName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProviderName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProviderName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen des Rollenanbieters ab, der Rolleninformationen für den Benutzer speichert und abruft.</summary>
        <value>Der Name des Rollenanbieters, der Rolleninformationen für den Benutzer speichert und abruft.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.RolePrincipal.ProviderName%2A> Eigenschaft verfügbar macht, der Name des Rollenanbieters, der die Rolleninformationen für den Benutzer, dargestellt durch verwaltet die <xref:System.Web.Security.RolePrincipal> Objekt. Dadurch können Sie die bestimmten Rollenanbieter-Instanz für einen Benutzer mit Zugriff auf die <xref:System.Web.Security.Roles.Providers%2A> Eigenschaft von der <xref:System.Web.Security.Roles> Klasse unabhängig davon, ob der Anbieter den Standardanbieter für die Anwendung. Sie können z. B. erstellen, eine Methode, die eine <xref:System.Web.Security.RolePrincipal> als Eingabe und gibt die Liste der Rollen für den Benutzer dargestellt. Können Sie sicherstellen, dass der entsprechende Rollenanbieter verwendet wird, mit die Liste der Rollen für die <xref:System.Web.Security.RolePrincipal> durch Aufrufen der <xref:System.Web.Security.RoleProvider.GetRolesForUser%2A> Methode des Rollenanbieters aus der <xref:System.Web.Security.Roles.Providers%2A> Auflistung, die von indiziert ist die <xref:System.Web.Security.RolePrincipal.ProviderName%2A> Eigenschaftswert.  
  
 Zum Auffüllen der <xref:System.Web.Security.RolePrincipal> Objekt verwenden Sie für jede Anforderung eine <xref:System.Web.Security.RoleManagerModule.GetRoles> -Ereignishandler in der Datei "Global.asax" für die Anwendung definiert.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDirty">
      <MemberSignature Language="C#" Value="public void SetDirty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDirty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.SetDirty" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDirty ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDirty();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Kennzeichnet die zwischengespeicherte Rollenliste als geändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.RolePrincipal.SetDirty%2A> Methode kennzeichnet den zwischengespeicherten Rollennamen-Liste als geändert, indem Sie festlegen <xref:System.Web.Security.RolePrincipal.CachedListChanged%2A> auf `true` und <xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A> auf `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Die mit Daten zu füllende <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
        <param name="context">Das Ziel dieser Serialisierung.</param>
        <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Runtime.Serialization.ISerializationSurrogate.GetObjectData(System.Object,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.Security.RolePrincipal>-Instanz in eine <xref:System.Runtime.Serialization.ISerializable>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToEncryptedTicket">
      <MemberSignature Language="C#" Value="public string ToEncryptedTicket ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToEncryptedTicket() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.ToEncryptedTicket" />
      <MemberSignature Language="VB.NET" Value="Public Function ToEncryptedTicket () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToEncryptedTicket();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt die im <see cref="T:System.Web.Security.RolePrincipal" />-Objekt zwischengespeicherten Rolleninformationen zurück, die auf der Grundlage von <see cref="P:System.Web.Security.Roles.CookieProtectionValue" /> verschlüsselt wurden.</summary>
        <returns>Die im <see cref="T:System.Web.Security.RolePrincipal" />-Objekt zwischengespeicherten Rolleninformationen, die auf der Grundlage von <see cref="P:System.Web.Security.Roles.CookieProtectionValue" /> verschlüsselt wurden.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der zurückgegebene Wert der <xref:System.Web.Security.RolePrincipal.ToEncryptedTicket%2A> Methode befindet sich in der Rollencookies beim <xref:System.Web.Security.Roles.CacheRolesInCookie%2A> ist `true`.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird schreibt die Ergebnisse der <xref:System.Web.Security.RolePrincipal.ToEncryptedTicket%2A> aufzurufende Methode des Rollencookies.  
  
 [!code-csharp[System.Web.Security.RolePrincipal#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/snippetscs.aspx#6)]
 [!code-vb[System.Web.Security.RolePrincipal#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/snippetsvb.aspx#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public int Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Version" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RolePrincipal.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Version { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Versionsnummer des Rollencookies ab.</summary>
        <value>Die Versionsnummer des Rollencookies.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Versionsnummer in des Rollencookies einschließen, zukünftige Versionen von ASP.NET können das Format des Rollencookies ändern und die <xref:System.Web.Security.RolePrincipal.Version%2A> Eigenschaft, um die Unterscheidung zwischen verschiedenen Formaten.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt Rollencache Informationen für den aktuellen Benutzer auf, wenn Rollenverwaltung aktiviert ist. Informationen zum Aktivieren der Rollenverwaltung finden Sie unter der <xref:System.Web.Security.Roles> Klasse.  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/getroleinfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/getroleinfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>