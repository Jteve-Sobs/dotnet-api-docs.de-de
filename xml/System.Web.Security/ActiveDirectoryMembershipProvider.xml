<Type Name="ActiveDirectoryMembershipProvider" FullName="System.Web.Security.ActiveDirectoryMembershipProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="89ac1e5c7eade7a4a3173dd20d8e21f4f34ab1e6" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36398870" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ActiveDirectoryMembershipProvider : System.Web.Security.MembershipProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ActiveDirectoryMembershipProvider extends System.Web.Security.MembershipProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.ActiveDirectoryMembershipProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class ActiveDirectoryMembershipProvider&#xA;Inherits MembershipProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class ActiveDirectoryMembershipProvider : System::Web::Security::MembershipProvider" />
  <TypeSignature Language="F#" Value="type ActiveDirectoryMembershipProvider = class&#xA;    inherit MembershipProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Security.MembershipProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Manages storage of membership information for an ASP.NET application in Active Directory and Active Directory Application Mode servers.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Klasse wird verwendet, durch die <xref:System.Web.Security.Membership> und <xref:System.Web.Security.MembershipUser> Klassen um Mitgliedschaftsdienste für eine ASP.NET-Anwendung mit einem Active Directory (AD) oder Active Directory Application Mode (ADAM)-Server bereitzustellen.  
  
> [!NOTE]
>  Mit einem ADAM-Server ist die spezifische Konfiguration erforderlich. Weitere Informationen finden Sie unten im Abschnitt ADAM-Konfiguration.  
  
> [!IMPORTANT]
>  Die <xref:System.Web.Security.ActiveDirectoryMembershipProvider> Instanz funktioniert nur in der Richtlinie für volle Vertrauenswürdigkeit-Standardkonfiguration von ASP.NET. Zum Verwenden der <xref:System.Web.Security.ActiveDirectoryMembershipProvider> Instanz auf jeder Ebene teilweise vertrauenswürdigen entweder, müssen Sie Änderungen an die entsprechende Vertrauensstellung Richtliniendatei für Ihre Anwendung vornehmen, oder müssen Sie eine "Sandkasten"-Assembly, die bereitgestellt wird im globalen Assemblycache erstellen.  
>   
>  Die <xref:System.Web.Security.ActiveDirectoryMembershipProvider> Klasse benötigt uneingeschränkten <xref:System.DirectoryServices.DirectoryServicesPermission> Berechtigung zum Ausführen. Durch diese Berechtigung wird nicht von der Richtlinie mit teilweiser Vertrauenswürdigkeit mit ASP.NET bereitgestellten Dateien eingefügt. Obwohl durch Hinzufügen der <xref:System.DirectoryServices.DirectoryServicesPermission> Berechtigungen für eine Richtlinie mit teilweiser Vertrauenswürdigkeit Datei ermöglicht die Verwendung von der <xref:System.Web.Security.ActiveDirectoryMembershipProvider> Klasse, die auf diese Weise ermöglicht die <xref:System.DirectoryServices> Namespaceklassen verfügbar zu jedem Code in Ihre ASP.NET-Seiten ausgeführt wird. Diese Option ist nicht für alle Webserver empfohlen, die in einem sicheren, gesperrtes-Modus ausführen müssen.  
>   
>  Als Alternative können Sie eine "Sandkasten" Assembly erstellen, ruft der <xref:System.Web.Security.ActiveDirectoryMembershipProvider> Klasse. Diese Assembly kann entweder eine Wrapperklasse, die leitet Methodenaufrufe enthalten die <xref:System.Web.Security.ActiveDirectoryMembershipProvider> Klasse oder eine Klasse, abgeleitet wird, die <xref:System.Web.Security.ActiveDirectoryMembershipProvider> Klasse. In beiden Fällen muss die Wrapperklasse zusichern uneingeschränkten <xref:System.DirectoryServices.DirectoryServicesPermission> Berechtigung. Die Sandkasten-Assembly im globalen Assemblycache bereitzustellen, und markieren Sie die Assembly mit dem <xref:System.Security.AllowPartiallyTrustedCallersAttribute> -Attribut (APTCA). Dadurch kann die teilweise vertrauenswürdige ASP.NET-Code die Wrapperklasse aufrufen, und da die Wrapperklasse intern die uneingeschränkte bestätigt <xref:System.DirectoryServices.DirectoryServicesPermission> Berechtigung, die Wrapperklasse zeilenfilterausdruck aufrufen  
  
 Müssen Sie erstellen eine [ConnectionStrings-Element ((ASP.NET Settings Schema)](http://msdn.microsoft.com/library/b6ffbb2e-a4d1-410e-8f7e-9755e92c65de) Eintrag in der Datei "Web.config", die die Active Directory-Server, Active Directory-Domäne oder zu verwendende ADAM-Anwendungspartition identifiziert. Der Anbieter wird nur am Domänenbereich oder in einem Unterbereich innerhalb einer Domäne ausgeführt werden. Die folgende Tabelle enthält Verbindungszeichenfolgen zulässig, und den verwendeten Umfang.  
  
|Verbindungszeichenfolge|Bereich|  
|-----------------------|-----------|  
|LDAP: / /\<Domäne oder des Servers >: [Port]<br /><br /> Portnummer ist optional für ADAM und nicht für Active Directory erforderlich.|Der Anbieter anhand der angegebenen Domäne oder Server ausgeführt wird. Bei AD Benutzer erstellen und Löschen erfolgt in Container "Benutzer" die Standardeinstellung. Alle anderen Vorgänge, einschließlich Suchmethoden, werden an den Standardnamenskontext für die Domäne Rooting manipuliert werden.<br /><br /> Wenn die Verbindungszeichenfolge gibt an, Active Directory-Domäne anstatt von einem bestimmten Server und die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnablePasswordReset%2A> Eigenschaft ist `true`, die <xref:System.Web.Security.ActiveDirectoryMembershipProvider> Instanz wird stets eine Verbindung mit dem Server mit Rolle als PDC für die Domäne, um sicherzustellen, dass das Kennwort Änderungen werden wirksam, und sind verfügbar, wenn die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.ValidateUser%2A> -Methode aufgerufen wird.<br /><br /> Diese Verbindungszeichenfolge ist nicht zulässig, wenn mithilfe von ADAM und löst eine <xref:System.NotSupportedException>.|  
|LDAP: / /\<Domäne oder des Servers >: [Port] /\<Container dn ><br /><br /> Portnummer ist optional für ADAM und nicht für Active Directory erforderlich.|Der Anbieter anhand der angegebenen Domäne oder Server ausgeführt wird. Benutzer erstellen und Löschen erfolgt nur im angegebenen Container. Alle anderen Vorgänge, einschließlich Suchmethoden, führen Teilstruktur-Suchvorgänge, die dem Container als Stamm aufweisen.<br /><br /> ADAM-Server gibt den Container den Stamm einer Anwendungspartition oder einen Container innerhalb einer Anwendungspartition.<br /><br /> Es wird empfohlen, dass die Verbindungszeichenfolge zu einen bestimmten Container zum Verbessern der Leistung definieren.|  
  
 Die <xref:System.Web.Security.ActiveDirectoryMembershipProvider> Instanz zugeordnet ist, Verzeichnisattribute zu <xref:System.Web.Security.ActiveDirectoryMembershipUser> Eigenschaften. Standardattribute werden verwendet, wenn das Attribut in der Datei "Web.config" Iden nicht zugeordnet ist. Weitere Informationen zu attributzuordnungen, finden Sie unter den einzelnen Eigenschaften in der <xref:System.Web.Security.ActiveDirectoryMembershipUser> -Klasse Dokumentation.  
  
 Die folgende Tabelle enthält die <xref:System.Web.Security.ActiveDirectoryMembershipUser> Eigenschaften und ihre Standardwerte-Attribut Zuordnungen.  
  
> [!IMPORTANT]
>  Die <xref:System.Web.Security.ActiveDirectoryMembershipProvider> -Klasse überprüft nicht explizit, dass Anbieterattribute Core-Attribute des Benutzerobjekts im Verzeichnis nicht zugeordnet werden. Sie müssen sicherstellen, dass vertrauliche Informationen aus dem Verzeichnis nicht über zugeordnete Attribute verfügbar gemacht wird.  
  
|Eigenschaft|Standard-Directory-Attribut|Kann werden zugeordnet?|  
|--------------|---------------------------------|--------------------|  
|<xref:System.Web.Security.ActiveDirectoryMembershipUser.ProviderUserKey%2A>|securityIdentifier|Nein|  
|<xref:System.Web.Security.MembershipUser.UserName%2A>|userPrincipalName|Ja, aber muss entweder "userPrincipalName" oder "sAMAccountName"|  
|<xref:System.Web.Security.ActiveDirectoryMembershipUser.Comment%2A>|Kommentar|Nein|  
|<xref:System.Web.Security.MembershipUser.CreationDate%2A>|whenCreated|Nein|  
|<xref:System.Web.Security.ActiveDirectoryMembershipUser.Email%2A>|Mail|Ja, allerdings muss ein einwertiges Attribut vom Typ Unicode-Zeichenfolge sein.|  
|<xref:System.Web.Security.ActiveDirectoryMembershipUser.LastActivityDate%2A>|n/v|Nicht unterstützt, indem Sie <xref:System.Web.Security.ActiveDirectoryMembershipProvider>.|  
|<xref:System.Web.Security.ActiveDirectoryMembershipUser.LastLoginDate%2A>|n/v|Nicht unterstützt, indem Sie <xref:System.Web.Security.ActiveDirectoryMembershipProvider>.|  
|<xref:System.Web.Security.MembershipUser.LastPasswordChangedDate%2A>|"pwdLastSet"|Nein|  
|<xref:System.Web.Security.MembershipUser.PasswordQuestion%2A>|Keine|Ja, allerdings muss ein einwertiges Attribut vom Typ Unicode-Zeichenfolge sein.|  
|<xref:System.Web.Security.ActiveDirectoryMembershipUser.IsApproved%2A>|Benutzerkontensteuerung (AD)<br /><br /> mDS-UserAccountDisabled (ADAM)|Nein|  
|<xref:System.Web.Security.MembershipUser.IsLockedOut%2A>|berechnet aus LockoutTime und der AD-Sperrdauer (AD unter Windows 2000)<br /><br /> MsDS-User-Account-Steuerelement berechnet (AD unter Windows Server 2003)<br /><br /> MsDS-User-Account-Steuerelement berechnet (ADAM)|Nein|  
|<xref:System.Web.Security.MembershipUser.LastLockoutDate%2A>|Wenn Benutzer aufgrund von zu viele ungültige Kennwortversuche gesperrt ist, wird die Sperre Zeit-Attribut zurückgegeben.<br /><br /> Wenn Benutzer aufgrund von zu viele fehlerhafte Kennwortantwort gesperrt wird versucht, die in durch definierte Attribut gespeicherten Wert `attributeMapFailedPasswordAnswerLockoutTime` zurückgegeben.<br /><br /> Wenn der Benutzer gesperrt wird, sowohl ein falsches Kennwort und zu viele ungültige Kennwortversuche, die aufgrund der neuesten Datum/Uhrzeit-Wert wird zurückgegeben.<br /><br /> Wenn das Konto nicht gesperrt ist, geben Sie 1/1/1754 für SQL-Kompatibilität zurück.|Nein|  
  
 Wenn sowohl die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.RequiresQuestionAndAnswer%2A> und <xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnablePasswordReset%2A> Eigenschaften sind `true`die <xref:System.Web.Security.ActiveDirectoryMembershipProvider> Klasse unterstützt das Zurücksetzen des Kennworts Sicherheit durch, da der Benutzer in einer vorherbestimmten Frage zu beantworten. Um die Frage und die Antwort zu unterstützen, müssen Sie festlegen, die folgenden Konfigurationsattribute, die über die [add-Element für den Anbieter für die Mitgliedschaft ((ASP.NET Settings Schema)](http://msdn.microsoft.com/library/8423ec7f-a06d-4606-977e-a46400b2fc18) in der Anwendungskonfigurationsdatei.  
  
|Konfigurationsattribut|Attributtyp|  
|-----------------------------|--------------------|  
|`attributeMapPasswordQuestion`|Ein einwertiges Attribut vom Typ Unicode-Zeichenfolge muss sein.|  
|`attributeMapPasswordAnswer`|Ein einwertiges Attribut vom Typ Unicode-Zeichenfolge muss sein.|  
|`attributeMapFailedPasswordAnswerCount`|Ein einwertiges Attribut vom Typ ganze Zahl muss sein.|  
|`attributeMapFailedPasswordAnswerTime`|Muss ein einwertiges Attribut vom Typ große ganze Zahl/Intervall.|  
|`attributeMapFailedPasswordAnswerLockoutTime`|Muss ein einwertiges Attribut vom Typ große ganze Zahl/Intervall.|  
  
 Weitere Informationen zum Zurücksetzen des Kennworts Sicherheit verwenden, finden Sie unter der <xref:System.Web.Security.ActiveDirectoryMembershipProvider.RequiresQuestionAndAnswer%2A> Eigenschaft.  
  
## <a name="active-directory-connections"></a>Active Directory-Verbindungen  
 Wenn die <xref:System.Web.Security.ActiveDirectoryMembershipProvider> Klasse wird verwendet, um die Verbindung mit einer Active Directory oder ein Active Directory Application Mode (ADAM)-Server, der `connectionProtection` -Attribut, das festgelegt wird, wobei die [add-Element für den Anbieter für die Mitgliedschaft ((ASP.NET Settings Schema) ](http://msdn.microsoft.com/library/8423ec7f-a06d-4606-977e-a46400b2fc18) in der Anwendungskonfiguration Datei kann die Vorgangstypen Einschränken der <xref:System.Web.Security.ActiveDirectoryMembershipProvider> Klasse über die Verbindung durchführen kann. Die `connectionProtection` Attribut bestimmt auch die Methoden der <xref:System.Web.Security.ActiveDirectoryMembershipProvider> Instanz verwendet, um die Verbindung mit dem Active Directory- oder ADAM-Server erstellen.  
  
 Die folgende Tabelle zeigt die Auswirkung der `connectionProtection` Attribut, wenn eine Verbindung mit einem Active Directory herstellen.  
  
|`connectionProtection`-Einstellung|Effekt|  
|------------------------------------|------------|  
|<xref:System.Web.Security.ActiveDirectoryConnectionProtection.None>|Die <xref:System.Web.Security.ActiveDirectoryMembershipProvider> Klasse wird mit einer Active Directory mit diesen Einschränkungen verbinden.<br /><br /> – Beliebige Methode, die ein Kennwort festgelegt, schlägt fehl. Active Directory erfordert eine sichere Verbindung beim Ändern von Kennwörtern.<br />– Sie müssen explizit festlegen, die `connectionUsername` und `connectionPassword` Benutzerattribute mithilfe der [add-Element für den Anbieter für die Mitgliedschaft ((ASP.NET Settings Schema)](http://msdn.microsoft.com/library/8423ec7f-a06d-4606-977e-a46400b2fc18) in der Anwendungskonfigurationsdatei; andernfalls die <xref:System.Web.Security.ActiveDirectoryMembershipProvider> Instanz löst eine <xref:System.Configuration.Provider.ProviderException> Ausnahme.|  
|`Secure`|Die <xref:System.Web.Security.ActiveDirectoryMembershipProvider> -Klasse versucht, eine Verbindung mit Active Directory mithilfe von SSL. Wenn SSL ein Fehler auftritt, wird ein zweiter Versuch unternommen, für die Verbindung zu Active Directory mithilfe von signieren und versiegeln vorgenommen werden. Wenn beide Versuche fehlschlagen, die <xref:System.Web.Security.ActiveDirectoryMembershipProvider> Instanz löst eine <xref:System.Configuration.Provider.ProviderException> Ausnahme.<br /><br /> Anmeldeinformationen des Prozesses und explizite Anmeldeinformationen werden unterstützt.|  
  
 Die folgende Tabelle zeigt die Auswirkung der `connectionProtection` Attribut, wenn eine Verbindung mit einem ADAM-Server herstellen.  
  
|`connectionProtection`-Einstellung|Effekt|  
|------------------------------------|------------|  
|<xref:System.Web.Security.ActiveDirectoryConnectionProtection.None>|Die <xref:System.Web.Security.ActiveDirectoryMembershipProvider> Klasse wird mit einem ADAM-Server mit dieser Einschränkung verbinden.<br /><br /> – Beliebige Methode, die Kennwörter legt schlägt fehl, es sei denn, Sie explizit Konfigurieren des ADAM-Servers zum Zulassen von Kennwörtern gesendet und über eine unsichere Verbindung geändert werden.<br /><br /> Anmeldeinformationen des Prozesses und explizite Anmeldeinformationen werden unterstützt.|  
|`Secure`|Die <xref:System.Web.Security.ActiveDirectoryMembershipProvider> -Klasse versucht, mit dem ADAM-Server mithilfe von SSL hergestellt. Wenn keine Verbindung hergestellt werden kann, die <xref:System.Web.Security.ActiveDirectoryMembershipProvider> Instanz löst eine <xref:System.Configuration.Provider.ProviderException> Ausnahme.<br /><br /> Anmeldeinformationen des Prozesses und explizite Anmeldeinformationen werden unterstützt.|  
  
## <a name="adam-configuration"></a>ADAM-Konfiguration  
 Wenn Sie einen ADAM-Server zu verwenden, darf der ADAM-Instanz ein Schema, das definiert die `User` Klasse. Sie importieren können die `User` Klasse mit einer LDIF-Import, der die `MS-User.ldf` Datei im Installationsverzeichnis ADAM verfügbar.  
  
 Die <xref:System.Web.Security.ActiveDirectoryMembershipProvider> Klasse funktioniert mit einem ADAM-Server so konfiguriert, dass die Standardports für das Netzwerk verwenden. Die folgende Tabelle zeigt die Standardwerte für den Server ADAM erwartet.  
  
|ConnectionProtection-Einstellung|Erwartete ADAM-port|  
|----------------------------------|------------------------|  
|<xref:System.Web.Security.ActiveDirectoryConnectionProtection.None>|389|  
|`Secure`|636|  
  
 Wenn der ADAM-Server nicht die Standardports verwendet, finden Sie im Artikel Q817583, "Active Directory-Dienste ist nicht sichere Autorisierung anfordern über eine SSL-Verbindung" in der [Microsoft Knowledge Base](http://go.microsoft.com/fwlink/?linkid=37115).  
  
   
  
## Examples  
 Die folgenden Codebeispiele zeigen die Datei "Web.config" für eine ASP.NET-Anwendung für die Verwendung konfiguriert eine <xref:System.Web.Security.ActiveDirectoryMembershipProvider> Instanz. Im ersten Beispiel verwendet die standardzuordnungen für Active Directory-Attribute und Zurücksetzen des Kennworts Sicherheit mit der Frage und Antwort noch die Möglichkeit zum Aufrufen von Methoden nicht unterstützt. Das zweite Beispiel zeigt alle attributeinstellungen, die zulässig für eine <xref:System.Web.Security.ActiveDirectoryMembershipProvider> Instanz.  
  
 Im erste Beispiel wird eine einfache Konfigurationsdatei mithilfe von standardzuordnungen für Active Directory-Attribute.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="ADService" connectionString="LDAP://ldapServer/" />  
  </connectionStrings>  
  <system.web>  
    <membership defaultProvider="AspNetActiveDirectoryMembershipProvider">  
      <providers>  
        <add name="AspNetActiveDirectoryMembershipProvider"   
          type="System.Web.Security.ActiveDirectoryMembershipProvider,   
          System.Web, Version=2.0.3600, Culture=neutral,   
          PublicKeyToken=b03f5f7f11d50a3a" />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
 In diesem Beispiel werden alle die attributeinstellungen, die für eine Instanz von verfügbaren <xref:System.Web.Security.ActiveDirectoryMembershipProvider>.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="ADService" connectionString="LDAP://ldapServer/" />  
  </connectionStrings>  
  <system.web>  
    <membership  
      defaultProvider="AspNetActiveDirectoryMembershipProvider">  
      <providers>  
        <add name="AspNetActiveDirectoryMembershipProvider"  
          type="System.Web.Security.ActiveDirectoryMembershipProvider,  
          System.Web, Version=1.0.3600, Culture=neutral,  
          PublicKeyToken=b03f5f7f11d50a3a"  
          connectionStringName="ADService"  
          connectionUsername="UserWithAppropriateRights"  
          connectionPassword="PasswordForUser"  
          connectionProtection="Secure"  
          enablePasswordReset="true"  
          enableSearchMethods="true"  
          requiresQuestionAndAnswer="true"  
          applicationName="/"  
          description="Default AD connection"  
          requiresUniqueEmail="false"  
          clientSearchTimeout="30"  
          serverSearchTimeout="30"  
          timeoutUnit="Minutes"  
          attributeMapPasswordQuestion="department"  
          attributeMapPasswordAnswer="division"  
          attributeMapFailedPasswordAnswerCount="singleIntAttribute"  
         attributeMapFailedPasswordAnswerTime="singleLargeIntAttribute"  
         attributeMapFailedPasswordAnswerLockoutTime="singleLargeIntAttribute"  
          attributeMapEmail = "mail"  
          attributeMapUsername = "userPrincipalName"  
          maxInvalidPasswordAttempts = "5"  
          passwordAttemptWindow = "10"  
          passwordAnswerAttemptLockoutDuration = "30"  
          minRequiredPasswordLength="7"  
          minRequiredNonalphanumericCharacters="1"  
          passwordStrengthRegularExpression="  
          @\"(?=.{6,})(?=(.*\d){1,})(?=(.*\W){1,})" />  
        />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
 `clientSearchTimeout` und `serverSearchTimeout` standardmäßig Minuten. Um die Einheiten zu ändern, legen die `timeoutUnit` -Attributwert auf eine der "Days", "Hours", "Minutes", "Sekunden" oder "Millisekunden". Wenn das Attribut nicht angegeben wird, ist die Standardeinstellung "Minutes".  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActiveDirectoryMembershipProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.ActiveDirectoryMembershipProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ActiveDirectoryMembershipProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Creates a new instance of the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.ActiveDirectoryMembershipProvider> Konstruktor wird aufgerufen, von ASP.NET zum Erstellen einer Instanz von der <xref:System.Web.Security.ActiveDirectoryMembershipProvider> -Klasse entsprechend den Angaben in der Konfiguration für die Anwendung. Dieser Konstruktor ist nicht für die Verwendung aus dem Code vorgesehen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public override string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.ActiveDirectoryMembershipProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Web.Security.ActiveDirectoryMembershipProvider.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The name of the application using the custom membership provider.</summary>
        <value>Der Name der Anwendung, die den benutzerdefinierten Mitgliedschaftsanbieter verwendet.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.ApplicationName%2A> Eigenschaft kann festgelegt werden, auf den Namen der ASP.NET-Anwendung; den Namen der Anwendung wird jedoch nicht verwendet, durch die <xref:System.Web.Security.ActiveDirectoryMembershipProvider> Klasse.  
  
 Aus diesem Grund im Gegensatz zu anderen <xref:System.Web.Security.MembershipProvider> Implementierungen, sind alle ASP.NET-Anwendungen, dass der gleichen Active Directory-Datenspeicher immer die gleichen Daten zugreifen wird.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">An attempt was made to set the <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.ApplicationName" /> property.</exception>
        <exception cref="T:System.InvalidOperationException">An attempt to access the <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.ApplicationName" /> property was made before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance was initialized.</exception>
      </Docs>
    </Member>
    <Member MemberName="ChangePassword">
      <MemberSignature Language="C#" Value="public override bool ChangePassword (string username, string oldPassword, string newPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ChangePassword(string username, string oldPassword, string newPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.ActiveDirectoryMembershipProvider.ChangePassword(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ChangePassword (username As String, oldPassword As String, newPassword As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ChangePassword(System::String ^ username, System::String ^ oldPassword, System::String ^ newPassword);" />
      <MemberSignature Language="F#" Value="override this.ChangePassword : string * string * string -&gt; bool" Usage="activeDirectoryMembershipProvider.ChangePassword (username, oldPassword, newPassword)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="oldPassword" Type="System.String" />
        <Parameter Name="newPassword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">The name of the user to update the password for.</param>
        <param name="oldPassword">The current password for the specified user.</param>
        <param name="newPassword">The new password for the specified user.</param>
        <summary>Changes the password for the specified user.</summary>
        <returns>
          <see langword="true" /> if the password was updated successfully; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.ChangePassword%2A> Methode wird verwendet, um das Kennwort des Benutzers in Active Directory-Datenspeicher zu aktualisieren. Unabhängig von den Anmeldeinformationen, die die <xref:System.Web.Security.ActiveDirectoryMembershipProvider> Instanz konfiguriert ist, der Anbieter eine Verbindung herstellt, um die Active Directory mithilfe der `username` und `oldPassword` Parameter wie die Verbindungsanmeldeinformationen.  
  
 Wenn die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnablePasswordReset%2A> Eigenschaft ist `true`, der Benutzer nicht ändern oder das Kennwort, wenn das Konto zuvor gesperrt war, weil der Benutzer zu oft versucht, die Frage zu beantworten. Der Benutzer muss die Anzahl der Minuten, die im angegebenen abwarten, bis die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAnswerAttemptLockoutDuration%2A> Eigenschaft vor dem Ändern des Kennworts.  
  
 Wenn die kennwortänderung erfolgreich ausgeführt wird und die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnablePasswordReset%2A> Eigenschaft ist `true`, und klicken Sie dann den Benutzer falsches Kennwort Antwort Tracking Zähler zurückgesetzt werden.  
  
 Der Anbieter sucht die Benutzerinstanz zu aktualisieren, indem Sie eine Unterstruktursuche für den Benutzernamen, der Anfangspunkt der Suche in der Verbindungszeichenfolge angegeben. Finden Sie unter der <xref:System.Web.Security.ActiveDirectoryMembershipProvider> klassenthema für Weitere Informationen zu Verbindungszeichenfolgen.  
  
 So ändern Sie die Kennwörter auf einem Active Directory-Server die `connectionProtection` Attribut muss festgelegt werden, um <xref:System.Web.Security.ActiveDirectoryConnectionProtection.SignAndSeal>.  
  
 Bei Verwendung eines Servers ADAM die `connectionProtection` Attribut kann festgelegt werden, um <xref:System.Web.Security.ActiveDirectoryConnectionProtection.None>, jedoch nur, wenn Sie explizit des ADAM-Servers konfigurieren für die Änderung des Kennworts über unsichere Verbindungen zulassen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> is empty, or exceeds the maximum length for the user name (usually 256 characters).  \- or -  <paramref name="username" /> contains commas.  \- or -  The user name is mapped to the <see langword="userPrincipalName" /> attribute and the <paramref name="username" /> parameter contains backslashes.  \- or -  <paramref name="oldPassword" /> or <paramref name="newPassword" /> is a zero-length string.  \- or -  <paramref name="oldPassword" /> or <paramref name="newPassword" /> exceeds the maximum password length (usually 128 characters).  \- or -  <paramref name="newPassword" /> is less than the minimum password size specified in the <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.MinRequiredPasswordLength" /> property  \- or -  <paramref name="newPassword" /> contains fewer than the number of non-alphabetic characters specified in the <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.MinRequiredNonAlphanumericCharacters" /> property.  \- or -  <paramref name="newPassword" /> fails validation by the regular expression defined in the <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordStrengthRegularExpression" /> property.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> is <see langword="null" />.  \- or -  <paramref name="oldPassword" /> is <see langword="null" />.  \- or -  <paramref name="newPassword" /> is <see langword="null" />.</exception>
        <exception cref="T:System.Web.Security.MembershipPasswordException">
          <paramref name="newPassword" /> does not meet the complexity requirements defined by the Active Directory server.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">A secure connection could not be made to an Active Directory Application Mode server.</exception>
        <exception cref="T:System.InvalidOperationException">The <see cref="M:System.Web.Security.ActiveDirectoryMembershipProvider.ChangePassword(System.String,System.String,System.String)" /> method is called before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance is initialized.</exception>
        <exception cref="T:System.Exception">An unhandled exception occurred.</exception>
      </Docs>
    </Member>
    <Member MemberName="ChangePasswordQuestionAndAnswer">
      <MemberSignature Language="C#" Value="public override bool ChangePasswordQuestionAndAnswer (string username, string password, string newPasswordQuestion, string newPasswordAnswer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ChangePasswordQuestionAndAnswer(string username, string password, string newPasswordQuestion, string newPasswordAnswer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.ActiveDirectoryMembershipProvider.ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ChangePasswordQuestionAndAnswer (username As String, password As String, newPasswordQuestion As String, newPasswordAnswer As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ChangePasswordQuestionAndAnswer(System::String ^ username, System::String ^ password, System::String ^ newPasswordQuestion, System::String ^ newPasswordAnswer);" />
      <MemberSignature Language="F#" Value="override this.ChangePasswordQuestionAndAnswer : string * string * string * string -&gt; bool" Usage="activeDirectoryMembershipProvider.ChangePasswordQuestionAndAnswer (username, password, newPasswordQuestion, newPasswordAnswer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="newPasswordQuestion" Type="System.String" />
        <Parameter Name="newPasswordAnswer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">The user to change the password question and answer for.</param>
        <param name="password">The password for the specified user.</param>
        <param name="newPasswordQuestion">The new password question for the specified user.</param>
        <param name="newPasswordAnswer">The new password answer for the specified user.</param>
        <summary>Updates the password question and answer for a user in the Active Directory store.</summary>
        <returns>
          <see langword="true" /> if the update was successful; otherwise, <see langword="false" />. A value of <see langword="false" /> is also returned if the password is incorrect, the user is locked out, or the user does not exist in the Active Directory data store.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Methode wird aufgerufen, indem die <xref:System.Web.Security.ActiveDirectoryMembershipUser> Klasse zum Aktualisieren der Kennwortfrage und-Antwort für einen Benutzer in Active Directory-Gruppenmitgliedschaft-Speicher.  
  
 Anfordern einer Kennwortfrage und-Antwort bietet eine zusätzliche Sicherheitsebene beim Zurücksetzen des Kennworts eines Benutzers. Wenn Sie einen Benutzernamen erstellen zu können, kann ein Benutzer angeben, eine Frage und Antwort, die später verwendet werden kann, um ein vergessenes Kennwort zurückzusetzen. Die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.ChangePasswordQuestionAndAnswer%2A> Methode aktualisiert die Kennwortfrage und-Antwort für einen Mitgliedschaftsbenutzer mit neuen Werten.  
  
 Zum Verwenden der <xref:System.Web.Security.ActiveDirectoryMembershipProvider.ChangePasswordQuestionAndAnswer%2A> -Methode, müssen Sie diese zusätzlichen Attribute in der Konfigurationsdatei Ihrer Anwendung festlegen:  
  
-   `requiresQuestionAndAnswer` werden müssen `true.`  
  
-   `attributeMapPasswordQuestion` und `attributeMapPasswordAnswer` Attribute in Active Directory-Schema zugeordnet werden muss.  
  
 Wenn die oben genannten Kriterien nicht erfüllt sind, eine <xref:System.Configuration.Provider.ProviderException> wird ausgelöst, bei der Initialisierung.  
  
 Die <xref:System.Web.Security.ActiveDirectoryMembershipProvider> Instanz in den Active Directory-Datenspeicher herstellt, mit der Anmeldeinformationen der `username` und `password` Parameter, um die Kombination aus Benutzername/Kennwort zu überprüfen. Die tatsächliche Aktualisierung der Frage und Antwort erfolgt mit der konfigurierten Verbindungsanmeldeinformationen des Anbieters.  
  
 Wenn ein falsches Kennwort, um angegeben wird die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.ChangePasswordQuestionAndAnswer%2A> -Methode, die Verzeichnisserver Leistungsindikatoren zum Nachverfolgen von ungültige Kennwortversuche erhöht. Dadurch kann des Benutzers gesperrt wird und konnte sich nicht anmelden bis entweder der Sperrstatus geleert durch einen Aufruf der <xref:System.Web.Security.ActiveDirectoryMembershipProvider.UnlockUser%2A> -Methode oder die gesperrten festgelegte im Verzeichnis durchläuft.  
  
 Wenn das Update, das die Frage und Antwort erfolgreich ausgeführt wird und die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnablePasswordReset%2A> Eigenschaft ist `true`, fehlerhafte Kennwortantwort für den Benutzer nachverfolgen Leistungsindikatoren werden zurückgesetzt.  
  
 Die Kennwortantwort ist verschlüsselt, mit der <xref:System.Web.Security.MembershipProvider.EncryptPassword%2A> -Methode auf, bevor sie in den Active Directory-Datenspeicher gespeichert ist. Der Verschlüsselungsschlüssel und Algorithmus werden angegeben, indem die [MachineKey-Element ((ASP.NET Settings Schema)](http://msdn.microsoft.com/library/4b5699a9-bc21-4c4a-85f1-8b3b8ebd2d46) Konfigurationselement. Die Entschlüsselungsattribut auf die [MachineKey-Element ((ASP.NET Settings Schema)](http://msdn.microsoft.com/library/4b5699a9-bc21-4c4a-85f1-8b3b8ebd2d46) Element muss angegeben werden, die <xref:System.Web.Security.ActiveDirectoryMembershipProvider> Klasse automatisch generierten Verschlüsselungsschlüssel nicht unterstützt.  
  
 Die maximale Länge für die Kennwortfrage beträgt 256 Zeichen. Die maximale Länge für die Kennwortantwort beträgt 128 Zeichen.  
  
 Führende und nachfolgende Leerzeichen abgeschnitten, aus der alle Parameterwerte, mit Ausnahme von `password`.  
  
 Der Anbieter sucht die Benutzerinstanz zu aktualisieren, indem Sie eine Unterstruktursuche für den Benutzernamen, der Anfangspunkt der Suche in der Verbindungszeichenfolge angegeben. Finden Sie unter der <xref:System.Web.Security.ActiveDirectoryMembershipProvider> klassenthema für Weitere Informationen zu Verbindungszeichenfolgen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">The administrator has not mapped the password question-and-answer fields to attributes of the Active Directory schema.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> is empty, or exceeds the maximum length for the user name (usually 256 characters).  \- or -  <paramref name="username" /> contains commas.  \- or -  The user name is mapped to the <see langword="userPrincipalName" /> attribute and the <paramref name="username" /> parameter contains backslashes.  \- or -  <paramref name="password" /> is a zero-length string.  \- or -  <paramref name="password" /> exceeds the maximum password length (usually 128 characters).  \- or -  <paramref name="newPasswordQuestion" /> is empty and the <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.RequiresQuestionAndAnswer" /> property value is <see langword="true" />.  \- or -  <paramref name="newPasswordQuestion" /> exceeds 256 characters.  \- or -  <paramref name="newPasswordAnswer" /> exceeds 128 characters after the answer is encrypted.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> is <see langword="null" />.  \- or -  <paramref name="password" /> is <see langword="null" />.  \- or -  <paramref name="newPasswordQuestion" /> is <see langword="null" /> and <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.RequiresQuestionAndAnswer" /> property is <see langword="true" />.  \- or -  <paramref name="newPasswordAnswer" /> is <see langword="null" /> and <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.RequiresQuestionAndAnswer" /> property is <see langword="true" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">The [machineKey Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/4b5699a9-bc21-4c4a-85f1-8b3b8ebd2d46) configuration element indicates an auto-generated machine encryption key. You must explicitly set the <see langword="decriptionKey" /> attribute of the [machineKey Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/4b5699a9-bc21-4c4a-85f1-8b3b8ebd2d46) element to store password answers with the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" />.</exception>
        <exception cref="T:System.InvalidOperationException">The <see cref="M:System.Web.Security.ActiveDirectoryMembershipProvider.ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)" /> method is called before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance is initialized.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateUser">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUser CreateUser (string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, out System.Web.Security.MembershipCreateStatus status);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUser CreateUser(string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, [out] valuetype System.Web.Security.MembershipCreateStatus&amp; status) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.ActiveDirectoryMembershipProvider.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateUser (username As String, password As String, email As String, passwordQuestion As String, passwordAnswer As String, isApproved As Boolean, providerUserKey As Object, ByRef status As MembershipCreateStatus) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUser ^ CreateUser(System::String ^ username, System::String ^ password, System::String ^ email, System::String ^ passwordQuestion, System::String ^ passwordAnswer, bool isApproved, System::Object ^ providerUserKey, [Runtime::InteropServices::Out] System::Web::Security::MembershipCreateStatus % status);" />
      <MemberSignature Language="F#" Value="override this.CreateUser : string * string * string * string * string * bool * obj *  -&gt; System.Web.Security.MembershipUser" Usage="activeDirectoryMembershipProvider.CreateUser (username, password, email, passwordQuestion, passwordAnswer, isApproved, providerUserKey, status)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="email" Type="System.String" />
        <Parameter Name="passwordQuestion" Type="System.String" />
        <Parameter Name="passwordAnswer" Type="System.String" />
        <Parameter Name="isApproved" Type="System.Boolean" />
        <Parameter Name="providerUserKey" Type="System.Object" />
        <Parameter Name="status" Type="System.Web.Security.MembershipCreateStatus&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="username">The user name for the new user.</param>
        <param name="password">The password for the new user.</param>
        <param name="email">The email address of the new user.</param>
        <param name="passwordQuestion">The password question for the new user.</param>
        <param name="passwordAnswer">The password answer for the new user.</param>
        <param name="isApproved">Whether or not the new user is approved to be validated.</param>
        <param name="providerUserKey">The unique identifier from the membership data source for the user. This parameter must be <see langword="null" /> when using the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> class.</param>
        <param name="status">When this method returns, contains one of the <see cref="T:System.Web.Security.MembershipCreateStatus" /> enumeration values indicating whether the user was created successfully.</param>
        <summary>Adds a new user to the Active Directory data store.</summary>
        <returns>An <see cref="T:System.Web.Security.ActiveDirectoryMembershipUser" /> instance containing the information for the newly created user, or <see langword="null" /> if the user was not successfully created.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.CreateUser%2A> Methode wird aufgerufen, indem die <xref:System.Web.Security.Membership> Klasse zum Erstellen eines neuen Benutzers in Active Directory-Datenspeicher.  
  
 Für Active Directory und Active Directory Application Mode (ADAM) die <xref:System.Web.Security.ActiveDirectoryMembershipProvider> Klasse erfordert, dass die Instanzklasse im Verzeichnis `user`. Alternative Benutzerklassen wie z. B. `inetOrgPerson` werden nicht unterstützt.  
  
 Wenn mithilfe von Active Directory-Server und den Benutzernamen zugeordnet wird die `userPrincipalName` -Attribut, das <xref:System.Web.Security.ActiveDirectoryMembershipProvider> Klasse generiert automatisch einen zufälligen 20 Zeichen Benutzernamen für die `sAMAccountName` Parameter in Ihrem Auftrag.  
  
 Parameter werden standardmäßig auf die folgenden maximale Länge.  
  
|Parameter|Maximale Länge|  
|---------------|--------------------|  
|`username`|64 Zeichen bei Verwendung der `userPrincipalName` Attribut. Bei Verwendung der `sAMAccountName` -Attribut, die gemeinsame Einschränkung beträgt 20 Zeichen oder weniger.|  
|`password`|128 Zeichen.|  
|`email`|256 Zeichen.|  
|`passwordQuestion`|256 Zeichen.|  
|`passwordAnswer`|128 Zeichen vor und nach der Verschlüsselung.|  
  
 Die <xref:System.Web.Security.ActiveDirectoryMembershipUser.Comment%2A> Eigenschaft für das zurückgegebene <xref:System.Web.Security.ActiveDirectoryMembershipUser> Instanz ist auf 1024 Zeichen begrenzt.  
  
 Wenn die Directory-Schema durch das Reduzieren der maximalen zulässigen Längen für diese Attribute geändert wurde, werden dieser Länge Vorrang.  
  
 Vor dem Erstellen des Benutzers, der <xref:System.Web.Security.ActiveDirectoryMembershipProvider> Klasse stellen Sie sicher, dass der Benutzername eindeutig ist. Wenn die <xref:System.Web.Security.ActiveDirectoryMembershipProvider> Instanz erfordert eindeutige e-Mail-Adressen konfiguriert ist, wird auch Stellen Sie sicher, dass die e-Mail-Adresse ist eindeutig.  
  
 In einer Active Directory-Benutzernamen ein Eindeutigkeit wird erzwungen, durch eine GC-Suche ausführen, wenn der Benutzername zugeordnet wird `userPrincipalName`. Wenn `sAMAccountName` verwendet wird, und klicken Sie dann das Verzeichnis automatisch Eindeutigkeit erzwingen, wird die `sAMAccountName` über Active Directory-Domäne.  
  
 Ein ADAM-Server erzwingt die Eindeutigkeit des Benutzernamens von automatisch die `userPrincipalName` über alle Anwendungspartitionen.  
  
 Eindeutigkeit die e-Mail-Adresse wird erzwungen, indem eine Unterstruktursuche für ein doppeltes e-Mail-Adresse, angefangen beim Stamm des Containers, in dem Benutzer erstellt werden. Dies ist entweder der Benutzer Standardcontainer (Wenn kein Container zu einer Active Directory verbunden wurde angegeben in der Verbindungszeichenfolge) oder den Container in der Verbindungszeichenfolge angegeben.  
  
 Die <xref:System.Web.Security.ActiveDirectoryMembershipProvider> Klasse erstellt den Benutzer direkt in der Benutzercontainer in der Verbindungszeichenfolge angegeben. Finden Sie unter der <xref:System.Web.Security.ActiveDirectoryMembershipProvider> klassenthema für Weitere Informationen zu Verbindungszeichenfolgen.  
  
 Für Kennwörter auf einem Active Directory-Server festgelegt werden die `connectionProtection` Attribut muss festgelegt werden, um <xref:System.Web.Security.ActiveDirectoryConnectionProtection.SignAndSeal>.  
  
 Wenn ein ADAM-Server verwendet wird, die `connectionProtection` Attribut kann festgelegt werden, um <xref:System.Web.Security.ActiveDirectoryConnectionProtection.None>, jedoch nur, wenn Sie explizit des ADAM-Servers konfigurieren lässt kennwortänderungen über unsichere Verbindungen.  
  
 Führende und nachfolgende Leerzeichen abgeschnitten, über alle Parameter für Zeichenfolgenwerte außer `password`.  
  
> [!IMPORTANT]
>  Neue Benutzer kann nicht erstellt werden, es sei denn, die für die Verbindung mit dem Active Directory-Server verwendeten Anmeldeinformationen über Domänenadministratorrechte (nicht empfohlen) oder "Erstellen von untergeordneten Instanzen," verfügen "Delete untergeordnete Instanz" und "Set-Kennwort" Zugriffsrechte. Das Zugriffsrecht "Löschen von untergeordneten Instanzen" ist erforderlich, da wird von mehreren Schritten beim Erstellen eines Benutzers, und wenn Sie ein Schritt der Erstellung des Benutzers ein Fehler auftritt, die <xref:System.Web.Security.ActiveDirectoryMembershipProvider> Klasse wird die Benutzerinstanz löschen anstatt in eine teilweise erstellten Benutzerinstanz lassen die Verzeichnis.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The <paramref name="providerUserKey" /> parameter is not <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">The administrator has not mapped the password question-and-answer fields to attributes of the Active Directory schema, and either the <paramref name="passwordQuestion" /> or <paramref name="passwordAnswer" /> parameter is not <see langword="null" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">The [machineKey Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/4b5699a9-bc21-4c4a-85f1-8b3b8ebd2d46) configuration element indicates an auto-generated machine encryption key. You must explicitly set the <see langword="decriptionKey" /> attribute of the [machineKey Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/4b5699a9-bc21-4c4a-85f1-8b3b8ebd2d46) element to store password answers with the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" />.  \- or -  The <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> was unable to establish a secure connection to the directory when attempting to set the password for the new user.</exception>
        <exception cref="T:System.Runtime.InteropServices.COMException">An error occurred while attempting to create the user.</exception>
        <exception cref="T:System.InvalidOperationException">The <see cref="M:System.Web.Security.ActiveDirectoryMembershipProvider.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)" /> method is called before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance is initialized.</exception>
      </Docs>
    </Member>
    <Member MemberName="CurrentConnectionProtection">
      <MemberSignature Language="C#" Value="public System.Web.Security.ActiveDirectoryConnectionProtection CurrentConnectionProtection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Security.ActiveDirectoryConnectionProtection CurrentConnectionProtection" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.ActiveDirectoryMembershipProvider.CurrentConnectionProtection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentConnectionProtection As ActiveDirectoryConnectionProtection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Security::ActiveDirectoryConnectionProtection CurrentConnectionProtection { System::Web::Security::ActiveDirectoryConnectionProtection get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentConnectionProtection : System.Web.Security.ActiveDirectoryConnectionProtection" Usage="System.Web.Security.ActiveDirectoryMembershipProvider.CurrentConnectionProtection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.ActiveDirectoryConnectionProtection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the current level of security being used to protect communications with the server.</summary>
        <value>Einer der <see cref="T:System.Web.Security.ActiveDirectoryConnectionProtection" />-Werte.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.CurrentConnectionProtection%2A> Eigenschaft gibt die aktuelle Ebene der Sicherheit an, die die <xref:System.Web.Security.ActiveDirectoryMembershipProvider> Instanz für die Verwendung konfiguriert. Die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.CurrentConnectionProtection%2A> Eigenschaft basiert auf der `connnectionProtection` Attribut festgelegt, mit der [add-Element für den Anbieter für die Mitgliedschaft ((ASP.NET Settings Schema)](http://msdn.microsoft.com/library/8423ec7f-a06d-4606-977e-a46400b2fc18) in der Anwendungskonfigurationsdatei.  
  
 Die `connectionProtection` Attribut kann nur festgelegt werden, um <xref:System.Web.Security.ActiveDirectoryConnectionProtection.None> oder <xref:System.Web.Security.ActiveDirectoryConnectionProtection.SignAndSeal> in der Konfigurationsdatei.  
  
 Finden Sie unter der <xref:System.Web.Security.ActiveDirectoryMembershipProvider> klassenthema für Weitere Informationen zu Verbindungszeichenfolgen.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt einen Datei "Web.config"-Eintrag, der konfiguriert eine <xref:System.Web.Security.ActiveDirectoryMembershipProvider> -Instanz in das Sicherheitsprotokoll SSL zu verwenden, um zu einem Active Directory-Server herzustellen.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="ADService" connectionString="LDAP://ldapServer/" />  
  </connectionStrings>  
  <system.web>  
    <membership defaultProvider="AspNetActiveDirectoryMembershipProvider">  
      <providers>  
        <add name="AspNetActiveDirectoryMembershipProvider"   
          type="System.Web.Security.ActiveDirectoryMembershipProvider,   
          System.Web, Version=2.0.3600, Culture=neutral,  
          PublicKeyToken=b03f5f7f11d50a3a"  
          connectionProtection="SignAndSeal" />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">An attempt to access the <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.CurrentConnectionProtection" /> property was made before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance was initialized.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteUser">
      <MemberSignature Language="C#" Value="public override bool DeleteUser (string username, bool deleteAllRelatedData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool DeleteUser(string username, bool deleteAllRelatedData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.ActiveDirectoryMembershipProvider.DeleteUser(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DeleteUser (username As String, deleteAllRelatedData As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool DeleteUser(System::String ^ username, bool deleteAllRelatedData);" />
      <MemberSignature Language="F#" Value="override this.DeleteUser : string * bool -&gt; bool" Usage="activeDirectoryMembershipProvider.DeleteUser (username, deleteAllRelatedData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="deleteAllRelatedData" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">The name of the user to delete.</param>
        <param name="deleteAllRelatedData">This parameter is ignored by the <see cref="M:System.Web.Security.ActiveDirectoryMembershipProvider.DeleteUser(System.String,System.Boolean)" /> method.</param>
        <summary>Removes a user's membership information from the Active Directory data store.</summary>
        <returns>
          <see langword="true" /> if the user was deleted; otherwise, <see langword="false" /> if the user was not found in the data store.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.DeleteUser%2A> Methode sofort entfernt den Benutzer, die durch identifiziert die `username` Parameter. Da die Active Directory-Datenspeicher keine Benutzerinformationen in verschiedenen Bereichen des Verzeichnisses, speichert die `deleteAllRelatedData` Parameter wird ignoriert, obwohl er entweder festgelegt werden muss `true` oder `false` beim Aufrufen der <xref:System.Web.Security.ActiveDirectoryMembershipProvider.DeleteUser%2A> Methode.  
  
 Die <xref:System.Web.Security.ActiveDirectoryMembershipProvider> Klasse findet die Benutzerinstanz zu löschen, indem Sie eine einstufige-Suche für den Benutzernamen in dem Container "Benutzer" durch die Verbindungszeichenfolge bestimmt. Finden Sie unter der <xref:System.Web.Security.ActiveDirectoryMembershipProvider> klassenthema für Weitere Informationen zu Verbindungszeichenfolgen.  
  
 `username` 64 Zeichen lang.  
  
> [!IMPORTANT]
>  Benutzer kann nicht gelöscht werden, es sei denn, die für die Verbindung mit dem Active Directory-Server verwendeten Anmeldeinformationen entweder Domänenadministratorrechte verfügen (nicht empfohlen) oder "Delete untergeordneten Instanzen" Zugriffsrecht.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> is empty, or exceeds the maximum length for the user name (usually 256 characters).  \- or -  <paramref name="username" /> contains commas.  \- or -  The user name is mapped to the <see langword="userPrincipalName" /> attribute and the <paramref name="userName" /> parameter contains backslashes.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> is <see langword="null" />.</exception>
        <exception cref="T:System.Runtime.InteropServices.COMException">An error occurred while attempting to delete the user.</exception>
        <exception cref="T:System.InvalidOperationException">The <see cref="M:System.Web.Security.ActiveDirectoryMembershipProvider.DeleteUser(System.String,System.Boolean)" /> method is called before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance is initialized.</exception>
      </Docs>
    </Member>
    <Member MemberName="EnablePasswordReset">
      <MemberSignature Language="C#" Value="public override bool EnablePasswordReset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePasswordReset" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.ActiveDirectoryMembershipProvider.EnablePasswordReset" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property EnablePasswordReset As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnablePasswordReset { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EnablePasswordReset : bool" Usage="System.Web.Security.ActiveDirectoryMembershipProvider.EnablePasswordReset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance is configured to allow users to reset their passwords.</summary>
        <value>
          <see langword="true" /> Wenn das Zurücksetzen von Kennwörtern zulässig ist; andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnablePasswordReset%2A> Eigenschaft gibt an, ob Sie mit der <xref:System.Web.Security.ActiveDirectoryMembershipProvider.ResetPassword%2A> Methode, um das Kennwort eines Benutzers zurückzusetzen. Die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnablePasswordReset%2A> Eigenschaft wird festgelegt, in der Konfigurationsdatei Ihrer Anwendung Datei mithilfe der `enablePasswordReset` Attribut des der [Mitgliedschaft-Element ((ASP.NET Settings Schema)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) Element.  
  
 Kann nur festgelegt werden die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnablePasswordReset%2A> Eigenschaft `true` beim folgenden [Mitgliedschaft-Element ((ASP.NET Settings Schema)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) Element Einstellungen vorgenommen wurden.  
  
-   `requiresQuestionAndAnswer` muss `true`.  
  
-   Active Directory-Schema muss geändert werden, um Attribute für das Speichern der Kennwortfrage und Antwort sowie die drei Nachverfolgungsfelder für Änderung Kennwortantwortversuche enthalten.  
  
-   `attributeMapPasswordQuestion`, `attributeMapPasswordAnswer`, `attributeMapFailedPasswordAnswerCount`, `attributeMapFailedPasswordAnswerTime`, und `attributeMapFailedPasswordAnswerLockoutTime` Attribute in Active Directory-Schema zugeordnet werden muss.  
  
 Wenn die oben genannten Kriterien nicht erfüllt sind, eine <xref:System.Configuration.Provider.ProviderException> wird ausgelöst, bei der Initialisierung.  
  
 Wenn die Verbindungszeichenfolge in der Konfigurationsdatei der Active Directory-Domäne anstatt von einem bestimmten Server gibt die <xref:System.Web.Security.ActiveDirectoryMembershipProvider> Instanz wird stets eine Verbindung mit dem Domänencontroller, die für die Domäne, um sicherzustellen, dass seine Rolle als PDC wurde kennwortänderungen wirksam und sind verfügbar, wenn die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.ValidateUser%2A> -Methode aufgerufen wird.  
  
> [!NOTE]
>  Auch wenn die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnablePasswordReset%2A> Eigenschaft `true`, Benutzerkennwörter kann nicht zurückgesetzt werden, es sei denn, die für die Verbindung mit dem Active Directory-Server verwendeten Anmeldeinformationen über Domänenadministratorrechte (nicht empfohlen) oder das Zugriffsrecht "Kennwort zurücksetzen" verfügen.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt einen Datei "Web.config"-Eintrag, der konfiguriert eine <xref:System.Web.Security.ActiveDirectoryMembershipProvider> Instanz, um das Zurücksetzen von Kennwörtern zu aktivieren. Er verwendet die explizite Anmeldeinformationen eines Benutzers erhält das Zugriffsrecht zu "Kennwort zurücksetzen".  
  
> [!IMPORTANT]
>  Wenn Sie Benutzeranmeldeinformationen in der Datei "Web.config" setzen, sind potenzielle Sicherheitsrisiken. Benutzer mit Zugriffsrechten auf das Verzeichnis mit der Datei "Web.config" können die Datei nicht lesen und somit finden Sie unter den Anmeldeinformationen. Einzelheiten zum Schutz vor dieser Bedrohung finden Sie unter [Verschlüsseln von Informationen mithilfe von geschützten Konfiguration](http://msdn.microsoft.com/library/51cdfe5b-9d82-458c-94ff-c551c4f38ed1).  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="ADService" connectionString="LDAP://ldapServer/" />  
  </connectionStrings>  
  <system.web>  
    <membership defaultProvider="AspNetActiveDirectoryMembershipProvider">  
      <providers>  
        <add name="AspNetActiveDirectoryMembershipProvider"   
          type="System.Web.Security.ActiveDirectoryMembershipProvider,   
          System.Web, Version=2.0.3600, Culture=neutral,   
          PublicKeyToken=b03f5f7f11d50a3a"  
          connectionUsername="UserWithResetPasswordRights"  
          connectionPassword="PasswordForUser"  
          enablePasswordReset="true"  
          requiresQuestionAndAnswer="true"  
          attributeMapPasswordQuestion="PasswordQuestionADAttribute"  
          attributeMapPasswordAnswer="PasswordAnswerADAttribute"  
          attributeMapFailedPasswordAnswerCount="AnswerCountADAttribute"  
          attributeMapFailedPasswordAnswerTime="AnswerTimeADAttribute"  
          attributeMapFailedPasswordAnswerLockoutTime="LockOutTimeADAttribute" />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">An attempt to access the <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.EnablePasswordReset" /> property was made before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance was initialized.</exception>
      </Docs>
    </Member>
    <Member MemberName="EnablePasswordRetrieval">
      <MemberSignature Language="C#" Value="public override bool EnablePasswordRetrieval { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePasswordRetrieval" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.ActiveDirectoryMembershipProvider.EnablePasswordRetrieval" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property EnablePasswordRetrieval As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnablePasswordRetrieval { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EnablePasswordRetrieval : bool" Usage="System.Web.Security.ActiveDirectoryMembershipProvider.EnablePasswordRetrieval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the user's password can be retrieved from the Active Directory data store. This property always returns <see langword="false" />.</summary>
        <value>
          <see langword="false" /> um anzugeben, dass das Abrufen des Kennworts von nicht unterstützt wird die <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> Klasse.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.ActiveDirectoryMembershipProvider> -Klasse bietet keine Unterstützung für das Abrufen des Kennworts.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">An attempt to access the <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.EnablePasswordRetrieval" /> property was made before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance was initialized.</exception>
      </Docs>
    </Member>
    <Member MemberName="EnableSearchMethods">
      <MemberSignature Language="C#" Value="public bool EnableSearchMethods { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableSearchMethods" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.ActiveDirectoryMembershipProvider.EnableSearchMethods" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EnableSearchMethods As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableSearchMethods { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EnableSearchMethods : bool" Usage="System.Web.Security.ActiveDirectoryMembershipProvider.EnableSearchMethods" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether search-oriented <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> methods are available.</summary>
        <value>
          <see langword="true" /> Wenn Suchmethoden verfügbar sind. andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Da Active Directory-Server suchen möglicherweise ressourcenintensiv, ist der <xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnableSearchMethods%2A> Eigenschaft ermöglicht Ihnen, die Suche orientierten deaktivieren <xref:System.Web.Security.ActiveDirectoryMembershipProvider> Methoden. Die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnableSearchMethods%2A> Eigenschaft wird festgelegt, in der Konfigurationsdatei Ihrer Anwendung Datei mithilfe der `enableSearchMethods` Attribut des der [Mitgliedschaft-Element ((ASP.NET Settings Schema)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) Element.  
  
 Wenn die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnableSearchMethods%2A> Eigenschaft ist `false`, die folgenden Methoden sind nicht verfügbar:  
  
-   <xref:System.Web.Security.ActiveDirectoryMembershipProvider.FindUsersByName%2A>  
  
-   <xref:System.Web.Security.ActiveDirectoryMembershipProvider.FindUsersByEmail%2A>  
  
-   <xref:System.Web.Security.ActiveDirectoryMembershipProvider.GetAllUsers%2A>  
  
 Der Anbieter verwendet eine Unterstruktursuche Anfangspunkt der Suche in der Verbindungszeichenfolge angegeben. Finden Sie unter der <xref:System.Web.Security.ActiveDirectoryMembershipProvider> klassenthema für Weitere Informationen zu Verbindungszeichenfolgen.  
  
 Es wird empfohlen, dass Sie nicht in Produktionssystemen Suchen aktivieren, wenn Sie bestätigt haben, dass die Suchabfragen ausgestellt der <xref:System.Web.Security.ActiveDirectoryMembershipProvider> Klasse nicht sich negativ auf Ihr die Leistung des Verzeichnisservers auswirken. Da die <xref:System.Web.Security.ActiveDirectoryMembershipProvider> -Klasse ist für eine zustandslose webumgebung vorgesehen ist, wird die Auslagerung Optimierungen, die von den zugrunde liegenden verfügbar gemacht werden können nicht <xref:System.DirectoryServices> APIs. Dies bedeutet, dass während der Suche in großen Verzeichnissen Auslagerungsvorgänge sehr teuer sind und vermieden werden sollte. Suchvorgänge ermöglicht werden anhand der Directory-Server in der Verbindungszeichenfolge konfiguriert oder ein automatisch ausgewählte Server im Falle einer Verbindungszeichenfolge verweist auf eine Domäne immer ausgegeben. Der Anbieter verwendet einen globalen Katalog nicht für ihre Suchmethoden.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt einen Datei "Web.config"-Eintrag, der konfiguriert eine <xref:System.Web.Security.ActiveDirectoryMembershipProvider> Instanz ermöglicht das Suchen von Active Directory-Server.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="ADService" connectionString="LDAP://ldapServer/" />  
  </connectionStrings>  
  <system.web>  
    <membership defaultProvider="AspNetActiveDirectoryMembershipProvider">  
      <providers>  
        <add name="AspNetActiveDirectoryMembershipProvider"   
          type="System.Web.Security.ActiveDirectoryMembershipProvider,   
          System.Web, Version=2.0.3600, Culture=neutral,   
          PublicKeyToken=b03f5f7f11d50a3a"  
          enableSearchMethods="true" />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">An attempt to access the <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.EnableSearchMethods" /> property was made before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance was initialized.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindUsersByEmail">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUserCollection FindUsersByEmail (string emailToMatch, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUserCollection FindUsersByEmail(string emailToMatch, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.ActiveDirectoryMembershipProvider.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindUsersByEmail (emailToMatch As String, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUserCollection ^ FindUsersByEmail(System::String ^ emailToMatch, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="override this.FindUsersByEmail : string * int * int *  -&gt; System.Web.Security.MembershipUserCollection" Usage="activeDirectoryMembershipProvider.FindUsersByEmail (emailToMatch, pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="emailToMatch" Type="System.String" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="emailToMatch">Email address or portion of email address to search for.</param>
        <param name="pageIndex">The index of the page of results to return. <c>pageIndex</c> is zero-based.</param>
        <param name="pageSize">The size of the page of results to return.</param>
        <param name="totalRecords">When this method returns, contains the total number of users returned in the collection. This parameter is passed uninitialized.</param>
        <summary>Returns a collection of membership users from the Active Directory data store based on the user's email address.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUserCollection" /> containing <paramref name="pageSize" /><see cref="T:System.Web.Security.MembershipUser" /> instances beginning at the page specified by <paramref name="pageIndex" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.FindUsersByEmail%2A> Methode ruft eine <xref:System.Web.Security.MembershipUserCollection> , enthält die Benutzerdatensätze aus Active Directory zu speichern, erfüllen die `emailToMatch` Parameter. Die Benutzerdatensätze in aufsteigender Reihenfolge sortiert nach e-Mail-Adresse zurückgegeben.  
  
 Die `emailToMatch` Parameter ist auf 256 Zeichen beschränkt.  
  
 Die <xref:System.Web.Security.ActiveDirectoryMembershipProvider> Klasse wird ausgegeben, dass die Suche mit dem `clientSearchTimeout` und `serverSearchTimeout` Konfigurationswerte. Da die <xref:System.Web.Security.ActiveDirectoryMembershipProvider> Klasse führt Suchvorgänge in den Verzeichnisserver mit 512 Zeilen pro Seite und den Timeoutwert für jede Seite der Ergebnisse abgerufen werden, indem die <xref:System.Web.Security.ActiveDirectoryMembershipProvider> Klasse. Wenn eine Suchabfrage zu 1.000 Datenzeilen führt z. B. die <xref:System.Web.Security.ActiveDirectoryMembershipProvider> Klasse werden diese Informationen als zwei Seiten der Daten abzurufen. Dies bedeutet, dass die Timeouts für den Client und die Suche gestartet werden, beginnend mit 0 (null) bei der <xref:System.Web.Security.ActiveDirectoryMembershipProvider> Klasse anfordert, die zweite Seite der Daten.  
  
 Von der zurückgegebenen Ergebnisse der <xref:System.Web.Security.ActiveDirectoryMembershipProvider.FindUsersByEmail%2A> Methode werden eingeschränkt, indem die `pageIndex` und `pageSize` Parameter. Die `pageSize` Parameter gibt die maximale Anzahl von <xref:System.Web.Security.MembershipUser> Instanzen zurückzugebenden in der <xref:System.Web.Security.MembershipUserCollection>. Die `pageIndex` Parameter gibt an, welche Ergebnisse zurückgegeben, in dem die erste Seite von 0 (null) gibt an, auf der Seite.  
  
 Die `totalRecords` Parameter ist ein `out` Parameter, der die Gesamtzahl der übereinstimmenden Mitgliedschaftsbenutzer festgelegt ist im Active Directory-Datenspeicher gefunden. Z. B. 13 Benutzer für den konfigurierten Datenspeicher vorhanden sind und die `pageIndex` Wert wurde 1 mit einem `pageSize` 5. Dies ist die <xref:System.Web.Security.MembershipUserCollection> zurückgegeben würde den sechsten bis zehnten enthalten. Die `totalRecords` -Parameter würde auf 13 festgelegt werden.  
  
 Können Sie steuern, ob ermöglicht eine Suche für Benutzer, durch Festlegen der <xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnableSearchMethods%2A> Eigenschaft in der Konfigurationsdatei der Anwendung Datei mithilfe der `enableSearchMethods` Attribut des der [Mitgliedschaft-Element ((ASP.NET Settings Schema)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) Element . Festlegen der <xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnableSearchMethods%2A> Eigenschaft `false` bewirkt, dass die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.FindUsersByEmail%2A> -Methode auslöst eine <xref:System.NotSupportedException> Ausnahme.  
  
 Der Anbieter verwendet eine Unterstruktursuche Anfangspunkt der Suche in der Verbindungszeichenfolge angegeben. Finden Sie unter der <xref:System.Web.Security.ActiveDirectoryMembershipProvider> klassenthema für Weitere Informationen zu Verbindungszeichenfolgen.  
  
 Es wird empfohlen, dass Sie nicht in Produktionssystemen Suchen aktivieren, wenn Sie bestätigt haben, dass die Suchabfragen ausgestellt der <xref:System.Web.Security.ActiveDirectoryMembershipProvider> Klasse nicht sich negativ auf Ihr die Leistung des Verzeichnisservers auswirken. Da die <xref:System.Web.Security.ActiveDirectoryMembershipProvider> -Klasse ist für eine zustandslose webumgebung vorgesehen ist, wird die Auslagerung Optimierungen, die von den zugrunde liegenden verfügbar gemacht werden können nicht <xref:System.DirectoryServices> APIs. Dies bedeutet, dass während der Suche in großen Verzeichnissen Auslagerungsvorgänge sehr teuer sind und vermieden werden sollte. Suchvorgänge ermöglicht werden anhand der Directory-Server in der Verbindungszeichenfolge konfiguriert oder ein automatisch ausgewählte Server im Falle einer Verbindungszeichenfolge verweist auf eine Domäne immer ausgegeben. Der Anbieter verwendet einen globalen Katalog nicht für ihre Suchmethoden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="M:System.Web.Security.ActiveDirectoryMembershipProvider.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)" /> method is called before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance is initialized.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="emailToMatch" /> is empty.  \- or -  <paramref name="emailToMatch" /> exceeds 256 characters.  \- or -  <paramref name="pageIndex" /> is less than 0.  \- or -  <paramref name="pageSize" /> is less than 1.  \- or -  <paramref name="pageSize" /> multiplied by <paramref name="pageIndex" />, plus <paramref name="pageSize" />, minus 1 is greater than <see cref="F:System.Int32.MaxValue" />.</exception>
        <exception cref="T:System.NotSupportedException">The <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.EnableSearchMethods" /> property is <see langword="false" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindUsersByName">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUserCollection FindUsersByName (string usernameToMatch, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUserCollection FindUsersByName(string usernameToMatch, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.ActiveDirectoryMembershipProvider.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindUsersByName (usernameToMatch As String, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUserCollection ^ FindUsersByName(System::String ^ usernameToMatch, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="override this.FindUsersByName : string * int * int *  -&gt; System.Web.Security.MembershipUserCollection" Usage="activeDirectoryMembershipProvider.FindUsersByName (usernameToMatch, pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernameToMatch" Type="System.String" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="usernameToMatch">The user name or portion of a user name to search for.</param>
        <param name="pageIndex">The index of the page of results to return. <c>pageIndex</c> is zero-based.</param>
        <param name="pageSize">The size of the page of results to return.</param>
        <param name="totalRecords">When this method returns, contains the total number of records returned in the collection. This parameter is passed uninitialized.</param>
        <summary>Returns a collection of users from the Active Directory data store based on the user name.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUserCollection" /> containing <paramref name="pageSize" /><see cref="T:System.Web.Security.MembershipUser" /> instances beginning at the page specified by <paramref name="pageIndex" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.FindUsersByName%2A> Methode gibt ein <xref:System.Web.Security.MembershipUserCollection> Instanz, die die Benutzerdatensätze aus dem Active Directory-Datenspeicher für alle Benutzernamen, die mit übereinstimmen enthält die `userNameToMatch` Parameter. Die Datensätze werden alphabetisch nach Namen sortiert zurückgegeben.  
  
 Von der zurückgegebenen Ergebnisse der <xref:System.Web.Security.ActiveDirectoryMembershipProvider.FindUsersByName%2A> Methode werden eingeschränkt, indem die `pageIndex` und `pageSize` Parameter. Die `pageSize` Parameter gibt die maximale Anzahl von <xref:System.Web.Security.MembershipUser> Instanzen zurückzugebenden in der <xref:System.Web.Security.MembershipUserCollection>. Die `pageIndex` Parameter gibt an, welche Ergebnisse zurückgegeben, in dem die erste Seite von 0 (null) gibt an, auf der Seite.  
  
 Die `totalRecords` Parameter ist ein `out` Parameter, der die Gesamtzahl der übereinstimmenden Mitgliedschaftsbenutzer festgelegt ist im Active Directory-Datenspeicher gefunden. Z. B. 13 Benutzer für den konfigurierten Datenspeicher vorhanden sind und die `pageIndex` Wert wurde 1 mit einem `pageSize` 5. Dies ist die <xref:System.Web.Security.MembershipUserCollection> zurückgegeben würde den sechsten bis zehnten enthalten. Die `totalRecords` -Parameter würde auf 13 festgelegt werden.  
  
 Können Sie steuern, ob ermöglicht eine Suche für Benutzer, durch Festlegen der <xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnableSearchMethods%2A> Eigenschaft in der Konfigurationsdatei der Anwendung Datei mithilfe der `enableSearchMethods` Attribut des der [Mitgliedschaft-Element ((ASP.NET Settings Schema)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) Element . Festlegen der <xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnableSearchMethods%2A> Eigenschaftswert an `false` bewirkt, dass die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.FindUsersByName%2A> -Methode auslöst eine <xref:System.NotSupportedException> Ausnahme.  
  
 Der Anbieter verwendet eine Unterstruktursuche Anfangspunkt der Suche in der Verbindungszeichenfolge angegeben. Finden Sie unter der <xref:System.Web.Security.ActiveDirectoryMembershipProvider> klassenthema für Weitere Informationen zu Verbindungszeichenfolgen.  
  
 Es wird empfohlen, dass Sie nicht in Produktionssystemen Suchen aktivieren, wenn Sie bestätigt haben, dass die Suchabfragen ausgestellt der <xref:System.Web.Security.ActiveDirectoryMembershipProvider> Klasse nicht sich negativ auf Ihr die Leistung des Verzeichnisservers auswirken. Da die <xref:System.Web.Security.ActiveDirectoryMembershipProvider> -Klasse ist für eine zustandslose webumgebung vorgesehen ist, wird die Auslagerung Optimierungen, die von den zugrunde liegenden verfügbar gemacht werden können nicht <xref:System.DirectoryServices> APIs. Dies bedeutet, dass während der Suche in großen Verzeichnissen Auslagerungsvorgänge sehr teuer sind und vermieden werden sollte. Suchvorgänge ermöglicht werden anhand der Directory-Server in der Verbindungszeichenfolge konfiguriert oder ein automatisch ausgewählte Server im Falle einer Verbindungszeichenfolge verweist auf eine Domäne immer ausgegeben. Der Anbieter verwendet einen globalen Katalog nicht für ihre Suchmethoden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="M:System.Web.Security.ActiveDirectoryMembershipProvider.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)" /> method is called before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance is initialized.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="usernameToMatch" /> is empty, or exceeds the maximum length for the user name (usually 256 characters).  \- or -  <paramref name="usernameToMatch" /> contains commas.  \- or -  <paramref name="pageIndex" /> is less than 0.  -or  <paramref name="pageSize" /> is less than 1.  \- or -  <paramref name="pageSize" /> multiplied by <paramref name="pageIndex" />, plus <paramref name="pageSize" />, minus 1 is greater than <see cref="F:System.Int32.MaxValue" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="usernameToMatch" /> is <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">The <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.EnableSearchMethods" /> property is <see langword="false" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GeneratePassword">
      <MemberSignature Language="C#" Value="public virtual string GeneratePassword ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GeneratePassword() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.ActiveDirectoryMembershipProvider.GeneratePassword" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GeneratePassword () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GeneratePassword();" />
      <MemberSignature Language="F#" Value="abstract member GeneratePassword : unit -&gt; string&#xA;override this.GeneratePassword : unit -&gt; string" Usage="activeDirectoryMembershipProvider.GeneratePassword " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Generates a random password.</summary>
        <returns>A random password.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.GeneratePassword%2A> Methode der <xref:System.Web.Security.ActiveDirectoryMembershipProvider> -Klasse ruft die <xref:System.Web.Security.Membership.GeneratePassword%2A> Methode der <xref:System.Web.Security.Membership> Klasse, um ein zufälliges Kennwort abzurufen. Die Länge des Kennworts wird festgelegt, auf den Wert, der die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.MinRequiredPasswordLength%2A> Eigenschaft. Die Länge des Kennworts kann nie kleiner als 14.  
  
 Können Sie ausdrücklich Aufrufen der <xref:System.Web.Security.Membership.GeneratePassword%2A> Methode durch Verweisen auf die <xref:System.Web.Security.ActiveDirectoryMembershipProvider> direkt aus der Provider-Eigenschaft der Klasse die <xref:System.Web.Security.Membership> Klasse.  
  
 Das generierte Kennwort enthält nur alphanumerische Zeichen und die folgenden Satzzeichen:! @# $% ^ & * () _-+= [{}]};: <>&#124;. /?. Keine ausgeblendet oder nicht druckbare Zeichen sind in das generierte Kennwort enthalten.  
  
 Das generierte Kennwort enthält mindestens die Anzahl der nicht-alphanumerische Zeichen im angegebenen die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> Eigenschaft. Das generierte Kennwort wird nicht getestet werden, mit dem regulären Ausdruck in der <xref:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordStrengthRegularExpression%2A> Eigenschaft.  
  
> [!NOTE]
>  Die <xref:System.Web.Security.ActiveDirectoryMembershipProvider> Klasse generiert keine Kennwörter, die komplexitätsanforderungen legen Sie in das Verzeichnis entsprechen. Es ist möglich, ein zufälliges Kennwort generieren, das die vom Verzeichnis festgelegten Komplexitätsregeln fehlschlägt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllUsers">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUserCollection GetAllUsers (int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUserCollection GetAllUsers(int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.ActiveDirectoryMembershipProvider.GetAllUsers(System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAllUsers (pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUserCollection ^ GetAllUsers(int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="override this.GetAllUsers : int * int *  -&gt; System.Web.Security.MembershipUserCollection" Usage="activeDirectoryMembershipProvider.GetAllUsers (pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pageIndex">The index of the page of results to return. <c>pageIndex</c> is zero-based.</param>
        <param name="pageSize">The size of the page of results to return.</param>
        <param name="totalRecords">When this method returns, contains the total number of records returned in the collection. This parameter is passed uninitialized.</param>
        <summary>Gets a collection of all the users stored in an Active Directory data source.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUserCollection" /> containing <paramref name="pageSize" /><see cref="T:System.Web.Security.MembershipUser" /> instances beginning at the page specified by <paramref name="pageIndex" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird aufgerufen, indem die <xref:System.Web.Security.Membership> -Klasse zum Abrufen von Benutzerinformationen aus dem Active Directory-Datenspeicher in die ASP.NET-Anwendung Konfigurationsdatei angegeben.  
  
 Von der zurückgegebenen Ergebnisse der <xref:System.Web.Security.ActiveDirectoryMembershipProvider.GetAllUsers%2A> Methode werden eingeschränkt, indem die `pageIndex` und `pageSize` Parameter. Die `pageSize` Parameter gibt die maximale Anzahl von <xref:System.Web.Security.MembershipUser> Instanzen zurückzugebenden in der <xref:System.Web.Security.MembershipUserCollection> Auflistung. Die `pageIndex` Parameter gibt an, welche Ergebnisse zurückgegeben, in dem die erste Seite von 0 (null) gibt an, auf der Seite.  
  
 Die `totalRecords` Parameter ist ein `out` Parameter, der die Gesamtzahl der übereinstimmenden Mitgliedschaftsbenutzer festgelegt ist im Active Directory-Datenspeicher gefunden. Z. B. 13 Benutzer für den konfigurierten Datenspeicher vorhanden sind und die `pageIndex` Wert wurde 1 mit la `pageSize` 5. Dies ist die <xref:System.Web.Security.MembershipUserCollection> zurückgegeben würde den sechsten bis zehnten enthalten. Die `totalRecords` -Parameter würde auf 13 festgelegt werden.  
  
 Sie können steuern, ob die Suche nach Benutzern, indem Sie festlegen können die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnableSearchMethods%2A> Eigenschaft in der Konfigurationsdatei der Anwendung mithilfe der Datei die `enableSearchMethods` Attribut des der [Mitgliedschaft-Element ((ASP.NET Settings Schema)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) Element. Festlegen der <xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnableSearchMethods%2A> Eigenschaft `false` bewirkt, dass die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.GetAllUsers%2A> -Methode auslöst eine <xref:System.NotSupportedException> Ausnahme.  
  
 Der Anbieter verwendet eine Unterstruktursuche Anfangspunkt der Suche in der Verbindungszeichenfolge angegeben. Finden Sie unter der <xref:System.Web.Security.ActiveDirectoryMembershipProvider> klassenthema für Weitere Informationen zu Verbindungszeichenfolgen.  
  
 Es wird empfohlen, dass Sie nicht in Produktionssystemen Suchen aktivieren, wenn Sie bestätigt haben, dass die Suchabfragen ausgestellt der <xref:System.Web.Security.ActiveDirectoryMembershipProvider> Klasse nicht sich negativ auf Ihr die Leistung des Verzeichnisservers auswirken. Da die <xref:System.Web.Security.ActiveDirectoryMembershipProvider> -Klasse ist für eine zustandslose webumgebung vorgesehen ist, wird die Auslagerung Optimierungen, die von den zugrunde liegenden verfügbar gemacht werden können nicht <xref:System.DirectoryServices> APIs. Dies bedeutet, dass während der Suche in großen Verzeichnissen Auslagerungsvorgänge sehr teuer sind und vermieden werden sollte. Suchvorgänge ermöglicht werden anhand der Directory-Server in der Verbindungszeichenfolge konfiguriert oder ein automatisch ausgewählte Server im Falle einer Verbindungszeichenfolge verweist auf eine Domäne immer ausgegeben. Der Anbieter verwendet einen globalen Katalog nicht für ihre Suchmethoden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="M:System.Web.Security.ActiveDirectoryMembershipProvider.GetAllUsers(System.Int32,System.Int32,System.Int32@)" /> method is called before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance is initialized.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="pageIndex" /> is less than 0.  -or  <paramref name="pageSize" /> is less than 1.  \- or -  <paramref name="pageSize" /> multiplied by <paramref name="pageIndex" />, plus <paramref name="pageSize" />, minus 1 is greater than <see cref="F:System.Int32.MaxValue" />.</exception>
        <exception cref="T:System.NotSupportedException">The <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.EnableSearchMethods" /> property is <see langword="false" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetNumberOfUsersOnline">
      <MemberSignature Language="C#" Value="public override int GetNumberOfUsersOnline ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetNumberOfUsersOnline() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.ActiveDirectoryMembershipProvider.GetNumberOfUsersOnline" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetNumberOfUsersOnline () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetNumberOfUsersOnline();" />
      <MemberSignature Language="F#" Value="override this.GetNumberOfUsersOnline : unit -&gt; int" Usage="activeDirectoryMembershipProvider.GetNumberOfUsersOnline " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Throws a <see cref="T:System.NotSupportedException" /> exception in all cases.</summary>
        <returns>A <see cref="T:System.NotSupportedException" /> in all cases.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.ActiveDirectoryMembershipProvider> Klasse die Rückgabe der Anzahl der Benutzer online nicht unterstützt.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Any call to the <see cref="M:System.Web.Security.ActiveDirectoryMembershipProvider.GetNumberOfUsersOnline" /> method.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetPassword">
      <MemberSignature Language="C#" Value="public override string GetPassword (string username, string passwordAnswer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetPassword(string username, string passwordAnswer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.ActiveDirectoryMembershipProvider.GetPassword(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPassword (username As String, passwordAnswer As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetPassword(System::String ^ username, System::String ^ passwordAnswer);" />
      <MemberSignature Language="F#" Value="override this.GetPassword : string * string -&gt; string" Usage="activeDirectoryMembershipProvider.GetPassword (username, passwordAnswer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="passwordAnswer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">The user to retrieve the password for.</param>
        <param name="passwordAnswer">The password answer for the user.</param>
        <summary>Returns the password of the specified user from the database. The <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> class does not support this method.</summary>
        <returns>Always throws a <see cref="T:System.NotSupportedException" /> exception.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.ActiveDirectoryMembershipProvider> Klasse unterstützt nicht das Kennwort des Benutzers zurückgeben.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">The <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> does not support password retrieval.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUser">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gets the information from a membership user in the Active Directory data store.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUser GetUser (object providerUserKey, bool userIsOnline);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUser GetUser(object providerUserKey, bool userIsOnline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.ActiveDirectoryMembershipProvider.GetUser(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetUser (providerUserKey As Object, userIsOnline As Boolean) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUser ^ GetUser(System::Object ^ providerUserKey, bool userIsOnline);" />
      <MemberSignature Language="F#" Value="override this.GetUser : obj * bool -&gt; System.Web.Security.MembershipUser" Usage="activeDirectoryMembershipProvider.GetUser (providerUserKey, userIsOnline)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerUserKey" Type="System.Object" />
        <Parameter Name="userIsOnline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="providerUserKey">The unique identifier for the user.</param>
        <param name="userIsOnline">The <see cref="M:System.Web.Security.ActiveDirectoryMembershipProvider.GetUser(System.Object,System.Boolean)" /> method ignores this parameter.</param>
        <summary>Gets the membership user information associated with the specified user key.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUser" /> instance representing the user specified. If no user is found in the Active Directory data store for the specified <paramref name="providerUserKey" /> value, <see langword="null" /> is returned.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.GetUser%2A> Methode wird aufgerufen, indem die <xref:System.Web.Security.Membership> Klasse zum Abrufen von Informationen für den angegebenen Benutzer aus dem Active Directory-Datenspeicher.  
  
 Suche wird nach einer Benutzerinstanz gesucht, in denen die `objectSID` Attribut entspricht der `providerUserKey` Parameter.  
  
 Der Anbieter verwendet eine Unterstruktursuche Anfangspunkt der Suche in der Verbindungszeichenfolge angegeben. Finden Sie unter der <xref:System.Web.Security.ActiveDirectoryMembershipProvider> klassenthema für Weitere Informationen zu Verbindungszeichenfolgen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="M:System.Web.Security.ActiveDirectoryMembershipProvider.GetUser(System.Object,System.Boolean)" /> method is called before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance is initialized.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="providerUserKey" /> is not of type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="providerUserKey" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUser GetUser (string username, bool userIsOnline);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUser GetUser(string username, bool userIsOnline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.ActiveDirectoryMembershipProvider.GetUser(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetUser (username As String, userIsOnline As Boolean) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUser ^ GetUser(System::String ^ username, bool userIsOnline);" />
      <MemberSignature Language="F#" Value="override this.GetUser : string * bool -&gt; System.Web.Security.MembershipUser" Usage="activeDirectoryMembershipProvider.GetUser (username, userIsOnline)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="userIsOnline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">The name of the user to get information for.</param>
        <param name="userIsOnline">The <see cref="M:System.Web.Security.ActiveDirectoryMembershipProvider.GetUser(System.String,System.Boolean)" /> method ignores this parameter.</param>
        <summary>Gets the membership user information associated with the specified user name.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUser" /> instance representing the user specified. If no user is found in the Active Directory data store for the specified <paramref name="username" /> value, <see langword="null" /> is returned.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.GetUser%2A> Methode wird aufgerufen, indem die <xref:System.Web.Security.Membership> Klasse zum Abrufen von Informationen für den angegebenen Benutzer aus dem Active Directory-Datenspeicher.  
  
 Der Anbieter verwendet eine Unterstruktursuche Anfangspunkt der Suche in der Verbindungszeichenfolge angegeben. Finden Sie unter der <xref:System.Web.Security.ActiveDirectoryMembershipProvider> klassenthema für Weitere Informationen zu Verbindungszeichenfolgen.  
  
 Führende und nachfolgende Leerzeichen abgeschnitten, aus der `username` Parameterwert.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> is empty, or exceeds the maximum length for the user name (usually 256 characters).  \- or -  <paramref name="username" /> contains commas.  \- or -  The user name is mapped to the <see langword="userPrincipalName" /> attribute and the <paramref name="username" /> parameter contains backslashes.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> is <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">The <see cref="M:System.Web.Security.ActiveDirectoryMembershipProvider.GetUser(System.String,System.Boolean)" /> method is called before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance is initialized.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUserNameByEmail">
      <MemberSignature Language="C#" Value="public override string GetUserNameByEmail (string email);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetUserNameByEmail(string email) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.ActiveDirectoryMembershipProvider.GetUserNameByEmail(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetUserNameByEmail (email As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetUserNameByEmail(System::String ^ email);" />
      <MemberSignature Language="F#" Value="override this.GetUserNameByEmail : string -&gt; string" Usage="activeDirectoryMembershipProvider.GetUserNameByEmail email" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="email" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="email">The email address to search for.</param>
        <summary>Gets the user name associated with the specified email address.</summary>
        <returns>The user name associated with the specified email address.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird aufgerufen, indem die <xref:System.Web.Security.Membership> klassenbasierter einen Benutzernamen aus Active Directory-Datenspeicher abrufen, auf die e-Mail-Adresse für den Benutzer.  
  
 Wenn mehr als ein Benutzer im Mitgliedschaftsdatenspeicher dieselbe e-Mail-Adresse verfügt, wird die erste gefundene Benutzername zurückgegeben. Sie können festlegen, die `requiresUniqueEmail` Attribut des der [Mitgliedschaft-Element ((ASP.NET Settings Schema)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) Element `true` in der Anwendungskonfigurationsdatei, um sicherzustellen, dass jede e-Mail-Adresse in der Datenbank eindeutig ist.  
  
 Führende und nachfolgende Leerzeichen abgeschnitten, aus der `email` Parameterwert. Wenn die e-Mail-Adresse nach dem Verkürzen leer ist ein <xref:System.ArgumentException> ausgelöst wird. Wenn die e-Mail-Adresse `null`, alle Benutzernamen in der Active Directory-Datenspeicher werden durchsucht, und der erste Benutzername zurückgegeben.  
  
 Es wird empfohlen, dass Sie nicht in Produktionssystemen Suchen aktivieren, wenn Sie bestätigt haben, dass die Suchabfragen ausgestellt der <xref:System.Web.Security.ActiveDirectoryMembershipProvider> Klasse nicht sich negativ auf Ihr die Leistung des Verzeichnisservers auswirken.  
  
> [!IMPORTANT]
>  Die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.GetUserNameByEmail%2A> Methode wird ausgeführt, selbst wenn die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnableSearchMethods%2A> Eigenschaft ist `false`.  
  
 Da die <xref:System.Web.Security.ActiveDirectoryMembershipProvider> -Klasse ist für eine zustandslose webumgebung vorgesehen ist, wird die Auslagerung Optimierungen, die von den zugrunde liegenden verfügbar gemacht werden können nicht <xref:System.DirectoryServices> APIs. Dies bedeutet, dass während der Suche in großen Verzeichnissen Auslagerungsvorgänge sehr teuer sind und vermieden werden sollte. Suchvorgänge ermöglicht werden anhand der Directory-Server in der Verbindungszeichenfolge konfiguriert oder ein automatisch ausgewählte Server im Falle einer Verbindungszeichenfolge verweist auf eine Domäne immer ausgegeben. Der Anbieter verwendet einen globalen Katalog nicht für ihre Suchmethoden.  
  
 Der Anbieter verwendet eine Unterstruktursuche Anfangspunkt der Suche in der Verbindungszeichenfolge angegeben. Finden Sie unter der <xref:System.Web.Security.ActiveDirectoryMembershipProvider> klassenthema für Weitere Informationen zu Verbindungszeichenfolgen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="email" /> exceeds 256 characters  \- or -  after trimming, <paramref name="email" /> is empty.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">More than one user exists in the data store with the same email address and the <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.RequiresUniqueEmail" /> property value is <see langword="true" />.</exception>
        <exception cref="T:System.InvalidOperationException">The provider is not initialized.</exception>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.ActiveDirectoryMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (name As String, config As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ config);" />
      <MemberSignature Language="F#" Value="override this.Initialize : string * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="activeDirectoryMembershipProvider.Initialize (name, config)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="config" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name">The name of the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance to initialize.</param>
        <param name="config">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> containing the names and values of the configuration options for the membership provider.</param>
        <summary>Initializes the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance with the property values from the application's configuration files. This method is not intended to be called from your code.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode initialisiert die <xref:System.Web.Security.ActiveDirectoryMembershipProvider> Objekt mit den Eigenschaftswerten in der Anwendungskonfigurationsdatei (Web.config) für das ASP.NET angegeben und nicht direkt aus Ihrem Code verwendet werden soll.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="config" /> is <see langword="null" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">The <see langword="applicationName" /> attribute specified in the application configuration exceeds 256 characters.  \- or -  The <see langword="connectionStringName" /> attribute is empty or does not exist in the application configuration.  \- or -  The connection string specified in the <see langword="connectionStringName" /> attribute in the application configuration file is empty or does not exist.  \- or -  The <see langword="connectionProtection" /> attribute is set to a value other than <see cref="F:System.Web.Security.ActiveDirectoryConnectionProtection.SignAndSeal" /> or <see cref="F:System.Web.Security.ActiveDirectoryConnectionProtection.None" /> in the application configuration file.  \- or -  The <see langword="connectionUsername" /> attribute is specified in the application configuration file but its value is empty.  \- or -  The <see langword="connectionPassword" /> attribute is specified in the application configuration file but its value is empty.  \- or -  Either the <see langword="connectionUsername" /> attribute or the <see langword="connectionPassword" /> attribute is specified in the application configuration file, but not both.  \- or -  The <see langword="clientSearchTimeout" /> attribute is specified but is not a positive integer.  \- or -  The <see langword="serverSearchTimeout" /> attribute is specified but is not a positive integer.  \- or -  The <see langword="enableSearchMethods" /> attribute is specified, but is not a Boolean value.  \- or -  The <see langword="requiresUniqueEmail" /> attribute is specified, but is not a Boolean value.  \- or -  The <see langword="enablePasswordReset" /> attribute is specified, but is not a Boolean value.  \- or -  The <see langword="requiresQuestionAndAnswer" /> attribute is specified, but is not a Boolean value.  \- or -  The <see langword="minRequiredPasswordLength" /> attribute is specified and it is either negative or greater than 128.  \- or -  The <see langword="minRequiredNonalphanumericCharacters" /> attribute is specified and it is either negative or greater than 128.  \- or -  The regular expression specified in the <see langword="passwordStrengthRegularExpression" /> attribute in the application configuration file is not a valid regular expression  \- or -  The <see langword="attributeMapUsername" /> attribute is specified, but it is an empty string.  \- or -  The <see langword="connectionString" /> attribute does not begin with "LDAP".  \- or -  The connection string specified in the <see langword="connectionString" /> attribute is invalid.  \- or -  The connection string in the <see langword="connectionString" /> attribute specifies a server-less bind.  \- or -  The <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> could not establish a connection with the domain or directory server.  \- or -  The <see langword="connectionProtection" /> attribute is set to <see cref="F:System.Web.Security.ActiveDirectoryConnectionProtection.SignAndSeal" />, but neither an SSL nor a signed and sealed connection can be established with the server.  \- or -  The <see langword="connectionProtection" /> attribute is set to <see cref="F:System.Web.Security.ActiveDirectoryConnectionProtection.None" /> but the <see langword="connectionUsername" /> and <see langword="connectionPassword" /> attributes are not set.  \- or -  The <see langword="connectionProtection" /> attribute is set to <see cref="F:System.Web.Security.ActiveDirectoryConnectionProtection.SignAndSeal" /> but the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> could not establish an SSL connection with an ADAM server.  \- or -  The <see langword="connectionString" /> attribute specifies either the global catalog (GC) or an SSL global catalog port.  \- or -  The <see langword="connectionString" /> attribute specifies an Active Directory server or domain, but the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> could not retrieve the default naming context for the domain.  \- or -  The <see langword="connectionString" /> attribute specifies an Active Directory server or domain, but the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> could not retrieve the default users container.  \- or -  The <see langword="connectionString" /> attribute specifies an ADAM server, but it does not specify an application partition or container.  \- or -  The <see langword="connectionString" /> attribute specifies an application partition or container, but the specified container does not exist.  \- or -  The <see langword="connectionString" /> attribute specifies a container that is not allowed to contain user instances.  An attribute mapping is specified but its value was empty.  \- or -  An attribute mapping is specified twice.  \- or -  An attribute mapping is specified but the attribute does not exist on the user instance.  \- or -  An attribute mapping is specified but the directory attribute is not of the correct data type.  \- or -  An attribute mapping is specified but the directory attribute is multi-valued.  \- or -  The <see langword="attributeMapUserName" /> attribute is specified but was mapped to neither the <c>sAMAccountName</c> nor the <c>userPrincipalName</c> directory attribute when connecting to an Active Directory.  \- or -  The <see langword="attributeMapUserName" /> attribute is specified but was not mapped to the <c>userPrincipalName</c> directory attribute when connecting to an ADAM server.  \- or -  The <see langword="enablePasswordReset" /> attribute is <see langword="true" /> and the <see langword="requiresQuestionAndAnswer" /> attribute is <see langword="false" /> in the application configuration file.  \- or -  The <see langword="maxInvalidPasswordAttempts" /> attribute was specified but is not a non-zero positive integer.  \- or -  The <see langword="passwordAttemptWindow" /> attribute was specified but is not a non-zero positive integer.  \- or -  The <see langword="passwordAnswerAttemptLockoutDuration" /> attribute was specified but is not a non-zero positive integer.  \- or -  The <see langword="enablePasswordReset" /> attribute is <see langword="true" /> and any of the <see langword="attributeMapFailedPasswordAnswerCount" />, <see langword="attributeMapFailedPasswordAnswerTime" />, and <see langword="attributeMapFailedPasswordAnswerLockoutTime" /> attributes are empty.  \- or -  The <see langword="requiresQuestionAndAnswer" /> attribute is <see langword="true" /> but either the <see langword="attributeMapPasswordQuestion" /> or the <see langword="attributeMapPasswordAnswer" /> attribute is empty.  \- or -  An attribute specified in the application configuration file is not valid.</exception>
        <exception cref="T:System.Web.HttpException">The application is running in a hosted environment and the <see cref="T:System.Web.AspNetHostingPermissionLevel" /> is set to <see cref="F:System.Web.AspNetHostingPermissionLevel.Minimal" />.</exception>
        <exception cref="T:System.Runtime.InteropServices.COMException">An error occurred while querying the directory.</exception>
      </Docs>
    </Member>
    <Member MemberName="MaxInvalidPasswordAttempts">
      <MemberSignature Language="C#" Value="public override int MaxInvalidPasswordAttempts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxInvalidPasswordAttempts" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.ActiveDirectoryMembershipProvider.MaxInvalidPasswordAttempts" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MaxInvalidPasswordAttempts As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MaxInvalidPasswordAttempts { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxInvalidPasswordAttempts : int" Usage="System.Web.Security.ActiveDirectoryMembershipProvider.MaxInvalidPasswordAttempts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the number of failed answer attempts a user is allowed for the password-reset question.</summary>
        <value>Die Anzahl von fehlerhaften beantworten, wie oft ein Benutzer berechtigt ist, bevor das Konto gesperrt ist. Die Standardeinstellung ist <c>5</c>.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnablePasswordReset%2A> Eigenschaft ist `true`, der Benutzer die Kennwortfrage zum Zurücksetzen ihres Kennworts beantworten muss. Der Benutzer darf eine begrenzte Anzahl von Antworten innerhalb des Zeitfensters, durch die die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAttemptWindow%2A> Eigenschaft. Wenn die Anzahl der Kennwortantwortversuche größer als oder gleich dem Wert in gespeichert ist die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.MaxInvalidPasswordAttempts%2A> -Eigenschaft, die Benutzer weitere Versuche gesperrt ist, für die Anzahl von Minuten gespeichert die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAnswerAttemptLockoutDuration%2A> Eigenschaft.  
  
> [!NOTE]
>  Diese Eigenschaft steuert nicht die Anzahl der fehlerhaften Anmeldeversuche, die ein Benutzer treffen kann, bevor gesperrt werden. Der Active Directory-Server behandelt fehlgeschlagene Anmeldeversuche und wird nicht durch den Wert dieser Eigenschaft beeinflusst.  
  
 Die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.MaxInvalidPasswordAttempts%2A> Eigenschaft wird festgelegt, in der Konfigurationsdatei Ihrer Anwendung Datei mithilfe der `maxInvalidPasswordAttempts` Attribut des der [Mitgliedschaft-Element ((ASP.NET Settings Schema)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) Element. Wenn die Eigenschaft nicht, in der Konfigurationsdatei der Anwendung festgelegt ist, die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.MaxInvalidPasswordAttempts%2A> Eigenschaftensatz wird auf den Standardwert des `5`.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt einen Datei "Web.config"-Eintrag, der konfiguriert eine <xref:System.Web.Security.ActiveDirectoryMembershipProvider> Instanz zum Sperren von Benutzern, die drei fehlerhafte versucht die Kennwortantwort in einem Zeitraum von 10 Minuten eingeben. Wenn der Benutzer gesperrt ist, können für 15 Minuten keine weiteren Versuche zum Beantworten der Kennwortfrage durchgeführt werden.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="ADService" connectionString="LDAP://ldapServer/" />  
  </connectionStrings>  
  <system.web>  
    <membership defaultProvider="AspNetActiveDirectoryMembershipProvider">  
      <providers>  
        <add name="AspNetActiveDirectoryMembershipProvider"   
          type="System.Web.Security.ActiveDirectoryMembershipProvider,   
          System.Web, Version=2.0.3600, Culture=neutral,  
          PublicKeyToken=b03f5f7f11d50a3a"  
          maxInvalidPasswordAttempts="3"  
          passwordAttemptWindow="10"  
          passwordAnswerAttemptLockoutDuration="15" />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">An attempt to access the <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.MaxInvalidPasswordAttempts" /> property was made before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance was initialized.</exception>
      </Docs>
    </Member>
    <Member MemberName="MinRequiredNonAlphanumericCharacters">
      <MemberSignature Language="C#" Value="public override int MinRequiredNonAlphanumericCharacters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinRequiredNonAlphanumericCharacters" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.ActiveDirectoryMembershipProvider.MinRequiredNonAlphanumericCharacters" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MinRequiredNonAlphanumericCharacters As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MinRequiredNonAlphanumericCharacters { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MinRequiredNonAlphanumericCharacters : int" Usage="System.Web.Security.ActiveDirectoryMembershipProvider.MinRequiredNonAlphanumericCharacters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the minimum number of special characters that must be present in a valid password.</summary>
        <value>Die minimale Anzahl von Sonderzeichen, die ein gültiges Kennwort enthalten muss.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> Eigenschaft gibt die minimale Anzahl von nicht-alphanumerische Zeichen, die eingegeben werden muss, um ein gültiges Kennwort zu erstellen.  
  
 Die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> -Eigenschaftswert festgelegt ist, in der Anwendungskonfigurationsdatei mithilfe der `minRequiredNonalphanumericCharacters` Attribut von der [Mitgliedschaft-Element ((ASP.NET Settings Schema)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) Konfigurationselement.  
  
 Ein nicht alphanumerisches Zeichen ist ein Zeichen für die die <xref:System.Char.IsLetterOrDigit%2A> -Methode zurückkehrt `false`.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt die [Mitgliedschaft-Element ((ASP.NET Settings Schema)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) Konfigurationselement in der `system.web` Abschnitt der Datei Web.config der Anwendung. Es gibt an, dass die Anwendung eine Instanz von der <xref:System.Web.Security.ActiveDirectoryMembershipProvider> Klasse, um Mitgliedschaftsdienste und Sätze Bereitstellen der `minRequiredNonalphanumericCharacters` -Attribut auf ein Zeichen.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="ADService" connectionString="LDAP://ldapServer/" />  
  </connectionStrings>  
  <system.web>  
    <membership defaultProvider="AspNetActiveDirectoryMembershipProvider">  
      <providers>  
        <add name="AspNetActiveDirectoryMembershipProvider"   
          type="System.Web.Security.ActiveDirectoryMembershipProvider,   
          System.Web, Version=2.0.3600, Culture=neutral,   
          PublicKeyToken=b03f5f7f11d50a3a"  
          minRequiredNonalphanumericCharacters = "1" />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.MinRequiredNonAlphanumericCharacters" /> property is accessed before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance is initialized.</exception>
      </Docs>
    </Member>
    <Member MemberName="MinRequiredPasswordLength">
      <MemberSignature Language="C#" Value="public override int MinRequiredPasswordLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinRequiredPasswordLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.ActiveDirectoryMembershipProvider.MinRequiredPasswordLength" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MinRequiredPasswordLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MinRequiredPasswordLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MinRequiredPasswordLength : int" Usage="System.Web.Security.ActiveDirectoryMembershipProvider.MinRequiredPasswordLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the minimum length required for a password.</summary>
        <value>Die minimale erforderliche Länge für ein Kennwort.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.MinRequiredPasswordLength%2A> Eigenschaft ruft die minimale Anzahl von Zeichen, die eingegeben werden muss, um ein gültiges Kennwort zu erstellen.  
  
 Die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.MinRequiredPasswordLength%2A> -Eigenschaftswert festgelegt ist, in der Anwendungskonfigurationsdatei mithilfe der `minRequiredPasswordLength` Attribut von der [Mitgliedschaft-Element ((ASP.NET Settings Schema)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) Konfigurationselement.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt die [Mitgliedschaft-Element ((ASP.NET Settings Schema)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) Konfigurationselement in der `system.web` Abschnitt der Datei Web.config der Anwendung. Es gibt an, dass die Anwendung eine Instanz von der <xref:System.Web.Security.ActiveDirectoryMembershipProvider> Klasse, um Mitgliedschaftsdienste und Sätze Bereitstellen der `minRequiredPasswordLength` -Attribut auf sieben Zeichen.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="ADService" connectionString="LDAP://ldapServer/" />  
  </connectionStrings>  
  <system.web>  
    <membership defaultProvider="AspNetActiveDirectoryMembershipProvider">  
      <providers>  
        <add name="AspNetActiveDirectoryMembershipProvider"   
          type="System.Web.Security.ActiveDirectoryMembershipProvider,   
          System.Web, Version=2.0.3600, Culture=neutral,   
          PublicKeyToken=b03f5f7f11d50a3a"  
          minRequiredPasswordLength = "7" />  
  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.MinRequiredPasswordLength" /> property is accessed before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance is initialized.</exception>
      </Docs>
    </Member>
    <Member MemberName="PasswordAnswerAttemptLockoutDuration">
      <MemberSignature Language="C#" Value="public int PasswordAnswerAttemptLockoutDuration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PasswordAnswerAttemptLockoutDuration" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAnswerAttemptLockoutDuration" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PasswordAnswerAttemptLockoutDuration As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PasswordAnswerAttemptLockoutDuration { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PasswordAnswerAttemptLockoutDuration : int" Usage="System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAnswerAttemptLockoutDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the length of time for which a user account is locked out after the user makes too many bad password-answer attempts.</summary>
        <value>Die Zeit in Minuten an, die ein Benutzer gesperrt ist, nach der Bereitstellung zu viele falsche Kennwortantworten.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnablePasswordReset%2A> Eigenschaft ist `true`, der Benutzer die Kennwortfrage zum Zurücksetzen ihres Kennworts beantworten muss. Der Benutzer nicht die richtige Antwort angeben aufeinander gleich kommt die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.MaxInvalidPasswordAttempts%2A> Eigenschaftswert innerhalb des dreifachen vom angegebenen Zeitspanne der <xref:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAttemptWindow%2A> -Eigenschaft, der Benutzer wird weiter versucht für die Anzahl der Minuten gesperrt enthalten der <xref:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAnswerAttemptLockoutDuration%2A> Eigenschaft.  
  
> [!NOTE]
>  Diese Eigenschaft ist nicht die Dauer festgelegt, die ein Benutzer gesperrt ist, nach einem Fehler beim Geben Sie eines gültigen Kennwort ein. Der Active Directory-Server behandelt fehlgeschlagene Anmeldeversuche und wird nicht durch den Wert dieser Eigenschaft beeinflusst. Es wird empfohlen, die die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAnswerAttemptLockoutDuration%2A> Eigenschaft auf den gleichen Wert wie die Kontosperrdauer für zu viele Anmeldeversuche in der Active Directory-Konfiguration konnte nicht festgelegt werden. Dies zeigt, konsistent, automatischen Sperrverhalten für Benutzer unabhängig davon, ob sie aufgrund fehlgeschlagener Anmeldeversuche oder falsches Kennwortantworten gesperrt wurden.  
  
 Die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAnswerAttemptLockoutDuration%2A> Eigenschaft wird festgelegt, in der Konfigurationsdatei Ihrer Anwendung Datei mithilfe der `passwordAnswerAttemptLockoutDuration` Attribut des der [Mitgliedschaft-Element ((ASP.NET Settings Schema)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) Element. Wenn die Eigenschaft nicht, in der Konfigurationsdatei der Anwendung festgelegt ist, die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAnswerAttemptLockoutDuration%2A> Eigenschaft auf den Standardwert von 30 Minuten festgelegt ist.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt einen Datei "Web.config"-Eintrag, der konfiguriert eine <xref:System.Web.Security.ActiveDirectoryMembershipProvider> Instanz zum Sperren von Benutzern, die drei fehlerhafte versucht die Kennwortantwort in einem Zeitraum von 10 Minuten eingeben. Wenn der Benutzer gesperrt ist, können für 15 Minuten keine weiteren Versuche zum Beantworten der Kennwortfrage durchgeführt werden.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="ADService" connectionString="LDAP://ldapServer/" />  
  </connectionStrings>  
  <system.web>  
    <membership defaultProvider="AspNetActiveDirectoryMembershipProvider">  
      <providers>  
        <add name="AspNetActiveDirectoryMembershipProvider"   
          type="System.Web.Security.ActiveDirectoryMembershipProvider,   
          System.Web, Version=2.0.3600, Culture=neutral,   
          PublicKeyToken=b03f5f7f11d50a3a"  
          maxInvalidPasswordAttempts="3"  
          passwordAttemptWindow="10"  
          passwordAnswerAttemptLockoutDuration="15" />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">An attempt to access the <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAnswerAttemptLockoutDuration" /> property was made before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance was initialized.</exception>
      </Docs>
    </Member>
    <Member MemberName="PasswordAttemptWindow">
      <MemberSignature Language="C#" Value="public override int PasswordAttemptWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PasswordAttemptWindow" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAttemptWindow" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PasswordAttemptWindow As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int PasswordAttemptWindow { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PasswordAttemptWindow : int" Usage="System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAttemptWindow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the time window during which consecutive failed attempts to provide a valid password or a valid password answer are tracked.</summary>
        <value>Das Zeitfenster, in Minuten, während die aufeinander folgenden Fehlversuchen Geben Sie ein gültiges Kennwort oder ein gültiges Kennwort nachverfolgt werden. Der Standardwert beträgt 10 Minuten. Wenn das Intervall zwischen jedem Fehlversuch größer ist die <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAttemptWindow" /> Einstellung der Eigenschaft, die <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> Instanz jedem fehlgeschlagenen Versuch behandelt, als wäre es der ersten gescheiterte Versuch.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAttemptWindow%2A> Eigenschaft funktioniert in Verbindung mit der <xref:System.Web.Security.ActiveDirectoryMembershipProvider.MaxInvalidPasswordAttempts%2A> -Eigenschaft zum Schutz gegen eine unerwünschte Quelle das Kennwort oder die Kennwortantwort für einen Mitgliedschaftsbenutzer über wiederholte Versuche. Wenn Benutzer versuchen, melden Sie sich, ihr Kennwort ändern oder Zurücksetzen des Kennworts, dürfen nur eine bestimmte Anzahl aufeinander folgender Versuche innerhalb eines angegebenen Zeitfensters. Die Länge des Zeitfensters wird angegeben, indem Sie die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAttemptWindow%2A> Eigenschaft, die die Anzahl der Minuten zwischen den ungültige Versuche angibt. Wenn die Anzahl der aufeinander folgenden Fehlern beim Anmeldevorgang durch den Benutzer zurücksetzen oder das Kennwort entspricht dem Wert, der in gespeicherten der <xref:System.Web.Security.ActiveDirectoryMembershipProvider.MaxInvalidPasswordAttempts%2A> -Eigenschaft und die Zeit verstrichen seit der letzte ungültige Versuch kleiner als die angegebene Anzahl von Minuten ist für die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAttemptWindow%2A> Eigenschaft, und klicken Sie dann auf das Benutzerkonto s gesperrt, für die Anzahl der Minuten, die innerhalb der <xref:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAnswerAttemptLockoutDuration%2A> Eigenschaft. Wenn das Intervall zwischen der aktuellen gescheiterte Versuch und dem letzten fehlerhaften Versuch größer ist die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAttemptWindow%2A> Eigenschaft festlegen, der aktuelle ungültige Versuch als der erste Versuch gezählt. Wenn eine gültige Kennwortantwort angegeben wird, bevor die maximale Anzahl der zulässigen ungültigen erreicht wird, wird die Anzahl der ungültige Kennwortantwortversuche auf NULL gesetzt. Wenn ein gültiges Kennwort angegeben wird, bevor die maximal Anzahl von ungültigen zulässige Versuche erreicht ist, wird die Anzahl der ungültige Kennwortversuche und die Anzahl der ungültige Kennwortantwortversuche werden auf 0 (null) festgelegt.  
  
 Es wird empfohlen, die die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAnswerAttemptLockoutDuration%2A> Eigenschaft auf den gleichen Wert festgelegt werden, wie die Kontosperrdauer, der angegeben wird für die maximale Anzahl der gescheiterten in der Active Directory-Konfiguration versucht. Dies zeigt konsistent, automatischen Sperrverhalten für Benutzer, ob sie aufgrund fehlgeschlagener Anmeldeversuche oder falsches Kennwortantworten gesperrt wurden.  
  
 Die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAnswerAttemptLockoutDuration%2A> Eigenschaft wird festgelegt, in der Konfigurationsdatei Ihrer Anwendung Datei mithilfe der `passwordAttemptWindow` Attribut des der [Mitgliedschaft-Element ((ASP.NET Settings Schema)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) Element. Wenn die Eigenschaft nicht, in der Konfigurationsdatei der Anwendung festgelegt ist, die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAnswerAttemptLockoutDuration%2A> Eigenschaft auf den Standardwert von 10 Minuten festgelegt ist.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt einen Datei "Web.config"-Eintrag, der konfiguriert eine <xref:System.Web.Security.ActiveDirectoryMembershipProvider> Instanz zum Sperren von Benutzern, die drei fehlerhafte versucht die Kennwortantwort in einem Zeitraum von 10 Minuten eingeben. Wenn der Benutzer gesperrt ist, können für 15 Minuten keine weiteren Versuche zum Beantworten der Kennwortfrage durchgeführt werden.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="ADService" connectionString="LDAP://ldapServer/" />  
  </connectionStrings>  
  <system.web>  
    <membership defaultProvider="AspNetActiveDirectoryMembershipProvider">  
      <providers>  
        <add name="AspNetActiveDirectoryMembershipProvider"   
          type="System.Web.Security.ActiveDirectoryMembershipProvider,   
          System.Web, Version=2.0.3600, Culture=neutral,  
          PublicKeyToken=b03f5f7f11d50a3a"  
          maxInvalidPasswordAttempts="3"  
          passwordAttemptWindow="10"  
        passwordAnswerAttemptLockoutDuration="15" />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">An attempt to access the <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAttemptWindow" /> property was made before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance was initialized.</exception>
      </Docs>
    </Member>
    <Member MemberName="PasswordFormat">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipPasswordFormat PasswordFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Security.MembershipPasswordFormat PasswordFormat" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordFormat" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PasswordFormat As MembershipPasswordFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::Security::MembershipPasswordFormat PasswordFormat { System::Web::Security::MembershipPasswordFormat get(); };" />
      <MemberSignature Language="F#" Value="member this.PasswordFormat : System.Web.Security.MembershipPasswordFormat" Usage="System.Web.Security.ActiveDirectoryMembershipProvider.PasswordFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipPasswordFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating the format of passwords in the Active Directory data store.</summary>
        <value>Einer der <see cref="T:System.Web.Security.MembershipPasswordFormat" />-Werte. Die <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordFormat" /> -Eigenschaft gibt immer <see cref="F:System.Web.Security.MembershipPasswordFormat.Hashed" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.ActiveDirectoryMembershipProvider> Kennwortabruf-Eigenschaft nicht unterstützt. Das Verhalten der <xref:System.Web.Security.ActiveDirectoryMembershipProvider> Objekt ist identisch mit anderen Anbietern arbeiten mit `Hashed` Kennwörter.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordStrengthRegularExpression">
      <MemberSignature Language="C#" Value="public override string PasswordStrengthRegularExpression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordStrengthRegularExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordStrengthRegularExpression" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PasswordStrengthRegularExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PasswordStrengthRegularExpression { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PasswordStrengthRegularExpression : string" Usage="System.Web.Security.ActiveDirectoryMembershipProvider.PasswordStrengthRegularExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the regular expression used to evaluate a password.</summary>
        <value>Ein regulärer Ausdruck, der zum Auswerten eines Kennworts verwendet wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordStrengthRegularExpression%2A> Eigenschaft ruft den regulären Ausdruck, der zum Auswerten der Kennwortkomplexität verwendet.  
  
 Die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordStrengthRegularExpression%2A> Eigenschaft dient nicht zum Überprüfen von automatisch generierten Kennwörter in die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.ResetPassword%2A> Methode.  
  
 Die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordStrengthRegularExpression%2A> Eigenschaft wird festgelegt, in der Anwendungskonfigurationsdatei mithilfe der `passwordStrengthRegularExpression` Attribut von der [Mitgliedschaft-Element ((ASP.NET Settings Schema)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) Konfigurationselement.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt die [Mitgliedschaft-Element ((ASP.NET Settings Schema)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) Konfigurationselement in der `system.web` Abschnitt der Datei Web.config der Anwendung. Es gibt an, dass die Anwendung eine Instanz von der <xref:System.Web.Security.ActiveDirectoryMembershipProvider> Klasse, um Mitgliedschaftsdienste und Sätze Bereitstellen der `passwordStrengthRegularExpression` -Attribut auf einen regulären Ausdruck, der überprüft, ob das Kennwort die folgenden Kriterien erfüllt:  
  
-   Ist größer als sieben Zeichen.  
  
-   Enthält mindestens eine Ziffer an.  
  
-   Enthält mindestens ein Sonderzeichen (nicht alphanumerischen) Zeichen.  
  
 Wenn das Kennwort diese Kriterien nicht erfüllt, wird das Kennwort von der Mitgliedschaftsanbieter nicht akzeptiert.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="ADService" connectionString="LDAP://ldapServer/" />  
  </connectionStrings>  
  <system.web>  
    <membership defaultProvider="AspNetActiveDirectoryMembershipProvider">  
      <providers>  
        <add name="AspNetActiveDirectoryMembershipProvider"   
          type="System.Web.Security.ActiveDirectoryMembershipProvider,   
          System.Web, Version=2.0.3600, Culture=neutral,   
          PublicKeyToken=b03f5f7f11d50a3a"  
          passwordStrengthRegularExpression=  
            "@\"(?=.{6,})(?=(.*\d){1,})(?=(.*\W){1,})" />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordStrengthRegularExpression" /> property is accessed before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance is initialized.</exception>
      </Docs>
    </Member>
    <Member MemberName="RequiresQuestionAndAnswer">
      <MemberSignature Language="C#" Value="public override bool RequiresQuestionAndAnswer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresQuestionAndAnswer" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.ActiveDirectoryMembershipProvider.RequiresQuestionAndAnswer" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RequiresQuestionAndAnswer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresQuestionAndAnswer { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresQuestionAndAnswer : bool" Usage="System.Web.Security.ActiveDirectoryMembershipProvider.RequiresQuestionAndAnswer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the membership provider is configured to require a password question and answer when creating a user.</summary>
        <value>
          <see langword="true" /> Wenn die <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> Objekt ist, erfordern eine Kennwortfrage und-Antwort für einen Benutzer konfiguriert ist, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.RequiresQuestionAndAnswer%2A> Eigenschaft wird festgelegt, in der Konfigurationsdatei Ihrer Anwendung Datei mithilfe der `requiresQuestionAndAnswer` Attribut des der [Mitgliedschaft-Element ((ASP.NET Settings Schema)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) Element. Wenn die Eigenschaft nicht, in der Konfigurationsdatei der Anwendung festgelegt ist, die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.RequiresQuestionAndAnswer%2A> Eigenschaftensatz wird auf den Standardwert des `false`.  
  
 Wenn die `requiresQuestionAndAnswer` -Attributsatz zur `true`, müssen Sie auch diese zusätzlichen Attribute festlegen.  
  
-   `attributeMapPasswordQuestion` und `attributeMapPasswordAnswer` Attribute in Active Directory-Schema zugeordnet werden muss.  
  
 Wenn die oben genannten Kriterien nicht erfüllt sind, eine <xref:System.Configuration.Provider.ProviderException> wird ausgelöst, bei der Initialisierung.  
  
> [!NOTE]
>  Sie können eine Kennwortfrage und-Antwort erfordern, wenn Sie einen Benutzer erstellen, aber die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnablePasswordReset%2A> Eigenschaft, um `false` verhindern, dass Benutzer ändern ihre Kennwörter mithilfe der <xref:System.Web.Security.ActiveDirectoryMembershipProvider> Klasse.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt einen Datei "Web.config"-Eintrag, der konfiguriert eine <xref:System.Web.Security.ActiveDirectoryMembershipProvider> Instanz, um das Zurücksetzen von Kennwörtern zu aktivieren. Er verwendet die explizite Anmeldeinformationen eines Benutzers erhält das Zugriffsrecht zu "Kennwort zurücksetzen".  
  
> [!IMPORTANT]
>  Wenn Sie Benutzeranmeldeinformationen in der Datei "Web.config" setzen, sind potenzielle Sicherheitsrisiken. Benutzer mit Zugriffsrechten auf das Verzeichnis mit der Datei "Web.config" können die Datei nicht lesen und somit finden Sie unter den Anmeldeinformationen. Einzelheiten zum Schutz vor dieser Bedrohung finden Sie unter [Verschlüsseln von Informationen mithilfe von geschützten Konfiguration](http://msdn.microsoft.com/library/51cdfe5b-9d82-458c-94ff-c551c4f38ed1).  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="ADService" connectionString="LDAP://ldapServer/" />  
  </connectionStrings>  
  <system.web>  
    <membership defaultProvider="AspNetActiveDirectoryMembershipProvider">  
      <providers>  
        <add name="AspNetActiveDirectoryMembershipProvider"   
          type="System.Web.Security.ActiveDirectoryMembershipProvider,   
          System.Web, Version=2.0.3600, Culture=neutral,  
          PublicKeyToken=b03f5f7f11d50a3a"  
          connectionUsername="UserWithResetPasswordRights"  
          connectionPassword="PasswordForUser"  
          enablePasswordReset="true"  
          requiresQuestionAndAnswer="true"  
          attributeMapPasswordQuestion="PasswordQuestionADAttribute"  
          attributeMapPasswordAnswer="PasswordAnswerADAttribute"  
          attributeMapFailedPasswordAnswerCount="AnswerCountADAttribute"  
          attributeMapFailedPasswordAnswerTime="AnswerTimeADAttribute"  
          attributeMapFailedPasswordAnswerLockoutTime="LockOutTimeADAttribute" />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">An attempt to access the <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.RequiresQuestionAndAnswer" /> property was made before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance was initialized.</exception>
      </Docs>
    </Member>
    <Member MemberName="RequiresUniqueEmail">
      <MemberSignature Language="C#" Value="public override bool RequiresUniqueEmail { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresUniqueEmail" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.ActiveDirectoryMembershipProvider.RequiresUniqueEmail" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RequiresUniqueEmail As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresUniqueEmail { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresUniqueEmail : bool" Usage="System.Web.Security.ActiveDirectoryMembershipProvider.RequiresUniqueEmail" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether an email address stored on the Active Directory server must be unique.</summary>
        <value>
          <see langword="true" /> Wenn Sie e-Mail-Adressen eindeutig sein müssen; andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.RequiresUniqueEmail%2A> Eigenschaft ist `true`, die <xref:System.Web.Security.ActiveDirectoryMembershipProvider> Instanz wird sichergestellt, dass die e-Mail-Adresse nicht von einem anderen Benutzer in der aktuellen verwendet wird Bereich festzulegen, wenn entweder die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.CreateUser%2A> oder <xref:System.Web.Security.ActiveDirectoryMembershipProvider.UpdateUser%2A> Methode wird aufgerufen.  
  
 Die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.RequiresUniqueEmail%2A> Eigenschaft wird festgelegt, in der Konfigurationsdatei Ihrer Anwendung Datei mithilfe der `requiresUniqueEmail` Attribut des der [Mitgliedschaft-Element ((ASP.NET Settings Schema)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) Element. Wenn die Eigenschaft nicht, in der Konfigurationsdatei der Anwendung festgelegt ist, die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.RequiresUniqueEmail%2A> Eigenschaftensatz wird auf den Standardwert des `false`.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt einen Datei "Web.config"-Eintrag, der konfiguriert eine <xref:System.Web.Security.ActiveDirectoryMembershipProvider> Instanz eindeutige e-Mail-Adressen für Benutzer, die auf dem Active Directory-Server gespeicherten erforderlich ist.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="ADService" connectionString="LDAP://ldapServer/" />  
  </connectionStrings>  
  <system.web>  
    <membership defaultProvider="AspNetActiveDirectoryMembershipProvider">  
      <providers>  
        <add name="AspNetActiveDirectoryMembershipProvider"   
          type="System.Web.Security.ActiveDirectoryMembershipProvider,   
          System.Web, Version=2.0.3600, Culture=neutral,   
          PublicKeyToken=b03f5f7f11d50a3a"  
          requiresUniqueEmail="true" />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">An attempt to access the <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.RequiresUniqueEmail" /> property was made before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance was initialized.</exception>
      </Docs>
    </Member>
    <Member MemberName="ResetPassword">
      <MemberSignature Language="C#" Value="public override string ResetPassword (string username, string passwordAnswer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ResetPassword(string username, string passwordAnswer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.ActiveDirectoryMembershipProvider.ResetPassword(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ResetPassword (username As String, passwordAnswer As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ResetPassword(System::String ^ username, System::String ^ passwordAnswer);" />
      <MemberSignature Language="F#" Value="override this.ResetPassword : string * string -&gt; string" Usage="activeDirectoryMembershipProvider.ResetPassword (username, passwordAnswer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="passwordAnswer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">The user to reset the password for.</param>
        <param name="passwordAnswer">The password answer for the specified user.</param>
        <summary>Resets a user's password to a new, automatically generated password.</summary>
        <returns>The new password for the specified user.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Methode wird aufgerufen, indem die <xref:System.Web.Security.Membership> Klasse, um das Kennwort für einen Benutzer in Active Directory-Datenspeicher in ein neues zurücksetzen, nach dem Zufallsprinzip generierten Wert. Das neue Kennwort wird zurückgegeben.  
  
> [!NOTE]
>  Die zufälliges Kennwort erstellt, indem die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.ResetPassword%2A> Methode nicht notwendigerweise dem regulären Ausdruck in der <xref:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordStrengthRegularExpression%2A> Eigenschaft. Zufällige Kennwort wird jedoch vom festgelegten Kriterien entsprechen den <xref:System.Web.Security.ActiveDirectoryMembershipProvider.MinRequiredPasswordLength%2A> und <xref:System.Web.Security.ActiveDirectoryMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> Eigenschaften.  
  
 Wenn eine falsche Antwort, um bereitgestellt wird die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.ResetPassword%2A> -Methode, der interne Zähler, ungültige Kennwortantwortversuche, verfolgt wird um eins erhöht. Dadurch kann sich der Benutzer konnte sich nicht anmelden, bis der Sperrstatus durch einen Aufruf der <xref:System.Web.Security.ActiveDirectoryMembershipProvider.UnlockUser%2A> Methode. Wenn die richtige Kennwortantwort angegeben wird und der Benutzer aktuell nicht gesperrt ist, wird der interne Zähler, der ungültige Kennwortversuche nachverfolgt wird auf 0 (null) zurückgesetzt. Weitere Informationen finden Sie unter der <xref:System.Web.Security.ActiveDirectoryMembershipProvider.MaxInvalidPasswordAttempts%2A> und <xref:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAttemptWindow%2A> Eigenschaften.  
  
 Führende und nachfolgende Leerzeichen werden in alle Parameterwerte gekürzt.  
  
 Sie erreichen die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.ResetPassword%2A> Methode, direkt, indem Sie zunächst einen Verweis zum Abrufen der <xref:System.Web.Security.ActiveDirectoryMembershipProvider> -Instanz von der <xref:System.Web.Security.Membership.Provider%2A?displayProperty=nameWithType> Eigenschaft.  
  
 Der Anbieter verwendet eine Unterstruktursuche Anfangspunkt der Suche in der Verbindungszeichenfolge angegeben. Finden Sie unter der <xref:System.Web.Security.ActiveDirectoryMembershipProvider> klassenthema für Weitere Informationen zu Verbindungszeichenfolgen.  
  
 Zum Festlegen von Kennwörtern auf einem Active Directory-Server die `connectionProtection` Attribut muss festgelegt werden, um <xref:System.Web.Security.ActiveDirectoryConnectionProtection.SignAndSeal>.  
  
 Bei Verwendung eines Servers ADAM die `connectionProtection` Attribut kann festgelegt werden, um <xref:System.Web.Security.ActiveDirectoryConnectionProtection.None>, jedoch nur, wenn Sie explizit des ADAM-Servers konfigurieren lässt kennwortänderungen über unsichere Verbindungen.  
  
> [!IMPORTANT]
>  Sie können keine Kennwörter zurücksetzen, es sei denn, die für die Verbindung mit dem Active Directory-Server verwendeten Anmeldeinformationen über Domänenadministratorrechte (nicht empfohlen) oder das Zugriffsrecht "Kennwort zurücksetzen" verfügen.  
  
 Um ein Kennwort zurückzusetzen, müssen alle folgenden Bedingungen erfüllt sein:  
  
-   Die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnablePasswordReset%2A> Eigenschaft muss festgelegt werden, um `true`.  
  
-   Active Directory-Schema muss geändert werden, um Attribute für das Speichern der Kennwortfrage und-Antwort enthalten, und die drei Nachverfolgungsfelder für Kennwort beantworten Änderungen.  
  
-   Die `attributeMapPasswordQuestion`, `attributeMapPasswordAnswer`, `attributMapFailedPasswordAnswerCount`, `attributeMapFailedPasswordAnswerTime`, und `attributeMapFailedPasswordAnswerLockedTime` Attribute müssen in der Konfigurationsdatei der Anwendung festgelegt werden.  
  
-   Die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.RequiresQuestionAndAnswer%2A> Eigenschaft muss festgelegt werden, um `true`.  
  
-   Der Sicherheitskontext für das Herstellen einer Verbindung mit der Active Directory-Datenspeicher (entweder das Prozesskonto oder expliziten Anmeldeinformationen) muss über ausreichende Berechtigungen zum Ändern der Kennwörter haben. Die Verbindung mit dem Active Directory-Server verwendeten Anmeldeinformationen verfügen über Domänenadministratorrechte (nicht empfohlen) oder das Zugriffsrecht "Kennwort zurücksetzen".  
  
> [!NOTE]
>  Auf dem Active Directory-Server festgelegten Sicherheitsrichtlinien können es unmöglich für die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.ResetPassword%2A> Methode, um ein Kennwort zu generieren, die die Richtlinien erfüllen. Die standardmäßige Implementierung des der <xref:System.Web.Security.ActiveDirectoryMembershipProvider.GeneratePassword%2A> Methode generiert Kennwörter, die die Standard-Kennwortrichtlinien auf Domänencontrollern mit Windows Server 2003 SP1 zu erfüllen. Wenn das Kennwort kann, aufgrund der Sicherheitsrichtlinien auf dem Active Directory-Server zurückgesetzt werden eine <xref:System.Configuration.Provider.ProviderException> ausgelöst wird.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="M:System.Web.Security.ActiveDirectoryMembershipProvider.ResetPassword(System.String,System.String)" /> method is called before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance is initialized.</exception>
        <exception cref="T:System.NotSupportedException">The <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.EnablePasswordReset" /> property value is <see langword="false" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="passwordAnswer" /> is <see langword="null" />.  \- or -  <paramref name="username" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="passwordAnswer" /> is empty after trimming  \- or -  <paramref name="passwordAnswer" /> exceeds 128 characters.  \- or -  <paramref name="username" /> is empty, or exceeds the maximum length allowed for user names (usually 256 characters).  \- or -  <paramref name="username" /> contains commas.  \- or -  The user name is mapped to <see langword="userPrincipalName" /> but the <paramref name="username" /> parameter contains backslashes.</exception>
        <exception cref="T:System.Web.Security.MembershipPasswordException">The user is locked out because of too many bad logon attempts or too many attempted password-answer reset attempts.  \- or -  <paramref name="passwordAnswer" /> does not match the stored password answer.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">The user specified in <paramref name="username" /> does not exist in the Active Directory data store.  \- or -  A generated password does not pass a custom validation handler.  \- or -  The generated password is not complex enough to satisfy custom password policies set on the Active Directory server.  \- or -  A secure connection cannot be made to an Active Directory Application Mode server to set the new password.</exception>
        <exception cref="T:System.Exception">An unhandled exception occurred.</exception>
      </Docs>
    </Member>
    <Member MemberName="UnlockUser">
      <MemberSignature Language="C#" Value="public override bool UnlockUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool UnlockUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.ActiveDirectoryMembershipProvider.UnlockUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function UnlockUser (username As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool UnlockUser(System::String ^ username);" />
      <MemberSignature Language="F#" Value="override this.UnlockUser : string -&gt; bool" Usage="activeDirectoryMembershipProvider.UnlockUser username" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">The name of the membership user to clear the lock status for.</param>
        <summary>Clears a lock so that a membership user can be validated.</summary>
        <returns>
          <see langword="true" /> if the membership user was successfully unlocked; otherwise, <see langword="false" />. The <see cref="M:System.Web.Security.ActiveDirectoryMembershipProvider.UnlockUser(System.String)" /> method also returns <see langword="false" /> when the membership user is not found in the data store.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Benutzer am häufigsten gesperrt und kann nicht überprüft werden, indem Sie die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.ValidateUser%2A> Methode bei der <xref:System.Web.Security.ActiveDirectoryMembershipProvider.MaxInvalidPasswordAttempts%2A> innerhalb der angegebenen Eigenschaft überschritten wird die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAttemptWindow%2A> Eigenschaft oder wenn zu viele Versuche vorgenommen wurden, mit dem falschen Kennwort anzumelden.  
  
 Wenn die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnablePasswordReset%2A> Eigenschaft ist `true`, wenn ein Benutzer ist entsperrt werden die Leistungsindikatoren für falsche Kennwörter zurückgesetzt werden.  
  
 Der Anbieter verwendet eine Unterstruktursuche Anfangspunkt der Suche in der Verbindungszeichenfolge angegeben. Finden Sie unter der <xref:System.Web.Security.ActiveDirectoryMembershipProvider> klassenthema für Weitere Informationen zu Verbindungszeichenfolgen.  
  
 Führende und nachfolgende Leerzeichen abgeschnitten, aus der `username` Parameterwert.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> is empty, or exceeds the maximum length allowed for user names (usually 256 characters).  \- or -  <paramref name="username" /> contains commas.  \- or -  The user name is mapped to <see langword="userPrincipalName" /> but the <paramref name="username" /> parameter contains backslashes.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> is <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">The <see cref="M:System.Web.Security.ActiveDirectoryMembershipProvider.UnlockUser(System.String)" /> method is called before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance is initialized.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateUser">
      <MemberSignature Language="C#" Value="public override void UpdateUser (System.Web.Security.MembershipUser user);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void UpdateUser(class System.Web.Security.MembershipUser user) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.ActiveDirectoryMembershipProvider.UpdateUser(System.Web.Security.MembershipUser)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub UpdateUser (user As MembershipUser)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void UpdateUser(System::Web::Security::MembershipUser ^ user);" />
      <MemberSignature Language="F#" Value="override this.UpdateUser : System.Web.Security.MembershipUser -&gt; unit" Usage="activeDirectoryMembershipProvider.UpdateUser user" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="System.Web.Security.MembershipUser" />
      </Parameters>
      <Docs>
        <param name="user">A <see cref="T:System.Web.Security.MembershipUser" /> instance representing the user to update and the updated information for the user.</param>
        <summary>Updates information about a user in the Active Directory data store.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird aufgerufen, indem die <xref:System.Web.Security.Membership> -Klasse zum Aktualisieren von Benutzerinformationen im Active Directory-Datenspeicher. Die <xref:System.Web.Security.MembershipUser.Email%2A>, <xref:System.Web.Security.MembershipUser.Comment%2A>, und <xref:System.Web.Security.MembershipUser.IsApproved%2A> Eigenschaftswerte werden für den angegebenen Mitgliedschaftsbenutzer aktualisiert. Alle anderen Eigenschaften werden ignoriert.  
  
 Die maximale Länge für die `username` Parameter beträgt 256 Zeichen. Die maximale Länge für die <xref:System.Web.Security.MembershipUser.Email%2A> Eigenschaft beträgt 256 Zeichen.  
  
 Das Kennwort für einen Mitgliedschaftsbenutzer kann nicht aktualisiert werden, mithilfe der <xref:System.Web.Security.ActiveDirectoryMembershipProvider.UpdateUser%2A> Methode. Verwenden Sie zum Aktualisieren des Kennworts für einen Mitgliedschaftsbenutzer die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.ChangePassword%2A> Methode.  
  
 Der Anbieter verwendet eine Unterstruktursuche Anfangspunkt der Suche in der Verbindungszeichenfolge angegeben. Finden Sie unter der <xref:System.Web.Security.ActiveDirectoryMembershipProvider> klassenthema für Weitere Informationen zu Verbindungszeichenfolgen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="M:System.Web.Security.ActiveDirectoryMembershipProvider.UpdateUser(System.Web.Security.MembershipUser)" /> method is called before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance is initialized.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="user" /> is <see langword="null" />.  \- or -  The <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.RequiresUniqueEmail" /> property is <see langword="true" /> but the email address from the supplied <see cref="T:System.Web.Security.MembershipUser" /> instance is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">The <see cref="P:System.Web.Security.MembershipUser.Email" /> property is empty after trimming.  \- or -  The <see cref="P:System.Web.Security.MembershipUser.Email" /> property exceeds 256 characters.  \- or -  The <see cref="P:System.Web.Security.MembershipUser.Comment" /> property exceeds 1024 characters.  \- or -  The <see cref="P:System.Web.Security.MembershipUser.Comment" /> property is empty.  \- or -  The user name from the supplied <see cref="T:System.Web.Security.MembershipUser" /> instance is empty, or exceeds the maximum length allowed for user names (usually 256 characters).  \- or -  The user name from the supplied <see cref="T:System.Web.Security.MembershipUser" /> instance contains commas.  \- or -  The user name is mapped to <see langword="userPrincipalName" /> but the user name from the supplied <see cref="T:System.Web.Security.MembershipUser" /> instance contains backslashes.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">The specified user is not found in the Active Directory data store.  \- or -  The <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.RequiresUniqueEmail" /> property is <see langword="true" />, and the new value of the <see cref="P:System.Web.Security.MembershipUser.Email" /> property duplicates an existing email address.</exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateUser">
      <MemberSignature Language="C#" Value="public override bool ValidateUser (string username, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ValidateUser(string username, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.ActiveDirectoryMembershipProvider.ValidateUser(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ValidateUser (username As String, password As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ValidateUser(System::String ^ username, System::String ^ password);" />
      <MemberSignature Language="F#" Value="override this.ValidateUser : string * string -&gt; bool" Usage="activeDirectoryMembershipProvider.ValidateUser (username, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">The name of the user to validate.</param>
        <param name="password">The password for the specified user.</param>
        <summary>Verifies that the specified user name and password exist in the Active Directory data store.</summary>
        <returns>
          <see langword="true" /> if the specified <paramref name="username" /> and <paramref name="password" /> are valid; otherwise, <see langword="false" />. If the user specified does not exist in the Active Directory data store, the <see cref="M:System.Web.Security.ActiveDirectoryMembershipProvider.ValidateUser(System.String,System.String)" /> method returns <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird aufgerufen, indem die <xref:System.Web.Security.Membership> Klasse, um die Anmeldeinformationen des Benutzers für den Active Directory-Datenspeicher zu überprüfen.  
  
 Wenn die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnablePasswordReset%2A> Eigenschaft ist `true` und die angegebenen Anmeldeinformationen gültig sind, des Benutzers Tracking Zähler für Antworten mit falschem Kennwort zurückgesetzt.  
  
 Die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.ValidateUser%2A> Methode gelegten `false` Wenn die richtigen Anmeldeinformationen angegeben sind, in den folgenden Situationen:  
  
1.  Das Benutzerkonto wurde vom Verzeichnisserver aufgrund zu vieler fehlerhafter Anmeldeversuche gesperrt. Der Benutzer ist nicht möglich, bis das Verzeichnis Sperrdauer anzumelden.  
  
2.  Wenn die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnablePasswordReset%2A> Eigenschaft ist `true`, das Benutzerkonto wird gesperrt, wenn der Benutzer eine fehlerhafte Kennwortantwort oft angegeben. Das Konto des Benutzers wird entsperrt, nachdem die angegebene Zeit die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAnswerAttemptLockoutDuration%2A> Eigenschaft übergeben wurde.  
  
3.  Der Benutzer muss in der Verbindungszeichenfolge angegebenen Container vorhanden sein. Gültige Anmeldeinformationen werden für ein Benutzerkonto in einem anderen Container oder in einer anderen Domäne befinden. Der Benutzer muss in der Verbindungszeichenfolge angegebenen Container vorhanden sein.  
  
 Bei der Validierung eines Benutzers überprüft der Anbieter die Anmeldeinformationen durch Herstellen einer Verbindung mit dem Active Directory-Datenspeicher, der mit den angegebenen Benutzernamen und das Kennwort, nicht die Anmeldeinformationen, die in der Konfigurationsdatei der Anwendung konfiguriert.  
  
 Allerdings die <xref:System.Web.Security.ActiveDirectoryMembershipProvider> Instanz stellt eine Verbindung her, in das Verzeichnis mit den konfigurierten Anmeldeinformationen für folgenden Gründe vorliegen.  
  
-   Um sicherzustellen, dass ein Benutzer vorhanden, im Suchbereich befindlichen ist gemäß der <xref:System.Web.Security.ActiveDirectoryMembershipProvider> Verbindungszeichenfolge für die Instanz. Der Anbieter verwendet eine Unterstruktursuche Anfangspunkt der Suche in der Verbindungszeichenfolge angegeben, um zu bestimmen, ob ein Benutzer vorhanden ist. Der Benutzer muss im angegebenen Container vorhanden sein. Anmeldeinformationen, die außerhalb der Verbindungszeichenfolge angegebenen Container gültig sind, werden nicht überprüft werden. Finden Sie unter der <xref:System.Web.Security.ActiveDirectoryMembershipProvider> klassenthema für Weitere Informationen zu Verbindungszeichenfolgen.  
  
-   Wenn die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnablePasswordReset%2A> Eigenschaft `true`, die <xref:System.Web.Security.ActiveDirectoryMembershipProvider> Instanz verwenden die konfigurierten Anmeldeinformationen beim Laden der Benutzerinstanz, um zu überprüfen, ob der Benutzer gesperrt wurde, da er zu viele Versuche so ändern Sie die Kennwortantwort vorgenommen hat .  
  
> [!IMPORTANT]
>  Herstellen einer Verbindung mit einem Active Directory-Domänencontroller mit dem "Gast" Konto aktiviert ist ein potenzielles Sicherheitsrisiko darstellen. Alle Überprüfung unternommenen auf einem Active Directory-Domänencontroller mit dem "Gast" Konto aktiviert ist erfolgreich. Zur Erhöhung der Sicherheit bei Verwendung eines Active Directory-Domänencontrollers sollten Sie das Konto "Gäste" auf dem Domänencontroller deaktivieren.  
  
 Die <xref:System.Web.Security.ActiveDirectoryMembershipProvider> Instanz versucht eine gleichzeitige Bindung für Active Directory, wenn eine der folgenden Bedingungen erfüllt ist:  
  
-   Die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.CurrentConnectionProtection%2A>-Eigenschaft ist auf <xref:System.Web.Security.ActiveDirectoryConnectionProtection.None> festgelegt.  
  
-   Die <xref:System.Web.Security.ActiveDirectoryMembershipProvider.CurrentConnectionProtection%2A> -Eigenschaftensatz auf <xref:System.Web.Security.ActiveDirectoryConnectionProtection.SignAndSeal> und SSL zur Auswahl wird die <xref:System.Web.Security.ActiveDirectoryMembershipProvider> Instanz zum Schützen dieser Verbindung.  
  
 Darüber hinaus müssen für eine gleichzeitige Bindung vorgenommen werden, die folgenden Bedingungen zutreffen:  
  
-   Der Directory-Server muss unter Windows Server 2003 ausgeführt werden.  
  
-   Das Betriebssystem von der Web-Server mit der <xref:System.Web.Security.ActiveDirectoryMembershipProvider> Instanz gleichzeitige Bindungsvorgänge (z. B. Windows Server 2003) unterstützen muss.  
  
 Wenn eine gleichzeitige Bindung verwendet wird, wird das Datum der letzte Anmeldung des Benutzers im Verzeichnis nicht aktualisiert. aus diesem Grund die <xref:System.Web.Security.ActiveDirectoryMembershipUser.LastLoginDate%2A> Eigenschaft kann nicht genutzt werden.  
  
 Führende und nachfolgende Leerzeichen abgeschnitten, aus der `username` Parameter.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="M:System.Web.Security.ActiveDirectoryMembershipProvider.ValidateUser(System.String,System.String)" /> method is called before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance is initialized.</exception>
      </Docs>
    </Member>
  </Members>
</Type>