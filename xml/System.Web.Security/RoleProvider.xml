<Type Name="RoleProvider" FullName="System.Web.Security.RoleProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8cbd2de5011f92b705732c2997689d8e7bd6ab78" /><Meta Name="ms.sourcegitcommit" Value="8b09499854b5b7b909802126edc1f1fca0054c10" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="02/01/2020" /><Meta Name="ms.locfileid" Value="76959813" /></Metadata><TypeSignature Language="C#" Value="public abstract class RoleProvider : System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit RoleProvider extends System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.RoleProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class RoleProvider&#xA;Inherits ProviderBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class RoleProvider abstract : System::Configuration::Provider::ProviderBase" />
  <TypeSignature Language="F#" Value="type RoleProvider = class&#xA;    inherit ProviderBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web.ApplicationServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Provider.ProviderBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Web, Version=2.0.0.0, Culture=Neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Definiert den Vertrag, den ASP.NET implementiert, um Rollenverwaltungsdienste unter Verwendung benutzerdefinierter Rollenanbieter bereitzustellen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.net Role Management ist so konzipiert, dass Sie problemlos eine Reihe von verschiedenen Rollen Anbietern für Ihre ASP.NET-Anwendungen verwenden können. Sie können die angegebenen Rollen Anbieter verwenden, die im .NET Framework enthalten sind, oder Sie können einen eigenen Anbieter implementieren.  
  
 Beim Implementieren eines benutzerdefinierten Rollen Anbieters müssen Sie den <xref:System.Web.Security.RoleProvider> abstrakten Klasse erben.  
  
 Es gibt zwei Hauptgründe für das Erstellen eines benutzerdefinierten Rollen Anbieters.  
  
-   Sie müssen Rollen Informationen in einer Datenquelle speichern, die nicht von den Rollen Anbietern unterstützt wird, die im .NET Framework enthalten sind, z. b. eine FoxPro-Datenbank, eine Oracle-Datenbank oder andere Datenquellen.  
  
-   Sie müssen Rollen Informationen mithilfe eines Datenbankschemas verwalten, das sich von dem Datenbankschema unterscheidet, das von den Anbietern verwendet wird, die mit dem .NET Framework ausgeliefert werden. Ein gängiges Beispiel hierfür sind Rollen Daten, die bereits in einer SQL Server Datenbank für ein Unternehmen oder eine Website vorhanden sind.  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Implementieren eines Rollen Anbieters</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected RoleProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; RoleProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Security.RoleProvider" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie müssen keinen Konstruktor für eine Klasse implementieren, die die <xref:System.Web.Security.RoleProvider> abstrakte Klasse erbt. Initialisierungs Werte für eine <xref:System.Web.Security.RoleProvider>-Implementierung werden an die <xref:System.Configuration.Provider.ProviderBase.Initialize%2A>-Methoden Implementierung übermittelt.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Implementieren eines Rollen Anbieters</related>
      </Docs>
    </Member>
    <Member MemberName="AddUsersToRoles">
      <MemberSignature Language="C#" Value="public abstract void AddUsersToRoles (string[] usernames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddUsersToRoles(string[] usernames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.AddUsersToRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub AddUsersToRoles (usernames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void AddUsersToRoles(cli::array &lt;System::String ^&gt; ^ usernames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberSignature Language="F#" Value="abstract member AddUsersToRoles : string[] * string[] -&gt; unit" Usage="roleProvider.AddUsersToRoles (usernames, roleNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames">Ein Zeichenfolgenarray mit Benutzernamen, die den angegebenen Rollen hinzugefügt werden sollen.</param>
        <param name="roleNames">Ein Zeichenfolgenarray mit Rollennamen, denen die angegebenen Benutzernamen hinzugefügt werden sollen.</param>
        <summary>Fügt die angegebenen Benutzernamen den angegebenen Rollen der konfigurierten <see langword="applicationName" /> hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.AddUsersToRoles%2A> wird von der <xref:System.Web.Security.Roles>-Klasse aufgerufen, um die angegebenen Benutzer den angegebenen Rollen in der Datenquelle zuzuordnen. Dem konfigurierten <xref:System.Web.Security.RoleProvider.ApplicationName%2A>werden Rollen hinzugefügt.  
  
 Wenn einer der angegebenen Rollennamen für den konfigurierten `applicationName`nicht gefunden wird, wird empfohlen, dass der Anbieter eine <xref:System.Configuration.Provider.ProviderException>auslöst.  
  
 Wenn einer der angegebenen Benutzernamen keinem der angegebenen Rollennamen für den konfigurierten `applicationName`zugeordnet ist, wird empfohlen, dass der Anbieter eine <xref:System.Configuration.Provider.ProviderException>auslöst.  
  
 Wenn einer der angegebenen Benutzernamen `null` ist oder eine leere Zeichenfolge ist, wird empfohlen, dass der Anbieter eine Ausnahme auslöst.  
  
 Wenn einer der angegebenen Rollennamen `null` ist oder eine leere Zeichenfolge ist, wird empfohlen, dass der Anbieter eine Ausnahme auslöst.  
  
 Wenn Ihre Datenquelle Transaktionen unterstützt, wird empfohlen, dass Sie jeden Add-Vorgang in eine Transaktion einschließen und ein Rollback der Transaktion ausführen und eine Ausnahme auslösen, wenn ein Add-Vorgang fehlschlägt.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt eine Beispiel Implementierung der <xref:System.Web.Security.RoleProvider.AddUsersToRoles%2A>-Methode.  
  
 [!code-csharp[System.Web.Security.IRoleProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#2)]
 [!code-vb[System.Web.Security.IRoleProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Implementieren eines Rollen Anbieters</related>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public abstract string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RoleProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Web.Security.RoleProvider.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Anwendung ab, für die Rolleninformationen gespeichert und abgerufen werden sollen, oder legt diesen fest.</summary>
        <value>Der Name der Anwendung, für die Rolleninformationen gespeichert und abgerufen werden sollen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der <xref:System.Web.Security.RoleProvider.ApplicationName%2A> wird von der <xref:System.Web.Security.Roles>-Klasse verwendet, um Benutzer und Rollen verschiedenen Anwendungen zuzuordnen. Dadurch können mehrere Anwendungen die gleiche Datenbank verwenden, um Benutzer-und Rollen Informationen zu speichern, ohne dass Konflikte zwischen doppelten Benutzernamen oder Rollennamen auftreten. Mehrere ASP.NET-Anwendungen können dieselbe Datenbank verwenden, indem Sie denselben Wert in der <xref:System.Web.Security.Roles.ApplicationName%2A>-Eigenschaft angeben. Die <xref:System.Web.Security.Roles.ApplicationName%2A>-Eigenschaft kann Programm gesteuert festgelegt werden, oder Sie kann in der Konfigurationsdatei für die Webanwendung mithilfe des `applicationName`-Attributs deklarativ festgelegt werden.  
  
 Wenn keine <xref:System.Web.Security.RoleProvider.ApplicationName%2A> Eigenschaft angegeben ist, wird empfohlen, den Wert für die <xref:System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath%2A>-Eigenschaft zu verwenden.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt eine Beispiel Implementierung der <xref:System.Web.Security.RoleProvider.ApplicationName%2A>-Eigenschaft.  
  
 [!code-csharp[System.Web.Security.IRoleProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#1)]
 [!code-vb[System.Web.Security.IRoleProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Implementieren eines Rollen Anbieters</related>
      </Docs>
    </Member>
    <Member MemberName="CreateRole">
      <MemberSignature Language="C#" Value="public abstract void CreateRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.CreateRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub CreateRole (roleName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void CreateRole(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="abstract member CreateRole : string -&gt; unit" Usage="roleProvider.CreateRole roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Der Name der zu erstellenden Rolle.</param>
        <summary>Fügt eine neue Rolle zur Datenquelle für die konfigurierte <see langword="applicationName" /> hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.CreateRole%2A> wird von der <xref:System.Web.Security.Roles.CreateRole%2A>-Methode der <xref:System.Web.Security.Roles>-Klasse aufgerufen, um der Datenquelle für die konfigurierte <xref:System.Web.Security.RoleProvider.ApplicationName%2A>die angegebene Rolle hinzuzufügen.  
  
 Wenn der angegebene Rollenname für den konfigurierten `applicationName`bereits vorhanden ist, `null`ist oder eine leere Zeichenfolge ist, wird empfohlen, dass der Anbieter eine Ausnahme auslöst.  
  
 Wenn der angegebene Rollenname ein Komma enthält, empfiehlt es sich, dass der Anbieter eine Ausnahme auslöst.  
  
 Wenn Ihre Datenquelle die Länge des Rollen namens einschränkt, z. b. durch eine Spalte fester Länge einer Tabelle in einer Datenbank, empfiehlt es sich, eine Ausnahme auszulösen, wenn der Rollenname die maximal zulässige Länge der Datenquelle überschreitet.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt eine Beispiel Implementierung der <xref:System.Web.Security.RoleProvider.CreateRole%2A>-Methode.  
  
 [!code-csharp[System.Web.Security.IRoleProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#3)]
 [!code-vb[System.Web.Security.IRoleProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Implementieren eines Rollen Anbieters</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteRole">
      <MemberSignature Language="C#" Value="public abstract bool DeleteRole (string roleName, bool throwOnPopulatedRole);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DeleteRole(string roleName, bool throwOnPopulatedRole) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.DeleteRole(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function DeleteRole (roleName As String, throwOnPopulatedRole As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool DeleteRole(System::String ^ roleName, bool throwOnPopulatedRole);" />
      <MemberSignature Language="F#" Value="abstract member DeleteRole : string * bool -&gt; bool" Usage="roleProvider.DeleteRole (roleName, throwOnPopulatedRole)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
        <Parameter Name="throwOnPopulatedRole" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="roleName">Der Name der zu löschenden Rolle.</param>
        <param name="throwOnPopulatedRole">Wenn der Wert <see langword="true" /> ist und <paramref name="roleName" /> über mindestens einen Member verfügt, wird eine Ausnahme ausgelöst, und <paramref name="roleName" /> wird nicht gelöscht.</param>
        <summary>Entfernt eine Rolle aus der Datenquelle für die konfigurierte <see langword="applicationName" />.</summary>
        <returns><see langword="true" />, wenn die Rolle erfolgreich gelöscht wurde, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.DeleteRole%2A> wird vom <xref:System.Web.Security.Roles.DeleteRole%2A> und den <xref:System.Web.Security.Roles.DeleteRole%2A> Methoden der <xref:System.Web.Security.Roles>-Klasse aufgerufen, um die angegebene Rolle aus der Datenquelle für die konfigurierte <xref:System.Web.Security.RoleProvider.ApplicationName%2A>zu löschen.  
  
 Wenn Sie eine Rolle aus der Datenquelle löschen, stellen Sie sicher, dass Sie auch alle Zuordnungen zwischen einem Benutzernamen und der gelöschten Rolle für den konfigurierten `applicationName`löschen.  
  
 Wenn `throwOnPopulatedRole` `true`ist und die durch den `roleName`-Parameter identifizierte Rolle mindestens ein Mitglied aufweist, lösen Sie eine <xref:System.Configuration.Provider.ProviderException> aus, und löschen Sie die Rolle nicht. Wenn `throwOnPopulatedRole` `false`ist, löschen Sie die Rolle, unabhängig davon, ob Sie leer ist.  
  
 Wenn der angegebene Rollenname nicht vorhanden ist, `null`ist oder eine leere Zeichenfolge ist, wird empfohlen, dass der Anbieter eine Ausnahme auslöst.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt eine Beispiel Implementierung der <xref:System.Web.Security.RoleProvider.DeleteRole%2A>-Methode.  
  
 [!code-csharp[System.Web.Security.IRoleProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#4)]
 [!code-vb[System.Web.Security.IRoleProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#4)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Implementieren eines Rollen Anbieters</related>
      </Docs>
    </Member>
    <Member MemberName="FindUsersInRole">
      <MemberSignature Language="C#" Value="public abstract string[] FindUsersInRole (string roleName, string usernameToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] FindUsersInRole(string roleName, string usernameToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.FindUsersInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function FindUsersInRole (roleName As String, usernameToMatch As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::String ^&gt; ^ FindUsersInRole(System::String ^ roleName, System::String ^ usernameToMatch);" />
      <MemberSignature Language="F#" Value="abstract member FindUsersInRole : string * string -&gt; string[]" Usage="roleProvider.FindUsersInRole (roleName, usernameToMatch)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
        <Parameter Name="usernameToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Die Rolle, in der gesucht werden soll.</param>
        <param name="usernameToMatch">Der zu suchende Benutzername.</param>
        <summary>Ruft ein Array von Benutzernamen in einer Rolle ab, die mit den angegebenen Benutzernamen übereinstimmen.</summary>
        <returns>Ein Zeichenfolgenarray, das die Namen aller Benutzer enthält, deren Benutzername mit <paramref name="usernameToMatch" /> übereinstimmt und die Mitglied der angegebenen Rolle sind.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.RoleProvider.FindUsersInRole%2A>-Methode wird von der <xref:System.Web.Security.Roles>-Klasse aufgerufen und gibt eine Liste von Benutzern in einer Rolle zurück, bei der der Benutzername eine Entsprechung des angegebenen `usernameToMatch` für den konfigurierten `applicationName`enthält. Unterstützung für Platzhalter ist basierend auf der Datenquelle enthalten. Benutzer werden in alphabetischer Reihenfolge nach Benutzername zurückgegeben.  
  
 Es wird empfohlen, dass Sie eine <xref:System.Configuration.Provider.ProviderException> auslösen, wenn `roleName` in der Datenquelle nicht vorhanden ist.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt eine Beispiel <xref:System.Web.Security.RoleProvider.FindUsersInRole%2A> Implementierung.  
  
 [!code-csharp[System.Web.Security.IRoleProvider#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#11)]
 [!code-vb[System.Web.Security.IRoleProvider#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#11)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Implementieren eines Rollen Anbieters</related>
      </Docs>
    </Member>
    <Member MemberName="GetAllRoles">
      <MemberSignature Language="C#" Value="public abstract string[] GetAllRoles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetAllRoles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.GetAllRoles" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetAllRoles () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::String ^&gt; ^ GetAllRoles();" />
      <MemberSignature Language="F#" Value="abstract member GetAllRoles : unit -&gt; string[]" Usage="roleProvider.GetAllRoles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft eine Liste aller Rollen für die konfigurierte <see langword="applicationName" /> ab.</summary>
        <returns>Ein Zeichenfolgenarray, das die Namen aller Rollen enthält, die in der Datenquelle für die konfigurierte <see langword="applicationName" /> gespeichert sind.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.GetAllRoles%2A> wird von der <xref:System.Web.Security.Roles.GetAllRoles%2A>-Methode der <xref:System.Web.Security.Roles>-Klasse aufgerufen, um eine Liste der Rollennamen aus der Datenquelle abzurufen. Nur die Rollen für den angegebenen <xref:System.Web.Security.RoleProvider.ApplicationName%2A> werden abgerufen.  
  
 Wenn keine Rollen für den konfigurierten `applicationName`vorhanden sind, wird empfohlen, dass der Anbieter ein Zeichen folgen Array ohne Elemente zurückgibt.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt eine Beispiel Implementierung der <xref:System.Web.Security.RoleProvider.GetAllRoles%2A>-Methode.  
  
 [!code-csharp[System.Web.Security.IRoleProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#5)]
 [!code-vb[System.Web.Security.IRoleProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#5)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Implementieren eines Rollen Anbieters</related>
      </Docs>
    </Member>
    <Member MemberName="GetRolesForUser">
      <MemberSignature Language="C#" Value="public abstract string[] GetRolesForUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetRolesForUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.GetRolesForUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetRolesForUser (username As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::String ^&gt; ^ GetRolesForUser(System::String ^ username);" />
      <MemberSignature Language="F#" Value="abstract member GetRolesForUser : string -&gt; string[]" Usage="roleProvider.GetRolesForUser username" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Der Benutzer, für den eine Liste der Rollen zurückgegeben werden soll.</param>
        <summary>Ruft eine Liste der Rollen für einen angegebenen Benutzer für das konfigurierte <see langword="applicationName" /> ab.</summary>
        <returns>Ein Zeichenfolgenarray, das die Namen aller Rollen des angegebenen Benutzers für den konfigurierten <see langword="applicationName" /> enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.GetRolesForUser%2A> wird von der <xref:System.Web.Security.Roles.GetRolesForUser%2A>-Methode der <xref:System.Web.Security.Roles>-Klasse aufgerufen, um die Rollennamen abzurufen, denen der angegebene Benutzer aus der Datenquelle zugeordnet ist. Nur die Rollen für die konfigurierten <xref:System.Web.Security.RoleProvider.ApplicationName%2A> werden abgerufen.  
  
 Wenn für den angegebenen Benutzer keine Rollen für den konfigurierten `applicationName`vorhanden sind, wird empfohlen, dass der Anbieter ein Zeichen folgen Array ohne Elemente zurückgibt.  
  
 Wenn der angegebene Benutzername `null` ist oder eine leere Zeichenfolge ist, wird empfohlen, dass der Anbieter eine Ausnahme auslöst.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt eine Beispiel Implementierung der <xref:System.Web.Security.RoleProvider.GetRolesForUser%2A>-Methode.  
  
 [!code-csharp[System.Web.Security.IRoleProvider#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#6)]
 [!code-vb[System.Web.Security.IRoleProvider#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#6)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Implementieren eines Rollen Anbieters</related>
      </Docs>
    </Member>
    <Member MemberName="GetUsersInRole">
      <MemberSignature Language="C#" Value="public abstract string[] GetUsersInRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetUsersInRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.GetUsersInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetUsersInRole (roleName As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::String ^&gt; ^ GetUsersInRole(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="abstract member GetUsersInRole : string -&gt; string[]" Usage="roleProvider.GetUsersInRole roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Der Name der Rolle, für die die Liste der Benutzer abgerufen werden soll.</param>
        <summary>Ruft eine Liste der Benutzer mit der angegebenen Rolle für die konfigurierte <see langword="applicationName" /> ab.</summary>
        <returns>Ein Zeichenfolgenarray mit den Namen aller Benutzer, die Mitglieder der angegebenen Rolle für die konfigurierte <see langword="applicationName" /> sind.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.GetUsersInRole%2A> wird von der <xref:System.Web.Security.Roles.GetUsersInRole%2A>-Methode der <xref:System.Web.Security.Roles>-Klasse aufgerufen, um die einer Rolle zugeordneten Benutzernamen aus der Datenquelle abzurufen. Nur die Rollen für die konfigurierten <xref:System.Web.Security.RoleProvider.ApplicationName%2A> werden abgerufen.  
  
 Wenn der angegebene Rollenname für den konfigurierten `applicationName` nicht vorhanden ist, oder wenn er `null` oder eine leere Zeichenfolge ist, wird empfohlen, dass der Anbieter eine Ausnahme auslöst.  
  
 Wenn keine Benutzer der angegebenen Rolle für den konfigurierten `applicationName`zugeordnet sind, wird empfohlen, dass der Anbieter ein Zeichen folgen Array ohne Elemente zurückgibt.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt eine Beispiel Implementierung der <xref:System.Web.Security.RoleProvider.GetUsersInRole%2A>-Methode.  
  
 [!code-csharp[System.Web.Security.IRoleProvider#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#7)]
 [!code-vb[System.Web.Security.IRoleProvider#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#7)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Implementieren eines Rollen Anbieters</related>
      </Docs>
    </Member>
    <Member MemberName="IsUserInRole">
      <MemberSignature Language="C#" Value="public abstract bool IsUserInRole (string username, string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUserInRole(string username, string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.IsUserInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsUserInRole (username As String, roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool IsUserInRole(System::String ^ username, System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="abstract member IsUserInRole : string * string -&gt; bool" Usage="roleProvider.IsUserInRole (username, roleName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Der zu suchende Benutzername.</param>
        <param name="roleName">Die Rolle, in der gesucht werden soll.</param>
        <summary>Ruft einen Wert ab, der angibt, ob der angegebene Benutzer die angegebene Rolle für den konfigurierten <see langword="applicationName" /> innehat.</summary>
        <returns><see langword="true" />, wenn der angegebene Benutzer die angegebene Rolle für den konfigurierten <see langword="applicationName" /> innehat, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.RoleProvider.IsUserInRole%2A>-Methode wird von der <xref:System.Web.Security.Roles.IsUserInRole%2A>-Methode der <xref:System.Web.Security.Roles>-Klasse aufgerufen, um zu bestimmen, ob der aktuell angemeldete Benutzer einer Rolle aus der Datenquelle für die konfigurierte <xref:System.Web.Security.Roles.ApplicationName%2A>zugeordnet ist.  
  
 Wenn der angegebene Benutzername `null` ist oder eine leere Zeichenfolge ist, wird empfohlen, dass der Anbieter eine Ausnahme auslöst.  
  
 Wenn der angegebene Rollenname `null` ist oder eine leere Zeichenfolge ist, wird empfohlen, dass der Anbieter eine Ausnahme auslöst.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt eine Beispiel Implementierung der <xref:System.Web.Security.RoleProvider.IsUserInRole%2A>-Methode.  
  
 [!code-csharp[System.Web.Security.IRoleProvider#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#8)]
 [!code-vb[System.Web.Security.IRoleProvider#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#8)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Implementieren eines Rollen Anbieters</related>
      </Docs>
    </Member>
    <Member MemberName="RemoveUsersFromRoles">
      <MemberSignature Language="C#" Value="public abstract void RemoveUsersFromRoles (string[] usernames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveUsersFromRoles(string[] usernames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.RemoveUsersFromRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub RemoveUsersFromRoles (usernames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void RemoveUsersFromRoles(cli::array &lt;System::String ^&gt; ^ usernames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberSignature Language="F#" Value="abstract member RemoveUsersFromRoles : string[] * string[] -&gt; unit" Usage="roleProvider.RemoveUsersFromRoles (usernames, roleNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames">Ein Zeichenfolgenarray mit Benutzernamen, die aus den angegebenen Rollen entfernt werden sollen.</param>
        <param name="roleNames">Ein Zeichenfolgenarray mit Rollennamen, aus denen Benutzernamen entfernt werden sollen.</param>
        <summary>Entfernt die angegebenen Benutzernamen aus den angegebenen Rollen der konfigurierten <see langword="applicationName" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.RemoveUsersFromRoles%2A> wird von den Methoden <xref:System.Web.Security.Roles.RemoveUserFromRole%2A>, <xref:System.Web.Security.Roles.RemoveUsersFromRole%2A>, <xref:System.Web.Security.Roles.RemoveUserFromRoles%2A> und <xref:System.Web.Security.Roles.RemoveUsersFromRoles%2A> der <xref:System.Web.Security.Roles>-Klasse aufgerufen, um die angegebenen Benutzer aus den angegebenen Rollen in der Datenquelle zu entfernen. Nur Rollen für die konfigurierten <xref:System.Web.Security.RoleProvider.ApplicationName%2A> werden geändert.  
  
 Wenn einer der angegebenen Rollennamen für den konfigurierten `applicationName`nicht gefunden wird, wird empfohlen, dass der Anbieter eine <xref:System.Configuration.Provider.ProviderException>auslöst.  
  
 Wenn einer der angegebenen Benutzernamen keinem der angegebenen Rollennamen für den konfigurierten `applicationName`zugeordnet ist, wird empfohlen, dass der Anbieter eine <xref:System.Configuration.Provider.ProviderException>auslöst.  
  
 Wenn einer der angegebenen Benutzernamen `null` ist oder eine leere Zeichenfolge ist, wird empfohlen, dass der Anbieter eine Ausnahme auslöst.  
  
 Wenn einer der angegebenen Rollennamen `null` ist oder eine leere Zeichenfolge ist, wird empfohlen, dass der Anbieter eine Ausnahme auslöst.  
  
 Wenn Ihre Datenquelle Transaktionen unterstützt, empfiehlt es sich, jeden Entfernungs Vorgang in eine Transaktion einzubeziehen und einen Rollback für die Transaktion auszuführen und eine Ausnahme auszulösen, wenn ein Entfernungs Vorgang fehlschlägt.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt eine Beispiel Implementierung der <xref:System.Web.Security.RoleProvider.RemoveUsersFromRoles%2A>-Methode.  
  
 [!code-csharp[System.Web.Security.IRoleProvider#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#9)]
 [!code-vb[System.Web.Security.IRoleProvider#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#9)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Implementieren eines Rollen Anbieters</related>
      </Docs>
    </Member>
    <Member MemberName="RoleExists">
      <MemberSignature Language="C#" Value="public abstract bool RoleExists (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RoleExists(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.RoleExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function RoleExists (roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool RoleExists(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="abstract member RoleExists : string -&gt; bool" Usage="roleProvider.RoleExists roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Der Name der Rolle, die in der Datenquelle gesucht werden soll.</param>
        <summary>Ruft einen Wert ab, der angibt, ob der angegebene Rollenname bereits in der Rollendatenquelle für die konfigurierte <see langword="applicationName" /> vorhanden ist.</summary>
        <returns><see langword="true" />, wenn der Rollenname bereits in der Datenquelle für die konfigurierte <see langword="applicationName" /> vorhanden ist, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.RoleExists%2A> wird von der <xref:System.Web.Security.Roles.RoleExists%2A>-Methode der <xref:System.Web.Security.Roles>-Klasse aufgerufen, um zu bestimmen, ob ein Rollenname in der Datenquelle für die konfigurierte <xref:System.Web.Security.Roles.ApplicationName%2A>vorhanden ist.  
  
 Wenn der angegebene Rollenname `null` ist oder eine leere Zeichenfolge ist, wird empfohlen, dass der Anbieter eine Ausnahme auslöst.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt eine Beispiel Implementierung der <xref:System.Web.Security.RoleProvider.RoleExists%2A>-Methode.  
  
 [!code-csharp[System.Web.Security.IRoleProvider#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#10)]
 [!code-vb[System.Web.Security.IRoleProvider#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#10)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Implementieren eines Rollen Anbieters</related>
      </Docs>
    </Member>
  </Members>
</Type>
