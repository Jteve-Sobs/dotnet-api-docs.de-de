<Type Name="AuthorizationStoreRoleProvider" FullName="System.Web.Security.AuthorizationStoreRoleProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="33fb2c46646de9581bd2d2bb7b2eaf36694a5f03" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70685842" /></Metadata><TypeSignature Language="C#" Value="public class AuthorizationStoreRoleProvider : System.Web.Security.RoleProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AuthorizationStoreRoleProvider extends System.Web.Security.RoleProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.AuthorizationStoreRoleProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class AuthorizationStoreRoleProvider&#xA;Inherits RoleProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class AuthorizationStoreRoleProvider : System::Web::Security::RoleProvider" />
  <TypeSignature Language="F#" Value="type AuthorizationStoreRoleProvider = class&#xA;    inherit RoleProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Security.RoleProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Verwaltet Speicher der Rollenmitgliedschaftsinformationen für eine ASP.NET-Anwendung in einem Autorisierungs-Manager-Richtlinienspeicher. Dies erfolgt in einer XML-Datei, in einem Active Directory oder auf einem Active Directory-Anwendungsmodus-Server.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Klasse wird von der- <xref:System.Web.Security.Roles> Klasse <xref:System.Web.Security.RolePrincipal> und der-Klasse verwendet, um Rollen Verwaltungsdienste für eine ASP.NET-Anwendung mit einem Autorisierungs-Manager-Speicher bereitzustellen. Mit der Rollen Verwaltung können Sie verschiedene Autorisierungs Ebenen für Ihre Anwendung angeben. Der Autorisierungs-Manager kann über die Microsoft Management Console aufgerufen werden.  
  
 Das <xref:System.Web.Security.AuthorizationStoreRoleProvider> -Objekt funktioniert sowohl mit der Windows-Authentifizierung als auch mit dem Formular Authentifizierungsmodus.  
  
 Sie können das <xref:System.Web.Security.AuthorizationStoreRoleProvider> Objekt so konfigurieren, dass entweder eine lokale XML-Datei oder ein Active Directory oder ein ADAM-Server (Active Directory Application Mode) verwendet wird. Wenn eine lokale Datei verwendet wird, sollte die Verbindungs Zeichenfolge wie im folgenden Beispiel aussehen.  
  
```  
msxml://<path to xml file>  
```  
  
 Wenn die lokale Datei in der Verzeichnisstruktur einer ASP.NET-Webanwendung gespeichert ist, können Sie das Zeichen Tilde ("~") verwenden, um das Stammverzeichnis anzugeben. Um beispielsweise anzugeben, dass die lokale Datei im Datenverzeichnis der Webanwendung gespeichert ist, verwenden Sie eine Verbindungs Zeichenfolge, die dem folgenden Beispiel ähnelt.  
  
 `msxml://~\App_Data\datafilename.xml`  
  
> [!IMPORTANT]
>  Das Speichern einer XML-Datendatei im Webanwendungs Verzeichnis stellt eine potenzielle Sicherheitsbedrohung dar. Standardmäßig bedient IIS XML-Datendateien im Web. Um die Sicherheit zu verbessern, wenn eine lokale Datendatei in einer ASP.NET-Anwendung verwendet wird, sollten Sie `App_Data` die Datendatei im Verzeichnis speichern. Im `App_Data` Verzeichnis gespeicherte Dateien werden nicht für das Web bereitgestellt.  
  
 Wenn Sie einen Active Directory oder einen ADAM-Server für den Richtlinien Speicher verwenden, sollte die Verbindungs Zeichenfolge dem folgenden Beispiel ähneln.  
  
 `msldap://myserver/CN=MyAzManStore,OU=MyOU,DC=MyDomain,DC=MyDC,DC=Com`  
  
 Die Ausnahmen, die in der- <xref:System.Web.Security.AuthorizationStoreRoleProvider> Dokumentation für Objektmethoden aufgelistet werden, sind die Ausnahmen <xref:System.Web.Security.AuthorizationStoreRoleProvider> , die vom-Objekt ausgelöst werden. Da der Anbieter auf der zugrunde liegenden Authentifizierungs-Manager-Laufzeit <xref:System.Runtime.InteropServices.COMException> basiert, kann eine-Ausnahme <xref:System.Web.Security.AuthorizationStoreRoleProvider> ausgelöst werden, wenn das-Objekt einen Methodenaufruf an die Authentifizierungs-Manager-Laufzeit weiterleitet.  
  
> [!IMPORTANT]
>  Für <xref:System.Web.Security.AuthorizationStoreRoleProvider> das-Objekt gelten die folgenden Anforderungen für die Ausführung in teilweise vertrauenswürdigen Umgebungen:  
>   
>  Wenn Sie einen dateibasierten Richtlinien Speicher in einer ASP.NET-Anwendung verwenden, bestimmen die Datei-e/a-Berechtigungen, die von der aktuellen Vertrauens Ebene erteilt wurden, ob Lese-und Schreib Aktionen vom Anbieter zugelassen werden. Die ASP.NET-Anwendung muss über eine Leseberechtigung für die Datei verfügen, um Daten aus dem Richtlinien Speicher lesen zu können, und muss über die Berechtigung Schreiben verfügen, um neue Informationen zu speichern oder vorhandene Informationen im Richtlinien Speicher zu aktualisieren. Die Standardrichtlinien Datei für die Medien vertrauenswürdige Anwendung gewährt einer ASP.NET-Anwendung Lese-/Schreibberechtigungen in Ihrem Anwendungsverzeichnis. Die Standardrichtlinien Datei mit niedriger Vertrauenswürdigkeit erteilt nur eine ASP.NET-Anwendung Leseberechtigung in Ihrem Anwendungsverzeichnis. Außerdem muss die Prozess Identität, unter der die ASP.NET-Anwendung ausgeführt wird, über Dateisystem Berechtigungen zum Lesen und/oder Schreiben der Richtlinien Datei verfügen.  
>   
>  Wenn Sie einen Active Directory oder einen ADAM-Server verwenden, benötigt die ASP.NET-Anwendung die Berechtigung "nicht <xref:System.Web.Security.AuthorizationStoreRoleProvider> verwalteter Code", da der interne Objektcode COM-Interop verwendet.  
>   
>  Wenn das <xref:System.Web.Security.AuthorizationStoreRoleProvider> Objekt außerhalb von ASP.NET verwendet wird, benötigt der aufrufenden Code die Berechtigung "nicht verwalteter Code".  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt eine Web. config-Datei, die für <xref:System.Web.Security.AuthorizationStoreRoleProvider> die Verwendung von für die Rollen Verwaltung festgelegt ist.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="AuthorizationServices" connectionString="msxml://~\App_Data\SampleStore.xml" />  
  </connectionStrings>  
  
  <system.web>  
  
    <authentication mode="Windows" />  
    <identity impersonate="true" />  
  
    <roleManager defaultProvider="AuthorizationStoreRoleProvider"   
      enabled="true"  
      cacheRolesInCookie="true"  
      cookieName=".ASPROLES"  
      cookieTimeout="30"  
      cookiePath="/"  
      cookieRequireSSL="false"  
      cookieSlidingExpiration="true"  
      cookieProtection="All" >  
      <providers>  
        <clear />  
          <add  
            name="AuthorizationStoreRoleProvider"  
            type="System.Web.Security.AuthorizationStoreRoleProvider"  
            connectionStringName="AuthorizationServices"  
            applicationName="SampleApplication"   
            cacheRefreshInterval="60"  
            scopeName="" />  
      </providers>  
    </roleManager>  
  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Grundlegendes zur Rollen Verwaltung ASP.net</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AuthorizationStoreRoleProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AuthorizationStoreRoleProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der <xref:System.Web.Security.AuthorizationStoreRoleProvider.%23ctor%2A> -Konstruktor wird von ASP.NET aufgerufen, um eine Instanz <xref:System.Web.Security.AuthorizationStoreRoleProvider> der-Klasse zu erstellen, wie in der Konfiguration für die Anwendung angegeben. Dieser Konstruktor ist nicht für die Verwendung im Code vorgesehen.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Grundlegendes zur Rollen Verwaltung ASP.net</related>
      </Docs>
    </Member>
    <Member MemberName="AddUsersToRoles">
      <MemberSignature Language="C#" Value="public override void AddUsersToRoles (string[] usernames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AddUsersToRoles(string[] usernames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.AddUsersToRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub AddUsersToRoles (usernames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void AddUsersToRoles(cli::array &lt;System::String ^&gt; ^ usernames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberSignature Language="F#" Value="override this.AddUsersToRoles : string[] * string[] -&gt; unit" Usage="authorizationStoreRoleProvider.AddUsersToRoles (usernames, roleNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames">Ein Zeichenfolgenarray mit Benutzernamen, die den angegebenen Rollen hinzugefügt werden sollen.</param>
        <param name="roleNames">Ein Zeichenfolgenarray mit Rollennamen, denen die angegebenen Benutzernamen hinzugefügt werden sollen.</param>
        <summary>Fügt jeder der angegebenen Rollen die angegebenen Benutzernamen hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.AuthorizationStoreRoleProvider.AddUsersToRoles%2A> -Methode wird von der <xref:System.Web.Security.Roles> -Klasse aufgerufen, um einem oder mehreren Benutzern eine oder mehrere Rollen im Authorization-Manager-Datenspeicher zuzuordnen, der in der Konfigurationsdatei der ASP.NET-Anwendung (Web. config) angegeben ist. Diese <xref:System.Web.Security.Roles.AddUserToRole%2A?displayProperty=nameWithType>Methode wird von den Methoden, <xref:System.Web.Security.Roles.AddUserToRoles%2A?displayProperty=nameWithType>, <xref:System.Web.Security.Roles.AddUsersToRole%2A?displayProperty=nameWithType>und der <xref:System.Web.Security.Roles.AddUsersToRoles%2A?displayProperty=nameWithType> <xref:System.Web.Security.Roles> -Klasse aufgerufen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird einem oder mehreren Benutzern eine Rolle hinzugefügt oder ein Benutzer aus einer Rolle entfernt. Ein Beispiel für eine Web. config-Datei, die die Rollen Verwaltung ermöglicht <xref:System.Web.Security.AuthorizationStoreRoleProvider>, finden Sie unter.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/adduserstorolecs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/adduserstorolevb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Einer der angegebenen Benutzernamen ist <see langword="null" />.  
  
- oder - 
Einer der angegebenen Rollennamen ist <see langword="null" />.  
  
- oder - 
 <paramref name="usernames" /> ist <see langword="null" />.  
  
- oder - 
 <paramref name="roleNames" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Einer der angegebenen Benutzernamen ist eine leere Zeichenfolge oder enthält ein Komma (,).  
  
- oder - 
Einer der angegebenen Rollennamen ist eine leere Zeichenfolge oder enthält ein Komma (,).  
  
- oder - 
 <paramref name="usernames" /> enthält ein doppeltes Element.  
  
- oder - 
 <paramref name="roleNames" /> enthält ein doppeltes Element.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Der konfigurierte <see langword="applicationName" /> wurde nicht gefunden.  
  
- oder - 
Der konfigurierte <see langword="scopeName" /> wurde nicht gefunden.  
  
- oder - 
Die Laufzeit für Autorisierungs-Manager ist auf dem Server nicht installiert.</exception>
        <exception cref="T:System.IO.FileNotFoundException">Das <see langword="connectionStringName" />-Attribut verweist auf eine Verbindungszeichenfolge zu einer nicht vorhandenen Datei.</exception>
        <exception cref="T:System.Web.HttpException">Die <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" />-Instanz wird mit einem dateibasierten Richtlinienspeicher konfiguriert, und auf der aktuellen Vertrauensebene ist kein Lesezugriff auf die Datei möglich.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Grundlegendes zur Rollen Verwaltung ASP.net</related>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public override string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Autorisierungsspeicheranwendung ab, für die Rolleninformationen gespeichert und abgerufen werden sollen, oder legt diesen fest.</summary>
        <value>Der Name der Autorisierungsspeicheranwendung, für die Rolleninformationen gespeichert und abgerufen werden sollen. Der <see cref="P:System.Web.HttpRequest.ApplicationPath" />-Eigenschaftswert ist der Standardwert für die aktuelle <see cref="P:System.Web.HttpContext.Request" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wird von verwendet, um Benutzern und Rollen verschiedene Autorisierungs-Manager-Anwendungen zuzuordnen, sodass mehrere ASP.NET-Anwendungen denselben Autorisierungs-Manager-Richtlinien Speicher verwenden können, um Rollen Informationen ohne zu speichern. <xref:System.Web.Security.AuthorizationStoreRoleProvider> <xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> Ausführen von Konflikten zwischen doppelten Rollennamen. Alternativ können mehrere ASP.NET-Anwendungen denselben Richtlinien Speicher verwenden, indem Sie denselben Wert in der <xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> -Eigenschaft angeben. Die <xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> -Eigenschaft kann Programm gesteuert festgelegt werden, oder Sie kann in der Datei "Web. config" der Anwendung mithilfe des `applicationName` -Attributs deklarativ festgelegt werden.  
  
 Wenn für das `applicationName` -Attribut in der Datei "Web. config" kein Wert angegeben wird, <xref:System.Web.HttpRequest.ApplicationPath%2A?displayProperty=nameWithType> wird der-Eigenschafts <xref:System.Web.HttpContext.Request%2A?displayProperty=nameWithType> Wert des aktuellen-Objekts verwendet.  
  
> [!NOTE]
>  Autorisierungs-Manager-Anwendungsnamen dürfen nicht das Zeichen "/" enthalten, das <xref:System.Web.HttpRequest.ApplicationPath%2A?displayProperty=nameWithType> in der-Eigenschaft enthalten ist. Daher kann der Standardwert für die <xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> -Eigenschaft nicht als Autorisierungs-Manager-Anwendungsname verwendet werden. in der Web. config-Datei der Anwendung müssen Sie immer ein `applicationName` -Attribut im `provider` zu konfigurierenden Element angeben. Ihre <xref:System.Web.Security.AuthorizationStoreRoleProvider> -Instanz.  
  
> [!CAUTION]
>  Da eine einzelne Standardrollen Anbieter-Instanz für alle Anforderungen verwendet wird, die von einem <xref:System.Web.HttpApplication> Objekt bereitgestellt werden, können mehrere Anforderungen gleichzeitig ausgeführt werden, und <xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> es wird versucht, den Eigenschafts Wert festzulegen. Die <xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> -Eigenschaft ist für mehrere Schreibvorgänge nicht Thread sicher. das <xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> Ändern des Eigenschafts Werts kann zu unerwartetem Verhalten führen, wenn mehrere Benutzer einer Anwendung vorhanden sind. Es wird empfohlen, das Schreiben von Code zu vermeiden, mit dem <xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> Benutzer die Eigenschaft festlegen können, sofern dies nicht erforderlich ist. Ein Beispiel für eine Anwendung, in der <xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> die-Eigenschaft festgelegt werden kann, ist eine administrative Anwendung, die Rollen Daten für mehrere Anwendungen verwaltet. Eine solche Anwendung sollte eine Einzelbenutzer Anwendung und keine Webanwendung sein.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt das-Element im `system.web` -Abschnitt der Datei Web. config für eine ASP.NET-Anwendung. Gibt die Instanz der Anwendung <xref:System.Web.Security.AuthorizationStoreRoleProvider> an und legt die <xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> -Eigenschaft `MyApplication`auf fest.  
  
```  
<roleManager defaultProvider="AuthorizationStoreProvider"   
  enabled="true"  
  cacheRolesInCookie="true"  
  cookieName=".ASPROLES"  
  cookieTimeout="30"  
  cookiePath="/"  
  cookieRequireSSL="false"  
  cookieSlidingExpiration="true"  
  cookieProtection="All" >  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.AuthorizationStoreRoleProvider"  
      connectionStringName="AuthorizationStoreServices"   
      scopeName="MyScope"  
      applicationName="MyApplication" />  
  </providers>  
</roleManager>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException"><see cref="P:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName" /> wurde auf eine Zeichenfolge festzulegen versucht, die länger als 256 Zeichen ist.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Grundlegendes zur Rollen Verwaltung ASP.net</related>
      </Docs>
    </Member>
    <Member MemberName="CacheRefreshInterval">
      <MemberSignature Language="C#" Value="public int CacheRefreshInterval { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CacheRefreshInterval" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.AuthorizationStoreRoleProvider.CacheRefreshInterval" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CacheRefreshInterval As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CacheRefreshInterval { int get(); };" />
      <MemberSignature Language="F#" Value="member this.CacheRefreshInterval : int" Usage="System.Web.Security.AuthorizationStoreRoleProvider.CacheRefreshInterval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der Minuten zwischen den Cacheaktualisierungen der Richtlinienspeicherdaten ab.</summary>
        <value>Die Anzahl der Minuten zwischen den Aktualisierungen von zwischengespeicherten Richtlinienspeicherdaten. Der Standardwert ist 60.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Grundlegendes zur Rollen Verwaltung ASP.net</related>
      </Docs>
    </Member>
    <Member MemberName="CreateRole">
      <MemberSignature Language="C#" Value="public override void CreateRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CreateRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.CreateRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CreateRole (roleName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CreateRole(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.CreateRole : string -&gt; unit" Usage="authorizationStoreRoleProvider.CreateRole roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Der Name der zu erstellenden Rolle.</param>
        <summary>Fügt dem Rollenautorisierungs-Manager-Richtlinienspeicher eine neue Rolle hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.AuthorizationStoreRoleProvider.CreateRole%2A> -Methode wird von der <xref:System.Web.Security.Roles> -Klasse aufgerufen, um eine Rolle im Autorisierungs-Manager-Datenspeicher zu erstellen, der in der Konfigurationsdatei der ASP.NET-Anwendung (Web. config) angegeben ist.  
  
 Bei Rollennamen wird Groß-/Kleinschreibung nicht beachtet.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine neue Rolle im Autorisierungs-Manager-Richtlinien Speicher erstellt. Ein Beispiel für eine Web. config-Datei, die die Rollen Verwaltung ermöglicht <xref:System.Web.Security.AuthorizationStoreRoleProvider>, finden Sie unter.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/createrolecs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/createrolevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="roleName" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="roleName" /> ist eine leere Zeichenfolge.  
  
- oder - 
 <paramref name="roleName" /> enthält ein Komma.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Der konfigurierte <see langword="applicationName" /> wurde nicht gefunden.  
  
- oder - 
Der konfigurierte <see langword="scopeName" /> wurde nicht gefunden.  
  
- oder - 
Die Laufzeit für Autorisierungs-Manager ist auf dem Server nicht installiert.</exception>
        <exception cref="T:System.IO.FileNotFoundException">Das <see langword="connectionStringName" />-Attribut verweist auf eine Verbindungszeichenfolge zu einer nicht vorhandenen Datei.</exception>
        <exception cref="T:System.Web.HttpException">Die <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" />-Instanz wird mit einem dateibasierten Richtlinienspeicher konfiguriert, und auf der aktuellen Vertrauensebene ist kein Lesezugriff auf die Datei möglich.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Grundlegendes zur Rollen Verwaltung ASP.net</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteRole">
      <MemberSignature Language="C#" Value="public override bool DeleteRole (string roleName, bool throwOnPopulatedRole);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool DeleteRole(string roleName, bool throwOnPopulatedRole) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.DeleteRole(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DeleteRole (roleName As String, throwOnPopulatedRole As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool DeleteRole(System::String ^ roleName, bool throwOnPopulatedRole);" />
      <MemberSignature Language="F#" Value="override this.DeleteRole : string * bool -&gt; bool" Usage="authorizationStoreRoleProvider.DeleteRole (roleName, throwOnPopulatedRole)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
        <Parameter Name="throwOnPopulatedRole" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="roleName">Der Name der zu löschenden Rolle.</param>
        <param name="throwOnPopulatedRole">Wenn der Wert <see langword="true" /> ist und <paramref name="roleName" /> über einen oder mehrere Mitglieder verfügt, wird eine Ausnahme ausgelöst.</param>
        <summary>Entfernt eine Rolle aus dem Autorisierungsmanager-Richtlinienspeicher.</summary>
        <returns><see langword="true" />, wenn die Rolle gelöscht wurde, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.AuthorizationStoreRoleProvider.DeleteRole%2A> -Methode wird von der <xref:System.Web.Security.Roles> -Klasse aufgerufen, um eine Rolle aus dem Autorisierungs-Manager-Richtlinien Speicher zu löschen, der in der Konfigurationsdatei der ASP.NET-Anwendung (Web. config) angegeben ist. Wenn eine Rolle gelöscht wird, wird auch die Liste der Benutzer, die dieser Rolle zugeordnet sind, aus dem Richtlinien Speicher gelöscht. Die Benutzerinformationen in der Datenbank sind nicht betroffen.  
  
 Wenn `throwOnPopulatedRole` `roleName` ist `true`, wird eine Ausnahme ausgelöst, und die Rolle wird nicht gelöscht, wenn die durch den-Parameter identifizierte Rolle mindestens ein-Element aufweist. Wenn  `throwOnPopulatedRole` den Wert hat, wird die Rolle gelöscht, unabhängig davon, ob Sie leer ist. `false`  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine Rolle aus dem Autorisierungs-Manager-Richtlinien Speicher gelöscht. Ein Beispiel für eine Web. config-Datei, die die Rollen Verwaltung ermöglicht <xref:System.Web.Security.AuthorizationStoreRoleProvider>, finden Sie unter.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/deleterolecs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/deleterolevb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="roleName" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="roleName" /> ist eine leere Zeichenfolge.  
  
- oder - 
 <paramref name="roleName" /> enthält ein Komma.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException"><paramref name="roleName" /> verfügt über mindestens ein Mitglied, und <paramref name="throwOnPopulatedRole" /> ist <see langword="true" />.  
  
- oder - 
Der konfigurierte <see langword="applicationName" /> wurde nicht gefunden.  
  
- oder - 
Der konfigurierte <see langword="scopeName" /> wurde nicht gefunden.  
  
- oder - 
Die Laufzeit für Autorisierungs-Manager ist auf dem Server nicht installiert.</exception>
        <exception cref="T:System.IO.FileNotFoundException">Das <see langword="connectionStringName" />-Attribut verweist auf eine Verbindungszeichenfolge zu einer nicht vorhandenen Datei.</exception>
        <exception cref="T:System.Web.HttpException">Die <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" />-Instanz wird mit einem dateibasierten Richtlinienspeicher konfiguriert, und auf der aktuellen Vertrauensebene ist kein Lesezugriff auf die Datei möglich.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Grundlegendes zur Rollen Verwaltung ASP.net</related>
      </Docs>
    </Member>
    <Member MemberName="FindUsersInRole">
      <MemberSignature Language="C#" Value="public override string[] FindUsersInRole (string roleName, string usernameToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] FindUsersInRole(string roleName, string usernameToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.FindUsersInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindUsersInRole (roleName As String, usernameToMatch As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ FindUsersInRole(System::String ^ roleName, System::String ^ usernameToMatch);" />
      <MemberSignature Language="F#" Value="override this.FindUsersInRole : string * string -&gt; string[]" Usage="authorizationStoreRoleProvider.FindUsersInRole (roleName, usernameToMatch)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
        <Parameter Name="usernameToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Die Rolle, in der gesucht werden soll.</param>
        <param name="usernameToMatch">Der zu suchende Benutzername.</param>
        <summary>Diese Methode wird vom Rollenanbieter für Autorisierungsspeicher nicht unterstützt.</summary>
        <returns>Ein Zeichenfolgenarray, das die Namen aller Benutzer enthält, deren Benutzername mit <paramref name="usernameToMatch" /> übereinstimmt und die Mitglieder der angegebenen Rolle sind.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Eine nicht unterstützte Methode wurde aufgerufen.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Grundlegendes zur Rollen Verwaltung ASP.net</related>
      </Docs>
    </Member>
    <Member MemberName="GetAllRoles">
      <MemberSignature Language="C#" Value="public override string[] GetAllRoles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetAllRoles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.GetAllRoles" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAllRoles () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetAllRoles();" />
      <MemberSignature Language="F#" Value="override this.GetAllRoles : unit -&gt; string[]" Usage="authorizationStoreRoleProvider.GetAllRoles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft eine Liste aller Rollen für die Anwendung ab.</summary>
        <returns>Ein Zeichenfolgenarray, das die Namen aller für eine bestimmte Anwendung im Autorisierungs-Manager-Richtlinienspeicher gespeicherten Rollen enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.AuthorizationStoreRoleProvider.GetAllRoles%2A> -Methode wird von der <xref:System.Web.Security.Roles> -Klasse aufgerufen, um eine Liste aller Rollen im Autorisierungs-Manager-Richtlinien Speicher abzurufen, der in der Konfigurationsdatei der ASP.NET-Anwendung (Web. config) angegeben ist.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die <xref:System.Web.Security.Roles.GetAllRoles%2A> -Methode verwendet, um die Liste der Rollen für eine Anwendung zu erhalten und die <xref:System.Web.UI.WebControls.GridView?displayProperty=nameWithType> Ergebnisse an ein-Steuerelement zu binden. Ein Beispiel für eine Web. config-Datei, die die Rollen Verwaltung ermöglicht <xref:System.Web.Security.AuthorizationStoreRoleProvider>, finden Sie unter.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/createrolecs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/createrolevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">Der konfigurierte <see langword="applicationName" /> wurde nicht gefunden.  
  
- oder - 
Der konfigurierte <see langword="scopeName" /> wurde nicht gefunden.  
  
- oder - 
Die Laufzeit für Autorisierungs-Manager ist auf dem Server nicht installiert.</exception>
        <exception cref="T:System.IO.FileNotFoundException">Das <see langword="connectionStringName" />-Attribut verweist auf eine Verbindungszeichenfolge zu einer nicht vorhandenen Datei.</exception>
        <exception cref="T:System.Web.HttpException">Die <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" />-Instanz wird mit einem dateibasierten Richtlinienspeicher konfiguriert, und auf der aktuellen Vertrauensebene ist kein Lesezugriff auf die Datei möglich.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Grundlegendes zur Rollen Verwaltung ASP.net</related>
      </Docs>
    </Member>
    <Member MemberName="GetRolesForUser">
      <MemberSignature Language="C#" Value="public override string[] GetRolesForUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetRolesForUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.GetRolesForUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetRolesForUser (username As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetRolesForUser(System::String ^ username);" />
      <MemberSignature Language="F#" Value="override this.GetRolesForUser : string -&gt; string[]" Usage="authorizationStoreRoleProvider.GetRolesForUser username" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Der Benutzer, für den eine Liste der Rollen zurückgegeben werden soll.</param>
        <summary>Ruft eine Liste der Rollen ab, die ein Benutzer innehat.</summary>
        <returns>Ein Zeichenfolgenarray, das die Namen aller Rollen des angegebenen Benutzers enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.AuthorizationStoreRoleProvider.GetRolesForUser%2A> -Methode wird von der <xref:System.Web.Security.Roles> -Klasse aufgerufen, um eine Liste der Rollen eines angegebenen Benutzers aus dem Autorisierungs-Manager-Richtlinien Speicher abzurufen, der in der Konfigurationsdatei der ASP.NET-Anwendung (Web. config) angegeben ist.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die <xref:System.Web.Security.Roles.GetRolesForUser%2A> -Methode verwendet, um eine Liste der Rollen für einen angegebenen Benutzer abzurufen und an <xref:System.Web.UI.WebControls.GridView?displayProperty=nameWithType> ein-Steuerelement zu binden. Ein Beispiel für eine Web. config-Datei, die die Rollen Verwaltung ermöglicht <xref:System.Web.Security.AuthorizationStoreRoleProvider>, finden Sie unter.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/ViewRolescs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/ViewRolesvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="username" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="username" /> enthält ein Komma.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Der konfigurierte <see langword="applicationName" /> wurde nicht gefunden.  
  
- oder - 
Der konfigurierte <see langword="scopeName" /> wurde nicht gefunden.  
  
- oder - 
Die Laufzeit für Autorisierungs-Manager ist auf dem Server nicht installiert.</exception>
        <exception cref="T:System.IO.FileNotFoundException">Das <see langword="connectionStringName" />-Attribut verweist auf eine Verbindungszeichenfolge zu einer nicht vorhandenen Datei.</exception>
        <exception cref="T:System.Web.HttpException">Die <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" />-Instanz wird mit einem dateibasierten Richtlinienspeicher konfiguriert, und auf der aktuellen Vertrauensebene ist kein Lesezugriff auf die Datei möglich.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Grundlegendes zur Rollen Verwaltung ASP.net</related>
      </Docs>
    </Member>
    <Member MemberName="GetUsersInRole">
      <MemberSignature Language="C#" Value="public override string[] GetUsersInRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetUsersInRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.GetUsersInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetUsersInRole (roleName As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetUsersInRole(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.GetUsersInRole : string -&gt; string[]" Usage="authorizationStoreRoleProvider.GetUsersInRole roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Der Name der Rolle, für die die Benutzerliste abgerufen werden soll.</param>
        <summary>Ruft eine Liste der Benutzer mit der angegebenen Rolle ab.</summary>
        <returns>Ein Zeichenfolgenarray mit den Namen aller Benutzer, die Mitglieder der angegebenen Rolle sind.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.AuthorizationStoreRoleProvider.GetUsersInRole%2A> -Methode wird von der <xref:System.Web.Security.Roles> -Klasse aufgerufen, um die Liste der Benutzer abzurufen, die der angegebenen Rolle im Autorisierungs-Manager-Richtlinien Speicher zugeordnet sind, der in der Konfigurationsdatei der ASP.NET-Anwendung (Web. config) angegeben ist.  
  
 Die <xref:System.Web.Security.AuthorizationStoreRoleProvider.GetUsersInRole%2A> -Methode gibt nur Benutzernamen zurück, die direkt in der `roleName` vom-Parameter angegebenen Autorisierungs-Manager-Rolle enthalten sind. Die zugrunde liegende Autorisierungs-Manager-API <xref:System.Web.Security.AuthorizationStoreRoleProvider.GetUsersInRole%2A> , die von der-Methode aufgerufen wird, unterstützt keine Gruppen Erweiterungen, sodass Benutzer, die in den gruppierten NT-Gruppen, in der Gruppe der Autorisierungs-Manager-Gruppen und in LDAP-Abfrage Gruppen enthalten sind  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die <xref:System.Web.Security.Roles.GetUsersInRole%2A> -Methode verwendet, um eine Liste der Benutzer in einer bestimmten Rolle zu erhalten und die Ergebnisse <xref:System.Web.UI.WebControls.GridView?displayProperty=nameWithType> an ein-Steuerelement zu binden. Ein Beispiel für eine Web. config-Datei, die die Rollen Verwaltung ermöglicht <xref:System.Web.Security.AuthorizationStoreRoleProvider>, finden Sie unter.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/adduserstorolecs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/adduserstorolevb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="roleName" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="roleName" /> ist eine leere Zeichenfolge.  
  
- oder - 
 <paramref name="roleName" /> enthält ein Komma.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Der konfigurierte <see langword="applicationName" /> wurde nicht gefunden.  
  
- oder - 
Der konfigurierte <see langword="scopeName" /> wurde nicht gefunden.  
  
- oder - 
Die Laufzeit für Autorisierungs-Manager ist auf dem Server nicht installiert.</exception>
        <exception cref="T:System.IO.FileNotFoundException">Das <see langword="connectionStringName" />-Attribut verweist auf eine Verbindungszeichenfolge zu einer nicht vorhandenen Datei.</exception>
        <exception cref="T:System.Web.HttpException">Die <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" />-Instanz wird mit einem dateibasierten Richtlinienspeicher konfiguriert, und auf der aktuellen Vertrauensebene ist kein Lesezugriff auf die Datei möglich.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Grundlegendes zur Rollen Verwaltung ASP.net</related>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (name As String, config As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ config);" />
      <MemberSignature Language="F#" Value="override this.Initialize : string * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="authorizationStoreRoleProvider.Initialize (name, config)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="config" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name">Der Name der zu initialisierenden <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" />-Instanz.</param>
        <param name="config">Eine <see cref="T:System.Collections.Specialized.NameValueCollection" />, die die Namen und Werte der Konfigurationsoptionen für den Rollenanbieter enthält.</param>
        <summary>Initialisiert den Autorisierungs-Manager-Rollenanbieter mit den Eigenschaftswerten, die in der Konfigurationsdatei der ASP.NET-Anwendung angegeben sind. Diese Methode ist nicht für die direkte Verwendung im Code vorgesehen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.AuthorizationStoreRoleProvider.Initialize%2A> -Methode initialisiert <xref:System.Web.Security.AuthorizationStoreRoleProvider> die mit den Eigenschafts Werten, die in der ASP.NET-Anwendungs Konfigurationsdatei (Web. config) angegeben sind, und ist nicht für die direkte Verwendung im Code vorgesehen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="config" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Das <see langword="connectionStringName" />-Attribut ist leer oder ist nicht im Konfigurationsabschnitt [connectionStrings-Element (ASP.NET-Einstellungsschema)](https://msdn.microsoft.com/library/b6ffbb2e-a4d1-410e-8f7e-9755e92c65de) vorhanden.  
  
- oder - 
Der konfigurierte <see langword="applicationName" /> ist länger als 256 Zeichen.  
  
- oder - 
Die Konfiguration für diese <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" />-Instanz enthält ein unbekanntes Attribut.</exception>
        <exception cref="T:System.Web.HttpException">Die ASP.NET-Anwendung wird nicht auf der Vertrauensebene <see cref="F:System.Web.AspNetHostingPermissionLevel.Low" /> oder höher ausgeführt.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Grundlegendes zur Rollen Verwaltung ASP.net</related>
      </Docs>
    </Member>
    <Member MemberName="IsUserInRole">
      <MemberSignature Language="C#" Value="public override bool IsUserInRole (string username, string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsUserInRole(string username, string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.IsUserInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsUserInRole (username As String, roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsUserInRole(System::String ^ username, System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.IsUserInRole : string * string -&gt; bool" Usage="authorizationStoreRoleProvider.IsUserInRole (username, roleName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Der zu suchende Benutzername.</param>
        <param name="roleName">Die Rolle, in der gesucht werden soll.</param>
        <summary>Ruft einen Wert ab, der angibt, ob der angegebene Benutzer die angegebene Rolle innehat.</summary>
        <returns><see langword="true" />, wenn der angegebene Benutzername die angegebene Rolle innehat, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.AuthorizationStoreRoleProvider.IsUserInRole%2A> <xref:System.Web.Security.Roles> -Methode <xref:System.Security.Principal.IPrincipal.IsInRole%2A>  wird von der-Klasse und der-Methode der- Eigenschaft aufgerufen, um zu bestimmen, ob ein Benutzer einer Rolle im Autorisierungs-Manager-Datenspeicher zugeordnet ist, der in der ASP.NET-Anwendung angegeben ist. <xref:System.Web.UI.Page.User%2A?displayProperty=nameWithType>  Konfigurationsdatei (Web. config).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird Programm gesteuert überprüft, ob sich der angemeldete Benutzer in der-Administrator Rolle befindet, bevor der Benutzer Benutzer Rollen anzeigen kann. Ein Beispiel für eine Web. config-Datei, die die Rollen Verwaltung ermöglicht <xref:System.Web.Security.AuthorizationStoreRoleProvider>, finden Sie unter.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/ViewRolescs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/ViewRolesvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="username" /> ist <see langword="null" />.  
  
– oder – 
 <paramref name="roleName" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="roleName" /> ist eine leere Zeichenfolge.  
  
- oder - 
 <paramref name="roleName" /> enthält ein Komma.  
  
- oder - 
 <paramref name="username" /> enthält ein Komma.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Der konfigurierte <see langword="applicationName" /> wurde nicht gefunden.  
  
- oder - 
Der konfigurierte <see langword="scopeName" /> wurde nicht gefunden.  
  
- oder - 
Die Laufzeit für Autorisierungs-Manager ist auf dem Server nicht installiert.</exception>
        <exception cref="T:System.IO.FileNotFoundException">Das <see langword="connectionStringName" />-Attribut verweist auf eine Verbindungszeichenfolge zu einer nicht vorhandenen Datei.</exception>
        <exception cref="T:System.Web.HttpException">Die <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" />-Instanz wird mit einem dateibasierten Richtlinienspeicher konfiguriert, und auf der aktuellen Vertrauensebene ist kein Lesezugriff auf die Datei möglich.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Grundlegendes zur Rollen Verwaltung ASP.net</related>
      </Docs>
    </Member>
    <Member MemberName="RemoveUsersFromRoles">
      <MemberSignature Language="C#" Value="public override void RemoveUsersFromRoles (string[] userNames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RemoveUsersFromRoles(string[] userNames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RemoveUsersFromRoles (userNames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RemoveUsersFromRoles(cli::array &lt;System::String ^&gt; ^ userNames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberSignature Language="F#" Value="override this.RemoveUsersFromRoles : string[] * string[] -&gt; unit" Usage="authorizationStoreRoleProvider.RemoveUsersFromRoles (userNames, roleNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userNames" Type="System.String[]" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="userNames">Ein Zeichenfolgenarray mit Benutzernamen, die aus den angegebenen Rollen entfernt werden sollen.</param>
        <param name="roleNames">Ein Zeichenfolgenarray mit Rollennamen, aus denen Benutzernamen entfernt werden sollen.</param>
        <summary>Entfernt die angegebenen Benutzernamen aus den angegebenen Rollen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.AuthorizationStoreRoleProvider.RemoveUsersFromRoles%2A> -Methode wird von der <xref:System.Web.Security.Roles> -Klasse aufgerufen, um einen oder mehrere Benutzer aus einer oder mehreren Rollen im Autorisierungs-Manager-Richtlinien Speicher zu entfernen, der in der Konfigurationsdatei der ASP.NET-Anwendung (Web. config) angegeben ist. Diese <xref:System.Web.Security.Roles.RemoveUserFromRole%2A>Methode wird von den Methoden, <xref:System.Web.Security.Roles.RemoveUserFromRoles%2A>, <xref:System.Web.Security.Roles.RemoveUsersFromRole%2A>und der <xref:System.Web.Security.Roles.RemoveUsersFromRoles%2A> <xref:System.Web.Security.Roles> -Klasse aufgerufen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird einem oder mehreren Benutzern eine Rolle hinzugefügt oder ein Benutzer aus einer Rolle entfernt. Ein Beispiel für eine Web. config-Datei, die die Rollen Verwaltung ermöglicht <xref:System.Web.Security.AuthorizationStoreRoleProvider>, finden Sie unter.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/adduserstorolecs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/adduserstorolevb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Einer der angegebenen Benutzernamen ist <see langword="null" />.  
  
- oder - 
Einer der angegebenen Rollennamen ist <see langword="null" />.  
  
- oder - 
 <paramref name="userNames" /> ist <see langword="null" />.  
  
- oder - 
 <paramref name="roleNames" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Einer der angegebenen Benutzernamen ist eine leere Zeichenfolge oder enthält ein Komma.  
  
- oder - 
Einer der angegebenen Rollennamen ist eine leere Zeichenfolge oder enthält ein Komma.  
  
- oder - 
 <paramref name="userNames" /> enthält ein doppeltes Element.  
  
- oder - 
 <paramref name="roleNames" /> enthält ein doppeltes Element.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Der konfigurierte <see langword="applicationName" /> wurde nicht gefunden.  
  
- oder - 
Der konfigurierte <see langword="scopeName" /> wurde nicht gefunden.  
  
- oder - 
Die Laufzeit für Autorisierungs-Manager ist auf dem Server nicht installiert.</exception>
        <exception cref="T:System.IO.FileNotFoundException">Das <see langword="connectionStringName" />-Attribut verweist auf eine Verbindungszeichenfolge zu einer nicht vorhandenen Datei.</exception>
        <exception cref="T:System.Web.HttpException">Die <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" />-Instanz wird mit einem dateibasierten Richtlinienspeicher konfiguriert, und auf der aktuellen Vertrauensebene ist kein Lesezugriff auf die Datei möglich.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Grundlegendes zur Rollen Verwaltung ASP.net</related>
      </Docs>
    </Member>
    <Member MemberName="RoleExists">
      <MemberSignature Language="C#" Value="public override bool RoleExists (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool RoleExists(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.RoleExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function RoleExists (roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool RoleExists(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.RoleExists : string -&gt; bool" Usage="authorizationStoreRoleProvider.RoleExists roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Der Name der Rolle, nach dem im Autorisierungsmanager-Richtlinienspeicher gesucht werden soll.</param>
        <summary>Ruft einen Wert ab, der angibt, ob der angegebene Rollenname bereits im Autorisierungsmanager-Richtlinienspeicher vorhanden ist.</summary>
        <returns><see langword="true" />, wenn der Rollenname bereits im Autorisierungsmanager-Richtlinienspeicher vorhanden ist, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.AuthorizationStoreRoleProvider.RoleExists%2A> -Methode wird von der <xref:System.Web.Security.Roles> -Klasse aufgerufen, um zu bestimmen, ob ein Rollenname im Autorisierungs-Manager-Datenspeicher vorhanden ist, der in der Konfigurationsdatei der ASP.NET-Anwendung (Web. config) angegeben ist.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die <xref:System.Web.Security.Roles.RoleExists%2A> -Methode verwendet, um zu bestimmen, ob bereits ein Rollenname vorhanden ist, bevor die Rolle erstellt wird. Ein Beispiel für eine Web. config-Datei, die die Rollen Verwaltung ermöglicht <xref:System.Web.Security.AuthorizationStoreRoleProvider>, finden Sie unter.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/createrolecs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/createrolevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="roleName" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="roleName" /> ist eine leere Zeichenfolge.  
  
- oder - 
 <paramref name="roleName" /> enthält ein Komma.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Der konfigurierte <see langword="applicationName" /> wurde nicht gefunden.  
  
- oder - 
Der konfigurierte <see langword="scopeName" /> wurde nicht gefunden.  
  
- oder - 
Die Laufzeit für Autorisierungs-Manager ist auf dem Server nicht installiert.</exception>
        <exception cref="T:System.IO.FileNotFoundException">Das <see langword="connectionStringName" />-Attribut verweist auf eine Verbindungszeichenfolge zu einer nicht vorhandenen Datei.</exception>
        <exception cref="T:System.Web.HttpException">Die <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" />-Instanz wird mit einem dateibasierten Richtlinienspeicher konfiguriert, und auf der aktuellen Vertrauensebene ist kein Lesezugriff auf die Datei möglich.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Grundlegendes zur Rollen Verwaltung ASP.net</related>
      </Docs>
    </Member>
    <Member MemberName="ScopeName">
      <MemberSignature Language="C#" Value="public string ScopeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScopeName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.AuthorizationStoreRoleProvider.ScopeName" />
      <MemberSignature Language="VB.NET" Value="Public Property ScopeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ScopeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ScopeName : string with get, set" Usage="System.Web.Security.AuthorizationStoreRoleProvider.ScopeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Bereichsnamen für den Autorisierungsspeicher ab oder legt diesen fest.</summary>
        <value>Der Bereichsname für den Autorisierungsspeicher.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.AuthorizationStoreRoleProvider.ScopeName%2A> -Eigenschaft kann mithilfe des `scopeName` -Konfigurations Attributs für `providers` die Anbieter Instanz im-Abschnitt des-Konfigurations Abschnitts festgelegt werden.  
  
> [!CAUTION]
>  Da eine einzelne Standardrollen Anbieter-Instanz für alle Anforderungen verwendet wird, die von einem <xref:System.Web.HttpApplication> Objekt bereitgestellt werden, können mehrere Anforderungen gleichzeitig ausgeführt werden, und <xref:System.Web.Security.AuthorizationStoreRoleProvider.ScopeName%2A> es wird versucht, den Eigenschafts Wert festzulegen. Die <xref:System.Web.Security.AuthorizationStoreRoleProvider.ScopeName%2A> -Eigenschaft ist für mehrere Schreibvorgänge nicht Thread sicher. das <xref:System.Web.Security.AuthorizationStoreRoleProvider.ScopeName%2A> Ändern des Eigenschafts Werts kann zu unerwartetem Verhalten führen, wenn mehrere Benutzer einer Anwendung vorhanden sind. Es wird empfohlen, das Schreiben von Code zu vermeiden, mit dem <xref:System.Web.Security.AuthorizationStoreRoleProvider.ScopeName%2A> Benutzer die Eigenschaft festlegen können, sofern dies nicht erforderlich ist. Ein Beispiel für eine Anwendung, in der <xref:System.Web.Security.AuthorizationStoreRoleProvider.ScopeName%2A> die-Eigenschaft festgelegt werden kann, ist eine administrative Anwendung, die Rollen Daten für mehrere Anwendungen verwaltet. Eine solche Anwendung sollte eine Einzelbenutzer Anwendung und keine Webanwendung sein.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Grundlegendes zur Rollen Verwaltung ASP.net</related>
      </Docs>
    </Member>
  </Members>
</Type>
