<Type Name="SqlMembershipProvider" FullName="System.Web.Security.SqlMembershipProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2995c7ece3ffc33763628887ae15bcb434292484" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86843902" /></Metadata><TypeSignature Language="C#" Value="public class SqlMembershipProvider : System.Web.Security.MembershipProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlMembershipProvider extends System.Web.Security.MembershipProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.SqlMembershipProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlMembershipProvider&#xA;Inherits MembershipProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlMembershipProvider : System::Web::Security::MembershipProvider" />
  <TypeSignature Language="F#" Value="type SqlMembershipProvider = class&#xA;    inherit MembershipProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Security.MembershipProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Verwaltet Speicher der Mitgliedschaftsinformationen für eine ASP.NET-Anwendung in einer SQL Server-Datenbank.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Klasse wird von der-Klasse und der-Klasse verwendet <xref:System.Web.Security.Membership> <xref:System.Web.Security.MembershipUser> , um Mitgliedschafts Dienste für eine ASP.NET-Anwendung mit einer SQL Server Datenbank bereitzustellen. Ein kann nicht <xref:System.Web.Security.SqlMembershipProvider> ohne SQL Server verwendet werden. Wenn auf dem Computer SQL Server Express mit dem Standardinstanznamen und der aktivierten Benutzerinstanziierung installiert ist, <xref:System.Web.Security.SqlMembershipProvider> erstellt das Objekt beim ersten Ausführen der Anwendung eine Datenbank mit dem Namen `aspnetdb` im Verzeichnis der Anwendung `App_Data` .  
  
 Zum manuellen Erstellen der Datenbank führen Sie die `Aspnet_regsql.exe` im Ordner gefundene ausführbare Datei aus, `%systemroot%\Microsoft.NET\Framework\ versionNumber` und geben Sie die `-A m` Option an (z `aspnet_regsql.exe -A m` . b.). Die erstellte Datenbank heißt aspnetdb. Alternativ können Sie ausführen, `Aspnet_regsql.exe` um den GUI-Konfigurations Modus zu ziehen und alle ASP.NET-Features zu konfigurieren.  
  
 Wenn der Mitgliedschafts Anbieter mit einer Verbindungs Zeichenfolge konfiguriert ist, die die integrierte Sicherheit verwendet, muss das Prozess Konto der ASP.NET-Anwendung über die Berechtigung zum Herstellen einer Verbindung mit der SQL Server Datenbank verfügen.  
  
 Die Machine.config Datei definiert eine Standard <xref:System.Web.Security.SqlMembershipProvider> Instanz mit `AspNetSqlMembershipProvider` dem Namen, die eine Verbindung mit der standardmäßigen SQL Server Express Instanz auf dem lokalen Computer herstellt. Sie können diese Instanz des Anbieters verwenden, wenn Sie SQL Server Express mit dem Standardinstanznamen installiert haben, oder Sie können eine eigene Instanz in der Web.config-Datei für Ihre ASP.NET-Anwendung definieren.  
  
 Wenn Sie das- `passwordCompatMode` Attribut auf festlegen <xref:System.Web.Configuration.MembershipPasswordCompatibilityMode.Framework40> , kann die Anwendung die in ASP.NET 4 hinzugefügten Hash-und Verschlüsselungs Mitgliedschafts Optionen verwenden. Wenn das- `passwordCompatMode` Attribut jedoch auf festgelegt ist <xref:System.Web.Configuration.MembershipPasswordCompatibilityMode.Framework20> , können nur die Optionen für die Hash-und Verschlüsselungs Mitgliedschaft aus ASP.NET 2,0, ASP.NET 3,5 und ASP.NET 3,5 SP1 verwendet werden. Der Standardwert ist <xref:System.Web.Configuration.MembershipPasswordCompatibilityMode.Framework20>. Weitere Informationen finden Sie unter <xref:System.Web.Configuration.MembershipPasswordCompatibilityMode>.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt die Web.config Datei für eine ASP.NET-Anwendung, die für die Verwendung von konfiguriert ist <xref:System.Web.Security.SqlMembershipProvider> .  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString="Data Source=localhost;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
  </connectionStrings>  
  <system.web>  
    <authentication mode="Forms" >  
      <forms loginUrl="login.aspx"  
        name=".ASPXFORMSAUTH" />  
    </authentication>  
    <authorization>  
      <deny users="?" />  
    </authorization>  
    <membership defaultProvider="SqlProvider"  
      userIsOnlineTimeWindow="15">  
      <providers>  
        <add   
          name="SqlProvider"   
          type="System.Web.Security.SqlMembershipProvider"   
          connectionStringName="SqlServices"  
          applicationName="MyApplication"  
          enablePasswordRetrieval="false"  
          enablePasswordReset="true"  
          requiresQuestionAndAnswer="true"  
          requiresUniqueEmail="false"  
          passwordFormat="Hashed"  
          maxInvalidPasswordAttempts="5"  
          passwordAttemptWindow="10" />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">Einführung in ASP.NET Mitgliedschaft</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlMembershipProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlMembershipProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Security.SqlMembershipProvider" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der- <xref:System.Web.Security.SqlMembershipProvider.%23ctor%2A> Konstruktor wird von ASP.NET aufgerufen, um eine Instanz der-Klasse zu erstellen, <xref:System.Web.Security.SqlMembershipProvider> wie in der Konfiguration für die Anwendung angegeben. Dieser Konstruktor ist nicht für die Verwendung im Code vorgesehen.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">Einführung in ASP.NET Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public override string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Web.Security.SqlMembershipProvider.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Anwendung ab, für die Mitgliedschaftsinformationen gespeichert und abgerufen werden sollen, oder legt diesen fest.</summary>
        <value>Der Name der Anwendung, für die Mitgliedschaftsinformationen gespeichert und abgerufen werden sollen. Der <see cref="P:System.Web.HttpRequest.ApplicationPath" />-Eigenschaftswert ist der Standardwert für die aktuelle <see cref="P:System.Web.HttpContext.Request" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> wird vom verwendet <xref:System.Web.Security.SqlMembershipProvider> , um Benutzerinformationen zu gruppieren. Wenn Sie Benutzerinformationen mit einem Anwendungsnamen qualifizieren, können Sie Informationen für mehrere Anwendungen in einer einzelnen Datenbank speichern, ohne dass Konflikte zwischen doppelten Benutzernamen auftreten. Außerdem können mehrere ASP.NET-Anwendungen dieselbe Benutzerdatenbank verwenden, indem Sie denselben Wert in der- <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> Eigenschaft angeben. Die- <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> Eigenschaft kann Programm gesteuert festgelegt oder deklarativ in der Konfigurationsdatei für die-Webanwendung mit dem-Attribut festgelegt werden `applicationName` .  
  
 Wenn für das- `applicationName` Attribut in der Konfigurationsdatei für die-Webanwendung kein Wert angegeben wird, <xref:System.Web.HttpRequest.ApplicationPath%2A> wird der-Eigenschafts Wert für die erste Anforderung verwendet, die an die Anwendung gerichtet ist.  
  
> [!CAUTION]
>  Da für alle Anforderungen, die von einem Objekt verarbeitet werden, eine einzelne standardmäßige Mitgliedschafts Anbieter Instanz verwendet wird <xref:System.Web.HttpApplication> , können mehrere Anforderungen gleichzeitig ausgeführt werden, und es wird versucht, den <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> Eigenschafts Wert festzulegen. Die <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> -Eigenschaft ist für mehrere Schreibvorgänge nicht Thread sicher, und <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> eine Änderung des Eigenschafts Werts kann zu unerwartetem Verhalten bei mehreren Benutzern einer Anwendung führen. Es wird empfohlen, das Schreiben von Code zu vermeiden, damit Benutzer die-Eigenschaft festlegen können, <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> sofern dies nicht erforderlich ist. Ein Beispiel für eine Anwendung, in der die-Eigenschaft festgelegt <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> werden kann, ist eine administrative Anwendung, die Mitgliedschafts Daten für mehrere Anwendungen verwaltet. Eine solche Anwendung sollte eine Einzelbenutzer Anwendung und keine Webanwendung sein.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt das [Mitgliedschafts](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100)) Element im- `system.web` Abschnitt der Web.config Datei für eine ASP.NET-Anwendung. Gibt die Instanz der Anwendung <xref:System.Web.Security.SqlMembershipProvider> an und legt <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> auf fest `MyApplication` .  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="true"  
      enablePasswordReset="false"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Encrypted"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Es wurde versucht, die <see cref="P:System.Web.Security.SqlMembershipProvider.ApplicationName" />-Eigenschaft auf eine leere Zeichenfolge oder <see langword="null" /> festzulegen.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Es wurde versucht, die <see cref="P:System.Web.Security.SqlMembershipProvider.ApplicationName" />-Eigenschaft auf eine Zeichenfolge festzulegen, die länger als 256 Zeichen ist.</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">Einführung in ASP.NET Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="ChangePassword">
      <MemberSignature Language="C#" Value="public override bool ChangePassword (string username, string oldPassword, string newPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ChangePassword(string username, string oldPassword, string newPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.ChangePassword(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ChangePassword (username As String, oldPassword As String, newPassword As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ChangePassword(System::String ^ username, System::String ^ oldPassword, System::String ^ newPassword);" />
      <MemberSignature Language="F#" Value="override this.ChangePassword : string * string * string -&gt; bool" Usage="sqlMembershipProvider.ChangePassword (username, oldPassword, newPassword)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="oldPassword" Type="System.String" />
        <Parameter Name="newPassword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Der Benutzer, dessen Kennwort aktualisiert werden soll.</param>
        <param name="oldPassword">Das aktuelle Kennwort für den angegebenen Benutzer.</param>
        <param name="newPassword">Das neue Kennwort für den angegebenen Benutzer.</param>
        <summary>Ändert das Kennwort eines Benutzers.</summary>
        <returns><see langword="true" />, wenn das Kennwort erfolgreich aktualisiert wurde. <see langword="false" />, wenn das angegebene alte Kennwort ungültig, der Benutzer gesperrt oder in der Datenbank nicht vorhanden ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird von der- <xref:System.Web.Security.Membership> Klasse aufgerufen, um das Kennwort für einen Benutzer in der SQL Server Datenbank zu aktualisieren, die in der Konfigurationsdatei der ASP.NET-Anwendung (Web.config) angegeben ist.  
  
 Die maximale Kenn Wort Länge beträgt 128 Zeichen.  
  
 Wenn für die-Methode ein falsches Kennwort angegeben wird <xref:System.Web.Security.SqlMembershipProvider.ChangePassword%2A> , wird der interne-Counter, der ungültige Kenn Wort Versuche verfolgt, um eins erhöht. Dies kann dazu führen, dass der Benutzer gesperrt wird und sich nicht anmelden kann, bis der Sperr Status durch einen Rückruf der- <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> Methode gelöscht wird. Wenn das richtige Kennwort angegeben wird und der Benutzer zurzeit nicht gesperrt ist, werden die internen Leistungsindikatoren, die ungültige Kennwort-und Kenn Wort Antwort Versuche nachverfolgen, auf 0 (null) zurückgesetzt. Weitere Informationen finden Sie in den Ausführungen zur <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>-Eigenschaft und zur <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>-Eigenschaft.  
  
 Sie können die- <xref:System.Web.Security.SqlMembershipProvider.ChangePassword%2A> Methode direkt aufrufen, indem Sie zuerst <xref:System.Web.Security.SqlMembershipProvider> über die- <xref:System.Web.Security.Membership.Provider%2A> Eigenschaft der-Klasse einen Verweis auf die Instanz abrufen <xref:System.Web.Security.Membership> . Die- <xref:System.Web.Security.Membership.Provider%2A> Eigenschaft macht den `defaultProvider` angegebenen in der Web.config-Datei für die Anwendung verfügbar. Konfigurierte Anbieter, die nicht der Standardanbieter sind, auf die mithilfe der-Eigenschaft verwiesen wird <xref:System.Web.Security.Membership.Providers%2A>  
  
 Mithilfe der-Methode können Sie auch Benutzer Kennwörter ändern <xref:System.Web.Security.MembershipUser.ChangePassword%2A> .  
  
 Führende und nachfolgende Leerzeichen werden aus allen Parameterwerten abgeschnitten.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird das Kennwort für den angegebenen Benutzer geändert.  
  
> [!NOTE]
>  In diesem Beispiel wird die- <xref:System.Web.Security.Membership.Provider%2A> Eigenschaft der- <xref:System.Web.Security.Membership> Klasse verwendet, um die <xref:System.Web.Security.SqlMembershipProvider> angegebene als `defaultProvider` in der Web.config-Datei aufzurufen. Wenn Sie als Typ auf den Standardanbieter zugreifen müssen <xref:System.Web.Security.SqlMembershipProvider> , können Sie die- <xref:System.Web.Security.Membership.Provider%2A> Eigenschaft der-Klasse umwandeln <xref:System.Web.Security.Membership> . Wenn Sie auf andere konfigurierte Anbieter als einen bestimmten Anbietertyp zugreifen möchten, können Sie über ihren konfigurierten Namen mit der <xref:System.Web.Security.Membership.Providers%2A> -Eigenschaft der <xref:System.Web.Security.Membership> -Klasse darauf zugreifen und Sie als bestimmten Anbietertyp umwandeln.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ChangePasswordcs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ChangePasswordvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="username" /> ist eine leere Zeichenfolge (""), enthält ein Komma oder ist länger als 256 Zeichen.  
  
- oder - 
 <paramref name="oldPassword" /> ist eine leere Zeichenfolge oder länger als 128 Zeichen.  
  
- oder - 
 <paramref name="newPassword" /> ist eine leere Zeichenfolge oder länger als 128 Zeichen.  
  
- oder - 
Die codierte Version von <paramref name="newPassword" /> ist länger als 128 Zeichen.  
  
- oder - 
Der Vorgang zum Ändern des Kennworts wurde von einem Abonnenten des <see cref="E:System.Web.Security.Membership.ValidatingPassword" />-Ereignisses abgebrochen, und die <see cref="P:System.Web.Security.ValidatePasswordEventArgs.FailureInformation" />-Eigenschaft war <see langword="null" />.  
  
- oder - 
<paramref name="newPassword" /> ist weniger lang als die minimale, in der <see cref="P:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength" />-Eigenschaft angegebene Länge.  
  
- oder - 
Die Anzahl von nicht alphabetischen Zeichen in <paramref name="newPassword" /> ist kleiner als die in der <see cref="P:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters" />-Eigenschaft angegebene, erforderliche Anzahl von nicht alphabetischen Zeichen.  
  
- oder - 
 <paramref name="newPassword" /> entspricht nicht den Kriterien für reguläre Ausdrücke, die in der <see cref="P:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression" />-Eigenschaft definiert sind.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="username" /> ist <see langword="null" />.  
  
- oder - 
 <paramref name="oldPassword" /> ist <see langword="null" />.  
  
- oder - 
 <paramref name="newPassword" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.Web.Security.MembershipPasswordException"><paramref name="username" /> wurde in der Datenbank nicht gefunden.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Beim Festlegen des neuen Kennwortwerts in der Datenbank ist ein Fehler aufgetreten.</exception>
        <exception cref="T:System.Exception">Unbehandelte Ausnahme.</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">Einführung in ASP.NET Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="ChangePasswordQuestionAndAnswer">
      <MemberSignature Language="C#" Value="public override bool ChangePasswordQuestionAndAnswer (string username, string password, string newPasswordQuestion, string newPasswordAnswer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ChangePasswordQuestionAndAnswer(string username, string password, string newPasswordQuestion, string newPasswordAnswer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ChangePasswordQuestionAndAnswer (username As String, password As String, newPasswordQuestion As String, newPasswordAnswer As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ChangePasswordQuestionAndAnswer(System::String ^ username, System::String ^ password, System::String ^ newPasswordQuestion, System::String ^ newPasswordAnswer);" />
      <MemberSignature Language="F#" Value="override this.ChangePasswordQuestionAndAnswer : string * string * string * string -&gt; bool" Usage="sqlMembershipProvider.ChangePasswordQuestionAndAnswer (username, password, newPasswordQuestion, newPasswordAnswer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="newPasswordQuestion" Type="System.String" />
        <Parameter Name="newPasswordAnswer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Der Benutzer, für den Kennwortfrage und -antwort geändert werden sollen.</param>
        <param name="password">Das Kennwort für den angegebenen Benutzer.</param>
        <param name="newPasswordQuestion">Die neue Kennwortfrage für den angegebenen Benutzer.</param>
        <param name="newPasswordAnswer">Die neue Kennwortantwort für den angegebenen Benutzer.</param>
        <summary>Aktualisiert die Kennwortfrage und -antwort für einen Benutzer in der Mitgliedschaftsdatenbank von SQL Server.</summary>
        <returns><see langword="true" />, wenn die Aktualisierung erfolgreich war, andernfalls <see langword="false" />. Der Wert <see langword="false" /> wird auch dann zurückgegeben, wenn das <paramref name="password" /> falsch, der Benutzer gesperrt oder nicht in der Datenbank vorhanden ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird von der- <xref:System.Web.Security.MembershipUser> Klasse aufgerufen, um die Kenn Wort Frage und-Antwort für einen Benutzer in der SQL Server Datenbank zu aktualisieren, die in der Konfigurationsdatei der ASP.NET-Anwendung (Web.config) angegeben ist. Die Kenn Wort Antwort wird mit dem Format verschlüsselt, das in der-Eigenschaft angegeben ist <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> .  
  
 Wenn eine Kenn Wort Frage und-Antwort erforderlich ist, wird beim Abrufen oder Zurücksetzen eines Benutzer Kennworts eine zusätzliche Sicherheitsebene bereitgestellt. Beim Erstellen eines Benutzernamens kann ein Benutzer eine Frage und eine Antwort angeben, die später verwendet werden können, um ein vergessenes Kennwort abzurufen oder zurückzusetzen. Die <xref:System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer%2A> -Methode aktualisiert die Kenn Wort Frage und-Antwort für einen Mitgliedschafts Benutzer.  
  
 Wenn für die Methode ein falsches Kennwort angegeben wird <xref:System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer%2A> , werden die internen Leistungsindikatoren, die ungültige Kenn Wort Versuche nachverfolgen, um eins erhöht. Dies kann dazu führen, dass der Benutzer gesperrt wird und sich nicht anmelden kann, bis der Sperr Status durch Aufrufen der-Methode gelöscht wird <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> . Wenn das richtige Kennwort angegeben wird und der Benutzer zurzeit nicht gesperrt ist, werden die internen Leistungsindikatoren, die ungültige Kennwort-und Kenn Wort Antwort Versuche nachverfolgen, auf 0 (null) zurückgesetzt. Weitere Informationen finden Sie in den Ausführungen zur <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>-Eigenschaft und zur <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>-Eigenschaft.  
  
 Die maximale Länge für die Kenn Wort Frage beträgt 256 Zeichen. Die maximale Länge für die Kenn Wort Antwort beträgt 128 Zeichen.  
  
 Weitere Informationen finden Sie unter <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A>, <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A> und <xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A>.  
  
 Führende und nachfolgende Leerzeichen werden aus allen Parameterwerten abgeschnitten.  
  
   
  
## Examples  
 Im folgenden Codebeispiel werden die Kenn Wort Frage und-Antwort für einen Benutzer aktualisiert.  
  
> [!NOTE]
>  In diesem Beispiel wird die- <xref:System.Web.Security.Membership.Provider%2A> Eigenschaft der- <xref:System.Web.Security.Membership> Klasse verwendet, um die <xref:System.Web.Security.SqlMembershipProvider> angegebene als `defaultProvider` in der Web.config-Datei aufzurufen. Wenn Sie als Typ auf den Standardanbieter zugreifen müssen <xref:System.Web.Security.SqlMembershipProvider> , können Sie die- <xref:System.Web.Security.Membership.Provider%2A> Eigenschaft der-Klasse umwandeln <xref:System.Web.Security.Membership> . Wenn Sie auf andere konfigurierte Anbieter als einen bestimmten Anbietertyp zugreifen möchten, können Sie über ihren konfigurierten Namen mit der <xref:System.Web.Security.Membership.Providers%2A> -Eigenschaft der <xref:System.Web.Security.Membership> -Klasse darauf zugreifen und Sie als bestimmten Anbietertyp umwandeln.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ChangePasswordQuestioncs.aspx#10)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ChangePasswordQuestionvb.aspx#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="username" /> ist eine leere Zeichenfolge (""), enthält ein Komma oder ist länger als 256 Zeichen.  
  
- oder - 
 <paramref name="password" /> ist eine leere Zeichenfolge oder länger als 128 Zeichen.  
  
- oder - 
 <paramref name="newPasswordQuestion" /> ist eine leere Zeichenfolge oder länger als 256 Zeichen.  
  
- oder - 
 <paramref name="newPasswordAnswer" /> ist eine leere Zeichenfolge oder länger als 128 Zeichen.  
  
- oder - 
Die codierte Version von <paramref name="newPasswordAnswer" /> ist länger als 128 Zeichen.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="username" /> ist <see langword="null" />.  
  
- oder - 
 <paramref name="password" /> ist <see langword="null" />.  
  
- oder - 
 <paramref name="newPasswordQuestion" /> ist <see langword="null" />, und <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> ist <see langword="true" />.  
  
- oder - 
 <paramref name="newPasswordAnswer" /> ist <see langword="null" />, und <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> ist <see langword="true" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Beim Ändern der Kennwortfrage und -antwort in der Datenbank ist ein Fehler aufgetreten.</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">Einführung in ASP.NET Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="CreateUser">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUser CreateUser (string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, out System.Web.Security.MembershipCreateStatus status);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUser CreateUser(string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, [out] valuetype System.Web.Security.MembershipCreateStatus&amp; status) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateUser (username As String, password As String, email As String, passwordQuestion As String, passwordAnswer As String, isApproved As Boolean, providerUserKey As Object, ByRef status As MembershipCreateStatus) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUser ^ CreateUser(System::String ^ username, System::String ^ password, System::String ^ email, System::String ^ passwordQuestion, System::String ^ passwordAnswer, bool isApproved, System::Object ^ providerUserKey, [Runtime::InteropServices::Out] System::Web::Security::MembershipCreateStatus % status);" />
      <MemberSignature Language="F#" Value="override this.CreateUser : string * string * string * string * string * bool * obj * MembershipCreateStatus -&gt; System.Web.Security.MembershipUser" Usage="sqlMembershipProvider.CreateUser (username, password, email, passwordQuestion, passwordAnswer, isApproved, providerUserKey, status)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="email" Type="System.String" />
        <Parameter Name="passwordQuestion" Type="System.String" />
        <Parameter Name="passwordAnswer" Type="System.String" />
        <Parameter Name="isApproved" Type="System.Boolean" />
        <Parameter Name="providerUserKey" Type="System.Object" />
        <Parameter Name="status" Type="System.Web.Security.MembershipCreateStatus" RefType="out" />
      </Parameters>
      <Docs>
        <param name="username">Der Benutzername für den neuen Benutzer.</param>
        <param name="password">Das Kennwort für den neuen Benutzer.</param>
        <param name="email">Die E-Mail-Adresse für den neuen Benutzer.</param>
        <param name="passwordQuestion">Die Kennwortfrage für den neuen Benutzer.</param>
        <param name="passwordAnswer">Die Kennwortantwort für den neuen Benutzer.</param>
        <param name="isApproved">Gibt an, ob der neue Benutzer zur Überprüfung genehmigt ist.</param>
        <param name="providerUserKey">Eine <see cref="T:System.Guid" />, die den Mitgliedschaftsbenutzer in der SQL Server-Datenbank eindeutig identifiziert.</param>
        <param name="status">Einer der <see cref="T:System.Web.Security.MembershipCreateStatus" />-Werte, der angibt, ob der Benutzer erfolgreich erstellt wurde.</param>
        <summary>Fügt der Mitgliedschaftsdatenbank von SQL Server einen neuen Benutzer hinzu.</summary>
        <returns>Ein <see cref="T:System.Web.Security.MembershipUser" />-Objekt für den neu erstellten Benutzer. Wenn kein Benutzer erstellt wurde, gibt diese Methode <see langword="null" /> zurück.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird von der- <xref:System.Web.Security.Membership> Klasse aufgerufen, um einen neuen Benutzer in der SQL Server-Datenbank zu erstellen, die in der Konfigurationsdatei der ASP.NET-Anwendung angegeben ist.  
  
 Neue Benutzer werden mit dem konfigurierten identifiziert <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> .  
  
 Wenn die <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A> -Eigenschaft auf festgelegt ist `true` und `null` oder eine leere Zeichenfolge ("") für den-Parameter angegeben wird `email` , tritt beim Erstellen des Benutzers ein Fehler auf. Die Benutzer Erstellung schlägt auch fehl, wenn die <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A> -Eigenschaft auf festgelegt ist `true` und der für den `email` -Parameter angegebene Wert ein Duplikat der e-Mail-Adresse für einen vorhandenen Benutzer in der Datenbank für den konfigurierten ist <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> .  
  
 Die maximale Länge für den Benutzernamen beträgt 256 Zeichen. Die maximale Länge für die e-Mail-Adresse beträgt 256 Zeichen. Die maximale Länge für das Kennwort im Klartext oder nach dem Hashwert oder der Verschlüsselung beträgt 128 Zeichen.  
  
 Andere Bedingungen, die dazu führen, dass die Benutzer Erstellung fehlschlägt:  
  
-   Der- `password` Parameter ist `null` oder eine leere Zeichenfolge nach dem kürzen.  
  
-   Die Länge des- `password` Parameters ist kleiner als der in der- <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> Eigenschaft angegebene Wert.  
  
-   Die Anzahl von nicht alphabetischen Zeichen im- `password` Parameter ist kleiner als der in der-Eigenschaft angegebene Wert <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> .  
  
-   Der- `password` Parameter übergibt nicht den regulären Ausdruck in der- <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A> Eigenschaft.  
  
-   Benutzerdefinierter Code zur Kenn Wort Validierung hat die Benutzer Erstellung während des Ereignisses abgebrochen <xref:System.Web.Security.MembershipProvider.ValidatingPassword> .  
  
-   Die <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A> -Eigenschaft ist, `true` und der- `passwordAnswer` Parameter ist entweder `null` oder eine leere Zeichenfolge nach der Kürzung.  
  
-   Der `passwordAnswer`-Parameter ist eine leere Zeichenfolge.  
  
-   Der- `passwordAnswer` Parameter ist länger als 128 Zeichen.  
  
-   Die <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A> -Eigenschaft ist, `true` und die Kenn Wort Frage ist entweder `null` oder eine leere Zeichenfolge nach der Kürzung.  
  
-   Der `passwordQuestion`-Parameter ist eine leere Zeichenfolge.  
  
-   Der- `passwordQuestion` Parameter ist länger als 256 Zeichen.  
  
-   Der `providerUserKey` Parameter, der auf ein Objekt eines anderen Typs als festgelegt ist <xref:System.Guid?displayProperty=nameWithType> .  
  
-   Der- `providerUserKey` Parameter ist ein Duplikat eines vorhandenen Benutzer Schlüssels.  
  
-   Der- `username` Parameter ist ein Duplikat eines vorhandenen Benutzernamens.  
  
 Führende und nachfolgende Leerzeichen werden aus allen Zeichen folgen Parameterwerten entfernt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein neuer Benutzer für eine ASP.NET-Anwendung erstellt, die für die Verwendung der Formular Authentifizierung und der konfiguriert ist <xref:System.Web.Security.SqlMembershipProvider> . Wenn der Benutzer nicht erfolgreich erstellt wurde, wird dem Benutzer eine Meldung angezeigt. Andernfalls wird der Benutzer zur Anmeldeseite für die Anwendung umgeleitet.  
  
> [!NOTE]
>  In diesem Beispiel wird die <xref:System.Web.Security.SqlMembershipProvider> angegebene als `defaultProvider` in der Web.config-Datei mithilfe der- <xref:System.Web.Security.Membership> Klasse aufgerufen. Wenn Sie als Typ auf den Standardanbieter zugreifen müssen <xref:System.Web.Security.SqlMembershipProvider> , können Sie die- <xref:System.Web.Security.Membership.Provider%2A> Eigenschaft der-Klasse umwandeln <xref:System.Web.Security.Membership> . Wenn Sie auf andere konfigurierte Anbieter als einen bestimmten Anbietertyp zugreifen möchten, können Sie über ihren konfigurierten Namen mit der <xref:System.Web.Security.Membership.Providers%2A> -Eigenschaft der <xref:System.Web.Security.Membership> -Klasse darauf zugreifen und Sie als bestimmten Anbietertyp umwandeln.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/CreateUsercs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/CreateUservb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">Einführung in ASP.NET Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteUser">
      <MemberSignature Language="C#" Value="public override bool DeleteUser (string username, bool deleteAllRelatedData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool DeleteUser(string username, bool deleteAllRelatedData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.DeleteUser(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DeleteUser (username As String, deleteAllRelatedData As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool DeleteUser(System::String ^ username, bool deleteAllRelatedData);" />
      <MemberSignature Language="F#" Value="override this.DeleteUser : string * bool -&gt; bool" Usage="sqlMembershipProvider.DeleteUser (username, deleteAllRelatedData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="deleteAllRelatedData" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">Der Name des zu löschenden Benutzers.</param>
        <param name="deleteAllRelatedData"><see langword="true" />, um mit dem Benutzer zusammenhängende Daten aus der Datenbank zu löschen; <see langword="false" />, um die mit dem Benutzer zusammenhängenden Daten in der Datenbank zu belassen.</param>
        <summary>Entfernt die Mitgliedschaftsinformationen eines Benutzers aus der Mitgliedschaftsdatenbank von SQL Server.</summary>
        <returns><see langword="true" />, wenn der Benutzer gelöscht wurde, andernfalls <see langword="false" />. Der Wert <see langword="false" /> wird auch zurückgegeben, wenn der Benutzer in der Datenbank nicht vorhanden ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird von der- <xref:System.Web.Security.Membership> Klasse aufgerufen, um einen Benutzer aus der SQL Server Datenbank zu entfernen, die in der Konfigurationsdatei der ASP.NET-Anwendung angegeben ist.  
  
 Gelöschte Benutzer werden nur aus dem konfigurierten gelöscht <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> .  
  
 Wenn `deleteAllRelatedData` auf festgelegt ist `true` , werden alle Benutzerdaten, die in der Datenbank für die- <xref:System.Web.Security.Roles> ,-oder-Personalisierungsfunktionen gespeichert sind, <xref:System.Web.HttpContext.Profile%2A> <xref:System.Web.UI.WebControls.WebParts.WebPart> auch für die konfigurierte gelöscht <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> .  
  
 Wenn der Mitgliedschafts Benutzer in der Datenbank nicht vorhanden ist und `deleteAllRelatedData` ist `true` , werden die zugehörigen Daten und die Benutzerinformationen, die für die- <xref:System.Web.Security.Roles> ,- <xref:System.Web.HttpContext.Profile%2A> oder-Personalisierungsfunktionen gespeichert werden, <xref:System.Web.UI.WebControls.WebParts.WebPart> für die in der-Eigenschaft angegebene Anwendung weiterhin gelöscht <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> . Daher kann die- <xref:System.Web.Security.SqlMembershipProvider.DeleteUser%2A> Methode zum schnellen Löschen von Informationen im Zusammenhang mit einem Benutzer verwendet werden, auch wenn das- <xref:System.Web.Security.SqlMembershipProvider> Objekt nicht zum Speichern von authentifizierten Benutzerinformationen verwendet wird.  
  
 Beim `username`-Parameterwert werden führende und nachstehende Leerzeichen abgeschnitten.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird der aktuell angemeldete Benutzer gelöscht.  
  
> [!NOTE]
>  In diesem Beispiel wird verwendet <xref:System.Web.Security.SqlMembershipProvider> , um die <xref:System.Web.Security.SqlMembershipProvider> angegebene als `defaultProvider` in der Web.config-Datei aufzurufen. Wenn Sie als Typ auf den Standardanbieter zugreifen müssen <xref:System.Web.Security.SqlMembershipProvider> , können Sie die- <xref:System.Web.Security.Membership.Provider%2A> Eigenschaft der-Klasse umwandeln <xref:System.Web.Security.Membership> . Wenn Sie auf andere konfigurierte Anbieter als einen bestimmten Anbietertyp zugreifen möchten, können Sie über ihren konfigurierten Namen mit der <xref:System.Web.Security.Membership.Providers%2A> -Eigenschaft der <xref:System.Web.Security.Membership> -Klasse darauf zugreifen und Sie als bestimmten Anbietertyp umwandeln.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/DeleteUsercs.aspx#6)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/DeleteUservb.aspx#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="username" /> ist eine leere Zeichenfolge (""), enthält ein Komma oder ist länger als 256 Zeichen.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="username" /> ist <see langword="null" />.</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">Einführung in ASP.NET Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="EnablePasswordReset">
      <MemberSignature Language="C#" Value="public override bool EnablePasswordReset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePasswordReset" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.EnablePasswordReset" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property EnablePasswordReset As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnablePasswordReset { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EnablePasswordReset : bool" Usage="System.Web.Security.SqlMembershipProvider.EnablePasswordReset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der SQL Server-Mitgliedschaftsanbieter so konfiguriert ist, dass Benutzer ihre Kennwörter zurücksetzen können.</summary>
        <value><see langword="true" />, wenn der Mitgliedschaftsanbieter das Zurücksetzen von Kennwörtern unterstützt, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Zurücksetzen des Kennworts kann der Mitgliedschafts Anbieter das aktuelle Kennwort für einen Benutzernamen durch ein neues, zufällig generiertes Kennwort ersetzen. Dies ist besonders nützlich, wenn die- <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> Eigenschaft auf festgelegt ist <xref:System.Web.Security.MembershipPasswordFormat.Hashed> , da Benutzer keine Hashwerte für Hashwerte abrufen können.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt das [Mitgliedschafts](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100)) Element im- `system.web` Abschnitt der Web.config Datei für eine ASP.NET-Anwendung. Sie gibt die Instanz der Anwendung an <xref:System.Web.Security.SqlMembershipProvider> und aktiviert das Zurücksetzen des Kennworts.  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="false"  
      enablePasswordReset="true"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Hashed"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">Einführung in ASP.NET Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="EnablePasswordRetrieval">
      <MemberSignature Language="C#" Value="public override bool EnablePasswordRetrieval { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePasswordRetrieval" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property EnablePasswordRetrieval As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnablePasswordRetrieval { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EnablePasswordRetrieval : bool" Usage="System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der SQL Server-Mitgliedschaftsanbieter so konfiguriert ist, dass Benutzer ihre Kennwörter abrufen können.</summary>
        <value><see langword="true" />, wenn der Mitgliedschaftsanbieter das Abrufen von Kennwörtern unterstützt, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die- <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> Eigenschaft auf festgelegt ist <xref:System.Web.Security.MembershipPasswordFormat.Hashed> , kann ein Benutzer sein vorhandenes Kennwort nicht aus der Datenbank abrufen. Das Kenn <xref:System.Web.Security.MembershipPasswordFormat.Hashed> Wort Format bietet eine unidirektionale Codierung von Kenn Wort Werten. Kenn Wörter werden mit einem zufällig generierten Salt-Wert versehen und mit den Werten verglichen, die in der Datenbank für die Authentifizierung gespeichert werden. Hash Werte können nicht als nicht codiert werden, um den ursprünglichen Kenn Wort Wert abzurufen.  
  
 Wenn die <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> -Eigenschaft auf festgelegt ist <xref:System.Web.Security.MembershipPasswordFormat.Hashed> und <xref:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval%2A> auf festgelegt ist `true` , wird eine ausgelöst, <xref:System.Configuration.Provider.ProviderException> Wenn der Anbieter initialisiert wird.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt das [Mitgliedschafts](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100)) Element im- `system.web` Abschnitt der Web.config Datei für eine ASP.NET-Anwendung. Sie gibt die Instanz der Anwendung an <xref:System.Web.Security.SqlMembershipProvider> und ermöglicht das Abrufen von Kenn Wörtern.  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="true"  
      enablePasswordReset="false"  
      requiresQuestionAndAnswer="false"  
      passwordFormat="Encrypted"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">Einführung in ASP.NET Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="FindUsersByEmail">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUserCollection FindUsersByEmail (string emailToMatch, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUserCollection FindUsersByEmail(string emailToMatch, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindUsersByEmail (emailToMatch As String, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUserCollection ^ FindUsersByEmail(System::String ^ emailToMatch, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="override this.FindUsersByEmail : string * int * int * int -&gt; System.Web.Security.MembershipUserCollection" Usage="sqlMembershipProvider.FindUsersByEmail (emailToMatch, pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="emailToMatch" Type="System.String" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="emailToMatch">Die gesuchte E-Mail-Adresse.</param>
        <param name="pageIndex">Der Index der zurückzugebenden Ergebnisseite. <paramref name="pageIndex" /> ist nullbasiert.</param>
        <param name="pageSize">Die Größe der zurückzugebenden Ergebnisseite.</param>
        <param name="totalRecords">Die Gesamtanzahl übereinstimmender Benutzer.</param>
        <summary>Gibt eine Auflistung der Mitgliedschaftsbenutzer zurück, für die das Adressfeld die angegebene E-Mail-Adresse enthält.</summary>
        <returns>Eine <see cref="T:System.Web.Security.MembershipUserCollection" />, die eine Seite mit <paramref name="pageSize" /><see cref="T:System.Web.Security.MembershipUser" />-Objekten enthält, die auf der durch <paramref name="pageIndex" /> angegebenen Seite beginnen.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.FindUsersByEmail%2A> gibt eine Liste der Mitgliedschafts Benutzer zurück, bei denen die e-Mail-Adresse eine Entsprechung mit der angegebenen `emailToMatch` für den konfigurierten enthält <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> .  
  
 <xref:System.Web.Security.SqlMembershipProvider>Sucht mithilfe der LIKE-Klausel nach einem Benutzernamen, der `emailToMatch` mit dem Parameterwert übereinstimmt. SQL Server Platzhalter Zeichen können in den Parameterwert eingeschlossen werden. Wenn der `emailToMatch` -Parameter z. b. auf "" festgelegt ist address@example.com , werden Informationen für Benutzer mit der e-Mail-Adresse " address@example.com " zurückgegeben, sofern vorhanden. Wenn der `emailToMatch` Parameter auf "%" festgelegt ist @example.com , werden Informationen für Benutzer mit der e-Mail-Adresse " address@example.com ", "", "" address2@example.com admin@example.com usw. zurückgegeben.  
  
 Die von zurückgegebenen Ergebnisse <xref:System.Web.Security.SqlMembershipProvider.FindUsersByEmail%2A> werden durch den `pageIndex` -Parameter und den- `pageSize` Parameter eingeschränkt. Der- `pageSize` Parameter gibt die maximale Anzahl von- <xref:System.Web.Security.MembershipUser> Objekten an, die in der zurückgegeben werden <xref:System.Web.Security.MembershipUserCollection> . Der- `pageIndex` Parameter identifiziert, welche Ergebnisseite zurückgegeben werden soll, wobei 0 die erste Seite identifiziert. Der- `totalRecords` Parameter ist ein `out` Parameter, der auf die Gesamtzahl der Mitgliedschafts Benutzer für den konfigurierten festgelegt ist `applicationName` . Wenn z. b. 13 Benutzer für den konfigurierten vorhanden sind `applicationName` und der `pageIndex` Wert 1 mit einem `pageSize` von 5 ist, <xref:System.Web.Security.MembershipUserCollection> würde die zurückgegebene die sechste bis zehnte zurückgegebene Benutzer enthalten. Der- `totalRecords` Parameter wird auf 13 festgelegt.  
  
 Beim `emailToMatch`-Parameterwert werden führende und nachstehende Leerzeichen abgeschnitten.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die <xref:System.Web.Security.SqlMembershipProvider.FindUsersByEmail%2A> -Methode verwendet, um Mitgliedschafts Benutzerinformationen abzurufen, und die Ergebnisse werden in Datenseiten angezeigt.  
  
> [!NOTE]
>  In diesem Beispiel wird die- <xref:System.Web.Security.Membership> Klasse verwendet, um die <xref:System.Web.Security.SqlMembershipProvider> angegebene als `defaultProvider` in der Web.config-Datei aufzurufen. Wenn Sie als Typ auf den Standardanbieter zugreifen müssen <xref:System.Web.Security.SqlMembershipProvider> , können Sie die- <xref:System.Web.Security.Membership.Provider%2A> Eigenschaft der-Klasse umwandeln <xref:System.Web.Security.Membership> . Wenn Sie auf andere konfigurierte Anbieter als einen bestimmten Anbietertyp zugreifen möchten, können Sie über ihren konfigurierten Namen mit der <xref:System.Web.Security.Membership.Providers%2A> -Eigenschaft der <xref:System.Web.Security.Membership> -Klasse darauf zugreifen und Sie als bestimmten Anbietertyp umwandeln.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#13](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/FindUsersByEmailcs.aspx#13)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/FindUsersByEmailvb.aspx#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="emailToMatch" /> ist länger als 256 Zeichen.  
  
- oder - 
 <paramref name="pageIndex" /> ist kleiner als Null.  
  
- oder - 
 <paramref name="pageSize" /> ist kleiner als 1.  
  
- oder - 
 <paramref name="pageIndex" /> multipliziert mit <paramref name="pageSize" /> plus <paramref name="pageSize" /> minus eins ist größer als <see cref="F:System.Int32.MaxValue" />.</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">Einführung in ASP.NET Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="FindUsersByName">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUserCollection FindUsersByName (string usernameToMatch, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUserCollection FindUsersByName(string usernameToMatch, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindUsersByName (usernameToMatch As String, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUserCollection ^ FindUsersByName(System::String ^ usernameToMatch, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="override this.FindUsersByName : string * int * int * int -&gt; System.Web.Security.MembershipUserCollection" Usage="sqlMembershipProvider.FindUsersByName (usernameToMatch, pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernameToMatch" Type="System.String" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="usernameToMatch">Der zu suchende Benutzername.</param>
        <param name="pageIndex">Der Index der zurückzugebenden Ergebnisseite. <paramref name="pageIndex" /> ist nullbasiert.</param>
        <param name="pageSize">Die Größe der zurückzugebenden Ergebnisseite.</param>
        <param name="totalRecords">Diese Methode enthält bei der Rückgabe die Gesamtzahl der zutreffenden Benutzer.</param>
        <summary>Ruft eine Auflistung von Mitgliedschaftsbenutzern ab, deren Benutzername den angegebenen Vergleichsbenutzernamen enthält.</summary>
        <returns>Eine <see cref="T:System.Web.Security.MembershipUserCollection" />, die eine Seite mit <paramref name="pageSize" /><see cref="T:System.Web.Security.MembershipUser" />-Objekten enthält, die auf der durch <paramref name="pageIndex" /> angegebenen Seite beginnen.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A> gibt eine Liste der Mitgliedschafts Benutzer zurück, für die der Benutzername eine Entsprechung mit der angegebenen `usernameToMatch` für den konfigurierten enthält <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> .  
  
 <xref:System.Web.Security.SqlMembershipProvider>Sucht mithilfe der LIKE-Klausel nach einem Benutzernamen, der `usernameToMatch` mit dem Parameterwert übereinstimmt. In den Parameterwert können SQL Server Platzhalter Zeichen eingeschlossen werden. Wenn der `usernameToMatch` Parameter z. b. auf "user1" festgelegt ist, werden Benutzerinformationen für den Benutzer mit dem Benutzernamen "user1" zurückgegeben, sofern vorhanden. Wenn der `usernameToMatch` Parameter auf "User%" festgelegt ist, werden Benutzerinformationen für Benutzer mit dem Benutzernamen "user1", "user2", "User_admin" usw. zurückgegeben.  
  
 Die von zurückgegebenen Ergebnisse <xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A> werden durch den `pageIndex` -Parameter und den- `pageSize` Parameter eingeschränkt. Der- `pageSize` Parameter gibt die maximale Anzahl von- <xref:System.Web.Security.MembershipUser> Objekten an, die in der zurückgegeben werden <xref:System.Web.Security.MembershipUserCollection> . Der- `pageIndex` Parameter identifiziert, welche Ergebnisseite zurückgegeben werden soll, wobei 0 die erste Seite identifiziert. Der- `totalRecords` Parameter ist ein `out` Parameter, der auf die Gesamtzahl der Mitgliedschafts Benutzer für den konfigurierten festgelegt ist `applicationName` . Wenn z. b. 13 Benutzer für den konfigurierten vorhanden sind `applicationName` und der `pageIndex` Wert 1 mit einem `pageSize` von 5 ist, <xref:System.Web.Security.MembershipUserCollection> enthält die zurückgegebene den sechsten bis zum zehnten zurückgegebenen Benutzer. Der- `totalRecords` Parameter wird auf 13 festgelegt.  
  
 Beim `usernameToMatch`-Parameterwert werden führende und nachstehende Leerzeichen abgeschnitten.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die <xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A> -Methode verwendet, um Mitgliedschafts Benutzerinformationen abzurufen, und die Ergebnisse werden in Datenseiten angezeigt.  
  
> [!NOTE]
>  In diesem Beispiel wird System. Web. Security. sqlmembership shipprovider verwendet, um die <xref:System.Web.Security.SqlMembershipProvider> angegebene als `defaultProvider` in der Web.config-Datei aufzurufen. Wenn Sie als Typ auf den Standardanbieter zugreifen müssen <xref:System.Web.Security.SqlMembershipProvider> , können Sie die- <xref:System.Web.Security.Membership.Provider%2A> Eigenschaft der-Klasse umwandeln <xref:System.Web.Security.Membership> . Wenn Sie auf andere konfigurierte Anbieter als einen bestimmten Anbietertyp zugreifen möchten, können Sie über ihren konfigurierten Namen mit der <xref:System.Web.Security.Membership.Providers%2A> -Eigenschaft der <xref:System.Web.Security.Membership> -Klasse darauf zugreifen und Sie als bestimmten Anbietertyp umwandeln.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#12](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/FindUsersByNamecs.aspx#12)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/FindUsersByNamevb.aspx#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="usernameToMatch" /> ist eine leere Zeichenfolge ("") oder ist länger als 256 Zeichen.  
  
- oder - 
 <paramref name="pageIndex" /> ist kleiner als Null.  
  
- oder - 
 <paramref name="pageSize" /> ist kleiner als 1.  
  
- oder - 
 <paramref name="pageIndex" /> multipliziert mit <paramref name="pageSize" /> plus <paramref name="pageSize" /> minus eins ist größer als <see cref="F:System.Int32.MaxValue" />.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="usernameToMatch" /> ist <see langword="null" />.</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">Einführung in ASP.NET Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="GeneratePassword">
      <MemberSignature Language="C#" Value="public virtual string GeneratePassword ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GeneratePassword() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GeneratePassword" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GeneratePassword () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GeneratePassword();" />
      <MemberSignature Language="F#" Value="abstract member GeneratePassword : unit -&gt; string&#xA;override this.GeneratePassword : unit -&gt; string" Usage="sqlMembershipProvider.GeneratePassword " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Generiert nach dem Zufallsprinzip ein Kennwort mit einer Länge von mindestens 14 Zeichen.</summary>
        <returns>Ein nach dem Zufallsprinzip generiertes Kennwort mit einer Länge von mindestens 14 Zeichen.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die- <xref:System.Web.Security.Membership> Klasse stellt eine- <xref:System.Web.Security.Membership.GeneratePassword%2A> Methode bereit, die ein Kennwort mit einer angegebenen Größe mit mindestens der angegebenen Anzahl von nicht alphabetischen Zeichen generiert. Mit der-Methode der- <xref:System.Web.Security.SqlMembershipProvider.GeneratePassword%2A> <xref:System.Web.Security.SqlMembershipProvider> <xref:System.Web.Security.Membership.GeneratePassword%2A> Klasse wird die-Methode der- <xref:System.Web.Security.Membership> Klasse aufgerufen, um ein zufälliges Kennwort abzurufen, das mindestens 14 Zeichen lang ist. Wenn die- <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> Eigenschaft größer als 14 ist, ist das zurückgegebene Kennwort die in der-Eigenschaft angegebene Länge <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> .  
  
 Sie können die-Methode explizit aufzurufen, <xref:System.Web.Security.SqlMembershipProvider.GeneratePassword%2A> indem Sie <xref:System.Web.Security.SqlMembershipProvider> direkt aus der- <xref:System.Web.Security.Membership.Provider%2A> Eigenschaft der-Klasse auf die-Klasse verweisen <xref:System.Web.Security.Membership> .  
  
 Das generierte Kennwort enthält nur alphanumerische Zeichen und die folgenden Interpunktions Zeichen: `!@#$%^&*()_-+=[{]};:<>|./?` . Im generierten Kennwort sind keine ausgeblendeten oder nicht druckbaren Steuerzeichen enthalten.  
  
> [!NOTE]
>  Das von der-Methode erstellte Zufalls Kennwort <xref:System.Web.Security.SqlMembershipProvider.GeneratePassword%2A> ist nicht garantiert, dass der reguläre Ausdruck in der-Eigenschaft übergeben wird <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A> . Das zufällige Kennwort erfüllt jedoch die Kriterien, die von der-Eigenschaft und der-Eigenschaft festgelegt werden <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> .  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein zufälliges 10-Zeichen-Kennwort generiert.  
  
 [!code-csharp[System.Web.Security.SqlMembershipProvider#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/GeneratePasswordcs.aspx#9)]
 [!code-vb[System.Web.Security.SqlMembershipProvider#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/GeneratePasswordvb.aspx#9)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">Einführung in ASP.NET Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="GetAllUsers">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUserCollection GetAllUsers (int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUserCollection GetAllUsers(int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetAllUsers(System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAllUsers (pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUserCollection ^ GetAllUsers(int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="override this.GetAllUsers : int * int * int -&gt; System.Web.Security.MembershipUserCollection" Usage="sqlMembershipProvider.GetAllUsers (pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pageIndex">Der Index der zurückzugebenden Ergebnisseite. <paramref name="pageIndex" /> ist nullbasiert.</param>
        <param name="pageSize">Die Größe der zurückzugebenden Ergebnisseite.</param>
        <param name="totalRecords">Die Gesamtanzahl der Benutzer.</param>
        <summary>Ruft eine Auflistung aller Benutzer in der Mitgliedschaftsdatenbank von SQL Server ab.</summary>
        <returns>Eine <see cref="T:System.Web.Security.MembershipUserCollection" /> von <see cref="T:System.Web.Security.MembershipUser" />-Objekten, die alle Benutzer in der Datenbank für den konfigurierten <see cref="P:System.Web.Security.SqlMembershipProvider.ApplicationName" /> darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird von der- <xref:System.Web.Security.Membership> Klasse aufgerufen, um Benutzerinformationen aus der SQL Server Datenbank abzurufen, die in der Konfigurationsdatei der ASP.NET-Anwendung (Web.config) angegeben ist.  
  
 Die von zurückgegebenen Ergebnisse <xref:System.Web.Security.SqlMembershipProvider.GetAllUsers%2A> werden durch den `pageIndex` -Parameter und den- `pageSize` Parameter eingeschränkt. Der- `pageSize` Parameter gibt die maximale Anzahl von- <xref:System.Web.Security.MembershipUser> Objekten an, die in der zurückgegeben werden <xref:System.Web.Security.MembershipUserCollection> . Der- `pageIndex` Parameter identifiziert, welche Ergebnisseite zurückgegeben werden soll, wobei 0 die erste Seite identifiziert. Der- `totalRecords` Parameter ist ein `out` Parameter, der auf die Gesamtzahl der Mitgliedschafts Benutzer für den konfigurierten festgelegt ist `applicationName` . Wenn z. b. 13 Benutzer für den konfigurierten vorhanden sind `applicationName` und der `pageIndex` Wert 1 mit einem `pageSize` von 5 ist, <xref:System.Web.Security.MembershipUserCollection> enthält die zurückgegebene den sechsten bis zum zehnten zurückgegebenen Benutzer. Der- `totalRecords` Parameter wird auf 13 festgelegt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine Liste von Benutzern in Datenseiten mit der Anzahl der derzeit Online-Benutzer zurückgegeben.  
  
> [!NOTE]
>  In diesem Beispiel wird die- <xref:System.Web.Security.Membership> Klasse verwendet, um die <xref:System.Web.Security.SqlMembershipProvider> angegebene als `defaultProvider` in der Web.config-Datei aufzurufen. Wenn Sie als Typ auf den Standardanbieter zugreifen müssen <xref:System.Web.Security.SqlMembershipProvider> , können Sie die- <xref:System.Web.Security.Membership.Provider%2A> Eigenschaft der-Klasse umwandeln <xref:System.Web.Security.Membership> . Wenn Sie auf andere konfigurierte Anbieter als einen bestimmten Anbietertyp zugreifen möchten, können Sie über ihren konfigurierten Namen mit der <xref:System.Web.Security.Membership.Providers%2A> -Eigenschaft der <xref:System.Web.Security.Membership> -Klasse darauf zugreifen und Sie als bestimmten Anbietertyp umwandeln.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ShowUserscs.aspx#5)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ShowUsersvb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="pageIndex" /> ist kleiner als Null.  
  
- oder - 
 <paramref name="pageSize" /> ist kleiner als 1.  
  
- oder - 
 <paramref name="pageIndex" /> multipliziert mit <paramref name="pageSize" /> plus <paramref name="pageSize" /> minus eins ist größer als <see cref="F:System.Int32.MaxValue" />.</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">Einführung in ASP.NET Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="GetNumberOfUsersOnline">
      <MemberSignature Language="C#" Value="public override int GetNumberOfUsersOnline ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetNumberOfUsersOnline() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetNumberOfUsersOnline () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetNumberOfUsersOnline();" />
      <MemberSignature Language="F#" Value="override this.GetNumberOfUsersOnline : unit -&gt; int" Usage="sqlMembershipProvider.GetNumberOfUsersOnline " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt die Anzahl der Benutzer zurück, die gegenwärtig auf die Anwendung zugreifen.</summary>
        <returns>Die Anzahl von Benutzern, die derzeit auf die Anwendung zugreifen.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird von der <xref:System.Web.Security.Membership> -Klasse aufgerufen, um die Anzahl der als Online bezeichneten Benutzer aus der SQL Server Datenbank abzurufen, die in der Konfigurationsdatei der ASP.NET-Anwendung (Web.config) angegeben ist.  
  
 <xref:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline%2A> Gibt die Anzahl der Benutzer der aktuellen Anwendung zurück, deren Datum und Uhrzeit der letzten Aktivität größer sind als das aktuelle Datum und die aktuelle Zeit abzüglich des Werts der <xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A> Eigenschaft in Minuten.  
  
 Nur Benutzer, die den konfigurierten zugeordnet <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> sind, sind in der Anzahl enthalten.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine Liste der Benutzer mit der Anzahl der Benutzer zurückgegeben, die zurzeit online sind.  
  
> [!NOTE]
>  In diesem Beispiel wird die- <xref:System.Web.Security.Membership> Klasse verwendet, um die <xref:System.Web.Security.SqlMembershipProvider> angegebene als `defaultProvider` in der Web.config-Datei aufzurufen. Wenn Sie als Typ auf den Standardanbieter zugreifen müssen <xref:System.Web.Security.SqlMembershipProvider> , können Sie die- <xref:System.Web.Security.Membership.Provider%2A> Eigenschaft der-Klasse umwandeln <xref:System.Web.Security.Membership> . Wenn Sie auf andere konfigurierte Anbieter als einen bestimmten Anbietertyp zugreifen möchten, können Sie über ihren konfigurierten Namen mit der <xref:System.Web.Security.Membership.Providers%2A> -Eigenschaft der <xref:System.Web.Security.Membership> -Klasse darauf zugreifen und Sie als bestimmten Anbietertyp umwandeln.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ShowUserscs.aspx#5)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ShowUsersvb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">Einführung in ASP.NET Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="GetPassword">
      <MemberSignature Language="C#" Value="public override string GetPassword (string username, string passwordAnswer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetPassword(string username, string passwordAnswer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetPassword(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPassword (username As String, passwordAnswer As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetPassword(System::String ^ username, System::String ^ passwordAnswer);" />
      <MemberSignature Language="F#" Value="override this.GetPassword : string * string -&gt; string" Usage="sqlMembershipProvider.GetPassword (username, passwordAnswer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="passwordAnswer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Der Benutzer, für den das Kennwort abgerufen werden soll.</param>
        <param name="passwordAnswer">Die Kennwortantwort für den Benutzer.</param>
        <summary>Gibt das Kennwort für den angegebenen Benutzernamen aus der Mitgliedschaftsdatenbank von SQL Server zurück.</summary>
        <returns>Das Kennwort für den angegebenen Benutzernamen.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird von der- <xref:System.Web.Security.MembershipUser> Klasse aufgerufen, um das Kennwort für einen Benutzer aus der SQL Server Datenbank abzurufen, die in der Konfigurationsdatei der ASP.NET-Anwendung (Web.config) angegeben ist.  
  
 Wenn eine falsche Kenn Wort Antwort an die Methode übergeben wird <xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A> , wird der interne Gegenstand, der ungültige Kenn Wort Antwort Versuche verfolgt, um 1 erhöht. Dies kann dazu führen, dass der Benutzer gesperrt wird und sich nicht anmelden kann, bis der Sperr Status durch einen Rückruf der- <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> Methode gelöscht wird. Wenn die korrekte Kenn Wort Antwort angegeben wird und der Benutzer zurzeit nicht gesperrt ist, wird der interne Gegenstand, der ungültige Kenn Wort Antwort Versuche nachverfolgt, auf 0 (null) zurückgesetzt. Weitere Informationen finden Sie in den Ausführungen zur <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>-Eigenschaft und zur <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>-Eigenschaft.  
  
 Sie können die- <xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A> Methode direkt aufrufen, indem Sie zuerst <xref:System.Web.Security.SqlMembershipProvider> über die- <xref:System.Web.Security.Membership.Provider%2A> Eigenschaft der-Klasse einen Verweis auf die Instanz abrufen <xref:System.Web.Security.Membership> .  
  
 Wenn die- <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> Eigenschaft auf festgelegt ist <xref:System.Web.Security.MembershipPasswordFormat.Hashed> , kann die- <xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A> Methode das Kennwort nicht abrufen. Hash Kennwörter werden unidirektional verschlüsselt und können nicht entschlüsselt werden. Wenn die <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> -Eigenschaft auf festgelegt ist <xref:System.Web.Security.MembershipPasswordFormat.Hashed> und <xref:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval%2A> auf festgelegt ist `true` , wird eine ausgelöst, <xref:System.Configuration.Provider.ProviderException> Wenn der Anbieter initialisiert wird.  
  
 Führende und nachfolgende Leerzeichen werden aus allen Parameterwerten abgeschnitten.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird das Kennwort für einen angegebenen Benutzernamen abgerufen und in einer e-Mail-Nachricht an den Benutzer gesendet.  
  
> [!NOTE]
>  Das Zurückgeben eines Kennworts in Klartext per e-Mail wird für Websites, die ein hohes Maß an Sicherheit erfordern, nicht empfohlen. Für Standorte mit hoher Sicherheit wird empfohlen, dass Sie Kenn Wörter mithilfe der Verschlüsselung (z. b. SSL) zurückgeben.  
  
> [!NOTE]
>  In diesem Beispiel <xref:System.Web.Security.SqlMembershipProvider> wird die angegebene als `defaultProvider` in der Web.config-Datei mithilfe der- <xref:System.Web.Security.Membership> Klasse aufgerufen. Wenn Sie als Typ auf den Standardanbieter zugreifen müssen <xref:System.Web.Security.SqlMembershipProvider> , können Sie die- <xref:System.Web.Security.Membership.Provider%2A> Eigenschaft der-Klasse umwandeln <xref:System.Web.Security.Membership> . Wenn Sie auf andere konfigurierte Anbieter als einen bestimmten Anbietertyp zugreifen möchten, können Sie über ihren konfigurierten Namen mit der <xref:System.Web.Security.Membership.Providers%2A> -Eigenschaft der <xref:System.Web.Security.Membership> -Klasse darauf zugreifen und Sie als bestimmten Anbietertyp umwandeln.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/RetrievePasswordcs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/RetrievePasswordvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.Security.MembershipPasswordException"><paramref name="passwordAnswer" /> ist ungültig.  
  
- oder - 
Der durch <paramref name="username" /> identifizierte Mitgliedschaftsbenutzer ist gesperrt.</exception>
        <exception cref="T:System.NotSupportedException">Für <see cref="P:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval" /> ist <see langword="false" /> festgelegt.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException"><paramref name="username" /> kann in der Mitgliedschaftsdatenbank nicht gefunden werden.  
  
- oder - 
Beim Abrufen des Kennworts aus der Datenbank ist ein Fehler aufgetreten.</exception>
        <exception cref="T:System.ArgumentException">Einer der Parameterwerte überschreitet die maximal zulässige Länge.  
  
- oder - 
 <paramref name="username" /> ist eine leere Zeichenfolge (""), enthält ein Komma oder ist länger als 256 Zeichen.  
  
- oder - 
 <paramref name="passwordAnswer" /> ist eine leere Zeichenfolge, und <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> ist <see langword="true" />.  
  
- oder - 
 <paramref name="passwordAnswer" /> ist länger als 128 Zeichen.  
  
- oder - 
Die codierte Version von <paramref name="passwordAnswer" /> ist länger als 128 Zeichen.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="username" /> ist <see langword="null" />.  
  
- oder - 
 <paramref name="passwordAnswer" /> ist <see langword="null" />, und <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> ist <see langword="true" />.</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">Einführung in ASP.NET Mitgliedschaft</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUser">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ruft die Informationen für einen Mitgliedschaftsbenutzer aus der Datenquelle ab.</summary>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">Einführung in ASP.NET Mitgliedschaft</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUser GetUser (object providerUserKey, bool userIsOnline);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUser GetUser(object providerUserKey, bool userIsOnline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetUser(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetUser (providerUserKey As Object, userIsOnline As Boolean) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUser ^ GetUser(System::Object ^ providerUserKey, bool userIsOnline);" />
      <MemberSignature Language="F#" Value="override this.GetUser : obj * bool -&gt; System.Web.Security.MembershipUser" Usage="sqlMembershipProvider.GetUser (providerUserKey, userIsOnline)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerUserKey" Type="System.Object" />
        <Parameter Name="userIsOnline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="providerUserKey">Der eindeutige Bezeichner für den Benutzer.</param>
        <param name="userIsOnline"><see langword="true" />, um den Datums-/Zeitstempel der letzten Aktivität für den angegebenen Benutzer zu aktualisieren, andernfalls <see langword="false" />.</param>
        <summary>Ruft die Informationen aus der Datenquelle für den Mitgliedschaftsbenutzer ab, der dem angegebenen eindeutigen Bezeichner zugeordnet ist, und aktualisiert gegebenenfalls den Datums-/Zeitstempel der letzten Aktivität des Benutzers.</summary>
        <returns>Ein <see cref="T:System.Web.Security.MembershipUser" />-Objekt, das den Benutzer darstellt, der dem angegebenen eindeutigen Bezeichner zugeordnet ist. Wenn für den angegebenen <paramref name="providerUserKey" />-Wert kein Benutzer in der Datenbank gefunden wird, wird <see langword="null" /> zurückgegeben.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetUser%2A> Ruft die Benutzerinformationen aus der Datenquelle ab und erstellt ein- <xref:System.Web.Security.MembershipUser> Objekt, das mit den zurückgegebenen Daten gefüllt ist. Der Benutzer wird mit dem eindeutigen Bezeichner identifiziert, der mit dem-Parameter angegeben wird `providerUserKey` .  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="providerUserKey" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="providerUserKey" /> ist nicht vom Typ <see cref="T:System.Guid" />.</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">Einführung in ASP.NET Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUser GetUser (string username, bool userIsOnline);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUser GetUser(string username, bool userIsOnline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetUser(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetUser (username As String, userIsOnline As Boolean) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUser ^ GetUser(System::String ^ username, bool userIsOnline);" />
      <MemberSignature Language="F#" Value="override this.GetUser : string * bool -&gt; System.Web.Security.MembershipUser" Usage="sqlMembershipProvider.GetUser (username, userIsOnline)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="userIsOnline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">Der Name des Benutzers, für den Informationen abgerufen werden sollen.</param>
        <param name="userIsOnline"><see langword="true" />, um den Datums-/Zeitstempel der letzten Aktivität des Benutzers zu aktualisieren; <see langword="false" />, um Benutzerinformationen ohne Aktualisierung des Datums-/Zeitstempels für die letzte Aktivität des Benutzers zurückzugeben.</param>
        <summary>Gibt für einen Benutzer Informationen aus der Mitgliedschaftsdatenbank von SQL Server zurück und stellt eine Option zum Aktualisieren des Datums-/Zeitstempels der letzten Aktivität des Benutzers bereit.</summary>
        <returns>Ein <see cref="T:System.Web.Security.MembershipUser" />-Objekt, das den angegebenen Benutzer darstellt. Wenn für den angegebenen <paramref name="username" />-Wert kein Benutzer in der Datenbank gefunden wird, wird <see langword="null" /> zurückgegeben.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird von der- <xref:System.Web.Security.Membership> Klasse aufgerufen, um Benutzerinformationen aus der SQL Server Datenbank abzurufen, die in der Konfigurationsdatei der ASP.NET-Anwendung (Web.config) angegeben ist.  
  
 Wenn `userIsOnline` `true` den Wert hat, wird der Datums-/Uhrzeitstempel der letzten Aktivität für den Benutzer auf das aktuelle Datum und die aktuelle Uhrzeit aktualisiert. Dies wird in den <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> -und <xref:System.Web.Security.MembershipUser.IsOnline%2A> -Eigenschaften und in dem von zurückgegebenen Wert widergespiegelt <xref:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline%2A> .  
  
 Beim `username`-Parameterwert werden führende und nachstehende Leerzeichen abgeschnitten.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die- <xref:System.Web.Security.SqlMembershipProvider.GetUser%2A> Methode verwendet, um zu bestimmen, ob ein Benutzer vorhanden ist, bevor das Kennwort für den Benutzer abgerufen wird.  
  
> [!NOTE]
>  In diesem Beispiel wird die- <xref:System.Web.Security.Membership> Klasse verwendet, um die <xref:System.Web.Security.SqlMembershipProvider> angegebene als `defaultProvider` in der Web.config-Datei aufzurufen. Wenn Sie als Typ auf den Standardanbieter zugreifen müssen <xref:System.Web.Security.SqlMembershipProvider> , können Sie die- <xref:System.Web.Security.Membership.Provider%2A> Eigenschaft der-Klasse umwandeln <xref:System.Web.Security.Membership> . Wenn Sie auf andere konfigurierte Anbieter als einen bestimmten Anbietertyp zugreifen möchten, können Sie über ihren konfigurierten Namen mit der <xref:System.Web.Security.Membership.Providers%2A> -Eigenschaft der <xref:System.Web.Security.Membership> -Klasse darauf zugreifen und Sie als bestimmten Anbietertyp umwandeln.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/RetrievePasswordcs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/RetrievePasswordvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="username" /> überschreitet 256 Zeichen.  
  
- oder - 
 <paramref name="username" /> enthält ein Komma.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="username" /> ist <see langword="null" />.</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">Einführung in ASP.NET Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="GetUserNameByEmail">
      <MemberSignature Language="C#" Value="public override string GetUserNameByEmail (string email);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetUserNameByEmail(string email) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetUserNameByEmail(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetUserNameByEmail (email As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetUserNameByEmail(System::String ^ email);" />
      <MemberSignature Language="F#" Value="override this.GetUserNameByEmail : string -&gt; string" Usage="sqlMembershipProvider.GetUserNameByEmail email" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="email" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="email">Die gesuchte E-Mail-Adresse.</param>
        <summary>Ruft den Benutzernamen ab, der der angegebenen E-Mail-Adresse zugeordnet ist.</summary>
        <returns>Der Benutzername, der der angegebenen E-Mail-Adresse zugeordnet ist. Wenn keine Übereinstimmung gefunden wird, gibt diese Methode <see langword="null" /> zurück.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird von der <xref:System.Web.Security.Membership> -Klasse mit einer e-Mail-Adresse aufgerufen, die zum Abrufen eines zugeordneten Benutzernamens aus der SQL Server Datenbank verwendet wird, die in der Konfigurationsdatei der ASP.NET-Anwendung (Web.config) angegeben ist.  
  
 Wenn mehr als ein Benutzer in der Mitgliedschafts Datenbank dieselbe e-Mail-Adresse aufweist, wird der erste angetretene Benutzername zurückgegeben. Sie können das `requiresUniqueEmail` `true` -Attribut in der Anwendungs Konfigurationsdatei auf festlegen, um sicherzustellen, dass jede e-Mail-Adresse in der Datenbank eindeutig ist.  
  
 Beim `email`-Parameterwert werden führende und nachstehende Leerzeichen abgeschnitten.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird der Benutzername für eine angegebene e-Mail-Adresse abgerufen.  
  
> [!NOTE]
>  In diesem Beispiel wird die- <xref:System.Web.Security.Membership> Klasse verwendet, um die <xref:System.Web.Security.SqlMembershipProvider> angegebene als `defaultProvider` in der Web.config-Datei aufzurufen. Wenn Sie als Typ auf den Standardanbieter zugreifen müssen <xref:System.Web.Security.SqlMembershipProvider> , können Sie die- <xref:System.Web.Security.Membership.Provider%2A> Eigenschaft der-Klasse umwandeln <xref:System.Web.Security.Membership> . Wenn Sie auf andere konfigurierte Anbieter als einen bestimmten Anbietertyp zugreifen möchten, können Sie über ihren konfigurierten Namen mit der <xref:System.Web.Security.Membership.Providers%2A> -Eigenschaft der <xref:System.Web.Security.Membership> -Klasse darauf zugreifen und Sie als bestimmten Anbietertyp umwandeln.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/GetUserByEmailcs.aspx#7)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/GetUserByEmailvb.aspx#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="email" /> überschreitet 256 Zeichen.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Mindestens ein Benutzer mit derselben E-Mail-Adresse ist in der Datenbank vorhanden, und <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" /> entspricht <see langword="true" />.</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">Einführung in ASP.NET Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (name As String, config As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ config);" />
      <MemberSignature Language="F#" Value="override this.Initialize : string * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="sqlMembershipProvider.Initialize (name, config)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="config" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name">Der Name der zu initialisierenden <see cref="T:System.Web.Security.SqlMembershipProvider" />-Instanz.</param>
        <param name="config">Eine <see cref="T:System.Collections.Specialized.NameValueCollection" />, die die Namen und Werte der Konfigurationsoptionen für den Mitgliedschaftsanbieter enthält.</param>
        <summary>Initialisiert den SQL Server-Mitgliedschaftsanbieter mit den Eigenschaftswerten, die in der Konfigurationsdatei der ASP.NET-Anwendung angegeben sind. Diese Methode ist nicht für die direkte Verwendung im Code vorgesehen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode initialisiert die <xref:System.Web.Security.SqlMembershipProvider> mit den Eigenschafts Werten, die in der ASP.NET-Anwendungs Konfigurationsdatei (Web.config) angegeben sind, und ist nicht für die direkte Verwendung im Code vorgesehen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="config" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Das Attribut <see langword="enablePasswordRetrieval" />, <see langword="enablePasswordReset" />, <see langword="requiresQuestionAndAnswer" /> oder <see langword="requiresUniqueEmail" /> ist auf einen Wert festgelegt, der nicht <see langword="Boolean" /> ist.  
  
- oder - 
Das <see langword="maxInvalidPasswordAttempts" />-Attribut oder das <see langword="passwordAttemptWindow" />-Attribut ist auf einen Wert festgelegt, der keine positive ganze Zahl ist.  
  
- oder - 
Das <see langword="minRequiredPasswordLength" />-Attribut ist auf einen Wert festgelegt, der keine positive ganze Zahl ist, oder der Wert ist größer als 128.  
  
- oder - 
Das <see langword="minRequiredNonalphanumericCharacters" />-Attribut ist auf einen Wert festgelegt, der nicht 0 (null) und keine positive ganze Zahl ist, oder der Wert ist größer als 128.  
  
- oder - 
Der Wert für das <see langword="passwordStrengthRegularExpression" />-Attribut ist kein gültiger regulärer Ausdruck.  
  
- oder - 
Das <see langword="applicationName" />-Attribut ist auf einen Wert mit mehr als 256 Zeichen festgelegt.  
  
- oder - 
Das in der Anwendungskonfigurationsdatei angegebene <see langword="passwordFormat" />-Attribut ist eine ungültige <see cref="T:System.Web.Security.MembershipPasswordFormat" />-Enumeration.  
  
- oder - 
In der Anwendungskonfiguration ist das <see langword="passwordFormat" />-Attribut auf <see cref="F:System.Web.Security.MembershipPasswordFormat.Hashed" /> festgelegt, und das <see langword="enablePasswordRetrieval" />-Attribut ist auf <see langword="true" /> festgelegt.  
  
- oder - 
Das <see langword="passwordFormat" />-Attribut ist auf <see langword="Encrypted" /> festgelegt, und das <see href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/w8h3skw9(v%3dvs.100)">&lt;machineKey&gt;</see>-Konfigurationselement legt das <see langword="decryptionKey" />-Attribut auf <see langword="AutoGenerate" /> fest.  
  
- oder - 
Das <see langword="connectionStringName" />-Attribut ist leer oder in der Anwendungskonfiguration nicht vorhanden.  
  
- oder - 
Der Wert der Verbindungszeichenfolge für den <see langword="connectionStringName" />-Attributwert ist leer, oder der angegebene <see langword="connectionStringName" /> ist in der Anwendungskonfigurationsdatei nicht vorhanden.  
  
- oder - 
Der Wert für das <see langword="commandTimeout" />-Attribut ist auf einen Wert festgelegt, der nicht 0 (null) und keine positive ganze Zahl ist.  
  
- oder - 
Die Anwendungskonfigurationsdatei dieser <see cref="T:System.Web.Security.SqlMembershipProvider" />-Instanz enthält ein unbekanntes Attribut.</exception>
        <exception cref="T:System.Web.HttpException">Die aktuelle Vertrauensebene ist niedriger als <see langword="Low" />.</exception>
        <exception cref="T:System.InvalidOperationException">Der Anbieter wurde bereits vor dem aktuellen Aufruf der <see cref="M:System.Web.Security.SqlMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />-Methode initialisiert.</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">Einführung in ASP.NET Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="MaxInvalidPasswordAttempts">
      <MemberSignature Language="C#" Value="public override int MaxInvalidPasswordAttempts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxInvalidPasswordAttempts" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MaxInvalidPasswordAttempts As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MaxInvalidPasswordAttempts { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxInvalidPasswordAttempts : int" Usage="System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der zulässigen ungültigen Kennwort- oder Kennwortantwortversuche ab, bevor der Mitgliedschaftsbenutzer ausgesperrt wird.</summary>
        <value>Die Anzahl der zulässigen ungültigen Kennwort- oder Kennwortantwortversuche, bevor der Mitgliedschaftsbenutzer ausgesperrt wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> funktioniert zusammen mit dem <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> , um sich gegen eine unerwünschte Quelle zu schützen, die das Kennwort oder die Kenn Wort Antwort eines Mitgliedschafts Benutzers durch wiederholte Versuche erraten. Wenn die Anzahl der ungültigen Kenn Wörter oder Kenn Wort Fragen für einen Mitgliedschafts Benutzer größer oder gleich dem Wert der- <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> Eigenschaft innerhalb der durch den Wert der-Eigenschaft identifizierten Anzahl von Minuten ist <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> , wird der Mitgliedschafts Benutzer gesperrt, indem die-Eigenschaft auf festgelegt wird, <xref:System.Web.Security.MembershipUser.IsLockedOut%2A> `true` bis der Benutzer mit der-Methode entsperrt wird <xref:System.Web.Security.MembershipUser.UnlockUser%2A> . Wenn ein gültiges Kennwort angegeben wird, bevor der <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> Wert erreicht wird, werden die Leistungsindikatoren, die die Anzahl der ungültigen Kennwort-und Kenn Wort Antwort Versuche verfolgen, auf Null zurückgesetzt. Wenn eine gültige Kenn Wort Antwort bereitgestellt wird <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> , bevor der Wert erreicht wird, wird nur der Leistungs Monitor, der die Anzahl der ungültigen Kenn Wort Antwort Versuche nachverfolgt, auf Null zurückgesetzt.  
  
 Mit wird die <xref:System.Web.Security.SqlMembershipProvider> Anzahl der ungültigen Kenn Wort Versuche und ungültigen Kenn Wort Antwort Versuche getrennt. Ungültige Kenn Wort Versuche führen dazu, dass nur der Kenn Wort Versuchs-Counter erhöht wird. Ungültige Kenn Wort Antwort Versuche führen dazu, dass nur der Password-Answer-Counter erhöht wird.  
  
 Der <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> Eigenschafts Wert wird in der Anwendungskonfiguration mithilfe des- `maxInvalidPasswordAttempts` Attributs des [Mitgliedschafts](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100)) Konfigurations Abschnitts festgelegt.  
  
 Wenn die <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> -Eigenschaft auf festgelegt ist `false` , werden ungültige Kenn Wort Antwort Versuche nicht nachverfolgt.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt das [Mitgliedschafts](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100)) Element im- `system.web` Abschnitt der Web.config Datei für eine ASP.NET-Anwendung. Er gibt an, dass die Anwendung eine Instanz von verwendet, <xref:System.Web.Security.SqlMembershipProvider> und legt das- `maxInvalidPasswordAttempts` Attribut auf fünf ungültige Versuche und `passwordAttemptWindow` auf 30 Minuten fest.  
  
```  
<membership defaultProvider="SqlProvider"   
  userIsOnlineTimeWindow="20">  
    <providers>  
      <add name="SqlProvider"  
        type="System.Web.Security.SqlMembershipProvider"  
        connectionStringName="SqlServices"  
        requiresQuestionAndAnswer="true"  
        maxInvalidPasswordAttempts="5"  
        passwordAttemptWindow="30"  
        applicationName="MyApplication" />  
    </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">Einführung in ASP.NET Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="MinRequiredNonAlphanumericCharacters">
      <MemberSignature Language="C#" Value="public override int MinRequiredNonAlphanumericCharacters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinRequiredNonAlphanumericCharacters" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MinRequiredNonAlphanumericCharacters As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MinRequiredNonAlphanumericCharacters { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MinRequiredNonAlphanumericCharacters : int" Usage="System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die minimale Anzahl von Sonderzeichen ab, die ein gültiges Kennwort enthalten muss.</summary>
        <value>Die minimale Anzahl von Sonderzeichen, die ein gültiges Kennwort enthalten muss.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die- <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> Eigenschaft gibt die Mindestanzahl von speziellen, nicht alphabetischen Zeichen zurück, die eingegeben werden müssen, um ein gültiges Kennwort für das-Objekt zu erstellen <xref:System.Web.Security.SqlMembershipProvider> .  
  
 Der <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> Eigenschafts Wert wird in der Anwendungskonfiguration mithilfe des- `minRequiredNonalphanumericCharacters` Attributs des [Mitgliedschafts Elements (ASP.NET Settings Schema)](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v=vs.100)) -Konfigurations Element festgelegt.  
  
 Ein nicht alphanumerisches Zeichen ist ein Zeichen, das von der <xref:System.Char.IsLetterOrDigit%2A> Methode zurückgegeben wird `false` .  
  
   
  
## Examples  
 Das folgende Beispiel zeigt das Element [Mitgliedschafts Element (ASP.NET Settings Schema)](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v=vs.100)) im `system.web` -Abschnitt der Web.config Datei der Anwendung. Er gibt an, dass die Anwendung eine Instanz der- <xref:System.Web.Security.SqlMembershipProvider> Klasse verwendet, um Mitgliedschafts Dienste bereitzustellen, und legt das- `minRequiredNonalphanumericCharacters` Attribut auf ein Zeichen fest.  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20">  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      minRequiredNonalphanumericCharacters="1"  
      />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">Einführung in ASP.NET Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="MinRequiredPasswordLength">
      <MemberSignature Language="C#" Value="public override int MinRequiredPasswordLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinRequiredPasswordLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MinRequiredPasswordLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MinRequiredPasswordLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MinRequiredPasswordLength : int" Usage="System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die minimale erforderliche Länge für ein Kennwort ab.</summary>
        <value>Die minimale erforderliche Länge für ein Kennwort.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> die-Eigenschaft ruft die Mindestanzahl von Zeichen ab, die eingegeben werden müssen, um ein gültiges Kennwort für das-Objekt zu erstellen <xref:System.Web.Security.SqlMembershipProvider> .  
  
 Der <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A> Eigenschafts Wert wird in der Anwendungskonfiguration mithilfe des- `minRequiredPasswordLength` Attributs des [Mitgliedschafts Elements (ASP.NET Settings Schema)](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v=vs.100)) -Konfigurations Element festgelegt.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt das Element [Mitgliedschafts Element (ASP.NET Settings Schema)](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v=vs.100)) im `system.web` -Abschnitt der Web.config Datei der Anwendung. Er gibt an, dass die Anwendung eine Instanz der- <xref:System.Web.Security.SqlMembershipProvider> Klasse verwendet, um Mitgliedschafts Dienste bereitzustellen, und legt das- `minRequiredPasswordLength` Attribut auf sieben Zeichen fest.  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20">  
    <providers>  
      <add  
        name="SqlProvider"  
        type="System.Web.Security.SqlMembershipProvider"  
        connectionStringName="SqlServices"  
        requiresQuestionAndAnswer="true"  
        minRequiredPasswordLength="7"  
        />  
    </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">Einführung in ASP.NET Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="PasswordAttemptWindow">
      <MemberSignature Language="C#" Value="public override int PasswordAttemptWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PasswordAttemptWindow" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PasswordAttemptWindow As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int PasswordAttemptWindow { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PasswordAttemptWindow : int" Usage="System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Zeitfenster ab, in dem aufeinander folgende fehlerhafte Versuche, ein gültiges Kennwort oder eine gültige Kennwortantwort bereitzustellen, nachverfolgt werden.</summary>
        <value>Das Zeitfenster, in Minuten, in dem aufeinander folgende fehlerhafte Versuche, ein gültiges Kennwort oder eine gültige Kennwortantwort bereitzustellen, nachverfolgt werden. Standardwert: 10 Minuten. Wenn das Zeitintervall zwischen dem aktuellen fehlerhaften Versuch und dem letzten fehlerhaften Versuch größer als die Einstellung der <see cref="P:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow" />-Eigenschaft ist, wird jeder fehlerhafte Versuch wie der erste fehlerhafte Versuch behandelt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die- <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> Eigenschaft wird in Verbindung mit der- <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> Eigenschaft verwendet, um Schutz vor unerwünschten Quellen zu haben, die das Kennwort oder die Kenn Wort Antwort eines Mitgliedschafts Benutzers durch wiederholte Versuche erraten. Wenn Benutzer versuchen, sich anzumelden, Ihr Kennwort zu ändern oder Ihr Kennwort zurückzusetzen, ist innerhalb eines angegebenen Zeitfensters nur eine bestimmte Anzahl von aufeinander folgenden versuchen zulässig. Die Länge des Zeitfensters wird durch die- <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> Eigenschaft angegeben, die die Anzahl der zulässigen Minuten zwischen ungültigen versuchen angibt. Wenn die Anzahl der aufeinander folgenden fehlgeschlagenen Versuche, die ein Benutzer zum Zurücksetzen seines Kennworts durchführt, gleich dem in der-Eigenschaft gespeicherten Wert <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> ist, und der seit dem letzten ungültigen Versuch verstrichene Zeitraum kleiner als die für die-Eigenschaft angegebene Anzahl von Minuten ist <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> , wird der Mitgliedschafts Benutzer gesperrt, indem die-Eigenschaft auf festgelegt wird <xref:System.Web.Security.MembershipUser.IsLockedOut%2A> `true` . Der Benutzer kann durch Aufrufen der-Methode entsperrt werden <xref:System.Web.Security.MembershipUser.UnlockUser%2A> . Wenn das Intervall zwischen dem aktuellen fehlgeschlagenen Versuch und dem letzten fehlgeschlagenen Versuch größer ist als die <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> Eigenschafts Einstellung, wird der aktuelle ungültige Versuch als erster gezählt. Wenn eine gültige Kenn Wort Antwort bereitgestellt wird, bevor die maximale Anzahl zulässiger ungültiger Versuche erreicht wird, wird die Anzahl der ungültigen Kenn Wort Antwort Versuche auf 0 (null) festgelegt. Wenn ein gültiges Kennwort angegeben wird, bevor die maximal zulässige Anzahl zulässiger Versuche erreicht ist, wird die Anzahl der ungültigen Kenn Wort Versuche und die Anzahl der ungültigen Kenn Wort Antwort Versuche auf 0 (null) festgelegt.  
  
 Der gibt die <xref:System.Web.Security.SqlMembershipProvider> Anzahl der ungültigen Kenn Wort Versuche und ungültigen Kenn Wort Antwort Versuche getrennt aus. Ungültige Kenn Wort Versuche führen dazu, dass nur der Kenn Wort Versuchs-Counter erhöht wird. Ungültige Kenn Wort Antwort Versuche führen dazu, dass nur der Password-Answer-Counter erhöht wird.  
  
 Der <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> Eigenschafts Wert wird in der Anwendungskonfiguration mithilfe des- `passwordAttemptWindow` Attributs des [Mitgliedschafts](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100)) Konfigurations Abschnitts festgelegt.  
  
 Wenn die <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> -Eigenschaft auf festgelegt ist `false` , werden ungültige Kenn Wort Antwort Versuche nicht nachverfolgt.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt das [Mitgliedschafts](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100)) Element im- `system.web` Abschnitt der Web.config Datei für eine ASP.NET-Anwendung. Er gibt an, dass die Anwendung eine Instanz von verwendet, <xref:System.Web.Security.SqlMembershipProvider> und legt das- `maxInvalidPasswordAttempts` Attribut auf fünf ungültige Versuche und `passwordAttemptWindow` auf 30 Minuten fest.  
  
```  
<membership defaultProvider="SqlProvider"   
  userIsOnlineTimeWindow="20">  
    <providers>  
      <add name="SqlProvider"  
        type="System.Web.Security.SqlMembershipProvider"  
        connectionStringName="SqlServices"  
        requiresQuestionAndAnswer="true"  
        maxInvalidPasswordAttempts="5"  
        passwordAttemptWindow="30"  
        applicationName="MyApplication" />  
    </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">Einführung in ASP.NET Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="PasswordFormat">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipPasswordFormat PasswordFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Security.MembershipPasswordFormat PasswordFormat" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.PasswordFormat" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PasswordFormat As MembershipPasswordFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::Security::MembershipPasswordFormat PasswordFormat { System::Web::Security::MembershipPasswordFormat get(); };" />
      <MemberSignature Language="F#" Value="member this.PasswordFormat : System.Web.Security.MembershipPasswordFormat" Usage="System.Web.Security.SqlMembershipProvider.PasswordFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipPasswordFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der das Format zum Speichern von Kennwörtern in der SQL Server-Mitgliedschaftsdatenbank angibt.</summary>
        <value>Einer der <see cref="T:System.Web.Security.MembershipPasswordFormat" />-Werte, der das Format zum Speichern von Kennwörtern in der SQL Server-Datenbank angibt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie `Hashed` nur, `Clear` und `Encrypted` sind nicht sicher. `Hashed` Kenn Wörter werden mithilfe eines unidirektionalen Hash Algorithmus und eines zufällig generierten Salt-Werts in der Datenbank gespeichert. Wenn ein Kennwort überprüft wird, wird es mit dem Saltwert in der Datenbank für die Verifizierung verschlüsselt. Verschlüsselte Kennwörter können nicht abgerufen werden. `Encrypted` Kenn Wörter werden nicht als sicher eingestuft, da eine Verletzung, die den Daten Bank Inhalt zeigt, auch den Verschlüsselungsschlüssel verfügbar machen kann. Dies bedeutet, dass Ihre verschlüsselten Kenn Wörter entschlüsselt und verfügbar gemacht werden können.  
  
 Der <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> Wert wird im [Anbieter](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/6d4936ht(v%3dvs.100)) Abschnitt der Web.config-Datei für die ASP.NET-Anwendung angegeben.  
  
 `Encrypted` und Kenn `Hashed` Wörter werden standardmäßig basierend auf Informationen, die im [machineKey](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/w8h3skw9(v%3dvs.100)) -Element in Ihrer Konfiguration bereitgestellt werden, verschlüsselt oder Hashwert erstellt. Beachten Sie Folgendes: Wenn Sie den Wert `3DES` für das- `validation` Attribut angeben, oder wenn kein Wert angegeben ist, werden Hashwerte mit Hash Kennwörtern mithilfe des-Algorithmus durchsucht <xref:System.Security.Cryptography.SHA1> .  
  
 Ein benutzerdefinierter Hash Algorithmus kann mithilfe des- `hashAlgorithmType` Attributs des [Mitgliedschafts Element-Konfigurations Elements (ASP.NET Settings Schema)](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v=vs.100)) definiert werden. Wenn Sie die Option Verschlüsselung auswählen, verwendet die standardmäßige Kenn Wort Verschlüsselung AES. Sie können den Verschlüsselungsalgorithmus ändern, indem Sie das- `decryption` Attribut des [machineKey](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/w8h3skw9(v%3dvs.100)) -Konfigurations Elements festlegen. Wenn Sie Kenn Wörter verschlüsseln, müssen Sie `decryptionKey` im [machineKey](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/w8h3skw9(v%3dvs.100)) -Element einen expliziten Wert für das-Attribut angeben. Der Standardwert `AutoGenerate` für das- `decryptionKey` Attribut wird nicht unterstützt, wenn verschlüsselte Kenn Wörter mit ASP.NET-Mitgliedschaft verwendet werden.  
  
 Aufgrund von Problemen durch Konflikte mit SHA1 wird von Microsoft ein Sicherheitsmodell empfohlen, das mindestens auf SHA256 basiert.  
  
## Examples  
 Das folgende Codebeispiel zeigt das [Mitgliedschafts](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100)) Element im- `system.web` Abschnitt der Web.config Datei für eine ASP.NET-Anwendung. Gibt die Instanz der Anwendung <xref:System.Web.Security.SqlMembershipProvider> an und legt das Kenn Wort Format auf fest `Hashed` .  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="false"  
      enablePasswordReset="true"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Hashed"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">Einführung in ASP.NET Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="PasswordStrengthRegularExpression">
      <MemberSignature Language="C#" Value="public override string PasswordStrengthRegularExpression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordStrengthRegularExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PasswordStrengthRegularExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PasswordStrengthRegularExpression { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PasswordStrengthRegularExpression : string" Usage="System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den regulären Ausdruck ab, der zum Auswerten eines Kennworts verwendet wird.</summary>
        <value>Ein regulärer Ausdruck, der zum Auswerten eines Kennworts verwendet wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die- <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A> Eigenschaft ruft den regulären Ausdruck ab, der zum Auswerten der Kenn Wort Komplexität für das Objekt verwendet wird <xref:System.Web.Security.SqlMembershipProvider> .  
  
 Die- <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A> Eigenschaft wird in der Anwendungskonfiguration mithilfe des- `passwordStrengthRegularExpression` Attributs des [Mitgliedschafts Elements (ASP.NET Settings Schema)](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v=vs.100)) -Konfigurations Element festgelegt.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt das Element [Mitgliedschafts Element (ASP.NET Settings Schema)](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v=vs.100)) im `system.web` -Abschnitt der Web.config Datei der Anwendung. Er gibt an, dass die Anwendung eine Instanz der- <xref:System.Web.Security.SqlMembershipProvider> Klasse verwendet, um Mitgliedschafts Dienste bereitzustellen, und legt das- `passwordStrengthRegularExpression` Attribut auf einen regulären Ausdruck fest, der überprüft, ob das Kennwort die folgenden Kriterien erfüllt:  
  
-   Mindestens sieben Zeichen.  
  
-   Enthält mindestens eine Ziffer.  
  
-   Enthält mindestens ein Sonderzeichen (nicht alphanumerisches Zeichen).  
  
 Wenn das Kennwort diese Kriterien nicht erfüllt, wird das Kennwort vom Mitgliedschafts Anbieter nicht akzeptiert.  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20">  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      passwordStrengthRegularExpression="@\"(?=.{6,})(?=(.*\d){1,})(?=(.*\W){1,})"  
      />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">Einführung in ASP.NET Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="RequiresQuestionAndAnswer">
      <MemberSignature Language="C#" Value="public override bool RequiresQuestionAndAnswer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresQuestionAndAnswer" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RequiresQuestionAndAnswer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresQuestionAndAnswer { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresQuestionAndAnswer : bool" Usage="System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der SQL Server-Mitgliedschaftsanbieter so konfiguriert ist, dass der Benutzer zum Zurücksetzen und Abrufen des Kennworts eine Kennwortfrage beantworten muss.</summary>
        <value><see langword="true" />, wenn eine Kennwortantwort für das Zurücksetzen und Abrufen von Kennwörtern erforderlich ist, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn eine Kenn Wort Frage und-Antwort erforderlich ist, wird beim Abrufen oder Zurücksetzen eines Benutzer Kennworts eine zusätzliche Sicherheitsebene bereitgestellt. Beim Erstellen eines Benutzernamens kann ein Benutzer eine Frage und eine Antwort angeben, die später verwendet werden können, um ein vergessenes Kennwort abzurufen oder zurückzusetzen. Wenn <xref:System.Web.Security.SqlMembershipProvider.EnablePasswordReset%2A> sowohl die-Eigenschaft als auch die- <xref:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval%2A> Eigenschaft sind `false` , ist der Wert der- <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A> Eigenschaft irrelevant.  
  
 Weitere Informationen finden Sie unter <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A> und <xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A>.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt das [Mitgliedschafts](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100)) Element im- `system.web` Abschnitt der Web.config Datei für eine ASP.NET-Anwendung. Sie gibt die Instanz der Anwendung <xref:System.Web.Security.SqlMembershipProvider> an und konfiguriert sie so, dass Sie eine Kenn Wort Antwort für das Zurücksetzen oder Abrufen von Kenn Wörtern erfordert.  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="false"  
      enablePasswordReset="true"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Hashed"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">Einführung in ASP.NET Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="RequiresUniqueEmail">
      <MemberSignature Language="C#" Value="public override bool RequiresUniqueEmail { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresUniqueEmail" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RequiresUniqueEmail As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresUniqueEmail { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresUniqueEmail : bool" Usage="System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der SQL Server-Mitgliedschaftsanbieter so konfiguriert ist, dass eine eindeutige E-Mail-Adresse für jeden Benutzernamen erforderlich ist.</summary>
        <value><see langword="true" /> Wenn der Mitgliedschafts Anbieter eine eindeutige e-Mail-Adresse erfordert, andernfalls <see langword="false" /> . Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Codebeispiel zeigt das [Mitgliedschafts](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100)) Element im- `system.web` Abschnitt der Web.config Datei für eine ASP.NET-Anwendung. Sie gibt die <xref:System.Web.Security.SqlMembershipProvider> -Instanz an und konfiguriert sie so, dass eine eindeutige e-Mail-Adresse für jeden Benutzernamen erforderlich ist.  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="false"  
      enablePasswordReset="true"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Hashed"  
      requiresUniqueEmail="true"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">Einführung in ASP.NET Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="ResetPassword">
      <MemberSignature Language="C#" Value="public override string ResetPassword (string username, string passwordAnswer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ResetPassword(string username, string passwordAnswer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.ResetPassword(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ResetPassword (username As String, passwordAnswer As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ResetPassword(System::String ^ username, System::String ^ passwordAnswer);" />
      <MemberSignature Language="F#" Value="override this.ResetPassword : string * string -&gt; string" Usage="sqlMembershipProvider.ResetPassword (username, passwordAnswer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="passwordAnswer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Der Benutzer, für den das Kennwort zurückgesetzt werden soll.</param>
        <param name="passwordAnswer">Die Kennwortantwort für den angegebenen Benutzer.</param>
        <summary>Setzt das Kennwort eines Benutzers auf ein neues, automatisch generiertes Kennwort zurück.</summary>
        <returns>Das neue Kennwort für den angegebenen Benutzer.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird von der- <xref:System.Web.Security.Membership> Klasse aufgerufen, um das Kennwort für einen Benutzer in der SQL Server Datenbank, die in der Konfigurationsdatei der ASP.NET-Anwendung (Web.config) angegeben ist, auf einen neuen, zufällig generierten Wert zurückzusetzen. Das neue Kennwort wird zurückgegeben.  
  
> [!NOTE]
>  Das von der-Methode erstellte Zufalls Kennwort <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A> ist nicht garantiert, dass der reguläre Ausdruck in der-Eigenschaft übergeben wird <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A> . Das zufällige Kennwort erfüllt jedoch die Kriterien, die von der-Eigenschaft und der-Eigenschaft festgelegt werden <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> .  
  
 Die- <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A> Methode wird am häufigsten verwendet, wenn die- <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> Eigenschaft auf festgelegt ist `Hashed` . Wenn ein Benutzer ein Kennwort vergisst, das mit einem Hashwert versehen ist, kann das Kennwort nicht abgerufen werden. Der Anbieter kann das Kennwort jedoch auf ein neues, automatisch generiertes Kennwort zurücksetzen, wenn der Benutzer die richtige Kenn Wort Antwort bereitstellt.  
  
 Wenn eine falsche Kenn Wort Antwort an die Methode übergeben wird <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A> , wird der interne Counter, der ungültige Kenn Wort Versuche verfolgt, um eins erhöht. Dies kann dazu führen, dass der Benutzer gesperrt wird und sich nicht anmelden kann, bis der Sperr Status durch einen Rückruf der- <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> Methode gelöscht wird. Wenn die korrekte Kenn Wort Antwort angegeben wird und der Benutzer zurzeit nicht gesperrt ist, wird der interne Gegenstand, der ungültige Kenn Wort Antwort Versuche nachverfolgt, auf 0 (null) zurückgesetzt. Weitere Informationen finden Sie in den Ausführungen zur <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>-Eigenschaft und zur <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>-Eigenschaft.  
  
 Sie können die- <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A> Methode direkt aufrufen, indem Sie zuerst einen Verweis auf die <xref:System.Web.Security.SqlMembershipProvider> Instanz aus der- <xref:System.Web.Security.Membership.Provider%2A> Eigenschaft der- <xref:System.Web.Security.Membership> Klasse abrufen. Das generierte Kennwort ist mindestens 14 Zeichen lang oder die in der-Eigenschaft angegebene Länge <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> und enthält die Anzahl der nicht-alphanumerischen Zeichen, die in der-Eigenschaft angegeben werden <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> . Das Kennwort ist nicht garantiert, dass der reguläre Ausdruck, der in der- <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A> Eigenschaft enthalten ist, übergeben wird, sofern angegeben.  
  
 Führende und nachfolgende Leerzeichen werden aus allen Parameterwerten abgeschnitten.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird das Kennwort eines Benutzers zurückgesetzt, und das neue automatisch generierte Kennwort wird zurückgegeben.  
  
> [!NOTE]
>  In diesem Beispiel wird die- <xref:System.Web.Security.Membership> Klasse verwendet, um die <xref:System.Web.Security.SqlMembershipProvider> angegebene als `defaultProvider` in der Web.config-Datei aufzurufen. Wenn Sie als Typ auf den Standardanbieter zugreifen müssen <xref:System.Web.Security.SqlMembershipProvider> , können Sie die- <xref:System.Web.Security.Membership.Provider%2A> Eigenschaft der-Klasse umwandeln <xref:System.Web.Security.Membership> . Wenn Sie auf andere konfigurierte Anbieter als einen bestimmten Anbietertyp zugreifen möchten, können Sie über ihren konfigurierten Namen mit der <xref:System.Web.Security.Membership.Providers%2A> -Eigenschaft der <xref:System.Web.Security.Membership> -Klasse darauf zugreifen und Sie als bestimmten Anbietertyp umwandeln.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ResetPasswordcs.aspx#8)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ResetPasswordvb.aspx#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.Security.MembershipPasswordException"><paramref name="passwordAnswer" /> ist ungültig.  
  
- oder - 
Das Benutzerkonto ist gegenwärtig gesperrt.</exception>
        <exception cref="T:System.NotSupportedException">Für <see cref="P:System.Web.Security.SqlMembershipProvider.EnablePasswordReset" /> ist <see langword="false" /> festgelegt.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException"><paramref name="username" /> kann in der Mitgliedschaftsdatenbank nicht gefunden werden.  
  
- oder - 
Die Aktion zum Ändern des Kennworts wurde von einem Abonnenten des <see cref="E:System.Web.Security.Membership.ValidatingPassword" />-Ereignisses abgebrochen, und die <see cref="P:System.Web.Security.ValidatePasswordEventArgs.FailureInformation" />-Eigenschaft war <see langword="null" />.  
  
- oder - 
Beim Abrufen des Kennworts aus der Datenbank ist ein Fehler aufgetreten.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="username" /> ist eine leere Zeichenfolge (""), enthält ein Komma oder ist länger als 256 Zeichen.  
  
- oder - 
 <paramref name="passwordAnswer" /> ist eine leere Zeichenfolge oder länger als 128 Zeichen, und <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> ist <see langword="true" />.  
  
- oder - 
 <paramref name="passwordAnswer" /> ist nach der Codierung länger als 128 Zeichen.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="username" /> ist <see langword="null" />.  
  
- oder - 
 <paramref name="passwordAnswer" /> ist <see langword="null" />, und <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> ist <see langword="true" />.</exception>
        <exception cref="T:System.Exception">Unbehandelte Ausnahme.</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">Einführung in ASP.NET Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="UnlockUser">
      <MemberSignature Language="C#" Value="public override bool UnlockUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool UnlockUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.UnlockUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function UnlockUser (username As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool UnlockUser(System::String ^ username);" />
      <MemberSignature Language="F#" Value="override this.UnlockUser : string -&gt; bool" Usage="sqlMembershipProvider.UnlockUser username" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Der Name des Mitgliedschaftsbenutzers, für den der Sperrstatus aufgehoben werden soll.</param>
        <summary>Hebt den Sperrstatus des Benutzers auf, sodass der Mitgliedschaftsbenutzer überprüft werden kann.</summary>
        <returns><see langword="true" />, wenn der Mitgliedschaftsbenutzer erfolgreich entsperrt wurde, andernfalls <see langword="false" />. Der Wert <see langword="false" /> wird auch zurückgegeben, wenn der Benutzer in der Datenbank nicht vorhanden ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Benutzer werden am häufigsten gesperrt und können nicht durch die-Methode überprüft werden, <xref:System.Web.Security.SqlMembershipProvider.ValidateUser%2A> Wenn die <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> in der überschritten wird <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> .  
  
 Beim `username`-Parameterwert werden führende und nachstehende Leerzeichen abgeschnitten.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="username" /> ist eine leere Zeichenfolge, ist länger als 256 Zeichen oder enthält ein Komma.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="username" /> ist <see langword="null" />.</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">Einführung in ASP.NET Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateUser">
      <MemberSignature Language="C#" Value="public override void UpdateUser (System.Web.Security.MembershipUser user);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void UpdateUser(class System.Web.Security.MembershipUser user) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.UpdateUser(System.Web.Security.MembershipUser)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub UpdateUser (user As MembershipUser)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void UpdateUser(System::Web::Security::MembershipUser ^ user);" />
      <MemberSignature Language="F#" Value="override this.UpdateUser : System.Web.Security.MembershipUser -&gt; unit" Usage="sqlMembershipProvider.UpdateUser user" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="System.Web.Security.MembershipUser" />
      </Parameters>
      <Docs>
        <param name="user">Ein <see cref="T:System.Web.Security.MembershipUser" />-Objekt, das den zu aktualisierenden Benutzer und die aktualisierten Informationen für den Benutzer darstellt.</param>
        <summary>Aktualisiert Informationen zu einem Benutzer in der Mitgliedschaftsdatenbank von SQL Server.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird von der- <xref:System.Web.Security.Membership> Klasse aufgerufen, um Benutzerinformationen für einen Benutzer in der SQL Server Datenbank zu aktualisieren, die in der Konfigurationsdatei der ASP.NET-Anwendung (Web.config) angegeben ist. Die <xref:System.Web.Security.MembershipUser.Email%2A> <xref:System.Web.Security.MembershipUser.Comment%2A> -, <xref:System.Web.Security.MembershipUser.IsApproved%2A> -,-, <xref:System.Web.Security.MembershipUser.LastLoginDate%2A> -und- <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> Eigenschaftswerte werden für den angegebenen Mitgliedschafts Benutzer aktualisiert.  
  
 Die maximale Länge für die <xref:System.Web.Security.MembershipUser.UserName%2A> Eigenschaft beträgt 256 Zeichen. Die maximale Länge für die <xref:System.Web.Security.MembershipUser.Email%2A> Eigenschaft beträgt 256 Zeichen.  
  
 Das Kennwort für einen Mitgliedschafts Benutzer kann nicht mit der-Methode aktualisiert werden <xref:System.Web.Security.SqlMembershipProvider.UpdateUser%2A> . Um das Kennwort für einen Mitgliedschafts Benutzer zu aktualisieren, verwenden Sie die- <xref:System.Web.Security.MembershipUser.ChangePassword%2A> Methode der- <xref:System.Web.Security.MembershipUser> Klasse.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die e-Mail-Adresse eines Benutzers aktualisiert.  
  
> [!NOTE]
>  In diesem Beispiel wird die- <xref:System.Web.Security.Membership> Klasse verwendet, um die <xref:System.Web.Security.SqlMembershipProvider> angegebene als `defaultProvider` in der Web.config-Datei aufzurufen. Wenn Sie als Typ auf den Standardanbieter zugreifen müssen <xref:System.Web.Security.SqlMembershipProvider> , können Sie die- <xref:System.Web.Security.Membership.Provider%2A> Eigenschaft der-Klasse umwandeln <xref:System.Web.Security.Membership> . Wenn Sie auf andere konfigurierte Anbieter als einen bestimmten Anbietertyp zugreifen möchten, können Sie über ihren konfigurierten Namen mit der <xref:System.Web.Security.Membership.Providers%2A> -Eigenschaft der <xref:System.Web.Security.Membership> -Klasse darauf zugreifen und Sie als bestimmten Anbietertyp umwandeln.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/UpdateEmailcs.aspx#11)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/UpdateEmailvb.aspx#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="user" /> ist <see langword="null" />.  
  
- oder - 
Die <see cref="P:System.Web.Security.MembershipUser.UserName" />-Eigenschaft von <paramref name="user" /> ist <see langword="null" />.  
  
- oder - 
Die <see cref="P:System.Web.Security.MembershipUser.Email" />-Eigenschaft von <paramref name="user" /> ist <see langword="null" />, und <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" /> ist auf <see langword="true" /> festgelegt.</exception>
        <exception cref="T:System.ArgumentException">Die <see cref="P:System.Web.Security.MembershipUser.UserName" />-Eigenschaft von <paramref name="user" /> ist eine leere Zeichenfolge (""), enthält ein Komma oder ist länger als 256 Zeichen.  
  
- oder - 
Die <see cref="P:System.Web.Security.MembershipUser.Email" />-Eigenschaft von <paramref name="user" /> ist länger als 256 Zeichen.  
  
- oder - 
Die <see cref="P:System.Web.Security.MembershipUser.Email" />-Eigenschaft von <paramref name="user" /> ist eine leere Zeichenfolge, und <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" /> ist auf <see langword="true" /> festgelegt.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Die <see cref="P:System.Web.Security.MembershipUser.UserName" />-Eigenschaft von <paramref name="user" /> wurde in der Datenbank nicht gefunden.  
  
- oder - 
Die <see cref="P:System.Web.Security.MembershipUser.Email" />-Eigenschaft von <paramref name="user" /> stimmte mit einer vorhandenen E-Mail-Adresse in der Datenbank überein, und <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" /> ist auf TRUE festgelegt.  
  
- oder - 
Bei der Benutzeraktualisierung ist ein Fehler aufgetreten.</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">Einführung in ASP.NET Mitgliedschaft</related>
      </Docs>
    </Member>
    <Member MemberName="ValidateUser">
      <MemberSignature Language="C#" Value="public override bool ValidateUser (string username, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ValidateUser(string username, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.ValidateUser(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ValidateUser (username As String, password As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ValidateUser(System::String ^ username, System::String ^ password);" />
      <MemberSignature Language="F#" Value="override this.ValidateUser : string * string -&gt; bool" Usage="sqlMembershipProvider.ValidateUser (username, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Der Name des zu überprüfenden Benutzers.</param>
        <param name="password">Das Kennwort für den angegebenen Benutzer.</param>
        <summary>Überprüft, ob der angegebene Benutzername und das angegebene Kennwort in der Mitgliedschaftsdatenbank von SQL Server vorhanden sind.</summary>
        <returns><see langword="true" />, wenn der angegebene Benutzername und das Kennwort gültig sind, andernfalls <see langword="false" />. Der Wert <see langword="false" /> wird auch zurückgegeben, wenn der Benutzer in der Datenbank nicht vorhanden ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird von der- <xref:System.Web.Security.Membership> Klasse aufgerufen, um Benutzerinformationen für einen Benutzer in der SQL Server Datenbank zu überprüfen, die in der Konfigurationsdatei der ASP.NET-Anwendung (Web.config) angegeben ist.  
  
 Wenn ein Benutzer erfolgreich überprüft wurde, werden die Werte für Datum und Uhrzeit der letzten Anmeldung bis zum aktuellen Datum und zur aktuellen Uhrzeit in der Datenbank aktualisiert.  
  
 Wenn für die-Methode ein falsches Kennwort angegeben wird <xref:System.Web.Security.SqlMembershipProvider.ValidateUser%2A> , wird der interne-Counter, der ungültige Kenn Wort Versuche verfolgt, um eins erhöht. Dies kann dazu führen, dass der Benutzer gesperrt wird und sich nicht anmelden kann, bis der Sperr Status durch einen Rückruf der- <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> Methode gelöscht wird. Wenn das richtige Kennwort angegeben wird und der Benutzer zurzeit nicht gesperrt ist, werden die internen Leistungsindikatoren, die ungültige Kennwort-und Kenn Wort Antwort Versuche nachverfolgen, auf 0 (null) zurückgesetzt. Weitere Informationen finden Sie in den Ausführungen zur <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>-Eigenschaft und zur <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>-Eigenschaft.  
  
 Führende und nachfolgende Leerzeichen werden aus allen Parameterwerten abgeschnitten.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt die Anmeldeseite für eine ASP.NET-Anwendung, die für die Verwendung der Formular Authentifizierung und der konfiguriert ist <xref:System.Web.Security.SqlMembershipProvider> . Wenn die angegebenen Benutzer Anmelde Informationen ungültig sind, wird dem Benutzer eine Meldung angezeigt. Andernfalls wird der Benutzer mithilfe der-Methode an die ursprünglich angeforderte URL umgeleitet <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> .  
  
> [!NOTE]
>  In diesem Beispiel wird die- <xref:System.Web.Security.Membership> Klasse verwendet, um die <xref:System.Web.Security.SqlMembershipProvider> angegebene als `defaultProvider` in der Web.config-Datei aufzurufen. Wenn Sie als Typ auf den Standardanbieter zugreifen müssen <xref:System.Web.Security.SqlMembershipProvider> , können Sie die- <xref:System.Web.Security.Membership.Provider%2A> Eigenschaft der-Klasse umwandeln <xref:System.Web.Security.Membership> . Wenn Sie auf andere konfigurierte Anbieter als einen bestimmten Anbietertyp zugreifen möchten, können Sie über ihren konfigurierten Namen mit der <xref:System.Web.Security.Membership.Providers%2A> -Eigenschaft der <xref:System.Web.Security.Membership> -Klasse darauf zugreifen und Sie als bestimmten Anbietertyp umwandeln.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/logincs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/loginvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">Einführung in ASP.NET Mitgliedschaft</related>
      </Docs>
    </Member>
  </Members>
</Type>
