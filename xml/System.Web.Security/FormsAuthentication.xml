<Type Name="FormsAuthentication" FullName="System.Web.Security.FormsAuthentication">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c1ad955960af1252b8fdf942af79df80d162cc15" /><Meta Name="ms.sourcegitcommit" Value="7461f9e28c2f184bd1596e6f07c25a3f34984516" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="03/28/2019" /><Meta Name="ms.locfileid" Value="58553891" /></Metadata><TypeSignature Language="C#" Value="public sealed class FormsAuthentication" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FormsAuthentication extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.FormsAuthentication" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FormsAuthentication" />
  <TypeSignature Language="C++ CLI" Value="public ref class FormsAuthentication sealed" />
  <TypeSignature Language="F#" Value="type FormsAuthentication = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Verwaltet Formularauthentifizierungsdienste für Webanwendungen. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Formular-Authentifizierung kann Benutzer und die kennwortüberprüfung für Webanwendungen, die keine Windows-Authentifizierung erforderlich ist. Bei der Formularauthentifizierung Benutzerinformationen befindet sich in einer externen Datenquelle, z. B. eine <xref:System.Web.Security.Membership> -Datenbank oder in der Konfigurationsdatei für eine Anwendung. Sobald ein Benutzer authentifiziert ist, verwaltet die Formularauthentifizierung ein Authentifizierungsticket in einem Cookie oder in der URL, damit ein authentifizierter Benutzer nicht bei jeder Anforderung Anmeldeinformationen angeben muss.  
  
 Formular-Authentifizierung wird aktiviert, indem die `mode` Attribut der [Authentifizierung](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/532aee0e(v%3dvs.100)) zu Konfigurationselement `Forms`. Sie können erfordern, dass alle Anforderungen an eine Anwendung ein Authentifizierungsticket gültigen Benutzer enthalten, mit der [Autorisierung](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/8d82143t(v%3dvs.100)) Konfigurationselement, das die Anforderung eines Benutzers unbekannt, zu verweigern, wie im folgenden Beispiel gezeigt.  
  
```  
<system.web>  
  <authentication mode="Forms">  
    <forms loginUrl="login.aspx" />  
  </authentication>  
  <authorization>  
    <deny users="?" />  
  </authorization>  
</system.web>  
```  
  
 Im vorherigen Beispiel erfordert jede Anforderung für eine ASP.NET-Seite, die Teil der Anwendung einen gültigen Benutzernamen ein, der von der Formularauthentifizierung bereitgestellt werden. Wenn kein Benutzername vorhanden ist, wird die Anforderung umgeleitet wird an die konfigurierte <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>.  
  
 Die <xref:System.Web.Security.FormsAuthentication> Klasse ermöglicht den Zugriff auf Methoden und Eigenschaften, die Sie in einer Anwendung verwenden können, die Benutzer authentifiziert. Die <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> -Methode leitet einen Browser an die konfigurierte <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A> für Benutzer bei einer Anwendung anmelden. Die <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> Methode leitet einen authentifizierten Benutzer wieder an die ursprünglich geschützte URL, der angefordert wurde oder an der <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>. Es gibt auch Methoden, die Sie zum Verwalten von Formularauthentifizierungstickets, bei Bedarf aktivieren.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt die Datei "Web.config" für eine ASP.NET-Anwendung, die dem ASP.NET-Mitgliedschaftsanbieter für die Formularauthentifizierung verwendet und muss sich Benutzer authentifiziert werden.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString="Data Source=MySqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
  </connectionStrings>  
  <system.web>  
    <membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
      <providers>  
        <add name="SqlProvider"  
          type="System.Web.Security.SqlMembershipProvider"  
          connectionStringName="SqlServices"  
          enablePasswordRetrieval="false"  
          enablePasswordReset="true"  
          requiresQuestionAndAnswer="true"  
          passwordFormat="Hashed"  
          applicationName="/" />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
 Das folgende Codebeispiel zeigt die Anmeldeseite für eine ASP.NET-Anwendung, die Formularauthentifizierung und ASP.NET-Mitgliedschaft verwendet.  
  
> [!IMPORTANT]
>  Dieses Beispiel enthält das Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko dar. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/logincs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/loginvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Web.AspNetHostingPermission">Verwenden der <see cref="T:System.Web.Security.FormsAuthentication" /> Klasse in einer gehosteten Umgebung. Anforderungswert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />. Berechtigungswert: <see cref="F:System.Web.AspNetHostingPermissionLevel.Minimal" />.</permission>
    <related type="Article" href="https://msdn.microsoft.com/library/77e21ba2-bad1-4967-a8ec-74942dea7e47">Formularauthentifizierungsanbieter</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormsAuthentication ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormsAuthentication();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Security.FormsAuthentication" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor ist nicht dazu gedacht, die aus Ihrem Code verwendet werden.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sicherheit von ASP.NET-Webanwendungen</related>
      </Docs>
    </Member>
    <Member MemberName="Authenticate">
      <MemberSignature Language="C#" Value="public static bool Authenticate (string name, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Authenticate(string name, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.Authenticate(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Authenticate (name As String, password As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Authenticate(System::String ^ name, System::String ^ password);" />
      <MemberSignature Language="F#" Value="static member Authenticate : string * string -&gt; bool" Usage="System.Web.Security.FormsAuthentication.Authenticate (name, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("The recommended alternative is to use the Membership APIs, such as Membership.ValidateUser. For more information, see http://go.microsoft.com/fwlink/?LinkId=252463.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Der Benutzername.</param>
        <param name="password">Das Kennwort für den Benutzer.</param>
        <summary>Überprüft einen Benutzernamen und ein Kennwort anhand von Anmeldeinformationen, die in der Konfigurationsdatei für eine Anwendung gespeichert sind.</summary>
        <returns><see langword="true" />, wenn der Benutzername und das Kennwort gültig sind, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Authentifizierungsmethode überprüft Benutzeranmeldeinformationen, die in gespeichert werden die [Anmeldeinformationen](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/e01fc50a(v%3dvs.100)) Abschnitt der Konfigurationsdatei der Anwendung. Alternativ können Sie die ASP.NET-Mitgliedschaft zum Speichern von Anmeldeinformationen des Benutzers ein, und rufen die <xref:System.Web.Security.MembershipProvider.ValidateUser%2A> die Anmeldeinformationen überprüfen. Weitere Informationen finden Sie unter [Verwalten von Benutzern durch Mitgliedschaft](https://msdn.microsoft.com/library/824c3a24-f0af-427c-a652-0d2d1e9397cd).  
  
 Zur Verbesserung der Sicherheit können Sie in der Konfigurationsdatei für eine Anwendung mithilfe von gespeicherten Kennwörter verschlüsseln die <xref:System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile%2A> Methode.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt die Benutzeranmeldeinformationen, die in der Datei "Web.config" für eine Anwendung gespeichert. Für die Kennwortwerte haben wurden erstellt mithilfe der <xref:System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile%2A> Methode.  
  
 `<authentication mode="Forms">`  
  
 `<forms loginUrl="login.aspx">`  
  
 `<credentials passwordFormat="SHA1">`  
  
 `<user name="user1"   password="27CE4CA7FBF00685AF2F617E3F5BBCAFF7B7403C" />`  
  
 `<user name="user2"   password="D108F80936F78DFDD333141EBC985B0233A30C7A" />`  
  
 `<user name="user3" password="7BDB09781A3F23885CD43177C0508B375CB1B7E9"/>`  
  
 `</credentials>`  
  
 `</forms>`  
  
 `</authentication>`  
  
 Das folgende Codebeispiel zeigt eine Anmeldeseite angezeigt, die verwendet die <xref:System.Web.Security.FormsAuthentication.Authenticate%2A> Methode, um die Benutzeranmeldeinformationen zu überprüfen.  
  
> [!IMPORTANT]
>  Dieses Beispiel enthält das Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko dar. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.FormsAuthentication#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.FormsAuthentication/CS/logincs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.FormsAuthentication#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.FormsAuthentication/VB/loginvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sicherheit von ASP.NET-Webanwendungen</related>
      </Docs>
    </Member>
    <Member MemberName="CookieDomain">
      <MemberSignature Language="C#" Value="public static string CookieDomain { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string CookieDomain" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.CookieDomain" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CookieDomain As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ CookieDomain { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CookieDomain : string" Usage="System.Web.Security.FormsAuthentication.CookieDomain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert der Domäne des Formularauthentifizierungscookies ab.</summary>
        <value>Die <see cref="P:System.Web.HttpCookie.Domain" /> des Formularauthentifizierungscookies. Der Standardwert ist eine leere Zeichenfolge ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.FormsAuthentication.CookieDomain%2A> Eigenschaftswert in der Konfigurationsdatei für eine ASP.NET-Anwendung festgelegt ist, mithilfe der `domain` Attribut der [Forms](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1d3t3c61(v%3dvs.100)) Konfigurationselement. Die <xref:System.Web.Security.FormsAuthentication.CookieDomain%2A> bestimmt der Wert der <xref:System.Web.HttpCookie.Domain%2A> , die für das Cookie verwendet werden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die `domain` Attribut in der Datei "Web.config".  
  
```  
<authentication mode="Forms">  
  <forms loginUrl="member_login.aspx"  
    cookieless="UseCookies"  
    domain="contoso.com" />  
</authentication>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sicherheit von ASP.NET-Webanwendungen</related>
      </Docs>
    </Member>
    <Member MemberName="CookieMode">
      <MemberSignature Language="C#" Value="public static System.Web.HttpCookieMode CookieMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Web.HttpCookieMode CookieMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.CookieMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CookieMode As HttpCookieMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::HttpCookieMode CookieMode { System::Web::HttpCookieMode get(); };" />
      <MemberSignature Language="F#" Value="member this.CookieMode : System.Web.HttpCookieMode" Usage="System.Web.Security.FormsAuthentication.CookieMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpCookieMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Anwendung für die Formularauthentifizierung ohne Cookies konfiguriert ist.</summary>
        <value>Einer der <see cref="T:System.Web.HttpCookieMode" />-Werte, der angibt, ob die Anwendung für die Formularauthentifizierung ohne Cookies konfiguriert ist. Die Standardeinstellung ist <see cref="F:System.Web.HttpCookieMode.UseDeviceProfile" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.FormsAuthentication.CookieMode%2A> Eigenschaft spiegelt wider, den Wert für die `cookieless` Attribut der [Forms](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1d3t3c61(v%3dvs.100)) Konfigurationselement. Die <xref:System.Web.Security.FormsAuthentication.CookieMode%2A> Eigenschaft bestimmt, ob die <xref:System.Web.Security.FormsAuthenticationTicket> Wert in einem Sitzungscookie im Browser oder in gespeichert werden die <xref:System.Web.HttpRequest.QueryString%2A> Eigenschaft.  
  
> [!NOTE]
>  Wenn die <xref:System.Web.Security.FormsAuthenticationTicket> Wert befindet sich in der URI, der die Länge des generierten URI länger sein als die maximal zulässige Länge. Dies ist die wahrscheinlichste Ursache bei der <xref:System.Web.Security.FormsAuthentication.FormsCookiePath%2A> -Eigenschaftensatz auf den Namen der Anwendung und den Namen der Anwendung ist lang (40 oder mehr Zeichen), wenn der Benutzernamen in der Anwendung lang sind oder wenn lange <xref:System.Web.Security.FormsAuthenticationTicket.UserData%2A> Zeichenfolgen befinden sich in der <xref:System.Web.Security.FormsAuthenticationTicket> -Wert. Wenn der generierte URI zu lang ist, gibt der Webserver eine `400 - Bad Request` Fehler.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die `cookieless` Attribut `AutoDetect` in der Datei "Web.config".  
  
```  
<authentication mode="Forms">  
  <forms loginUrl="member_login.aspx"  
    cookieless="AutoDetect" />  
</authentication>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sicherheit von ASP.NET-Webanwendungen</related>
      </Docs>
    </Member>
    <Member MemberName="CookieSameSite">
      <MemberSignature Language="C#" Value="public static System.Web.SameSiteMode CookieSameSite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Web.SameSiteMode CookieSameSite" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.CookieSameSite" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CookieSameSite As SameSiteMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::SameSiteMode CookieSameSite { System::Web::SameSiteMode get(); };" />
      <MemberSignature Language="F#" Value="member this.CookieSameSite : System.Web.SameSiteMode" Usage="System.Web.Security.FormsAuthentication.CookieSameSite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SameSiteMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert des Attributs „SameSite“ des Cookies ab oder legt ihn fest.</summary>
        <value>Einer der Enumerationswerte, der den Erzwingungsmodus des Cookies darstellt. Der Standardwert ist <see cref="F:System.Web.SameSiteMode.Lax" />sein.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CookiesSupported">
      <MemberSignature Language="C#" Value="public static bool CookiesSupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool CookiesSupported" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.CookiesSupported" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CookiesSupported As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool CookiesSupported { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CookiesSupported : bool" Usage="System.Web.Security.FormsAuthentication.CookiesSupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Anwendung für die Formularauthentifizierung ohne Cookies konfiguriert ist.</summary>
        <value><see langword="false" />, wenn die Anwendung so konfiguriert wird, dass sie Formularauthentifizierung ohne Cookies unterstützt, andernfalls <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> Eigenschaft gibt einen Wert, der auf der Grundlage der <xref:System.Web.Security.FormsAuthentication.CookieMode%2A> Wert und die Funktionen des Browsers.  
  
-   Wenn die <xref:System.Web.Security.FormsAuthentication.CookieMode%2A> -Eigenschaftensatz auf <xref:System.Web.HttpCookieMode.UseCookies>, <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> -Eigenschaft zurück `true`.  
  
-   Wenn die <xref:System.Web.Security.FormsAuthentication.CookieMode%2A> -Eigenschaftensatz auf <xref:System.Web.HttpCookieMode.UseUri>, <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> -Eigenschaft zurück `false`.  
  
-   Wenn die <xref:System.Web.Security.FormsAuthentication.CookieMode%2A> -Eigenschaftensatz auf <xref:System.Web.HttpCookieMode.AutoDetect>, <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> -Eigenschaft zurück `true` Wenn der Browser Cookies unterstützt und Cookies aktiviert ist, andernfalls die <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> -Eigenschaft zurück `false`.  
  
-   Wenn die <xref:System.Web.Security.FormsAuthentication.CookieMode%2A> -Eigenschaftensatz auf <xref:System.Web.HttpCookieMode.UseDeviceProfile>, <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> -Eigenschaft zurück `true` Wenn die <xref:System.Web.HttpRequest.Browser%2A> für die aktuelle <xref:System.Web.HttpContext.Request%2A> Cookies und Umleitung mit Cookies unterstützt, andernfalls die <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> -Eigenschaft zurück `false`.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die `cookieless` Attribut <xref:System.Web.HttpCookieMode.UseUri> in der Datei "Web.config". Diese Konfiguration führt zu den <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> Eigenschaft zurückgeben `false`.  
  
```  
<authentication mode="Forms">  
  <forms loginUrl="member_login.aspx"  
    cookieless="UseUri" />  
</authentication>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sicherheit von ASP.NET-Webanwendungen</related>
      </Docs>
    </Member>
    <Member MemberName="Decrypt">
      <MemberSignature Language="C#" Value="public static System.Web.Security.FormsAuthenticationTicket Decrypt (string encryptedTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.FormsAuthenticationTicket Decrypt(string encryptedTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.Decrypt(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Decrypt (encryptedTicket As String) As FormsAuthenticationTicket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::FormsAuthenticationTicket ^ Decrypt(System::String ^ encryptedTicket);" />
      <MemberSignature Language="F#" Value="static member Decrypt : string -&gt; System.Web.Security.FormsAuthenticationTicket" Usage="System.Web.Security.FormsAuthentication.Decrypt encryptedTicket" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.FormsAuthenticationTicket</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptedTicket" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="encryptedTicket">Das verschlüsselte Authentifizierungsticket.</param>
        <summary>Erstellt auf Grundlage des verschlüsselten Formularauthentifizierungstickets, das an die Methode übergeben wird, ein <see cref="T:System.Web.Security.FormsAuthenticationTicket" />-Objekt.</summary>
        <returns>Ein <see cref="T:System.Web.Security.FormsAuthenticationTicket" />-Objekt. Wenn der <paramref name="encryptedTicket" />-Parameter kein gültiges Ticket ist, wird <see langword="null" /> zurückgegeben.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><paramref name="encryptedTicket" /> ist <see langword="null" />.  
  
- oder - 
 <paramref name="encryptedTicket" /> ist eine leere Zeichenfolge ("").  
  
- oder - 
<paramref name="encryptedTicket" /> ist länger als 4096 Zeichen.  
  
- oder - 
 Das Format von <paramref name="encryptedTicket" /> ist ungültig.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sicherheit von ASP.NET-Webanwendungen</related>
      </Docs>
    </Member>
    <Member MemberName="DefaultUrl">
      <MemberSignature Language="C#" Value="public static string DefaultUrl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string DefaultUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.DefaultUrl" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ DefaultUrl { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultUrl : string" Usage="System.Web.Security.FormsAuthentication.DefaultUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die URL ab, an die die <see cref="T:System.Web.Security.FormsAuthentication" />-Klasse umleitet, wenn keine Umleitungs-URL angegeben ist.</summary>
        <value>Die URL, an die die <see cref="T:System.Web.Security.FormsAuthentication" />-Klasse umleitet, wenn keine Umleitungs-URL angegeben ist. Der Standardwert ist "default.aspx".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> Eigenschaftswert in der Konfigurationsdatei für eine ASP.NET-Anwendung festgelegt ist, mithilfe der `defaultUrl` Attribut der [Forms](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1d3t3c61(v%3dvs.100)) Konfigurationselement. Die <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> Eigenschaft wird verwendet, durch die <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> Methode, wenn keine Rückgabe-URL in der Anforderung enthalten ist. Auf ähnliche Weise die <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A> Methode gibt zurück, die <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> Wenn keine Rückgabe-URL in der Anforderung enthalten ist.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die `defaultUrl` Attribut in der Datei "Web.config".  
  
```  
<authentication mode="Forms">  
  <forms loginUrl="member_login.aspx"  
    defaultUrl="index.aspx" />  
</authentication>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sicherheit von ASP.NET-Webanwendungen</related>
      </Docs>
    </Member>
    <Member MemberName="EnableCrossAppRedirects">
      <MemberSignature Language="C#" Value="public static bool EnableCrossAppRedirects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool EnableCrossAppRedirects" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property EnableCrossAppRedirects As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool EnableCrossAppRedirects { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EnableCrossAppRedirects : bool" Usage="System.Web.Security.FormsAuthentication.EnableCrossAppRedirects" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob authentifizierte Benutzer auf URLs in anderen Webanwendungen umgeleitet werden können.</summary>
        <value><see langword="true" />, wenn authentifizierte Benutzer auf URLs in anderen Webanwendungen umgeleitet werden können, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> -Eigenschaftswert festgelegt ist, mit der `enableCrossAppRedirects` Attribut der [Forms](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1d3t3c61(v%3dvs.100)) Konfigurationselement.  
  
 Die <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> Eigenschaft aktiviert ist, in der <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> Methode, wenn die Umleitung URL nicht auf einer Seite in der aktuellen Anwendung verweist. Wenn <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> ist `true`, und klicken Sie dann die Umleitung; ausgeführt wird Wenn <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> ist `false`, der Browser umgeleitet wird, auf die Seite definiert, der <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> Eigenschaft.  
  
> [!NOTE]
>  Wenn Sie Seiten anwendungsübergreifend umleiten, stellen Sie sicher, dass spezifische Attribute in der [Forms](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1d3t3c61(v%3dvs.100)) Konfigurationselement sind doppelt vorhanden, für den authentifizierten Anwendungen. Weitere Informationen und ein Beispiel finden Sie unter [Forms Authentication Across Applications](https://msdn.microsoft.com/library/99e2f9e8-5b97-4a4d-a4ed-5f93276053b7).  
  
> [!IMPORTANT]
>  Bei anwendungsübergreifender umleitungen zulässig sind, ist Ihre Website anfällig für einen Exploid, der Benutzern eine schädliche Website leitet, aber die Anmeldeseite für Ihre Website verwendet. Überprüfen Sie immer, die die umleitungs-URL, die von zurückgegeben wird das <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A> Methode ist eine URL, die Sie erwarten, damit Sie sicherstellen, dass Sie leitet nur auf genehmigte Websites zulassen. Sie müssen außerdem sicherstellen, dass die umleitungs-URL auf das entsprechende Protokoll (HTTP oder HTTPS) verwendet. Klicken Sie zum Ausführen dieser Überprüfung können Sie einen postback-Ereignishandler auf Ihrer Anmeldeseite hinzufügen, oder Sie können einen Handler für Hinzufügen der <xref:System.Web.UI.WebControls.Login.LoggedIn> Ereignis die <xref:System.Web.UI.WebControls.Login> Steuerelement.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die `enableCrossAppRedirects` Attribut `true` in der Datei "Web.config" für eine ASP.NET-Anwendung.  
  
```  
<authentication mode="Forms">  
  <forms loginUrl="member_login.aspx"  
    cookieless="UseUri"  
    requireSSL="true"   
    enableCrossAppRedirects="true" />  
</authentication>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sicherheit von ASP.NET-Webanwendungen</related>
      </Docs>
    </Member>
    <Member MemberName="EnableFormsAuthentication">
      <MemberSignature Language="C#" Value="public static void EnableFormsAuthentication (System.Collections.Specialized.NameValueCollection configurationData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EnableFormsAuthentication(class System.Collections.Specialized.NameValueCollection configurationData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.EnableFormsAuthentication(System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub EnableFormsAuthentication (configurationData As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void EnableFormsAuthentication(System::Collections::Specialized::NameValueCollection ^ configurationData);" />
      <MemberSignature Language="F#" Value="static member EnableFormsAuthentication : System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="System.Web.Security.FormsAuthentication.EnableFormsAuthentication configurationData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configurationData" Type="System.Collections.Specialized.NameValueCollection" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="configurationData">Eine Name/Wert-Sammlung, die Werte für "defaultUrl" und/oder "loginUrl" enthält. Der Parameter kann NULL sein, wenn keine Werte für die Standard-URL oder die Anmelde-URL vorhanden sind.</param>
        <summary>Ermöglicht die Formularauthentifizierung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> Eigenschaft `null`, dass die Eigenschaft festgelegt ist, auf den Standardwert für die URL aus der `configurationData` Parameter. Wenn die <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A> Eigenschaft `null`, dass die Eigenschaft festgelegt ist, um die Anmelde-URL-Wert aus der `configurationData` Parameter.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die Anwendung befindet sich nicht in der Initialisierungsphase vor dem Start.</exception>
      </Docs>
    </Member>
    <Member MemberName="Encrypt">
      <MemberSignature Language="C#" Value="public static string Encrypt (System.Web.Security.FormsAuthenticationTicket ticket);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Encrypt(class System.Web.Security.FormsAuthenticationTicket ticket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.Encrypt(System.Web.Security.FormsAuthenticationTicket)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Encrypt (ticket As FormsAuthenticationTicket) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Encrypt(System::Web::Security::FormsAuthenticationTicket ^ ticket);" />
      <MemberSignature Language="F#" Value="static member Encrypt : System.Web.Security.FormsAuthenticationTicket -&gt; string" Usage="System.Web.Security.FormsAuthentication.Encrypt ticket" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ticket" Type="System.Web.Security.FormsAuthenticationTicket" />
      </Parameters>
      <Docs>
        <param name="ticket">Das <see cref="T:System.Web.Security.FormsAuthenticationTicket" />-Objekt, mit dem das verschlüsselte Formularauthentifizierungsticket erstellt werden soll.</param>
        <summary>Erstellt eine Zeichenfolge, die ein verschlüsseltes Formularauthentifizierungsticket enthält, das für die Verwendung in einem HTTP-Cookie geeignet ist.</summary>
        <returns>Eine Zeichenfolge, die ein verschlüsseltes Formularauthentifizierungsticket enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird das Ergebnis gespeichert. die <xref:System.Web.Security.FormsAuthentication.Encrypt%2A> -Methode in der ein Cookie mit der <xref:System.Web.Security.FormsAuthentication.FormsCookieName%2A> -Eigenschaft aus und leitet der Benutzer an die URL zurückgegeben, aus der <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A> Methode.  
  
> [!IMPORTANT]
>  Dieses Beispiel enthält das Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko dar. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[FormsAuthenticationTicketClass#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormsAuthenticationTicketClass/CS/formsauthenticationticketclasscs.aspx#1)]
 [!code-aspx-vb[FormsAuthenticationTicketClass#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormsAuthenticationTicketClass/VB/formsauthenticationticketclassvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="ticket" /> ist <see langword="null" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sicherheit von ASP.NET-Webanwendungen</related>
      </Docs>
    </Member>
    <Member MemberName="FormsCookieName">
      <MemberSignature Language="C#" Value="public static string FormsCookieName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string FormsCookieName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.FormsCookieName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property FormsCookieName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ FormsCookieName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FormsCookieName : string" Usage="System.Web.Security.FormsAuthentication.FormsCookieName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen des Cookies ab, das zum Speichern des Formularauthentifizierungstickets verwendet wird.</summary>
        <value>Der Name des Cookies, das zum Speichern des Formularauthentifizierungstickets verwendet wird. Der Standardwert ist ".ASPXAUTH".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.FormsAuthentication.FormsCookieName%2A> Eigenschaftswert in der Konfigurationsdatei für eine ASP.NET-Anwendung festgelegt ist, mithilfe der `name` Attribut der [Forms](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1d3t3c61(v%3dvs.100)) Konfigurationselement. Die <xref:System.Web.Security.FormsAuthentication.FormsCookieName%2A> wird verwendet, um das Cookie verwiesen, die speichert die <xref:System.Web.Security.FormsAuthenticationTicket> Informationen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die <xref:System.Web.Security.FormsAuthentication.FormsCookieName%2A> Eigenschaftswert mithilfe der `name` Attribut in der Datei "Web.config".  
  
```  
<authentication mode="Forms">  
  <forms loginUrl="member_login.aspx"  
    cookieless="UseCookies"  
    name=".ASPXFORMSAUTH" />  
</authentication>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sicherheit von ASP.NET-Webanwendungen</related>
      </Docs>
    </Member>
    <Member MemberName="FormsCookiePath">
      <MemberSignature Language="C#" Value="public static string FormsCookiePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string FormsCookiePath" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.FormsCookiePath" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property FormsCookiePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ FormsCookiePath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FormsCookiePath : string" Usage="System.Web.Security.FormsAuthentication.FormsCookiePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Pfad für das Formularauthentifizierungscookie ab.</summary>
        <value>Der Pfad des Cookies, in dem die Informationen zum Formularauthentifizierungsticket gespeichert sind. Der Standardwert ist "/".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.FormsAuthentication.FormsCookiePath%2A> Eigenschaftswert wird festgelegt, in der Konfigurationsdatei für eine ASP.NET-Anwendung mit der `path` Attribut der [Forms](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1d3t3c61(v%3dvs.100)) Konfigurationselement. Die <xref:System.Web.Security.FormsAuthentication.FormsCookiePath%2A> gibt an, die <xref:System.Web.HttpCookie.Path%2A> für das Cookie, das speichert die <xref:System.Web.Security.FormsAuthenticationTicket> Informationen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die <xref:System.Web.Security.FormsAuthentication.FormsCookiePath%2A> Eigenschaftswert mithilfe der `path` Attribut in der Datei "Web.config".  
  
```  
<authentication mode="Forms">  
  <forms loginUrl="member_login.aspx"  
    cookieless="UseCookies"  
    path="/MyApplication" />  
</authentication>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sicherheit von ASP.NET-Webanwendungen</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAuthCookie">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Erstellt ein Authentifizierungscookie für einen angegebenen Benutzernamen.</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sicherheit von ASP.NET-Webanwendungen</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAuthCookie">
      <MemberSignature Language="C#" Value="public static System.Web.HttpCookie GetAuthCookie (string userName, bool createPersistentCookie);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.HttpCookie GetAuthCookie(string userName, bool createPersistentCookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.GetAuthCookie(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAuthCookie (userName As String, createPersistentCookie As Boolean) As HttpCookie" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::HttpCookie ^ GetAuthCookie(System::String ^ userName, bool createPersistentCookie);" />
      <MemberSignature Language="F#" Value="static member GetAuthCookie : string * bool -&gt; System.Web.HttpCookie" Usage="System.Web.Security.FormsAuthentication.GetAuthCookie (userName, createPersistentCookie)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpCookie</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="createPersistentCookie" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="userName">Der Name des authentifizierten Benutzers.</param>
        <param name="createPersistentCookie"><see langword="true" />, um ein permanentes Cookie (das über Browsersitzungen hinweg gespeichert wird) zu erstellen, andernfalls <see langword="false" />.</param>
        <summary>Erstellt ein Authentifizierungscookie für einen angegebenen Benutzernamen. Dabei wird das Cookie nicht als Teil der ausgehenden Antwort festgelegt, sodass eine Anwendung größere Kontrolle über die Art der Ausgabe des Cookies hat.</summary>
        <returns>Ein <see cref="T:System.Web.HttpCookie" />, das Informationen zum verschlüsselten Formularauthentifizierungsticket enthält. Es wird der Standardwert für die <see cref="P:System.Web.Security.FormsAuthentication.FormsCookiePath" />-Eigenschaft verwendet.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Pfad des Cookies richtet sich nach der <xref:System.Web.Security.FormsAuthentication.FormsCookiePath%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sicherheit von ASP.NET-Webanwendungen</related>
      </Docs>
    </Member>
    <Member MemberName="GetAuthCookie">
      <MemberSignature Language="C#" Value="public static System.Web.HttpCookie GetAuthCookie (string userName, bool createPersistentCookie, string strCookiePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.HttpCookie GetAuthCookie(string userName, bool createPersistentCookie, string strCookiePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.GetAuthCookie(System.String,System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAuthCookie (userName As String, createPersistentCookie As Boolean, strCookiePath As String) As HttpCookie" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::HttpCookie ^ GetAuthCookie(System::String ^ userName, bool createPersistentCookie, System::String ^ strCookiePath);" />
      <MemberSignature Language="F#" Value="static member GetAuthCookie : string * bool * string -&gt; System.Web.HttpCookie" Usage="System.Web.Security.FormsAuthentication.GetAuthCookie (userName, createPersistentCookie, strCookiePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpCookie</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="createPersistentCookie" Type="System.Boolean" />
        <Parameter Name="strCookiePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="userName">Der Name des authentifizierten Benutzers.</param>
        <param name="createPersistentCookie"><see langword="true" />, um ein permanentes Cookie (das über Browsersitzungen hinweg gespeichert wird) zu erstellen, andernfalls <see langword="false" />.</param>
        <param name="strCookiePath">Der <see cref="P:System.Web.HttpCookie.Path" /> des Authentifizierungscookies.</param>
        <summary>Erstellt ein Authentifizierungscookie für einen angegebenen Benutzernamen. Dabei wird das Cookie nicht als Teil der ausgehenden Antwort festgelegt.</summary>
        <returns>Ein <see cref="T:System.Web.HttpCookie" />, das Informationen zum verschlüsselten Formularauthentifizierungsticket enthält.</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sicherheit von ASP.NET-Webanwendungen</related>
      </Docs>
    </Member>
    <Member MemberName="GetRedirectUrl">
      <MemberSignature Language="C#" Value="public static string GetRedirectUrl (string userName, bool createPersistentCookie);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetRedirectUrl(string userName, bool createPersistentCookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.GetRedirectUrl(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRedirectUrl (userName As String, createPersistentCookie As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetRedirectUrl(System::String ^ userName, bool createPersistentCookie);" />
      <MemberSignature Language="F#" Value="static member GetRedirectUrl : string * bool -&gt; string" Usage="System.Web.Security.FormsAuthentication.GetRedirectUrl (userName, createPersistentCookie)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="createPersistentCookie" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="userName">Der Name des authentifizierten Benutzers.</param>
        <param name="createPersistentCookie">Konvertiert die Zeichenfolgendarstellung einer Zahl in einem angegebenen Stil und einem kulturspezifischen Format in die entsprechende 32-Bit-Ganzzahl mit Vorzeichen.</param>
        <summary>Gibt die Umleitungs-URL für die ursprüngliche Anforderung zurück, die die Umleitung zur Anmeldeseite verursacht hat.</summary>
        <returns>Eine Zeichenfolge, die die Umleitungs-URL enthält, oder NULL, wenn <paramref name="userName" /> NULL ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie die Umleitung in Ihrem Anwendungscode anstelle von durchführen möchten, verwenden Sie diese Methode kann die <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> Methode.  
  
 Die <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A> Methode gibt die URL in der Abfragezeichenfolge mit der `ReturnURL` Variablennamen. Z. B. in der URL `http://www.contoso.com/login.aspx?ReturnUrl=caller.aspx`, <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A> Methodenrückgabe die Rückgabe-URL `caller.aspx`. Wenn die `ReturnURL` Variable ist nicht vorhanden, die <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A> -Methode gibt die URL in die <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> Eigenschaft.  
  
 ASP.NET fügt automatisch die Rückgabe-URL hinzu, wenn der Browser zur Anmeldeseite umgeleitet wird.  
  
 In der Standardeinstellung die `ReturnUrl` Variable muss auf einer Seite innerhalb der aktuellen Anwendung verweisen. Wenn `ReturnUrl` bezieht sich auf einer Seite in einer anderen Anwendung oder auf einem anderen Server, die <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A> Methoden zurück, die URL in die <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> Eigenschaft. Wenn Sie die Rückgabe-URL zum Verweisen auf eine Seite außerhalb der aktuellen Anwendung ermöglichen möchten, müssen Sie festlegen der <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> Eigenschaft, um `true` mithilfe der `enableCrossAppRedirects` Attribut des der [Forms](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1d3t3c61(v%3dvs.100)) Konfigurationselement.  

Diese Methode erstellt einen Cookie nicht.
  
> [!IMPORTANT]
>  Festlegen der <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> Eigenschaft `true` können anwendungsübergreifende umleitungen ist ein potenzielles Sicherheitsrisiko dar. Weitere Informationen finden Sie in den Ausführungen zur <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>-Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Codebeispiel Beispiel umleitungen, die authentifizierte Benutzer an die URL zurückgegeben, aus der <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A> Methode.  
  
> [!IMPORTANT]
>  Dieses Beispiel enthält das Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko dar. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[FormsAuthenticationTicketClass#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormsAuthenticationTicketClass/CS/formsauthenticationticketclasscs.aspx#1)]
 [!code-aspx-vb[FormsAuthenticationTicketClass#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormsAuthenticationTicketClass/VB/formsauthenticationticketclassvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sicherheit von ASP.NET-Webanwendungen</related>
      </Docs>
    </Member>
    <Member MemberName="HashPasswordForStoringInConfigFile">
      <MemberSignature Language="C#" Value="public static string HashPasswordForStoringInConfigFile (string password, string passwordFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HashPasswordForStoringInConfigFile(string password, string passwordFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HashPasswordForStoringInConfigFile (password As String, passwordFormat As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HashPasswordForStoringInConfigFile(System::String ^ password, System::String ^ passwordFormat);" />
      <MemberSignature Language="F#" Value="static member HashPasswordForStoringInConfigFile : string * string -&gt; string" Usage="System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile (password, passwordFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("The recommended alternative is to use the Membership APIs, such as Membership.CreateUser. For more information, see http://go.microsoft.com/fwlink/?LinkId=252463.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="passwordFormat" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="password">Das dem Hashalgorithmus zu unterziehende Kennwort.</param>
        <param name="passwordFormat">Der zu verwendende Hashalgorithmus. <paramref name="passwordFormat" /> ist ein <see langword="String" />, der einen der <see cref="T:System.Web.Configuration.FormsAuthPasswordFormat" />-Enumerationswerte darstellt.</param>
        <summary>Erstellt anhand des angegebenen Kennworts und des Hashalgorithmus ein Hashkennwort, das zum Speichern in einer Konfigurationsdatei geeignet ist.</summary>
        <returns>Das Hashkennwort.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile%2A> Methode erstellt einen Kennwort mit Hash-Wert, der für die Formularauthentifizierung Speichern von Anmeldeinformationen in der Konfigurationsdatei für eine Anwendung verwendet werden kann.  
  
 Authentifizierungsinformationen, die in der Konfigurationsdatei für eine Anwendung gespeichert werden verwendet, durch die <xref:System.Web.Security.FormsAuthentication.Authenticate%2A> Methode zum Überprüfen von Kennwörtern für Benutzer einer Anwendung. Alternativ können Sie ASP.NET-Mitgliedschaft zum Speichern von Anmeldeinformationen des Benutzers aus. Weitere Informationen finden Sie unter [Verwalten von Benutzern durch Mitgliedschaft](https://msdn.microsoft.com/library/824c3a24-f0af-427c-a652-0d2d1e9397cd).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein Benutzername, Kennwort und Hash-Typ und zeigt die [Anmeldeinformationen](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/e01fc50a(v%3dvs.100)) Teil der Konfiguration, die die Benutzerdefinition und die verschlüsselte Kennwort enthält.  
  
> [!IMPORTANT]
>  Dieses Beispiel enthält das Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko dar. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[FormsAuthenticationHashPassword#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormsAuthenticationHashPassword/CS/formsauthenticationhashpasswordcs.aspx#1)]
 [!code-aspx-vb[FormsAuthenticationHashPassword#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormsAuthenticationHashPassword/VB/formsauthenticationhashpasswordvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="password" /> ist gleich <see langword="null" />.  
  
- oder - 
 <paramref name="passwordFormat" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="passwordFormat" /> ist kein gültiger <see cref="T:System.Web.Configuration.FormsAuthPasswordFormat" />-Wert.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sicherheit von ASP.NET-Webanwendungen</related>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public static void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.Initialize" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Initialize();" />
      <MemberSignature Language="F#" Value="static member Initialize : unit -&gt; unit" Usage="System.Web.Security.FormsAuthentication.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Initialisiert das <see cref="T:System.Web.Security.FormsAuthentication" />-Objekt auf Grundlage der Konfigurationseinstellungen für die Anwendung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.FormsAuthentication.Initialize%2A> Methode wird aufgerufen, wenn die <xref:System.Web.Security.FormsAuthenticationModule> erstellt eine Instanz der <xref:System.Web.Security.FormsAuthentication> Klasse. Diese Methode ist nicht für den Aufruf aus dem Code heraus bestimmt.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sicherheit von ASP.NET-Webanwendungen</related>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public static bool IsEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEnabled : bool" Usage="System.Web.Security.FormsAuthentication.IsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Formularauthentifizierung aktiviert ist.</summary>
        <value><see langword="true" />, wenn die Formularauthentifizierung aktiviert ist; andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoginUrl">
      <MemberSignature Language="C#" Value="public static string LoginUrl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string LoginUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.LoginUrl" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property LoginUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ LoginUrl { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LoginUrl : string" Usage="System.Web.Security.FormsAuthentication.LoginUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die URL für die Anmeldeseite ab, auf die die <see cref="T:System.Web.Security.FormsAuthentication" />-Klasse umleitet.</summary>
        <value>Die URL für die Anmeldeseite, auf die die <see cref="T:System.Web.Security.FormsAuthentication" />-Klasse umleitet. Der Standardwert ist "login.aspx".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A> Eigenschaftswert in der Konfigurationsdatei für eine ASP.NET-Anwendung festgelegt ist, mithilfe der `loginUrl` Attribut der [Forms](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1d3t3c61(v%3dvs.100)) Konfigurationselement. Die <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A> dient der <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> Methode.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die `loginUrl` Attribut in der Datei "Web.config".  
  
```  
<authentication mode="Forms">  
  <forms loginUrl="member_login.aspx"  
    defaultUrl="index.aspx" />  
</authentication>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sicherheit von ASP.NET-Webanwendungen</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="RedirectFromLoginPage">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Leitet einen authentifizierten Benutzer an die ursprünglich angeforderte URL oder die Standard-URL um.</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sicherheit von ASP.NET-Webanwendungen</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="RedirectFromLoginPage">
      <MemberSignature Language="C#" Value="public static void RedirectFromLoginPage (string userName, bool createPersistentCookie);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RedirectFromLoginPage(string userName, bool createPersistentCookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.RedirectFromLoginPage(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RedirectFromLoginPage (userName As String, createPersistentCookie As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RedirectFromLoginPage(System::String ^ userName, bool createPersistentCookie);" />
      <MemberSignature Language="F#" Value="static member RedirectFromLoginPage : string * bool -&gt; unit" Usage="System.Web.Security.FormsAuthentication.RedirectFromLoginPage (userName, createPersistentCookie)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="createPersistentCookie" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="userName">Der Name des authentifizierten Benutzers.</param>
        <param name="createPersistentCookie"><see langword="true" />, um ein permanentes Cookie (das über Browsersitzungen hinweg gespeichert wird) zu erstellen, andernfalls <see langword="false" />.</param>
        <summary>Leitet einen authentifizierten Benutzer an die ursprünglich angeforderte URL oder die Standard-URL um.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> -Methode leitet an die URL in der Abfragezeichenfolge mit der `ReturnURL` Variablennamen. Z. B. in der URL `http://www.contoso.com/login.aspx?ReturnUrl=caller.aspx`, <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> Methode zur Rückgabe-URL umgeleitet `caller.aspx`. Wenn die `ReturnURL` Variable ist nicht vorhanden, die <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> -Methode leitet an die URL in die <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> Eigenschaft.  
  
 ASP.NET fügt automatisch die Rückgabe-URL hinzu, wenn der Browser zur Anmeldeseite umgeleitet wird.  
  
 In der Standardeinstellung die `ReturnUrl` Variable muss auf einer Seite innerhalb der aktuellen Anwendung verweisen. Wenn `ReturnUrl` bezieht sich auf einer Seite in einer anderen Anwendung oder auf einem anderen Server, die <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> Methoden leitet an die URL in die <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> Eigenschaft. Wenn Sie leitet zu einer Seite außerhalb der aktuellen Anwendung ermöglichen möchten, müssen Sie festlegen der <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> Eigenschaft, um `true` mithilfe der `enableCrossAppRedirects` Attribut des der [Forms](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1d3t3c61(v%3dvs.100)) Konfigurationselement.  
  
> [!IMPORTANT]
>  Festlegen der <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> Eigenschaft `true` können anwendungsübergreifende umleitungen ist ein potenzielles Sicherheitsrisiko dar. Weitere Informationen finden Sie in den Ausführungen zur <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>-Eigenschaft.  
  
 Wenn die <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> -Eigenschaft ist `true`, und entweder die `ReturnUrl` Variable ist in der aktuellen Anwendung oder der <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> -Eigenschaft ist `true`, die <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> Methode ein Authentifizierungsticket ausgegeben und platziert es in der Cookie-Standardwert mithilfe der <xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A> Methode.  
  
 Wenn <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> ist `false` und der Umleitungspfad zu einer URL in der aktuellen Anwendung ist, das Ticket wird als Teil der umleitungs-URL ausgegeben. Wenn <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> ist `false`, <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> ist `true`, und den umleitungs-URL nicht auf eine Seite innerhalb der aktuellen Anwendung verweist, die <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> Methode ein Authentifizierungsticket ausgegeben und platziert es in der <xref:System.Web.HttpRequest.QueryString%2A> Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird validiert Benutzer weiterleitet, um entweder die ursprünglich angeforderte URL oder die <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>. Im Codebeispiel wird die ASP.NET-Mitgliedschaft zum valideren von Benutzern verwendet. Weitere Informationen zur Mitgliedschaft von ASP.NET finden Sie unter [Verwalten von Benutzern durch Mitgliedschaft](https://msdn.microsoft.com/library/824c3a24-f0af-427c-a652-0d2d1e9397cd).  
  
> [!IMPORTANT]
>  Dieses Beispiel enthält das Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko dar. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/logincs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/loginvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Die in der Abfragezeichenfolge angegebene Rückgabe-URL enthält ein anderes Protokoll als HTTP: oder HTTPS:.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sicherheit von ASP.NET-Webanwendungen</related>
      </Docs>
    </Member>
    <Member MemberName="RedirectFromLoginPage">
      <MemberSignature Language="C#" Value="public static void RedirectFromLoginPage (string userName, bool createPersistentCookie, string strCookiePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RedirectFromLoginPage(string userName, bool createPersistentCookie, string strCookiePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.RedirectFromLoginPage(System.String,System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RedirectFromLoginPage (userName As String, createPersistentCookie As Boolean, strCookiePath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RedirectFromLoginPage(System::String ^ userName, bool createPersistentCookie, System::String ^ strCookiePath);" />
      <MemberSignature Language="F#" Value="static member RedirectFromLoginPage : string * bool * string -&gt; unit" Usage="System.Web.Security.FormsAuthentication.RedirectFromLoginPage (userName, createPersistentCookie, strCookiePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="createPersistentCookie" Type="System.Boolean" />
        <Parameter Name="strCookiePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="userName">Der Name des authentifizierten Benutzers.</param>
        <param name="createPersistentCookie"><see langword="true" />, um ein permanentes Cookie (das über Browsersitzungen hinweg gespeichert wird) zu erstellen, andernfalls <see langword="false" />.</param>
        <param name="strCookiePath">Der Cookiepfad für das Formularauthentifizierungsticket.</param>
        <summary>Leitet einen authentifizierten Benutzer wieder an die ursprünglich angeforderte URL oder an die Standard-URL um. Hierfür wird der angegebene Cookiepfad für das Formularauthentifizierungscookie verwendet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> Methode zur Rückgabe-URL in der Abfragezeichenfolge mit angegebenen leitet die `ReturnURL` Variablennamen. Z. B. in der URL `http://www.contoso.com/login.aspx?ReturnUrl=caller.aspx`, <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> Methode zur Rückgabe-URL umgeleitet `caller.aspx`. Wenn die `ReturnURL` Variable ist nicht vorhanden, die <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> -Methode leitet an die URL in die <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> Eigenschaft.  
  
 ASP.NET fügt automatisch die Rückgabe-URL hinzu, wenn der Browser zur Anmeldeseite umgeleitet wird.  
  
 In der Standardeinstellung die `ReturnUrl` Variable muss auf einer Seite innerhalb der aktuellen Anwendung verweisen. Wenn `ReturnUrl` bezieht sich auf einer Seite in einer anderen Anwendung oder auf einem anderen Server, die <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> -Methode leitet an die URL in die <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> Eigenschaft. Wenn Sie leitet zu einer Seite außerhalb der aktuellen Anwendung ermöglichen möchten, müssen Sie festlegen der <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> Eigenschaft, um `true` mithilfe der `enableCrossAppRedirects` Attribut des der [Forms](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1d3t3c61(v%3dvs.100)) Konfigurationselement.  
  
> [!IMPORTANT]
>  Festlegen der <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> Eigenschaft `true` können anwendungsübergreifende umleitungen ist ein potenzielles Sicherheitsrisiko dar. Weitere Informationen finden Sie in den Ausführungen zur <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>-Eigenschaft.  
  
 Wenn die <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> -Eigenschaft ist `true`, und entweder die `ReturnUrl` Variable ist in der aktuellen Anwendung oder der <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> -Eigenschaft ist `true`, die <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> Methode ein Authentifizierungsticket ausgegeben und platziert es in der Cookies, die gemäß der `strCookiePath` Parameter mit dem <xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A> Methode.  
  
 Wenn <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> ist `false` und der Umleitungspfad zu einer URL in der aktuellen Anwendung ist, das Ticket wird als Teil der umleitungs-URL ausgegeben. Wenn <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> ist `false`, <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> ist `true`, und den umleitungs-URL nicht auf eine Seite innerhalb der aktuellen Anwendung verweist, die <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> Methode ein Authentifizierungsticket ausgegeben und platziert es in der <xref:System.Web.HttpRequest.QueryString%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Die in der Abfragezeichenfolge angegebene Rückgabe-URL enthält ein anderes Protokoll als HTTP: oder HTTPS:.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sicherheit von ASP.NET-Webanwendungen</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="RedirectToLoginPage">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Leitet den Browser auf die Anmelde-URL um.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> Methode leitet den Browser an die <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>.  
  
 Die <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> Methode löscht nicht die Formularauthentifizierungscookies. Können Sie die <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> -Methode in Verbindung mit der <xref:System.Web.Security.FormsAuthentication.SignOut%2A> Methode, um einen Benutzer abzumelden, und ein anderer Benutzer anmelden.  
  
 Im Gegensatz zu den <xref:System.Web.HttpResponse.Redirect%2A?displayProperty=nameWithType> -Methode, diese Methode endet nicht auf die Anforderung durch den Aufruf <xref:System.Web.HttpResponse.End%2A?displayProperty=nameWithType>. Dies bedeutet, dass dieser Code, der befolgt die <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> Methodenaufruf wird ausgeführt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird löscht die Formularauthentifizierung Cookie mit dem <xref:System.Web.Security.FormsAuthentication.SignOut%2A> -Methode aus und leitet der Benutzer für die Anmeldung Seite mithilfe von der <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> Methode.  
  
 [!code-aspx-csharp[System.Web.Security.FormsAuthentication#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.FormsAuthentication/CS/signoutcs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.FormsAuthentication#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.FormsAuthentication/VB/signoutvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sicherheit von ASP.NET-Webanwendungen</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="RedirectToLoginPage">
      <MemberSignature Language="C#" Value="public static void RedirectToLoginPage ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RedirectToLoginPage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.RedirectToLoginPage" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RedirectToLoginPage ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RedirectToLoginPage();" />
      <MemberSignature Language="F#" Value="static member RedirectToLoginPage : unit -&gt; unit" Usage="System.Web.Security.FormsAuthentication.RedirectToLoginPage " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Leitet den Browser auf die Anmelde-URL um.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> Methode leitet den Browser an die <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>.  
  
 Die <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> Methode löscht nicht die Formularauthentifizierungscookies. Können Sie die <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> -Methode in Verbindung mit der <xref:System.Web.Security.FormsAuthentication.SignOut%2A> Methode, um einen Benutzer abzumelden, und ein anderer Benutzer anmelden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird löscht die Formularauthentifizierung Cookie mit dem <xref:System.Web.Security.FormsAuthentication.SignOut%2A> -Methode aus und leitet der Benutzer für die Anmeldung Seite mithilfe von der <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> Methode.  
  
 [!code-aspx-csharp[System.Web.Security.FormsAuthentication#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.FormsAuthentication/CS/signoutcs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.FormsAuthentication#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.FormsAuthentication/VB/signoutvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sicherheit von ASP.NET-Webanwendungen</related>
      </Docs>
    </Member>
    <Member MemberName="RedirectToLoginPage">
      <MemberSignature Language="C#" Value="public static void RedirectToLoginPage (string extraQueryString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RedirectToLoginPage(string extraQueryString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.RedirectToLoginPage(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RedirectToLoginPage (extraQueryString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RedirectToLoginPage(System::String ^ extraQueryString);" />
      <MemberSignature Language="F#" Value="static member RedirectToLoginPage : string -&gt; unit" Usage="System.Web.Security.FormsAuthentication.RedirectToLoginPage extraQueryString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extraQueryString" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="extraQueryString">Die Abfragezeichenfolge, die die Umleitungs-URL enthalten soll.</param>
        <summary>Leitet den Browser mit der angegebenen Abfragezeichenfolge auf die Anmelde-URL um.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> Methode leitet den Browser an die <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A> sowie die `extraQueryString` Wert wie die <xref:System.Management.ManagementQuery.QueryString%2A> für die umgeleitete URL.  
  
 Die <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> Methode löscht nicht die Formularauthentifizierungscookies. Können Sie die <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> -Methode in Verbindung mit der <xref:System.Web.Security.FormsAuthentication.SignOut%2A> Methode, um einen Benutzer abzumelden, und ein anderer Benutzer anmelden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird löscht die Formularauthentifizierung Cookie mit dem <xref:System.Web.Security.FormsAuthentication.SignOut%2A> -Methode aus und leitet der Benutzer für die Anmeldung Seite mithilfe von der <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> Methode.  
  
 [!code-aspx-csharp[System.Web.Security.FormsAuthentication#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.FormsAuthentication/CS/signout2cs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.FormsAuthentication#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.FormsAuthentication/VB/signout2vb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sicherheit von ASP.NET-Webanwendungen</related>
      </Docs>
    </Member>
    <Member MemberName="RenewTicketIfOld">
      <MemberSignature Language="C#" Value="public static System.Web.Security.FormsAuthenticationTicket RenewTicketIfOld (System.Web.Security.FormsAuthenticationTicket tOld);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.FormsAuthenticationTicket RenewTicketIfOld(class System.Web.Security.FormsAuthenticationTicket tOld) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.RenewTicketIfOld(System.Web.Security.FormsAuthenticationTicket)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RenewTicketIfOld (tOld As FormsAuthenticationTicket) As FormsAuthenticationTicket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::FormsAuthenticationTicket ^ RenewTicketIfOld(System::Web::Security::FormsAuthenticationTicket ^ tOld);" />
      <MemberSignature Language="F#" Value="static member RenewTicketIfOld : System.Web.Security.FormsAuthenticationTicket -&gt; System.Web.Security.FormsAuthenticationTicket" Usage="System.Web.Security.FormsAuthentication.RenewTicketIfOld tOld" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.FormsAuthenticationTicket</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tOld" Type="System.Web.Security.FormsAuthenticationTicket" />
      </Parameters>
      <Docs>
        <param name="tOld">Das zu aktualisierende Formularauthentifizierungsticket.</param>
        <summary>Aktualisiert unter bestimmten Bedingungen Ausgabedatum und -uhrzeit sowie Ablaufdatum und -uhrzeit für ein <see cref="T:System.Web.Security.FormsAuthenticationTicket" />.</summary>
        <returns>Das aktualisierte <see cref="T:System.Web.Security.FormsAuthenticationTicket" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.FormsAuthentication.RenewTicketIfOld%2A> Methode aktualisiert das Ablaufdatum und die Uhrzeit des angegebenen <xref:System.Web.Security.FormsAuthenticationTicket> Wenn das aktuelle Datum und Uhrzeit abzüglich der <xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A> Wert ist größer als die <xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A> Wert minus dem aktuellen Datum und Uhrzeit.  
  
 Das Ticket wird aktualisiert, mit der <xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A> -Eigenschaft auf das aktuelle Datum und die Uhrzeit und die <xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A> -Eigenschaft auf das aktuelle Datum und-Uhrzeit sowie der ursprüngliche <xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A> Wert abzüglich des ursprünglichen <xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A> Wert.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sicherheit von ASP.NET-Webanwendungen</related>
      </Docs>
    </Member>
    <Member MemberName="RequireSSL">
      <MemberSignature Language="C#" Value="public static bool RequireSSL { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool RequireSSL" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.RequireSSL" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property RequireSSL As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool RequireSSL { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequireSSL : bool" Usage="System.Web.Security.FormsAuthentication.RequireSSL" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob SSL zum Zurücksenden des Formularauthentifizierungscookies an den Server erforderlich ist.</summary>
        <value><see langword="true" />, wenn SSL zum Zurücksenden des Formularauthentifizierungscookies an den Server erforderlich ist, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.FormsAuthentication.RequireSSL%2A> Eigenschaftswert in der Konfigurationsdatei für eine ASP.NET-Anwendung festgelegt ist, mithilfe der `requireSSL` Attribut der [Forms](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1d3t3c61(v%3dvs.100)) Konfigurationselement. Sie können angeben in der Datei "Web.config" für die ASP.NET-Anwendung, ob SSL (Secure Sockets Layer), zum Zurücksenden der Forms-Authentifizierungscookies an den Server erforderlich ist durch Festlegen der `requireSSL` Attribut. Weitere Informationen finden Sie unter <xref:System.Web.HttpCookie.Secure%2A>.  
  
 Es wird empfohlen, wenn Sie konfigurieren `requireSSL` als `false`, Sie auch konfigurieren, `slidingExpiration` als `false`, um die Zeitspanne zu reduzieren, für die ein Ticket gültig ist.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die `requireSSL` Attribut in der Datei "Web.config".  
  
```  
<authentication mode="Forms">  
  <forms loginUrl="member_login.aspx"  
    cookieless="UseCookies"  
    requireSSL="true"  
    path="/MyApplication" />  
</authentication>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sicherheit von ASP.NET-Webanwendungen</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetAuthCookie">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Erstellt ein Authentifizierungsticket für den angegebenen Benutzernamen und fügt es der Cookieauflistung der Antwort oder der URL hinzu, wenn die Authentifizierung ohne Cookies verwendet wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A> -Methode fügt eine Formularauthentifizierungsticket entweder die Auflistung der Cookies oder die URL, wenn <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> ist `false`. Das Formularauthentifizierungsticket stellt die Formularauthentifizierung-Informationen, um die nächste Anforderung vom Browser bereit. Bei der Formularauthentifizierung können Sie die <xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A> Methode, wenn Sie einen Benutzer authentifizieren, aber behalten die Kontrolle über die Navigation mit umleitungen möchten.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sicherheit von ASP.NET-Webanwendungen</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=197376">Erläutert: Formularauthentifizierung in ASP.NET 2.0</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=197377">Vorgehensweise: Verwenden Sie die Mitgliedschaft in ASP.NET 2.0</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetAuthCookie">
      <MemberSignature Language="C#" Value="public static void SetAuthCookie (string userName, bool createPersistentCookie);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAuthCookie(string userName, bool createPersistentCookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.SetAuthCookie(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetAuthCookie (userName As String, createPersistentCookie As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetAuthCookie(System::String ^ userName, bool createPersistentCookie);" />
      <MemberSignature Language="F#" Value="static member SetAuthCookie : string * bool -&gt; unit" Usage="System.Web.Security.FormsAuthentication.SetAuthCookie (userName, createPersistentCookie)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="createPersistentCookie" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="userName">Der Name eines authentifizierten Benutzers. Eine Zuordnung zu einem Windows-Konto ist hier nicht erforderlich.</param>
        <param name="createPersistentCookie"><see langword="true" />, um ein permanentes Cookie (das über Browsersitzungen hinweg gespeichert wird) zu erstellen, andernfalls <see langword="false" />.</param>
        <summary>Erstellt ein Authentifizierungsticket für den angegebenen Benutzernamen und fügt es der Cookieauflistung der Antwort oder der URL hinzu, wenn die Authentifizierung ohne Cookies verwendet wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A> Methode fügt eine Formularauthentifizierungsticket entweder der cookieauflistung oder die URL Wenn <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> ist `false`. Das Formularauthentifizierungsticket stellt die Formularauthentifizierung-Informationen, um die nächste Anforderung vom Browser bereit. Bei der Formularauthentifizierung können Sie die <xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A> Methode, wenn Sie einen Benutzer authentifizieren, aber behalten die Kontrolle über die Navigation mit umleitungen möchten.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><see cref="P:System.Web.Security.FormsAuthentication.RequireSSL" /> ist <see langword="true" />, und <see cref="P:System.Web.HttpRequest.IsSecureConnection" /> ist <see langword="false" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sicherheit von ASP.NET-Webanwendungen</related>
      </Docs>
    </Member>
    <Member MemberName="SetAuthCookie">
      <MemberSignature Language="C#" Value="public static void SetAuthCookie (string userName, bool createPersistentCookie, string strCookiePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAuthCookie(string userName, bool createPersistentCookie, string strCookiePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.SetAuthCookie(System.String,System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetAuthCookie (userName As String, createPersistentCookie As Boolean, strCookiePath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetAuthCookie(System::String ^ userName, bool createPersistentCookie, System::String ^ strCookiePath);" />
      <MemberSignature Language="F#" Value="static member SetAuthCookie : string * bool * string -&gt; unit" Usage="System.Web.Security.FormsAuthentication.SetAuthCookie (userName, createPersistentCookie, strCookiePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="createPersistentCookie" Type="System.Boolean" />
        <Parameter Name="strCookiePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="userName">Der Name eines authentifizierten Benutzers.</param>
        <param name="createPersistentCookie"><see langword="true" />, um ein permanentes Cookie (das über Browsersitzungen hinweg gespeichert wird) zu erstellen, andernfalls <see langword="false" />.</param>
        <param name="strCookiePath">Der Cookiepfad für das Formularauthentifizierungsticket.</param>
        <summary>Erstellt ein Authentifizierungsticket für den angegebenen Benutzernamen und fügt es der Cookieauflistung der Antwort unter Verwendung des angegebenen Cookiepfads oder, wenn die Authentifizierung ohne Cookies verwendet wird, unter Verwendung der URL hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A> -Methode fügt eine Formularauthentifizierungsticket entweder die Auflistung der Cookies oder die URL, wenn <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> ist `false`. Das Formularauthentifizierungsticket stellt die Formularauthentifizierung-Informationen, um die nächste Anforderung vom Browser bereit. Bei der Formularauthentifizierung können Sie die <xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A> Methode, wenn Sie einen Benutzer authentifizieren, aber behalten die Kontrolle über die Navigation mit umleitungen möchten.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><see cref="P:System.Web.Security.FormsAuthentication.RequireSSL" /> ist <see langword="true" />, und <see cref="P:System.Web.HttpRequest.IsSecureConnection" /> ist <see langword="false" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sicherheit von ASP.NET-Webanwendungen</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=197376">Erläutert: Formularauthentifizierung in ASP.NET 2.0</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=197377">Vorgehensweise: Verwenden Sie die Mitgliedschaft in ASP.NET 2.0</related>
      </Docs>
    </Member>
    <Member MemberName="SignOut">
      <MemberSignature Language="C#" Value="public static void SignOut ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SignOut() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.SignOut" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SignOut ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SignOut();" />
      <MemberSignature Language="F#" Value="static member SignOut : unit -&gt; unit" Usage="System.Web.Security.FormsAuthentication.SignOut " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Entfernt das Formularauthentifizierungsticket aus dem Browser.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.FormsAuthentication.SignOut%2A> Methode entfernt die Ticketinformationen für die Formularauthentifizierung aus dem Cookie oder die URL ein, wenn <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> ist `false`. Können Sie die <xref:System.Web.Security.FormsAuthentication.SignOut%2A> -Methode in Verbindung mit der <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> Methode, um einen Benutzer abzumelden, und ein anderer Benutzer anmelden.  
  
 Wenn Sie ausschließlich im Modus ohne Cookies ausgeführt werden soll, oder wenn Sie sowohl authentifiziert als auch anonyme Benutzer zu unterstützen, Sie explizit sollten steuern Sie die Umleitung zur Anmeldeseite, wenn spezielle Geschäftslogik ausgeführt wird, als Ergebnis der anonyme Bezeichner entfernt muss.  
  
 Wenn die <xref:System.Web.Security.FormsAuthentication.SignOut%2A> Methode aufgerufen wird, wird eine Umleitung an Anmeldeseite der Anwendung erfolgt durch Aufruf der <xref:System.Web.HttpResponse.Redirect%2A> -Methode mit der `endResponse` Parametersatz zu `false`. Die Umleitung, findet nicht statt, bis die aktuelle Seite ausgeführt hat, damit zusätzlicher Code ausgeführt werden kann. Wenn der Code keine explizite Umleitung zu einer anderen Seite enthält, wird der Benutzer zur Anmeldeseite in der Anwendungskonfigurationsdatei konfiguriert umgeleitet.  
  
 Aufrufen der <xref:System.Web.Security.FormsAuthentication.SignOut%2A> Methode entfernt nur die formularauthentifizierungs-Cookie. Der Webserver werden gültig und abgelaufen Authentifizierungstickets zum späteren Vergleich nicht gespeichert werden. Dadurch wird Ihre Website ein Replay-Angriff anfällig, wenn ein böswilliger Benutzer Zugriff auf ein gültiges Formularauthentifizierungscookie. Um die Sicherheit zu verbessern, wenn Sie ein formularauthentifizierungs-Cookie zu verwenden, sollten Sie Folgendes tun:  
  
-   Verwenden Sie die absolute Ablaufzeit für Formularauthentifizierungscookies durch Festlegen der <xref:System.Web.Security.FormsAuthentication.SlidingExpiration%2A> Eigenschaft `false`. Dadurch wird das Fenster, in dem ein abgefangenes Cookie wiedergegeben werden kann.  
  
-   Nur und akzeptieren Sie Authentifizierungscookies über Secure Sockets Layer (SSL), durch Festlegen der <xref:System.Web.Security.FormsAuthentication.RequireSSL%2A> Eigenschaft `true` und durch das Ausführen der gesamten Website unter SSL. Festlegen der <xref:System.Web.Security.FormsAuthentication.RequireSSL%2A> Eigenschaft `true` wird sichergestellt, dass ASP.NET ein Authentifizierungscookie an den Browser über eine nicht-SSL-Verbindung sendet; der Client jedoch nicht die sichere Einstellung für das Cookie berücksichtigt kann. Dies bedeutet, dass der Client die formularauthentifizierungs-Cookie über eine nicht-SSL-Verbindung senden kann, bleibt er anfällig für Kapern. Sie können verhindern, dass einen Client Formularauthentifizierungscookies in Klartext senden, durch die gesamte Website unter SSL ausführen.  
  
-   Verwenden Sie beständigen Speicher auf dem Server, um aufzuzeichnen, wenn ein Benutzer aus der Website anmeldet und dann ein Anwendungsereignis wie z. B. <xref:System.Web.HttpApplication.PostAuthenticateRequest> Ereignis, um zu bestimmen, ob der aktuelle Benutzer bei der Formularauthentifizierung authentifiziert wurde. Wenn der Benutzer bei der Formularauthentifizierung authentifiziert wurde, und sollten die Informationen im dauerhaften Speicher wird der Benutzer abgemeldet, deaktivieren Sie das Authentifizierungscookie sofort, und der Browser an die Anmeldeseite umgeleitet. Aktualisieren Sie nach einer erfolgreichen Anmeldung Speicher, um darauf hinzuweisen, dass der Benutzer angemeldet ist. Wenn Sie diese Methode verwenden, wird Ihre Anwendung muss den Status angemeldeten Benutzer verfolgen, und muss die Benutzer melden Sie sich im Leerlauf erzwingen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird löscht die Formularauthentifizierung Cookie mit dem <xref:System.Web.Security.FormsAuthentication.SignOut%2A> -Methode aus und leitet der Benutzer für die Anmeldung Seite mithilfe von der <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> Methode.  
  
 [!code-aspx-csharp[System.Web.Security.FormsAuthentication#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.FormsAuthentication/CS/signoutcs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.FormsAuthentication#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.FormsAuthentication/VB/signoutvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sicherheit von ASP.NET-Webanwendungen</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=197376">Erläutert: Formularauthentifizierung in ASP.NET 2.0</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=197377">Vorgehensweise: Verwenden Sie die Mitgliedschaft in ASP.NET 2.0</related>
      </Docs>
    </Member>
    <Member MemberName="SlidingExpiration">
      <MemberSignature Language="C#" Value="public static bool SlidingExpiration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool SlidingExpiration" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.SlidingExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SlidingExpiration As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool SlidingExpiration { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SlidingExpiration : bool" Usage="System.Web.Security.FormsAuthentication.SlidingExpiration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die gleitende Ablaufzeit aktiviert ist.</summary>
        <value><see langword="true" />, wenn die gleitende Ablaufzeit aktiviert ist, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Security.FormsAuthentication.SlidingExpiration%2A> -Eigenschaftswert festgelegt ist, mit der `slidingExpiration` Attribut der [Forms](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1d3t3c61(v%3dvs.100)) Konfigurationselement.  
  
 Gleitende Ablaufzeit setzt die Ablaufzeit für ein gültiges Authentifizierungscookie zurück, wenn eine Anforderung und mehr als die Hälfte der das Timeoutintervall abgelaufen. Wenn das Cookie abläuft, muss der Benutzer erneut authentifizieren. Festlegen der <xref:System.Web.Security.FormsAuthentication.SlidingExpiration%2A> Eigenschaft `false` können verbessern Sie die Sicherheit einer Anwendung durch die Zeit für die ein Authentifizierungscookie gültig ist, basierend auf den konfigurierten `timeout` Wert.  
  
 Es wird empfohlen, wenn Sie konfigurieren `requireSSL` als `false`, Sie auch konfigurieren, `slidingExpiration` als `false`, um die Zeitspanne zu reduzieren, für die ein Ticket gültig ist.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die `slidingExpiration` Attribut `false` in der Datei "Web.config" für eine ASP.NET-Anwendung.  
  
```  
<authentication mode="Forms">  
  <forms loginUrl="member_login.aspx"  
    name=".ASPXFORMSAUTH"  
    cookieless="UseCookies"  
    requireSSL="true"   
    slidingExpiration="false" />  
</authentication>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sicherheit von ASP.NET-Webanwendungen</related>
      </Docs>
    </Member>
    <Member MemberName="TicketCompatibilityMode">
      <MemberSignature Language="C#" Value="public static System.Web.Configuration.TicketCompatibilityMode TicketCompatibilityMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Web.Configuration.TicketCompatibilityMode TicketCompatibilityMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.TicketCompatibilityMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TicketCompatibilityMode As TicketCompatibilityMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Configuration::TicketCompatibilityMode TicketCompatibilityMode { System::Web::Configuration::TicketCompatibilityMode get(); };" />
      <MemberSignature Language="F#" Value="member this.TicketCompatibilityMode : System.Web.Configuration.TicketCompatibilityMode" Usage="System.Web.Security.FormsAuthentication.TicketCompatibilityMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.TicketCompatibilityMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob UTC (Coordinated Universal Time) oder Ortszeit für das Ticketablaufdatum verwendet werden soll.</summary>
        <value>Ein Wert, der angibt, ob UTC (Coordinated Universal Time) oder Ortszeit für das Ticketablaufdatum verwendet werden soll.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public static TimeSpan Timeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.TimeSpan Timeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Timeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property TimeSpan Timeout { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.Timeout : TimeSpan" Usage="System.Web.Security.FormsAuthentication.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Zeitdauer, bis ein Authentifizierungsticket abläuft, ab.</summary>
        <value>Die Zeitdauer, bis ein Authentifizierungsticket abläuft.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>