<Type Name="ImportCollection" FullName="Microsoft.Build.BuildEngine.ImportCollection">
  <TypeSignature Language="C#" Value="public class ImportCollection : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ImportCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.BuildEngine.ImportCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ImportCollection&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImportCollection : System::Collections::ICollection" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Engine</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="31e1e-101">Stellt eine Sammlung aller [Import](http://msdn.microsoft.com/library/3bfecaf1-69fd-4008-b651-c9dafd4389d9)-Elemente in einem Projekt dar.</span><span class="sxs-lookup"><span data-stu-id="31e1e-101">Represents a collection of all [Import](http://msdn.microsoft.com/library/3bfecaf1-69fd-4008-b651-c9dafd4389d9) elements in a project.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddNewImport">
      <MemberSignature Language="C#" Value="public void AddNewImport (string projectFile, string condition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddNewImport(string projectFile, string condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.BuildEngine.ImportCollection.AddNewImport(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddNewImport (projectFile As String, condition As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddNewImport(System::String ^ projectFile, System::String ^ condition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="condition" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="31e1e-102">Eine erforderliche Zeichenfolge, die den Namen der Projektdatei darstellt, der die &lt;Import&gt;-Anweisung hinzugefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="31e1e-102">A required string representing the name of the project file for the &lt;Import&gt; statement to be added.</span></span> <span data-ttu-id="31e1e-103">Beispiel: myproject.csproj.</span><span class="sxs-lookup"><span data-stu-id="31e1e-103">For example, "myproject.csproj."</span></span></param>
        <param name="condition"><span data-ttu-id="31e1e-104">Eine optionale Zeichenfolge, die angibt, ob das Element verarbeitet wird.</span><span class="sxs-lookup"><span data-stu-id="31e1e-104">An optional string indicating whether the element is processed.</span></span> <span data-ttu-id="31e1e-105">Wenn <c>condition</c> als <see langword="true" /> ausgewertet wird, wird das angegebene &lt;Import&gt;-Tag hinzugefügt. Ergibt die Auswertung <see langword="false" />, wird das Tag nicht hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="31e1e-105">If <c>condition</c> is <see langword="true" />, then the specified &lt;Import&gt; tag is added, if <see langword="false" />, it is not.</span></span></param>
        <summary><span data-ttu-id="31e1e-106">Ermöglicht Hosts das programmgesteuerte Hinzufügen eines neuen [&lt;Import&gt;](http://msdn.microsoft.com/library/3bfecaf1-69fd-4008-b651-c9dafd4389d9)-Tags zu einer Projektdatei, die vom Host bearbeitet wird.</span><span class="sxs-lookup"><span data-stu-id="31e1e-106">Allows hosts to programmatically add a new [&lt;Import&gt;](http://msdn.microsoft.com/library/3bfecaf1-69fd-4008-b651-c9dafd4389d9) tag to a project file being manipulated by the host.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="31e1e-107">Kopiert die gesamte <see cref="T:Microsoft.Build.BuildEngine.ImportCollection" />-Instanz in ein kompatibles eindimensionales <see cref="T:System.Array" />, beginnend am angegebenen Index des Zielarrays.</span><span class="sxs-lookup"><span data-stu-id="31e1e-107">Copies the entire <see cref="T:Microsoft.Build.BuildEngine.ImportCollection" /> to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target array.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Microsoft.Build.BuildEngine.Import[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class Microsoft.Build.BuildEngine.Import[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.BuildEngine.ImportCollection.CopyTo(Microsoft.Build.BuildEngine.Import[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As Import(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;Microsoft::Build::BuildEngine::Import ^&gt; ^ array, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="Microsoft.Build.BuildEngine.Import[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="31e1e-108">Das eindimensionale <see cref="T:System.Array" /> von <see cref="T:Microsoft.Build.BuildEngine.Import" />-Objekten, das das Ziel der aus der <see cref="T:Microsoft.Build.BuildEngine.ImportCollection" /> kopierten Elemente ist.</span><span class="sxs-lookup"><span data-stu-id="31e1e-108">The one-dimensional <see cref="T:System.Array" /> of <see cref="T:Microsoft.Build.BuildEngine.Import" /> objects that is the destination of the elements copied from <see cref="T:Microsoft.Build.BuildEngine.ImportCollection" />.</span></span> <span data-ttu-id="31e1e-109">Für das <see cref="T:System.Array" /> muss eine nullbasierte Indizierung verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="31e1e-109">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="index"><span data-ttu-id="31e1e-110">Der nullbasierte Index im <c>array</c>, ab dem kopiert wird.</span><span class="sxs-lookup"><span data-stu-id="31e1e-110">The zero-based index in <c>array</c> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="31e1e-111">Kopiert die gesamte <see cref="T:Microsoft.Build.BuildEngine.ImportCollection" /> in ein kompatibles eindimensionales <see cref="T:System.Array" /> von <see cref="T:Microsoft.Build.BuildEngine.Import" />-Objekten, beginnend am angegebenen Index des Zielarrays.</span><span class="sxs-lookup"><span data-stu-id="31e1e-111">Copies the entire <see cref="T:Microsoft.Build.BuildEngine.ImportCollection" /> to a compatible one-dimensional <see cref="T:System.Array" /> of <see cref="T:Microsoft.Build.BuildEngine.Import" /> objects, starting at the specified index of the target array.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.BuildEngine.ImportCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="31e1e-112">Das eindimensionale <see cref="T:System.Array" />, das das Ziel der aus der <see cref="T:Microsoft.Build.BuildEngine.ImportCollection" /> kopierten Elemente ist.</span><span class="sxs-lookup"><span data-stu-id="31e1e-112">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:Microsoft.Build.BuildEngine.ImportCollection" />.</span></span> <span data-ttu-id="31e1e-113">Für das <see cref="T:System.Array" /> muss eine nullbasierte Indizierung verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="31e1e-113">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="index"><span data-ttu-id="31e1e-114">Der nullbasierte Index im <c>array</c>, ab dem kopiert wird.</span><span class="sxs-lookup"><span data-stu-id="31e1e-114">The zero-based index in <c>array</c> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="31e1e-115">Kopiert die gesamte <see cref="T:Microsoft.Build.BuildEngine.ImportCollection" />-Instanz in ein kompatibles eindimensionales <see cref="T:System.Array" />, beginnend am angegebenen Index des Zielarrays.</span><span class="sxs-lookup"><span data-stu-id="31e1e-115">Copies the entire <see cref="T:Microsoft.Build.BuildEngine.ImportCollection" /> to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target array.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.BuildEngine.ImportCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="31e1e-116">Ruft einen Wert ab, der die Anzahl der <see cref="T:Microsoft.Build.BuildEngine.Import" />-Objekte in der <see cref="T:Microsoft.Build.BuildEngine.ImportCollection" /> angibt.</span><span class="sxs-lookup"><span data-stu-id="31e1e-116">Gets a value indicating the number of <see cref="T:Microsoft.Build.BuildEngine.Import" /> objects in the <see cref="T:Microsoft.Build.BuildEngine.ImportCollection" />.</span></span></summary>
        <value><span data-ttu-id="31e1e-117">Eine ganze Zahl, die die Anzahl der <see cref="T:Microsoft.Build.BuildEngine.Import" />-Objekte in der Auflistung darstellt.</span><span class="sxs-lookup"><span data-stu-id="31e1e-117">An integer value representing the number of <see cref="T:Microsoft.Build.BuildEngine.Import" /> objects in the collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31e1e-118">Jede <xref:Microsoft.Build.BuildEngine.Import> Objekt in der Auflistung stellt ein Element im Projekt dar.</span><span class="sxs-lookup"><span data-stu-id="31e1e-118">Each <xref:Microsoft.Build.BuildEngine.Import> object in the collection represents a  element in the project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.BuildEngine.ImportCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="31e1e-119">Gibt einen Enumerator zurück, der die <see cref="T:Microsoft.Build.BuildEngine.ImportCollection" /> durchläuft.</span><span class="sxs-lookup"><span data-stu-id="31e1e-119">Gets an enumerator that iterates through the <see cref="T:Microsoft.Build.BuildEngine.ImportCollection" />.</span></span></summary>
        <returns><span data-ttu-id="31e1e-120">Ein <see cref="T:System.Collections.IEnumerator" /> für das gesamte <see cref="T:Microsoft.Build.BuildEngine.ImportCollection" />.</span><span class="sxs-lookup"><span data-stu-id="31e1e-120">An <see cref="T:System.Collections.IEnumerator" /> for the entire <see cref="T:Microsoft.Build.BuildEngine.ImportCollection" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31e1e-121">Diese Methode ermöglicht den Aufrufer die Verwendung der `foreach` -Anweisung der Programmiersprache c# (`for each` in Visual Basic) zum Durchlaufen der einzelnen <xref:Microsoft.Build.BuildEngine.Import> Objekte in der <xref:Microsoft.Build.BuildEngine.ImportCollection>.</span><span class="sxs-lookup"><span data-stu-id="31e1e-121">This method allows the caller to use the `foreach` statement of the C# language (`for each` in Visual Basic) to iterate through the individual <xref:Microsoft.Build.BuildEngine.Import> objects in the <xref:Microsoft.Build.BuildEngine.ImportCollection>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.BuildEngine.ImportCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="31e1e-122">Ruft einen Wert ab, der angibt, ob der Zugriff auf die <see cref="T:Microsoft.Build.BuildEngine.ImportCollection" /> synchronisiert (threadsicher) ist.</span><span class="sxs-lookup"><span data-stu-id="31e1e-122">Gets a value indicating whether access to the <see cref="T:Microsoft.Build.BuildEngine.ImportCollection" /> is synchronized (thread safe).</span></span></summary>
        <value>
          <span data-ttu-id="31e1e-123"><see langword="true" />, wenn der Zugriff auf das <see cref="T:Microsoft.Build.BuildEngine.ImportCollection" /> synchronisiert (threadsicher) ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="31e1e-123"><see langword="true" /> if access to the <see cref="T:Microsoft.Build.BuildEngine.ImportCollection" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span></span> <span data-ttu-id="31e1e-124">Der Standardwert ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="31e1e-124">The default is <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveImport">
      <MemberSignature Language="C#" Value="public void RemoveImport (Microsoft.Build.BuildEngine.Import importToRemove);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveImport(class Microsoft.Build.BuildEngine.Import importToRemove) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.BuildEngine.ImportCollection.RemoveImport(Microsoft.Build.BuildEngine.Import)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveImport (importToRemove As Import)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveImport(Microsoft::Build::BuildEngine::Import ^ importToRemove);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importToRemove" Type="Microsoft.Build.BuildEngine.Import" />
      </Parameters>
      <Docs>
        <param name="importToRemove"><span data-ttu-id="31e1e-125">Eine Zeichenfolge, die den Namen des &lt;Import&gt;-Tags zum Entfernen der Projektdatei darstellt.</span><span class="sxs-lookup"><span data-stu-id="31e1e-125">A string representing the name of the &lt;Import&gt; tag to remove from the project file.</span></span></param>
        <summary><span data-ttu-id="31e1e-126">Ermöglicht Hosts das programmgesteuerte Entfernen von [&lt;Import&gt;](http://msdn.microsoft.com/library/3bfecaf1-69fd-4008-b651-c9dafd4389d9)-Tags, die Teil einer vom Host bearbeiteten Projektdatei sind.</span><span class="sxs-lookup"><span data-stu-id="31e1e-126">Allows hosts to programmatically remove [&lt;Import&gt;](http://msdn.microsoft.com/library/3bfecaf1-69fd-4008-b651-c9dafd4389d9) tags that are part of a project file being manipulated by the host.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31e1e-127">Entfernen eines Imports kennzeichnet das Projekt als geändert, was bedeutet, dass das Projekt während der andere Vorgänge auf die Projektinstanz irgendwann neu ausgewertet werden.</span><span class="sxs-lookup"><span data-stu-id="31e1e-127">Removing an import marks the project as dirty, which means that the project will be re-evaluated at some point during other operations on the project instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.BuildEngine.ImportCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="31e1e-128">Ruft ein Objekt ab, mit dem der Zugriff auf <see cref="T:Microsoft.Build.BuildEngine.ImportCollection" /> synchronisiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="31e1e-128">Gets an object that can be used to synchronize access to the <see cref="T:Microsoft.Build.BuildEngine.ImportCollection" />.</span></span></summary>
        <value><span data-ttu-id="31e1e-129">Ein Objekt, mit dem der Zugriff auf die <see cref="T:Microsoft.Build.BuildEngine.ImportCollection" /> synchronisiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="31e1e-129">An object that can be used to synchronize access to the <see cref="T:Microsoft.Build.BuildEngine.ImportCollection" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>