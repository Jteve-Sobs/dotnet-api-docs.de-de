<Type Name="DataLoadOptions" FullName="System.Data.Linq.DataLoadOptions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="68d7a106a236150ca9a1a8a2a5972fb7ae8eee39" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39833075" /></Metadata><TypeSignature Language="C#" Value="public sealed class DataLoadOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DataLoadOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.DataLoadOptions" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DataLoadOptions" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataLoadOptions sealed" />
  <TypeSignature Language="F#" Value="type DataLoadOptions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="524ad-101">Ermöglicht unmittelbares Laden und Filtern verwandter Daten.</span><span class="sxs-lookup"><span data-stu-id="524ad-101">Provides for immediate loading and filtering of related data.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="general"></a><span data-ttu-id="524ad-102">Allgemein</span><span class="sxs-lookup"><span data-stu-id="524ad-102">General</span></span>  
 <span data-ttu-id="524ad-103">Wenn Sie eine Abfrage für ein Objekt durchführen, wird nur das angeforderte Objekt abgerufen.</span><span class="sxs-lookup"><span data-stu-id="524ad-103">When you query for an object, you actually retrieve only the object you requested.</span></span> <span data-ttu-id="524ad-104">Die *verwandte* Objekte werden nicht automatisch zur gleichen Zeit abgerufen.</span><span class="sxs-lookup"><span data-stu-id="524ad-104">The *related* objects are not automatically fetched at the same time.</span></span> <span data-ttu-id="524ad-105">(Weitere Informationen finden Sie unter [Beziehungsübergreifendes](~/docs/framework/data/adonet/sql/linq/querying-across-relationships.md).)</span><span class="sxs-lookup"><span data-stu-id="524ad-105">(For more information, see [Querying Across Relationships](~/docs/framework/data/adonet/sql/linq/querying-across-relationships.md).)</span></span>  
  
 <span data-ttu-id="524ad-106">Die <xref:System.Data.Linq.DataLoadOptions> Klasse bietet zwei Methoden zum Erreichen von unmittelbarem laden angegebenen verknüpfter Daten.</span><span class="sxs-lookup"><span data-stu-id="524ad-106">The <xref:System.Data.Linq.DataLoadOptions> class provides two methods to achieve immediate loading of specified related data.</span></span> <span data-ttu-id="524ad-107">Die <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> -Methode ermöglicht es, für das sofortige Laden von Daten zum Hauptziel.</span><span class="sxs-lookup"><span data-stu-id="524ad-107">The <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> method allows for immediate loading of data related to the main target.</span></span> <span data-ttu-id="524ad-108">Die <xref:System.Data.Linq.DataLoadOptions.AssociateWith%2A> Methode ermöglicht die Filterung von verknüpften Objekten.</span><span class="sxs-lookup"><span data-stu-id="524ad-108">The <xref:System.Data.Linq.DataLoadOptions.AssociateWith%2A> method allows for filtering related objects.</span></span>  
  
## <a name="rules"></a><span data-ttu-id="524ad-109">Regeln</span><span class="sxs-lookup"><span data-stu-id="524ad-109">Rules</span></span>  
 <span data-ttu-id="524ad-110">Beachten Sie die folgenden Regeln im Hinblick auf <xref:System.Data.Linq.DataLoadOptions> Nutzung:</span><span class="sxs-lookup"><span data-stu-id="524ad-110">Note the following rules regarding <xref:System.Data.Linq.DataLoadOptions> usage:</span></span>  
  
-   <span data-ttu-id="524ad-111">Zuweisen einer <xref:System.Data.Linq.DataLoadOptions> auf eine <xref:System.Data.Linq.DataContext> nach die erste Abfrage ausgeführt wurde, wird eine Ausnahme generiert.</span><span class="sxs-lookup"><span data-stu-id="524ad-111">Assigning a <xref:System.Data.Linq.DataLoadOptions> to a <xref:System.Data.Linq.DataContext> after the first query has been executed generates an exception.</span></span>  
  
-   <span data-ttu-id="524ad-112">Ändern einer <xref:System.Data.Linq.DataLoadOptions> nach dem er zugewiesen wurde eine <xref:System.Data.Linq.DataContext> generiert eine Ausnahme</span><span class="sxs-lookup"><span data-stu-id="524ad-112">Modifying a <xref:System.Data.Linq.DataLoadOptions> after it has been assigned to a <xref:System.Data.Linq.DataContext> generates an exception</span></span>  
  
## <a name="cycle-handling"></a><span data-ttu-id="524ad-113">Zyklus-Verarbeitung</span><span class="sxs-lookup"><span data-stu-id="524ad-113">Cycle Handling</span></span>  
 <span data-ttu-id="524ad-114"><xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> und <xref:System.Data.Linq.DataLoadOptions.AssociateWith%2A> -Direktiven müssen keine Zyklen erstellen.</span><span class="sxs-lookup"><span data-stu-id="524ad-114"><xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> and <xref:System.Data.Linq.DataLoadOptions.AssociateWith%2A> directives must not create cycles.</span></span> <span data-ttu-id="524ad-115">Die folgenden stellen Beispiele für solche Diagramme dar:</span><span class="sxs-lookup"><span data-stu-id="524ad-115">The following represent examples of such graphs:</span></span>  
  
-   <span data-ttu-id="524ad-116">: Beispiel 1 rekursive</span><span class="sxs-lookup"><span data-stu-id="524ad-116">Example 1: Self recursive</span></span>  
  
    -   `dlo.LoadWith<Employee>(e => e.Reports);`  
  
-   <span data-ttu-id="524ad-117">Beispiel 2: Zurück-Zeiger</span><span class="sxs-lookup"><span data-stu-id="524ad-117">Example 2: Back-pointers</span></span>  
  
    -   `dlo.LoadWith <Customer>(c => C.Orders);`  
  
    -   `dlo.LoadWith <Order>(o => o.Customer);`  
  
-   <span data-ttu-id="524ad-118">Beispiel 3: Länger Zyklen</span><span class="sxs-lookup"><span data-stu-id="524ad-118">Example 3: Longer cycles</span></span>  
  
     <span data-ttu-id="524ad-119">Obwohl dies nicht in einem gut normalisierten Modell auftreten sollte, ist es möglich.</span><span class="sxs-lookup"><span data-stu-id="524ad-119">Although this should not occur in a well-normalized model, it is possible.</span></span>  
  
    -   `dlo.LoadWith <A>(a => a.Bs);`  
  
    -   `dlo.LoadWith <B>(b => b.Cs);`  
  
    -   `dlo.LoadWith <C>(c => c.As);`  
  
-   <span data-ttu-id="524ad-120">: Beispiel 4 Rekursive Unterabfragen</span><span class="sxs-lookup"><span data-stu-id="524ad-120">Example 4: Self recursive subQueries</span></span>  
  
    -   `dlo.AssociateWith<A>(a=>a.As.Where(a=>a.Id=33));`  
  
-   <span data-ttu-id="524ad-121">Beispiel 5: Länger Rekursive Unterabfragen</span><span class="sxs-lookup"><span data-stu-id="524ad-121">Example 5: Longer recursive subqueries</span></span>  
  
    -   `dlo.AssociateWith<A>(a=>a.Bs.Where(b=>b.Id==3));`  
  
    -   `dlo.AssociateWith<B>(b=>b.As.Where(a=>a.Id==3));`  
  
 <span data-ttu-id="524ad-122">Im folgenden sind einige allgemeine Regeln, die Ihnen helfen verstehen, was in diesen Szenarien wird.</span><span class="sxs-lookup"><span data-stu-id="524ad-122">The following are some general rules that help you understand what occurs in these scenarios.</span></span>  
  
 <span data-ttu-id="524ad-123">**LoadWith** jeder Aufruf von <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> überprüft, ob Zyklen, in das Diagramm eingeführt wurden.</span><span class="sxs-lookup"><span data-stu-id="524ad-123">**LoadWith** Each call to <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> checks whether cycles have been introduced into the graph.</span></span> <span data-ttu-id="524ad-124">Wenn Sie vorhanden sind, wie in den Beispielen 1, ist 2 und 3, eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="524ad-124">If there are, as in Examples 1, 2, and 3, an exception is thrown.</span></span>  
  
 <span data-ttu-id="524ad-125">**AssociateWith** die Engine zur Laufzeit wird nicht für die vorhandenen Unterabfrage-Klauseln der Beziehung innerhalb des Ausdrucks.</span><span class="sxs-lookup"><span data-stu-id="524ad-125">**AssociateWith** The engine at run time does not apply the existing SubQuery clauses to the relationship inside the expression.</span></span>  
  
-   <span data-ttu-id="524ad-126">In Beispiel 4 wird die `Where` -Klausel ausgeführt wird, für alle `A`, nicht nur diejenigen, die vom gefiltert Unterabfrage-Ausdruck selbst (da dies rekursive wäre)</span><span class="sxs-lookup"><span data-stu-id="524ad-126">In Example 4, the `Where` clause is executed against all `A`, not just the ones sub-filtered by the SubQuery expression itself (because that would be recursive)</span></span>  
  
-   <span data-ttu-id="524ad-127">Im Beispiel 5 die erste `Where` -Klausel wird angewendet, um alle der `B`s, obwohl der Unterabfragen vorhanden sind, auf `B`.</span><span class="sxs-lookup"><span data-stu-id="524ad-127">In Example 5, the first `Where` clause is applied to all the `B`s, even though there are subqueries on `B`.</span></span> <span data-ttu-id="524ad-128">Die zweite `Where` -Klausel wird angewendet, um alle der `A`s, obwohl es sind in Unterabfragen `A`.</span><span class="sxs-lookup"><span data-stu-id="524ad-128">The second `Where` clause is applied to all the `A`s even though there are subqueries on `A`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="524ad-129">Beim Abrufen `Customers` aus der Northwind-Beispieldatenbank, können Sie <xref:System.Data.Linq.DataLoadOptions> an, dass `Orders` ist auch abgerufen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="524ad-129">When you retrieve `Customers` from the Northwind sample database, you can use <xref:System.Data.Linq.DataLoadOptions> to specify that `Orders` is also to be retrieved.</span></span> <span data-ttu-id="524ad-130">Sie können auch angeben, welche Teilmenge der `Orders` abrufen.</span><span class="sxs-lookup"><span data-stu-id="524ad-130">You can even specify which subset of `Orders` to retrieve.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataLoadOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataLoadOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataLoadOptions();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="524ad-131">Initialisiert eine neue Instanz der <see cref="T:System.Data.Linq.DataLoadOptions" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="524ad-131">Initializes a new instance of the <see cref="T:System.Data.Linq.DataLoadOptions" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssociateWith">
      <MemberSignature Language="C#" Value="public void AssociateWith (System.Linq.Expressions.LambdaExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AssociateWith(class System.Linq.Expressions.LambdaExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataLoadOptions.AssociateWith(System.Linq.Expressions.LambdaExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AssociateWith (expression As LambdaExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AssociateWith(System::Linq::Expressions::LambdaExpression ^ expression);" />
      <MemberSignature Language="F#" Value="member this.AssociateWith : System.Linq.Expressions.LambdaExpression -&gt; unit" Usage="dataLoadOptions.AssociateWith expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.LambdaExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="524ad-132">Identifiziert die Abfrage, die für ein bestimmtes 1:n-Feld oder eine bestimmte Eigenschaft verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="524ad-132">Identifies the query to be used on a particular one-to-many field or property.</span></span> <span data-ttu-id="524ad-133">Beachten Sie Folgendes:</span><span class="sxs-lookup"><span data-stu-id="524ad-133">Note the following:</span></span> 
<span data-ttu-id="524ad-134">Wenn der Ausdruck nicht mit einem Feld oder einer Eigenschaft beginnt, die eine 1:n-Beziehung darstellen, wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="524ad-134">If the expression does not start with a field or property that represents a one-to-many relationship, an exception is thrown.</span></span>  
  
<span data-ttu-id="524ad-135">Wenn der Ausdruck ungültige Operatoren enthält, wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="524ad-135">If an operator other than a valid operator appears in the expression, an exception is thrown.</span></span> <span data-ttu-id="524ad-136">Gültige Operatoren sind:</span><span class="sxs-lookup"><span data-stu-id="524ad-136">Valid operators are as follows:</span></span> 
<span data-ttu-id="524ad-137">Wobei</span><span class="sxs-lookup"><span data-stu-id="524ad-137">Where</span></span> 
<span data-ttu-id="524ad-138">OrderBy</span><span class="sxs-lookup"><span data-stu-id="524ad-138">OrderBy</span></span> 
<span data-ttu-id="524ad-139">ThenBy</span><span class="sxs-lookup"><span data-stu-id="524ad-139">ThenBy</span></span> 
<span data-ttu-id="524ad-140">OrderByDescending</span><span class="sxs-lookup"><span data-stu-id="524ad-140">OrderByDescending</span></span> 
<span data-ttu-id="524ad-141">ThenByDescending</span><span class="sxs-lookup"><span data-stu-id="524ad-141">ThenByDescending</span></span> 
<span data-ttu-id="524ad-142">Take</span><span class="sxs-lookup"><span data-stu-id="524ad-142">Take</span></span></param>
        <summary><span data-ttu-id="524ad-143">Filtert die Objekte, die für eine bestimmte Beziehung abgerufen wurden.</span><span class="sxs-lookup"><span data-stu-id="524ad-143">Filters the objects retrieved for a particular relationship.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="524ad-144">Im folgenden Beispiel die innere Schleife durchläuft nur diejenigen `Orders` , die noch nicht heute versendet wurden.</span><span class="sxs-lookup"><span data-stu-id="524ad-144">In the following example, the inner loop iterates only over those `Orders` that have not been shipped today.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.DataLoadOptions#1](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.dataloadoptions/cs/program.cs#1)]
 [!code-vb[System.Data.Linq.DataLoadOptions#1](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.dataloadoptions/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AssociateWith&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void AssociateWith&lt;T&gt; (System.Linq.Expressions.Expression&lt;Func&lt;T,object&gt;&gt; expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AssociateWith&lt;T&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!T, object&gt;&gt; expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataLoadOptions.AssociateWith``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub AssociateWith(Of T) (expression As Expression(Of Func(Of T, Object)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; void AssociateWith(System::Linq::Expressions::Expression&lt;Func&lt;T, System::Object ^&gt; ^&gt; ^ expression);" />
      <MemberSignature Language="F#" Value="member this.AssociateWith : System.Linq.Expressions.Expression&lt;Func&lt;'T, obj&gt;&gt; -&gt; unit" Usage="dataLoadOptions.AssociateWith expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;T,System.Object&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="524ad-145">Der Typ, für den die Abfrage durchgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="524ad-145">The type that is queried against.</span></span>  
  
<span data-ttu-id="524ad-146">Wenn der Typ nicht zugeordnet ist, wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="524ad-146">If the type is unmapped, an exception is thrown.</span></span></typeparam>
        <param name="expression"><span data-ttu-id="524ad-147">Identifiziert die Abfrage, die für ein bestimmtes 1:n-Feld oder eine bestimmte Eigenschaft verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="524ad-147">Identifies the query to be used on a particular one-to-many field or property.</span></span> <span data-ttu-id="524ad-148">Beachten Sie Folgendes:</span><span class="sxs-lookup"><span data-stu-id="524ad-148">Note the following:</span></span> 
<span data-ttu-id="524ad-149">Wenn der Ausdruck nicht mit einem Feld oder einer Eigenschaft beginnt, die eine 1:n-Beziehung darstellen, wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="524ad-149">If the expression does not start with a field or property that represents a one-to-many relationship, an exception is thrown.</span></span>  
  
<span data-ttu-id="524ad-150">Wenn der Ausdruck ungültige Operatoren enthält, wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="524ad-150">If an operator other than a valid operator appears in the expression, an exception is thrown.</span></span> <span data-ttu-id="524ad-151">Gültige Operatoren sind:</span><span class="sxs-lookup"><span data-stu-id="524ad-151">Valid operators are as follows:</span></span> 
<span data-ttu-id="524ad-152">Wobei</span><span class="sxs-lookup"><span data-stu-id="524ad-152">Where</span></span> 
<span data-ttu-id="524ad-153">OrderBy</span><span class="sxs-lookup"><span data-stu-id="524ad-153">OrderBy</span></span> 
<span data-ttu-id="524ad-154">ThenBy</span><span class="sxs-lookup"><span data-stu-id="524ad-154">ThenBy</span></span> 
<span data-ttu-id="524ad-155">OrderByDescending</span><span class="sxs-lookup"><span data-stu-id="524ad-155">OrderByDescending</span></span> 
<span data-ttu-id="524ad-156">ThenByDescending</span><span class="sxs-lookup"><span data-stu-id="524ad-156">ThenByDescending</span></span> 
<span data-ttu-id="524ad-157">Take</span><span class="sxs-lookup"><span data-stu-id="524ad-157">Take</span></span></param>
        <summary><span data-ttu-id="524ad-158">Filtert Objekte, die für eine bestimmte Beziehung abgerufen wurden.</span><span class="sxs-lookup"><span data-stu-id="524ad-158">Filters objects retrieved for a particular relationship.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="524ad-159">Weitere Informationen zur Verwendung, Zyklen zu vermeiden, finden Sie unter <xref:System.Data.Linq.DataLoadOptions>.</span><span class="sxs-lookup"><span data-stu-id="524ad-159">For information about how to avoid cycles, see <xref:System.Data.Linq.DataLoadOptions>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="524ad-160">Im folgenden Beispiel die innere Schleife durchläuft nur diejenigen `Orders` , die noch nicht heute versendet wurden.</span><span class="sxs-lookup"><span data-stu-id="524ad-160">In the following example, the inner loop iterates only over those `Orders` that have not been shipped today.</span></span>  
  
 [!code-csharp[System.Data.Linq.DataLoadOptions#1](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.dataloadoptions/cs/program.cs#1)]
 [!code-vb[System.Data.Linq.DataLoadOptions#1](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.dataloadoptions/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAssociationCriteria">
      <MemberSignature Language="C#" Value="public bool GetAssociationCriteria (System.Reflection.MemberInfo memberInfo, out System.Linq.Expressions.LambdaExpression associationCriteria);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetAssociationCriteria(class System.Reflection.MemberInfo memberInfo, [out] class System.Linq.Expressions.LambdaExpression&amp; associationCriteria) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataLoadOptions.GetAssociationCriteria(System.Reflection.MemberInfo,System.Linq.Expressions.LambdaExpression@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetAssociationCriteria(System::Reflection::MemberInfo ^ memberInfo, [Runtime::InteropServices::Out] System::Linq::Expressions::LambdaExpression ^ % associationCriteria);" />
      <MemberSignature Language="F#" Value="member this.GetAssociationCriteria : System.Reflection.MemberInfo *  -&gt; bool" Usage="dataLoadOptions.GetAssociationCriteria (memberInfo, associationCriteria)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="memberInfo" Type="System.Reflection.MemberInfo" />
        <Parameter Name="associationCriteria" Type="System.Linq.Expressions.LambdaExpression" RefType="out" />
      </Parameters>
      <Docs>
        <param name="memberInfo">To be added.</param>
        <param name="associationCriteria">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsImmediate">
      <MemberSignature Language="C#" Value="public bool IsImmediate (System.Reflection.MemberInfo memberInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsImmediate(class System.Reflection.MemberInfo memberInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataLoadOptions.IsImmediate(System.Reflection.MemberInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsImmediate(System::Reflection::MemberInfo ^ memberInfo);" />
      <MemberSignature Language="F#" Value="member this.IsImmediate : System.Reflection.MemberInfo -&gt; bool" Usage="dataLoadOptions.IsImmediate memberInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="memberInfo" Type="System.Reflection.MemberInfo" />
      </Parameters>
      <Docs>
        <param name="memberInfo">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadWith">
      <MemberSignature Language="C#" Value="public void LoadWith (System.Linq.Expressions.LambdaExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadWith(class System.Linq.Expressions.LambdaExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataLoadOptions.LoadWith(System.Linq.Expressions.LambdaExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadWith (expression As LambdaExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadWith(System::Linq::Expressions::LambdaExpression ^ expression);" />
      <MemberSignature Language="F#" Value="member this.LoadWith : System.Linq.Expressions.LambdaExpression -&gt; unit" Usage="dataLoadOptions.LoadWith expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.LambdaExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="524ad-161">Ein Lambdaausdruck, der das verwandte Material identifiziert.</span><span class="sxs-lookup"><span data-stu-id="524ad-161">A lambda expression that identifies the related material.</span></span></param>
        <summary><span data-ttu-id="524ad-162">Ruft die angegebenen Daten mit Bezug auf das Hauptziel mit einem Lambda-Ausdruck ab.</span><span class="sxs-lookup"><span data-stu-id="524ad-162">Retrieves specified data related to the main target by using a lambda expression.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="524ad-163">Im folgenden Beispiel werden alle `Orders` (Bestellungen) für alle `Customers` (Kunden) in London abgerufen, wenn die Abfrage ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="524ad-163">In the following example, all the `Orders` for all the `Customers` who are located in London are retrieved when the query is executed.</span></span> <span data-ttu-id="524ad-164">Aufgrund dessen wird bei nachfolgenden Zugriffen auf die `Orders`-Eigenschaft für ein `Customer`-Objekt keine neue Datenbankabfrage ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="524ad-164">As a result, successive access to the `Orders` property on a `Customer` object does not trigger a new database query.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.DataLoadOptions#2](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.dataloadoptions/cs/program.cs#2)]
 [!code-vb[System.Data.Linq.DataLoadOptions#2](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.dataloadoptions/vb/module1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadWith&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void LoadWith&lt;T&gt; (System.Linq.Expressions.Expression&lt;Func&lt;T,object&gt;&gt; expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadWith&lt;T&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!T, object&gt;&gt; expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataLoadOptions.LoadWith``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadWith(Of T) (expression As Expression(Of Func(Of T, Object)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; void LoadWith(System::Linq::Expressions::Expression&lt;Func&lt;T, System::Object ^&gt; ^&gt; ^ expression);" />
      <MemberSignature Language="F#" Value="member this.LoadWith : System.Linq.Expressions.Expression&lt;Func&lt;'T, obj&gt;&gt; -&gt; unit" Usage="dataLoadOptions.LoadWith expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;T,System.Object&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="524ad-165">Der Typ, für den die Abfrage durchgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="524ad-165">Type that is queried against.</span></span>  
  
<span data-ttu-id="524ad-166">Wenn der Typ nicht zugeordnet ist, wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="524ad-166">If this type is unmapped, an exception is thrown.</span></span></typeparam>
        <param name="expression"><span data-ttu-id="524ad-167">Identifiziert das Feld oder die Eigenschaft, die abgerufen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="524ad-167">Identifies the field or property to be retrieved.</span></span>  
  
<span data-ttu-id="524ad-168">Wenn der Ausdruck kein Feld oder keine Eigenschaft identifiziert, die eine 1:1 oder eine 1:n-Beziehung darstellen, wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="524ad-168">If the expression does not identify a field or property that represents a one-to-one or one-to-many relationship, an exception is thrown.</span></span></param>
        <summary><span data-ttu-id="524ad-169">Gibt an, welche Unterobjekte abgerufen werden sollen, wenn eine Abfrage für ein Objekt vom Typ T gesendet wird.</span><span class="sxs-lookup"><span data-stu-id="524ad-169">Specifies which sub-objects to retrieve when a query is submitted for an object of type T.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="524ad-170">Sie können das Laden von zwei Ebenen von Beziehungen nicht angeben (z. B. `Orders.OrderDetails`).</span><span class="sxs-lookup"><span data-stu-id="524ad-170">You cannot specify the loading of two levels of relationships (for example, `Orders.OrderDetails`).</span></span> <span data-ttu-id="524ad-171">In diesen Szenarien müssen Sie zwei Separate angeben <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="524ad-171">In these scenarios you must specify two separate <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> methods.</span></span>  
  
 <span data-ttu-id="524ad-172">Zur Vermeidung von Zyklen finden Sie unter "Hinweise" im Abschnitt <xref:System.Data.Linq.DataLoadOptions>.</span><span class="sxs-lookup"><span data-stu-id="524ad-172">To avoid cycling, see Remarks section in <xref:System.Data.Linq.DataLoadOptions>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="524ad-173">Im folgenden Beispiel werden alle `Orders` (Bestellungen) für alle `Customers` (Kunden) in London abgerufen, wenn die Abfrage ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="524ad-173">In the following example, all the `Orders` for all the `Customers` who are located in London are retrieved when the query is executed.</span></span> <span data-ttu-id="524ad-174">Aufgrund dessen wird bei nachfolgenden Zugriffen auf die `Orders`-Eigenschaft für ein `Customer`-Objekt keine neue Datenbankabfrage ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="524ad-174">As a result, successive access to the `Orders` property on a `Customer` object does not trigger a new database query.</span></span>  
  
 [!code-csharp[System.Data.Linq.DataLoadOptions#2](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.dataloadoptions/cs/program.cs#2)]
 [!code-vb[System.Data.Linq.DataLoadOptions#2](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.dataloadoptions/vb/module1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>