<Type Name="DataContext" FullName="System.Data.Linq.DataContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f71f19f818c7bf30fbcfe76ff72b1a848912959d" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65001086" /></Metadata><TypeSignature Language="C#" Value="public class DataContext : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataContext extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.DataContext" />
  <TypeSignature Language="VB.NET" Value="Public Class DataContext&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataContext : IDisposable" />
  <TypeSignature Language="F#" Value="type DataContext = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="dd503-101">Stellt den Haupteinstiegspunkt für das LINQ to SQL-Framework dar.</span><span class="sxs-lookup"><span data-stu-id="dd503-101">Represents the main entry point for the LINQ to SQL framework.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd503-102">Die <xref:System.Data.Linq.DataContext> ist die Quelle aller Entitäten, die über eine datenbankverbindung zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="dd503-102">The <xref:System.Data.Linq.DataContext> is the source of all entities mapped over a database connection.</span></span> <span data-ttu-id="dd503-103">Es verfolgt Änderungen, die Sie für alle abgerufenen Entitäten vorgenommen und verwaltet einen "Identitäts-Cache", die garantiert, dass Entitäten mit mehr als einmal abgerufen durch dargestellt werden über die gleiche Objektinstanz.</span><span class="sxs-lookup"><span data-stu-id="dd503-103">It tracks changes that you made to all retrieved entities and maintains an "identity cache" that guarantees that entities retrieved more than one time are represented by using the same object instance.</span></span>  
  
 <span data-ttu-id="dd503-104">Im Allgemeinen eine <xref:System.Data.Linq.DataContext> Instanz ist so konzipiert, für eine "Arbeitseinheit" Ihrer Anwendung dieser Begriff definiert.</span><span class="sxs-lookup"><span data-stu-id="dd503-104">In general, a <xref:System.Data.Linq.DataContext> instance is designed to last for one "unit of work" however your application defines that term.</span></span> <span data-ttu-id="dd503-105">Ein <xref:System.Data.Linq.DataContext> ist nicht sehr umfangreich und ist nicht aufwendig zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="dd503-105">A <xref:System.Data.Linq.DataContext> is lightweight and is not expensive to create.</span></span> <span data-ttu-id="dd503-106">Eine typische [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] Anwendung erstellt <xref:System.Data.Linq.DataContext> Datenbank-Vorgängen für die Instanzen im Geltungsbereich der Methode oder als Mitglied der kurzlebige Klassen, die einen logischen Satz darstellen.</span><span class="sxs-lookup"><span data-stu-id="dd503-106">A typical [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] application creates <xref:System.Data.Linq.DataContext> instances at method scope or as a member of short-lived classes that represent a logical set of related database operations.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dd503-107">Initialisiert eine neue Instanz der <see cref="T:System.Data.Linq.DataContext" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="dd503-107">Initializes a new instance of the <see cref="T:System.Data.Linq.DataContext" /> class.</span></span> <span data-ttu-id="dd503-108">Die Verbindungszeichenfolge, die Sie verwenden, kann eine ADO.NET-Verbindungszeichenfolge sein.</span><span class="sxs-lookup"><span data-stu-id="dd503-108">The connection string you use can be an ADO.NET connection string.</span></span> <span data-ttu-id="dd503-109">Sie können auch einen Dateinamen in eine SQL Server Express oder SQL Server Compact-Datei angeben.</span><span class="sxs-lookup"><span data-stu-id="dd503-109">You can also specify a filename to a SQL Server Express or SQL Server Compact file.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContext (System.Data.IDbConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.IDbConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.#ctor(System.Data.IDbConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connection As IDbConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContext(System::Data::IDbConnection ^ connection);" />
      <MemberSignature Language="F#" Value="new System.Data.Linq.DataContext : System.Data.IDbConnection -&gt; System.Data.Linq.DataContext" Usage="new System.Data.Linq.DataContext connection" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.IDbConnection" />
      </Parameters>
      <Docs>
        <param name="connection"><span data-ttu-id="dd503-110">Die Verbindung ein, die die [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span><span class="sxs-lookup"><span data-stu-id="dd503-110">The connection used by the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span></param>
        <summary><span data-ttu-id="dd503-111">Initialisiert eine neue Instanz der dem <see cref="T:System.Data.Linq.DataContext" /> -Klasse durch Verweisen auf die Verbindung ein, die die [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span><span class="sxs-lookup"><span data-stu-id="dd503-111">Initializes a new instance of the <see cref="T:System.Data.Linq.DataContext" /> class by referencing the connection used by the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd503-112">Ein <xref:System.Data.Linq.DataContext> öffnet und schließt eine datenbankverbindung aus, nach Bedarf, wenn Sie eine geschlossene Verbindung oder eine Verbindungszeichenfolge angeben.</span><span class="sxs-lookup"><span data-stu-id="dd503-112">A <xref:System.Data.Linq.DataContext> opens and closes a database connection as needed if you provide a closed connection or a connection string.</span></span> <span data-ttu-id="dd503-113">Im Allgemeinen sollten nie muss `Dispose` auf eine <xref:System.Data.Linq.DataContext>.</span><span class="sxs-lookup"><span data-stu-id="dd503-113">In general, you should never have to call `Dispose` on a <xref:System.Data.Linq.DataContext>.</span></span> <span data-ttu-id="dd503-114">Wenn Sie angeben, dass eine offene Verbindung, die <xref:System.Data.Linq.DataContext> wird nicht geschlossen.</span><span class="sxs-lookup"><span data-stu-id="dd503-114">If you provide an open connection, the <xref:System.Data.Linq.DataContext> will not close it.</span></span> <span data-ttu-id="dd503-115">Aus diesem Grund nicht instanziiert werden eine <xref:System.Data.Linq.DataContext> mit einer geöffneten Verbindung, wenn Sie einen guten Grund dazu haben.</span><span class="sxs-lookup"><span data-stu-id="dd503-115">Therefore, do not instantiate a <xref:System.Data.Linq.DataContext> with an open connection unless you have a good reason to do this.</span></span> <span data-ttu-id="dd503-116">In einem <xref:System.Transactions> Transaktion eine <xref:System.Data.Linq.DataContext> nicht öffnen oder schließen Sie die Verbindung zur Höherstufung zu vermeiden.</span><span class="sxs-lookup"><span data-stu-id="dd503-116">In a <xref:System.Transactions> transaction, a <xref:System.Data.Linq.DataContext> will not open or close a connection to avoid promotion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContext (System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.IDbConnection connection, class System.Data.Linq.Mapping.MappingSource mapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.#ctor(System.Data.IDbConnection,System.Data.Linq.Mapping.MappingSource)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connection As IDbConnection, mapping As MappingSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContext(System::Data::IDbConnection ^ connection, System::Data::Linq::Mapping::MappingSource ^ mapping);" />
      <MemberSignature Language="F#" Value="new System.Data.Linq.DataContext : System.Data.IDbConnection * System.Data.Linq.Mapping.MappingSource -&gt; System.Data.Linq.DataContext" Usage="new System.Data.Linq.DataContext (connection, mapping)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.IDbConnection" />
        <Parameter Name="mapping" Type="System.Data.Linq.Mapping.MappingSource" />
      </Parameters>
      <Docs>
        <param name="connection"><span data-ttu-id="dd503-117">Die von .NET Framework verwendete Verbindung.</span><span class="sxs-lookup"><span data-stu-id="dd503-117">The connection used by the .NET Framework.</span></span></param>
        <param name="mapping"><span data-ttu-id="dd503-118">Eine Quelle für die Zuordnung.</span><span class="sxs-lookup"><span data-stu-id="dd503-118">A source for mapping.</span></span></param>
        <summary><span data-ttu-id="dd503-119">Initialisiert eine neue Instanz der dem <see cref="T:System.Data.Linq.DataContext" /> -Klasse durch Verweisen auf eine Verbindung und eine Zuordnungsquelle.</span><span class="sxs-lookup"><span data-stu-id="dd503-119">Initializes a new instance of the <see cref="T:System.Data.Linq.DataContext" /> class by referencing a connection and a mapping source.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContext (string fileOrServerOrConnection, System.Data.Linq.Mapping.MappingSource mapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileOrServerOrConnection, class System.Data.Linq.Mapping.MappingSource mapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.#ctor(System.String,System.Data.Linq.Mapping.MappingSource)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileOrServerOrConnection As String, mapping As MappingSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContext(System::String ^ fileOrServerOrConnection, System::Data::Linq::Mapping::MappingSource ^ mapping);" />
      <MemberSignature Language="F#" Value="new System.Data.Linq.DataContext : string * System.Data.Linq.Mapping.MappingSource -&gt; System.Data.Linq.DataContext" Usage="new System.Data.Linq.DataContext (fileOrServerOrConnection, mapping)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileOrServerOrConnection" Type="System.String" />
        <Parameter Name="mapping" Type="System.Data.Linq.Mapping.MappingSource" />
      </Parameters>
      <Docs>
        <param name="fileOrServerOrConnection"><span data-ttu-id="dd503-120">Dieses Argument kann eine der folgenden sein:</span><span class="sxs-lookup"><span data-stu-id="dd503-120">This argument can be any one of the following:</span></span> 
<span data-ttu-id="dd503-121">Der Name einer Datei, in dem eine SQL Server Express-Datenbank befindet.</span><span class="sxs-lookup"><span data-stu-id="dd503-121">The name of a file where a SQL Server Express database resides.</span></span>  
  
<span data-ttu-id="dd503-122">Der Name eines Servers, in denen eine Datenbank vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="dd503-122">The name of a server where a database is present.</span></span> <span data-ttu-id="dd503-123">In diesem Fall verwendet der Anbieter die Standarddatenbank für einen Benutzer.</span><span class="sxs-lookup"><span data-stu-id="dd503-123">In this case the provider uses the default database for a user.</span></span>  
  
<span data-ttu-id="dd503-124">Eine vollständige Verbindungszeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="dd503-124">A complete connection string.</span></span> [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] <span data-ttu-id="dd503-125">übergibt die Zeichenfolge an dem Anbieter ohne Änderung.</span><span class="sxs-lookup"><span data-stu-id="dd503-125">just passes the string to the provider without modification.</span></span></param>
        <param name="mapping"><span data-ttu-id="dd503-126">Eine Quelle für die Zuordnung.</span><span class="sxs-lookup"><span data-stu-id="dd503-126">A source for mapping.</span></span></param>
        <summary><span data-ttu-id="dd503-127">Initialisiert eine neue Instanz der dem <see cref="T:System.Data.Linq.DataContext" /> -Klasse durch Verweisen auf eine Dateiquelle und eine Zuordnungsquelle.</span><span class="sxs-lookup"><span data-stu-id="dd503-127">Initializes a new instance of the <see cref="T:System.Data.Linq.DataContext" /> class by referencing a file source and a mapping source.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContext (string fileOrServerOrConnection);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileOrServerOrConnection) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileOrServerOrConnection As String)" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContext(System::String ^ fileOrServerOrConnection);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C#" Value="public DataContext (string connectionString);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContext(System::String ^ connectionString);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.#ctor(System.String)" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="new System.Data.Linq.DataContext : string -&gt; System.Data.Linq.DataContext" Usage="new System.Data.Linq.DataContext connectionString" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.#ctor(System.String)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="new System.Data.Linq.DataContext : string -&gt; System.Data.Linq.DataContext" Usage="new System.Data.Linq.DataContext connectionString" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileOrServerOrConnection" Type="System.String" Index="0" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="connectionString" Type="System.String" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="fileOrServerOrConnection"><span data-ttu-id="dd503-128">Dieses Argument kann eine der folgenden sein: Der Name einer Datei, in dem eine SQL Server Express-Datenbank befindet.</span><span class="sxs-lookup"><span data-stu-id="dd503-128">This argument can be any one of the following: The name of a file where a SQL Server Express database resides.</span></span>

<span data-ttu-id="dd503-129">Der Name eines Servers, in denen eine Datenbank vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="dd503-129">The name of a server where a database is present.</span></span> <span data-ttu-id="dd503-130">In diesem Fall verwendet der Anbieter die Standarddatenbank für einen Benutzer.</span><span class="sxs-lookup"><span data-stu-id="dd503-130">In this case the provider uses the default database for a user.</span></span>  
  
<span data-ttu-id="dd503-131">Eine vollständige Verbindungszeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="dd503-131">A complete connection string.</span></span> <span data-ttu-id="dd503-132">LINQ to SQL übergibt die Zeichenfolge unverändert an den Anbieter.</span><span class="sxs-lookup"><span data-stu-id="dd503-132">LINQ to SQL just passes the string to the provider without modification.</span></span></param>
        <param name="connectionString"><span data-ttu-id="dd503-133">Dieses Argument kann eine der folgenden sein: Der Name einer Datei, in dem eine SQL Server Express-Datenbank befindet.</span><span class="sxs-lookup"><span data-stu-id="dd503-133">This argument can be any one of the following: The name of a file where a SQL Server Express database resides.</span></span>

<span data-ttu-id="dd503-134">Der Name eines Servers, in denen eine Datenbank vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="dd503-134">The name of a server where a database is present.</span></span> <span data-ttu-id="dd503-135">In diesem Fall verwendet der Anbieter die Standarddatenbank für einen Benutzer.</span><span class="sxs-lookup"><span data-stu-id="dd503-135">In this case the provider uses the default database for a user.</span></span>  
  
<span data-ttu-id="dd503-136">Eine vollständige Verbindungszeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="dd503-136">A complete connection string.</span></span> <span data-ttu-id="dd503-137">LINQ to SQL übergibt die Zeichenfolge unverändert an den Anbieter.</span><span class="sxs-lookup"><span data-stu-id="dd503-137">LINQ to SQL just passes the string to the provider without modification.</span></span></param>
        <summary><span data-ttu-id="dd503-138">Initialisiert eine neue Instanz der dem <see cref="T:System.Data.Linq.DataContext" /> -Klasse durch Verweisen auf eine Dateiquelle.</span><span class="sxs-lookup"><span data-stu-id="dd503-138">Initializes a new instance of the <see cref="T:System.Data.Linq.DataContext" /> class by referencing a file source.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeConflicts">
      <MemberSignature Language="C#" Value="public System.Data.Linq.ChangeConflictCollection ChangeConflicts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.ChangeConflictCollection ChangeConflicts" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.ChangeConflicts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChangeConflicts As ChangeConflictCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Linq::ChangeConflictCollection ^ ChangeConflicts { System::Data::Linq::ChangeConflictCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChangeConflicts : System.Data.Linq.ChangeConflictCollection" Usage="System.Data.Linq.DataContext.ChangeConflicts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.ChangeConflictCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dd503-139">Ruft eine Auflistung von Objekten, die Parallelitätskonflikte verursacht haben beim <see cref="M:System.Data.Linq.DataContext.SubmitChanges" /> aufgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="dd503-139">Gets a collection of objects that caused concurrency conflicts when <see cref="M:System.Data.Linq.DataContext.SubmitChanges" /> was called.</span></span></summary>
        <value><span data-ttu-id="dd503-140">Eine Auflistung von Objekten, die Parallelitätskonflikte verursacht haben.</span><span class="sxs-lookup"><span data-stu-id="dd503-140">A collection of objects that caused concurrency conflicts.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd503-141">Das folgende Beispiel zeigt, wie die Auflistung durchlaufen werden kann, zum Abrufen von Informationen zu Konflikten.</span><span class="sxs-lookup"><span data-stu-id="dd503-141">The following example shows how the collection can be iterated over to retrieve conflict information.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.ObjectChangeConflict#1](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.objectchangeconflict/cs/program.cs#1)]
 [!code-vb[System.Data.Linq.ObjectChangeConflict#1](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.objectchangeconflict/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandTimeout">
      <MemberSignature Language="C#" Value="public int CommandTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CommandTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.CommandTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CommandTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CommandTimeout : int with get, set" Usage="System.Data.Linq.DataContext.CommandTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dd503-142">Ruft einen Wert ab (oder legt diesen fest), der das Zeitlimit (in Sekunden) für Abfragen erhöht, die andernfalls während der Standardzeitspanne zu einem Timeout führen würden.</span><span class="sxs-lookup"><span data-stu-id="dd503-142">Gets or sets a value that increases the time-out period (in seconds) for queries that would otherwise time out during the default time-out period.</span></span></summary>
        <value><span data-ttu-id="dd503-143">Eine ganze Zahl, die der Timeoutzeitraum (in Sekunden) für Abfragen erhöht wird, die andernfalls Timeout während der Standardtimeoutspanne zu einem führen würden.</span><span class="sxs-lookup"><span data-stu-id="dd503-143">An integer value that increases the time-out period (in seconds) for queries that would otherwise time out during the default time-out period.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd503-144">Diese Eigenschaft ruft ab oder legt diesen fest der Befehls-Timeoutwert (in Sekunden) verwendet, um generierte Befehle auszuführen (`IDbCommands`).</span><span class="sxs-lookup"><span data-stu-id="dd503-144">This property gets or sets the command time-out (in seconds) used to execute generated commands (`IDbCommands`).</span></span> <span data-ttu-id="dd503-145">Weitere Informationen finden Sie unter <xref:System.Data.IDbCommand.CommandTimeout%2A>.</span><span class="sxs-lookup"><span data-stu-id="dd503-145">For more information, see <xref:System.Data.IDbCommand.CommandTimeout%2A>.</span></span>  
  
 <span data-ttu-id="dd503-146">Wenn diese Eigenschaft nicht festgelegt ist, den Standardwert von <xref:System.Data.IDbCommand.CommandTimeout%2A> wird verwendet, für die abfrageausführung-Befehl.</span><span class="sxs-lookup"><span data-stu-id="dd503-146">When this property is not set, the default value of <xref:System.Data.IDbCommand.CommandTimeout%2A> is used for query command execution.</span></span> <span data-ttu-id="dd503-147">Dieser Standardwert wird vom Speicheranbieter festgelegt.</span><span class="sxs-lookup"><span data-stu-id="dd503-147">This default value is set by the storage provider.</span></span> <span data-ttu-id="dd503-148">Beachten Sie, dass einige Anbieter möglicherweise Ausnahmen auslösen, wenn dieser Wert auf einen Wert ungleich NULL festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="dd503-148">Note that some providers may throw exceptions if this value is set to a non-zero value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbConnection Connection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.Connection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Connection As DbConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbConnection ^ Connection { System::Data::Common::DbConnection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Connection : System.Data.Common.DbConnection" Usage="System.Data.Linq.DataContext.Connection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dd503-149">Ruft die vom Framework verwendete Verbindung ab.</span><span class="sxs-lookup"><span data-stu-id="dd503-149">Gets the connection used by the framework.</span></span></summary>
        <value><span data-ttu-id="dd503-150">Die vom Framework verwendete Verbindung.</span><span class="sxs-lookup"><span data-stu-id="dd503-150">The connection used by the framework.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd503-151">Sie können diese Eigenschaft verwenden, für die Zusammenarbeit mit relationalen ADO.NET-Code.</span><span class="sxs-lookup"><span data-stu-id="dd503-151">You can use this property to interoperate with relational ADO.NET code.</span></span>  
  
 <span data-ttu-id="dd503-152">Die zurückgegebene Verbindung wird geschlossen werden, es sei denn, sie explizit vom Benutzer geöffnet wurde.</span><span class="sxs-lookup"><span data-stu-id="dd503-152">The returned connection will be closed unless it has been explicitly opened by the user.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDatabase">
      <MemberSignature Language="C#" Value="public void CreateDatabase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CreateDatabase() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.CreateDatabase" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateDatabase ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateDatabase();" />
      <MemberSignature Language="F#" Value="member this.CreateDatabase : unit -&gt; unit" Usage="dataContext.CreateDatabase " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dd503-153">Erstellt eine Datenbank auf dem Server.</span><span class="sxs-lookup"><span data-stu-id="dd503-153">Creates a database on the server.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd503-154">Der Name der Datenbank wird abgeleitet, mithilfe des folgenden Algorithmus:</span><span class="sxs-lookup"><span data-stu-id="dd503-154">The name of the database is derived by using the following algorithm:</span></span>  
  
1. <span data-ttu-id="dd503-155">Wenn eine Datenbank in der Verbindungszeichenfolge identifiziert wird, wird der Name verwendet.</span><span class="sxs-lookup"><span data-stu-id="dd503-155">If a database is identified in the connection string, its name is used.</span></span>  
1. <span data-ttu-id="dd503-156">Wenn eine <xref:System.Data.Linq.Mapping.DatabaseAttribute> -Attribut vorhanden ist, dessen <xref:System.Data.Linq.Mapping.DatabaseAttribute.Name%2A> Eigenschaft wird als Name der Datenbank verwendet.</span><span class="sxs-lookup"><span data-stu-id="dd503-156">If a <xref:System.Data.Linq.Mapping.DatabaseAttribute> attribute is present, its <xref:System.Data.Linq.Mapping.DatabaseAttribute.Name%2A> property is used as the name of the database.</span></span>  
1. <span data-ttu-id="dd503-157">Es ist keine Datenbank-Tag in die Verbindungszeichenfolge und einen stark typisierten <xref:System.Data.Linq.DataContext> verwendet wird, eine Datenbank mit dem gleichen Namen wie die <xref:System.Data.Linq.DataContext> erbende Klasse erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="dd503-157">If there is no database tag in the connection string and a strongly typed <xref:System.Data.Linq.DataContext> is used, a database that has the same name as the <xref:System.Data.Linq.DataContext> inheriting class is created.</span></span>  
1. <span data-ttu-id="dd503-158">Wenn eine schwach typisierte <xref:System.Data.Linq.DataContext> wird verwendet, wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="dd503-158">If a weakly typed <xref:System.Data.Linq.DataContext> is used, an exception is thrown.</span></span>  
1. <span data-ttu-id="dd503-159">Wenn die <xref:System.Data.Linq.DataContext> wurde mit einem Dateinamen, wird die Datenbank entspricht dem Dateinamen erstellt.</span><span class="sxs-lookup"><span data-stu-id="dd503-159">If the <xref:System.Data.Linq.DataContext> has been created by using a file name, the database corresponding to that file name is created.</span></span>  
     
  
## Examples  
 <span data-ttu-id="dd503-160">Der folgende Code zeigt, wie eine temporäre Datenbank einrichten, und entfernen sie Sie dann.</span><span class="sxs-lookup"><span data-stu-id="dd503-160">The following code shows how to set up a temporary database and then remove it.</span></span>  
  
 [!code-csharp[System.Data.Linq.DataContext#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.DataContext/cs/Program.cs#1)]
 [!code-vb[System.Data.Linq.DataContext#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.DataContext/vb/Module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/fb7f23c4-4572-4c38-9898-a287807d070c"><span data-ttu-id="dd503-161">Vorgehensweise: Dynamisches Erstellen einer Datenbank (LINQ to SQL)</span><span class="sxs-lookup"><span data-stu-id="dd503-161">How to: Dynamically Create a Database (LINQ to SQL)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/4ed76327-54a7-414b-82a9-7579bfcec04b"><span data-ttu-id="dd503-162">SQL-CLR-Typenzuordnung (LINQ to SQL)</span><span class="sxs-lookup"><span data-stu-id="dd503-162">SQL-CLR Type Mapping (LINQ to SQL)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateMethodCallQuery&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="protected internal System.Linq.IQueryable&lt;TResult&gt; CreateMethodCallQuery&lt;TResult&gt; (object instance, System.Reflection.MethodInfo methodInfo, params object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance class System.Linq.IQueryable`1&lt;!!TResult&gt; CreateMethodCallQuery&lt;TResult&gt;(object instance, class System.Reflection.MethodInfo methodInfo, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.CreateMethodCallQuery``1(System.Object,System.Reflection.MethodInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Linq::IQueryable&lt;TResult&gt; ^ CreateMethodCallQuery(System::Object ^ instance, System::Reflection::MethodInfo ^ methodInfo, ... cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.CreateMethodCallQuery : obj * System.Reflection.MethodInfo * obj[] -&gt; System.Linq.IQueryable&lt;'Result&gt;" Usage="dataContext.CreateMethodCallQuery (instance, methodInfo, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="methodInfo" Type="System.Reflection.MethodInfo" />
        <Parameter Name="parameters" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="dd503-163">Der Typ der Elemente in der zurückgegebenen Auflistung.</span><span class="sxs-lookup"><span data-stu-id="dd503-163">The type of the elements in the returned collection.</span></span></typeparam>
        <param name="instance"><span data-ttu-id="dd503-164">Die Instanz des Methodenaufrufs (das aktuelle Objekt).</span><span class="sxs-lookup"><span data-stu-id="dd503-164">The instance of the method invocation (the current object).</span></span></param>
        <param name="methodInfo"><span data-ttu-id="dd503-165">Die <see cref="T:System.Reflection.MethodInfo" />, die die .NET-Methode identifiziert, die einer Datenbankmethode entspricht.</span><span class="sxs-lookup"><span data-stu-id="dd503-165">The <see cref="T:System.Reflection.MethodInfo" /> that identifies the .NET method that corresponds to a database method.</span></span></param>
        <param name="parameters"><span data-ttu-id="dd503-166">Das Array von Parametern an den Befehl übergeben werden.</span><span class="sxs-lookup"><span data-stu-id="dd503-166">The array of parameters to be passed to the command.</span></span></param>
        <summary><span data-ttu-id="dd503-167">Führt die der angegebenen .NET-Methode zugeordnete Tabellenwert-Datenbankfunktion aus.</span><span class="sxs-lookup"><span data-stu-id="dd503-167">Executes the table-valued database function associated with the specified .NET method.</span></span></summary>
        <returns><span data-ttu-id="dd503-168">Eine Auflistung resultierender Werte, die von der Datenbankabfrage zurückgegeben werden soll.</span><span class="sxs-lookup"><span data-stu-id="dd503-168">A collection of resultant values returned by the database query.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd503-169">Die <xref:System.Data.Linq.DataContext.CreateMethodCallQuery%2A> Methode im automatisch generierten Code verwendet wird, und fungiert als Proxy für Datenbankfunktionen.</span><span class="sxs-lookup"><span data-stu-id="dd503-169">The <xref:System.Data.Linq.DataContext.CreateMethodCallQuery%2A> method is used in automatically generated code and acts as a proxy to database functions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DatabaseExists">
      <MemberSignature Language="C#" Value="public bool DatabaseExists ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool DatabaseExists() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.DatabaseExists" />
      <MemberSignature Language="VB.NET" Value="Public Function DatabaseExists () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool DatabaseExists();" />
      <MemberSignature Language="F#" Value="member this.DatabaseExists : unit -&gt; bool" Usage="dataContext.DatabaseExists " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dd503-170">Bestimmt, ob die zugeordnete Datenbank geöffnet werden kann.</span><span class="sxs-lookup"><span data-stu-id="dd503-170">Determines whether the associated database can be opened.</span></span></summary>
        <returns><span data-ttu-id="dd503-171"><see langword="true" /> Wenn die angegebene Datenbank geöffnet werden kann. andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dd503-171"><see langword="true" /> if the specified database can be opened; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd503-172">Diese Methode verwendet die Verbindung in der <xref:System.Data.Linq.DataContext.Connection%2A> Eigenschaft, um zu versuchen, öffnen Sie die zugeordnete Datenbank.</span><span class="sxs-lookup"><span data-stu-id="dd503-172">This method uses the connection in the <xref:System.Data.Linq.DataContext.Connection%2A> property to attempt to open the associated database.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dd503-173">Im folgenden Beispiel wird diese Methode, um festzustellen, ob eine Datenbank bereits vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="dd503-173">The following example uses this method to determine whether a database already exists.</span></span>  
  
 [!code-csharp[System.Data.Linq.DataContext#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.DataContext/cs/Program.cs#1)]
 [!code-vb[System.Data.Linq.DataContext#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.DataContext/vb/Module1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeferredLoadingEnabled">
      <MemberSignature Language="C#" Value="public bool DeferredLoadingEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DeferredLoadingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.DeferredLoadingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property DeferredLoadingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DeferredLoadingEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DeferredLoadingEnabled : bool with get, set" Usage="System.Data.Linq.DataContext.DeferredLoadingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dd503-174">Übernimmt oder bestimmt einen Wert, der angibt, ob 1- oder 1: n Beziehungen verzögertes Laden.</span><span class="sxs-lookup"><span data-stu-id="dd503-174">Gets or sets a value that indicates whether to delay-load one-to-many or one-to-one relationships.</span></span></summary>
        <value><span data-ttu-id="dd503-175"><see langword="true" /> Wenn das verzögerte Laden aktiviert ist. andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dd503-175"><see langword="true" /> if deferred loading is enabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd503-176">Wenn greift der Code eines dieser Beziehungen null wird zurückgegeben, wenn die Beziehung 1: 1 ist, und eine leere Auflistung zurückgegeben wird, wenn es sich um 1: n handelt.</span><span class="sxs-lookup"><span data-stu-id="dd503-176">When the code accesses one of these relationships, null is returned if the relationship is one-to-one, and an empty collection is returned if it is one-to-many.</span></span> <span data-ttu-id="dd503-177">Die Beziehungen können immer noch gefüllt werden, durch Festlegen der <xref:System.Data.Linq.DataContext.LoadOptions%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="dd503-177">The relationships can still be filled by setting the <xref:System.Data.Linq.DataContext.LoadOptions%2A> property.</span></span>  
  
 <span data-ttu-id="dd503-178">Das Hauptszenario für diese Eigenschaft ist, können Sie einen Teil des Objektmodells zu extrahieren, und senden sie Sie (z. B. an einen Webdienst).</span><span class="sxs-lookup"><span data-stu-id="dd503-178">The main scenario for this property is to enable you to extract a piece of the object model and send it out (for example, to a Web service).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dd503-179">Wenn diese Eigenschaft, um festgelegt wird `false` nachdem eine Abfrage ausgeführt wurde, wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="dd503-179">If this property is set to `false` after a query has been executed, an exception is thrown.</span></span> <span data-ttu-id="dd503-180">Finden Sie unter den **gültige Modi** Informationen weiter unten im Abschnitt.</span><span class="sxs-lookup"><span data-stu-id="dd503-180">See the **Valid Modes** section below for more information.</span></span>  
  
## <a name="valid-modes"></a><span data-ttu-id="dd503-181">Gültige Modi</span><span class="sxs-lookup"><span data-stu-id="dd503-181">Valid modes</span></span>  
 <span data-ttu-id="dd503-182">Verzögertes Laden ist die Objekt-nachverfolgung erforderlich.</span><span class="sxs-lookup"><span data-stu-id="dd503-182">Deferred loading requires object tracking.</span></span> <span data-ttu-id="dd503-183">Die folgenden drei Modi sind gültig:</span><span class="sxs-lookup"><span data-stu-id="dd503-183">Only the following three modes are valid:</span></span>  
  
-   <span data-ttu-id="dd503-184"><xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> = `false`.</span><span class="sxs-lookup"><span data-stu-id="dd503-184"><xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> = `false`.</span></span> <span data-ttu-id="dd503-185"><xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A> wird ignoriert und abgeleitet `false`.</span><span class="sxs-lookup"><span data-stu-id="dd503-185"><xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A> is ignored and inferred to be `false`.</span></span> <span data-ttu-id="dd503-186">Dieses Verhalten entspricht ein schreibgeschütztes <xref:System.Data.Linq.DataContext>.</span><span class="sxs-lookup"><span data-stu-id="dd503-186">This behavior corresponds to a read-only <xref:System.Data.Linq.DataContext>.</span></span>  
  
-   <span data-ttu-id="dd503-187"><xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> = `true`.</span><span class="sxs-lookup"><span data-stu-id="dd503-187"><xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> = `true`.</span></span> <span data-ttu-id="dd503-188"><xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A> = `false`.</span><span class="sxs-lookup"><span data-stu-id="dd503-188"><xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A> = `false`.</span></span> <span data-ttu-id="dd503-189">Dies entspricht einer <xref:System.Data.Linq.DataContext> , mit der Benutzer beim Laden eines Objektdiagramms mithilfe von <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> Direktiven, sondern ermöglicht nicht das verzögerte Laden.</span><span class="sxs-lookup"><span data-stu-id="dd503-189">This situation corresponds to a <xref:System.Data.Linq.DataContext> that allows users to load an object graph by using <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> directives, but it does not enable deferred loading.</span></span>  
  
-   <span data-ttu-id="dd503-190">Beide werden festgelegt, um `true`.</span><span class="sxs-lookup"><span data-stu-id="dd503-190">Both are set to `true`.</span></span> <span data-ttu-id="dd503-191">Dies ist die Standardeinstellung.</span><span class="sxs-lookup"><span data-stu-id="dd503-191">This is the default.</span></span>  
  
 <span data-ttu-id="dd503-192">Die Flags können nicht geändert werden, nachdem eine Abfrage ausgeführt wurde.</span><span class="sxs-lookup"><span data-stu-id="dd503-192">The flags may not be changed after a query has been executed.</span></span> <span data-ttu-id="dd503-193">Alle Änderungen nach der Ausführung der ersten Abfrage, die mithilfe <xref:System.Data.Linq.DataContext> löst eine Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="dd503-193">Any change after the execution of the first query that uses that <xref:System.Data.Linq.DataContext> throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteDatabase">
      <MemberSignature Language="C#" Value="public void DeleteDatabase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteDatabase() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.DeleteDatabase" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteDatabase ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteDatabase();" />
      <MemberSignature Language="F#" Value="member this.DeleteDatabase : unit -&gt; unit" Usage="dataContext.DeleteDatabase " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dd503-194">Löscht die zugeordnete Datenbank.</span><span class="sxs-lookup"><span data-stu-id="dd503-194">Deletes the associated database.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd503-195">Diese Methode verwendet die Verbindung in der <xref:System.Data.Linq.DataContext.Connection%2A> Eigenschaft zum Identifizieren der Datenbank gelöscht werden soll.</span><span class="sxs-lookup"><span data-stu-id="dd503-195">This method uses the connection in the <xref:System.Data.Linq.DataContext.Connection%2A> property to identify the database to be deleted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dd503-196">Das folgende Beispiel zeigt, wie Sie eine Datenbank zu löschen, die vorübergehend erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="dd503-196">The following example shows how to delete a database that has been temporarily created.</span></span>  
  
 [!code-csharp[System.Data.Linq.DataContext#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.DataContext/cs/Program.cs#1)]
 [!code-vb[System.Data.Linq.DataContext#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.DataContext/vb/Module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Data.Linq.DataContext.Dispose" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dd503-197">Gibt die von der <see cref="T:System.Data.Linq.DataContext" />-Klasse verwendeten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="dd503-197">Releases the resources used by the <see cref="T:System.Data.Linq.DataContext" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="dataContext.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dd503-198">Gibt alle von der aktuellen Instanz der <see cref="T:System.Data.Linq.DataContext" />-Klasse verwendeten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="dd503-198">Releases all resources used by the current instance of the <see cref="T:System.Data.Linq.DataContext" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="dataContext.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="dd503-199"><see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</span><span class="sxs-lookup"><span data-stu-id="dd503-199"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="dd503-200">Nicht verwalteten Ressourcen ein, die die <see cref="T:System.Data.Linq.DataContext" /> -Klasse und gibt optional die verwalteten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="dd503-200">Releases the unmanaged resources used by the <see cref="T:System.Data.Linq.DataContext" /> class and optionally releases the managed resource.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteCommand">
      <MemberSignature Language="C#" Value="public int ExecuteCommand (string command, params object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 ExecuteCommand(string command, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.ExecuteCommand(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteCommand (command As String, ParamArray parameters As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ExecuteCommand(System::String ^ command, ... cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.ExecuteCommand : string * obj[] -&gt; int" Usage="dataContext.ExecuteCommand (command, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="command"><span data-ttu-id="dd503-201">Der auszuführende SQL-Befehl.</span><span class="sxs-lookup"><span data-stu-id="dd503-201">The SQL command to be executed.</span></span></param>
        <param name="parameters"><span data-ttu-id="dd503-202">Das Array von Parametern an den Befehl übergeben werden.</span><span class="sxs-lookup"><span data-stu-id="dd503-202">The array of parameters to be passed to the command.</span></span> <span data-ttu-id="dd503-203">Beachten Sie Folgendes ein:</span><span class="sxs-lookup"><span data-stu-id="dd503-203">Note the following behavior:</span></span> 
<span data-ttu-id="dd503-204">Wenn die Anzahl der Objekte im Array kleiner als die höchste in der Befehlszeichenfolge identifizierte Anzahl ist, wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="dd503-204">If the number of objects in the array is less than the highest number identified in the command string, an exception is thrown.</span></span>  
  
<span data-ttu-id="dd503-205">Wenn das Array Objekte, die in der Befehlszeichenfolge nicht verwiesen wird enthält, wird keine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="dd503-205">If the array contains objects that are not referenced in the command string, no exception is thrown.</span></span>  
  
<span data-ttu-id="dd503-206">Wenn einer der Parameter null ist, wird eine Konvertierung in <see langword="DBNull.Value" />.</span><span class="sxs-lookup"><span data-stu-id="dd503-206">If any one of the parameters is null, it is converted to <see langword="DBNull.Value" />.</span></span></param>
        <summary><span data-ttu-id="dd503-207">Führt SQL-Befehle direkt in der Datenbank an.</span><span class="sxs-lookup"><span data-stu-id="dd503-207">Executes SQL commands directly on the database.</span></span></summary>
        <returns><span data-ttu-id="dd503-208">Die Anzahl der vom ausgeführten Befehl geänderten Zeilen.</span><span class="sxs-lookup"><span data-stu-id="dd503-208">The number of rows modified by the executed command.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd503-209">Diese Methode ist ein Pass-Through-Mechanismus für Fälle, in denen [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] kein entsprechendes für ein bestimmtes Szenario bereitgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="dd503-209">This method is a pass-through mechanism for cases where [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] does not adequately provide for a particular scenario.</span></span>  
  
 <span data-ttu-id="dd503-210">Die Syntax des Befehls ist fast identisch mit der Syntax zum Erstellen einer ADO.NET `DataCommand`.</span><span class="sxs-lookup"><span data-stu-id="dd503-210">The syntax for the command is almost the same as the syntax used to create an ADO.NET `DataCommand`.</span></span> <span data-ttu-id="dd503-211">Der einzige Unterschied besteht darin, wie die Parameter angegeben werden.</span><span class="sxs-lookup"><span data-stu-id="dd503-211">The only difference is in how the parameters are specified.</span></span> <span data-ttu-id="dd503-212">Insbesondere in geschweiften Klammern ({...}) Geben Sie Parameter, und sie auflisten beginnend bei 0.</span><span class="sxs-lookup"><span data-stu-id="dd503-212">Specifically, you specify parameters by enclosing them in braces ({…}) and enumerate them starting from 0.</span></span> <span data-ttu-id="dd503-213">Der Parameter ist für das gleichermaßen nummerierten Objekt im Parameterarray.</span><span class="sxs-lookup"><span data-stu-id="dd503-213">The parameter is associated with the equally numbered object in the parameters array.</span></span>  
  
 <span data-ttu-id="dd503-214">`ExecuteQuery` und `ExecuteCommand` können Sie eine Variable Anzahl von Argumenten für Vorlagenparameter angeben.</span><span class="sxs-lookup"><span data-stu-id="dd503-214">`ExecuteQuery` and `ExecuteCommand` allow you to specify a variable number of arguments for parameter substitution.</span></span> <span data-ttu-id="dd503-215">Sie können z. B. die Parameter angeben, beim Aufrufen der ExecuteQuery\<TResult >:</span><span class="sxs-lookup"><span data-stu-id="dd503-215">For example, you can specify the parameters when invoking ExecuteQuery\<TResult>:</span></span>  
  
```  
db.ExecuteQuery<Customer>("select * from dbo.Customers where City = {0}", "London");  
```  
  
 <span data-ttu-id="dd503-216">Und ein weiteres Beispiel:</span><span class="sxs-lookup"><span data-stu-id="dd503-216">And, another example:</span></span>  
  
```  
db.ExecuteCommand("UPDATE Products SET QuantityPerUnit = {0} WHERE ProductID = {1}", "24 boxes", 5);  
```  
  
 <span data-ttu-id="dd503-217">Im folgenden Beispiel wird eine Verbindung geöffnet und übergibt Sie eine SQL `UPDATE` Befehl mit der SQL-Engine.</span><span class="sxs-lookup"><span data-stu-id="dd503-217">The following example opens a connection and passes a SQL `UPDATE` command to the SQL engine.</span></span>  
  
   
  
## Examples  
 [!code-csharp[DLinqCommunicatingWithDatabase#3](~/samples/snippets/csharp/VS_Snippets_Data/DLinqCommunicatingWithDatabase/cs/Program.cs#3)]
 [!code-vb[DLinqCommunicatingWithDatabase#3](~/samples/snippets/visualbasic/VS_Snippets_Data/DLinqCommunicatingWithDatabase/vb/Module1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteDynamicDelete">
      <MemberSignature Language="C#" Value="protected internal void ExecuteDynamicDelete (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void ExecuteDynamicDelete(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.ExecuteDynamicDelete(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub ExecuteDynamicDelete (entity As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void ExecuteDynamicDelete(System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.ExecuteDynamicDelete : obj -&gt; unit" Usage="dataContext.ExecuteDynamicDelete entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity"><span data-ttu-id="dd503-218">Die Entität gelöscht werden soll.</span><span class="sxs-lookup"><span data-stu-id="dd503-218">The entity to be deleted.</span></span></param>
        <summary><span data-ttu-id="dd503-219">Delete-außer Kraft setzen-Methoden, um Überschreibungsmethoden wird [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] die Aufgabe, generieren und Ausführen von dynamischem SQL für Löschvorgänge.</span><span class="sxs-lookup"><span data-stu-id="dd503-219">Executes, inside delete override methods, to redelegate to [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] the task of generating and executing dynamic SQL for delete operations.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd503-220">Siehe <xref:System.Data.Linq.DataContext.ExecuteDynamicInsert%2A>.</span><span class="sxs-lookup"><span data-stu-id="dd503-220">See <xref:System.Data.Linq.DataContext.ExecuteDynamicInsert%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteDynamicInsert">
      <MemberSignature Language="C#" Value="protected internal void ExecuteDynamicInsert (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void ExecuteDynamicInsert(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.ExecuteDynamicInsert(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub ExecuteDynamicInsert (entity As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void ExecuteDynamicInsert(System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.ExecuteDynamicInsert : obj -&gt; unit" Usage="dataContext.ExecuteDynamicInsert entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity"><span data-ttu-id="dd503-221">Die Entität eingefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="dd503-221">The entity to be inserted.</span></span></param>
        <summary><span data-ttu-id="dd503-222">Wird in Überschreibungsmethoden zum Einfügen ausgeführt, um das Generieren und Ausführen von dynamischem SQL für Einfügevorgänge neu an [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] zu delegieren.</span><span class="sxs-lookup"><span data-stu-id="dd503-222">Executes, inside insert override methods, to redelegate to [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] the task of generating and executing dynamic SQL for insert operations.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd503-223">Beachten Sie Folgendes ein:</span><span class="sxs-lookup"><span data-stu-id="dd503-223">Note the following considerations:</span></span>  
  
-   <span data-ttu-id="dd503-224">Da die Methode einen protected-Modifizierer verfügt, muss dessen Verwendung Unterklassen <xref:System.Data.Linq.DataContext>.</span><span class="sxs-lookup"><span data-stu-id="dd503-224">Because the method has a protected modifier, its use requires subclassing <xref:System.Data.Linq.DataContext>.</span></span>  
  
-   <span data-ttu-id="dd503-225">Eine Ausnahme ausgelöst, wenn dieser Vorgang nicht, innerhalb aufgerufen wird einer <xref:System.Data.Linq.DataContext.SubmitChanges%2A> Vorgang.</span><span class="sxs-lookup"><span data-stu-id="dd503-225">An exception is thrown if this operation is not called inside a <xref:System.Data.Linq.DataContext.SubmitChanges%2A> operation.</span></span> <span data-ttu-id="dd503-226">Es dient nicht als eigenständigen Vorgang außerhalb des Bereichs der aufzurufenden eine <xref:System.Data.Linq.DataContext.SubmitChanges%2A> Vorgang.</span><span class="sxs-lookup"><span data-stu-id="dd503-226">It is not intended to be called as a stand-alone operation outside the scope of a <xref:System.Data.Linq.DataContext.SubmitChanges%2A> operation.</span></span> <span data-ttu-id="dd503-227"><xref:System.Data.Linq.DataContext.SubmitChanges%2A> selbst überschreiben ruft Methoden, wenn sie implementiert werden, und die vorherigen Methoden innerhalb der außer Kraft setzen-Methoden aufgerufen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="dd503-227"><xref:System.Data.Linq.DataContext.SubmitChanges%2A> itself calls override methods if they are implemented and the previous methods are intended to be called inside the override methods.</span></span>  
  
-   <span data-ttu-id="dd503-228">Es ist die Verantwortung des Entwicklers um die richtige Entität übergeben.</span><span class="sxs-lookup"><span data-stu-id="dd503-228">It is the responsibility of the developer to pass in the correct entity.</span></span> <span data-ttu-id="dd503-229">Die Implementierung stellt sicher, dass die übergebene Entität nachverfolgt wird.</span><span class="sxs-lookup"><span data-stu-id="dd503-229">The implementation verifies that the passed-in entity is tracked.</span></span> <span data-ttu-id="dd503-230">Es ist jedoch in der Verantwortung des Entwicklers zum Beibehalten der Reihenfolge oder in der gleichen Entität zweimal zu übergeben.</span><span class="sxs-lookup"><span data-stu-id="dd503-230">However, it is the responsibility of the developer to maintain the order or pass in the same entity two times.</span></span>  
  
-   <span data-ttu-id="dd503-231">Es ist die Verantwortung des Entwicklers um die richtige dynamische API aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="dd503-231">It is the responsibility of the developer to invoke the correct dynamic API.</span></span> <span data-ttu-id="dd503-232">Z. B. in der `Update` -Überschreibungsmethode nur das <xref:System.Data.Linq.DataContext.ExecuteDynamicUpdate%2A> Methode kann aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="dd503-232">For example, in the `Update` override method, only the <xref:System.Data.Linq.DataContext.ExecuteDynamicUpdate%2A> method can be called.</span></span> [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] <span data-ttu-id="dd503-233">erkennt oder überprüft nicht, ob die aufgerufene dynamische Methode für den jeweiligen Vorgang gültig ist.</span><span class="sxs-lookup"><span data-stu-id="dd503-233">does not detect or verify whether the invoked dynamic method matches the applicable operation.</span></span> <span data-ttu-id="dd503-234">Wenn eine nicht anwendbare Methode aufgerufen wird, sind die Ergebnisse nicht definiert (z. B. Aufrufen von <xref:System.Data.Linq.DataContext.ExecuteDynamicDelete%2A> für ein Objekt aktualisiert werden).</span><span class="sxs-lookup"><span data-stu-id="dd503-234">The results are undefined if an inapplicable method is called (for example, calling <xref:System.Data.Linq.DataContext.ExecuteDynamicDelete%2A> for an object to be updated).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteDynamicUpdate">
      <MemberSignature Language="C#" Value="protected internal void ExecuteDynamicUpdate (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void ExecuteDynamicUpdate(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.ExecuteDynamicUpdate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub ExecuteDynamicUpdate (entity As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void ExecuteDynamicUpdate(System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.ExecuteDynamicUpdate : obj -&gt; unit" Usage="dataContext.ExecuteDynamicUpdate entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity"><span data-ttu-id="dd503-235">Die Entität aktualisiert werden.</span><span class="sxs-lookup"><span data-stu-id="dd503-235">The entity to be updated.</span></span></param>
        <summary><span data-ttu-id="dd503-236">Wird außer Kraft setzen updatemethoden, um Überschreibungsmethoden [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] die Aufgabe der generieren und Ausführen von dynamischem SQL für Aktualisierungsvorgänge.</span><span class="sxs-lookup"><span data-stu-id="dd503-236">Executes, inside update override methods, to redelegate to [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] the task of generating and executing dynamic SQL for update operations.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd503-237">Siehe <xref:System.Data.Linq.DataContext.ExecuteDynamicInsert%2A>.</span><span class="sxs-lookup"><span data-stu-id="dd503-237">See <xref:System.Data.Linq.DataContext.ExecuteDynamicInsert%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteMethodCall">
      <MemberSignature Language="C#" Value="protected System.Data.Linq.IExecuteResult ExecuteMethodCall (object instance, System.Reflection.MethodInfo methodInfo, params object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Data.Linq.IExecuteResult ExecuteMethodCall(object instance, class System.Reflection.MethodInfo methodInfo, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.ExecuteMethodCall(System.Object,System.Reflection.MethodInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Data::Linq::IExecuteResult ^ ExecuteMethodCall(System::Object ^ instance, System::Reflection::MethodInfo ^ methodInfo, ... cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.ExecuteMethodCall : obj * System.Reflection.MethodInfo * obj[] -&gt; System.Data.Linq.IExecuteResult" Usage="dataContext.ExecuteMethodCall (instance, methodInfo, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.IExecuteResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="methodInfo" Type="System.Reflection.MethodInfo" />
        <Parameter Name="parameters" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="dd503-238">Die Instanz des Methodenaufrufs (das aktuelle Objekt).</span><span class="sxs-lookup"><span data-stu-id="dd503-238">The instance of the method invocation (the current object).</span></span></param>
        <param name="methodInfo"><span data-ttu-id="dd503-239">Bezeichnet die einer Datenbankmethode entsprechende .NET-Methode.</span><span class="sxs-lookup"><span data-stu-id="dd503-239">Identifies the .NET method that corresponds to a database method.</span></span></param>
        <param name="parameters"><span data-ttu-id="dd503-240">Das Array von Parametern an den Befehl übergeben werden.</span><span class="sxs-lookup"><span data-stu-id="dd503-240">The array of parameters to be passed to the command.</span></span></param>
        <summary><span data-ttu-id="dd503-241">Führt die der angegebenen .NET-Methode zugeordnete gespeicherte Datenbankprozedur oder Skalarfunktion aus.</span><span class="sxs-lookup"><span data-stu-id="dd503-241">Executes the stored database procedure or scalar function associated with the specified .NET method.</span></span></summary>
        <returns><span data-ttu-id="dd503-242">Das Ergebnis (den Rückgabewert und ein Output-Parameter) für die Ausführung der angegebenen Methode.</span><span class="sxs-lookup"><span data-stu-id="dd503-242">The result (the return value and output parameters) of executing the specified method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd503-243">Die <xref:System.Data.Linq.DataContext.ExecuteMethodCall%2A> Methode im automatisch generierten Code verwendet wird, und fungiert als Proxy für Datenbankfunktionen.</span><span class="sxs-lookup"><span data-stu-id="dd503-243">The <xref:System.Data.Linq.DataContext.ExecuteMethodCall%2A> method is used in automatically generated code and acts as a proxy to database functions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteQuery">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable ExecuteQuery (Type elementType, string query, params object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerable ExecuteQuery(class System.Type elementType, string query, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.ExecuteQuery(System.Type,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteQuery (elementType As Type, query As String, ParamArray parameters As Object()) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerable ^ ExecuteQuery(Type ^ elementType, System::String ^ query, ... cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.ExecuteQuery : Type * string * obj[] -&gt; System.Collections.IEnumerable" Usage="dataContext.ExecuteQuery (elementType, query, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementType" Type="System.Type" />
        <Parameter Name="query" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="elementType"><span data-ttu-id="dd503-244">Der Typ des der <see cref="T:System.Collections.Generic.IEnumerable`1" /> zurückgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="dd503-244">The type of the <see cref="T:System.Collections.Generic.IEnumerable`1" /> to be returned.</span></span>  
  
<span data-ttu-id="dd503-245">Der Algorithmus für Vergleiche von Spalten im Ergebnis der Abfrage und Feldern oder Eigenschaften im Objekt funktioniert folgendermaßen:</span><span class="sxs-lookup"><span data-stu-id="dd503-245">The algorithm for matching columns in the result of the query to fields or properties in the object works as follows:</span></span> 
<span data-ttu-id="dd503-246">Wenn ein Feld oder eine Eigenschaft zu einem bestimmten Spaltennamen zugeordnet ist, wird der Spaltenname im Resultset erwartet.</span><span class="sxs-lookup"><span data-stu-id="dd503-246">If a field or property is mapped to a particular column name, that column name is expected in the resultset.</span></span>  
  
<span data-ttu-id="dd503-247">Wenn ein Feld oder Eigenschaft nicht zugeordnet ist, wird eine Spalte mit dem gleichen Namen wie das Feld oder Eigenschaft im Resultset erwartet.</span><span class="sxs-lookup"><span data-stu-id="dd503-247">If a field or property is not mapped, a column with the same name as the field or property is expected in the resultset.</span></span>  
  
<span data-ttu-id="dd503-248">Der Vergleich wird ausgeführt, durch die Groß-/ Kleinschreibung wird zuerst gesucht.</span><span class="sxs-lookup"><span data-stu-id="dd503-248">The comparison is performed by looking for a case-sensitive match first.</span></span> <span data-ttu-id="dd503-249">Wenn dieser Zuordnung nicht gefunden wird, wird die Suche erneut nach einer Übereinstimmung der Groß-/Kleinschreibung.</span><span class="sxs-lookup"><span data-stu-id="dd503-249">If this match is not found, a subsequent search occurs for a case-insensitive match.</span></span>  
  
<span data-ttu-id="dd503-250">Die Abfrage muss alle überwachten Felder und Eigenschaften des Objekts (mit Ausnahme derer, die im zurückgestellten Modus geladen werden) zurückgeben. wenn alle folgenden Bedingungen erfüllt sind:</span><span class="sxs-lookup"><span data-stu-id="dd503-250">The query must return all the tracked fields and properties of the object (except those that are loaded on a deferred basis) when all the following conditions are true:</span></span> 
 <span data-ttu-id="dd503-251"><c>T</c> stellt eine Entität dar, die explizit von <see cref="T:System.Data.Linq.DataContext" /> überwacht wird.</span><span class="sxs-lookup"><span data-stu-id="dd503-251"><c>T</c> is an entity explicitly tracked by the <see cref="T:System.Data.Linq.DataContext" />.</span></span>  
  
 <span data-ttu-id="dd503-252"><see cref="P:System.Data.Linq.DataContext.ObjectTrackingEnabled" /> ist <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="dd503-252"><see cref="P:System.Data.Linq.DataContext.ObjectTrackingEnabled" /> is <see langword="true" />.</span></span>  
  
<span data-ttu-id="dd503-253">Die Entität über einen Primärschlüssel verfügt.</span><span class="sxs-lookup"><span data-stu-id="dd503-253">The entity has a primary key.</span></span>  
  
<span data-ttu-id="dd503-254">Andernfalls wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="dd503-254">Otherwise an exception is thrown.</span></span></param>
        <param name="query"><span data-ttu-id="dd503-255">Die SQL-Abfrage ausgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="dd503-255">The SQL query to be executed.</span></span></param>
        <param name="parameters"><span data-ttu-id="dd503-256">Das Array von Parametern an den Befehl übergeben werden.</span><span class="sxs-lookup"><span data-stu-id="dd503-256">The array of parameters to be passed to the command.</span></span> <span data-ttu-id="dd503-257">Beachten Sie Folgendes ein:</span><span class="sxs-lookup"><span data-stu-id="dd503-257">Note the following behavior:</span></span> 
<span data-ttu-id="dd503-258">Wenn die Anzahl der Objekte im Array kleiner als die höchste in der Befehlszeichenfolge identifizierte Anzahl ist, wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="dd503-258">If the number of objects in the array is less than the highest number identified in the command string, an exception is thrown.</span></span>  
  
<span data-ttu-id="dd503-259">Wenn das Array Objekte, die in der Befehlszeichenfolge nicht verwiesen wird enthält, wird keine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="dd503-259">If the array contains objects that are not referenced in the command string, no exception is thrown.</span></span>  
  
<span data-ttu-id="dd503-260">Wenn ein Parameter <see langword="null" />, wird eine Konvertierung in <see langword="DBNull.Value" />.</span><span class="sxs-lookup"><span data-stu-id="dd503-260">If a parameter is <see langword="null" />, it is converted to <see langword="DBNull.Value" />.</span></span></param>
        <summary><span data-ttu-id="dd503-261">Führt SQL-Abfragen direkt in der Datenbank an.</span><span class="sxs-lookup"><span data-stu-id="dd503-261">Executes SQL queries directly on the database.</span></span></summary>
        <returns><span data-ttu-id="dd503-262">Ein <see cref="T:System.Collections.Generic.IEnumerable`1" /> Auflistung von Objekten, die von der Abfrage zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="dd503-262">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> collection of objects returned by the query.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteQuery&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;TResult&gt; ExecuteQuery&lt;TResult&gt; (string query, params object[] parameters) where TResult : new();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt; ExecuteQuery&lt;.ctor TResult&gt;(string query, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.ExecuteQuery``1(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteQuery(Of TResult As New) (query As String, ParamArray parameters As Object()) As IEnumerable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; where TResult : gcnew() System::Collections::Generic::IEnumerable&lt;TResult&gt; ^ ExecuteQuery(System::String ^ query, ... cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.ExecuteQuery : string * obj[] -&gt; seq&lt;'Result (requires 'Result : (new : unit -&gt; 'Result))&gt; (requires 'Result : (new : unit -&gt; 'Result))" Usage="dataContext.ExecuteQuery (query, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="dd503-263">Der Typ der Elemente in der zurückgegebenen Auflistung.</span><span class="sxs-lookup"><span data-stu-id="dd503-263">The type of the elements in the returned collection.</span></span></typeparam>
        <param name="query"><span data-ttu-id="dd503-264">Die SQL-Abfrage ausgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="dd503-264">The SQL query to be executed.</span></span></param>
        <param name="parameters"><span data-ttu-id="dd503-265">Das Array von Parametern an den Befehl übergeben werden.</span><span class="sxs-lookup"><span data-stu-id="dd503-265">The array of parameters to be passed to the command.</span></span> <span data-ttu-id="dd503-266">Beachten Sie Folgendes ein:</span><span class="sxs-lookup"><span data-stu-id="dd503-266">Note the following behavior:</span></span> 
<span data-ttu-id="dd503-267">Wenn die Anzahl der Objekte im Array kleiner als die höchste in der Befehlszeichenfolge identifizierte Anzahl ist, wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="dd503-267">If the number of objects in the array is less than the highest number identified in the command string, an exception is thrown.</span></span>  
  
<span data-ttu-id="dd503-268">Wenn das Array Objekte, die in der Befehlszeichenfolge nicht verwiesen wird enthält, wird keine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="dd503-268">If the array contains objects that are not referenced in the command string, no exception is thrown.</span></span>  
  
<span data-ttu-id="dd503-269">Wenn ein Parameter null ist, wird eine Konvertierung in <see langword="DBNull.Value" />.</span><span class="sxs-lookup"><span data-stu-id="dd503-269">If a parameter is null, it is converted to <see langword="DBNull.Value" />.</span></span></param>
        <summary><span data-ttu-id="dd503-270">Führt SQL-Abfragen direkt in der Datenbank, und gibt Objekte zurück.</span><span class="sxs-lookup"><span data-stu-id="dd503-270">Executes SQL queries directly on the database and returns objects.</span></span></summary>
        <returns><span data-ttu-id="dd503-271">Eine Auflistung von Objekten, die von der Abfrage zurückgegeben werden soll.</span><span class="sxs-lookup"><span data-stu-id="dd503-271">A collection of objects returned by the query.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd503-272">Diese Methode ist ein Pass-Through-Mechanismus für Fälle, in denen [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] bietet keine für ein bestimmtes Szenario.</span><span class="sxs-lookup"><span data-stu-id="dd503-272">This method is a pass-through mechanism for cases where [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] does not provide for a particular scenario.</span></span>  
  
 <span data-ttu-id="dd503-273">Der Algorithmus für Vergleiche von Spalten im Resultset der Abfrage, die Felder und Eigenschaften im Objekt funktioniert folgendermaßen:</span><span class="sxs-lookup"><span data-stu-id="dd503-273">The algorithm for matching columns in the result of the query to fields and properties in the object works as follows:</span></span>  
  
-   <span data-ttu-id="dd503-274">Wenn ein Feld oder eine Eigenschaft zu einem bestimmten Spaltennamen zugeordnet ist, wird der Spaltenname im Resultset erwartet.</span><span class="sxs-lookup"><span data-stu-id="dd503-274">If a field or property is mapped to a particular column name, that column name is expected in the resultset.</span></span>  
  
-   <span data-ttu-id="dd503-275">Wenn ein Feld oder Eigenschaft nicht zugeordnet ist, wird eine Spalte mit dem gleichen Namen wie das Feld oder Eigenschaft im Resultset erwartet.</span><span class="sxs-lookup"><span data-stu-id="dd503-275">If a field or property is not mapped, a column with the same name as the field or property is expected in the resultset.</span></span>  
  
-   <span data-ttu-id="dd503-276">Der Vergleich wird ausgeführt, indem zuerst Groß-/ Kleinschreibung gesucht wird.</span><span class="sxs-lookup"><span data-stu-id="dd503-276">The comparison is performed by first looking for a case-sensitive match.</span></span> <span data-ttu-id="dd503-277">Wenn eine Übereinstimmung nicht gefunden wird, wird die Suche erneut nach einer Übereinstimmung der Groß-/Kleinschreibung.</span><span class="sxs-lookup"><span data-stu-id="dd503-277">If such a match is not found, a subsequent search occurs for a case-insensitive match.</span></span>  
  
-   <span data-ttu-id="dd503-278">Die Abfrage muss alle überwachten Felder und Eigenschaften des Objekts (mit Ausnahme derer, verzögertes Laden) zurückgeben. wenn alle folgenden Bedingungen zutreffen:</span><span class="sxs-lookup"><span data-stu-id="dd503-278">The query must return all the tracked fields and properties of the object (apart from those subject to deferred loading) when all the following are true:</span></span>  
  
    -   <span data-ttu-id="dd503-279">Wenn `<T>` eine Entität explizit verfolgt wird die <xref:System.Data.Linq.DataContext>.</span><span class="sxs-lookup"><span data-stu-id="dd503-279">If `<T>` is an entity explicitly tracked by the <xref:System.Data.Linq.DataContext>.</span></span>  
  
    -   <span data-ttu-id="dd503-280">ObjectTrackingEnabled ist "true".</span><span class="sxs-lookup"><span data-stu-id="dd503-280">ObjectTrackingEnabled is true.</span></span>  
  
    -   <span data-ttu-id="dd503-281">Die Entität über einen Primärschlüssel verfügt.</span><span class="sxs-lookup"><span data-stu-id="dd503-281">The entity has a primary key.</span></span>  
  
     <span data-ttu-id="dd503-282">Andernfalls wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="dd503-282">Otherwise an exception is thrown.</span></span>  
  
-   <span data-ttu-id="dd503-283">In allen anderen Fällen kann die Abfrage nur eine Teilmenge der überwachten Felder und Eigenschaften für das Objekt abrufen.</span><span class="sxs-lookup"><span data-stu-id="dd503-283">In all other cases, the query can retrieve just a subset of the tracked fields and properties for the object.</span></span>  
  
 <span data-ttu-id="dd503-284">Der folgende c#-Codeausschnitt zeigt eine Verwendung dieser Methode:</span><span class="sxs-lookup"><span data-stu-id="dd503-284">The following C# snippet shows one use for this method:</span></span>  
  
```  
var customers = db.ExecuteQuery<Customer>(@"SELECT CustomerID, CompanyName, ContactName, ContactTitle,   
   Address, City, Region, PostalCode, Country, Phone, Fax  
   FROM   dbo.Customers  
   WHERE  City = {0}", "London");  
  
foreach (Customer c in customers)  
   Console.WriteLine(c.ContactName);  
```  
  
 <span data-ttu-id="dd503-285">In Visual Basic</span><span class="sxs-lookup"><span data-stu-id="dd503-285">In Visual Basic</span></span>  
  
```  
Dim customers = db.ExecuteQuery(Of Customer)("SELECT CustomerID, _    CompanyName, ContactName, ContactTitle, _  
   Address, City, Region, PostalCode, Country, Phone, Fax _  
   FROM dbo.Customers _  
WHERE City = {0}", "London")  
  
For Each c As Customer In customers  
    Console.WriteLine(c.ContactName)  
Next  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChangeSet">
      <MemberSignature Language="C#" Value="public System.Data.Linq.ChangeSet GetChangeSet ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Linq.ChangeSet GetChangeSet() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.GetChangeSet" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChangeSet () As ChangeSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Linq::ChangeSet ^ GetChangeSet();" />
      <MemberSignature Language="F#" Value="member this.GetChangeSet : unit -&gt; System.Data.Linq.ChangeSet" Usage="dataContext.GetChangeSet " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.ChangeSet</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dd503-286">Ruft die geänderten Objekte von nachverfolgten <see cref="T:System.Data.Linq.DataContext" />.</span><span class="sxs-lookup"><span data-stu-id="dd503-286">Gets the modified objects tracked by <see cref="T:System.Data.Linq.DataContext" />.</span></span></summary>
        <returns><span data-ttu-id="dd503-287">Der Satz von Objekten ist als drei schreibgeschützten Auflistungen zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="dd503-287">The set of objects is returned as three read-only collections.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd503-288">Beachten Sie Folgendes ein:</span><span class="sxs-lookup"><span data-stu-id="dd503-288">Note the following considerations:</span></span>  
  
-   <span data-ttu-id="dd503-289"><xref:System.Data.Linq.DataContext.GetChangeSet%2A> Möglicherweise haben Nebeneffekte, wie die Ableitung von Einfüge- und Löschvorgänge, die in der Regel zum Zeitpunkt der ausgeführt werden <xref:System.Data.Linq.DataContext.SubmitChanges%2A>.</span><span class="sxs-lookup"><span data-stu-id="dd503-289"><xref:System.Data.Linq.DataContext.GetChangeSet%2A> might have side effects, such as inference of insert and delete operations that are usually performed at the time of <xref:System.Data.Linq.DataContext.SubmitChanges%2A>.</span></span> <span data-ttu-id="dd503-290">Beispielsweise können Objekte, die in den folgenden Vorgängen verwendet werden, entsprechende abgeleitete Vorgänge in der folgenden Liste erstellen:</span><span class="sxs-lookup"><span data-stu-id="dd503-290">For example, objects that are used in the following operations can create corresponding inferred operations in the following list:</span></span>  
  
    -   <span data-ttu-id="dd503-291"><xref:System.Data.Linq.EntitySet%601.Add%2A> um <xref:System.Data.Linq.Table%601.InsertOnSubmit%2A>.</span><span class="sxs-lookup"><span data-stu-id="dd503-291"><xref:System.Data.Linq.EntitySet%601.Add%2A> to <xref:System.Data.Linq.Table%601.InsertOnSubmit%2A>.</span></span>  
  
    -   <span data-ttu-id="dd503-292"><xref:System.Data.Linq.EntityRef%601> null-Zuweisung (möglicherweise aufgrund von <xref:System.Data.Linq.EntitySet%601.Remove%2A> zu <xref:System.Data.Linq.Table%601.DeleteOnSubmit%2A>.</span><span class="sxs-lookup"><span data-stu-id="dd503-292"><xref:System.Data.Linq.EntityRef%601> assignment to null (possibly because of <xref:System.Data.Linq.EntitySet%601.Remove%2A> to <xref:System.Data.Linq.Table%601.DeleteOnSubmit%2A>.</span></span>  
  
-   <span data-ttu-id="dd503-293">Die Gruppe kann entsprechend der foreign Key-Einschränkungen nicht sortiert werden.</span><span class="sxs-lookup"><span data-stu-id="dd503-293">The set may not be ordered according to foreign key constraints.</span></span>  
  
-   <span data-ttu-id="dd503-294">Datenbankgenerierten Werten (z. B. Primär- und Fremdschlüssel Schlüsselwerte, Zeitstempel und So weiter) sind nicht verfügbar.</span><span class="sxs-lookup"><span data-stu-id="dd503-294">Database-generated values (for example, primary and foreign key values, timestamps, and so forth) are not available.</span></span> <span data-ttu-id="dd503-295">Solche Informationen erfordert die Ausführung von Datenbankbefehlen, und vielleicht die Weitergabe von abgerufenen Informationen (z. B. Fremdschlüssel aus Primärschlüssel).</span><span class="sxs-lookup"><span data-stu-id="dd503-295">Such information requires database command execution and perhaps the propagation of retrieved information (for example, foreign key from primary key).</span></span>  
  
-   <span data-ttu-id="dd503-296">Der Satz von geänderten Objekten wird zum Zeitpunkt des Aufrufs berechnet.</span><span class="sxs-lookup"><span data-stu-id="dd503-296">The set of changed objects is computed at the time of the call.</span></span> <span data-ttu-id="dd503-297">Nachfolgende Aufrufe von <xref:System.Data.Linq.DataContext.SubmitChanges%2A> kann einen anderen Satz erzeugen, wenn zusätzliche Änderungen vorgenommen werden.</span><span class="sxs-lookup"><span data-stu-id="dd503-297">Subsequent calls to <xref:System.Data.Linq.DataContext.SubmitChanges%2A> can produce a different set if additional changes are made.</span></span>  
  
 <span data-ttu-id="dd503-298">Ausgabe, wenn keine Änderungen vorgenommen wurden, wird wie folgt angezeigt:</span><span class="sxs-lookup"><span data-stu-id="dd503-298">Output when no changes have been made appears as follows:</span></span>  
  
 `{Added: 0, Removed: 0, Modified: 0}`  
  
   
  
## Examples  
 [!code-csharp[DLinqDebuggingSupport#2](~/samples/snippets/csharp/VS_Snippets_Data/DLinqDebuggingSupport/cs/Program.cs#2)]
 [!code-vb[DLinqDebuggingSupport#2](~/samples/snippets/visualbasic/VS_Snippets_Data/DLinqDebuggingSupport/vb/Module1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand GetCommand (System.Linq.IQueryable query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.DbCommand GetCommand(class System.Linq.IQueryable query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.GetCommand(System.Linq.IQueryable)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCommand (query As IQueryable) As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::DbCommand ^ GetCommand(System::Linq::IQueryable ^ query);" />
      <MemberSignature Language="F#" Value="member this.GetCommand : System.Linq.IQueryable -&gt; System.Data.Common.DbCommand" Usage="dataContext.GetCommand query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.IQueryable" />
      </Parameters>
      <Docs>
        <param name="query"><span data-ttu-id="dd503-299">Die Abfrage, deren SQL-Befehlsinformationen abgerufen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="dd503-299">The query whose SQL command information is to be retrieved.</span></span></param>
        <summary><span data-ttu-id="dd503-300">Ruft die Informationen zu SQL-Befehle, die vom [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)].</span><span class="sxs-lookup"><span data-stu-id="dd503-300">Gets the information about SQL commands generated by [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)].</span></span></summary>
        <returns><span data-ttu-id="dd503-301">Das angeforderte Befehlsinformationsobjekt.</span><span class="sxs-lookup"><span data-stu-id="dd503-301">The requested command information object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd503-302">Diese Methode ist nur ein Getter und hat keinen Einfluss auf <xref:System.Data.Linq.DataContext> Zustand.</span><span class="sxs-lookup"><span data-stu-id="dd503-302">This method is only a getter and does not affect <xref:System.Data.Linq.DataContext> state.</span></span>  
  
 <span data-ttu-id="dd503-303">Beachten Sie Folgendes ein:</span><span class="sxs-lookup"><span data-stu-id="dd503-303">Note the following considerations:</span></span>  
  
-   <span data-ttu-id="dd503-304">Das Argument muss ungleich Null sein.</span><span class="sxs-lookup"><span data-stu-id="dd503-304">The argument must be non-null.</span></span> <span data-ttu-id="dd503-305">Andernfalls wird eine null-Argument-Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="dd503-305">Otherwise, a null argument exception is thrown.</span></span>  
  
-   <span data-ttu-id="dd503-306">Normale Abfrage Übersetzung Ausnahmen während der [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] abfrageausführung Bewerben Sie sich für eine Abfrage, die nicht übersetzt werden kann.</span><span class="sxs-lookup"><span data-stu-id="dd503-306">Normal query translation exceptions thrown during [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] query execution apply for a query that cannot be translated.</span></span>  
  
-   <span data-ttu-id="dd503-307">Es wird nur der erste Abfragebefehl zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="dd503-307">Only the first query command is returned.</span></span> <span data-ttu-id="dd503-308">Insbesondere zusätzliche Befehle, die für eager Loading verwendet werden (<xref:System.Data.Linq.DataLoadOptions.LoadWith%2A>) sind nicht enthalten.</span><span class="sxs-lookup"><span data-stu-id="dd503-308">Specifically, additional commands that are used for eager loading (<xref:System.Data.Linq.DataLoadOptions.LoadWith%2A>) are not included.</span></span>  
  
-   <span data-ttu-id="dd503-309"><xref:System.Data.Linq.DataContext> Funktionsweise der Benutzer mit dem Befehl nachverfolgt nicht.</span><span class="sxs-lookup"><span data-stu-id="dd503-309"><xref:System.Data.Linq.DataContext> does not track what the user does with the command.</span></span> <span data-ttu-id="dd503-310">Z. B. die Ergebnisse der Ausführung des Befehls zurückgegeben werden nicht nachverfolgt und haben keine Auswirkungen auf <xref:System.Data.Linq.DataContext> Zustand.</span><span class="sxs-lookup"><span data-stu-id="dd503-310">For example, results from the execution of the returned command are not tracked and do not affect <xref:System.Data.Linq.DataContext> state.</span></span>  
  
   
  
## Examples  
 [!code-csharp[DLinqDebuggingSupport#3](~/samples/snippets/csharp/VS_Snippets_Data/DLinqDebuggingSupport/cs/Program.cs#3)]
 [!code-vb[DLinqDebuggingSupport#3](~/samples/snippets/visualbasic/VS_Snippets_Data/DLinqDebuggingSupport/vb/Module1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIDbCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand GetIDbCommand (System.Linq.IQueryable query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.IDbCommand GetIDbCommand(class System.Linq.IQueryable query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.GetIDbCommand(System.Linq.IQueryable)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIDbCommand (query As IQueryable) As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::IDbCommand ^ GetIDbCommand(System::Linq::IQueryable ^ query);" />
      <MemberSignature Language="F#" Value="member this.GetIDbCommand : System.Linq.IQueryable -&gt; System.Data.IDbCommand" Usage="dataContext.GetIDbCommand query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.IQueryable" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="query">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTable">
      <MemberSignature Language="C#" Value="public System.Data.Linq.ITable GetTable (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Linq.ITable GetTable(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.GetTable(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Linq::ITable ^ GetTable(Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.GetTable : Type -&gt; System.Data.Linq.ITable" Usage="dataContext.GetTable type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.ITable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="dd503-311">Der Typ der Objekte, die zurückgegeben werden soll.</span><span class="sxs-lookup"><span data-stu-id="dd503-311">The type of the objects to be returned.</span></span></param>
        <summary><span data-ttu-id="dd503-312">Gibt eine Auflistung von Objekten eines bestimmten Typs, der Typ, in dem von definiert wird der <paramref name="type" /> Parameter.</span><span class="sxs-lookup"><span data-stu-id="dd503-312">Returns a collection of objects of a particular type, where the type is defined by the <paramref name="type" /> parameter.</span></span></summary>
        <returns><span data-ttu-id="dd503-313">Eine Auflistung der Objekte, die von der <paramref name="type" /> Parameter.</span><span class="sxs-lookup"><span data-stu-id="dd503-313">A collection of objects defined by the <paramref name="type" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd503-314">Dies ist eine schwach typisierte Version der <xref:System.Data.Linq.DataContext.GetTable%2A>.</span><span class="sxs-lookup"><span data-stu-id="dd503-314">This is a weakly typed version of <xref:System.Data.Linq.DataContext.GetTable%2A>.</span></span> <span data-ttu-id="dd503-315">Es ist wichtig, um eine schwach typisierte Version zu erhalten, da sie relativ allgemein üblich, Abfragen dynamisch zu erstellen ist.</span><span class="sxs-lookup"><span data-stu-id="dd503-315">It is important to have a weakly typed version because it is a relatively common practice to construct queries dynamically.</span></span> <span data-ttu-id="dd503-316">Es wäre unpraktisch, die auf Reflektion verwenden, um die richtige generische Methode aufrufen zu erzwingen.</span><span class="sxs-lookup"><span data-stu-id="dd503-316">It would be inconvenient to force the application to use reflection to call the correct generic method.</span></span>  
  
 <span data-ttu-id="dd503-317">Wenn es keine Auflistung für einen bestimmten Typ ist, wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="dd503-317">If there is no collection for a particular type, an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTable&lt;TEntity&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Linq.Table&lt;TEntity&gt; GetTable&lt;TEntity&gt; () where TEntity : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Linq.Table`1&lt;!!TEntity&gt; GetTable&lt;class TEntity&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.GetTable``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTable(Of TEntity As Class) () As Table(Of TEntity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TEntity&gt;&#xA; where TEntity : class System::Data::Linq::Table&lt;TEntity&gt; ^ GetTable();" />
      <MemberSignature Language="F#" Value="member this.GetTable : unit -&gt; System.Data.Linq.Table&lt;'Entity (requires 'Entity : null)&gt; (requires 'Entity : null)" Usage="dataContext.GetTable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Table&lt;TEntity&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TEntity"><span data-ttu-id="dd503-318">Der Typ der Objekte, die zurückgegeben werden soll.</span><span class="sxs-lookup"><span data-stu-id="dd503-318">The type of the objects to be returned.</span></span></typeparam>
        <summary><span data-ttu-id="dd503-319">Gibt eine Auflistung von Objekten eines bestimmten Typs, der Typ, in dem von definiert wird der <paramref name="TEntity" /> Parameter.</span><span class="sxs-lookup"><span data-stu-id="dd503-319">Returns a collection of objects of a particular type, where the type is defined by the <paramref name="TEntity" /> parameter.</span></span></summary>
        <returns><span data-ttu-id="dd503-320">Eine Auflistung der Objekte, die von der <paramref name="TEntity" /> Parameter.</span><span class="sxs-lookup"><span data-stu-id="dd503-320">A collection of objects defined by the <paramref name="TEntity" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd503-321">Diese Methode ist der Haupteinstiegspunkt für die Abfrage.</span><span class="sxs-lookup"><span data-stu-id="dd503-321">This method is the main entry point for querying.</span></span> <span data-ttu-id="dd503-322">Wenn ein stark typisiertes <xref:System.Data.Linq.DataContext> wird erstellte, die neue generierte Eigenschaften kapseln Aufrufe dieser Methode.</span><span class="sxs-lookup"><span data-stu-id="dd503-322">When a strongly typed <xref:System.Data.Linq.DataContext> is created, new generated properties encapsulate calls to this method.</span></span> <span data-ttu-id="dd503-323">Z. B. eine `Customers` -Eigenschaft generiert wird, die zurückgibt `GetTable<Customer>`.</span><span class="sxs-lookup"><span data-stu-id="dd503-323">For example, a `Customers` property is generated that returns `GetTable<Customer>`.</span></span>  
  
 <span data-ttu-id="dd503-324">Wenn es keine Auflistung für einen bestimmten Typ ist, wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="dd503-324">If there is no collection for a particular type, an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadOptions">
      <MemberSignature Language="C#" Value="public System.Data.Linq.DataLoadOptions LoadOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.DataLoadOptions LoadOptions" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.LoadOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property LoadOptions As DataLoadOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Linq::DataLoadOptions ^ LoadOptions { System::Data::Linq::DataLoadOptions ^ get(); void set(System::Data::Linq::DataLoadOptions ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LoadOptions : System.Data.Linq.DataLoadOptions with get, set" Usage="System.Data.Linq.DataContext.LoadOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.DataLoadOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dd503-325">Übernimmt oder bestimmt den <see cref="T:System.Data.Linq.DataLoadOptions" /> zugeordneten <see cref="T:System.Data.Linq.DataContext" />.</span><span class="sxs-lookup"><span data-stu-id="dd503-325">Gets or sets the <see cref="T:System.Data.Linq.DataLoadOptions" /> associated with this <see cref="T:System.Data.Linq.DataContext" />.</span></span></summary>
        <value><span data-ttu-id="dd503-326">Der Vorabruf Ladeoptionen für die verknüpften Daten.</span><span class="sxs-lookup"><span data-stu-id="dd503-326">The prefetch load options for related data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd503-327">Diese Eigenschaft ruft ab oder legt die Optionen, die zum Definieren der Vorabruf-Verhalten für verzögert geladene Elemente und Mitgliedschaft verknüpften Sammlungen verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="dd503-327">This property gets or sets the options that are used to define prefetch behavior for deferred-loaded members and membership of related collections.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public System.IO.TextWriter Log { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.TextWriter Log" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.Log" />
      <MemberSignature Language="VB.NET" Value="Public Property Log As TextWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::TextWriter ^ Log { System::IO::TextWriter ^ get(); void set(System::IO::TextWriter ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Log : System.IO.TextWriter with get, set" Usage="System.Data.Linq.DataContext.Log" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dd503-328">Übernimmt oder bestimmt das Ziel, die SQL-Abfrage oder den Befehl zu schreiben.</span><span class="sxs-lookup"><span data-stu-id="dd503-328">Gets or sets the destination to write the SQL query or command.</span></span></summary>
        <value><span data-ttu-id="dd503-329">Die <see cref="T:System.IO.TextReader" /> zum Schreiben des Befehls verwendet.</span><span class="sxs-lookup"><span data-stu-id="dd503-329">The <see cref="T:System.IO.TextReader" /> to use for writing the command.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd503-330">Legen Sie diese Eigenschaft auf `null` zum Deaktivieren der Protokollierung für Befehl.</span><span class="sxs-lookup"><span data-stu-id="dd503-330">Set this property to `null` to disable command logging.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dd503-331">Das folgende Beispiel zeigt die generierte SQL im Konsolenfenster angezeigt, bevor die Ergebnisse der Abfrage angezeigt.</span><span class="sxs-lookup"><span data-stu-id="dd503-331">The following example displays generated SQL in the console window before it displays the results of the query.</span></span>  
  
 [!code-csharp[System.Data.Linq.DataContext#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.DataContext/cs/Program.cs#2)]
 [!code-vb[System.Data.Linq.DataContext#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.DataContext/vb/Module1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mapping">
      <MemberSignature Language="C#" Value="public System.Data.Linq.Mapping.MetaModel Mapping { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaModel Mapping" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.Mapping" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Mapping As MetaModel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Linq::Mapping::MetaModel ^ Mapping { System::Data::Linq::Mapping::MetaModel ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Mapping : System.Data.Linq.Mapping.MetaModel" Usage="System.Data.Linq.DataContext.Mapping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dd503-332">Ruft die <see cref="T:System.Data.Linq.Mapping.MetaModel" /> auf dem die Zuordnung basiert.</span><span class="sxs-lookup"><span data-stu-id="dd503-332">Gets the <see cref="T:System.Data.Linq.Mapping.MetaModel" /> on which the mapping is based.</span></span></summary>
        <value><span data-ttu-id="dd503-333">Die Zuordnung zwischen einer Datenbank und Domänenobjekten.</span><span class="sxs-lookup"><span data-stu-id="dd503-333">The mapping between a database and domain objects.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ObjectTrackingEnabled">
      <MemberSignature Language="C#" Value="public bool ObjectTrackingEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ObjectTrackingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.ObjectTrackingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property ObjectTrackingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ObjectTrackingEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ObjectTrackingEnabled : bool with get, set" Usage="System.Data.Linq.DataContext.ObjectTrackingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dd503-334">Ruft ab oder legt einen Wert, der angibt, ob die objektnachverfolgung aktiviert ist.</span><span class="sxs-lookup"><span data-stu-id="dd503-334">Gets or sets a value that indicates whether object tracking is enabled.</span></span></summary>
        <value><span data-ttu-id="dd503-335"><see langword="true" /> Wenn die objektverfolgung aktiviert ist; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dd503-335"><see langword="true" /> if the object tracking is enabled; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="dd503-336">Die Standardeinstellung ist <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="dd503-336">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd503-337">Wenn diese Eigenschaft auf `false` verbessert die Leistung zum Zeitpunkt abrufen, da es weniger Elemente zu verfolgen.</span><span class="sxs-lookup"><span data-stu-id="dd503-337">Setting this property to `false` improves performance at retrieval time, because there are fewer items to track.</span></span>  
  
 <span data-ttu-id="dd503-338">Es wird eine Ausnahme ausgelöst:</span><span class="sxs-lookup"><span data-stu-id="dd503-338">An exception is thrown:</span></span>  
  
-   <span data-ttu-id="dd503-339">Wenn die Eigenschaft, um festgelegt ist `false` nachdem eine Abfrage ausgeführt wurde.</span><span class="sxs-lookup"><span data-stu-id="dd503-339">If the property is set to `false` after a query has been executed.</span></span>  
  
     <span data-ttu-id="dd503-340">Weitere Informationen finden Sie im Abschnitt gültige Modi in <xref:System.Data.Linq.DataContext>.</span><span class="sxs-lookup"><span data-stu-id="dd503-340">For more information, see the Valid Modes section in <xref:System.Data.Linq.DataContext>.</span></span>  
  
-   <span data-ttu-id="dd503-341">Wenn die Eigenschaft, um festgelegt ist `false` und <xref:System.Data.Linq.DataContext.SubmitChanges%2A> aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="dd503-341">If the property is set to `false` and <xref:System.Data.Linq.DataContext.SubmitChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="dd503-342">Wenn <xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> ist `false`, <xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A> wird ignoriert und behandelt Sie als `false`.</span><span class="sxs-lookup"><span data-stu-id="dd503-342">If <xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> is `false`, <xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A> is ignored and treated as `false`.</span></span> <span data-ttu-id="dd503-343">In diesem Fall die <xref:System.Data.Linq.DataContext> ist schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="dd503-343">In this case, the <xref:System.Data.Linq.DataContext> is read-only.</span></span>  
  
 <span data-ttu-id="dd503-344">Falls <xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A>`true` lautet, ist <xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A>`false`.</span><span class="sxs-lookup"><span data-stu-id="dd503-344">If <xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> is `true`, <xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A> is `false`.</span></span> <span data-ttu-id="dd503-345">In diesem Fall <xref:System.Data.Linq.DataContext> können Sie ein Objektdiagramm mit <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> Direktiven, jedoch ermöglicht nicht das verzögerte Laden.</span><span class="sxs-lookup"><span data-stu-id="dd503-345">In this case, <xref:System.Data.Linq.DataContext> allows you to load an object graph by using <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> directives, but does not enable deferred loading.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryCacheEnabled">
      <MemberSignature Language="C#" Value="public bool QueryCacheEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool QueryCacheEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.QueryCacheEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property QueryCacheEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool QueryCacheEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.QueryCacheEnabled : bool with get, set" Usage="System.Data.Linq.DataContext.QueryCacheEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Refresh">
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dd503-346">Aktualisiert den Objektstatus anhand von Daten in der Datenbank.</span><span class="sxs-lookup"><span data-stu-id="dd503-346">Refreshes object state by using data in the database.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd503-347">Diese Methode ist nützlich, nachdem ein optimistischer nebenläufigkeitsfehler, Elemente in einen Zustand für einen weiteren Versuch zu öffnen.</span><span class="sxs-lookup"><span data-stu-id="dd503-347">This method is useful after an optimistic concurrency error to bring items into a state for another attempt.</span></span> <span data-ttu-id="dd503-348">Aktualisiert den Status der primitiven Feldern und Eigenschaften für die Objekte.</span><span class="sxs-lookup"><span data-stu-id="dd503-348">It updates the state of the primitive fields and properties on the objects.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dd503-349">Wenn ein Objekt ist, auf die *viele* Seite einer 1: n Beziehung, die foreign Key für das Objekt festgelegt, und der Objektzeiger für die andere Seite der Beziehung wird auf den neuen Wert festgelegt werden.</span><span class="sxs-lookup"><span data-stu-id="dd503-349">If an object is on the *many* side of a one-to-many relationship, the foreign key on the object will be set and the object pointer for the other side of the relationship will be set to the new value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh (System.Data.Linq.RefreshMode mode, System.Collections.IEnumerable entities);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh(valuetype System.Data.Linq.RefreshMode mode, class System.Collections.IEnumerable entities) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.Refresh(System.Data.Linq.RefreshMode,System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh (mode As RefreshMode, entities As IEnumerable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh(System::Data::Linq::RefreshMode mode, System::Collections::IEnumerable ^ entities);" />
      <MemberSignature Language="F#" Value="member this.Refresh : System.Data.Linq.RefreshMode * System.Collections.IEnumerable -&gt; unit" Usage="dataContext.Refresh (mode, entities)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.Data.Linq.RefreshMode" />
        <Parameter Name="entities" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="mode"><span data-ttu-id="dd503-350">Ein Wert, der angibt, wie bei der optimistischen Parallelität steht in Konflikt behandelt werden.</span><span class="sxs-lookup"><span data-stu-id="dd503-350">A value that specifies how optimistic concurrency conflicts are handled.</span></span></param>
        <param name="entities"><span data-ttu-id="dd503-351">Die Auflistung von Entitäten, die aktualisiert werden.</span><span class="sxs-lookup"><span data-stu-id="dd503-351">The collection of entities to be refreshed.</span></span></param>
        <summary><span data-ttu-id="dd503-352">Aktualisiert eine Auflistung von Entitätsobjekten anhand des angegebenen Modus.</span><span class="sxs-lookup"><span data-stu-id="dd503-352">Refreshes a collection of entity objects according to the specified mode.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh (System.Data.Linq.RefreshMode mode, object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh(valuetype System.Data.Linq.RefreshMode mode, object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.Refresh(System.Data.Linq.RefreshMode,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh (mode As RefreshMode, entity As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh(System::Data::Linq::RefreshMode mode, System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.Refresh : System.Data.Linq.RefreshMode * obj -&gt; unit" Usage="dataContext.Refresh (mode, entity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.Data.Linq.RefreshMode" />
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="mode"><span data-ttu-id="dd503-353">Ein Wert, der angibt, wie bei der optimistischen Parallelität steht in Konflikt behandelt werden.</span><span class="sxs-lookup"><span data-stu-id="dd503-353">A value that specifies how optimistic concurrency conflicts are handled.</span></span></param>
        <param name="entity"><span data-ttu-id="dd503-354">Das zu aktualisierende Objekt.</span><span class="sxs-lookup"><span data-stu-id="dd503-354">The object to be refreshed.</span></span></param>
        <summary><span data-ttu-id="dd503-355">Aktualisiert ein Entitätsobjekt anhand des angegebenen Modus.</span><span class="sxs-lookup"><span data-stu-id="dd503-355">Refreshes an entity object according to the specified mode.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh (System.Data.Linq.RefreshMode mode, params object[] entities);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh(valuetype System.Data.Linq.RefreshMode mode, object[] entities) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.Refresh(System.Data.Linq.RefreshMode,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh (mode As RefreshMode, ParamArray entities As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh(System::Data::Linq::RefreshMode mode, ... cli::array &lt;System::Object ^&gt; ^ entities);" />
      <MemberSignature Language="F#" Value="member this.Refresh : System.Data.Linq.RefreshMode * obj[] -&gt; unit" Usage="dataContext.Refresh (mode, entities)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.Data.Linq.RefreshMode" />
        <Parameter Name="entities" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mode"><span data-ttu-id="dd503-356">Ein Wert, der angibt, wie bei der optimistischen Parallelität steht in Konflikt behandelt werden.</span><span class="sxs-lookup"><span data-stu-id="dd503-356">A value that specifies how optimistic concurrency conflicts are handled.</span></span></param>
        <param name="entities"><span data-ttu-id="dd503-357">Das Array von Entitätsobjekten, die aktualisiert werden.</span><span class="sxs-lookup"><span data-stu-id="dd503-357">The array of entity objects to be refreshed.</span></span></param>
        <summary><span data-ttu-id="dd503-358">Aktualisiert ein Array von Entitätsobjekten anhand des angegebenen Modus.</span><span class="sxs-lookup"><span data-stu-id="dd503-358">Refreshes an array of entity objects according to the specified mode.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SubmitChanges">
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dd503-359">Berechnet die geänderten Objekte, die eingefügt, aktualisiert oder gelöscht werden, und führt die entsprechenden Befehle, um die Änderungen an der Datenbank zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="dd503-359">Computes the set of modified objects to be inserted, updated, or deleted, and executes the appropriate commands to implement the changes to the database.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd503-360">Wenn Sie Methoden zum Überschreiben für INSERT-, Update- oder Delete, vorhanden sind <xref:System.Data.Linq.DataContext.SubmitChanges%2A> führt diese Methoden anstelle der standardmäßigen [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] Befehle.</span><span class="sxs-lookup"><span data-stu-id="dd503-360">If override methods are present for insert, update, or delete, <xref:System.Data.Linq.DataContext.SubmitChanges%2A> executes these methods instead of the default [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] commands.</span></span>  
  
 <span data-ttu-id="dd503-361"><xref:System.Data.Linq.DataContext.SubmitChanges%2A> Startet eine Transaktion und wird Rollback aus, wenn eine Ausnahme tritt auf, während <xref:System.Data.Linq.DataContext.SubmitChanges%2A> ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="dd503-361"><xref:System.Data.Linq.DataContext.SubmitChanges%2A> starts a transaction and will roll back if an exception occurs while <xref:System.Data.Linq.DataContext.SubmitChanges%2A> is executing.</span></span> <span data-ttu-id="dd503-362">Allerdings Dies führt kein Rollback die Änderungen im Arbeitsspeicher oder von verfolgt die <xref:System.Data.Linq.DataContext>; diese Änderungen müssen manuell rückgängig gemacht werden.</span><span class="sxs-lookup"><span data-stu-id="dd503-362">However, this does not roll back the changes in memory or tracked by the <xref:System.Data.Linq.DataContext>; those changes will need to be rolled back manually.</span></span> <span data-ttu-id="dd503-363">Beginnen Sie mit der eine neue Instanz der <xref:System.Data.Linq.DataContext> Wenn die Änderungen im Speicher verworfen werden.</span><span class="sxs-lookup"><span data-stu-id="dd503-363">You can start with a new instance of the <xref:System.Data.Linq.DataContext> if the changes in memory are to be discarded.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SubmitChanges">
      <MemberSignature Language="C#" Value="public void SubmitChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SubmitChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.SubmitChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub SubmitChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SubmitChanges();" />
      <MemberSignature Language="F#" Value="member this.SubmitChanges : unit -&gt; unit" Usage="dataContext.SubmitChanges " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dd503-364">Berechnet die geänderten Objekte, die eingefügt, aktualisiert oder gelöscht werden, und führt die entsprechenden Befehle, um die Änderungen an der Datenbank zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="dd503-364">Computes the set of modified objects to be inserted, updated, or deleted, and executes the appropriate commands to implement the changes to the database.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd503-365">Wenn Sie Methoden zum Überschreiben für INSERT-, Update- oder Delete, vorhanden sind <xref:System.Data.Linq.DataContext.SubmitChanges%2A> führt diese Methoden anstelle der standardmäßigen [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] Befehle.</span><span class="sxs-lookup"><span data-stu-id="dd503-365">If override methods are present for insert, update, or delete, <xref:System.Data.Linq.DataContext.SubmitChanges%2A> executes these methods instead of the default [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] commands.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SubmitChanges">
      <MemberSignature Language="C#" Value="public virtual void SubmitChanges (System.Data.Linq.ConflictMode failureMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SubmitChanges(valuetype System.Data.Linq.ConflictMode failureMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.SubmitChanges(System.Data.Linq.ConflictMode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SubmitChanges (failureMode As ConflictMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SubmitChanges(System::Data::Linq::ConflictMode failureMode);" />
      <MemberSignature Language="F#" Value="abstract member SubmitChanges : System.Data.Linq.ConflictMode -&gt; unit&#xA;override this.SubmitChanges : System.Data.Linq.ConflictMode -&gt; unit" Usage="dataContext.SubmitChanges failureMode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="failureMode" Type="System.Data.Linq.ConflictMode" />
      </Parameters>
      <Docs>
        <param name="failureMode"><span data-ttu-id="dd503-366">Die Aktion, die ausgeführt werden, wenn die Übermittlung fehlschlägt.</span><span class="sxs-lookup"><span data-stu-id="dd503-366">The action to be taken if the submission fails.</span></span> <span data-ttu-id="dd503-367">Gültige Argumente sind wie folgt aus:</span><span class="sxs-lookup"><span data-stu-id="dd503-367">Valid arguments are as follows:</span></span> 
 <see cref="F:System.Data.Linq.ConflictMode.FailOnFirstConflict" /><see cref="F:System.Data.Linq.ConflictMode.ContinueOnConflict" /></param>
        <summary><span data-ttu-id="dd503-368">Sendet Änderungen wurden an abgerufenen Objekten an der zugrunde liegenden Datenbank und gibt die Aktion an, die ausgeführt werden, die bei einem Fehler.</span><span class="sxs-lookup"><span data-stu-id="dd503-368">Sends changes that were made to retrieved objects to the underlying database, and specifies the action to be taken if the submission fails.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd503-369">Standardfehlermodus ist <xref:System.Data.Linq.ConflictMode.FailOnFirstConflict>.</span><span class="sxs-lookup"><span data-stu-id="dd503-369">Default failure mode is <xref:System.Data.Linq.ConflictMode.FailOnFirstConflict>.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.ConflictModeEnumeration#1](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.conflictmodeenumeration/cs/program.cs#1)]
 [!code-vb[System.Data.Linq.ConflictModeEnumeration#1](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.conflictmodeenumeration/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transaction">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbTransaction Transaction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbTransaction Transaction" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.Transaction" />
      <MemberSignature Language="VB.NET" Value="Public Property Transaction As DbTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbTransaction ^ Transaction { System::Data::Common::DbTransaction ^ get(); void set(System::Data::Common::DbTransaction ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Transaction : System.Data.Common.DbTransaction with get, set" Usage="System.Data.Linq.DataContext.Transaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbTransaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dd503-370">Ruft ab oder legt eine lokale Transaktion für die [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] zu verwenden, um die Datenbank zuzugreifen.</span><span class="sxs-lookup"><span data-stu-id="dd503-370">Gets or sets a local transaction for the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] to use to access the database.</span></span></summary>
        <value><span data-ttu-id="dd503-371">Das Transaktionsobjekt, das ein, die die <see cref="T:System.Data.Linq.DataContext" /> beim Ausführen von Abfragen und Befehlen.</span><span class="sxs-lookup"><span data-stu-id="dd503-371">The transaction object used by the <see cref="T:System.Data.Linq.DataContext" /> when executing queries and commands.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd503-372">Das primäre Szenario für diese Eigenschaft ist die Interoperabilität mit relationalen [!INCLUDE[vstecado](~/includes/vstecado-md.md)] Code.</span><span class="sxs-lookup"><span data-stu-id="dd503-372">The primary scenario for this property is interoperability with relational [!INCLUDE[vstecado](~/includes/vstecado-md.md)] code.</span></span> <span data-ttu-id="dd503-373">Verwenden Sie diese Eigenschaft beispielsweise, wenn Sie Ihren eigenen schreiben `Create` / `Update` / `Delete` Methoden zum Festlegen der `Transaction` Eigenschaft für das ADO `Command` Objekt.</span><span class="sxs-lookup"><span data-stu-id="dd503-373">For example, use this property when you write your own `Create`/`Update`/`Delete` methods to set the `Transaction` property on the ADO `Command` object.</span></span>  
  
 <span data-ttu-id="dd503-374">Beachten Sie Folgendes:</span><span class="sxs-lookup"><span data-stu-id="dd503-374">Note the following:</span></span>  
  
-   <span data-ttu-id="dd503-375">Wenn diese Eigenschaft nicht explizit festgelegt wurde, gibt Get-Methode null zurück.</span><span class="sxs-lookup"><span data-stu-id="dd503-375">If this property has not been explicitly set, the getter returns null.</span></span>  
  
-   <span data-ttu-id="dd503-376">Wenn der Code, in ausgeführt wird einem <xref:System.Transactions.Transaction> Kontext, wenn diese Eigenschaft löst eine Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="dd503-376">If the code is executing in a <xref:System.Transactions.Transaction> context, setting this property throws an exception.</span></span>  
  
-   <span data-ttu-id="dd503-377">Wenn diese Eigenschaft festgelegt und eine neue <xref:System.Transactions.Transaction> wird geöffnet, eine Ausnahme wird ausgelöst, wenn eine Abfrage oder Aktualisierung ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="dd503-377">If this property is set and a new <xref:System.Transactions.Transaction> is opened, an exception is thrown when a query or update is executed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Translate">
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dd503-378">Konvertiert einen vorhandenen <see cref="T:System.Data.IDataReader" /> auf Objekte.</span><span class="sxs-lookup"><span data-stu-id="dd503-378">Converts an existing <see cref="T:System.Data.IDataReader" /> to objects.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd503-379">Jede Zeile in der <xref:System.Data.IDataReader> konvertiert wird, auf ein Objekt in der <xref:System.Collections.Generic.IEnumerable%601>.</span><span class="sxs-lookup"><span data-stu-id="dd503-379">Each row in the <xref:System.Data.IDataReader> is converted to an object in the <xref:System.Collections.Generic.IEnumerable%601>.</span></span>  
  
```  
public IEnumerable<T> Translate<T>(IDataReader reader) {}  
```  
  
 <span data-ttu-id="dd503-380">Beschreibung: Diese Methode wird verwendet, um das Konvertieren einer vorhandenen <xref:System.Data.Common.DbDataReader> auf Objekte.</span><span class="sxs-lookup"><span data-stu-id="dd503-380">Description: This method is used to convert an existing <xref:System.Data.Common.DbDataReader> to objects.</span></span> <span data-ttu-id="dd503-381">Jede Zeile in der <xref:System.Data.Common.DbDataReader> konvertiert wird, auf ein Objekt in der <xref:System.Collections.Generic.IEnumerable%601>.</span><span class="sxs-lookup"><span data-stu-id="dd503-381">Each row in the <xref:System.Data.Common.DbDataReader> is converted to an object in the <xref:System.Collections.Generic.IEnumerable%601>.</span></span>  
  
 <span data-ttu-id="dd503-382">**Generische Parameter:**</span><span class="sxs-lookup"><span data-stu-id="dd503-382">**Generic parameters:**</span></span>  
  
 <span data-ttu-id="dd503-383">`T`: Siehe <xref:System.Data.Linq.DataContext.ExecuteQuery%2A>.</span><span class="sxs-lookup"><span data-stu-id="dd503-383">`T`: See <xref:System.Data.Linq.DataContext.ExecuteQuery%2A>.</span></span>  
  
 <span data-ttu-id="dd503-384">**Parameter:**</span><span class="sxs-lookup"><span data-stu-id="dd503-384">**Parameters:**</span></span>  
  
 <span data-ttu-id="dd503-385">`Query`: Siehe die Beschreibung für den Befehl unter <xref:System.Data.Linq.DataContext.ExecuteCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="dd503-385">`Query`: See the description for command under <xref:System.Data.Linq.DataContext.ExecuteCommand%2A>.</span></span>  
  
 <span data-ttu-id="dd503-386">`Parameters`: Siehe die Beschreibung für den Parameter unter <xref:System.Data.Linq.DataContext.ExecuteCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="dd503-386">`Parameters`: See the description for parameters under <xref:System.Data.Linq.DataContext.ExecuteCommand%2A>.</span></span>  
  
 <span data-ttu-id="dd503-387">**-Rückgabetyp:**</span><span class="sxs-lookup"><span data-stu-id="dd503-387">**Return type:**</span></span>  
  
 <span data-ttu-id="dd503-388"><xref:System.Collections.Generic.IEnumerable%601>: Auflistung von Objekten, die durch die Konvertierung zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="dd503-388"><xref:System.Collections.Generic.IEnumerable%601>: collection of objects returned by the conversion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Translate">
      <MemberSignature Language="C#" Value="public System.Data.Linq.IMultipleResults Translate (System.Data.Common.DbDataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Linq.IMultipleResults Translate(class System.Data.Common.DbDataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.Translate(System.Data.Common.DbDataReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function Translate (reader As DbDataReader) As IMultipleResults" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Linq::IMultipleResults ^ Translate(System::Data::Common::DbDataReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.Translate : System.Data.Common.DbDataReader -&gt; System.Data.Linq.IMultipleResults" Usage="dataContext.Translate reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.IMultipleResults</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="dd503-389">Der zu konvertierende <see cref="T:System.Data.IDataReader" />.</span><span class="sxs-lookup"><span data-stu-id="dd503-389">The <see cref="T:System.Data.IDataReader" /> to be converted.</span></span></param>
        <summary><span data-ttu-id="dd503-390">Konvertiert einen vorhandenen <see cref="T:System.Data.Common.DbDataReader" /> auf Objekte.</span><span class="sxs-lookup"><span data-stu-id="dd503-390">Converts an existing <see cref="T:System.Data.Common.DbDataReader" /> to objects.</span></span></summary>
        <returns><span data-ttu-id="dd503-391">Eine Liste von Objekten, die durch die Konvertierung zurückgegeben werden soll.</span><span class="sxs-lookup"><span data-stu-id="dd503-391">A list of objects returned by the conversion.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Translate">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable Translate (Type elementType, System.Data.Common.DbDataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerable Translate(class System.Type elementType, class System.Data.Common.DbDataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.Translate(System.Type,System.Data.Common.DbDataReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function Translate (elementType As Type, reader As DbDataReader) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerable ^ Translate(Type ^ elementType, System::Data::Common::DbDataReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.Translate : Type * System.Data.Common.DbDataReader -&gt; System.Collections.IEnumerable" Usage="dataContext.Translate (elementType, reader)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementType" Type="System.Type" />
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" />
      </Parameters>
      <Docs>
        <param name="elementType"><span data-ttu-id="dd503-392">Der Typ des der <see cref="T:System.Collections.Generic.IEnumerable`1" /> zurückgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="dd503-392">The type of the <see cref="T:System.Collections.Generic.IEnumerable`1" /> to be returned.</span></span>  
  
<span data-ttu-id="dd503-393">Der Algorithmus für Vergleiche von Spalten im Resultset auf Felder und Eigenschaften im Objekt funktioniert folgendermaßen:</span><span class="sxs-lookup"><span data-stu-id="dd503-393">The algorithm for matching columns in the result to fields and properties in the object works as follows:</span></span> 
<span data-ttu-id="dd503-394">Wenn ein Feld oder eine Eigenschaft zu einem bestimmten Spaltennamen zugeordnet ist, wird der Spaltenname im Resultset erwartet.</span><span class="sxs-lookup"><span data-stu-id="dd503-394">If a field or property is mapped to a particular column name, that column name is expected in the resultset.</span></span>  
  
<span data-ttu-id="dd503-395">Wenn ein Feld oder Eigenschaft nicht zugeordnet ist, wird eine Spalte mit dem gleichen Namen wie das Feld oder Eigenschaft im Resultset erwartet.</span><span class="sxs-lookup"><span data-stu-id="dd503-395">If a field or property is not mapped, a column with the same name as the field or property is expected in the resultset.</span></span>  
  
<span data-ttu-id="dd503-396">Der Vergleich wird ausgeführt, durch die Groß-/ Kleinschreibung wird zuerst gesucht.</span><span class="sxs-lookup"><span data-stu-id="dd503-396">The comparison is performed by looking for a case-sensitive match first.</span></span> <span data-ttu-id="dd503-397">Wenn dieser Zuordnung nicht gefunden wird, eine nachfolgende Suche ist für eine Übereinstimmung der Groß-/Kleinschreibung auftritt.</span><span class="sxs-lookup"><span data-stu-id="dd503-397">If this match is not found, a subsequent search is occurs for a case-insensitive match.</span></span>  
  
<span data-ttu-id="dd503-398">Die Abfrage muss alle überwachten Felder und Eigenschaften des Objekts (mit Ausnahme derer, die im zurückgestellten Modus geladen werden) zurückgeben. wenn alle folgenden Bedingungen erfüllt sind:</span><span class="sxs-lookup"><span data-stu-id="dd503-398">The query must return all the tracked fields and properties of the object (except those that are loaded on a deferred basis) when all the following conditions are true:</span></span> 
 <span data-ttu-id="dd503-399"><c>T</c> stellt eine Entität dar, die explizit von <see cref="T:System.Data.Linq.DataContext" /> überwacht wird.</span><span class="sxs-lookup"><span data-stu-id="dd503-399"><c>T</c> is an entity explicitly tracked by the <see cref="T:System.Data.Linq.DataContext" />.</span></span>  
  
 <span data-ttu-id="dd503-400"><see cref="P:System.Data.Linq.DataContext.ObjectTrackingEnabled" /> ist <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="dd503-400"><see cref="P:System.Data.Linq.DataContext.ObjectTrackingEnabled" /> is <see langword="true" />.</span></span>  
  
<span data-ttu-id="dd503-401">Die Entität über einen Primärschlüssel verfügt.</span><span class="sxs-lookup"><span data-stu-id="dd503-401">The entity has a primary key.</span></span>  
  
<span data-ttu-id="dd503-402">Andernfalls wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="dd503-402">Otherwise an exception is thrown.</span></span></param>
        <param name="reader"><span data-ttu-id="dd503-403">Der zu konvertierende <see cref="T:System.Data.IDataReader" />.</span><span class="sxs-lookup"><span data-stu-id="dd503-403">The <see cref="T:System.Data.IDataReader" /> to be converted.</span></span></param>
        <summary><span data-ttu-id="dd503-404">Konvertiert einen vorhandenen <see cref="T:System.Data.Common.DbDataReader" /> auf Objekte.</span><span class="sxs-lookup"><span data-stu-id="dd503-404">Converts an existing <see cref="T:System.Data.Common.DbDataReader" /> to objects.</span></span></summary>
        <returns><span data-ttu-id="dd503-405">Eine Liste von Objekten, die durch die Konvertierung zurückgegeben werden soll.</span><span class="sxs-lookup"><span data-stu-id="dd503-405">A list of objects returned by the conversion.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Translate&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;TResult&gt; Translate&lt;TResult&gt; (System.Data.Common.DbDataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt; Translate&lt;TResult&gt;(class System.Data.Common.DbDataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.Translate``1(System.Data.Common.DbDataReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function Translate(Of TResult) (reader As DbDataReader) As IEnumerable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Collections::Generic::IEnumerable&lt;TResult&gt; ^ Translate(System::Data::Common::DbDataReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.Translate : System.Data.Common.DbDataReader -&gt; seq&lt;'Result&gt;" Usage="dataContext.Translate reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" />
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="dd503-406">Der Typ des der <see cref="T:System.Collections.Generic.IEnumerable`1" /> zurückgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="dd503-406">The type of the <see cref="T:System.Collections.Generic.IEnumerable`1" /> to be returned.</span></span></typeparam>
        <param name="reader"><span data-ttu-id="dd503-407">Der zu konvertierende <see cref="T:System.Data.IDataReader" />.</span><span class="sxs-lookup"><span data-stu-id="dd503-407">The <see cref="T:System.Data.IDataReader" /> to be converted.</span></span></param>
        <summary><span data-ttu-id="dd503-408">Konvertiert einen vorhandenen <see cref="T:System.Data.Common.DbDataReader" /> auf Objekte.</span><span class="sxs-lookup"><span data-stu-id="dd503-408">Converts an existing <see cref="T:System.Data.Common.DbDataReader" /> to objects.</span></span></summary>
        <returns><span data-ttu-id="dd503-409">Eine Auflistung von Objekten, die durch die Konvertierung zurückgegeben werden soll.</span><span class="sxs-lookup"><span data-stu-id="dd503-409">A collection of objects returned by the conversion.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>