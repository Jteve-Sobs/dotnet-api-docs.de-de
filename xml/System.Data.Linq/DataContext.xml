<Type Name="DataContext" FullName="System.Data.Linq.DataContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4dec371eab23b9b51981b3e008c438d68e467356" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73347090" /></Metadata><TypeSignature Language="C#" Value="public class DataContext : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataContext extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.DataContext" />
  <TypeSignature Language="VB.NET" Value="Public Class DataContext&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataContext : IDisposable" />
  <TypeSignature Language="F#" Value="type DataContext = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="0cefd-101">Stellt den Haupteinstiegspunkt für das LINQ to SQL-Framework dar.</span><span class="sxs-lookup"><span data-stu-id="0cefd-101">Represents the main entry point for the LINQ to SQL framework.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cefd-102">Der <xref:System.Data.Linq.DataContext> ist die Quelle aller Entitäten, die über eine Datenbankverbindung zugeordnet sind.</span><span class="sxs-lookup"><span data-stu-id="0cefd-102">The <xref:System.Data.Linq.DataContext> is the source of all entities mapped over a database connection.</span></span> <span data-ttu-id="0cefd-103">Es verfolgt Änderungen, die Sie an allen abgerufenen Entitäten vorgenommen haben, und verwaltet einen "Identitäts Cache", mit dem sichergestellt wird, dass Entitäten, die mehrmals abgerufen werden, mithilfe derselben Objektinstanz dargestellt werden.</span><span class="sxs-lookup"><span data-stu-id="0cefd-103">It tracks changes that you made to all retrieved entities and maintains an "identity cache" that guarantees that entities retrieved more than one time are represented by using the same object instance.</span></span>  
  
 <span data-ttu-id="0cefd-104">Im Allgemeinen ist eine <xref:System.Data.Linq.DataContext> Instanz so konzipiert, dass Sie für eine "Arbeitseinheit" zuletzt verwendet wird, aber die Anwendung definiert diesen Begriff.</span><span class="sxs-lookup"><span data-stu-id="0cefd-104">In general, a <xref:System.Data.Linq.DataContext> instance is designed to last for one "unit of work" however your application defines that term.</span></span> <span data-ttu-id="0cefd-105">Ein <xref:System.Data.Linq.DataContext> ist einfach und kann nicht aufwendig erstellt werden.</span><span class="sxs-lookup"><span data-stu-id="0cefd-105">A <xref:System.Data.Linq.DataContext> is lightweight and is not expensive to create.</span></span> <span data-ttu-id="0cefd-106">Eine typische [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] Anwendung erstellt <xref:System.Data.Linq.DataContext> Instanzen im Methoden Bereich oder als Member kurzlebiger Klassen, die einen logischen Satz verwandter Daten Bank Vorgänge darstellen.</span><span class="sxs-lookup"><span data-stu-id="0cefd-106">A typical [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] application creates <xref:System.Data.Linq.DataContext> instances at method scope or as a member of short-lived classes that represent a logical set of related database operations.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0cefd-107">Initialisiert eine neue Instanz der <see cref="T:System.Data.Linq.DataContext" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="0cefd-107">Initializes a new instance of the <see cref="T:System.Data.Linq.DataContext" /> class.</span></span> <span data-ttu-id="0cefd-108">Die Verbindungszeichenfolge, die Sie verwenden, kann eine ADO.NET-Verbindungszeichenfolge sein.</span><span class="sxs-lookup"><span data-stu-id="0cefd-108">The connection string you use can be an ADO.NET connection string.</span></span> <span data-ttu-id="0cefd-109">Sie können auch einen Dateinamen für eine SQL Server Express- oder SQL Server Compact-Datei angeben.</span><span class="sxs-lookup"><span data-stu-id="0cefd-109">You can also specify a filename to a SQL Server Express or SQL Server Compact file.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContext (System.Data.IDbConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.IDbConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.#ctor(System.Data.IDbConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connection As IDbConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContext(System::Data::IDbConnection ^ connection);" />
      <MemberSignature Language="F#" Value="new System.Data.Linq.DataContext : System.Data.IDbConnection -&gt; System.Data.Linq.DataContext" Usage="new System.Data.Linq.DataContext connection" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.IDbConnection" />
      </Parameters>
      <Docs>
        <param name="connection"><span data-ttu-id="0cefd-110">Die Verbindung, die von [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="0cefd-110">The connection used by the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span></param>
        <summary><span data-ttu-id="0cefd-111">Initialisiert eine neue Instanz der <see cref="T:System.Data.Linq.DataContext" />-Klasse durch Verweisen auf die Verbindung, die von [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="0cefd-111">Initializes a new instance of the <see cref="T:System.Data.Linq.DataContext" /> class by referencing the connection used by the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cefd-112">Ein <xref:System.Data.Linq.DataContext> öffnet und schließt eine Datenbankverbindung nach Bedarf, wenn Sie eine geschlossene Verbindung oder eine Verbindungs Zeichenfolge bereitstellen.</span><span class="sxs-lookup"><span data-stu-id="0cefd-112">A <xref:System.Data.Linq.DataContext> opens and closes a database connection as needed if you provide a closed connection or a connection string.</span></span> <span data-ttu-id="0cefd-113">Im Allgemeinen sollten Sie nie `Dispose` auf einem <xref:System.Data.Linq.DataContext>anrufen müssen.</span><span class="sxs-lookup"><span data-stu-id="0cefd-113">In general, you should never have to call `Dispose` on a <xref:System.Data.Linq.DataContext>.</span></span> <span data-ttu-id="0cefd-114">Wenn Sie eine geöffnete Verbindung bereitstellen, wird Sie vom <xref:System.Data.Linq.DataContext> nicht geschlossen.</span><span class="sxs-lookup"><span data-stu-id="0cefd-114">If you provide an open connection, the <xref:System.Data.Linq.DataContext> will not close it.</span></span> <span data-ttu-id="0cefd-115">Instanziieren Sie daher keine <xref:System.Data.Linq.DataContext> mit einer geöffneten Verbindung, es sei denn, Sie haben einen guten Grund dafür.</span><span class="sxs-lookup"><span data-stu-id="0cefd-115">Therefore, do not instantiate a <xref:System.Data.Linq.DataContext> with an open connection unless you have a good reason to do this.</span></span> <span data-ttu-id="0cefd-116">In einer <xref:System.Transactions> Transaktion öffnet oder schließt eine <xref:System.Data.Linq.DataContext> keine Verbindung, um eine herauf Stufung zu vermeiden.</span><span class="sxs-lookup"><span data-stu-id="0cefd-116">In a <xref:System.Transactions> transaction, a <xref:System.Data.Linq.DataContext> will not open or close a connection to avoid promotion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContext (System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.IDbConnection connection, class System.Data.Linq.Mapping.MappingSource mapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.#ctor(System.Data.IDbConnection,System.Data.Linq.Mapping.MappingSource)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connection As IDbConnection, mapping As MappingSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContext(System::Data::IDbConnection ^ connection, System::Data::Linq::Mapping::MappingSource ^ mapping);" />
      <MemberSignature Language="F#" Value="new System.Data.Linq.DataContext : System.Data.IDbConnection * System.Data.Linq.Mapping.MappingSource -&gt; System.Data.Linq.DataContext" Usage="new System.Data.Linq.DataContext (connection, mapping)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.IDbConnection" />
        <Parameter Name="mapping" Type="System.Data.Linq.Mapping.MappingSource" />
      </Parameters>
      <Docs>
        <param name="connection"><span data-ttu-id="0cefd-117">Die Verbindung, die von .NET Framework verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="0cefd-117">The connection used by the .NET Framework.</span></span></param>
        <param name="mapping"><span data-ttu-id="0cefd-118">Eine Quelle für die Zuordnung.</span><span class="sxs-lookup"><span data-stu-id="0cefd-118">A source for mapping.</span></span></param>
        <summary><span data-ttu-id="0cefd-119">Initialisiert durch das Verweisen auf eine Verbindung und eine Zuordnungsquelle eine neue Instanz der <see cref="T:System.Data.Linq.DataContext" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="0cefd-119">Initializes a new instance of the <see cref="T:System.Data.Linq.DataContext" /> class by referencing a connection and a mapping source.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContext (string fileOrServerOrConnection, System.Data.Linq.Mapping.MappingSource mapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileOrServerOrConnection, class System.Data.Linq.Mapping.MappingSource mapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.#ctor(System.String,System.Data.Linq.Mapping.MappingSource)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileOrServerOrConnection As String, mapping As MappingSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContext(System::String ^ fileOrServerOrConnection, System::Data::Linq::Mapping::MappingSource ^ mapping);" />
      <MemberSignature Language="F#" Value="new System.Data.Linq.DataContext : string * System.Data.Linq.Mapping.MappingSource -&gt; System.Data.Linq.DataContext" Usage="new System.Data.Linq.DataContext (fileOrServerOrConnection, mapping)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileOrServerOrConnection" Type="System.String" />
        <Parameter Name="mapping" Type="System.Data.Linq.Mapping.MappingSource" />
      </Parameters>
      <Docs>
        <param name="fileOrServerOrConnection"><span data-ttu-id="0cefd-120">Dieses Argument kann eines der folgenden sein:</span><span class="sxs-lookup"><span data-stu-id="0cefd-120">This argument can be any one of the following:</span></span> 
<span data-ttu-id="0cefd-121">Der Name einer Datei, in der sich eine SQL Server Express-Datenbank befindet.</span><span class="sxs-lookup"><span data-stu-id="0cefd-121">The name of a file where a SQL Server Express database resides.</span></span>  
  
<span data-ttu-id="0cefd-122">Der Name eines Servers, auf dem sich eine Datenbank befindet.</span><span class="sxs-lookup"><span data-stu-id="0cefd-122">The name of a server where a database is present.</span></span> <span data-ttu-id="0cefd-123">In diesem Fall verwendet der Anbieter die Standarddatenbank für einen Benutzer.</span><span class="sxs-lookup"><span data-stu-id="0cefd-123">In this case the provider uses the default database for a user.</span></span>  
  
<span data-ttu-id="0cefd-124">Eine vollständige Verbindungszeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="0cefd-124">A complete connection string.</span></span> [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] <span data-ttu-id="0cefd-125">übergibt die Zeichenfolge unverändert an den Anbieter.</span><span class="sxs-lookup"><span data-stu-id="0cefd-125">just passes the string to the provider without modification.</span></span></param>
        <param name="mapping"><span data-ttu-id="0cefd-126">Eine Quelle für die Zuordnung.</span><span class="sxs-lookup"><span data-stu-id="0cefd-126">A source for mapping.</span></span></param>
        <summary><span data-ttu-id="0cefd-127">Initialisiert durch das Verweisen auf eine Dateiquelle und eine Zuordnungsquelle eine neue Instanz der <see cref="T:System.Data.Linq.DataContext" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="0cefd-127">Initializes a new instance of the <see cref="T:System.Data.Linq.DataContext" /> class by referencing a file source and a mapping source.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContext (string fileOrServerOrConnection);" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileOrServerOrConnection) cil managed" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileOrServerOrConnection As String)" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContext(System::String ^ fileOrServerOrConnection);" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="new System.Data.Linq.DataContext : string -&gt; System.Data.Linq.DataContext" Usage="new System.Data.Linq.DataContext fileOrServerOrConnection" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public DataContext (string connectionString);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContext(System::String ^ connectionString);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="new System.Data.Linq.DataContext : string -&gt; System.Data.Linq.DataContext" Usage="new System.Data.Linq.DataContext connectionString" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileOrServerOrConnection" Type="System.String" Index="0" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="connectionString" Type="System.String" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="fileOrServerOrConnection"><span data-ttu-id="0cefd-128">Dieses Argument kann eines der folgenden sein: Der Name einer Datei, in der sich eine SQL Server Express-Datenbank befindet.</span><span class="sxs-lookup"><span data-stu-id="0cefd-128">This argument can be any one of the following: The name of a file where a SQL Server Express database resides.</span></span>

<span data-ttu-id="0cefd-129">Der Name eines Servers, auf dem sich eine Datenbank befindet.</span><span class="sxs-lookup"><span data-stu-id="0cefd-129">The name of a server where a database is present.</span></span> <span data-ttu-id="0cefd-130">In diesem Fall verwendet der Anbieter die Standarddatenbank für einen Benutzer.</span><span class="sxs-lookup"><span data-stu-id="0cefd-130">In this case the provider uses the default database for a user.</span></span>  
  
<span data-ttu-id="0cefd-131">Eine vollständige Verbindungszeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="0cefd-131">A complete connection string.</span></span> <span data-ttu-id="0cefd-132">LINQ to SQL übergibt die Zeichenfolge unverändert an den Anbieter.</span><span class="sxs-lookup"><span data-stu-id="0cefd-132">LINQ to SQL just passes the string to the provider without modification.</span></span></param>
        <param name="connectionString"><span data-ttu-id="0cefd-133">Dieses Argument kann eines der folgenden sein: Der Name einer Datei, in der sich eine SQL Server Express-Datenbank befindet.</span><span class="sxs-lookup"><span data-stu-id="0cefd-133">This argument can be any one of the following: The name of a file where a SQL Server Express database resides.</span></span>

<span data-ttu-id="0cefd-134">Der Name eines Servers, auf dem sich eine Datenbank befindet.</span><span class="sxs-lookup"><span data-stu-id="0cefd-134">The name of a server where a database is present.</span></span> <span data-ttu-id="0cefd-135">In diesem Fall verwendet der Anbieter die Standarddatenbank für einen Benutzer.</span><span class="sxs-lookup"><span data-stu-id="0cefd-135">In this case the provider uses the default database for a user.</span></span>  
  
<span data-ttu-id="0cefd-136">Eine vollständige Verbindungszeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="0cefd-136">A complete connection string.</span></span> <span data-ttu-id="0cefd-137">LINQ to SQL übergibt die Zeichenfolge unverändert an den Anbieter.</span><span class="sxs-lookup"><span data-stu-id="0cefd-137">LINQ to SQL just passes the string to the provider without modification.</span></span></param>
        <summary><span data-ttu-id="0cefd-138">Initialisiert eine neue Instanz der <see cref="T:System.Data.Linq.DataContext" />-Klasse durch Verweisen auf eine Dateiquelle.</span><span class="sxs-lookup"><span data-stu-id="0cefd-138">Initializes a new instance of the <see cref="T:System.Data.Linq.DataContext" /> class by referencing a file source.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeConflicts">
      <MemberSignature Language="C#" Value="public System.Data.Linq.ChangeConflictCollection ChangeConflicts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.ChangeConflictCollection ChangeConflicts" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.ChangeConflicts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChangeConflicts As ChangeConflictCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Linq::ChangeConflictCollection ^ ChangeConflicts { System::Data::Linq::ChangeConflictCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChangeConflicts : System.Data.Linq.ChangeConflictCollection" Usage="System.Data.Linq.DataContext.ChangeConflicts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.ChangeConflictCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0cefd-139">Ruft eine Auflistung von Objekten ab, die beim Aufrufen von <see cref="M:System.Data.Linq.DataContext.SubmitChanges" /> Parallelitätskonflikte verursacht haben.</span><span class="sxs-lookup"><span data-stu-id="0cefd-139">Gets a collection of objects that caused concurrency conflicts when <see cref="M:System.Data.Linq.DataContext.SubmitChanges" /> was called.</span></span></summary>
        <value><span data-ttu-id="0cefd-140">Eine Sammlung von Objekten, die Parallelitätskonflikte verursacht haben.</span><span class="sxs-lookup"><span data-stu-id="0cefd-140">A collection of objects that caused concurrency conflicts.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cefd-141">Im folgenden Beispiel wird gezeigt, wie die Auflistung durchlaufen werden kann, um Konflikt Informationen abzurufen.</span><span class="sxs-lookup"><span data-stu-id="0cefd-141">The following example shows how the collection can be iterated over to retrieve conflict information.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.ObjectChangeConflict#1](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.objectchangeconflict/cs/program.cs#1)]
 [!code-vb[System.Data.Linq.ObjectChangeConflict#1](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.objectchangeconflict/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandTimeout">
      <MemberSignature Language="C#" Value="public int CommandTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CommandTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.CommandTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CommandTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CommandTimeout : int with get, set" Usage="System.Data.Linq.DataContext.CommandTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0cefd-142">Ruft einen Wert ab (oder legt diesen fest), der das Zeitlimit (in Sekunden) für Abfragen erhöht, die andernfalls während der Standardzeitspanne zu einem Timeout führen würden.</span><span class="sxs-lookup"><span data-stu-id="0cefd-142">Gets or sets a value that increases the time-out period (in seconds) for queries that would otherwise time out during the default time-out period.</span></span></summary>
        <value><span data-ttu-id="0cefd-143">Ein ganzzahliger Wert, der den Timeout Zeitraum (in Sekunden) für Abfragen erhöht, bei denen andernfalls während der Standard Timeout Spanne ein Timeout auftritt.</span><span class="sxs-lookup"><span data-stu-id="0cefd-143">An integer value that increases the time-out period (in seconds) for queries that would otherwise time out during the default time-out period.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cefd-144">Diese Eigenschaft ruft das Timeout (in Sekunden) des Befehls ab, das zum Ausführen generierter Befehle (`IDbCommands`) verwendet wird, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="0cefd-144">This property gets or sets the command time-out (in seconds) used to execute generated commands (`IDbCommands`).</span></span> <span data-ttu-id="0cefd-145">Weitere Informationen finden Sie unter <xref:System.Data.IDbCommand.CommandTimeout%2A>.</span><span class="sxs-lookup"><span data-stu-id="0cefd-145">For more information, see <xref:System.Data.IDbCommand.CommandTimeout%2A>.</span></span>  
  
 <span data-ttu-id="0cefd-146">Wenn diese Eigenschaft nicht festgelegt ist, wird der Standardwert <xref:System.Data.IDbCommand.CommandTimeout%2A> für die Ausführung des Abfrage Befehls verwendet.</span><span class="sxs-lookup"><span data-stu-id="0cefd-146">When this property is not set, the default value of <xref:System.Data.IDbCommand.CommandTimeout%2A> is used for query command execution.</span></span> <span data-ttu-id="0cefd-147">Dieser Standardwert wird vom Speicher Anbieter festgelegt.</span><span class="sxs-lookup"><span data-stu-id="0cefd-147">This default value is set by the storage provider.</span></span> <span data-ttu-id="0cefd-148">Beachten Sie, dass einige Anbieter Ausnahmen auslösen können, wenn dieser Wert auf einen Wert ungleich 0 (null) festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="0cefd-148">Note that some providers may throw exceptions if this value is set to a non-zero value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbConnection Connection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.Connection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Connection As DbConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbConnection ^ Connection { System::Data::Common::DbConnection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Connection : System.Data.Common.DbConnection" Usage="System.Data.Linq.DataContext.Connection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0cefd-149">Ruft die vom Framework verwendete Verbindung ab.</span><span class="sxs-lookup"><span data-stu-id="0cefd-149">Gets the connection used by the framework.</span></span></summary>
        <value><span data-ttu-id="0cefd-150">Die Verbindung, die vom Framework verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="0cefd-150">The connection used by the framework.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cefd-151">Sie können diese Eigenschaft verwenden, um mit relationalem ADO.NET-Code zu interagieren.</span><span class="sxs-lookup"><span data-stu-id="0cefd-151">You can use this property to interoperate with relational ADO.NET code.</span></span>  
  
 <span data-ttu-id="0cefd-152">Die zurückgegebene Verbindung wird geschlossen, sofern Sie nicht explizit vom Benutzer geöffnet wurde.</span><span class="sxs-lookup"><span data-stu-id="0cefd-152">The returned connection will be closed unless it has been explicitly opened by the user.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDatabase">
      <MemberSignature Language="C#" Value="public void CreateDatabase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CreateDatabase() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.CreateDatabase" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateDatabase ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateDatabase();" />
      <MemberSignature Language="F#" Value="member this.CreateDatabase : unit -&gt; unit" Usage="dataContext.CreateDatabase " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0cefd-153">Erstellt eine Datenbank auf dem Server.</span><span class="sxs-lookup"><span data-stu-id="0cefd-153">Creates a database on the server.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cefd-154">Der Name der Datenbank wird mithilfe des folgenden Algorithmus abgeleitet:</span><span class="sxs-lookup"><span data-stu-id="0cefd-154">The name of the database is derived by using the following algorithm:</span></span>  
  
1. <span data-ttu-id="0cefd-155">Wenn eine Datenbank in der Verbindungs Zeichenfolge identifiziert wird, wird Ihr Name verwendet.</span><span class="sxs-lookup"><span data-stu-id="0cefd-155">If a database is identified in the connection string, its name is used.</span></span>  
1. <span data-ttu-id="0cefd-156">Wenn ein <xref:System.Data.Linq.Mapping.DatabaseAttribute> Attribut vorhanden ist, wird dessen <xref:System.Data.Linq.Mapping.DatabaseAttribute.Name%2A>-Eigenschaft als Name der Datenbank verwendet.</span><span class="sxs-lookup"><span data-stu-id="0cefd-156">If a <xref:System.Data.Linq.Mapping.DatabaseAttribute> attribute is present, its <xref:System.Data.Linq.Mapping.DatabaseAttribute.Name%2A> property is used as the name of the database.</span></span>  
1. <span data-ttu-id="0cefd-157">Wenn in der Verbindungs Zeichenfolge kein Daten Bank Kennzeichen vorhanden ist und eine stark typisierte <xref:System.Data.Linq.DataContext> verwendet wird, wird eine Datenbank erstellt, die denselben Namen wie die <xref:System.Data.Linq.DataContext> erbende Klasse hat.</span><span class="sxs-lookup"><span data-stu-id="0cefd-157">If there is no database tag in the connection string and a strongly typed <xref:System.Data.Linq.DataContext> is used, a database that has the same name as the <xref:System.Data.Linq.DataContext> inheriting class is created.</span></span>  
1. <span data-ttu-id="0cefd-158">Wenn eine schwach typisierte <xref:System.Data.Linq.DataContext> verwendet wird, wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="0cefd-158">If a weakly typed <xref:System.Data.Linq.DataContext> is used, an exception is thrown.</span></span>  
1. <span data-ttu-id="0cefd-159">Wenn die <xref:System.Data.Linq.DataContext> mithilfe eines Datei namens erstellt wurde, wird die Datenbank erstellt, die dem Dateinamen entspricht.</span><span class="sxs-lookup"><span data-stu-id="0cefd-159">If the <xref:System.Data.Linq.DataContext> has been created by using a file name, the database corresponding to that file name is created.</span></span>  
     
  
## Examples  
 <span data-ttu-id="0cefd-160">Der folgende Code zeigt, wie Sie eine temporäre Datenbank einrichten und dann entfernen.</span><span class="sxs-lookup"><span data-stu-id="0cefd-160">The following code shows how to set up a temporary database and then remove it.</span></span>  
  
 [!code-csharp[System.Data.Linq.DataContext#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.DataContext/cs/Program.cs#1)]
 [!code-vb[System.Data.Linq.DataContext#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.DataContext/vb/Module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/fb7f23c4-4572-4c38-9898-a287807d070c"><span data-ttu-id="0cefd-161">Gewusst wie: Dynamisches Erstellen einer neuen Datenbank (LINQ to SQL)</span><span class="sxs-lookup"><span data-stu-id="0cefd-161">How to: Dynamically Create a Database (LINQ to SQL)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/4ed76327-54a7-414b-82a9-7579bfcec04b"><span data-ttu-id="0cefd-162">SQL-CLR-Typenzuordnung (LINQ to SQL)</span><span class="sxs-lookup"><span data-stu-id="0cefd-162">SQL-CLR Type Mapping (LINQ to SQL)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateMethodCallQuery&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="protected internal System.Linq.IQueryable&lt;TResult&gt; CreateMethodCallQuery&lt;TResult&gt; (object instance, System.Reflection.MethodInfo methodInfo, params object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance class System.Linq.IQueryable`1&lt;!!TResult&gt; CreateMethodCallQuery&lt;TResult&gt;(object instance, class System.Reflection.MethodInfo methodInfo, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.CreateMethodCallQuery``1(System.Object,System.Reflection.MethodInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Linq::IQueryable&lt;TResult&gt; ^ CreateMethodCallQuery(System::Object ^ instance, System::Reflection::MethodInfo ^ methodInfo, ... cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.CreateMethodCallQuery : obj * System.Reflection.MethodInfo * obj[] -&gt; System.Linq.IQueryable&lt;'Result&gt;" Usage="dataContext.CreateMethodCallQuery (instance, methodInfo, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="methodInfo" Type="System.Reflection.MethodInfo" />
        <Parameter Name="parameters" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="0cefd-163">Der Typ der Elemente in der zurückgegebenen Auflistung.</span><span class="sxs-lookup"><span data-stu-id="0cefd-163">The type of the elements in the returned collection.</span></span></typeparam>
        <param name="instance"><span data-ttu-id="0cefd-164">Die Instanz des Methodenaufrufs (das aktuelle Objekt).</span><span class="sxs-lookup"><span data-stu-id="0cefd-164">The instance of the method invocation (the current object).</span></span></param>
        <param name="methodInfo"><span data-ttu-id="0cefd-165">Die <see cref="T:System.Reflection.MethodInfo" />, die die .NET-Methode identifiziert, die einer Datenbankmethode entspricht.</span><span class="sxs-lookup"><span data-stu-id="0cefd-165">The <see cref="T:System.Reflection.MethodInfo" /> that identifies the .NET method that corresponds to a database method.</span></span></param>
        <param name="parameters"><span data-ttu-id="0cefd-166">Das Parameterarray, das an den Befehl übergeben werden soll.</span><span class="sxs-lookup"><span data-stu-id="0cefd-166">The array of parameters to be passed to the command.</span></span></param>
        <summary><span data-ttu-id="0cefd-167">Führt die der angegebenen .NET-Methode zugeordnete Tabellenwert-Datenbankfunktion aus.</span><span class="sxs-lookup"><span data-stu-id="0cefd-167">Executes the table-valued database function associated with the specified .NET method.</span></span></summary>
        <returns><span data-ttu-id="0cefd-168">Von der Datenbankabfrage wurde eine Auflistung resultierender Werte zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="0cefd-168">A collection of resultant values returned by the database query.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cefd-169">Die <xref:System.Data.Linq.DataContext.CreateMethodCallQuery%2A>-Methode wird in automatisch generiertem Code verwendet und fungiert als Proxy für Datenbankfunktionen.</span><span class="sxs-lookup"><span data-stu-id="0cefd-169">The <xref:System.Data.Linq.DataContext.CreateMethodCallQuery%2A> method is used in automatically generated code and acts as a proxy to database functions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DatabaseExists">
      <MemberSignature Language="C#" Value="public bool DatabaseExists ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool DatabaseExists() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.DatabaseExists" />
      <MemberSignature Language="VB.NET" Value="Public Function DatabaseExists () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool DatabaseExists();" />
      <MemberSignature Language="F#" Value="member this.DatabaseExists : unit -&gt; bool" Usage="dataContext.DatabaseExists " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0cefd-170">Bestimmt, ob die zugeordnete Datenbank geöffnet werden kann.</span><span class="sxs-lookup"><span data-stu-id="0cefd-170">Determines whether the associated database can be opened.</span></span></summary>
        <returns><span data-ttu-id="0cefd-171"><see langword="true" />, wenn die angegebene Datenbank geöffnet werden kann, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0cefd-171"><see langword="true" /> if the specified database can be opened; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cefd-172">Diese Methode verwendet die Verbindung in der <xref:System.Data.Linq.DataContext.Connection%2A>-Eigenschaft, um zu versuchen, die zugehörige Datenbank zu öffnen.</span><span class="sxs-lookup"><span data-stu-id="0cefd-172">This method uses the connection in the <xref:System.Data.Linq.DataContext.Connection%2A> property to attempt to open the associated database.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cefd-173">Im folgenden Beispiel wird diese Methode verwendet, um zu bestimmen, ob eine Datenbank bereits vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="0cefd-173">The following example uses this method to determine whether a database already exists.</span></span>  
  
 [!code-csharp[System.Data.Linq.DataContext#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.DataContext/cs/Program.cs#1)]
 [!code-vb[System.Data.Linq.DataContext#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.DataContext/vb/Module1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeferredLoadingEnabled">
      <MemberSignature Language="C#" Value="public bool DeferredLoadingEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DeferredLoadingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.DeferredLoadingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property DeferredLoadingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DeferredLoadingEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DeferredLoadingEnabled : bool with get, set" Usage="System.Data.Linq.DataContext.DeferredLoadingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0cefd-174">Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob für 1:n- oder 1:1-Beziehungen ein verzögertes Laden stattfinden soll.</span><span class="sxs-lookup"><span data-stu-id="0cefd-174">Gets or sets a value that indicates whether to delay-load one-to-many or one-to-one relationships.</span></span></summary>
        <value><span data-ttu-id="0cefd-175"><see langword="true" />, wenn das verzögerte Laden aktiviert ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0cefd-175"><see langword="true" /> if deferred loading is enabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cefd-176">Wenn der Code auf eine dieser Beziehungen zugreift, wird NULL zurückgegeben, wenn die Beziehung eins-zu-eins ist, und eine leere Auflistung wird zurückgegeben, wenn Sie 1: n ist.</span><span class="sxs-lookup"><span data-stu-id="0cefd-176">When the code accesses one of these relationships, null is returned if the relationship is one-to-one, and an empty collection is returned if it is one-to-many.</span></span> <span data-ttu-id="0cefd-177">Die Beziehungen können weiterhin durch Festlegen der <xref:System.Data.Linq.DataContext.LoadOptions%2A>-Eigenschaft ausgefüllt werden.</span><span class="sxs-lookup"><span data-stu-id="0cefd-177">The relationships can still be filled by setting the <xref:System.Data.Linq.DataContext.LoadOptions%2A> property.</span></span>  
  
 <span data-ttu-id="0cefd-178">Das Hauptszenario für diese Eigenschaft besteht darin, dass Sie ein Teil des Objektmodells extrahieren und es senden können (z. b. an einen Webdienst).</span><span class="sxs-lookup"><span data-stu-id="0cefd-178">The main scenario for this property is to enable you to extract a piece of the object model and send it out (for example, to a Web service).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0cefd-179">Wenn diese Eigenschaft auf `false` festgelegt ist, nachdem eine Abfrage ausgeführt wurde, wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="0cefd-179">If this property is set to `false` after a query has been executed, an exception is thrown.</span></span> <span data-ttu-id="0cefd-180">Weitere Informationen finden Sie im Abschnitt **gültige Modi** .</span><span class="sxs-lookup"><span data-stu-id="0cefd-180">See the **Valid Modes** section below for more information.</span></span>  
  
## <a name="valid-modes"></a><span data-ttu-id="0cefd-181">Gültige Modi</span><span class="sxs-lookup"><span data-stu-id="0cefd-181">Valid modes</span></span>  
 <span data-ttu-id="0cefd-182">Das verzögerte Laden erfordert die Objekt Nachverfolgung.</span><span class="sxs-lookup"><span data-stu-id="0cefd-182">Deferred loading requires object tracking.</span></span> <span data-ttu-id="0cefd-183">Nur die folgenden drei Modi sind gültig:</span><span class="sxs-lookup"><span data-stu-id="0cefd-183">Only the following three modes are valid:</span></span>  
  
-   <span data-ttu-id="0cefd-184"><xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> = `false`.</span><span class="sxs-lookup"><span data-stu-id="0cefd-184"><xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> = `false`.</span></span> <span data-ttu-id="0cefd-185"><xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A> wird ignoriert und als `false`abgeleitet.</span><span class="sxs-lookup"><span data-stu-id="0cefd-185"><xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A> is ignored and inferred to be `false`.</span></span> <span data-ttu-id="0cefd-186">Dieses Verhalten entspricht einem schreibgeschützten <xref:System.Data.Linq.DataContext>.</span><span class="sxs-lookup"><span data-stu-id="0cefd-186">This behavior corresponds to a read-only <xref:System.Data.Linq.DataContext>.</span></span>  
  
-   <span data-ttu-id="0cefd-187"><xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> = `true`.</span><span class="sxs-lookup"><span data-stu-id="0cefd-187"><xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> = `true`.</span></span> <span data-ttu-id="0cefd-188"><xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A> = `false`.</span><span class="sxs-lookup"><span data-stu-id="0cefd-188"><xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A> = `false`.</span></span> <span data-ttu-id="0cefd-189">Diese Situation entspricht einem <xref:System.Data.Linq.DataContext>, mit dem Benutzer ein Objekt Diagramm mithilfe von <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> Direktiven laden können. das verzögerte Laden wird jedoch nicht aktiviert.</span><span class="sxs-lookup"><span data-stu-id="0cefd-189">This situation corresponds to a <xref:System.Data.Linq.DataContext> that allows users to load an object graph by using <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> directives, but it does not enable deferred loading.</span></span>  
  
-   <span data-ttu-id="0cefd-190">Beide werden auf `true`festgelegt.</span><span class="sxs-lookup"><span data-stu-id="0cefd-190">Both are set to `true`.</span></span> <span data-ttu-id="0cefd-191">Dies ist die Standardeinstellung.</span><span class="sxs-lookup"><span data-stu-id="0cefd-191">This is the default.</span></span>  
  
 <span data-ttu-id="0cefd-192">Die Flags können nicht geändert werden, nachdem eine Abfrage ausgeführt wurde.</span><span class="sxs-lookup"><span data-stu-id="0cefd-192">The flags may not be changed after a query has been executed.</span></span> <span data-ttu-id="0cefd-193">Jede Änderung nach der Ausführung der ersten Abfrage, die diese <xref:System.Data.Linq.DataContext> verwendet, löst eine Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="0cefd-193">Any change after the execution of the first query that uses that <xref:System.Data.Linq.DataContext> throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteDatabase">
      <MemberSignature Language="C#" Value="public void DeleteDatabase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteDatabase() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.DeleteDatabase" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteDatabase ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteDatabase();" />
      <MemberSignature Language="F#" Value="member this.DeleteDatabase : unit -&gt; unit" Usage="dataContext.DeleteDatabase " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0cefd-194">Löscht die zugeordnete Datenbank.</span><span class="sxs-lookup"><span data-stu-id="0cefd-194">Deletes the associated database.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cefd-195">Diese Methode verwendet die Verbindung in der <xref:System.Data.Linq.DataContext.Connection%2A>-Eigenschaft, um die Datenbank zu identifizieren, die gelöscht werden soll.</span><span class="sxs-lookup"><span data-stu-id="0cefd-195">This method uses the connection in the <xref:System.Data.Linq.DataContext.Connection%2A> property to identify the database to be deleted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cefd-196">Im folgenden Beispiel wird gezeigt, wie eine Datenbank gelöscht wird, die temporär erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="0cefd-196">The following example shows how to delete a database that has been temporarily created.</span></span>  
  
 [!code-csharp[System.Data.Linq.DataContext#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.DataContext/cs/Program.cs#1)]
 [!code-vb[System.Data.Linq.DataContext#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.DataContext/vb/Module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Data.Linq.DataContext.Dispose" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0cefd-197">Gibt die von der <see cref="T:System.Data.Linq.DataContext" />-Klasse verwendeten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="0cefd-197">Releases the resources used by the <see cref="T:System.Data.Linq.DataContext" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="dataContext.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0cefd-198">Gibt alle von der aktuellen Instanz der <see cref="T:System.Data.Linq.DataContext" />-Klasse verwendeten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="0cefd-198">Releases all resources used by the current instance of the <see cref="T:System.Data.Linq.DataContext" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="dataContext.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="0cefd-199"><see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</span><span class="sxs-lookup"><span data-stu-id="0cefd-199"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="0cefd-200">Gibt die von der <see cref="T:System.Data.Linq.DataContext" />-Klasse verwendeten nicht verwalteten Ressourcen und optional auch die verwalteten Ressource frei.</span><span class="sxs-lookup"><span data-stu-id="0cefd-200">Releases the unmanaged resources used by the <see cref="T:System.Data.Linq.DataContext" /> class and optionally releases the managed resource.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteCommand">
      <MemberSignature Language="C#" Value="public int ExecuteCommand (string command, params object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 ExecuteCommand(string command, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.ExecuteCommand(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteCommand (command As String, ParamArray parameters As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ExecuteCommand(System::String ^ command, ... cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.ExecuteCommand : string * obj[] -&gt; int" Usage="dataContext.ExecuteCommand (command, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="command"><span data-ttu-id="0cefd-201">Der auszuführende SQL-Befehl.</span><span class="sxs-lookup"><span data-stu-id="0cefd-201">The SQL command to be executed.</span></span></param>
        <param name="parameters"><span data-ttu-id="0cefd-202">Das Parameterarray, das an den Befehl übergeben werden soll.</span><span class="sxs-lookup"><span data-stu-id="0cefd-202">The array of parameters to be passed to the command.</span></span> <span data-ttu-id="0cefd-203">Beachten Sie folgendes Verhalten:</span><span class="sxs-lookup"><span data-stu-id="0cefd-203">Note the following behavior:</span></span> 
<span data-ttu-id="0cefd-204">Wenn die Anzahl der Objekte im Array geringer ist als die höchste in der Befehlszeichenfolge identifizierte Anzahl, wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="0cefd-204">If the number of objects in the array is less than the highest number identified in the command string, an exception is thrown.</span></span>  
  
<span data-ttu-id="0cefd-205">Wenn das Array Objekte enthält, auf die in der Befehlszeichenfolge nicht verwiesen wird, wird keine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="0cefd-205">If the array contains objects that are not referenced in the command string, no exception is thrown.</span></span>  
  
<span data-ttu-id="0cefd-206">NULL-Parameter werden in <see langword="DBNull.Value" /> konvertiert.</span><span class="sxs-lookup"><span data-stu-id="0cefd-206">If any one of the parameters is null, it is converted to <see langword="DBNull.Value" />.</span></span></param>
        <summary><span data-ttu-id="0cefd-207">Führt SQL-Befehle direkt in der Datenbank aus.</span><span class="sxs-lookup"><span data-stu-id="0cefd-207">Executes SQL commands directly on the database.</span></span></summary>
        <returns><span data-ttu-id="0cefd-208">Die Anzahl der vom ausgeführten Befehl geänderten Zeilen.</span><span class="sxs-lookup"><span data-stu-id="0cefd-208">The number of rows modified by the executed command.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cefd-209">Bei dieser Methode handelt es sich um einen Pass-Through-Mechanismus für Fälle, in denen [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] nicht ausreichend für ein bestimmtes Szenario bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="0cefd-209">This method is a pass-through mechanism for cases where [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] does not adequately provide for a particular scenario.</span></span>  
  
 <span data-ttu-id="0cefd-210">Die Syntax für den Befehl ist fast identisch mit der Syntax, die zum Erstellen einer ADO.net-`DataCommand`verwendet wurde.</span><span class="sxs-lookup"><span data-stu-id="0cefd-210">The syntax for the command is almost the same as the syntax used to create an ADO.NET `DataCommand`.</span></span> <span data-ttu-id="0cefd-211">Der einzige Unterschied besteht darin, wie die Parameter angegeben werden.</span><span class="sxs-lookup"><span data-stu-id="0cefd-211">The only difference is in how the parameters are specified.</span></span> <span data-ttu-id="0cefd-212">Insbesondere geben Sie Parameter an, indem Sie Sie in geschweifte Klammern ({...}) einschließen und beginnend mit 0 auflisten.</span><span class="sxs-lookup"><span data-stu-id="0cefd-212">Specifically, you specify parameters by enclosing them in braces ({…}) and enumerate them starting from 0.</span></span> <span data-ttu-id="0cefd-213">Der-Parameter wird dem gleichmäßig nummerierten Objekt im Parameter Array zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="0cefd-213">The parameter is associated with the equally numbered object in the parameters array.</span></span>  
  
 <span data-ttu-id="0cefd-214">`ExecuteQuery` und `ExecuteCommand` erlauben Ihnen, eine Variable Anzahl von Argumenten für die Parameter Ersetzung anzugeben.</span><span class="sxs-lookup"><span data-stu-id="0cefd-214">`ExecuteQuery` and `ExecuteCommand` allow you to specify a variable number of arguments for parameter substitution.</span></span> <span data-ttu-id="0cefd-215">Beispielsweise können Sie die Parameter angeben, wenn Sie executeQuery\<TResult-> aufrufen:</span><span class="sxs-lookup"><span data-stu-id="0cefd-215">For example, you can specify the parameters when invoking ExecuteQuery\<TResult>:</span></span>  
  
```  
db.ExecuteQuery<Customer>("select * from dbo.Customers where City = {0}", "London");  
```  
  
 <span data-ttu-id="0cefd-216">Ein weiteres Beispiel:</span><span class="sxs-lookup"><span data-stu-id="0cefd-216">And, another example:</span></span>  
  
```  
db.ExecuteCommand("UPDATE Products SET QuantityPerUnit = {0} WHERE ProductID = {1}", "24 boxes", 5);  
```  
  
 <span data-ttu-id="0cefd-217">Im folgenden Beispiel wird eine Verbindung geöffnet und ein SQL `UPDATE`-Befehl an die SQL-Engine weitergeleitet.</span><span class="sxs-lookup"><span data-stu-id="0cefd-217">The following example opens a connection and passes a SQL `UPDATE` command to the SQL engine.</span></span>  
  
   
  
## Examples  
 [!code-csharp[DLinqCommunicatingWithDatabase#3](~/samples/snippets/csharp/VS_Snippets_Data/DLinqCommunicatingWithDatabase/cs/Program.cs#3)]
 [!code-vb[DLinqCommunicatingWithDatabase#3](~/samples/snippets/visualbasic/VS_Snippets_Data/DLinqCommunicatingWithDatabase/vb/Module1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteDynamicDelete">
      <MemberSignature Language="C#" Value="protected internal void ExecuteDynamicDelete (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void ExecuteDynamicDelete(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.ExecuteDynamicDelete(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub ExecuteDynamicDelete (entity As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void ExecuteDynamicDelete(System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.ExecuteDynamicDelete : obj -&gt; unit" Usage="dataContext.ExecuteDynamicDelete entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity"><span data-ttu-id="0cefd-218">Die Entität, die gelöscht werden soll.</span><span class="sxs-lookup"><span data-stu-id="0cefd-218">The entity to be deleted.</span></span></param>
        <summary><span data-ttu-id="0cefd-219">Wird in Überschreibungsmethoden zum Löschen ausgeführt, um das Generieren und Ausführen von dynamischem SQL für Löschvorgänge an [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] zu delegieren.</span><span class="sxs-lookup"><span data-stu-id="0cefd-219">Executes, inside delete override methods, to redelegate to [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] the task of generating and executing dynamic SQL for delete operations.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cefd-220">Siehe <xref:System.Data.Linq.DataContext.ExecuteDynamicInsert%2A>.</span><span class="sxs-lookup"><span data-stu-id="0cefd-220">See <xref:System.Data.Linq.DataContext.ExecuteDynamicInsert%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteDynamicInsert">
      <MemberSignature Language="C#" Value="protected internal void ExecuteDynamicInsert (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void ExecuteDynamicInsert(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.ExecuteDynamicInsert(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub ExecuteDynamicInsert (entity As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void ExecuteDynamicInsert(System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.ExecuteDynamicInsert : obj -&gt; unit" Usage="dataContext.ExecuteDynamicInsert entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity"><span data-ttu-id="0cefd-221">Die Entität, die eingefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="0cefd-221">The entity to be inserted.</span></span></param>
        <summary><span data-ttu-id="0cefd-222">Wird in Überschreibungsmethoden zum Einfügen ausgeführt, um das Generieren und Ausführen von dynamischem SQL für Einfügevorgänge neu an [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] zu delegieren.</span><span class="sxs-lookup"><span data-stu-id="0cefd-222">Executes, inside insert override methods, to redelegate to [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] the task of generating and executing dynamic SQL for insert operations.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cefd-223">Beachten Sie die folgenden Überlegungen:</span><span class="sxs-lookup"><span data-stu-id="0cefd-223">Note the following considerations:</span></span>  
  
-   <span data-ttu-id="0cefd-224">Da die Methode über einen geschützten Modifizierer verfügt, erfordert ihre Verwendung eine Unterklassen <xref:System.Data.Linq.DataContext>.</span><span class="sxs-lookup"><span data-stu-id="0cefd-224">Because the method has a protected modifier, its use requires subclassing <xref:System.Data.Linq.DataContext>.</span></span>  
  
-   <span data-ttu-id="0cefd-225">Eine Ausnahme wird ausgelöst, wenn dieser Vorgang nicht innerhalb eines <xref:System.Data.Linq.DataContext.SubmitChanges%2A> Vorgangs aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="0cefd-225">An exception is thrown if this operation is not called inside a <xref:System.Data.Linq.DataContext.SubmitChanges%2A> operation.</span></span> <span data-ttu-id="0cefd-226">Es ist nicht vorgesehen, als eigenständigen Vorgang außerhalb des Bereichs eines <xref:System.Data.Linq.DataContext.SubmitChanges%2A> Vorgangs aufgerufen zu werden.</span><span class="sxs-lookup"><span data-stu-id="0cefd-226">It is not intended to be called as a stand-alone operation outside the scope of a <xref:System.Data.Linq.DataContext.SubmitChanges%2A> operation.</span></span> <span data-ttu-id="0cefd-227"><xref:System.Data.Linq.DataContext.SubmitChanges%2A> selbst Methoden zum Überschreiben aufrufen, wenn diese implementiert werden und die vorherigen Methoden in den Überschreibungs Methoden aufgerufen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="0cefd-227"><xref:System.Data.Linq.DataContext.SubmitChanges%2A> itself calls override methods if they are implemented and the previous methods are intended to be called inside the override methods.</span></span>  
  
-   <span data-ttu-id="0cefd-228">Es liegt in der Verantwortung des Entwicklers, die richtige Entität zu übergeben.</span><span class="sxs-lookup"><span data-stu-id="0cefd-228">It is the responsibility of the developer to pass in the correct entity.</span></span> <span data-ttu-id="0cefd-229">Die-Implementierung überprüft, ob die übergebenen Entität nachverfolgt wird.</span><span class="sxs-lookup"><span data-stu-id="0cefd-229">The implementation verifies that the passed-in entity is tracked.</span></span> <span data-ttu-id="0cefd-230">Es liegt jedoch in der Verantwortung des Entwicklers, die Bestellung beizubehalten oder die gleiche Entität zweimal zu übergeben.</span><span class="sxs-lookup"><span data-stu-id="0cefd-230">However, it is the responsibility of the developer to maintain the order or pass in the same entity two times.</span></span>  
  
-   <span data-ttu-id="0cefd-231">Es liegt in der Verantwortung des Entwicklers, die richtige dynamische API aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="0cefd-231">It is the responsibility of the developer to invoke the correct dynamic API.</span></span> <span data-ttu-id="0cefd-232">Beispielsweise kann in der `Update` Überschreibungs Methode nur die <xref:System.Data.Linq.DataContext.ExecuteDynamicUpdate%2A>-Methode aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="0cefd-232">For example, in the `Update` override method, only the <xref:System.Data.Linq.DataContext.ExecuteDynamicUpdate%2A> method can be called.</span></span> [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] <span data-ttu-id="0cefd-233">erkennt oder überprüft nicht, ob die aufgerufene dynamische Methode für den jeweiligen Vorgang gültig ist.</span><span class="sxs-lookup"><span data-stu-id="0cefd-233">does not detect or verify whether the invoked dynamic method matches the applicable operation.</span></span> <span data-ttu-id="0cefd-234">Die Ergebnisse sind nicht definiert, wenn eine nicht anwendbare Methode aufgerufen wird (z. b. das Aufrufen von <xref:System.Data.Linq.DataContext.ExecuteDynamicDelete%2A> für ein Objekt, das aktualisiert werden soll).</span><span class="sxs-lookup"><span data-stu-id="0cefd-234">The results are undefined if an inapplicable method is called (for example, calling <xref:System.Data.Linq.DataContext.ExecuteDynamicDelete%2A> for an object to be updated).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteDynamicUpdate">
      <MemberSignature Language="C#" Value="protected internal void ExecuteDynamicUpdate (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void ExecuteDynamicUpdate(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.ExecuteDynamicUpdate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub ExecuteDynamicUpdate (entity As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void ExecuteDynamicUpdate(System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.ExecuteDynamicUpdate : obj -&gt; unit" Usage="dataContext.ExecuteDynamicUpdate entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity"><span data-ttu-id="0cefd-235">Die Entität, die aktualisiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="0cefd-235">The entity to be updated.</span></span></param>
        <summary><span data-ttu-id="0cefd-236">Wird in Überschreibungsmethoden zum Aktualisieren ausgeführt, um das Generieren und Ausführen von dynamischem SQL für Aktualisierungsvorgänge an [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] zu delegieren.</span><span class="sxs-lookup"><span data-stu-id="0cefd-236">Executes, inside update override methods, to redelegate to [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] the task of generating and executing dynamic SQL for update operations.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cefd-237">Siehe <xref:System.Data.Linq.DataContext.ExecuteDynamicInsert%2A>.</span><span class="sxs-lookup"><span data-stu-id="0cefd-237">See <xref:System.Data.Linq.DataContext.ExecuteDynamicInsert%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteMethodCall">
      <MemberSignature Language="C#" Value="protected internal System.Data.Linq.IExecuteResult ExecuteMethodCall (object instance, System.Reflection.MethodInfo methodInfo, params object[] parameters);" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance class System.Data.Linq.IExecuteResult ExecuteMethodCall(object instance, class System.Reflection.MethodInfo methodInfo, object[] parameters) cil managed" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.ExecuteMethodCall(System.Object,System.Reflection.MethodInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; System::Data::Linq::IExecuteResult ^ ExecuteMethodCall(System::Object ^ instance, System::Reflection::MethodInfo ^ methodInfo, ... cli::array &lt;System::Object ^&gt; ^ parameters);" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.ExecuteMethodCall : obj * System.Reflection.MethodInfo * obj[] -&gt; System.Data.Linq.IExecuteResult" Usage="dataContext.ExecuteMethodCall (instance, methodInfo, parameters)" />
      <MemberSignature Language="C#" Value="protected System.Data.Linq.IExecuteResult ExecuteMethodCall (object instance, System.Reflection.MethodInfo methodInfo, params object[] parameters);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Data.Linq.IExecuteResult ExecuteMethodCall(object instance, class System.Reflection.MethodInfo methodInfo, object[] parameters) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Data::Linq::IExecuteResult ^ ExecuteMethodCall(System::Object ^ instance, System::Reflection::MethodInfo ^ methodInfo, ... cli::array &lt;System::Object ^&gt; ^ parameters);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.IExecuteResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="methodInfo" Type="System.Reflection.MethodInfo" />
        <Parameter Name="parameters" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="0cefd-238">Die Instanz des Methodenaufrufs (das aktuelle Objekt).</span><span class="sxs-lookup"><span data-stu-id="0cefd-238">The instance of the method invocation (the current object).</span></span></param>
        <param name="methodInfo"><span data-ttu-id="0cefd-239">Bezeichnet die einer Datenbankmethode entsprechende .NET-Methode.</span><span class="sxs-lookup"><span data-stu-id="0cefd-239">Identifies the .NET method that corresponds to a database method.</span></span></param>
        <param name="parameters"><span data-ttu-id="0cefd-240">Das Parameterarray, das an den Befehl übergeben werden soll.</span><span class="sxs-lookup"><span data-stu-id="0cefd-240">The array of parameters to be passed to the command.</span></span></param>
        <summary><span data-ttu-id="0cefd-241">Führt die der angegebenen .NET-Methode zugeordnete gespeicherte Datenbankprozedur oder Skalarfunktion aus.</span><span class="sxs-lookup"><span data-stu-id="0cefd-241">Executes the stored database procedure or scalar function associated with the specified .NET method.</span></span></summary>
        <returns><span data-ttu-id="0cefd-242">Das Ergebnis (Ausgabeparameter und Rückgabewert) der Ausführung der angegebenen Methode.</span><span class="sxs-lookup"><span data-stu-id="0cefd-242">The result (the return value and output parameters) of executing the specified method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cefd-243">Die <xref:System.Data.Linq.DataContext.ExecuteMethodCall%2A>-Methode wird in automatisch generiertem Code verwendet und fungiert als Proxy für Datenbankfunktionen.</span><span class="sxs-lookup"><span data-stu-id="0cefd-243">The <xref:System.Data.Linq.DataContext.ExecuteMethodCall%2A> method is used in automatically generated code and acts as a proxy to database functions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteQuery">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable ExecuteQuery (Type elementType, string query, params object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerable ExecuteQuery(class System.Type elementType, string query, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.ExecuteQuery(System.Type,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteQuery (elementType As Type, query As String, ParamArray parameters As Object()) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerable ^ ExecuteQuery(Type ^ elementType, System::String ^ query, ... cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.ExecuteQuery : Type * string * obj[] -&gt; System.Collections.IEnumerable" Usage="dataContext.ExecuteQuery (elementType, query, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementType" Type="System.Type" />
        <Parameter Name="query" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="elementType"><span data-ttu-id="0cefd-244">Der <see cref="T:System.Collections.Generic.IEnumerable`1" />-Typ für die Rückgabe.</span><span class="sxs-lookup"><span data-stu-id="0cefd-244">The type of the <see cref="T:System.Collections.Generic.IEnumerable`1" /> to be returned.</span></span>  
  
<span data-ttu-id="0cefd-245">Der Algorithmus für Vergleiche von Spalten im Ergebnis der Abfrage und Feldern oder Eigenschaften im Objekt funktioniert folgendermaßen:</span><span class="sxs-lookup"><span data-stu-id="0cefd-245">The algorithm for matching columns in the result of the query to fields or properties in the object works as follows:</span></span> 
<span data-ttu-id="0cefd-246">Wenn ein Feld oder eine Eigenschaft einem bestimmten Spaltennamen zugeordnet werden, wird der Spaltenname im Resultset erwartet.</span><span class="sxs-lookup"><span data-stu-id="0cefd-246">If a field or property is mapped to a particular column name, that column name is expected in the resultset.</span></span>  
  
<span data-ttu-id="0cefd-247">Wenn ein Feld oder eine Eigenschaft nicht zugeordnet werden, wird im Resultset eine Spalte mit dem gleichen Namen wie das Feld oder die Eigenschaft erwartet.</span><span class="sxs-lookup"><span data-stu-id="0cefd-247">If a field or property is not mapped, a column with the same name as the field or property is expected in the resultset.</span></span>  
  
<span data-ttu-id="0cefd-248">Der Vergleich wird ausgeführt, indem zuerst unter Beachtung der Groß-/Kleinschreibung nach einer Übereinstimmung gesucht wird.</span><span class="sxs-lookup"><span data-stu-id="0cefd-248">The comparison is performed by looking for a case-sensitive match first.</span></span> <span data-ttu-id="0cefd-249">Wenn dabei keine Übereinstimmung gefunden wird, wird die Suche erneut ausgeführt, dieses Mal jedoch, ohne die Groß- und Kleinschreibung zu beachten.</span><span class="sxs-lookup"><span data-stu-id="0cefd-249">If this match is not found, a subsequent search occurs for a case-insensitive match.</span></span>  
  
<span data-ttu-id="0cefd-250">Die Abfrage muss alle überwachten Felder und Eigenschaften des Objekts zurückgeben (mit Ausnahme derer, die mit Verzögerung geladen werden), wenn alle nachfolgend aufgeführten Bedingungen erfüllt sind:</span><span class="sxs-lookup"><span data-stu-id="0cefd-250">The query must return all the tracked fields and properties of the object (except those that are loaded on a deferred basis) when all the following conditions are true:</span></span> 
 <span data-ttu-id="0cefd-251"><c>T</c> stellt eine Entität dar, die explizit von <see cref="T:System.Data.Linq.DataContext" /> überwacht wird.</span><span class="sxs-lookup"><span data-stu-id="0cefd-251"><c>T</c> is an entity explicitly tracked by the <see cref="T:System.Data.Linq.DataContext" />.</span></span>  
  
 <span data-ttu-id="0cefd-252"><see cref="P:System.Data.Linq.DataContext.ObjectTrackingEnabled" /> ist <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="0cefd-252"><see cref="P:System.Data.Linq.DataContext.ObjectTrackingEnabled" /> is <see langword="true" />.</span></span>  
  
<span data-ttu-id="0cefd-253">Die Entität weist einen Primärschlüssel auf.</span><span class="sxs-lookup"><span data-stu-id="0cefd-253">The entity has a primary key.</span></span>  
  
<span data-ttu-id="0cefd-254">Andernfalls wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="0cefd-254">Otherwise an exception is thrown.</span></span></param>
        <param name="query"><span data-ttu-id="0cefd-255">Die SQL-Abfrage, die ausgeführt werden soll.</span><span class="sxs-lookup"><span data-stu-id="0cefd-255">The SQL query to be executed.</span></span></param>
        <param name="parameters"><span data-ttu-id="0cefd-256">Das Parameterarray, das an den Befehl übergeben werden soll.</span><span class="sxs-lookup"><span data-stu-id="0cefd-256">The array of parameters to be passed to the command.</span></span> <span data-ttu-id="0cefd-257">Beachten Sie folgendes Verhalten:</span><span class="sxs-lookup"><span data-stu-id="0cefd-257">Note the following behavior:</span></span> 
<span data-ttu-id="0cefd-258">Wenn die Anzahl der Objekte im Array geringer ist als die höchste in der Befehlszeichenfolge identifizierte Anzahl, wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="0cefd-258">If the number of objects in the array is less than the highest number identified in the command string, an exception is thrown.</span></span>  
  
<span data-ttu-id="0cefd-259">Wenn das Array Objekte enthält, auf die in der Befehlszeichenfolge nicht verwiesen wird, wird keine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="0cefd-259">If the array contains objects that are not referenced in the command string, no exception is thrown.</span></span>  
  
<span data-ttu-id="0cefd-260">Wenn ein Parameter <see langword="null" /> ist, wird dieser in <see langword="DBNull.Value" /> konvertiert.</span><span class="sxs-lookup"><span data-stu-id="0cefd-260">If a parameter is <see langword="null" />, it is converted to <see langword="DBNull.Value" />.</span></span></param>
        <summary><span data-ttu-id="0cefd-261">Führt SQL-Abfragen direkt in der Datenbank aus.</span><span class="sxs-lookup"><span data-stu-id="0cefd-261">Executes SQL queries directly on the database.</span></span></summary>
        <returns><span data-ttu-id="0cefd-262">Eine <see cref="T:System.Collections.Generic.IEnumerable`1" />-Auflistung von Objekten, die von der Abfrage zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="0cefd-262">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> collection of objects returned by the query.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteQuery&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;TResult&gt; ExecuteQuery&lt;TResult&gt; (string query, params object[] parameters);" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt; ExecuteQuery&lt;TResult&gt;(string query, object[] parameters) cil managed" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.ExecuteQuery``1(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteQuery(Of TResult) (query As String, ParamArray parameters As Object()) As IEnumerable(Of TResult)" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Collections::Generic::IEnumerable&lt;TResult&gt; ^ ExecuteQuery(System::String ^ query, ... cli::array &lt;System::Object ^&gt; ^ parameters);" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.ExecuteQuery : string * obj[] -&gt; seq&lt;'Result&gt;" Usage="dataContext.ExecuteQuery (query, parameters)" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;TResult&gt; ExecuteQuery&lt;TResult&gt; (string query, params object[] parameters) where TResult : new();" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt; ExecuteQuery&lt;.ctor TResult&gt;(string query, object[] parameters) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteQuery(Of TResult As New) (query As String, ParamArray parameters As Object()) As IEnumerable(Of TResult)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; where TResult : gcnew() System::Collections::Generic::IEnumerable&lt;TResult&gt; ^ ExecuteQuery(System::String ^ query, ... cli::array &lt;System::Object ^&gt; ^ parameters);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.ExecuteQuery : string * obj[] -&gt; seq&lt;'Result (requires 'Result : (new : unit -&gt; 'Result))&gt; (requires 'Result : (new : unit -&gt; 'Result))" Usage="dataContext.ExecuteQuery (query, parameters)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="0cefd-263">Der Typ der Elemente in der zurückgegebenen Auflistung.</span><span class="sxs-lookup"><span data-stu-id="0cefd-263">The type of the elements in the returned collection.</span></span></typeparam>
        <param name="query"><span data-ttu-id="0cefd-264">Die SQL-Abfrage, die ausgeführt werden soll.</span><span class="sxs-lookup"><span data-stu-id="0cefd-264">The SQL query to be executed.</span></span></param>
        <param name="parameters"><span data-ttu-id="0cefd-265">Das Parameterarray, das an den Befehl übergeben werden soll.</span><span class="sxs-lookup"><span data-stu-id="0cefd-265">The array of parameters to be passed to the command.</span></span> <span data-ttu-id="0cefd-266">Beachten Sie folgendes Verhalten:</span><span class="sxs-lookup"><span data-stu-id="0cefd-266">Note the following behavior:</span></span> 
<span data-ttu-id="0cefd-267">Wenn die Anzahl der Objekte im Array geringer ist als die höchste in der Befehlszeichenfolge identifizierte Anzahl, wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="0cefd-267">If the number of objects in the array is less than the highest number identified in the command string, an exception is thrown.</span></span>  
  
<span data-ttu-id="0cefd-268">Wenn das Array Objekte enthält, auf die in der Befehlszeichenfolge nicht verwiesen wird, wird keine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="0cefd-268">If the array contains objects that are not referenced in the command string, no exception is thrown.</span></span>  
  
<span data-ttu-id="0cefd-269">NULL-Parameter werden in <see langword="DBNull.Value" /> konvertiert.</span><span class="sxs-lookup"><span data-stu-id="0cefd-269">If a parameter is null, it is converted to <see langword="DBNull.Value" />.</span></span></param>
        <summary><span data-ttu-id="0cefd-270">Führt SQL-Abfragen direkt in der Datenbank aus und gibt Objekte zurück.</span><span class="sxs-lookup"><span data-stu-id="0cefd-270">Executes SQL queries directly on the database and returns objects.</span></span></summary>
        <returns><span data-ttu-id="0cefd-271">Eine Auflistung von der Abfrage zurückgegebener Objekte.</span><span class="sxs-lookup"><span data-stu-id="0cefd-271">A collection of objects returned by the query.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cefd-272">Bei dieser Methode handelt es sich um einen Pass-Through-Mechanismus für Fälle, in denen [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] nicht für ein bestimmtes Szenario bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="0cefd-272">This method is a pass-through mechanism for cases where [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] does not provide for a particular scenario.</span></span>  
  
 <span data-ttu-id="0cefd-273">Der Algorithmus für die Übereinstimmung von Spalten im Ergebnis der Abfrage mit Feldern und Eigenschaften im-Objekt funktioniert wie folgt:</span><span class="sxs-lookup"><span data-stu-id="0cefd-273">The algorithm for matching columns in the result of the query to fields and properties in the object works as follows:</span></span>  
  
-   <span data-ttu-id="0cefd-274">Wenn ein Feld oder eine Eigenschaft einem bestimmten Spaltennamen zugeordnet werden, wird der Spaltenname im Resultset erwartet.</span><span class="sxs-lookup"><span data-stu-id="0cefd-274">If a field or property is mapped to a particular column name, that column name is expected in the resultset.</span></span>  
  
-   <span data-ttu-id="0cefd-275">Wenn ein Feld oder eine Eigenschaft nicht zugeordnet werden, wird im Resultset eine Spalte mit dem gleichen Namen wie das Feld oder die Eigenschaft erwartet.</span><span class="sxs-lookup"><span data-stu-id="0cefd-275">If a field or property is not mapped, a column with the same name as the field or property is expected in the resultset.</span></span>  
  
-   <span data-ttu-id="0cefd-276">Der Vergleich wird ausgeführt, indem zuerst nach der Groß-/Kleinschreibung gesucht wird.</span><span class="sxs-lookup"><span data-stu-id="0cefd-276">The comparison is performed by first looking for a case-sensitive match.</span></span> <span data-ttu-id="0cefd-277">Wenn eine solche Übereinstimmung nicht gefunden wird, findet eine nachfolgende Suche bei einer Suche ohne Berücksichtigung der Groß-/Kleinschreibung statt</span><span class="sxs-lookup"><span data-stu-id="0cefd-277">If such a match is not found, a subsequent search occurs for a case-insensitive match.</span></span>  
  
-   <span data-ttu-id="0cefd-278">Die Abfrage muss alle nach verfolgten Felder und Eigenschaften des Objekts zurückgeben (abgesehen von denjenigen, die dem verzögerten Laden unterliegen), wenn Folgendes zutrifft:</span><span class="sxs-lookup"><span data-stu-id="0cefd-278">The query must return all the tracked fields and properties of the object (apart from those subject to deferred loading) when all the following are true:</span></span>  
  
    -   <span data-ttu-id="0cefd-279">, Wenn `<T>` eine Entität ist, die vom <xref:System.Data.Linq.DataContext>explizit nachverfolgt wird.</span><span class="sxs-lookup"><span data-stu-id="0cefd-279">If `<T>` is an entity explicitly tracked by the <xref:System.Data.Linq.DataContext>.</span></span>  
  
    -   <span data-ttu-id="0cefd-280">ObjectTrackingEnabled ist "true".</span><span class="sxs-lookup"><span data-stu-id="0cefd-280">ObjectTrackingEnabled is true.</span></span>  
  
    -   <span data-ttu-id="0cefd-281">Die Entität weist einen Primärschlüssel auf.</span><span class="sxs-lookup"><span data-stu-id="0cefd-281">The entity has a primary key.</span></span>  
  
     <span data-ttu-id="0cefd-282">Andernfalls wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="0cefd-282">Otherwise an exception is thrown.</span></span>  
  
-   <span data-ttu-id="0cefd-283">In allen anderen Fällen kann die Abfrage nur eine Teilmenge der nach verfolgten Felder und Eigenschaften für das-Objekt abrufen.</span><span class="sxs-lookup"><span data-stu-id="0cefd-283">In all other cases, the query can retrieve just a subset of the tracked fields and properties for the object.</span></span>  
  
 <span data-ttu-id="0cefd-284">Der folgende C# Code Ausschnitt zeigt eine Verwendung für diese Methode:</span><span class="sxs-lookup"><span data-stu-id="0cefd-284">The following C# snippet shows one use for this method:</span></span>  
  
```  
var customers = db.ExecuteQuery<Customer>(@"SELECT CustomerID, CompanyName, ContactName, ContactTitle,   
   Address, City, Region, PostalCode, Country, Phone, Fax  
   FROM   dbo.Customers  
   WHERE  City = {0}", "London");  
  
foreach (Customer c in customers)  
   Console.WriteLine(c.ContactName);  
```  
  
 <span data-ttu-id="0cefd-285">In Visual Basic</span><span class="sxs-lookup"><span data-stu-id="0cefd-285">In Visual Basic</span></span>  
  
```  
Dim customers = db.ExecuteQuery(Of Customer)("SELECT CustomerID, _    CompanyName, ContactName, ContactTitle, _  
   Address, City, Region, PostalCode, Country, Phone, Fax _  
   FROM dbo.Customers _  
WHERE City = {0}", "London")  
  
For Each c As Customer In customers  
    Console.WriteLine(c.ContactName)  
Next  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChangeSet">
      <MemberSignature Language="C#" Value="public System.Data.Linq.ChangeSet GetChangeSet ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Linq.ChangeSet GetChangeSet() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.GetChangeSet" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChangeSet () As ChangeSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Linq::ChangeSet ^ GetChangeSet();" />
      <MemberSignature Language="F#" Value="member this.GetChangeSet : unit -&gt; System.Data.Linq.ChangeSet" Usage="dataContext.GetChangeSet " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.ChangeSet</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0cefd-286">Ruft die geänderten Objekte ab, die von <see cref="T:System.Data.Linq.DataContext" /> nachverfolgt werden.</span><span class="sxs-lookup"><span data-stu-id="0cefd-286">Gets the modified objects tracked by <see cref="T:System.Data.Linq.DataContext" />.</span></span></summary>
        <returns><span data-ttu-id="0cefd-287">Der Satz von Objekten wird in Form von drei schreibgeschützten Auflistungen zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="0cefd-287">The set of objects is returned as three read-only collections.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cefd-288">Beachten Sie die folgenden Überlegungen:</span><span class="sxs-lookup"><span data-stu-id="0cefd-288">Note the following considerations:</span></span>  
  
-   <span data-ttu-id="0cefd-289"><xref:System.Data.Linq.DataContext.GetChangeSet%2A> können Nebeneffekte haben, z. b. das Ableiten von Einfüge-und Lösch Vorgängen, die in der Regel zum Zeitpunkt der <xref:System.Data.Linq.DataContext.SubmitChanges%2A>ausgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="0cefd-289"><xref:System.Data.Linq.DataContext.GetChangeSet%2A> might have side effects, such as inference of insert and delete operations that are usually performed at the time of <xref:System.Data.Linq.DataContext.SubmitChanges%2A>.</span></span> <span data-ttu-id="0cefd-290">Beispielsweise können-Objekte, die in den folgenden Vorgängen verwendet werden, entsprechende abhergehörende Vorgänge in der folgenden Liste erstellen:</span><span class="sxs-lookup"><span data-stu-id="0cefd-290">For example, objects that are used in the following operations can create corresponding inferred operations in the following list:</span></span>  
  
    -   <span data-ttu-id="0cefd-291"><xref:System.Data.Linq.EntitySet%601.Add%2A> <xref:System.Data.Linq.Table%601.InsertOnSubmit%2A>.</span><span class="sxs-lookup"><span data-stu-id="0cefd-291"><xref:System.Data.Linq.EntitySet%601.Add%2A> to <xref:System.Data.Linq.Table%601.InsertOnSubmit%2A>.</span></span>  
  
    -   <span data-ttu-id="0cefd-292"><xref:System.Data.Linq.EntityRef%601> Zuweisung zu NULL (möglicherweise aufgrund <xref:System.Data.Linq.EntitySet%601.Remove%2A> zum <xref:System.Data.Linq.Table%601.DeleteOnSubmit%2A>.</span><span class="sxs-lookup"><span data-stu-id="0cefd-292"><xref:System.Data.Linq.EntityRef%601> assignment to null (possibly because of <xref:System.Data.Linq.EntitySet%601.Remove%2A> to <xref:System.Data.Linq.Table%601.DeleteOnSubmit%2A>.</span></span>  
  
-   <span data-ttu-id="0cefd-293">Der Satz kann nicht nach Foreign Key-Einschränkungen geordnet werden.</span><span class="sxs-lookup"><span data-stu-id="0cefd-293">The set may not be ordered according to foreign key constraints.</span></span>  
  
-   <span data-ttu-id="0cefd-294">Von der Datenbank generierte Werte (z. b. Primär-und Fremdschlüssel Werte, Zeitstempel usw.) sind nicht verfügbar.</span><span class="sxs-lookup"><span data-stu-id="0cefd-294">Database-generated values (for example, primary and foreign key values, timestamps, and so forth) are not available.</span></span> <span data-ttu-id="0cefd-295">Diese Informationen erfordern die Ausführung von Daten Bank Befehlen und ggf. die Weitergabe von abgerufenen Informationen (z. b. Fremdschlüssel aus Primärschlüssel).</span><span class="sxs-lookup"><span data-stu-id="0cefd-295">Such information requires database command execution and perhaps the propagation of retrieved information (for example, foreign key from primary key).</span></span>  
  
-   <span data-ttu-id="0cefd-296">Der Satz von geänderten Objekten wird zum Zeitpunkt des Aufrufes berechnet.</span><span class="sxs-lookup"><span data-stu-id="0cefd-296">The set of changed objects is computed at the time of the call.</span></span> <span data-ttu-id="0cefd-297">Bei nachfolgenden Aufrufen von <xref:System.Data.Linq.DataContext.SubmitChanges%2A> kann ein anderer Satz erstellt werden, wenn weitere Änderungen vorgenommen werden.</span><span class="sxs-lookup"><span data-stu-id="0cefd-297">Subsequent calls to <xref:System.Data.Linq.DataContext.SubmitChanges%2A> can produce a different set if additional changes are made.</span></span>  
  
 <span data-ttu-id="0cefd-298">Wenn keine Änderungen vorgenommen wurden, wird die Ausgabe wie folgt angezeigt:</span><span class="sxs-lookup"><span data-stu-id="0cefd-298">Output when no changes have been made appears as follows:</span></span>  
  
 `{Added: 0, Removed: 0, Modified: 0}`  
  
   
  
## Examples  
 [!code-csharp[DLinqDebuggingSupport#2](~/samples/snippets/csharp/VS_Snippets_Data/DLinqDebuggingSupport/cs/Program.cs#2)]
 [!code-vb[DLinqDebuggingSupport#2](~/samples/snippets/visualbasic/VS_Snippets_Data/DLinqDebuggingSupport/vb/Module1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand GetCommand (System.Linq.IQueryable query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.DbCommand GetCommand(class System.Linq.IQueryable query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.GetCommand(System.Linq.IQueryable)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCommand (query As IQueryable) As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::DbCommand ^ GetCommand(System::Linq::IQueryable ^ query);" />
      <MemberSignature Language="F#" Value="member this.GetCommand : System.Linq.IQueryable -&gt; System.Data.Common.DbCommand" Usage="dataContext.GetCommand query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.IQueryable" />
      </Parameters>
      <Docs>
        <param name="query"><span data-ttu-id="0cefd-299">Die Abfrage, für die SQL-Befehlsinformationen abgerufen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="0cefd-299">The query whose SQL command information is to be retrieved.</span></span></param>
        <summary><span data-ttu-id="0cefd-300">Ruft Informationen zu SQL-Befehlen ab, die von [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] generiert wurden.</span><span class="sxs-lookup"><span data-stu-id="0cefd-300">Gets the information about SQL commands generated by [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)].</span></span></summary>
        <returns><span data-ttu-id="0cefd-301">Das angeforderte Befehlsinformationsobjekt.</span><span class="sxs-lookup"><span data-stu-id="0cefd-301">The requested command information object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cefd-302">Diese Methode ist nur ein Getter und wirkt sich nicht auf <xref:System.Data.Linq.DataContext> Zustand aus.</span><span class="sxs-lookup"><span data-stu-id="0cefd-302">This method is only a getter and does not affect <xref:System.Data.Linq.DataContext> state.</span></span>  
  
 <span data-ttu-id="0cefd-303">Beachten Sie die folgenden Überlegungen:</span><span class="sxs-lookup"><span data-stu-id="0cefd-303">Note the following considerations:</span></span>  
  
-   <span data-ttu-id="0cefd-304">Das Argument darf nicht NULL sein.</span><span class="sxs-lookup"><span data-stu-id="0cefd-304">The argument must be non-null.</span></span> <span data-ttu-id="0cefd-305">Andernfalls wird eine NULL-Argument Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="0cefd-305">Otherwise, a null argument exception is thrown.</span></span>  
  
-   <span data-ttu-id="0cefd-306">Normale Abfrage Übersetzungs Ausnahmen, die während [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] Abfrage Ausführung ausgelöst werden, gelten für eine Abfrage, die nicht übersetzt werden kann.</span><span class="sxs-lookup"><span data-stu-id="0cefd-306">Normal query translation exceptions thrown during [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] query execution apply for a query that cannot be translated.</span></span>  
  
-   <span data-ttu-id="0cefd-307">Es wird nur der erste Abfragebefehl zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="0cefd-307">Only the first query command is returned.</span></span> <span data-ttu-id="0cefd-308">Insbesondere werden zusätzliche Befehle, die für Eager Loading (<xref:System.Data.Linq.DataLoadOptions.LoadWith%2A>) verwendet werden, nicht eingeschlossen.</span><span class="sxs-lookup"><span data-stu-id="0cefd-308">Specifically, additional commands that are used for eager loading (<xref:System.Data.Linq.DataLoadOptions.LoadWith%2A>) are not included.</span></span>  
  
-   <span data-ttu-id="0cefd-309"><xref:System.Data.Linq.DataContext> verfolgt nicht nach, was der Benutzer mit dem Befehl bewirkt.</span><span class="sxs-lookup"><span data-stu-id="0cefd-309"><xref:System.Data.Linq.DataContext> does not track what the user does with the command.</span></span> <span data-ttu-id="0cefd-310">Beispielsweise werden Ergebnisse aus der Ausführung des zurückgegebenen Befehls nicht nachverfolgt und wirken sich nicht auf <xref:System.Data.Linq.DataContext> Status aus.</span><span class="sxs-lookup"><span data-stu-id="0cefd-310">For example, results from the execution of the returned command are not tracked and do not affect <xref:System.Data.Linq.DataContext> state.</span></span>  
  
   
  
## Examples  
 [!code-csharp[DLinqDebuggingSupport#3](~/samples/snippets/csharp/VS_Snippets_Data/DLinqDebuggingSupport/cs/Program.cs#3)]
 [!code-vb[DLinqDebuggingSupport#3](~/samples/snippets/visualbasic/VS_Snippets_Data/DLinqDebuggingSupport/vb/Module1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIDbCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand GetIDbCommand (System.Linq.IQueryable query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.IDbCommand GetIDbCommand(class System.Linq.IQueryable query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.GetIDbCommand(System.Linq.IQueryable)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIDbCommand (query As IQueryable) As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::IDbCommand ^ GetIDbCommand(System::Linq::IQueryable ^ query);" />
      <MemberSignature Language="F#" Value="member this.GetIDbCommand : System.Linq.IQueryable -&gt; System.Data.IDbCommand" Usage="dataContext.GetIDbCommand query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.IQueryable" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="query">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTable">
      <MemberSignature Language="C#" Value="public System.Data.Linq.ITable GetTable (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Linq.ITable GetTable(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.GetTable(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Linq::ITable ^ GetTable(Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.GetTable : Type -&gt; System.Data.Linq.ITable" Usage="dataContext.GetTable type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.ITable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="0cefd-311">Der Typ der zurückzugebenden Objekte.</span><span class="sxs-lookup"><span data-stu-id="0cefd-311">The type of the objects to be returned.</span></span></param>
        <summary><span data-ttu-id="0cefd-312">Gibt eine Auflistung von Objekten eines bestimmten Typs zurück; der Typ wird vom <paramref name="type" />-Parameter definiert.</span><span class="sxs-lookup"><span data-stu-id="0cefd-312">Returns a collection of objects of a particular type, where the type is defined by the <paramref name="type" /> parameter.</span></span></summary>
        <returns><span data-ttu-id="0cefd-313">Eine Sammlung von Objekten, die vom <paramref name="type" />-Parameter definiert werden.</span><span class="sxs-lookup"><span data-stu-id="0cefd-313">A collection of objects defined by the <paramref name="type" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cefd-314">Dies ist eine schwach typisierte Version von <xref:System.Data.Linq.DataContext.GetTable%2A>.</span><span class="sxs-lookup"><span data-stu-id="0cefd-314">This is a weakly typed version of <xref:System.Data.Linq.DataContext.GetTable%2A>.</span></span> <span data-ttu-id="0cefd-315">Es ist wichtig, dass Sie über eine schwach typisierte Version verfügen, da es sich um eine gängige Vorgehensweise zum dynamischen Erstellen von Abfragen handelt.</span><span class="sxs-lookup"><span data-stu-id="0cefd-315">It is important to have a weakly typed version because it is a relatively common practice to construct queries dynamically.</span></span> <span data-ttu-id="0cefd-316">Es wäre unpraktisch, die Anwendung zu zwingen, die Reflektion zu verwenden, um die korrekte generische Methode aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="0cefd-316">It would be inconvenient to force the application to use reflection to call the correct generic method.</span></span>  
  
 <span data-ttu-id="0cefd-317">Wenn für einen bestimmten Typ keine Auflistung vorhanden ist, wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="0cefd-317">If there is no collection for a particular type, an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTable&lt;TEntity&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Linq.Table&lt;TEntity&gt; GetTable&lt;TEntity&gt; () where TEntity : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Linq.Table`1&lt;!!TEntity&gt; GetTable&lt;class TEntity&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.GetTable``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTable(Of TEntity As Class) () As Table(Of TEntity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TEntity&gt;&#xA; where TEntity : class System::Data::Linq::Table&lt;TEntity&gt; ^ GetTable();" />
      <MemberSignature Language="F#" Value="member this.GetTable : unit -&gt; System.Data.Linq.Table&lt;'Entity (requires 'Entity : null)&gt; (requires 'Entity : null)" Usage="dataContext.GetTable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Table&lt;TEntity&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TEntity"><span data-ttu-id="0cefd-318">Der Typ der zurückzugebenden Objekte.</span><span class="sxs-lookup"><span data-stu-id="0cefd-318">The type of the objects to be returned.</span></span></typeparam>
        <summary><span data-ttu-id="0cefd-319">Gibt eine Auflistung von Objekten eines bestimmten Typs zurück; der Typ wird vom <paramref name="TEntity" />-Parameter definiert.</span><span class="sxs-lookup"><span data-stu-id="0cefd-319">Returns a collection of objects of a particular type, where the type is defined by the <paramref name="TEntity" /> parameter.</span></span></summary>
        <returns><span data-ttu-id="0cefd-320">Eine Sammlung von Objekten, die vom <paramref name="TEntity" />-Parameter definiert werden.</span><span class="sxs-lookup"><span data-stu-id="0cefd-320">A collection of objects defined by the <paramref name="TEntity" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cefd-321">Diese Methode ist der Haupteinstiegspunkt für Abfragen.</span><span class="sxs-lookup"><span data-stu-id="0cefd-321">This method is the main entry point for querying.</span></span> <span data-ttu-id="0cefd-322">Wenn eine stark typisierte <xref:System.Data.Linq.DataContext> erstellt wird, Kapseln neue generierte Eigenschaften Aufrufe dieser Methode.</span><span class="sxs-lookup"><span data-stu-id="0cefd-322">When a strongly typed <xref:System.Data.Linq.DataContext> is created, new generated properties encapsulate calls to this method.</span></span> <span data-ttu-id="0cefd-323">Beispielsweise wird eine `Customers`-Eigenschaft generiert, die `GetTable<Customer>`zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="0cefd-323">For example, a `Customers` property is generated that returns `GetTable<Customer>`.</span></span>  
  
 <span data-ttu-id="0cefd-324">Wenn für einen bestimmten Typ keine Auflistung vorhanden ist, wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="0cefd-324">If there is no collection for a particular type, an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadOptions">
      <MemberSignature Language="C#" Value="public System.Data.Linq.DataLoadOptions LoadOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.DataLoadOptions LoadOptions" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.LoadOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property LoadOptions As DataLoadOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Linq::DataLoadOptions ^ LoadOptions { System::Data::Linq::DataLoadOptions ^ get(); void set(System::Data::Linq::DataLoadOptions ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LoadOptions : System.Data.Linq.DataLoadOptions with get, set" Usage="System.Data.Linq.DataContext.LoadOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.DataLoadOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0cefd-325">Ruft die <see cref="T:System.Data.Linq.DataLoadOptions" /> ab, die diesem <see cref="T:System.Data.Linq.DataContext" /> zugeordnet sind, oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="0cefd-325">Gets or sets the <see cref="T:System.Data.Linq.DataLoadOptions" /> associated with this <see cref="T:System.Data.Linq.DataContext" />.</span></span></summary>
        <value><span data-ttu-id="0cefd-326">Die Optionen für das Laden verknüpfter Daten durch vorheriges Abrufen.</span><span class="sxs-lookup"><span data-stu-id="0cefd-326">The prefetch load options for related data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cefd-327">Diese Eigenschaft ruft die Optionen ab oder legt diese fest, die verwendet werden, um das Vorabruf Verhalten für verzögerte geladene Elemente und die Mitgliedschaft verwandter Auflistungen zu definieren.</span><span class="sxs-lookup"><span data-stu-id="0cefd-327">This property gets or sets the options that are used to define prefetch behavior for deferred-loaded members and membership of related collections.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public System.IO.TextWriter Log { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.TextWriter Log" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.Log" />
      <MemberSignature Language="VB.NET" Value="Public Property Log As TextWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::TextWriter ^ Log { System::IO::TextWriter ^ get(); void set(System::IO::TextWriter ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Log : System.IO.TextWriter with get, set" Usage="System.Data.Linq.DataContext.Log" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0cefd-328">Ruft das Ziel zum Schreiben der SQL-Abfrage oder des Befehls ab oder legt es fest.</span><span class="sxs-lookup"><span data-stu-id="0cefd-328">Gets or sets the destination to write the SQL query or command.</span></span></summary>
        <value><span data-ttu-id="0cefd-329">Der <see cref="T:System.IO.TextReader" />, der zum Schreiben des Befehls verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="0cefd-329">The <see cref="T:System.IO.TextReader" /> to use for writing the command.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cefd-330">Legen Sie diese Eigenschaft auf `null`, um die Befehls Protokollierung zu deaktivieren.</span><span class="sxs-lookup"><span data-stu-id="0cefd-330">Set this property to `null` to disable command logging.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cefd-331">Im folgenden Beispiel wird generierten SQL-Code im Konsolenfenster angezeigt, bevor die Ergebnisse der Abfrage angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="0cefd-331">The following example displays generated SQL in the console window before it displays the results of the query.</span></span>  
  
 [!code-csharp[System.Data.Linq.DataContext#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.DataContext/cs/Program.cs#2)]
 [!code-vb[System.Data.Linq.DataContext#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.DataContext/vb/Module1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mapping">
      <MemberSignature Language="C#" Value="public System.Data.Linq.Mapping.MetaModel Mapping { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaModel Mapping" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.Mapping" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Mapping As MetaModel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Linq::Mapping::MetaModel ^ Mapping { System::Data::Linq::Mapping::MetaModel ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Mapping : System.Data.Linq.Mapping.MetaModel" Usage="System.Data.Linq.DataContext.Mapping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0cefd-332">Ruft das <see cref="T:System.Data.Linq.Mapping.MetaModel" /> ab, auf dem die Zuordnung basiert.</span><span class="sxs-lookup"><span data-stu-id="0cefd-332">Gets the <see cref="T:System.Data.Linq.Mapping.MetaModel" /> on which the mapping is based.</span></span></summary>
        <value><span data-ttu-id="0cefd-333">Die Zuordnung zwischen einer Datenbank und Domänenobjekten.</span><span class="sxs-lookup"><span data-stu-id="0cefd-333">The mapping between a database and domain objects.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ObjectTrackingEnabled">
      <MemberSignature Language="C#" Value="public bool ObjectTrackingEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ObjectTrackingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.ObjectTrackingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property ObjectTrackingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ObjectTrackingEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ObjectTrackingEnabled : bool with get, set" Usage="System.Data.Linq.DataContext.ObjectTrackingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0cefd-334">Ruft einen Wert ab, der angibt, ob die Objektnachverfolgung aktiviert ist, oder legt den Wert fest.</span><span class="sxs-lookup"><span data-stu-id="0cefd-334">Gets or sets a value that indicates whether object tracking is enabled.</span></span></summary>
        <value><span data-ttu-id="0cefd-335"><see langword="true" />, wenn die Objektverfolgung aktiviert ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0cefd-335"><see langword="true" /> if the object tracking is enabled; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="0cefd-336">Die Standardeinstellung ist <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="0cefd-336">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cefd-337">Wenn diese Eigenschaft auf `false` festgelegt wird, wird die Leistung beim Abruf verbessert, da weniger Elemente nachverfolgt werden müssen.</span><span class="sxs-lookup"><span data-stu-id="0cefd-337">Setting this property to `false` improves performance at retrieval time, because there are fewer items to track.</span></span>  
  
 <span data-ttu-id="0cefd-338">Eine Ausnahme wird ausgelöst:</span><span class="sxs-lookup"><span data-stu-id="0cefd-338">An exception is thrown:</span></span>  
  
-   <span data-ttu-id="0cefd-339">, Wenn die-Eigenschaft nach dem Ausführen einer Abfrage auf `false` festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="0cefd-339">If the property is set to `false` after a query has been executed.</span></span>  
  
     <span data-ttu-id="0cefd-340">Weitere Informationen finden Sie im Abschnitt gültige Modi in <xref:System.Data.Linq.DataContext>.</span><span class="sxs-lookup"><span data-stu-id="0cefd-340">For more information, see the Valid Modes section in <xref:System.Data.Linq.DataContext>.</span></span>  
  
-   <span data-ttu-id="0cefd-341">, Wenn die-Eigenschaft auf `false` festgelegt ist und <xref:System.Data.Linq.DataContext.SubmitChanges%2A> aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="0cefd-341">If the property is set to `false` and <xref:System.Data.Linq.DataContext.SubmitChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="0cefd-342">Wenn <xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> `false`ist, wird <xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A> ignoriert und als `false`behandelt.</span><span class="sxs-lookup"><span data-stu-id="0cefd-342">If <xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> is `false`, <xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A> is ignored and treated as `false`.</span></span> <span data-ttu-id="0cefd-343">In diesem Fall ist der <xref:System.Data.Linq.DataContext> schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="0cefd-343">In this case, the <xref:System.Data.Linq.DataContext> is read-only.</span></span>  
  
 <span data-ttu-id="0cefd-344">Falls <xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A>`true` lautet, ist <xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A>`false`.</span><span class="sxs-lookup"><span data-stu-id="0cefd-344">If <xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> is `true`, <xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A> is `false`.</span></span> <span data-ttu-id="0cefd-345">In diesem Fall können Sie mit <xref:System.Data.Linq.DataContext> ein Objekt Diagramm mithilfe von <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> Direktiven laden, das verzögerte Laden wird jedoch nicht aktiviert.</span><span class="sxs-lookup"><span data-stu-id="0cefd-345">In this case, <xref:System.Data.Linq.DataContext> allows you to load an object graph by using <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> directives, but does not enable deferred loading.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryCacheEnabled">
      <MemberSignature Language="C#" Value="public bool QueryCacheEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool QueryCacheEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.QueryCacheEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property QueryCacheEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool QueryCacheEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.QueryCacheEnabled : bool with get, set" Usage="System.Data.Linq.DataContext.QueryCacheEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Refresh">
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0cefd-346">Aktualisiert den Objektstatus anhand von Daten in der Datenbank.</span><span class="sxs-lookup"><span data-stu-id="0cefd-346">Refreshes object state by using data in the database.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cefd-347">Diese Methode ist nach einem Fehler bei der vollständigen Parallelität nützlich, um Elemente für einen anderen Versuch in einen Zustand zu bringen.</span><span class="sxs-lookup"><span data-stu-id="0cefd-347">This method is useful after an optimistic concurrency error to bring items into a state for another attempt.</span></span> <span data-ttu-id="0cefd-348">Sie aktualisiert den Zustand der primitiven Felder und Eigenschaften für die Objekte.</span><span class="sxs-lookup"><span data-stu-id="0cefd-348">It updates the state of the primitive fields and properties on the objects.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0cefd-349">Wenn sich ein Objekt auf der n-Seite einer 1: n-Beziehung befindet, wird der Fremdschlüssel für das Objekt festgelegt, und der Objekt Zeiger für die andere Seite der Beziehung wird *auf den neuen* Wert festgelegt.</span><span class="sxs-lookup"><span data-stu-id="0cefd-349">If an object is on the *many* side of a one-to-many relationship, the foreign key on the object will be set and the object pointer for the other side of the relationship will be set to the new value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh (System.Data.Linq.RefreshMode mode, System.Collections.IEnumerable entities);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh(valuetype System.Data.Linq.RefreshMode mode, class System.Collections.IEnumerable entities) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.Refresh(System.Data.Linq.RefreshMode,System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh (mode As RefreshMode, entities As IEnumerable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh(System::Data::Linq::RefreshMode mode, System::Collections::IEnumerable ^ entities);" />
      <MemberSignature Language="F#" Value="member this.Refresh : System.Data.Linq.RefreshMode * System.Collections.IEnumerable -&gt; unit" Usage="dataContext.Refresh (mode, entities)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.Data.Linq.RefreshMode" />
        <Parameter Name="entities" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="mode"><span data-ttu-id="0cefd-350">Ein Wert, der angibt, wie Konflikte bezüglich vollständiger Parallelität behandelt werden.</span><span class="sxs-lookup"><span data-stu-id="0cefd-350">A value that specifies how optimistic concurrency conflicts are handled.</span></span></param>
        <param name="entities"><span data-ttu-id="0cefd-351">Die Auflistung von Entitäten, die aktualisiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="0cefd-351">The collection of entities to be refreshed.</span></span></param>
        <summary><span data-ttu-id="0cefd-352">Aktualisiert eine Auflistung von Entitätsobjekten anhand des angegebenen Modus.</span><span class="sxs-lookup"><span data-stu-id="0cefd-352">Refreshes a collection of entity objects according to the specified mode.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh (System.Data.Linq.RefreshMode mode, object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh(valuetype System.Data.Linq.RefreshMode mode, object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.Refresh(System.Data.Linq.RefreshMode,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh (mode As RefreshMode, entity As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh(System::Data::Linq::RefreshMode mode, System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.Refresh : System.Data.Linq.RefreshMode * obj -&gt; unit" Usage="dataContext.Refresh (mode, entity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.Data.Linq.RefreshMode" />
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="mode"><span data-ttu-id="0cefd-353">Ein Wert, der angibt, wie Konflikte bezüglich vollständiger Parallelität behandelt werden.</span><span class="sxs-lookup"><span data-stu-id="0cefd-353">A value that specifies how optimistic concurrency conflicts are handled.</span></span></param>
        <param name="entity"><span data-ttu-id="0cefd-354">Das Objekt, das aktualisiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="0cefd-354">The object to be refreshed.</span></span></param>
        <summary><span data-ttu-id="0cefd-355">Aktualisiert ein Entitätsobjekt anhand des angegebenen Modus.</span><span class="sxs-lookup"><span data-stu-id="0cefd-355">Refreshes an entity object according to the specified mode.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh (System.Data.Linq.RefreshMode mode, params object[] entities);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh(valuetype System.Data.Linq.RefreshMode mode, object[] entities) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.Refresh(System.Data.Linq.RefreshMode,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh (mode As RefreshMode, ParamArray entities As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh(System::Data::Linq::RefreshMode mode, ... cli::array &lt;System::Object ^&gt; ^ entities);" />
      <MemberSignature Language="F#" Value="member this.Refresh : System.Data.Linq.RefreshMode * obj[] -&gt; unit" Usage="dataContext.Refresh (mode, entities)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.Data.Linq.RefreshMode" />
        <Parameter Name="entities" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mode"><span data-ttu-id="0cefd-356">Ein Wert, der angibt, wie Konflikte bezüglich vollständiger Parallelität behandelt werden.</span><span class="sxs-lookup"><span data-stu-id="0cefd-356">A value that specifies how optimistic concurrency conflicts are handled.</span></span></param>
        <param name="entities"><span data-ttu-id="0cefd-357">Das Array von Entitätsobjekten, das aktualisiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="0cefd-357">The array of entity objects to be refreshed.</span></span></param>
        <summary><span data-ttu-id="0cefd-358">Aktualisiert ein Array von Entitätsobjekten anhand des angegebenen Modus.</span><span class="sxs-lookup"><span data-stu-id="0cefd-358">Refreshes an array of entity objects according to the specified mode.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SubmitChanges">
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0cefd-359">Berechnet die geänderten Objekte, die eingefügt, aktualisiert oder gelöscht werden sollen, und führt die entsprechenden Befehle zur Implementierung der Änderungen für die Datenbank aus.</span><span class="sxs-lookup"><span data-stu-id="0cefd-359">Computes the set of modified objects to be inserted, updated, or deleted, and executes the appropriate commands to implement the changes to the database.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cefd-360">Wenn für INSERT-, Update-oder Delete-Methoden Überschreibungs Methoden vorhanden sind, führt <xref:System.Data.Linq.DataContext.SubmitChanges%2A> diese Methoden anstelle der standardmäßigen [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]-Befehle aus.</span><span class="sxs-lookup"><span data-stu-id="0cefd-360">If override methods are present for insert, update, or delete, <xref:System.Data.Linq.DataContext.SubmitChanges%2A> executes these methods instead of the default [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] commands.</span></span>  
  
 <span data-ttu-id="0cefd-361"><xref:System.Data.Linq.DataContext.SubmitChanges%2A> startet eine Transaktion und führt ein Rollback aus, wenn eine Ausnahme während der Ausführung <xref:System.Data.Linq.DataContext.SubmitChanges%2A> auftritt.</span><span class="sxs-lookup"><span data-stu-id="0cefd-361"><xref:System.Data.Linq.DataContext.SubmitChanges%2A> starts a transaction and will roll back if an exception occurs while <xref:System.Data.Linq.DataContext.SubmitChanges%2A> is executing.</span></span> <span data-ttu-id="0cefd-362">Dies führt jedoch nicht zu einem Rollback der Änderungen im Arbeitsspeicher oder der Nachverfolgung durch die <xref:System.Data.Linq.DataContext>; Diese Änderungen müssen manuell rückgängig gemacht werden.</span><span class="sxs-lookup"><span data-stu-id="0cefd-362">However, this does not roll back the changes in memory or tracked by the <xref:System.Data.Linq.DataContext>; those changes will need to be rolled back manually.</span></span> <span data-ttu-id="0cefd-363">Sie können mit einer neuen Instanz des-<xref:System.Data.Linq.DataContext> beginnen, wenn die Änderungen im Arbeitsspeicher verworfen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="0cefd-363">You can start with a new instance of the <xref:System.Data.Linq.DataContext> if the changes in memory are to be discarded.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SubmitChanges">
      <MemberSignature Language="C#" Value="public void SubmitChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SubmitChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.SubmitChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub SubmitChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SubmitChanges();" />
      <MemberSignature Language="F#" Value="member this.SubmitChanges : unit -&gt; unit" Usage="dataContext.SubmitChanges " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0cefd-364">Berechnet die geänderten Objekte, die eingefügt, aktualisiert oder gelöscht werden sollen, und führt die entsprechenden Befehle zur Implementierung der Änderungen für die Datenbank aus.</span><span class="sxs-lookup"><span data-stu-id="0cefd-364">Computes the set of modified objects to be inserted, updated, or deleted, and executes the appropriate commands to implement the changes to the database.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cefd-365">Wenn für INSERT-, Update-oder Delete-Methoden Überschreibungs Methoden vorhanden sind, führt <xref:System.Data.Linq.DataContext.SubmitChanges%2A> diese Methoden anstelle der standardmäßigen [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]-Befehle aus.</span><span class="sxs-lookup"><span data-stu-id="0cefd-365">If override methods are present for insert, update, or delete, <xref:System.Data.Linq.DataContext.SubmitChanges%2A> executes these methods instead of the default [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] commands.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SubmitChanges">
      <MemberSignature Language="C#" Value="public virtual void SubmitChanges (System.Data.Linq.ConflictMode failureMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SubmitChanges(valuetype System.Data.Linq.ConflictMode failureMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.SubmitChanges(System.Data.Linq.ConflictMode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SubmitChanges (failureMode As ConflictMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SubmitChanges(System::Data::Linq::ConflictMode failureMode);" />
      <MemberSignature Language="F#" Value="abstract member SubmitChanges : System.Data.Linq.ConflictMode -&gt; unit&#xA;override this.SubmitChanges : System.Data.Linq.ConflictMode -&gt; unit" Usage="dataContext.SubmitChanges failureMode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="failureMode" Type="System.Data.Linq.ConflictMode" />
      </Parameters>
      <Docs>
        <param name="failureMode"><span data-ttu-id="0cefd-366">Die Aktion, die bei einem Fehler ausgeführt werden soll.</span><span class="sxs-lookup"><span data-stu-id="0cefd-366">The action to be taken if the submission fails.</span></span> <span data-ttu-id="0cefd-367">Gültige Argumente sind:</span><span class="sxs-lookup"><span data-stu-id="0cefd-367">Valid arguments are as follows:</span></span> 
 <see cref="F:System.Data.Linq.ConflictMode.FailOnFirstConflict" /><see cref="F:System.Data.Linq.ConflictMode.ContinueOnConflict" /></param>
        <summary><span data-ttu-id="0cefd-368">Sendet Änderungen an abgerufenen Objekten an die zugrunde liegende Datenbank und gibt die Aktion an, die bei einem Fehler ausgeführt werden soll.</span><span class="sxs-lookup"><span data-stu-id="0cefd-368">Sends changes that were made to retrieved objects to the underlying database, and specifies the action to be taken if the submission fails.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cefd-369">Der Standardfehler Modus ist <xref:System.Data.Linq.ConflictMode.FailOnFirstConflict>.</span><span class="sxs-lookup"><span data-stu-id="0cefd-369">Default failure mode is <xref:System.Data.Linq.ConflictMode.FailOnFirstConflict>.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.ConflictModeEnumeration#1](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.conflictmodeenumeration/cs/program.cs#1)]
 [!code-vb[System.Data.Linq.ConflictModeEnumeration#1](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.conflictmodeenumeration/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transaction">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbTransaction Transaction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbTransaction Transaction" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.Transaction" />
      <MemberSignature Language="VB.NET" Value="Public Property Transaction As DbTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbTransaction ^ Transaction { System::Data::Common::DbTransaction ^ get(); void set(System::Data::Common::DbTransaction ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Transaction : System.Data.Common.DbTransaction with get, set" Usage="System.Data.Linq.DataContext.Transaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbTransaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0cefd-370">Ruft eine lokale Transaktion für [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] fest, um auf die Datenbank zuzugreifen, oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="0cefd-370">Gets or sets a local transaction for the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] to use to access the database.</span></span></summary>
        <value><span data-ttu-id="0cefd-371">Das vom <see cref="T:System.Data.Linq.DataContext" /> beim Ausführen von Abfragen und Befehlen verwendete Transaktionsobjekt.</span><span class="sxs-lookup"><span data-stu-id="0cefd-371">The transaction object used by the <see cref="T:System.Data.Linq.DataContext" /> when executing queries and commands.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cefd-372">Das primäre Szenario für diese Eigenschaft ist Interoperabilität mit relationalem [!INCLUDE[vstecado](~/includes/vstecado-md.md)] Code.</span><span class="sxs-lookup"><span data-stu-id="0cefd-372">The primary scenario for this property is interoperability with relational [!INCLUDE[vstecado](~/includes/vstecado-md.md)] code.</span></span> <span data-ttu-id="0cefd-373">Verwenden Sie diese Eigenschaft z. b., wenn Sie Ihre eigenen `Create`/`Update`/`Delete`-Methoden schreiben, um die `Transaction`-Eigenschaft für das ADO-`Command` Objekt festzulegen.</span><span class="sxs-lookup"><span data-stu-id="0cefd-373">For example, use this property when you write your own `Create`/`Update`/`Delete` methods to set the `Transaction` property on the ADO `Command` object.</span></span>  
  
 <span data-ttu-id="0cefd-374">Beachten Sie Folgendes:</span><span class="sxs-lookup"><span data-stu-id="0cefd-374">Note the following:</span></span>  
  
-   <span data-ttu-id="0cefd-375">Wenn diese Eigenschaft nicht explizit festgelegt wurde, gibt der Getter NULL zurück.</span><span class="sxs-lookup"><span data-stu-id="0cefd-375">If this property has not been explicitly set, the getter returns null.</span></span>  
  
-   <span data-ttu-id="0cefd-376">Wenn der Code in einem <xref:System.Transactions.Transaction> Kontext ausgeführt wird, wird durch das Festlegen dieser Eigenschaft eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="0cefd-376">If the code is executing in a <xref:System.Transactions.Transaction> context, setting this property throws an exception.</span></span>  
  
-   <span data-ttu-id="0cefd-377">Wenn diese Eigenschaft festgelegt ist und eine neue <xref:System.Transactions.Transaction> geöffnet wird, wird eine Ausnahme ausgelöst, wenn eine Abfrage oder ein Update ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="0cefd-377">If this property is set and a new <xref:System.Transactions.Transaction> is opened, an exception is thrown when a query or update is executed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Translate">
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0cefd-378">Konvertiert einen vorhandenen <see cref="T:System.Data.IDataReader" /> in Objekte.</span><span class="sxs-lookup"><span data-stu-id="0cefd-378">Converts an existing <see cref="T:System.Data.IDataReader" /> to objects.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cefd-379">Jede Zeile im <xref:System.Data.IDataReader> wird in ein Objekt in der <xref:System.Collections.Generic.IEnumerable%601>konvertiert.</span><span class="sxs-lookup"><span data-stu-id="0cefd-379">Each row in the <xref:System.Data.IDataReader> is converted to an object in the <xref:System.Collections.Generic.IEnumerable%601>.</span></span>  
  
```  
public IEnumerable<T> Translate<T>(IDataReader reader) {}  
```  
  
 <span data-ttu-id="0cefd-380">Description: Diese Methode wird verwendet, um eine vorhandene <xref:System.Data.Common.DbDataReader> in-Objekte zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="0cefd-380">Description: This method is used to convert an existing <xref:System.Data.Common.DbDataReader> to objects.</span></span> <span data-ttu-id="0cefd-381">Jede Zeile im <xref:System.Data.Common.DbDataReader> wird in ein Objekt in der <xref:System.Collections.Generic.IEnumerable%601>konvertiert.</span><span class="sxs-lookup"><span data-stu-id="0cefd-381">Each row in the <xref:System.Data.Common.DbDataReader> is converted to an object in the <xref:System.Collections.Generic.IEnumerable%601>.</span></span>  
  
 <span data-ttu-id="0cefd-382">**Generische Parameter:**</span><span class="sxs-lookup"><span data-stu-id="0cefd-382">**Generic parameters:**</span></span>  
  
 <span data-ttu-id="0cefd-383">`T`: siehe <xref:System.Data.Linq.DataContext.ExecuteQuery%2A>.</span><span class="sxs-lookup"><span data-stu-id="0cefd-383">`T`: See <xref:System.Data.Linq.DataContext.ExecuteQuery%2A>.</span></span>  
  
 <span data-ttu-id="0cefd-384">**Metern**</span><span class="sxs-lookup"><span data-stu-id="0cefd-384">**Parameters:**</span></span>  
  
 <span data-ttu-id="0cefd-385">`Query`: siehe die Beschreibung für den Befehl unter <xref:System.Data.Linq.DataContext.ExecuteCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="0cefd-385">`Query`: See the description for command under <xref:System.Data.Linq.DataContext.ExecuteCommand%2A>.</span></span>  
  
 <span data-ttu-id="0cefd-386">`Parameters`: die Beschreibung der Parameter finden Sie unter <xref:System.Data.Linq.DataContext.ExecuteCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="0cefd-386">`Parameters`: See the description for parameters under <xref:System.Data.Linq.DataContext.ExecuteCommand%2A>.</span></span>  
  
 <span data-ttu-id="0cefd-387">**Rückgabetyp:**</span><span class="sxs-lookup"><span data-stu-id="0cefd-387">**Return type:**</span></span>  
  
 <span data-ttu-id="0cefd-388"><xref:System.Collections.Generic.IEnumerable%601>: Auflistung von Objekten, die von der Konvertierung zurückgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="0cefd-388"><xref:System.Collections.Generic.IEnumerable%601>: collection of objects returned by the conversion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Translate">
      <MemberSignature Language="C#" Value="public System.Data.Linq.IMultipleResults Translate (System.Data.Common.DbDataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Linq.IMultipleResults Translate(class System.Data.Common.DbDataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.Translate(System.Data.Common.DbDataReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function Translate (reader As DbDataReader) As IMultipleResults" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Linq::IMultipleResults ^ Translate(System::Data::Common::DbDataReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.Translate : System.Data.Common.DbDataReader -&gt; System.Data.Linq.IMultipleResults" Usage="dataContext.Translate reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.IMultipleResults</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="0cefd-389">Der zu konvertierende <see cref="T:System.Data.IDataReader" />.</span><span class="sxs-lookup"><span data-stu-id="0cefd-389">The <see cref="T:System.Data.IDataReader" /> to be converted.</span></span></param>
        <summary><span data-ttu-id="0cefd-390">Konvertiert einen vorhandenen <see cref="T:System.Data.Common.DbDataReader" /> in Objekte.</span><span class="sxs-lookup"><span data-stu-id="0cefd-390">Converts an existing <see cref="T:System.Data.Common.DbDataReader" /> to objects.</span></span></summary>
        <returns><span data-ttu-id="0cefd-391">Eine Liste von Objekten, die durch die Konvertierung zurückgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="0cefd-391">A list of objects returned by the conversion.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Translate">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable Translate (Type elementType, System.Data.Common.DbDataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerable Translate(class System.Type elementType, class System.Data.Common.DbDataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.Translate(System.Type,System.Data.Common.DbDataReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function Translate (elementType As Type, reader As DbDataReader) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerable ^ Translate(Type ^ elementType, System::Data::Common::DbDataReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.Translate : Type * System.Data.Common.DbDataReader -&gt; System.Collections.IEnumerable" Usage="dataContext.Translate (elementType, reader)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementType" Type="System.Type" />
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" />
      </Parameters>
      <Docs>
        <param name="elementType"><span data-ttu-id="0cefd-392">Der <see cref="T:System.Collections.Generic.IEnumerable`1" />-Typ für die Rückgabe.</span><span class="sxs-lookup"><span data-stu-id="0cefd-392">The type of the <see cref="T:System.Collections.Generic.IEnumerable`1" /> to be returned.</span></span>  
  
<span data-ttu-id="0cefd-393">Der Algorithmus für Vergleiche von Spalten im Ergebnis und Feldern und Eigenschaften im Objekt funktioniert folgendermaßen:</span><span class="sxs-lookup"><span data-stu-id="0cefd-393">The algorithm for matching columns in the result to fields and properties in the object works as follows:</span></span> 
<span data-ttu-id="0cefd-394">Wenn ein Feld oder eine Eigenschaft einem bestimmten Spaltennamen zugeordnet werden, wird der Spaltenname im Resultset erwartet.</span><span class="sxs-lookup"><span data-stu-id="0cefd-394">If a field or property is mapped to a particular column name, that column name is expected in the resultset.</span></span>  
  
<span data-ttu-id="0cefd-395">Wenn ein Feld oder eine Eigenschaft nicht zugeordnet werden, wird im Resultset eine Spalte mit dem gleichen Namen wie das Feld oder die Eigenschaft erwartet.</span><span class="sxs-lookup"><span data-stu-id="0cefd-395">If a field or property is not mapped, a column with the same name as the field or property is expected in the resultset.</span></span>  
  
<span data-ttu-id="0cefd-396">Der Vergleich wird ausgeführt, indem zuerst unter Beachtung der Groß-/Kleinschreibung nach einer Übereinstimmung gesucht wird.</span><span class="sxs-lookup"><span data-stu-id="0cefd-396">The comparison is performed by looking for a case-sensitive match first.</span></span> <span data-ttu-id="0cefd-397">Wenn dabei keine Übereinstimmung gefunden wird, wird die Suche erneut ausgeführt, dieses Mal jedoch, ohne die Groß- und Kleinschreibung zu beachten.</span><span class="sxs-lookup"><span data-stu-id="0cefd-397">If this match is not found, a subsequent search is occurs for a case-insensitive match.</span></span>  
  
<span data-ttu-id="0cefd-398">Die Abfrage muss alle überwachten Felder und Eigenschaften des Objekts zurückgeben (mit Ausnahme derer, die mit Verzögerung geladen werden), wenn alle nachfolgend aufgeführten Bedingungen erfüllt sind:</span><span class="sxs-lookup"><span data-stu-id="0cefd-398">The query must return all the tracked fields and properties of the object (except those that are loaded on a deferred basis) when all the following conditions are true:</span></span> 
 <span data-ttu-id="0cefd-399"><c>T</c> stellt eine Entität dar, die explizit von <see cref="T:System.Data.Linq.DataContext" /> überwacht wird.</span><span class="sxs-lookup"><span data-stu-id="0cefd-399"><c>T</c> is an entity explicitly tracked by the <see cref="T:System.Data.Linq.DataContext" />.</span></span>  
  
 <span data-ttu-id="0cefd-400"><see cref="P:System.Data.Linq.DataContext.ObjectTrackingEnabled" /> ist <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="0cefd-400"><see cref="P:System.Data.Linq.DataContext.ObjectTrackingEnabled" /> is <see langword="true" />.</span></span>  
  
<span data-ttu-id="0cefd-401">Die Entität weist einen Primärschlüssel auf.</span><span class="sxs-lookup"><span data-stu-id="0cefd-401">The entity has a primary key.</span></span>  
  
<span data-ttu-id="0cefd-402">Andernfalls wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="0cefd-402">Otherwise an exception is thrown.</span></span></param>
        <param name="reader"><span data-ttu-id="0cefd-403">Der zu konvertierende <see cref="T:System.Data.IDataReader" />.</span><span class="sxs-lookup"><span data-stu-id="0cefd-403">The <see cref="T:System.Data.IDataReader" /> to be converted.</span></span></param>
        <summary><span data-ttu-id="0cefd-404">Konvertiert einen vorhandenen <see cref="T:System.Data.Common.DbDataReader" /> in Objekte.</span><span class="sxs-lookup"><span data-stu-id="0cefd-404">Converts an existing <see cref="T:System.Data.Common.DbDataReader" /> to objects.</span></span></summary>
        <returns><span data-ttu-id="0cefd-405">Eine Liste von Objekten, die durch die Konvertierung zurückgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="0cefd-405">A list of objects returned by the conversion.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Translate&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;TResult&gt; Translate&lt;TResult&gt; (System.Data.Common.DbDataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt; Translate&lt;TResult&gt;(class System.Data.Common.DbDataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.Translate``1(System.Data.Common.DbDataReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function Translate(Of TResult) (reader As DbDataReader) As IEnumerable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Collections::Generic::IEnumerable&lt;TResult&gt; ^ Translate(System::Data::Common::DbDataReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.Translate : System.Data.Common.DbDataReader -&gt; seq&lt;'Result&gt;" Usage="dataContext.Translate reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" />
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="0cefd-406">Der <see cref="T:System.Collections.Generic.IEnumerable`1" />-Typ für die Rückgabe.</span><span class="sxs-lookup"><span data-stu-id="0cefd-406">The type of the <see cref="T:System.Collections.Generic.IEnumerable`1" /> to be returned.</span></span></typeparam>
        <param name="reader"><span data-ttu-id="0cefd-407">Der zu konvertierende <see cref="T:System.Data.IDataReader" />.</span><span class="sxs-lookup"><span data-stu-id="0cefd-407">The <see cref="T:System.Data.IDataReader" /> to be converted.</span></span></param>
        <summary><span data-ttu-id="0cefd-408">Konvertiert einen vorhandenen <see cref="T:System.Data.Common.DbDataReader" /> in Objekte.</span><span class="sxs-lookup"><span data-stu-id="0cefd-408">Converts an existing <see cref="T:System.Data.Common.DbDataReader" /> to objects.</span></span></summary>
        <returns><span data-ttu-id="0cefd-409">Eine Auflistung von der Konvertierung zurückgegebener Objekte.</span><span class="sxs-lookup"><span data-stu-id="0cefd-409">A collection of objects returned by the conversion.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
