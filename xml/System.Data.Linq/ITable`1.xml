<Type Name="ITable&lt;TEntity&gt;" FullName="System.Data.Linq.ITable&lt;TEntity&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="93fa2448eebb6ba17b2668a138de2cd98e4d769b" />
    <Meta Name="ms.sourcegitcommit" Value="d0bb31ec8354fa58c62c2a646057eec11d3e2150" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/17/2018" />
    <Meta Name="ms.locfileid" Value="36689108" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ITable&lt;TEntity&gt; : System.Collections.Generic.IEnumerable&lt;TEntity&gt;, System.Linq.IQueryable, System.Linq.IQueryable&lt;TEntity&gt; where TEntity : class" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITable`1&lt;class TEntity&gt; implements class System.Collections.Generic.IEnumerable`1&lt;!TEntity&gt;, class System.Collections.IEnumerable, class System.Linq.IQueryable, class System.Linq.IQueryable`1&lt;!TEntity&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.ITable`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITable(Of TEntity)&#xA;Implements IEnumerable(Of TEntity), IQueryable, IQueryable(Of TEntity)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TEntity&gt;&#xA; where TEntity : classpublic interface class ITable : System::Collections::Generic::IEnumerable&lt;TEntity&gt;, System::Linq::IQueryable, System::Linq::IQueryable&lt;TEntity&gt;" />
  <TypeSignature Language="F#" Value="type ITable&lt;'Entity (requires 'Entity : null)&gt; = interface&#xA;    interface IQueryable&lt;'Entity (requires 'Entity : null)&gt;&#xA;    interface seq&lt;'Entity (requires 'Entity : null)&gt;&#xA;    interface IEnumerable&#xA;    interface IQueryable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TEntity">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;TEntity&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Linq.IQueryable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Linq.IQueryable&lt;TEntity&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TEntity">To be added.</typeparam>
    <summary>
      <span data-ttu-id="7b4a2-101">Stellt eine Tabelle für einen bestimmten Typ in der zugrunde liegenden Datenbank dar.</span>
      <span class="sxs-lookup">
        <span data-stu-id="7b4a2-101">Represents a table for a particular type in the underlying database.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b4a2-102">Weitere Informationen finden Sie unter <xref:System.Data.Linq.Table%601>.</span><span class="sxs-lookup"><span data-stu-id="7b4a2-102">For more information, see <xref:System.Data.Linq.Table%601>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Attach">
      <MemberSignature Language="C#" Value="public void Attach (TEntity entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Attach(!TEntity entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.ITable`1.Attach(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Attach (entity As TEntity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Attach(TEntity entity);" />
      <MemberSignature Language="F#" Value="abstract member Attach : 'Entity -&gt; unit" Usage="iTable.Attach entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="TEntity" />
      </Parameters>
      <Docs>
        <param name="entity">
          <span data-ttu-id="7b4a2-103">Das hinzuzufügende Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b4a2-103">The object to be added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7b4a2-104">Fügt beim Überschreiben eine getrennte Entität an einen neuen <see cref="T:System.Data.Linq.DataContext" /> an, wenn ursprüngliche Werte für Prüfungen der vollständigen Parallelität benötigt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b4a2-104">When overridden, attaches a disconnected or "detached" entity to a new <see cref="T:System.Data.Linq.DataContext" /> when original values are required for optimistic concurrency checks.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b4a2-105">Weitere Informationen finden Sie unter <xref:System.Data.Linq.Table%601.Attach%2A>.</span><span class="sxs-lookup"><span data-stu-id="7b4a2-105">For more information, see <xref:System.Data.Linq.Table%601.Attach%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteOnSubmit">
      <MemberSignature Language="C#" Value="public void DeleteOnSubmit (TEntity entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteOnSubmit(!TEntity entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.ITable`1.DeleteOnSubmit(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteOnSubmit (entity As TEntity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteOnSubmit(TEntity entity);" />
      <MemberSignature Language="F#" Value="abstract member DeleteOnSubmit : 'Entity -&gt; unit" Usage="iTable.DeleteOnSubmit entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="TEntity" />
      </Parameters>
      <Docs>
        <param name="entity">
          <span data-ttu-id="7b4a2-106">Das zu löschende Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b4a2-106">The object to delete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7b4a2-107">Ändert beim Überschreiben den Zustand einer Entität aus der Tabelle in <see langword="pending delete" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b4a2-107">When overridden, puts an entity from this table into a <see langword="pending delete" /> state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b4a2-108">Weitere Informationen finden Sie unter <xref:System.Data.Linq.Table%601.DeleteOnSubmit%2A>.</span><span class="sxs-lookup"><span data-stu-id="7b4a2-108">For more information, see <xref:System.Data.Linq.Table%601.DeleteOnSubmit%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertOnSubmit">
      <MemberSignature Language="C#" Value="public void InsertOnSubmit (TEntity entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertOnSubmit(!TEntity entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.ITable`1.InsertOnSubmit(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertOnSubmit (entity As TEntity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertOnSubmit(TEntity entity);" />
      <MemberSignature Language="F#" Value="abstract member InsertOnSubmit : 'Entity -&gt; unit" Usage="iTable.InsertOnSubmit entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="TEntity" />
      </Parameters>
      <Docs>
        <param name="entity">
          <span data-ttu-id="7b4a2-109">Das einzufügende Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b4a2-109">The object to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7b4a2-110">Fügt beim Überschreiben eine Entität mit dem Zustand <see langword="pending insert" /> zu dieser <see cref="T:System.Data.Linq.ITable`1" /> hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b4a2-110">When overridden, adds an entity in a <see langword="pending insert" /> state to this <see cref="T:System.Data.Linq.ITable`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b4a2-111">Weitere Informationen finden Sie unter <xref:System.Data.Linq.Table%601.InsertOnSubmit%2A>.</span><span class="sxs-lookup"><span data-stu-id="7b4a2-111">For more information, see <xref:System.Data.Linq.Table%601.InsertOnSubmit%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>