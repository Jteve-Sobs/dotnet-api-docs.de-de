<Type Name="IBuildEngine2" FullName="Microsoft.Build.Framework.IBuildEngine2">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a9ae6208b5acc92040f48951469ee5a51a141c4f" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37725156" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IBuildEngine2 : Microsoft.Build.Framework.IBuildEngine" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IBuildEngine2 implements class Microsoft.Build.Framework.IBuildEngine" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Framework.IBuildEngine2" />
  <TypeSignature Language="VB.NET" Value="Public Interface IBuildEngine2&#xA;Implements IBuildEngine" />
  <TypeSignature Language="C++ CLI" Value="public interface class IBuildEngine2 : Microsoft::Build::Framework::IBuildEngine" />
  <TypeSignature Language="F#" Value="type IBuildEngine2 = interface&#xA;    interface IBuildEngine" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Framework</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Build.Framework.IBuildEngine</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Bietet Aufgabenautoren eine Möglichkeit, einen Teil der Funktionen der MSBuild-Engine zu verwenden</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Build.Framework.IBuildEngine2> Erweitert <xref:Microsoft.Build.Framework.IBuildEngine>, sodass Sie mehrere Projektdateien parallel auf Systemen mit mehreren Prozessoren oder Prozessoren mit mehreren Kernen zu erstellen.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BuildProjectFile">
      <MemberSignature Language="C#" Value="public bool BuildProjectFile (string projectFileName, string[] targetNames, System.Collections.IDictionary globalProperties, System.Collections.IDictionary targetOutputs, string toolsVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool BuildProjectFile(string projectFileName, string[] targetNames, class System.Collections.IDictionary globalProperties, class System.Collections.IDictionary targetOutputs, string toolsVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Framework.IBuildEngine2.BuildProjectFile(System.String,System.String[],System.Collections.IDictionary,System.Collections.IDictionary,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function BuildProjectFile (projectFileName As String, targetNames As String(), globalProperties As IDictionary, targetOutputs As IDictionary, toolsVersion As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool BuildProjectFile(System::String ^ projectFileName, cli::array &lt;System::String ^&gt; ^ targetNames, System::Collections::IDictionary ^ globalProperties, System::Collections::IDictionary ^ targetOutputs, System::String ^ toolsVersion);" />
      <MemberSignature Language="F#" Value="abstract member BuildProjectFile : string * string[] * System.Collections.IDictionary * System.Collections.IDictionary * string -&gt; bool" Usage="iBuildEngine2.BuildProjectFile (projectFileName, targetNames, globalProperties, targetOutputs, toolsVersion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectFileName" Type="System.String" />
        <Parameter Name="targetNames" Type="System.String[]" />
        <Parameter Name="globalProperties" Type="System.Collections.IDictionary" />
        <Parameter Name="targetOutputs" Type="System.Collections.IDictionary" />
        <Parameter Name="toolsVersion" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectFileName">Der Name der zu erstellenden Projektdatei.</param>
        <param name="targetNames">Die Namen des zu erstellenden Zieles im Projekt. Mehrere Ziele müssen mit einem Semikolon (;) getrennt werden. <see langword="Null" />-Werte werden akzeptiert.</param>
        <param name="globalProperties">Ein <see cref="T:System.Collections.IDictionary" /> zusätzlicher globaler Eigenschaften, die auf das Projekt angewendet werden sollen. Der Schlüssel und der Wert müssen vom Datentyp <see langword="String" /> sein.</param>
        <param name="targetOutputs">Die Ausgaben der einzelnen angegebenen Ziele. <see langword="Null" />-Werte werden akzeptiert.</param>
        <param name="toolsVersion">Standardwert = "3.5." Gibt die Toolsetversion für den zu verwendenden Build an. <see langword="Null" />-Werte werden akzeptiert.</param>
        <summary>Initiiert die Builderstellung einer Projektdatei. Wenn der Build erfolgreich erstellt wurde, werden die Ausgaben der angegebenen Ziele zurückgegeben, sofern vorhanden.</summary>
        <returns>
          <see langword="true" />, wenn die Builderstellung erfolgreich war, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn keine Ziele angegeben werden, [!INCLUDE[vstecmsbuild](~/includes/vstecmsbuild-md.md)] erstellt die Standardziele des Projekts.  
  
 Zielausgaben werden zurückgegeben, als <xref:Microsoft.Build.Framework.ITaskItem> Arrays indiziert nach Zielnamen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildProjectFilesInParallel">
      <MemberSignature Language="C#" Value="public bool BuildProjectFilesInParallel (string[] projectFileNames, string[] targetNames, System.Collections.IDictionary[] globalProperties, System.Collections.IDictionary[] targetOutputsPerProject, string[] toolsVersion, bool useResultsCache, bool unloadProjectsOnCompletion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool BuildProjectFilesInParallel(string[] projectFileNames, string[] targetNames, class System.Collections.IDictionary[] globalProperties, class System.Collections.IDictionary[] targetOutputsPerProject, string[] toolsVersion, bool useResultsCache, bool unloadProjectsOnCompletion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Framework.IBuildEngine2.BuildProjectFilesInParallel(System.String[],System.String[],System.Collections.IDictionary[],System.Collections.IDictionary[],System.String[],System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function BuildProjectFilesInParallel (projectFileNames As String(), targetNames As String(), globalProperties As IDictionary(), targetOutputsPerProject As IDictionary(), toolsVersion As String(), useResultsCache As Boolean, unloadProjectsOnCompletion As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool BuildProjectFilesInParallel(cli::array &lt;System::String ^&gt; ^ projectFileNames, cli::array &lt;System::String ^&gt; ^ targetNames, cli::array &lt;System::Collections::IDictionary ^&gt; ^ globalProperties, cli::array &lt;System::Collections::IDictionary ^&gt; ^ targetOutputsPerProject, cli::array &lt;System::String ^&gt; ^ toolsVersion, bool useResultsCache, bool unloadProjectsOnCompletion);" />
      <MemberSignature Language="F#" Value="abstract member BuildProjectFilesInParallel : string[] * string[] * System.Collections.IDictionary[] * System.Collections.IDictionary[] * string[] * bool * bool -&gt; bool" Usage="iBuildEngine2.BuildProjectFilesInParallel (projectFileNames, targetNames, globalProperties, targetOutputsPerProject, toolsVersion, useResultsCache, unloadProjectsOnCompletion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectFileNames" Type="System.String[]" />
        <Parameter Name="targetNames" Type="System.String[]" />
        <Parameter Name="globalProperties" Type="System.Collections.IDictionary[]" />
        <Parameter Name="targetOutputsPerProject" Type="System.Collections.IDictionary[]" />
        <Parameter Name="toolsVersion" Type="System.String[]" />
        <Parameter Name="useResultsCache" Type="System.Boolean" />
        <Parameter Name="unloadProjectsOnCompletion" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="projectFileNames">Die Namen der zu erstellenden Projektdateien.</param>
        <param name="targetNames">Die Namen der zu erstellenden Ziele im Projekt. Mehrere Ziele müssen mit einem Semikolon (;) getrennt werden. <see langword="Null" />-Werte werden akzeptiert.</param>
        <param name="globalProperties">Ein <see cref="T:System.Collections.IDictionary" /> zusätzlicher globaler Eigenschaften, die auf das Projekt angewendet werden sollen. Der Schlüssel und der Wert müssen vom Datentyp <see langword="String" /> sein. Arrayeinträge können <see langword="null" /> sein.</param>
        <param name="targetOutputsPerProject">Die Ausgaben der einzelnen angegebenen Ziele. <see langword="Null" />-Werte werden akzeptiert.</param>
        <param name="toolsVersion">Standardwert = "3.5." Gibt die Toolsetversion für den zu verwendenden Build an. <see langword="Null" />-Werte werden akzeptiert.</param>
        <param name="useResultsCache">Bei <see langword="true" /> wird die Operation nur ausgeführt, wenn der Cache nicht bereits das Ergebnis enthält. Nach der Operation wird das Ergebnis im Cache gespeichert.</param>
        <param name="unloadProjectsOnCompletion">Bei <see langword="true" /> wird das Projekt entladen, sobald die Operation abgeschlossen wurde.</param>
        <summary>Ermöglicht es Aufgaben, in Systemen mit mehreren Prozessoren oder mit Mehrkernprozessoren parallele Builds für die angegebenen Projektdateien zu initiieren. Wenn die Builds erfolgreich erstellt wurden, werden die Ausgaben der angegebenen Ziele zurückgegeben, sofern vorhanden.</summary>
        <returns>
          <see langword="True" />, wenn der Build erfolgreich erstellt wurde, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Beide `targetNames` und `targetOutputs` akzeptieren `null` Werte. Wenn keine Ziele angegeben sind, werden die Standardziele erstellt. Zielausgaben werden zurückgegeben, als <xref:Microsoft.Build.Framework.ITaskItem> Arrays indiziert nach Zielnamen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRunningMultipleNodes">
      <MemberSignature Language="C#" Value="public bool IsRunningMultipleNodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRunningMultipleNodes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Framework.IBuildEngine2.IsRunningMultipleNodes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRunningMultipleNodes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRunningMultipleNodes { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsRunningMultipleNodes : bool" Usage="Microsoft.Build.Framework.IBuildEngine2.IsRunningMultipleNodes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt zurück, ob das System im Einzelprozessormodus oder im Multiprozessormodus ausgeführt wird.</summary>
        <value>
          <see langword="true" />, wenn das System im Multiprozessormodus ausgeführt wird, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Build-Engine ist in nur einem Prozessor-Modus (`IsRunningMultipleNodes` = `false`) Wenn sie mit der Anzahl der CPUs, die gleich 1 initialisiert und die Build-Engine ist nicht als ein untergeordnetes Modul. Die Build-Engine wird im Multiprozessormodus (`IsRunningMultipleNodes` = `true`) Wenn es mit einer Anzahl von CPUs, die größer als 1 initialisiert wird, oder wenn die Build-Engine ein untergeordnetes Modul ist.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>