<Type Name="ITaskFactory2" FullName="Microsoft.Build.Framework.ITaskFactory2">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d6a4675554f8121820bbf7ce61e81984349e1f24" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69287768" /></Metadata><TypeSignature Language="C#" Value="public interface ITaskFactory2 : Microsoft.Build.Framework.ITaskFactory" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITaskFactory2 implements class Microsoft.Build.Framework.ITaskFactory" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Framework.ITaskFactory2" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITaskFactory2&#xA;Implements ITaskFactory" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITaskFactory2 : Microsoft::Build::Framework::ITaskFactory" />
  <TypeSignature Language="F#" Value="type ITaskFactory2 = interface&#xA;    interface ITaskFactory" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Framework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Build.Framework.ITaskFactory</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Beschreibt und erweitert die <see cref="T:Microsoft.Build.Framework.ITaskFactory" />-Schnittstelle, die eine Aufgabenfactoryinstanz implementieren soll.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateTask">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITask CreateTask (Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost, System.Collections.Generic.IDictionary&lt;string,string&gt; taskIdentityParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Build.Framework.ITask CreateTask(class Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; taskIdentityParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Framework.ITaskFactory2.CreateTask(Microsoft.Build.Framework.IBuildEngine,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateTask (taskFactoryLoggingHost As IBuildEngine, taskIdentityParameters As IDictionary(Of String, String)) As ITask" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Framework::ITask ^ CreateTask(Microsoft::Build::Framework::IBuildEngine ^ taskFactoryLoggingHost, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ taskIdentityParameters);" />
      <MemberSignature Language="F#" Value="abstract member CreateTask : Microsoft.Build.Framework.IBuildEngine * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; Microsoft.Build.Framework.ITask" Usage="iTaskFactory2.CreateTask (taskFactoryLoggingHost, taskIdentityParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="taskFactoryLoggingHost" Type="Microsoft.Build.Framework.IBuildEngine" />
        <Parameter Name="taskIdentityParameters" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="taskFactoryLoggingHost">Der Aufgabenfactory-Protokollierungshost protokolliert Meldungen im Kontext der Aufgabe.</param>
        <param name="taskIdentityParameters">Besondere Parameter, die die Aufgabenfactory verwenden kann, um zu ändern, wie diese Aufgaben ausführt werden, beispielsweise Laufzeit und Architektur.</param>
        <summary>Erstellen Sie eine Instanz der zu verwendenden Aufgabe, mit einem optionalen Satz "spezieller" Parameter, die auf dem einzelnen Taskaufruf mithilfe der standardmäßigen Taskparameter in MSBuildRuntime und MSBuildArchitecture festgelegt sind. MSBuild stellt eine Implementierung dieser Schnittstelle, TaskHostFactory, her, die „MSBuildRuntime“ mit den Werten „CLR2“, „CLR4“, „CurrentRuntime“ und „*“ (alle) und „MSBuildArchitecture“ mit den Werten „x86“, „x64“, „CurrentArchitecture“ und „\*“ (alle) verwendet. Eine Implementierung von ITaskFactory2 kann diese vordefinierten Werte von MSBuildRuntime und MSBuildArchitecture verwenden, oder neue Werte für diese Parameter angeben.</summary>
        <returns>Die generierte Aufgabe oder <c>NULL</c>, wenn die Aufgabe nicht erstellt werden konnte.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn eine aufgabenfactory ITaskFactory2 implementiert, ruft MSBuild diese Methode anstelle von ITaskFactory. kreatetask auf.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public bool Initialize (string taskName, System.Collections.Generic.IDictionary&lt;string,string&gt; factoryIdentityParameters, System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Framework.TaskPropertyInfo&gt; parameterGroup, string taskBody, Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Initialize(string taskName, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; factoryIdentityParameters, class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Framework.TaskPropertyInfo&gt; parameterGroup, string taskBody, class Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Framework.ITaskFactory2.Initialize(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Framework.TaskPropertyInfo},System.String,Microsoft.Build.Framework.IBuildEngine)" />
      <MemberSignature Language="VB.NET" Value="Public Function Initialize (taskName As String, factoryIdentityParameters As IDictionary(Of String, String), parameterGroup As IDictionary(Of String, TaskPropertyInfo), taskBody As String, taskFactoryLoggingHost As IBuildEngine) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Initialize(System::String ^ taskName, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ factoryIdentityParameters, System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Framework::TaskPropertyInfo ^&gt; ^ parameterGroup, System::String ^ taskBody, Microsoft::Build::Framework::IBuildEngine ^ taskFactoryLoggingHost);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Collections.Generic.IDictionary&lt;string, Microsoft.Build.Framework.TaskPropertyInfo&gt; * string * Microsoft.Build.Framework.IBuildEngine -&gt; bool" Usage="iTaskFactory2.Initialize (taskName, factoryIdentityParameters, parameterGroup, taskBody, taskFactoryLoggingHost)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="taskName" Type="System.String" />
        <Parameter Name="factoryIdentityParameters" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="parameterGroup" Type="System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Framework.TaskPropertyInfo&gt;" />
        <Parameter Name="taskBody" Type="System.String" />
        <Parameter Name="taskFactoryLoggingHost" Type="Microsoft.Build.Framework.IBuildEngine" />
      </Parameters>
      <Docs>
        <param name="taskName">Der Name der Aufgabe.</param>
        <param name="factoryIdentityParameters">Besondere Parameter, die die Aufgabenfactory verwenden kann, um zu ändern, wie diese Aufgaben ausführt werden, beispielsweise Laufzeit und Architektur. Der Schlüssel ist der Name des Parameters und der Wert ist der Parameterwert. Dies ist der Satz von Parametern, der auf dem UsingTask z B mit den UsingTask-Laufzeit- und -Architekturparametern festgelegt wurde.</param>
        <param name="parameterGroup">Die Parametergruppe.</param>
        <param name="taskBody">Der Aufgabentext.</param>
        <param name="taskFactoryLoggingHost">Der Protokollierungshost für die Aufgabenfactory.</param>
        <summary>Initialisiert diese Factory zum Instanziieren von Aufgaben mit einem bestimmten Inlineaufgabenblock und einem Satz von UsingTask-Parametern. MSBuild stellt eine Implementierung dieser Schnittstelle, TaskHostFactory, her, die „Runtime“ mit den Werten „CLR2“, „CLR4“, „CurrentRuntime“ und „*“ (alle) und „Architecture“ mit den Werten „x86“, „x64“, „CurrentArchitecture“ und „\*“ (alle) verwendet. Eine Implementierung von ITaskFactory2 kann diese vordefinierten Werte von Runtime und Architecture verwenden, oder neue Werte für diese Parameter angeben.</summary>
        <returns>Ein Wert, der angibt, ob die Initialisierung erfolgreich war.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die MSBuild-Engine ruft dies auf, um die Factory zu initialisieren. Hierdurch wird die Factory so weit initialisiert, dass die sie gefragt werden kann, ob Aufgabennamen von der Factory erstellt werden können. Wenn eine aufgabenfactory ITaskFactory2 implementiert, wird diese Initialize-Methode anstelle von ITaskFactory. Initialize aufgerufen.  
  
 Taskfactor ylogginghost protokolliert Nachrichten im Kontext des Ziels, in dem die Aufgabe zum ersten Mal verwendet wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
