<Type Name="ITaskFactory2" FullName="Microsoft.Build.Framework.ITaskFactory2">
  <Metadata><Meta Name="ms.openlocfilehash" Value="85f72d2a1281340ff2b0b47c4bfa7ff0b6df46a3" /><Meta Name="ms.sourcegitcommit" Value="397961a0164281b579f68064c3bb66c071f374d9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/14/2020" /><Meta Name="ms.locfileid" Value="86315694" /></Metadata><TypeSignature Language="C#" Value="public interface ITaskFactory2 : Microsoft.Build.Framework.ITaskFactory" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITaskFactory2 implements class Microsoft.Build.Framework.ITaskFactory" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Framework.ITaskFactory2" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITaskFactory2&#xA;Implements ITaskFactory" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITaskFactory2 : Microsoft::Build::Framework::ITaskFactory" />
  <TypeSignature Language="F#" Value="type ITaskFactory2 = interface&#xA;    interface ITaskFactory" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Framework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>15.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Build.Framework.ITaskFactory</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="b990f-101">Schnittstelle, die von einer aufgabenfactory-Instanz implementiert werden soll, wenn Sie neue UsingTask-Parameter wie Runtime und Architecture verwenden soll.</span><span class="sxs-lookup"><span data-stu-id="b990f-101">Interface that a task factory Instance should implement if it wants to be able to use new UsingTask parameters such as Runtime and Architecture.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateTask">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITask CreateTask (Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost, System.Collections.Generic.IDictionary&lt;string,string&gt; taskIdentityParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Build.Framework.ITask CreateTask(class Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; taskIdentityParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Framework.ITaskFactory2.CreateTask(Microsoft.Build.Framework.IBuildEngine,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateTask (taskFactoryLoggingHost As IBuildEngine, taskIdentityParameters As IDictionary(Of String, String)) As ITask" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Framework::ITask ^ CreateTask(Microsoft::Build::Framework::IBuildEngine ^ taskFactoryLoggingHost, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ taskIdentityParameters);" />
      <MemberSignature Language="F#" Value="abstract member CreateTask : Microsoft.Build.Framework.IBuildEngine * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; Microsoft.Build.Framework.ITask" Usage="iTaskFactory2.CreateTask (taskFactoryLoggingHost, taskIdentityParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="taskFactoryLoggingHost" Type="Microsoft.Build.Framework.IBuildEngine" />
        <Parameter Name="taskIdentityParameters" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="taskFactoryLoggingHost"><span data-ttu-id="b990f-102">Der Aufgabenfactory-Protokollierungshost protokolliert Meldungen im Kontext der Aufgabe.</span><span class="sxs-lookup"><span data-stu-id="b990f-102">The task factory logging host will log messages in the context of the task.</span></span></param>
        <param name="taskIdentityParameters"><span data-ttu-id="b990f-103">Besondere Parameter, die die Aufgabenfactory verwenden kann, um zu ändern, wie diese Aufgaben ausführt werden, beispielsweise Laufzeit und Architektur.</span><span class="sxs-lookup"><span data-stu-id="b990f-103">Special parameters that the task factory can use to modify how it executes tasks, such as Runtime and Architecture.</span></span>  
            <span data-ttu-id="b990f-104">Der Schlüssel ist der Name des Parameters und der Wert ist der Parameterwert.</span><span class="sxs-lookup"><span data-stu-id="b990f-104">The key is the name of the parameter and the value is the parameter's value.</span></span>  <span data-ttu-id="b990f-105">Dies ist der Satz von Parametern, die auf den Task Aufruf selbst festgelegt wurden, z. b. die speziellen Parameter msbuildruntime und msbuildarchitecture.</span><span class="sxs-lookup"><span data-stu-id="b990f-105">This is the set of parameters that was set to the task invocation itself, via e.g. the special MSBuildRuntime and MSBuildArchitecture parameters.</span></span></param>
        <summary><span data-ttu-id="b990f-106">Erstellen Sie eine Instanz der zu verwendenden Aufgabe, mit einem optionalen Satz "spezieller" Parameter, die auf dem einzelnen Taskaufruf mithilfe der standardmäßigen Taskparameter in MSBuildRuntime und MSBuildArchitecture festgelegt sind.</span><span class="sxs-lookup"><span data-stu-id="b990f-106">Create an instance of the task to be used, with an optional set of "special" parameters set on the individual task invocation using the MSBuildRuntime and MSBuildArchitecture default task parameters.</span></span>  <span data-ttu-id="b990f-107">MSBuild stellt eine Implementierung dieser Schnittstelle, taskhostfactory, bereit, die "msbuildruntime" mit den Werten "CLR2", "CLR4", "currentruntime" und "*" (Any) verwendet. und "msbuildarchitecture" mit den Werten "x86", "x64", "currentarchitecture" und "*" (Any).</span><span class="sxs-lookup"><span data-stu-id="b990f-107">MSBuild provides an implementation of this interface, TaskHostFactory, that uses "MSBuildRuntime", with values "CLR2", "CLR4", "CurrentRuntime", and "*" (Any); and "MSBuildArchitecture", with values "x86", "x64", "CurrentArchitecture", and "*" (Any).</span></span>  <span data-ttu-id="b990f-108">Eine Implementierung von ITaskFactory2 kann diese vordefinierten Werte von MSBuildRuntime und MSBuildArchitecture verwenden, oder neue Werte für diese Parameter angeben.</span><span class="sxs-lookup"><span data-stu-id="b990f-108">An implementer of ITaskFactory2 can choose to use these pre-defined MSBuildRuntime and MSBuildArchitecture values, or can specify new values for these parameters.</span></span></summary>
        <returns><span data-ttu-id="b990f-109">Die generierte Aufgabe oder <c>NULL</c>, wenn die Aufgabe nicht erstellt werden konnte.</span><span class="sxs-lookup"><span data-stu-id="b990f-109">The generated task, or <c>null</c> if the task failed to be created.</span></span></returns>
        <remarks><span data-ttu-id="b990f-110">Wenn eine aufgabenfactory ITaskFactory2 implementiert, ruft MSBuild diese Methode anstelle von ITaskFactory. kreatetask auf.</span><span class="sxs-lookup"><span data-stu-id="b990f-110">If a task factory implements ITaskFactory2, MSBuild will call this method instead of ITaskFactory.CreateTask.</span></span></remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public bool Initialize (string taskName, System.Collections.Generic.IDictionary&lt;string,string&gt; factoryIdentityParameters, System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Framework.TaskPropertyInfo&gt; parameterGroup, string taskBody, Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Initialize(string taskName, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; factoryIdentityParameters, class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Framework.TaskPropertyInfo&gt; parameterGroup, string taskBody, class Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Framework.ITaskFactory2.Initialize(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Framework.TaskPropertyInfo},System.String,Microsoft.Build.Framework.IBuildEngine)" />
      <MemberSignature Language="VB.NET" Value="Public Function Initialize (taskName As String, factoryIdentityParameters As IDictionary(Of String, String), parameterGroup As IDictionary(Of String, TaskPropertyInfo), taskBody As String, taskFactoryLoggingHost As IBuildEngine) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Initialize(System::String ^ taskName, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ factoryIdentityParameters, System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Framework::TaskPropertyInfo ^&gt; ^ parameterGroup, System::String ^ taskBody, Microsoft::Build::Framework::IBuildEngine ^ taskFactoryLoggingHost);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Collections.Generic.IDictionary&lt;string, Microsoft.Build.Framework.TaskPropertyInfo&gt; * string * Microsoft.Build.Framework.IBuildEngine -&gt; bool" Usage="iTaskFactory2.Initialize (taskName, factoryIdentityParameters, parameterGroup, taskBody, taskFactoryLoggingHost)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="taskName" Type="System.String" />
        <Parameter Name="factoryIdentityParameters" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="parameterGroup" Type="System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Framework.TaskPropertyInfo&gt;" />
        <Parameter Name="taskBody" Type="System.String" />
        <Parameter Name="taskFactoryLoggingHost" Type="Microsoft.Build.Framework.IBuildEngine" />
      </Parameters>
      <Docs>
        <param name="taskName"><span data-ttu-id="b990f-111">Der Name der Aufgabe.</span><span class="sxs-lookup"><span data-stu-id="b990f-111">Name of the task.</span></span></param>
        <param name="factoryIdentityParameters"><span data-ttu-id="b990f-112">Besondere Parameter, die die Aufgabenfactory verwenden kann, um zu ändern, wie diese Aufgaben ausführt werden, beispielsweise Laufzeit und Architektur.</span><span class="sxs-lookup"><span data-stu-id="b990f-112">Special parameters that the task factory can use to modify how it executes tasks, such as Runtime and Architecture.</span></span>  <span data-ttu-id="b990f-113">Der Schlüssel ist der Name des Parameters und der Wert ist der Parameterwert.</span><span class="sxs-lookup"><span data-stu-id="b990f-113">The key is the name of the parameter and the value is the parameter's value.</span></span> <span data-ttu-id="b990f-114">Dies ist der Satz von Parametern, der auf dem UsingTask z B mit den UsingTask-Laufzeit- und -Architekturparametern festgelegt wurde.</span><span class="sxs-lookup"><span data-stu-id="b990f-114">This is the set of parameters that was set on the UsingTask using e.g. the UsingTask Runtime and Architecture parameters.</span></span></param>
        <param name="parameterGroup"><span data-ttu-id="b990f-115">Die Parametergruppe.</span><span class="sxs-lookup"><span data-stu-id="b990f-115">The parameter group.</span></span></param>
        <param name="taskBody"><span data-ttu-id="b990f-116">Der Aufgabentext.</span><span class="sxs-lookup"><span data-stu-id="b990f-116">The task body.</span></span></param>
        <param name="taskFactoryLoggingHost"><span data-ttu-id="b990f-117">Der Protokollierungshost für die Aufgabenfactory.</span><span class="sxs-lookup"><span data-stu-id="b990f-117">The task factory logging host.</span></span></param>
        <summary><span data-ttu-id="b990f-118">Initialisiert diese Factory zum Instanziieren von Aufgaben mit einem bestimmten Inlineaufgabenblock und einem Satz von UsingTask-Parametern.</span><span class="sxs-lookup"><span data-stu-id="b990f-118">Initializes this factory for instantiating tasks with a particular inline task block and a set of UsingTask parameters.</span></span>  <span data-ttu-id="b990f-119">MSBuild stellt eine Implementierung dieser Schnittstelle, taskhostfactory, bereit, die "Runtime" mit den Werten "CLR2", "CLR4", "currentruntime" und "*" (Any) verwendet. und "Architecture" mit den Werten "x86", "x64", "currentarchitecture" und "*" (Any).</span><span class="sxs-lookup"><span data-stu-id="b990f-119">MSBuild provides an implementation of this interface, TaskHostFactory, that uses "Runtime", with values "CLR2", "CLR4", "CurrentRuntime", and "*" (Any); and "Architecture", with values "x86", "x64", "CurrentArchitecture", and "*" (Any).</span></span>  <span data-ttu-id="b990f-120">Eine Implementierung von ITaskFactory2 kann diese vordefinierten Werte von Runtime und Architecture verwenden, oder neue Werte für diese Parameter angeben.</span><span class="sxs-lookup"><span data-stu-id="b990f-120">An implementer of ITaskFactory2 can choose to use these pre-defined Runtime and Architecture values, or can specify new values for these parameters.</span></span></summary>
        <returns><span data-ttu-id="b990f-121">Ein Wert, der angibt, ob die Initialisierung erfolgreich war.</span><span class="sxs-lookup"><span data-stu-id="b990f-121">A value indicating whether initialization was successful.</span></span></returns>
        <remarks><para><span data-ttu-id="b990f-122">Die MSBuild-Engine ruft dies auf, um die Factory zu initialisieren.</span><span class="sxs-lookup"><span data-stu-id="b990f-122">MSBuild engine will call this to initialize the factory.</span></span> <span data-ttu-id="b990f-123">Hierdurch wird die Factory so weit initialisiert, dass die sie gefragt werden kann, ob Aufgabennamen von der Factory erstellt werden können.</span><span class="sxs-lookup"><span data-stu-id="b990f-123">This should initialize the factory enough so that the factory can be asked whether or not task names can be created by the factory.</span></span>  <span data-ttu-id="b990f-124">Wenn eine aufgabenfactory ITaskFactory2 implementiert, wird diese Initialize-Methode anstelle von ITaskFactory.Initialize aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="b990f-124">If a task factory implements ITaskFactory2, this Initialize method will be called in place of ITaskFactory.Initialize.</span></span></para>
          <para>
<span data-ttu-id="b990f-125">Taskfactor ylogginghost protokolliert Nachrichten im Kontext des Ziels, in dem die Aufgabe zum ersten Mal verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="b990f-125">The taskFactoryLoggingHost will log messages in the context of the target where the task is first used.</span></span>
            </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>
