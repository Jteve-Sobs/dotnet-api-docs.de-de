<Type Name="ILogger" FullName="Microsoft.Build.Framework.ILogger">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2d8b8a75b54be78be64fdfaaaeb3b3df916301c1" />
    <Meta Name="ms.sourcegitcommit" Value="1b899505ed6d42225f2b3c9150bfdc080d0d1f9b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/28/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ILogger" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ILogger" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Framework.ILogger" />
  <TypeSignature Language="VB.NET" Value="Public Interface ILogger" />
  <TypeSignature Language="C++ CLI" Value="public interface class ILogger" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Framework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="0665d-101">Definiert ein MSBuild-Protokollierungsmodul, das Systemereignisse bei der Builderstellung abonniert.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0665d-101">Defines an MSBuild logger, which subscribes to build system events.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0665d-102">Alle Protokollierungsklassen müssen diese Schnittstelle in erkannt werden implementieren die [!INCLUDE[vstecmsbuild](~/includes/vstecmsbuild-md.md)] Modul.</span><span class="sxs-lookup"><span data-stu-id="0665d-102">All logger classes must implement this interface to be recognized by the [!INCLUDE[vstecmsbuild](~/includes/vstecmsbuild-md.md)] engine.</span></span>  
  
 <span data-ttu-id="0665d-103">Statt direkt implementieren dieser Schnittstelle können Sie auch Ihre Klasse ableiten, von der Hilfsklasse <xref:Microsoft.Build.Utilities.Logger>, stellt standardimplementierungen einiger <xref:Microsoft.Build.Framework.ILogger> Elemente.</span><span class="sxs-lookup"><span data-stu-id="0665d-103">Instead of implementing this interface directly, you can also derive your class from the helper class, <xref:Microsoft.Build.Utilities.Logger>, which provides default implementations of some <xref:Microsoft.Build.Framework.ILogger> members.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0665d-104">Im folgende Beispiel wird gezeigt, wie eine einfache Protokollierung geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="0665d-104">The following example shows how to write a basic logger.</span></span>  
  
 [!code-csharp[msbuild_BasicLogger#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_BasicLogger/CS/msbuild_BasicLogger.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize (Microsoft.Build.Framework.IEventSource eventSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(class Microsoft.Build.Framework.IEventSource eventSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Framework.ILogger.Initialize(Microsoft.Build.Framework.IEventSource)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize (eventSource As IEventSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Initialize(Microsoft::Build::Framework::IEventSource ^ eventSource);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSource" Type="Microsoft.Build.Framework.IEventSource" />
      </Parameters>
      <Docs>
        <param name="eventSource">
          <span data-ttu-id="0665d-105">Die für die Protokollierungsmodule verfügbaren Ereignisse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0665d-105">The events available to loggers.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0665d-106">Abonniert bestimmte Ereignisse für Protokollierungsmodule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0665d-106">Subscribes loggers to specific events.</span>
          </span>
          <span data-ttu-id="0665d-107">Diese Methode wird aufgerufen, wenn das Protokollierungsmodul vor der Auslösung eines Ereignisses beim Buildmodul registriert wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0665d-107">This method is called when the logger is registered with the build engine, before any events are raised.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public string Parameters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Parameters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Framework.ILogger.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public Property Parameters As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Parameters { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0665d-108">Ruft die benutzerdefinierten Parameter der Protokollierung ab oder legt sie fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0665d-108">Gets or sets the user-defined parameters of the logger.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0665d-109">Die Protokollierungsparameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0665d-109">The logger parameters.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0665d-110">Parameter können in dieser Eigenschaft in einem beliebigen Format dargestellt werden.</span><span class="sxs-lookup"><span data-stu-id="0665d-110">Parameters may be represented in this property in any format.</span></span> <span data-ttu-id="0665d-111">Z. B. um zwei Parameter und Werte darstellen, können Sie die Zeichenfolge "parameter1 = Wert1; parameter2 = Wert2".</span><span class="sxs-lookup"><span data-stu-id="0665d-111">For example, to represent two parameters and values, you could use the string "parameter1=value1;parameter2=value2".</span></span>  
  
 <span data-ttu-id="0665d-112">Diese Eigenschaft kann ein NULL-Verweis (`Nothing` in Visual Basic) sein.</span><span class="sxs-lookup"><span data-stu-id="0665d-112">This property can be a null reference (`Nothing` in Visual Basic).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public void Shutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Shutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Framework.ILogger.Shutdown" />
      <MemberSignature Language="VB.NET" Value="Public Sub Shutdown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Shutdown();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0665d-113">Gibt bei der Initialisierung oder während der Builderstellung die Ressourcen frei, die dem Protokollierungsmodul zugeordnet sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0665d-113">Releases the resources allocated to the logger at the time of initialization or during the build.</span>
          </span>
          <span data-ttu-id="0665d-114">Diese Methode wird aufgerufen, wenn die Registrierung des Protokollierungsmodul beim Buildmodul nach der Auslösung aller Ereignisse aufgehoben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0665d-114">This method is called when the logger is unregistered from the engine, after all events are raised.</span>
          </span>
          <span data-ttu-id="0665d-115">Ein [!INCLUDE[vstecmsbuild](~/includes/vstecmsbuild-md.md)]-Host hebt die Registrierung von Protokollierungsmodulen i. d. R. unmittelbar vor dem Beenden auf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0665d-115">A host of [!INCLUDE[vstecmsbuild](~/includes/vstecmsbuild-md.md)] typically unregisters loggers immediately before quitting.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Verbosity">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.LoggerVerbosity Verbosity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Build.Framework.LoggerVerbosity Verbosity" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Framework.ILogger.Verbosity" />
      <MemberSignature Language="VB.NET" Value="Public Property Verbosity As LoggerVerbosity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Framework::LoggerVerbosity Verbosity { Microsoft::Build::Framework::LoggerVerbosity get(); void set(Microsoft::Build::Framework::LoggerVerbosity value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.LoggerVerbosity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0665d-116">Ruft die Detailebene für das Ereignisprotokoll ab oder legt sie fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0665d-116">Gets or sets the level of detail to show in the event log.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0665d-117">Einer der Enumerationswerte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0665d-117">One of the enumeration values.</span>
          </span>
          <span data-ttu-id="0665d-118">Der Standardwert ist <see cref="F:Microsoft.Build.Framework.LoggerVerbosity.Normal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0665d-118">The default is <see cref="F:Microsoft.Build.Framework.LoggerVerbosity.Normal" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0665d-119">Während eine Protokollierung ist frei, um die Ereignisse auswählen, die protokolliert werden, wird basierend auf den Ausführlichkeitsgrad Richtlinien eine konsistente benutzerumgebung erstellt.</span><span class="sxs-lookup"><span data-stu-id="0665d-119">While a logger is free to choose the events it logs, following the verbosity guidelines creates a consistent user experience.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>