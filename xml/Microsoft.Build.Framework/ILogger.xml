<Type Name="ILogger" FullName="Microsoft.Build.Framework.ILogger">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ebf57ee75d546be75ec599d110577858603762f7" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86599640" /></Metadata><TypeSignature Language="C#" Value="public interface ILogger" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ILogger" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Framework.ILogger" />
  <TypeSignature Language="VB.NET" Value="Public Interface ILogger" />
  <TypeSignature Language="C++ CLI" Value="public interface class ILogger" />
  <TypeSignature Language="F#" Value="type ILogger = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Framework</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>15.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Diese Schnittstelle definiert eine „Protokollierung“ im Buildsystem. Eine Protokollierung abonniert Buildsystemereignisse. Alle Protokollierungsklassen müssen diese Schnittstelle implementieren, um von der Build-Engine erkannt zu werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Alle Protokollierungs Klassen müssen diese Schnittstelle implementieren, um von der-Engine erkannt zu werden [!INCLUDE[vstecmsbuild](~/includes/vstecmsbuild-md.md)] .  
  
 Anstatt diese Schnittstelle direkt zu implementieren, können Sie auch die Klasse von der Hilfsklasse ableiten, <xref:Microsoft.Build.Utilities.Logger> die Standard Implementierungen einiger Member bereitstellt <xref:Microsoft.Build.Framework.ILogger> .  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie eine grundlegende Protokollierung geschrieben wird.  
  
 [!code-csharp[msbuild_BasicLogger#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_BasicLogger/CS/msbuild_BasicLogger.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize (Microsoft.Build.Framework.IEventSource eventSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(class Microsoft.Build.Framework.IEventSource eventSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Framework.ILogger.Initialize(Microsoft.Build.Framework.IEventSource)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize (eventSource As IEventSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Initialize(Microsoft::Build::Framework::IEventSource ^ eventSource);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : Microsoft.Build.Framework.IEventSource -&gt; unit" Usage="iLogger.Initialize eventSource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSource" Type="Microsoft.Build.Framework.IEventSource" />
      </Parameters>
      <Docs>
        <param name="eventSource">Die für die Protokollierungsmodule verfügbaren Ereignisse.</param>
        <summary>Wird von der Build-Engine aufgerufen, damit Protokollierungen die gewünschten Ereignisse abonnieren können.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public string Parameters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Parameters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Framework.ILogger.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public Property Parameters As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Parameters { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Parameters : string with get, set" Usage="Microsoft.Build.Framework.ILogger.Parameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Diese Eigenschaft enthält die vom Benutzer angegebenen Parameter für die Protokollierung. Wenn keine Parameter angegeben werden, muss eine Protokollierung auf die Standardwerte zurückgesetzt werden. Wenn eine Protokollierung keine Parameter verwendet, kann diese Eigenschaft ignoriert werden.</summary>
        <value>Die Parameter Zeichenfolge (kann NULL sein).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Parameter können in einem beliebigen Format in dieser Eigenschaft dargestellt werden. Wenn Sie z. b. zwei Parameter und Werte darstellen möchten, können Sie die Zeichenfolge "parameter1 = value1; Parameter2 = Value2" verwenden.  
  
 Diese Eigenschaft kann ein NULL-Verweis (`Nothing` in Visual Basic) sein.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public void Shutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Shutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Framework.ILogger.Shutdown" />
      <MemberSignature Language="VB.NET" Value="Public Sub Shutdown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Shutdown();" />
      <MemberSignature Language="F#" Value="abstract member Shutdown : unit -&gt; unit" Usage="iLogger.Shutdown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wird von der Build-Engine aufgerufen, damit Protokollierungen alle Ressourcen freigeben können, die ihnen möglicherweise zum Initialisierungszeitpunkt oder während des Builds zugeteilt sind.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Verbosity">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.LoggerVerbosity Verbosity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Build.Framework.LoggerVerbosity Verbosity" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Framework.ILogger.Verbosity" />
      <MemberSignature Language="VB.NET" Value="Public Property Verbosity As LoggerVerbosity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Framework::LoggerVerbosity Verbosity { Microsoft::Build::Framework::LoggerVerbosity get(); void set(Microsoft::Build::Framework::LoggerVerbosity value); };" />
      <MemberSignature Language="F#" Value="member this.Verbosity : Microsoft.Build.Framework.LoggerVerbosity with get, set" Usage="Microsoft.Build.Framework.ILogger.Verbosity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.LoggerVerbosity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Der Ausführlichkeitsgrad bestimmt die Menge an Details, die im Ereignisprotokoll einer Protokollierung enthalten sind. Obwohl dies nur eine Empfehlung auf Grundlage von Benutzervorlieben ist und eine Protokollierung die genauen Ereignisse, die sie protokolliert, frei wählen kann, ist es für eine gute Benutzererfahrung dennoch wichtig, dass die Richtlinien für jede Ebene befolgt werden.</summary>
        <value>Der Ausführlichkeitsgrad.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Während eine Protokollierung die von ihr Protokollierungs Ereignisse auswählen kann, wird durch Befolgen der ausführlichkeits Richtlinien eine konsistente Benutzer Darstellung erstellt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
