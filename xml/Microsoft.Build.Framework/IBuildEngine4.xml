<Type Name="IBuildEngine4" FullName="Microsoft.Build.Framework.IBuildEngine4">
  <TypeSignature Language="C#" Value="public interface IBuildEngine4 : Microsoft.Build.Framework.IBuildEngine3" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IBuildEngine4 implements class Microsoft.Build.Framework.IBuildEngine, class Microsoft.Build.Framework.IBuildEngine2, class Microsoft.Build.Framework.IBuildEngine3" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Framework.IBuildEngine4" />
  <TypeSignature Language="VB.NET" Value="Public Interface IBuildEngine4&#xA;Implements IBuildEngine3" />
  <TypeSignature Language="C++ CLI" Value="public interface class IBuildEngine4 : Microsoft::Build::Framework::IBuildEngine3" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Framework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Build.Framework.IBuildEngine3</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="b496d-101">Diese Schnittstelle erweitert IBuildEngine, um einen Mechanismus bereitstellen, der es Aufgaben ermöglicht, Daten zwischen Aufgabenaufrufen auszutauschen.</span><span class="sxs-lookup"><span data-stu-id="b496d-101">This interface extends IBuildEngine to provide a mechanism allowing tasks to share data between task invocations.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetRegisteredTaskObject">
      <MemberSignature Language="C#" Value="public object GetRegisteredTaskObject (object key, Microsoft.Build.Framework.RegisteredTaskObjectLifetime lifetime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetRegisteredTaskObject(object key, valuetype Microsoft.Build.Framework.RegisteredTaskObjectLifetime lifetime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Framework.IBuildEngine4.GetRegisteredTaskObject(System.Object,Microsoft.Build.Framework.RegisteredTaskObjectLifetime)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRegisteredTaskObject (key As Object, lifetime As RegisteredTaskObjectLifetime) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetRegisteredTaskObject(System::Object ^ key, Microsoft::Build::Framework::RegisteredTaskObjectLifetime lifetime);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="lifetime" Type="Microsoft.Build.Framework.RegisteredTaskObjectLifetime" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="b496d-102">Der Schlüssel, der zum Abrufen des Objekts verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="b496d-102">The key used to retrieve the object.</span></span></param>
        <param name="lifetime"><span data-ttu-id="b496d-103">Die Lebensdauer des Objekts.</span><span class="sxs-lookup"><span data-stu-id="b496d-103">The lifetime of the object.</span></span></param>
        <summary><span data-ttu-id="b496d-104">Ruft ein zuvor registriertes Task-Objekt ab, das dem angegebenen Schlüssel gespeichert ist.</span><span class="sxs-lookup"><span data-stu-id="b496d-104">Retrieves a previously registered task object stored with the specified key.</span></span></summary>
        <returns><span data-ttu-id="b496d-105">Gibt ein registriertes Objekt zurück oder NULL, wenn kein Objekt vorhanden ist, das unter diesem Schlüssel registriert ist, oder wenn das Objekt durch frühe Auflistung entfernt wurde.</span><span class="sxs-lookup"><span data-stu-id="b496d-105">Returns a registered object, or null if there is no object registered under that key or if the object has been discarded through early collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterTaskObject">
      <MemberSignature Language="C#" Value="public void RegisterTaskObject (object key, object obj, Microsoft.Build.Framework.RegisteredTaskObjectLifetime lifetime, bool allowEarlyCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterTaskObject(object key, object obj, valuetype Microsoft.Build.Framework.RegisteredTaskObjectLifetime lifetime, bool allowEarlyCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Framework.IBuildEngine4.RegisterTaskObject(System.Object,System.Object,Microsoft.Build.Framework.RegisteredTaskObjectLifetime,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterTaskObject (key As Object, obj As Object, lifetime As RegisteredTaskObjectLifetime, allowEarlyCollection As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterTaskObject(System::Object ^ key, System::Object ^ obj, Microsoft::Build::Framework::RegisteredTaskObjectLifetime lifetime, bool allowEarlyCollection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="lifetime" Type="Microsoft.Build.Framework.RegisteredTaskObjectLifetime" />
        <Parameter Name="allowEarlyCollection" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="b496d-106">Der Schlüssel, der zum Abrufen des Objekts verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="b496d-106">The key used to retrieve the object.</span></span></param>
        <param name="obj"><span data-ttu-id="b496d-107">Das Objekt, das für eine weitere Benutzung vorgehalten wird.</span><span class="sxs-lookup"><span data-stu-id="b496d-107">The object to be held for later disposal.</span></span></param>
        <param name="lifetime"><span data-ttu-id="b496d-108">Die Lebensdauer des Objekts.</span><span class="sxs-lookup"><span data-stu-id="b496d-108">The lifetime of the object.</span></span></param>
        <param name="allowEarlyCollection"><span data-ttu-id="b496d-109">Flag, das angibt, ob das Objekt bereits vor der angeforderten Zeit verworfen werden kann.</span><span class="sxs-lookup"><span data-stu-id="b496d-109">Flag that determines whether the object can be disposed earlier than the requested time.</span></span></param>
        <summary><span data-ttu-id="b496d-110">Registriert ein Objekt bei dem System, das zu einem bestimmten Zeitpunkt in der Zukunft verworfen werden wird.</span><span class="sxs-lookup"><span data-stu-id="b496d-110">Registers an object with the system that will be disposed of at some specified time in the future.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b496d-111">Diese Methode kann von Tasks aufgerufen werden der Status für Aufrufe der Task, z. B. Daten Zwischenspeichern von Aufgaben verwalten müssen.</span><span class="sxs-lookup"><span data-stu-id="b496d-111">This method may be called by tasks which need to maintain state across task invocations, such as data caching tasks.</span></span> <span data-ttu-id="b496d-112">Es wird dringend empfohlen, die `allowEarlyCollection` festgelegt werden, um `true` , wenn das Objekt erheblich mehr Daten beibehalten werden.</span><span class="sxs-lookup"><span data-stu-id="b496d-112">It is strongly recommended that `allowEarlyCollection` be set to `true` if the object will retain any significant amount of data.</span></span>  
  
 <span data-ttu-id="b496d-113">Der Thread, auf dem das Objekt verworfen wird, möglicherweise nach dem Zufallsprinzip, aber es wird nicht gelöscht werden, während die Aufgabe ausgeführt wird, selbst wenn `allowEarlyCollection` festgelegt ist, um `true`.</span><span class="sxs-lookup"><span data-stu-id="b496d-113">The thread on which the object is disposed may be arbitrarily, but it will not be disposed while the task is executing, even if `allowEarlyCollection` is set to `true`.</span></span>  
  
 <span data-ttu-id="b496d-114">Wenn das Objekt IDisposable implementiert, wird IDisposable.Dispose vor verwirft, für das Objekt aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="b496d-114">If the object implements IDisposable, IDisposable.Dispose will be invoked on the object before discarding it.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterTaskObject">
      <MemberSignature Language="C#" Value="public object UnregisterTaskObject (object key, Microsoft.Build.Framework.RegisteredTaskObjectLifetime lifetime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object UnregisterTaskObject(object key, valuetype Microsoft.Build.Framework.RegisteredTaskObjectLifetime lifetime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Framework.IBuildEngine4.UnregisterTaskObject(System.Object,Microsoft.Build.Framework.RegisteredTaskObjectLifetime)" />
      <MemberSignature Language="VB.NET" Value="Public Function UnregisterTaskObject (key As Object, lifetime As RegisteredTaskObjectLifetime) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ UnregisterTaskObject(System::Object ^ key, Microsoft::Build::Framework::RegisteredTaskObjectLifetime lifetime);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="lifetime" Type="Microsoft.Build.Framework.RegisteredTaskObjectLifetime" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="b496d-115">Der Schlüssel, der zum Abrufen des Objekts verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="b496d-115">The key used to retrieve the object.</span></span></param>
        <param name="lifetime"><span data-ttu-id="b496d-116">Die Lebensdauer des Objekts.</span><span class="sxs-lookup"><span data-stu-id="b496d-116">The lifetime of the object.</span></span></param>
        <summary><span data-ttu-id="b496d-117">Hebt die Registrierung eines zuvor registrierten Task-Objekts auf.</span><span class="sxs-lookup"><span data-stu-id="b496d-117">Unregisters a previously registered task object.</span></span></summary>
        <returns><span data-ttu-id="b496d-118">Gibt ein zuvor registriertes Objekt zurück oder NULL, wenn kein Objekt vorhanden ist, das unter diesem Schlüssel registriert ist, oder wenn das Objekt durch frühe Auflistung entfernt wurde.</span><span class="sxs-lookup"><span data-stu-id="b496d-118">Returns a previously registered object, or null if there is no object registered under that key or if the object has been discarded through early collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>