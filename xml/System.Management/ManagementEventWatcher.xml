<Type Name="ManagementEventWatcher" FullName="System.Management.ManagementEventWatcher">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c34f223e051fd27fd3346500aecc0cc12132f4e9" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48723975" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ManagementEventWatcher : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ManagementEventWatcher extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.Management.ManagementEventWatcher" />
  <TypeSignature Language="VB.NET" Value="Public Class ManagementEventWatcher&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class ManagementEventWatcher : System::ComponentModel::Component" />
  <TypeSignature Language="F#" Value="type ManagementEventWatcher = class&#xA;    inherit Component" />
  <AssemblyInfo>
    <AssemblyName>System.Management</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="5a480-101">Abonniert die temporären Ereignisbenachrichtigungen basierend auf einer angegebenen *Ereignisabfrage*.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5a480-101">Subscribes to temporary event notifications based on a specified *event query*.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5a480-102">Das folgende Beispiel zeigt, wie der Client die Benachrichtigung, wenn eine Instanz von empfängt **Win32_Process** wird erstellt, da die Ereignisklasse **__InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="5a480-102">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="5a480-103">Weitere Informationen finden Sie in der Windows-Verwaltungsinstrumentation-Dokumentation in der MSDN Library unter http://msdn.microsoft.com/library.</span><span class="sxs-lookup"><span data-stu-id="5a480-103">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="5a480-104">Der Client empfängt Ereignisse synchron durch Aufrufen der <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A>-Methode.</span><span class="sxs-lookup"><span data-stu-id="5a480-104">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="5a480-105">Während der Beispielcode ausgeführt wird, kann dieses Beispiel durch Starten eines Prozesses wie Editor getestet werden.</span><span class="sxs-lookup"><span data-stu-id="5a480-105">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher/cs/ManagementEventWatcher.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher/vb/ManagementEventWatcher.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5a480-106">Initialisiert eine neue Instanz der <see cref="T:System.Management.ManagementEventWatcher" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a480-106">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5a480-107">Initialisiert eine neue Instanz der <see cref="T:System.Management.ManagementEventWatcher" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a480-107">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class.</span>
          </span>
          <span data-ttu-id="5a480-108">Legen Sie für die weitere Initialisierung die Eigenschaften für das Objekt fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a480-108">For further initialization, set the properties on the object.</span>
          </span>
          <span data-ttu-id="5a480-109">Dies ist der Standardkonstruktor</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a480-109">This is the default constructor.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="5a480-110">.NET Framework-Sicherheit</span><span class="sxs-lookup"><span data-stu-id="5a480-110">.NET Framework Security</span></span>  
 <span data-ttu-id="5a480-111">Volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span><span class="sxs-lookup"><span data-stu-id="5a480-111">Full trust for the immediate caller.</span></span> <span data-ttu-id="5a480-112">Dieser Member kann von nur teilweise vertrauenswürdigem Code nicht verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="5a480-112">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="5a480-113">Weitere Informationen finden Sie unter [Verwenden von Bibliotheken aus teilweise vertrauenswürdigem Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="5a480-113">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5a480-114">Das folgende Beispiel zeigt, wie der Client die Benachrichtigung, wenn eine Instanz von empfängt **Win32_Process** wird erstellt, da die Ereignisklasse **__InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="5a480-114">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="5a480-115">Weitere Informationen finden Sie in der Windows-Verwaltungsinstrumentation-Dokumentation in der MSDN Library unter http://msdn.microsoft.com/library.</span><span class="sxs-lookup"><span data-stu-id="5a480-115">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="5a480-116">Der Client empfängt Ereignisse synchron durch Aufrufen der <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A>-Methode.</span><span class="sxs-lookup"><span data-stu-id="5a480-116">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="5a480-117">Während der Beispielcode ausgeführt wird, kann dieses Beispiel durch Starten eines Prozesses wie Editor getestet werden.</span><span class="sxs-lookup"><span data-stu-id="5a480-117">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher/cs/ManagementEventWatcher.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher/vb/ManagementEventWatcher.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (System.Management.EventQuery query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Management.EventQuery query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor(System.Management.EventQuery)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (query As EventQuery)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher(System::Management::EventQuery ^ query);" />
      <MemberSignature Language="F#" Value="new System.Management.ManagementEventWatcher : System.Management.EventQuery -&gt; System.Management.ManagementEventWatcher" Usage="new System.Management.ManagementEventWatcher query" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="query" Type="System.Management.EventQuery" />
      </Parameters>
      <Docs>
        <param name="query">
          <span data-ttu-id="5a480-118">Eine <see cref="T:System.Management.EventQuery" />, die eine WMI-Ereignisabfrage darstellt, die die vom Monitor zu überwachenden Ereignisse bestimmt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a480-118">An <see cref="T:System.Management.EventQuery" /> representing a WMI event query, which determines the events for which the watcher will listen.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a480-119">Initialisiert eine neue Instanz der <see cref="T:System.Management.ManagementEventWatcher" />-Klasse, wenn eine WMI-*Ereignisabfrage* angegeben ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a480-119">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class when given a WMI *event query*.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a480-120">Der Namespace, in dem der Monitor Ereignisse überwacht, ist der Standardnamespace, der momentan festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="5a480-120">The namespace in which the watcher will be listening for events is the default namespace that is currently set.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="5a480-121">.NET Framework-Sicherheit</span><span class="sxs-lookup"><span data-stu-id="5a480-121">.NET Framework Security</span></span>  
 <span data-ttu-id="5a480-122">Volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span><span class="sxs-lookup"><span data-stu-id="5a480-122">Full trust for the immediate caller.</span></span> <span data-ttu-id="5a480-123">Dieser Member kann von nur teilweise vertrauenswürdigem Code nicht verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="5a480-123">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="5a480-124">Weitere Informationen finden Sie unter [Verwenden von Bibliotheken aus teilweise vertrauenswürdigem Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="5a480-124">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5a480-125">In diesem Codebeispiel wird der Client empfängt Benachrichtigung, wenn eine Instanz von **Win32_Process** wird erstellt, da die Ereignisklasse **__InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="5a480-125">In this code example, the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="5a480-126">Weitere Informationen finden Sie in der Windows-Verwaltungsinstrumentation-Dokumentation in der MSDN Library unter http://msdn.microsoft.com/library.</span><span class="sxs-lookup"><span data-stu-id="5a480-126">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="5a480-127">Der Client empfängt Ereignisse synchron durch Aufrufen der <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A>-Methode.</span><span class="sxs-lookup"><span data-stu-id="5a480-127">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="5a480-128">Während der Beispielcode ausgeführt wird, kann dieses Beispiel durch Starten eines Prozesses wie Editor getestet werden.</span><span class="sxs-lookup"><span data-stu-id="5a480-128">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher-E#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-E/cs/ManagementEventWatcher-E.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher-E#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-E/vb/ManagementEventWatcher-E.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (string query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (query As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher(System::String ^ query);" />
      <MemberSignature Language="F#" Value="new System.Management.ManagementEventWatcher : string -&gt; System.Management.ManagementEventWatcher" Usage="new System.Management.ManagementEventWatcher query" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="query" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="query">
          <span data-ttu-id="5a480-129">Eine WMI-Ereignisabfrage, die die Ereignisse definiert, die der Monitor überwacht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a480-129">A WMI event query, which defines the events for which the watcher will listen.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a480-130">Initialisiert eine neue Instanz der <see cref="T:System.Management.ManagementEventWatcher" />-Klasse, wenn eine WMI-*Ereignisabfrage* in Form einer Zeichenabfolge vorhanden ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a480-130">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class when given a WMI *event query* in the form of a string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a480-131">Der Namespace, in dem der Monitor Ereignisse überwacht, ist der Standardnamespace, der momentan festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="5a480-131">The namespace in which the watcher will be listening for events is the default namespace that is currently set.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="5a480-132">.NET Framework-Sicherheit</span><span class="sxs-lookup"><span data-stu-id="5a480-132">.NET Framework Security</span></span>  
 <span data-ttu-id="5a480-133">Volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span><span class="sxs-lookup"><span data-stu-id="5a480-133">Full trust for the immediate caller.</span></span> <span data-ttu-id="5a480-134">Dieser Member kann von nur teilweise vertrauenswürdigem Code nicht verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="5a480-134">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="5a480-135">Weitere Informationen finden Sie unter [Verwenden von Bibliotheken aus teilweise vertrauenswürdigem Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="5a480-135">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5a480-136">Das folgende Beispiel zeigt, wie der Client die Benachrichtigung, wenn eine Instanz von empfängt **Win32_Process** wird erstellt, da die Ereignisklasse **__InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="5a480-136">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="5a480-137">Weitere Informationen finden Sie in der Windows-Verwaltungsinstrumentation-Dokumentation in der MSDN Library unter http://msdn.microsoft.com/library.</span><span class="sxs-lookup"><span data-stu-id="5a480-137">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="5a480-138">Der Client empfängt Ereignisse synchron durch Aufrufen der <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A>-Methode.</span><span class="sxs-lookup"><span data-stu-id="5a480-138">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="5a480-139">Während der Beispielcode ausgeführt wird, kann dieses Beispiel durch Starten eines Prozesses wie Editor getestet werden.</span><span class="sxs-lookup"><span data-stu-id="5a480-139">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher-S#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-S/cs/ManagementEventWatcher-S.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher-S#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-S/vb/ManagementEventWatcher-S.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (System.Management.ManagementScope scope, System.Management.EventQuery query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Management.ManagementScope scope, class System.Management.EventQuery query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scope As ManagementScope, query As EventQuery)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher(System::Management::ManagementScope ^ scope, System::Management::EventQuery ^ query);" />
      <MemberSignature Language="F#" Value="new System.Management.ManagementEventWatcher : System.Management.ManagementScope * System.Management.EventQuery -&gt; System.Management.ManagementEventWatcher" Usage="new System.Management.ManagementEventWatcher (scope, query)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scope" Type="System.Management.ManagementScope" />
        <Parameter Name="query" Type="System.Management.EventQuery" />
      </Parameters>
      <Docs>
        <param name="scope">
          <span data-ttu-id="5a480-140">Ein <see cref="T:System.Management.ManagementScope" />, der den Gültigkeitsbereich (Namespace) darstellt, in dem der Monitor Ereignisse überwacht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a480-140">A <see cref="T:System.Management.ManagementScope" /> representing the scope (namespace) in which the watcher will listen for events.</span>
          </span>
        </param>
        <param name="query">
          <span data-ttu-id="5a480-141">Eine <see cref="T:System.Management.EventQuery" />, die eine WMI-Ereignisabfrage darstellt, die die vom Monitor zu überwachenden Ereignisse bestimmt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a480-141">An <see cref="T:System.Management.EventQuery" /> representing a WMI event query, which determines the events for which the watcher will listen.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a480-142">Initialisiert eine neue Instanz der <see cref="T:System.Management.ManagementEventWatcher" />-Klasse, die Ereignisse überwacht, die mit der angegebenen WMI-*Ereignisabfrage* übereinstimmen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a480-142">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class that listens for events conforming to the given WMI *event query*.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="5a480-143">.NET Framework-Sicherheit</span><span class="sxs-lookup"><span data-stu-id="5a480-143">.NET Framework Security</span></span>  
 <span data-ttu-id="5a480-144">Volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span><span class="sxs-lookup"><span data-stu-id="5a480-144">Full trust for the immediate caller.</span></span> <span data-ttu-id="5a480-145">Dieser Member kann von nur teilweise vertrauenswürdigem Code nicht verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="5a480-145">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="5a480-146">Weitere Informationen finden Sie unter [Verwenden von Bibliotheken aus teilweise vertrauenswürdigem Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="5a480-146">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5a480-147">In diesem Codebeispiel wird der Client empfängt Benachrichtigung, wenn eine Instanz von **Win32_Process** wird erstellt, da die Ereignisklasse **__InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="5a480-147">In this code example, the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="5a480-148">Weitere Informationen finden Sie in der Windows-Verwaltungsinstrumentation-Dokumentation in der MSDN Library unter http://msdn.microsoft.com/library.</span><span class="sxs-lookup"><span data-stu-id="5a480-148">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="5a480-149">Der Client empfängt Ereignisse synchron durch Aufrufen der <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A>-Methode.</span><span class="sxs-lookup"><span data-stu-id="5a480-149">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="5a480-150">Während der Beispielcode ausgeführt wird, kann dieses Beispiel durch Starten eines Prozesses wie Editor getestet werden.</span><span class="sxs-lookup"><span data-stu-id="5a480-150">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher-M_E#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-M_E/cs/ManagementEventWatcher-M_E.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher-M_E#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-M_E/vb/ManagementEventWatcher-M_E.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (string scope, string query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string scope, string query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scope As String, query As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher(System::String ^ scope, System::String ^ query);" />
      <MemberSignature Language="F#" Value="new System.Management.ManagementEventWatcher : string * string -&gt; System.Management.ManagementEventWatcher" Usage="new System.Management.ManagementEventWatcher (scope, query)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="query" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="scope">
          <span data-ttu-id="5a480-151">Der Gültigkeitsbereich der Verwaltung (Namespace), in dem der Monitor Ereignisse überwacht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a480-151">The management scope (namespace) in which the watcher will listen for events.</span>
          </span>
        </param>
        <param name="query">
          <span data-ttu-id="5a480-152">Die Abfrage, die die Ereignisse definiert, die der Monitor überwacht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a480-152">The query that defines the events for which the watcher will listen.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a480-153">Initialisiert eine neue Instanz der <see cref="T:System.Management.ManagementEventWatcher" />-Klasse, die Ereignisse überwacht, die mit der angegebenen WMI-*Ereignisabfrage* übereinstimmen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a480-153">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class that listens for events conforming to the given WMI *event query*.</span>
          </span>
          <span data-ttu-id="5a480-154">Bei dieser Variante werden die Abfrage und der Gültigkeitsbereich als Zeichenfolgen angegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a480-154">For this variant, the query and the scope are specified as strings.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="5a480-155">.NET Framework-Sicherheit</span><span class="sxs-lookup"><span data-stu-id="5a480-155">.NET Framework Security</span></span>  
 <span data-ttu-id="5a480-156">Volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span><span class="sxs-lookup"><span data-stu-id="5a480-156">Full trust for the immediate caller.</span></span> <span data-ttu-id="5a480-157">Dieser Member kann von nur teilweise vertrauenswürdigem Code nicht verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="5a480-157">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="5a480-158">Weitere Informationen finden Sie unter [Verwenden von Bibliotheken aus teilweise vertrauenswürdigem Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="5a480-158">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5a480-159">Das folgende Beispiel zeigt, wie der Client die Benachrichtigung, wenn eine Instanz von empfängt **Win32_Process** wird erstellt, da die Ereignisklasse **__InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="5a480-159">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="5a480-160">Weitere Informationen finden Sie in der Windows-Verwaltungsinstrumentation-Dokumentation in der MSDN Library unter http://msdn.microsoft.com/library.</span><span class="sxs-lookup"><span data-stu-id="5a480-160">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="5a480-161">Der Client empfängt Ereignisse synchron durch Aufrufen der <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A>-Methode.</span><span class="sxs-lookup"><span data-stu-id="5a480-161">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="5a480-162">Während der Beispielcode ausgeführt wird, kann dieses Beispiel durch Starten eines Prozesses wie Editor getestet werden.</span><span class="sxs-lookup"><span data-stu-id="5a480-162">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher-S_S#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-S_S/cs/ManagementEventWatcher-S_S.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher-S_S#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-S_S/vb/ManagementEventWatcher-S_S.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (System.Management.ManagementScope scope, System.Management.EventQuery query, System.Management.EventWatcherOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Management.ManagementScope scope, class System.Management.EventQuery query, class System.Management.EventWatcherOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery,System.Management.EventWatcherOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scope As ManagementScope, query As EventQuery, options As EventWatcherOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher(System::Management::ManagementScope ^ scope, System::Management::EventQuery ^ query, System::Management::EventWatcherOptions ^ options);" />
      <MemberSignature Language="F#" Value="new System.Management.ManagementEventWatcher : System.Management.ManagementScope * System.Management.EventQuery * System.Management.EventWatcherOptions -&gt; System.Management.ManagementEventWatcher" Usage="new System.Management.ManagementEventWatcher (scope, query, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scope" Type="System.Management.ManagementScope" />
        <Parameter Name="query" Type="System.Management.EventQuery" />
        <Parameter Name="options" Type="System.Management.EventWatcherOptions" />
      </Parameters>
      <Docs>
        <param name="scope">
          <span data-ttu-id="5a480-163">Ein <see cref="T:System.Management.ManagementScope" />, der den Gültigkeitsbereich (Namespace) darstellt, in dem der Monitor Ereignisse überwacht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a480-163">A <see cref="T:System.Management.ManagementScope" /> representing the scope (namespace) in which the watcher will listen for events.</span>
          </span>
        </param>
        <param name="query">
          <span data-ttu-id="5a480-164">Eine <see cref="T:System.Management.EventQuery" />, die eine WMI-Ereignisabfrage darstellt, die die vom Monitor zu überwachenden Ereignisse bestimmt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a480-164">An <see cref="T:System.Management.EventQuery" /> representing a WMI event query, which determines the events for which the watcher will listen.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="5a480-165">Eine Instanz der <see cref="T:System.Management.EventWatcherOptions" />-Klasse, die zusätzliche Optionen zum Überwachen von Ereignissen darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a480-165">An <see cref="T:System.Management.EventWatcherOptions" /> representing additional options used to watch for events.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a480-166">Initialisiert eine neue Instanz der <see cref="T:System.Management.ManagementEventWatcher" />-Klasse, die Ereignisse überwacht, die mit der angegebenen WMI-Ereignisabfrage gemäß den angegebenen Optionen übereinstimmen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a480-166">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class that listens for events conforming to the given WMI event query, according to the specified options.</span>
          </span>
          <span data-ttu-id="5a480-167">Bei dieser Variante sind die Abfrage und der Gültigkeitsbereich angegebene Objekte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a480-167">For this variant, the query and the scope are specified objects.</span>
          </span>
          <span data-ttu-id="5a480-168">Das Optionsobjekt kann Optionen angeben, z. B. Timeout- und Kontextinformationen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a480-168">The options object can specify options such as time-out and context information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="5a480-169">.NET Framework-Sicherheit</span><span class="sxs-lookup"><span data-stu-id="5a480-169">.NET Framework Security</span></span>  
 <span data-ttu-id="5a480-170">Volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span><span class="sxs-lookup"><span data-stu-id="5a480-170">Full trust for the immediate caller.</span></span> <span data-ttu-id="5a480-171">Dieser Member kann von nur teilweise vertrauenswürdigem Code nicht verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="5a480-171">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="5a480-172">Weitere Informationen finden Sie unter [Verwenden von Bibliotheken aus teilweise vertrauenswürdigem Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="5a480-172">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5a480-173">Das folgende Beispiel zeigt, wie der Client die Benachrichtigung, wenn eine Instanz von empfängt **Win32_Process** wird erstellt, da die Ereignisklasse **__InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="5a480-173">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="5a480-174">Weitere Informationen finden Sie in der Windows-Verwaltungsinstrumentation-Dokumentation in der MSDN Library unter http://msdn.microsoft.com/library.</span><span class="sxs-lookup"><span data-stu-id="5a480-174">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="5a480-175">Der Client empfängt Ereignisse synchron durch Aufrufen der <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A>-Methode.</span><span class="sxs-lookup"><span data-stu-id="5a480-175">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="5a480-176">Während der Beispielcode ausgeführt wird, kann dieses Beispiel durch Starten eines Prozesses wie Editor getestet werden.</span><span class="sxs-lookup"><span data-stu-id="5a480-176">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher-M_E_E#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-M_E_E/cs/ManagementEventWatcher-M_E_E.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher-M_E_E#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-M_E_E/vb/ManagementEventWatcher-M_E_E.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (string scope, string query, System.Management.EventWatcherOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string scope, string query, class System.Management.EventWatcherOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor(System.String,System.String,System.Management.EventWatcherOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scope As String, query As String, options As EventWatcherOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher(System::String ^ scope, System::String ^ query, System::Management::EventWatcherOptions ^ options);" />
      <MemberSignature Language="F#" Value="new System.Management.ManagementEventWatcher : string * string * System.Management.EventWatcherOptions -&gt; System.Management.ManagementEventWatcher" Usage="new System.Management.ManagementEventWatcher (scope, query, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="query" Type="System.String" />
        <Parameter Name="options" Type="System.Management.EventWatcherOptions" />
      </Parameters>
      <Docs>
        <param name="scope">
          <span data-ttu-id="5a480-177">Der Gültigkeitsbereich der Verwaltung (Namespace), in dem der Monitor Ereignisse überwacht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a480-177">The management scope (namespace) in which the watcher will listen for events.</span>
          </span>
        </param>
        <param name="query">
          <span data-ttu-id="5a480-178">Die Abfrage, die die Ereignisse definiert, die der Monitor überwacht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a480-178">The query that defines the events for which the watcher will listen.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="5a480-179">Eine Instanz der <see cref="T:System.Management.EventWatcherOptions" />-Klasse, die zusätzliche Optionen zum Überwachen von Ereignissen darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a480-179">An <see cref="T:System.Management.EventWatcherOptions" /> representing additional options used to watch for events.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a480-180">Initialisiert eine neue Instanz der <see cref="T:System.Management.ManagementEventWatcher" />-Klasse, die Ereignisse überwacht, die mit der angegebenen WMI-*Ereignisabfrage* gemäß den angegebenen Optionen übereinstimmen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a480-180">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class that listens for events conforming to the given WMI *event query*, according to the specified options.</span>
          </span>
          <span data-ttu-id="5a480-181">Bei dieser Variante werden die Abfrage und der Gültigkeitsbereich als Zeichenfolgen angegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a480-181">For this variant, the query and the scope are specified as strings.</span>
          </span>
          <span data-ttu-id="5a480-182">Das Optionsobjekt kann Optionen angeben, z. B. Timeout- und Kontextinformationen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a480-182">The options object can specify options such as a time-out and context information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="5a480-183">.NET Framework-Sicherheit</span><span class="sxs-lookup"><span data-stu-id="5a480-183">.NET Framework Security</span></span>  
 <span data-ttu-id="5a480-184">Volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span><span class="sxs-lookup"><span data-stu-id="5a480-184">Full trust for the immediate caller.</span></span> <span data-ttu-id="5a480-185">Dieser Member kann von nur teilweise vertrauenswürdigem Code nicht verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="5a480-185">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="5a480-186">Weitere Informationen finden Sie unter [Verwenden von Bibliotheken aus teilweise vertrauenswürdigem Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="5a480-186">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5a480-187">Das folgende Beispiel zeigt, wie der Client die Benachrichtigung, wenn eine Instanz von empfängt **Win32_Process** wird erstellt, da die Ereignisklasse **__InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="5a480-187">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="5a480-188">Weitere Informationen finden Sie in der Windows-Verwaltungsinstrumentation-Dokumentation in der MSDN Library unter http://msdn.microsoft.com/library.</span><span class="sxs-lookup"><span data-stu-id="5a480-188">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="5a480-189">Der Client empfängt Ereignisse synchron durch Aufrufen der <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A>-Methode.</span><span class="sxs-lookup"><span data-stu-id="5a480-189">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="5a480-190">Während der Beispielcode ausgeführt wird, kann dieses Beispiel durch Starten eines Prozesses wie Editor getestet werden.</span><span class="sxs-lookup"><span data-stu-id="5a480-190">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher-S_S_E#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-S_S_E/cs/ManagementEventWatcher-S_S_E.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher-S_S_E#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-S_S_E/vb/ManagementEventWatcher-S_S_E.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EventArrived">
      <MemberSignature Language="C#" Value="public event System.Management.EventArrivedEventHandler EventArrived;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Management.EventArrivedEventHandler EventArrived" />
      <MemberSignature Language="DocId" Value="E:System.Management.ManagementEventWatcher.EventArrived" />
      <MemberSignature Language="VB.NET" Value="Public Event EventArrived As EventArrivedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Management::EventArrivedEventHandler ^ EventArrived;" />
      <MemberSignature Language="F#" Value="member this.EventArrived : System.Management.EventArrivedEventHandler " Usage="member this.EventArrived : System.Management.EventArrivedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.EventArrivedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5a480-191">Tritt beim Eintreffen eines neuen Ereignisses ein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a480-191">Occurs when a new event arrives.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="event-data"></a><span data-ttu-id="5a480-192">Ereignisdaten</span><span class="sxs-lookup"><span data-stu-id="5a480-192">Event Data</span></span>  
 <span data-ttu-id="5a480-193">Der Ereignishandler empfängt ein Argument des Typs <xref:System.Management.EventArrivedEventArgs> mit diesem Ereignis verknüpft, die Daten enthält.</span><span class="sxs-lookup"><span data-stu-id="5a480-193">The event handler receives an argument of type <xref:System.Management.EventArrivedEventArgs> containing data related to this event.</span></span> <span data-ttu-id="5a480-194">Die folgenden <xref:System.Management.EventArrivedEventArgs> Eigenschaften enthalten Informationen, die speziell für dieses Ereignis.</span><span class="sxs-lookup"><span data-stu-id="5a480-194">The following <xref:System.Management.EventArrivedEventArgs> properties provide information specific to this event.</span></span>  
  
|<span data-ttu-id="5a480-195">Eigenschaft</span><span class="sxs-lookup"><span data-stu-id="5a480-195">Property</span></span>|<span data-ttu-id="5a480-196">Beschreibung </span><span class="sxs-lookup"><span data-stu-id="5a480-196">Description</span></span>|  
|--------------|-----------------|  
|<span data-ttu-id="5a480-197"><xref:System.Management.ManagementEventArgs.Context%2A> (geerbt von <xref:System.Management.ManagementEventArgs>)</span><span class="sxs-lookup"><span data-stu-id="5a480-197"><xref:System.Management.ManagementEventArgs.Context%2A> (inherited from <xref:System.Management.ManagementEventArgs>)</span></span>|<span data-ttu-id="5a480-198">Ruft den Operationskontext ab, der von der das Ereignis auslösenden Operation wiedergegeben wurde.</span><span class="sxs-lookup"><span data-stu-id="5a480-198">Gets the operation context echoed back from the operation that triggered the event.</span></span>|  
|<xref:System.Management.EventArrivedEventArgs.NewEvent%2A>|<span data-ttu-id="5a480-199">Ruft das übermittelte WMI-Ereignis ab.</span><span class="sxs-lookup"><span data-stu-id="5a480-199">Gets the WMI event that was delivered.</span></span>|  
  
## <a name="net-framework-security"></a><span data-ttu-id="5a480-200">.NET Framework-Sicherheit</span><span class="sxs-lookup"><span data-stu-id="5a480-200">.NET Framework Security</span></span>  
 <span data-ttu-id="5a480-201">Volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span><span class="sxs-lookup"><span data-stu-id="5a480-201">Full trust for the immediate caller.</span></span> <span data-ttu-id="5a480-202">Dieser Member kann von nur teilweise vertrauenswürdigem Code nicht verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="5a480-202">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="5a480-203">Weitere Informationen finden Sie unter [Verwenden von Bibliotheken aus teilweise vertrauenswürdigem Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="5a480-203">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ManagementEventWatcher ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ManagementEventWatcher ()" />
      <MemberSignature Language="F#" Value="abstract member Finalize : unit -&gt; unit&#xA;override this.Finalize : unit -&gt; unit" Usage="managementEventWatcher.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5a480-204">Stellt sicher, dass unerledigte Aufrufe gelöscht werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a480-204">Ensures that outstanding calls are cleared.</span>
          </span>
          <span data-ttu-id="5a480-205">Dies ist der Destruktor für das Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a480-205">This is the destructor for the object.</span>
          </span>
          <span data-ttu-id="5a480-206">In C# werden Finalizer mit Destruktorsyntax angegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a480-206">In C#, finalizers are expressed using destructor syntax.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="5a480-207">.NET Framework-Sicherheit</span><span class="sxs-lookup"><span data-stu-id="5a480-207">.NET Framework Security</span></span>  
 <span data-ttu-id="5a480-208">Volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span><span class="sxs-lookup"><span data-stu-id="5a480-208">Full trust for the immediate caller.</span></span> <span data-ttu-id="5a480-209">Dieser Member kann von nur teilweise vertrauenswürdigem Code nicht verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="5a480-209">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="5a480-210">Weitere Informationen finden Sie unter [Verwenden von Bibliotheken aus teilweise vertrauenswürdigem Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="5a480-210">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public System.Management.EventWatcherOptions Options { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.EventWatcherOptions Options" />
      <MemberSignature Language="DocId" Value="P:System.Management.ManagementEventWatcher.Options" />
      <MemberSignature Language="VB.NET" Value="Public Property Options As EventWatcherOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Management::EventWatcherOptions ^ Options { System::Management::EventWatcherOptions ^ get(); void set(System::Management::EventWatcherOptions ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Options : System.Management.EventWatcherOptions with get, set" Usage="System.Management.ManagementEventWatcher.Options" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.EventWatcherOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5a480-211">Ruft die Optionen für das Überwachen von Ereignissen ab oder legt diese fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a480-211">Gets or sets the options used to watch for events.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5a480-212">Gibt ein <see cref="T:System.Management.EventWatcherOptions" />-Objekt zurück, das die Ereignisoptionen für die Überwachung von Ereignissen enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a480-212">Returns an <see cref="T:System.Management.EventWatcherOptions" /> that contains the event options used to watch for events.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="5a480-213">Eigenschaftswert</span><span class="sxs-lookup"><span data-stu-id="5a480-213">Property Value</span></span>  
 <span data-ttu-id="5a480-214">Die Optionen verwendet, um Ereignisse zu überwachen.</span><span class="sxs-lookup"><span data-stu-id="5a480-214">The options used to watch for events.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="5a480-215">.NET Framework-Sicherheit</span><span class="sxs-lookup"><span data-stu-id="5a480-215">.NET Framework Security</span></span>  
 <span data-ttu-id="5a480-216">Volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span><span class="sxs-lookup"><span data-stu-id="5a480-216">Full trust for the immediate caller.</span></span> <span data-ttu-id="5a480-217">Dieser Member kann von nur teilweise vertrauenswürdigem Code nicht verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="5a480-217">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="5a480-218">Weitere Informationen finden Sie unter [Verwenden von Bibliotheken aus teilweise vertrauenswürdigem Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="5a480-218">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5a480-219">Das folgende Beispiel zeigt, wie der Client die Benachrichtigung, wenn eine Instanz von empfängt **Win32_Process** wird erstellt, da die Ereignisklasse **__InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="5a480-219">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="5a480-220">Weitere Informationen finden Sie in der Windows-Verwaltungsinstrumentation-Dokumentation in der MSDN Library unter http://msdn.microsoft.com/library.</span><span class="sxs-lookup"><span data-stu-id="5a480-220">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="5a480-221">Der Client empfängt Ereignisse synchron durch Aufrufen der <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A>-Methode.</span><span class="sxs-lookup"><span data-stu-id="5a480-221">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="5a480-222">Während der Beispielcode ausgeführt wird, kann dieses Beispiel durch Starten eines Prozesses wie Editor getestet werden.</span><span class="sxs-lookup"><span data-stu-id="5a480-222">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher_Options#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Options/cs/ManagementEventWatcher_Options.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher_Options#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Options/vb/ManagementEventWatcher_Options.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Query">
      <MemberSignature Language="C#" Value="public System.Management.EventQuery Query { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.EventQuery Query" />
      <MemberSignature Language="DocId" Value="P:System.Management.ManagementEventWatcher.Query" />
      <MemberSignature Language="VB.NET" Value="Public Property Query As EventQuery" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Management::EventQuery ^ Query { System::Management::EventQuery ^ get(); void set(System::Management::EventQuery ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Query : System.Management.EventQuery with get, set" Usage="System.Management.ManagementEventWatcher.Query" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.EventQuery</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5a480-223">Ruft die für die Ereignisse geltenden Kriterien ab oder legt diese fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a480-223">Gets or sets the criteria to apply to events.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5a480-224">Gibt eine <see cref="T:System.Management.EventQuery" /> zurück, die die auf Ereignisse anzuwendende Abfrage enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a480-224">Returns an <see cref="T:System.Management.EventQuery" /> that contains the query to apply to events.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="5a480-225">Eigenschaftswert</span><span class="sxs-lookup"><span data-stu-id="5a480-225">Property Value</span></span>  
 <span data-ttu-id="5a480-226">Die Kriterien für gelten für die Ereignisse, die entspricht der *Ereignisabfrage*.</span><span class="sxs-lookup"><span data-stu-id="5a480-226">The criteria to apply to the events, which is equal to the *event query*.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="5a480-227">.NET Framework-Sicherheit</span><span class="sxs-lookup"><span data-stu-id="5a480-227">.NET Framework Security</span></span>  
 <span data-ttu-id="5a480-228">Volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span><span class="sxs-lookup"><span data-stu-id="5a480-228">Full trust for the immediate caller.</span></span> <span data-ttu-id="5a480-229">Dieser Member kann von nur teilweise vertrauenswürdigem Code nicht verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="5a480-229">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="5a480-230">Weitere Informationen finden Sie unter [Verwenden von Bibliotheken aus teilweise vertrauenswürdigem Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="5a480-230">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5a480-231">Das folgende Beispiel zeigt, wie der Client die Benachrichtigung, wenn eine Instanz von empfängt **Win32_Process** wird erstellt, da die Ereignisklasse **__InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="5a480-231">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="5a480-232">Weitere Informationen finden Sie in der Windows-Verwaltungsinstrumentation-Dokumentation in der MSDN Library unter http://msdn.microsoft.com/library.</span><span class="sxs-lookup"><span data-stu-id="5a480-232">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="5a480-233">Der Client empfängt Ereignisse synchron durch Aufrufen der <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A>-Methode.</span><span class="sxs-lookup"><span data-stu-id="5a480-233">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="5a480-234">Während der Beispielcode ausgeführt wird, kann dieses Beispiel durch Starten eines Prozesses wie Editor getestet werden.</span><span class="sxs-lookup"><span data-stu-id="5a480-234">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher_Query#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Query/cs/ManagementEventWatcher_Query.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher_Query#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Query/vb/ManagementEventWatcher_Query.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scope">
      <MemberSignature Language="C#" Value="public System.Management.ManagementScope Scope { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.ManagementScope Scope" />
      <MemberSignature Language="DocId" Value="P:System.Management.ManagementEventWatcher.Scope" />
      <MemberSignature Language="VB.NET" Value="Public Property Scope As ManagementScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Management::ManagementScope ^ Scope { System::Management::ManagementScope ^ get(); void set(System::Management::ManagementScope ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Scope : System.Management.ManagementScope with get, set" Usage="System.Management.ManagementEventWatcher.Scope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.ManagementScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5a480-235">Ruft den Bereich ab, in dem Ereignisse überwacht werden sollen (Namespace oder Gültigkeitsbereich), oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a480-235">Gets or sets the scope in which to watch for events (namespace or scope).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5a480-236">Gibt einen <see cref="T:System.Management.ManagementScope" /> zurück, der den Bereich enthält, in dem Ereignisse zu überwachen sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a480-236">Returns a <see cref="T:System.Management.ManagementScope" /> that contains the scope the in which to watch for events.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="5a480-237">Eigenschaftswert</span><span class="sxs-lookup"><span data-stu-id="5a480-237">Property Value</span></span>  
 <span data-ttu-id="5a480-238">Der Bereich, in dem Überwachen von Ereignissen (Namespace oder Gültigkeitsbereich).</span><span class="sxs-lookup"><span data-stu-id="5a480-238">The scope in which to watch for events (namespace or scope).</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="5a480-239">.NET Framework-Sicherheit</span><span class="sxs-lookup"><span data-stu-id="5a480-239">.NET Framework Security</span></span>  
 <span data-ttu-id="5a480-240">Volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span><span class="sxs-lookup"><span data-stu-id="5a480-240">Full trust for the immediate caller.</span></span> <span data-ttu-id="5a480-241">Dieser Member kann von nur teilweise vertrauenswürdigem Code nicht verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="5a480-241">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="5a480-242">Weitere Informationen finden Sie unter [Verwenden von Bibliotheken aus teilweise vertrauenswürdigem Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="5a480-242">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5a480-243">Das folgende Beispiel zeigt, wie der Client die Benachrichtigung, wenn eine Instanz von empfängt **Win32_Process** wird erstellt, da die Ereignisklasse **__InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="5a480-243">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="5a480-244">Weitere Informationen finden Sie in der Windows-Verwaltungsinstrumentation-Dokumentation in der MSDN Library unter http://msdn.microsoft.com/library.</span><span class="sxs-lookup"><span data-stu-id="5a480-244">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="5a480-245">Der Client empfängt Ereignisse synchron durch Aufrufen der <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A>-Methode.</span><span class="sxs-lookup"><span data-stu-id="5a480-245">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="5a480-246">Während der Beispielcode ausgeführt wird, kann dieses Beispiel durch Starten eines Prozesses wie Editor getestet werden.</span><span class="sxs-lookup"><span data-stu-id="5a480-246">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher_Scope#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Scope/cs/ManagementEventWatcher_Scope.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher_Scope#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Scope/vb/ManagementEventWatcher_Scope.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; unit" Usage="managementEventWatcher.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5a480-247">Abonniert mit der angegebenen Abfrage Ereignisse und übermittelt sie asynchron über das <see cref="E:System.Management.ManagementEventWatcher.EventArrived" />-Ereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a480-247">Subscribes to events with the given query and delivers them, asynchronously, through the <see cref="E:System.Management.ManagementEventWatcher.EventArrived" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="5a480-248">.NET Framework-Sicherheit</span><span class="sxs-lookup"><span data-stu-id="5a480-248">.NET Framework Security</span></span>  
 <span data-ttu-id="5a480-249">Volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span><span class="sxs-lookup"><span data-stu-id="5a480-249">Full trust for the immediate caller.</span></span> <span data-ttu-id="5a480-250">Dieser Member kann von nur teilweise vertrauenswürdigem Code nicht verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="5a480-250">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="5a480-251">Weitere Informationen finden Sie unter [Verwenden von Bibliotheken aus teilweise vertrauenswürdigem Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="5a480-251">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="managementEventWatcher.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5a480-252">Hebt das Abonnement auf, unabhängig davon, ob es synchron oder asynchron ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a480-252">Cancels the subscription whether it is synchronous or asynchronous.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="5a480-253">.NET Framework-Sicherheit</span><span class="sxs-lookup"><span data-stu-id="5a480-253">.NET Framework Security</span></span>  
 <span data-ttu-id="5a480-254">Volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span><span class="sxs-lookup"><span data-stu-id="5a480-254">Full trust for the immediate caller.</span></span> <span data-ttu-id="5a480-255">Dieser Member kann von nur teilweise vertrauenswürdigem Code nicht verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="5a480-255">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="5a480-256">Weitere Informationen finden Sie unter [Verwenden von Bibliotheken aus teilweise vertrauenswürdigem Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="5a480-256">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5a480-257">Das folgende Beispiel zeigt, wie der Client die Benachrichtigung, wenn eine Instanz von empfängt **Win32_Process** wird erstellt, da die Ereignisklasse **__InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="5a480-257">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="5a480-258">Weitere Informationen finden Sie in der Windows-Verwaltungsinstrumentation-Dokumentation in der MSDN Library unter http://msdn.microsoft.com/library.</span><span class="sxs-lookup"><span data-stu-id="5a480-258">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="5a480-259">Der Client empfängt Ereignisse synchron durch Aufrufen der <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A>-Methode.</span><span class="sxs-lookup"><span data-stu-id="5a480-259">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="5a480-260">Während der Beispielcode ausgeführt wird, kann dieses Beispiel durch Starten eines Prozesses wie Editor getestet werden.</span><span class="sxs-lookup"><span data-stu-id="5a480-260">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher_Stop#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Stop/cs/ManagementEventWatcher_Stop.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher_Stop#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Stop/vb/ManagementEventWatcher_Stop.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stopped">
      <MemberSignature Language="C#" Value="public event System.Management.StoppedEventHandler Stopped;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Management.StoppedEventHandler Stopped" />
      <MemberSignature Language="DocId" Value="E:System.Management.ManagementEventWatcher.Stopped" />
      <MemberSignature Language="VB.NET" Value="Public Event Stopped As StoppedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Management::StoppedEventHandler ^ Stopped;" />
      <MemberSignature Language="F#" Value="member this.Stopped : System.Management.StoppedEventHandler " Usage="member this.Stopped : System.Management.StoppedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.StoppedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5a480-261">Tritt ein, wenn ein Abonnement aufgehoben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a480-261">Occurs when a subscription is canceled.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="event-data"></a><span data-ttu-id="5a480-262">Ereignisdaten</span><span class="sxs-lookup"><span data-stu-id="5a480-262">Event Data</span></span>  
 <span data-ttu-id="5a480-263">Der Ereignishandler empfängt ein Argument des Typs <xref:System.Management.StoppedEventArgs> mit diesem Ereignis verknüpft, die Daten enthält.</span><span class="sxs-lookup"><span data-stu-id="5a480-263">The event handler receives an argument of type <xref:System.Management.StoppedEventArgs> containing data related to this event.</span></span> <span data-ttu-id="5a480-264">Die folgenden <xref:System.Management.StoppedEventArgs> Eigenschaften enthalten Informationen, die speziell für dieses Ereignis.</span><span class="sxs-lookup"><span data-stu-id="5a480-264">The following <xref:System.Management.StoppedEventArgs> properties provide information specific to this event.</span></span>  
  
|<span data-ttu-id="5a480-265">Eigenschaft</span><span class="sxs-lookup"><span data-stu-id="5a480-265">Property</span></span>|<span data-ttu-id="5a480-266">Beschreibung </span><span class="sxs-lookup"><span data-stu-id="5a480-266">Description</span></span>|  
|--------------|-----------------|  
|<span data-ttu-id="5a480-267"><xref:System.Management.ManagementEventArgs.Context%2A> (geerbt von <xref:System.Management.ManagementEventArgs>)</span><span class="sxs-lookup"><span data-stu-id="5a480-267"><xref:System.Management.ManagementEventArgs.Context%2A> (inherited from <xref:System.Management.ManagementEventArgs>)</span></span>|<span data-ttu-id="5a480-268">Ruft den Operationskontext ab, der von der das Ereignis auslösenden Operation wiedergegeben wurde.</span><span class="sxs-lookup"><span data-stu-id="5a480-268">Gets the operation context echoed back from the operation that triggered the event.</span></span>|  
|<xref:System.Management.StoppedEventArgs.Status%2A>|<span data-ttu-id="5a480-269">Ruft den Abschlussstatus der Operation ab.</span><span class="sxs-lookup"><span data-stu-id="5a480-269">Gets the completion status of the operation.</span></span>|  
  
## <a name="net-framework-security"></a><span data-ttu-id="5a480-270">.NET Framework-Sicherheit</span><span class="sxs-lookup"><span data-stu-id="5a480-270">.NET Framework Security</span></span>  
 <span data-ttu-id="5a480-271">Volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span><span class="sxs-lookup"><span data-stu-id="5a480-271">Full trust for the immediate caller.</span></span> <span data-ttu-id="5a480-272">Dieser Member kann von nur teilweise vertrauenswürdigem Code nicht verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="5a480-272">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="5a480-273">Weitere Informationen finden Sie unter [Verwenden von Bibliotheken aus teilweise vertrauenswürdigem Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="5a480-273">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WaitForNextEvent">
      <MemberSignature Language="C#" Value="public System.Management.ManagementBaseObject WaitForNextEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Management.ManagementBaseObject WaitForNextEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.WaitForNextEvent" />
      <MemberSignature Language="VB.NET" Value="Public Function WaitForNextEvent () As ManagementBaseObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Management::ManagementBaseObject ^ WaitForNextEvent();" />
      <MemberSignature Language="F#" Value="member this.WaitForNextEvent : unit -&gt; System.Management.ManagementBaseObject" Usage="managementEventWatcher.WaitForNextEvent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.ManagementBaseObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5a480-274">Wartet auf das Eintreffen des nächsten Ereignisses, das mit der angegebenen Abfrage übereinstimmt, und gibt es anschließend zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a480-274">Waits for the next event that matches the specified query to arrive, and then returns it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5a480-275">Ein <see cref="T:System.Management.ManagementBaseObject" />, das das neu empfangene Ereignis darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a480-275">A <see cref="T:System.Management.ManagementBaseObject" /> representing the newly arrived event.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a480-276">Wenn das Ereignis Überwachungsobjekt Optionen mit einem angegebenen Timeout enthält, wartet die API nur für die angegebene Zeitspanne für das nächste Ereignis. Andernfalls wird die API, bis das nächste Ereignis tritt auf, blockiert.</span><span class="sxs-lookup"><span data-stu-id="5a480-276">If the event watcher object contains options with a specified time-out, the API will wait for the next event only for the specified amount of time; otherwise, the API will be blocked until the next event occurs.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="5a480-277">.NET Framework-Sicherheit</span><span class="sxs-lookup"><span data-stu-id="5a480-277">.NET Framework Security</span></span>  
 <span data-ttu-id="5a480-278">Volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span><span class="sxs-lookup"><span data-stu-id="5a480-278">Full trust for the immediate caller.</span></span> <span data-ttu-id="5a480-279">Dieser Member kann von nur teilweise vertrauenswürdigem Code nicht verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="5a480-279">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="5a480-280">Weitere Informationen finden Sie unter [Verwenden von Bibliotheken aus teilweise vertrauenswürdigem Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="5a480-280">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5a480-281">Das folgende Beispiel zeigt, wie der Client die Benachrichtigung, wenn eine Instanz von empfängt **Win32_Process** wird erstellt, da die Ereignisklasse **__InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="5a480-281">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="5a480-282">Weitere Informationen finden Sie in der Windows-Verwaltungsinstrumentation-Dokumentation in der MSDN Library unter http://msdn.microsoft.com/library.</span><span class="sxs-lookup"><span data-stu-id="5a480-282">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="5a480-283">Der Client empfängt Ereignisse synchron durch Aufrufen der <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A>-Methode.</span><span class="sxs-lookup"><span data-stu-id="5a480-283">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="5a480-284">Während der Beispielcode ausgeführt wird, kann dieses Beispiel durch Starten eines Prozesses wie Editor getestet werden.</span><span class="sxs-lookup"><span data-stu-id="5a480-284">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher_WaitForNextEvent#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_WaitForNextEvent/cs/ManagementEventWatcher_WaitForNextEvent.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher_WaitForNextEvent#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_WaitForNextEvent/vb/ManagementEventWatcher_WaitForNextEvent.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>