<Type Name="WqlEventQuery" FullName="System.Management.WqlEventQuery">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f15d1ae6e9375a589385420ad2c5fc1cb0d9e10c" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30460774" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WqlEventQuery : System.Management.EventQuery" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WqlEventQuery extends System.Management.EventQuery" />
  <TypeSignature Language="DocId" Value="T:System.Management.WqlEventQuery" />
  <TypeSignature Language="VB.NET" Value="Public Class WqlEventQuery&#xA;Inherits EventQuery" />
  <TypeSignature Language="C++ CLI" Value="public ref class WqlEventQuery : System::Management::EventQuery" />
  <AssemblyInfo>
    <AssemblyName>System.Management</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Management.EventQuery</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt eine WMI-Ereignisabfrage im *WQL*-Format dar.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Management.WqlEventQuery" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WqlEventQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.WqlEventQuery.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WqlEventQuery();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Management.WqlEventQuery" />-Klasse. Dies ist der Standardkonstruktor</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>.NET Framework-Sicherheit  
 Volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer. Dieser Member kann von nur teilweise vertrauenswürdigem Code nicht verwendet werden. Weitere Informationen finden Sie unter [Verwenden von Bibliotheken aus teilweise vertrauenswürdigem Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WqlEventQuery (string queryOrEventClassName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string queryOrEventClassName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.WqlEventQuery.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (queryOrEventClassName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WqlEventQuery(System::String ^ queryOrEventClassName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="queryOrEventClassName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="queryOrEventClassName">Die Zeichenfolge, die entweder die vollständige Ereignisabfrage oder den Namen der abzufragenden Ereignisklasse darstellt. Das Objekt versucht, die Zeichenfolge als gültige Ereignisabfrage zu analysieren. Wenn dies nicht möglich ist, geht der Parser davon aus, dass der Parameter einen Ereignisklassennamen darstellt.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Management.WqlEventQuery" />-Klasse, die auf der angegebenen Abfragezeichenfolge bzw. dem angegebenen Ereignisklassennamen beruht.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>.NET Framework-Sicherheit  
 Volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer. Dieser Member kann von nur teilweise vertrauenswürdigem Code nicht verwendet werden. Weitere Informationen finden Sie unter [Verwenden von Bibliotheken aus teilweise vertrauenswürdigem Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
   
  
## Examples  
 Im folgende Beispiel initialisiert eine <xref:System.Management.WqlEventQuery> durch Angeben einer Abfrage und initialisiert ein <xref:System.Management.WqlEventQuery> durch Angabe eines Ereignisses.  
  
 [!code-csharp[wminet_WqlEventQuery-S#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_WqlEventQuery-S/cs/WqlEventQuery-S.cs#1)]
 [!code-vb[wminet_WqlEventQuery-S#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_WqlEventQuery-S/vb/WqlEventQuery-S.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WqlEventQuery (string eventClassName, string condition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string eventClassName, string condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.WqlEventQuery.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (eventClassName As String, condition As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WqlEventQuery(System::String ^ eventClassName, System::String ^ condition);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="eventClassName" Type="System.String" />
        <Parameter Name="condition" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventClassName">Der Name der abzufragenden Ereignisklasse.</param>
        <param name="condition">Die Bedingung, die auf Ereignisse der angegebenen Klasse angewendet werden soll.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Management.WqlEventQuery" />-Klasse für den angegebenen Ereignisklassennamen mit der angegebenen Bedingung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>.NET Framework-Sicherheit  
 Volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer. Dieser Member kann von nur teilweise vertrauenswürdigem Code nicht verwendet werden. Weitere Informationen finden Sie unter [Verwenden von Bibliotheken aus teilweise vertrauenswürdigem Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WqlEventQuery (string eventClassName, TimeSpan withinInterval);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string eventClassName, valuetype System.TimeSpan withinInterval) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.WqlEventQuery.#ctor(System.String,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (eventClassName As String, withinInterval As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WqlEventQuery(System::String ^ eventClassName, TimeSpan withinInterval);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="eventClassName" Type="System.String" />
        <Parameter Name="withinInterval" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="eventClassName">Der Name der abzufragenden Ereignisklasse.</param>
        <param name="withinInterval">Ein <see cref="T:System.TimeSpan" />-Wert, der die für das Empfangen dieses Ereignisses zulässige Wartezeit angibt. Dieser Wert wird verwendet, wenn für die angeforderte Abfrage kein expliziter Ereignisanbieter vorhanden ist und WMI die Bedingung abrufen muss. Das Intervall ist der höchstzulässige Zeitraum, der vor dem Übermitteln einer Ereignisbenachrichtigung verstreichen darf.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Management.WqlEventQuery" />-Klasse für die angegebene Ereignisklasse mit der angegebenen Wartezeit.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>.NET Framework-Sicherheit  
 Volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer. Dieser Member kann von nur teilweise vertrauenswürdigem Code nicht verwendet werden. Weitere Informationen finden Sie unter [Verwenden von Bibliotheken aus teilweise vertrauenswürdigem Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
   
  
## Examples  
 Im folgende Beispiel initialisiert eine <xref:System.Management.WqlEventQuery> durch Angabe eines Ereignisses und eine Uhrzeit span-Wert, die für den Empfang dieses Ereignisses zulässige Wartezeit angibt.  
  
 [!code-csharp[wminet_WqlEventQuery-S_T#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_WqlEventQuery-S_T/cs/WqlEventQuery-S_T.cs#1)]
 [!code-vb[wminet_WqlEventQuery-S_T#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_WqlEventQuery-S_T/vb/WqlEventQuery-S_T.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WqlEventQuery (string eventClassName, string condition, TimeSpan groupWithinInterval);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string eventClassName, string condition, valuetype System.TimeSpan groupWithinInterval) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.WqlEventQuery.#ctor(System.String,System.String,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (eventClassName As String, condition As String, groupWithinInterval As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WqlEventQuery(System::String ^ eventClassName, System::String ^ condition, TimeSpan groupWithinInterval);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="eventClassName" Type="System.String" />
        <Parameter Name="condition" Type="System.String" />
        <Parameter Name="groupWithinInterval" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="eventClassName">Der Name der abzufragenden Ereignisklasse.</param>
        <param name="condition">Die Bedingung, die auf Ereignisse der angegebenen Klasse angewendet werden soll.</param>
        <param name="groupWithinInterval">Das angegebene Intervall, nach dessen Ablauf WMI anstelle zahlreicher Ereignisse ein <c>Aggregatereignis</c> sendet.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Management.WqlEventQuery" />-Klasse mit dem angegebenen Ereignisklassennamen, der Bedingung und dem Gruppierungsintervall.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>.NET Framework-Sicherheit  
 Volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer. Dieser Member kann von nur teilweise vertrauenswürdigem Code nicht verwendet werden. Weitere Informationen finden Sie unter [Verwenden von Bibliotheken aus teilweise vertrauenswürdigem Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WqlEventQuery (string eventClassName, TimeSpan withinInterval, string condition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string eventClassName, valuetype System.TimeSpan withinInterval, string condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.WqlEventQuery.#ctor(System.String,System.TimeSpan,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (eventClassName As String, withinInterval As TimeSpan, condition As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WqlEventQuery(System::String ^ eventClassName, TimeSpan withinInterval, System::String ^ condition);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="eventClassName" Type="System.String" />
        <Parameter Name="withinInterval" Type="System.TimeSpan" />
        <Parameter Name="condition" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventClassName">Der Name der abzufragenden Ereignisklasse.</param>
        <param name="withinInterval">Ein <see cref="T:System.TimeSpan" />-Wert, der die für das Empfangen dieses Ereignisses zulässige Wartezeit angibt. Dieser Wert wird verwendet, wenn für die angeforderte Abfrage kein expliziter Ereignisanbieter vorhanden ist und WMI die Bedingung abrufen muss. Das Intervall ist der höchstzulässige Zeitraum, der vor dem Übermitteln einer Ereignisbenachrichtigung verstreichen darf.</param>
        <param name="condition">Die Bedingung, die auf Ereignisse der angegebenen Klasse angewendet werden soll.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Management.WqlEventQuery" />-Klasse mit dem angegebenen Ereignisklassennamen, dem angegebenen Abrufintervall und der angegebenen Bedingung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>.NET Framework-Sicherheit  
 Volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer. Dieser Member kann von nur teilweise vertrauenswürdigem Code nicht verwendet werden. Weitere Informationen finden Sie unter [Verwenden von Bibliotheken aus teilweise vertrauenswürdigem Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
   
  
## Examples  
 Im folgenden Beispiel wird die Ereignisabfrage: "Wählen Sie * FROM __InstanceCreationEvent *WITHIN* 10, in denen" TargetInstance "auf ISA-Win32_Service", der sendet Benachrichtigung über die Erstellung von **Win32_Service**-Instanzen, mit einem Abrufintervall von 10 Sekunden.  
  
 [!code-csharp[wminet_WqlEventQuery-S_T_S#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_WqlEventQuery-S_T_S/cs/WqlEventQuery-S_T_S.cs#1)]
 [!code-vb[wminet_WqlEventQuery-S_T_S#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_WqlEventQuery-S_T_S/vb/WqlEventQuery-S_T_S.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WqlEventQuery (string eventClassName, string condition, TimeSpan groupWithinInterval, string[] groupByPropertyList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string eventClassName, string condition, valuetype System.TimeSpan groupWithinInterval, string[] groupByPropertyList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.WqlEventQuery.#ctor(System.String,System.String,System.TimeSpan,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (eventClassName As String, condition As String, groupWithinInterval As TimeSpan, groupByPropertyList As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WqlEventQuery(System::String ^ eventClassName, System::String ^ condition, TimeSpan groupWithinInterval, cli::array &lt;System::String ^&gt; ^ groupByPropertyList);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="eventClassName" Type="System.String" />
        <Parameter Name="condition" Type="System.String" />
        <Parameter Name="groupWithinInterval" Type="System.TimeSpan" />
        <Parameter Name="groupByPropertyList" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="eventClassName">Der Name der abzufragenden Ereignisklasse.</param>
        <param name="condition">Die Bedingung, die auf Ereignisse der angegebenen Klasse angewendet werden soll.</param>
        <param name="groupWithinInterval">Das angegebene Intervall, nach dessen Ablauf WMI anstelle zahlreicher Ereignisse ein <c>Aggregatereignis</c> sendet.</param>
        <param name="groupByPropertyList">Die Eigenschaften in der Ereignisklasse, nach denen die Ereignisse gruppiert werden sollen.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Management.WqlEventQuery" />-Klasse mit dem angegebenen Ereignisklassennamen, der angegebenen Bedingung, dem angegebenen Gruppierungsintervall und den angegebenen Gruppierungseigenschaften.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>.NET Framework-Sicherheit  
 Volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer. Dieser Member kann von nur teilweise vertrauenswürdigem Code nicht verwendet werden. Weitere Informationen finden Sie unter [Verwenden von Bibliotheken aus teilweise vertrauenswürdigem Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WqlEventQuery (string eventClassName, TimeSpan withinInterval, string condition, TimeSpan groupWithinInterval, string[] groupByPropertyList, string havingCondition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string eventClassName, valuetype System.TimeSpan withinInterval, string condition, valuetype System.TimeSpan groupWithinInterval, string[] groupByPropertyList, string havingCondition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.WqlEventQuery.#ctor(System.String,System.TimeSpan,System.String,System.TimeSpan,System.String[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (eventClassName As String, withinInterval As TimeSpan, condition As String, groupWithinInterval As TimeSpan, groupByPropertyList As String(), havingCondition As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WqlEventQuery(System::String ^ eventClassName, TimeSpan withinInterval, System::String ^ condition, TimeSpan groupWithinInterval, cli::array &lt;System::String ^&gt; ^ groupByPropertyList, System::String ^ havingCondition);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="eventClassName" Type="System.String" />
        <Parameter Name="withinInterval" Type="System.TimeSpan" />
        <Parameter Name="condition" Type="System.String" />
        <Parameter Name="groupWithinInterval" Type="System.TimeSpan" />
        <Parameter Name="groupByPropertyList" Type="System.String[]" />
        <Parameter Name="havingCondition" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventClassName">Der Name der Ereignisklasse, für die die Abfrage ausgeführt werden soll.</param>
        <param name="withinInterval">Ein <see cref="T:System.TimeSpan" />-Wert, der die für das Empfangen dieses Ereignisses zulässige Wartezeit angibt. Dieser Wert wird verwendet, wenn für die angeforderte Abfrage kein expliziter Ereignisanbieter vorhanden ist und WMI die Bedingung abrufen muss. Das Intervall ist der höchstzulässige Zeitraum, der vor dem Übermitteln einer Ereignisbenachrichtigung verstreichen darf.</param>
        <param name="condition">Die Bedingung, die auf Ereignisse der angegebenen Klasse angewendet werden soll.</param>
        <param name="groupWithinInterval">Das angegebene Intervall, nach dessen Ablauf WMI anstelle zahlreicher Ereignisse ein <c>Aggregatereignis</c> sendet.</param>
        <param name="groupByPropertyList">Die Eigenschaften in der Ereignisklasse, nach denen die Ereignisse gruppiert werden sollen.</param>
        <param name="havingCondition">Die Bedingung, die auf die Anzahl von Ereignissen angewendet werden soll.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Management.WqlEventQuery" />-Klasse mit dem angegebenen Ereignisklassennamen, der angegebenen Bedingung, dem angegebenen Gruppierungsintervall, den angegebenen Gruppierungseigenschaften und der angegebenen Anzahl von Ereignissen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>.NET Framework-Sicherheit  
 Volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer. Dieser Member kann von nur teilweise vertrauenswürdigem Code nicht verwendet werden. Weitere Informationen finden Sie unter [Verwenden von Bibliotheken aus teilweise vertrauenswürdigem Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
   
  
## Examples  
 Im folgenden Beispiel wird die Ereignisabfrage: "Wählen Sie * FROM __InstanceCreationEvent WHERE TargetInstance ISA Win32_NTLogEvent GROUP WITHIN 600 von TargetInstance.SourceName HAVING NumberOfEvents > 15" der Aggregatereignisse übermittelt, nur, wenn die Zahl der **Win32_NTLogEvent** Ereignisse aus der gleichen Quelle empfangen überschreitet 15.  
  
 [!code-csharp[wminet_WqlEventQuery-S_T_S_T_S_S#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_WqlEventQuery-S_T_S_T_S_S/cs/WqlEventQuery-S_T_S_T_S_S.cs#1)]
 [!code-vb[wminet_WqlEventQuery-S_T_S_T_S_S#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_WqlEventQuery-S_T_S_T_S_S/vb/WqlEventQuery-S_T_S_T_S_S.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildQuery">
      <MemberSignature Language="C#" Value="protected internal void BuildQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void BuildQuery() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.WqlEventQuery.BuildQuery" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub BuildQuery ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void BuildQuery();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt die Abfragezeichenfolge anhand der aktuellen Eigenschaftswerte.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>.NET Framework-Sicherheit  
 Volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer. Dieser Member kann von nur teilweise vertrauenswürdigem Code nicht verwendet werden. Weitere Informationen finden Sie unter [Verwenden von Bibliotheken aus teilweise vertrauenswürdigem Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.WqlEventQuery.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt eine Kopie des Objekts.</summary>
        <returns>Das kopierte Objekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>.NET Framework-Sicherheit  
 Volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer. Dieser Member kann von nur teilweise vertrauenswürdigem Code nicht verwendet werden. Weitere Informationen finden Sie unter [Verwenden von Bibliotheken aus teilweise vertrauenswürdigem Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ICloneable.Clone" />
      </Docs>
    </Member>
    <Member MemberName="Condition">
      <MemberSignature Language="C#" Value="public string Condition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Condition" />
      <MemberSignature Language="DocId" Value="P:System.Management.WqlEventQuery.Condition" />
      <MemberSignature Language="VB.NET" Value="Public Property Condition As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Condition { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Bedingung ab, die auf Ereignisse der angegebenen Klasse angewendet werden sollen, oder legt diese fest.</summary>
        <value>Gibt einen <see cref="T:System.String" />-Wert zurück, der die Bedingung(en) in der Ereignisabfrage enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch Festlegen dieses Eigenschaftswerts überschreibt alle vorherigen Werte, die im Objekt gespeichert wird. Die Abfragezeichenfolge wird neu erstellt, um die neue Bedingung zu berücksichtigen.  
  
## <a name="property-value"></a>Eigenschaftswert  
 Die Bedingung wird als eine Zeichenfolge, eine oder mehrere Klauseln in der Form dargestellt: \<PropName > \<Operator > \<Wert > mit logischen Operatoren kombiniert. \<PropName > muss eine Eigenschaft für die Ereignisklasse in der folgenden Abfrage angegebenen definierten darstellen.  
  
## <a name="net-framework-security"></a>.NET Framework-Sicherheit  
 Volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer. Dieser Member kann von nur teilweise vertrauenswürdigem Code nicht verwendet werden. Weitere Informationen finden Sie unter [Verwenden von Bibliotheken aus teilweise vertrauenswürdigem Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
   
  
## Examples  
 Im folgende Beispiel initialisiert eine neue <xref:System.Management.WqlEventQuery> und zeigt die Ereignis-Abfragezeichenfolge.  
  
 [!code-csharp[wminet_WqlEventQuery_Condition#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_WqlEventQuery_Condition/cs/WqlEventQuery_Condition.cs#1)]
 [!code-vb[wminet_WqlEventQuery_Condition#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_WqlEventQuery_Condition/vb/WqlEventQuery_Condition.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EventClassName">
      <MemberSignature Language="C#" Value="public string EventClassName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EventClassName" />
      <MemberSignature Language="DocId" Value="P:System.Management.WqlEventQuery.EventClassName" />
      <MemberSignature Language="VB.NET" Value="Public Property EventClassName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EventClassName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die abzufragende Ereignisklasse ab oder legt diese fest.</summary>
        <value>Gibt einen <see cref="T:System.String" />-Wert zurück, der den Namen der Ereignisklasse in der Ereignisabfrage enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch Festlegen dieses Eigenschaftswerts überschreibt alle vorherigen Werte, die im Objekt gespeichert wird. Die Abfragezeichenfolge wird neu erstellt, um den Klassennamen der neuen widerzuspiegeln.  
  
## <a name="property-value"></a>Eigenschaftswert  
 Eine Zeichenfolge, die den Namen der Ereignisklasse Abfrage enthält.  
  
## <a name="net-framework-security"></a>.NET Framework-Sicherheit  
 Volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer. Dieser Member kann von nur teilweise vertrauenswürdigem Code nicht verwendet werden. Weitere Informationen finden Sie unter [Verwenden von Bibliotheken aus teilweise vertrauenswürdigem Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
   
  
## Examples  
 Im folgende Beispiel initialisiert eine neue <xref:System.Management.WqlEventQuery> und zeigt die Ereignis-Abfragezeichenfolge.  
  
 [!code-csharp[wminet_WqlEventQuery_EventClassName#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_WqlEventQuery_EventClassName/cs/WqlEventQuery_EventClassName.cs#1)]
 [!code-vb[wminet_WqlEventQuery_EventClassName#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_WqlEventQuery_EventClassName/vb/WqlEventQuery_EventClassName.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupByPropertyList">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.StringCollection GroupByPropertyList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringCollection GroupByPropertyList" />
      <MemberSignature Language="DocId" Value="P:System.Management.WqlEventQuery.GroupByPropertyList" />
      <MemberSignature Language="VB.NET" Value="Public Property GroupByPropertyList As StringCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::StringCollection ^ GroupByPropertyList { System::Collections::Specialized::StringCollection ^ get(); void set(System::Collections::Specialized::StringCollection ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Eigenschaften im Ereignis ab, mit denen Ereignisse desselben Typs gruppiert werden sollen, oder legt diese fest.</summary>
        <value>Gibt eine <see cref="T:System.Collections.Specialized.StringCollection" /> zurück, die die Eigenschaften im Ereignis enthält, mit denen Ereignisse desselben Typs gruppiert werden sollen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch Festlegen dieses Eigenschaftswerts überschreibt alle vorherigen Werte, die im Objekt gespeichert wird. Die Abfragezeichenfolge wird neu erstellt, entsprechend die neue Gruppierung.  
  
## <a name="property-value"></a>Eigenschaftswert  
 NULL, wenn keine Gruppierung erforderlich ist. andernfalls, eine Auflistung von Ereignis-Eigenschaftennamen.  
  
## <a name="net-framework-security"></a>.NET Framework-Sicherheit  
 Volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer. Dieser Member kann von nur teilweise vertrauenswürdigem Code nicht verwendet werden. Weitere Informationen finden Sie unter [Verwenden von Bibliotheken aus teilweise vertrauenswürdigem Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
   
  
## Examples  
 Im folgende Beispiel initialisiert eine neue <xref:System.Management.WqlEventQuery> und zeigt die Ereignis-Abfragezeichenfolge.  
  
 [!code-csharp[wminet_WqlEventQuery_GroupByPropertyList#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_WqlEventQuery_GroupByPropertyList/cs/WqlEventQuery_GroupByPropertyList.cs#1)]
 [!code-vb[wminet_WqlEventQuery_GroupByPropertyList#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_WqlEventQuery_GroupByPropertyList/vb/WqlEventQuery_GroupByPropertyList.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupWithinInterval">
      <MemberSignature Language="C#" Value="public TimeSpan GroupWithinInterval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan GroupWithinInterval" />
      <MemberSignature Language="DocId" Value="P:System.Management.WqlEventQuery.GroupWithinInterval" />
      <MemberSignature Language="VB.NET" Value="Public Property GroupWithinInterval As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan GroupWithinInterval { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Intervall für das Gruppieren von Ereignissen desselben Typs ab oder legt dieses fest.</summary>
        <value>Gibt einen <see cref="T:System.TimeSpan" />-Wert zurück, der das Intervall für das Gruppieren von Ereignissen desselben Typs enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch Festlegen dieses Eigenschaftswerts überschreibt alle vorherigen Werte, die im Objekt gespeichert wird. Die Abfragezeichenfolge wird neu erstellt, das entsprechend das neue Intervall.  
  
## <a name="property-value"></a>Eigenschaftswert  
 NULL, wird keine Gruppierung am; Andernfalls sollte das Intervall, in der WMI-Ereignisse desselben Typs gruppiert werden.  
  
## <a name="net-framework-security"></a>.NET Framework-Sicherheit  
 Volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer. Dieser Member kann von nur teilweise vertrauenswürdigem Code nicht verwendet werden. Weitere Informationen finden Sie unter [Verwenden von Bibliotheken aus teilweise vertrauenswürdigem Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
   
  
## Examples  
 Im folgende Beispiel initialisiert eine neue <xref:System.Management.WqlEventQuery> und zeigt die Ereignis-Abfragezeichenfolge.  
  
 [!code-csharp[wminet_WqlEventQuery_GroupWithinInterval#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_WqlEventQuery_GroupWithinInterval/cs/WqlEventQuery_GroupWithinInterval.cs#1)]
 [!code-vb[wminet_WqlEventQuery_GroupWithinInterval#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_WqlEventQuery_GroupWithinInterval/vb/WqlEventQuery_GroupWithinInterval.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HavingCondition">
      <MemberSignature Language="C#" Value="public string HavingCondition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HavingCondition" />
      <MemberSignature Language="DocId" Value="P:System.Management.WqlEventQuery.HavingCondition" />
      <MemberSignature Language="VB.NET" Value="Public Property HavingCondition As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HavingCondition { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Bedingung, die auf die Aggregation von Ereignissen anzuwenden ist, auf Grundlage der Anzahl empfangener Ereignisse ab oder legt diese fest.</summary>
        <value>Gibt auf der Grundlage der Anzahl empfangener Ereignisse einen <see cref="T:System.String" />-Wert zurück, der die Bedingung enthält, die auf die Aggregation von Ereignissen anzuwenden ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch Festlegen dieses Eigenschaftswerts überschreibt alle vorherigen Werte, die im Objekt gespeichert wird. Die Abfragezeichenfolge wird neu erstellt, die neue Bedingung für die Gruppierung entsprechend.  
  
## <a name="property-value"></a>Eigenschaftswert  
 NULL, wenn keine Aggregation oder keine Bedingung angewendet werden soll. andernfalls eine Bedingung der Form "NumberOfEvents \<Operator > \<Wert >".  
  
## <a name="net-framework-security"></a>.NET Framework-Sicherheit  
 Volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer. Dieser Member kann von nur teilweise vertrauenswürdigem Code nicht verwendet werden. Weitere Informationen finden Sie unter [Verwenden von Bibliotheken aus teilweise vertrauenswürdigem Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
   
  
## Examples  
 Im folgende Beispiel initialisiert eine neue <xref:System.Management.WqlEventQuery> und zeigt die Ereignis-Abfragezeichenfolge.  
  
 [!code-csharp[wminet_WqlEventQuery_HavingCondition#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_WqlEventQuery_HavingCondition/cs/WqlEventQuery_HavingCondition.cs#1)]
 [!code-vb[wminet_WqlEventQuery_HavingCondition#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_WqlEventQuery_HavingCondition/vb/WqlEventQuery_HavingCondition.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseQuery">
      <MemberSignature Language="C#" Value="protected internal override void ParseQuery (string query);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void ParseQuery(string query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.WqlEventQuery.ParseQuery(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub ParseQuery (query As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void ParseQuery(System::String ^ query);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="query">Die zu analysierende Abfragezeichenfolge.</param>
        <summary>Analysiert die Abfragezeichenfolge und legt die Eigenschaftswerte entsprechend fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>.NET Framework-Sicherheit  
 Volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer. Dieser Member kann von nur teilweise vertrauenswürdigem Code nicht verwendet werden. Weitere Informationen finden Sie unter [Verwenden von Bibliotheken aus teilweise vertrauenswürdigem Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryLanguage">
      <MemberSignature Language="C#" Value="public override string QueryLanguage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string QueryLanguage" />
      <MemberSignature Language="DocId" Value="P:System.Management.WqlEventQuery.QueryLanguage" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property QueryLanguage As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ QueryLanguage { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Sprache für die Abfrage ab.</summary>
        <value>Gibt einen <see cref="T:System.String" />-Wert zurück, der die Sprache enthält, in der die Abfrage verfasst ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a>Eigenschaftswert  
 Der Wert dieser Eigenschaft in diesem Objekt ist immer "WQL".  
  
## <a name="net-framework-security"></a>.NET Framework-Sicherheit  
 Volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer. Dieser Member kann von nur teilweise vertrauenswürdigem Code nicht verwendet werden. Weitere Informationen finden Sie unter [Verwenden von Bibliotheken aus teilweise vertrauenswürdigem Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryString">
      <MemberSignature Language="C#" Value="public override string QueryString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string QueryString" />
      <MemberSignature Language="DocId" Value="P:System.Management.WqlEventQuery.QueryString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property QueryString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ QueryString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Zeichenfolge ab, die die Abfrage darstellt, oder legt diese fest.</summary>
        <value>Gibt einen <see cref="T:System.String" />-Wert zurück, der die Abfrage enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a>Eigenschaftswert  
 Eine Zeichenfolge, die die Abfrage darstellt.  
  
## <a name="net-framework-security"></a>.NET Framework-Sicherheit  
 Volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer. Dieser Member kann von nur teilweise vertrauenswürdigem Code nicht verwendet werden. Weitere Informationen finden Sie unter [Verwenden von Bibliotheken aus teilweise vertrauenswürdigem Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
   
  
## Examples  
 Im folgende Beispiel initialisiert eine neue <xref:System.Management.WqlEventQuery> und zeigt die Ereignis-Abfragezeichenfolge.  
  
 [!code-csharp[wminet_WqlEventQuery_QueryString#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_WqlEventQuery_QueryString/cs/WqlEventQuery_QueryString.cs#1)]
 [!code-vb[wminet_WqlEventQuery_QueryString#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_WqlEventQuery_QueryString/vb/WqlEventQuery_QueryString.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WithinInterval">
      <MemberSignature Language="C#" Value="public TimeSpan WithinInterval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan WithinInterval" />
      <MemberSignature Language="DocId" Value="P:System.Management.WqlEventQuery.WithinInterval" />
      <MemberSignature Language="VB.NET" Value="Public Property WithinInterval As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan WithinInterval { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das in dieser Abfrage zu verwendende Abrufintervall ab oder legt dieses fest.</summary>
        <value>Gibt einen <see cref="T:System.TimeSpan" />-Wert zurück, der das in dieser Abfrage verwendete Abrufintervall enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft sollte nur festgelegt werden, in Fällen besteht keine *Ereignisanbieter* für das angeforderte Ereignis und WMI erforderlich ist, um die angeforderte Bedingung abzurufen.  
  
 Durch Festlegen dieses Eigenschaftswerts überschreibt alle vorherigen Werte, die im Objekt gespeichert wird. Die Abfragezeichenfolge wird neu erstellt, das entsprechend das neue Intervall.  
  
## <a name="property-value"></a>Eigenschaftswert  
 NULL, wenn stellt keine abrufen. andernfalls ein gültiger <xref:System.TimeSpan> -Wert, wenn der Abruf erforderlich ist.  
  
## <a name="net-framework-security"></a>.NET Framework-Sicherheit  
 Volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer. Dieser Member kann von nur teilweise vertrauenswürdigem Code nicht verwendet werden. Weitere Informationen finden Sie unter [Verwenden von Bibliotheken aus teilweise vertrauenswürdigem Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
   
  
## Examples  
 Im folgende Beispiel initialisiert eine neue <xref:System.Management.WqlEventQuery> , die die Abfrage darstellt: "Wählen Sie * FROM __InstanceCreationEvent *WITHIN* 1 WHERE TargetInstance ISA"Win32_Process"".  
  
 [!code-csharp[wminet_WqlEventQuery_WithinInterval#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_WqlEventQuery_WithinInterval/cs/WqlEventQuery_WithinInterval.cs#1)]
 [!code-vb[wminet_WqlEventQuery_WithinInterval#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_WqlEventQuery_WithinInterval/vb/WqlEventQuery_WithinInterval.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>