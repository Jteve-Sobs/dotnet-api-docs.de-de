<Type Name="MethodDataCollection" FullName="System.Management.MethodDataCollection">
  <TypeSignature Language="C#" Value="public class MethodDataCollection : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MethodDataCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Management.MethodDataCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class MethodDataCollection&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class MethodDataCollection : System::Collections::ICollection" />
  <AssemblyInfo>
    <AssemblyName>System.Management</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="2ed97-101">Stellt die Menge der in der Auflistung verfügbaren Methoden dar.</span><span class="sxs-lookup"><span data-stu-id="2ed97-101">Represents the set of methods available in the collection.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2ed97-102">Das folgende Beispiel listet Informationen über die **Win32_Process.Create** Methode mithilfe der <xref:System.Management.MethodData> Klasse.</span><span class="sxs-lookup"><span data-stu-id="2ed97-102">The following example lists information about the **Win32_Process.Create** method using the <xref:System.Management.MethodData> class.</span></span> <span data-ttu-id="2ed97-103">Weitere Informationen zu den **Win32_Process** Klasse, finden Sie in der Windows-Verwaltungsinstrumentation-Dokumentation in der MSDN Library unter http://msdn.microsoft.com/library.</span><span class="sxs-lookup"><span data-stu-id="2ed97-103">For more information on the **Win32_Process** class, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span>  
  
 [!code-csharp[wminet_MethodDataCollection#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_MethodDataCollection/cs/MethodDataCollection.cs#1)]
 [!code-vb[wminet_MethodDataCollection#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_MethodDataCollection/vb/MethodDataCollection.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2ed97-104">Fügt ein <see cref="T:System.Management.MethodData" />-Objekt der <see cref="T:System.Management.MethodDataCollection" />-Auflistung hinzu.</span><span class="sxs-lookup"><span data-stu-id="2ed97-104">Adds a <see cref="T:System.Management.MethodData" /> object to the <see cref="T:System.Management.MethodDataCollection" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual void Add (string methodName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(string methodName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.MethodDataCollection.Add(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Add (methodName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::String ^ methodName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="methodName"><span data-ttu-id="2ed97-105">Der Name der hinzuzufügenden Methode.</span><span class="sxs-lookup"><span data-stu-id="2ed97-105">The name of the method to add.</span></span></param>
        <summary><span data-ttu-id="2ed97-106">Fügt der <see cref="T:System.Management.MethodData" /> einen <see cref="T:System.Management.MethodDataCollection" /> hinzu.</span><span class="sxs-lookup"><span data-stu-id="2ed97-106">Adds a <see cref="T:System.Management.MethodData" /> to the <see cref="T:System.Management.MethodDataCollection" />.</span></span> <span data-ttu-id="2ed97-107">Diese Überladung fügt der Auflistung eine neue Methode ohne Parameter hinzu.</span><span class="sxs-lookup"><span data-stu-id="2ed97-107">This overload will add a new method with no parameters to the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ed97-108">Hinzufügen von <xref:System.Management.MethodData> -Objekte und die <xref:System.Management.MethodDataCollection> kann nur ausgeführt werden, wenn die Klasse keine Instanzen besitzt.</span><span class="sxs-lookup"><span data-stu-id="2ed97-108">Adding <xref:System.Management.MethodData> objects to the <xref:System.Management.MethodDataCollection> can only be done when the class has no instances.</span></span> <span data-ttu-id="2ed97-109">Allen anderen Fällen führt zu einer Ausnahme.</span><span class="sxs-lookup"><span data-stu-id="2ed97-109">Any other case will result in an exception.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="2ed97-110">.NET Framework-Sicherheit</span><span class="sxs-lookup"><span data-stu-id="2ed97-110">.NET Framework Security</span></span>  
 <span data-ttu-id="2ed97-111">Volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span><span class="sxs-lookup"><span data-stu-id="2ed97-111">Full trust for the immediate caller.</span></span> <span data-ttu-id="2ed97-112">Dieser Member kann von nur teilweise vertrauenswürdigem Code nicht verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="2ed97-112">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="2ed97-113">Weitere Informationen finden Sie unter [Verwenden von Bibliotheken aus teilweise vertrauenswürdigem Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="2ed97-113">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual void Add (string methodName, System.Management.ManagementBaseObject inParameters, System.Management.ManagementBaseObject outParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(string methodName, class System.Management.ManagementBaseObject inParameters, class System.Management.ManagementBaseObject outParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.MethodDataCollection.Add(System.String,System.Management.ManagementBaseObject,System.Management.ManagementBaseObject)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Add (methodName As String, inParameters As ManagementBaseObject, outParameters As ManagementBaseObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::String ^ methodName, System::Management::ManagementBaseObject ^ inParameters, System::Management::ManagementBaseObject ^ outParameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="inParameters" Type="System.Management.ManagementBaseObject" />
        <Parameter Name="outParameters" Type="System.Management.ManagementBaseObject" />
      </Parameters>
      <Docs>
        <param name="methodName"><span data-ttu-id="2ed97-114">Der Name der hinzuzufügenden Methode.</span><span class="sxs-lookup"><span data-stu-id="2ed97-114">The name of the method to add.</span></span></param>
        <param name="inParameters"><span data-ttu-id="2ed97-115">Das <see cref="T:System.Management.ManagementBaseObject" /> mit den Eingabeparametern für die Methode.</span><span class="sxs-lookup"><span data-stu-id="2ed97-115">The <see cref="T:System.Management.ManagementBaseObject" /> holding the input parameters to the method.</span></span></param>
        <param name="outParameters"><span data-ttu-id="2ed97-116">Das <see cref="T:System.Management.ManagementBaseObject" /> mit den Ausgabeparametern für die Methode.</span><span class="sxs-lookup"><span data-stu-id="2ed97-116">The <see cref="T:System.Management.ManagementBaseObject" /> holding the output parameters to the method.</span></span></param>
        <summary><span data-ttu-id="2ed97-117">Fügt der <see cref="T:System.Management.MethodData" /> einen <see cref="T:System.Management.MethodDataCollection" /> hinzu.</span><span class="sxs-lookup"><span data-stu-id="2ed97-117">Adds a <see cref="T:System.Management.MethodData" /> to the <see cref="T:System.Management.MethodDataCollection" />.</span></span> <span data-ttu-id="2ed97-118">Diese Überladung fügt der Auflistung eine neue Methode mit den angegebenen Parameterobjekten hinzu.</span><span class="sxs-lookup"><span data-stu-id="2ed97-118">This overload will add a new method with the specified parameter objects to the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ed97-119">Hinzufügen von <xref:System.Management.MethodData> -Objekte und die <xref:System.Management.MethodDataCollection> kann nur ausgeführt werden, wenn die Klasse keine Instanzen besitzt.</span><span class="sxs-lookup"><span data-stu-id="2ed97-119">Adding <xref:System.Management.MethodData> objects to the <xref:System.Management.MethodDataCollection> can only be done when the class has no instances.</span></span> <span data-ttu-id="2ed97-120">Allen anderen Fällen führt zu einer Ausnahme.</span><span class="sxs-lookup"><span data-stu-id="2ed97-120">Any other case will result in an exception.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="2ed97-121">.NET Framework-Sicherheit</span><span class="sxs-lookup"><span data-stu-id="2ed97-121">.NET Framework Security</span></span>  
 <span data-ttu-id="2ed97-122">Volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span><span class="sxs-lookup"><span data-stu-id="2ed97-122">Full trust for the immediate caller.</span></span> <span data-ttu-id="2ed97-123">Dieser Member kann von nur teilweise vertrauenswürdigem Code nicht verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="2ed97-123">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="2ed97-124">Weitere Informationen finden Sie unter [Verwenden von Bibliotheken aus teilweise vertrauenswürdigem Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="2ed97-124">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2ed97-125">Kopiert das <see cref="T:System.Management.MethodDataCollection" />-Objekt in ein Array.</span><span class="sxs-lookup"><span data-stu-id="2ed97-125">Copies the <see cref="T:System.Management.MethodDataCollection" /> object into an array.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.MethodDataCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="2ed97-126">Das Array, in das die Auflistung kopiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="2ed97-126">The array to which to copy the collection.</span></span></param>
        <param name="index"><span data-ttu-id="2ed97-127">Der Index, ab dem begonnen wird.</span><span class="sxs-lookup"><span data-stu-id="2ed97-127">The index from which to start.</span></span></param>
        <summary><span data-ttu-id="2ed97-128">Kopiert die <see cref="T:System.Management.MethodDataCollection" /> in ein Array.</span><span class="sxs-lookup"><span data-stu-id="2ed97-128">Copies the <see cref="T:System.Management.MethodDataCollection" /> into an array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="2ed97-129">.NET Framework-Sicherheit</span><span class="sxs-lookup"><span data-stu-id="2ed97-129">.NET Framework Security</span></span>  
 <span data-ttu-id="2ed97-130">Volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span><span class="sxs-lookup"><span data-stu-id="2ed97-130">Full trust for the immediate caller.</span></span> <span data-ttu-id="2ed97-131">Dieser Member kann von nur teilweise vertrauenswürdigem Code nicht verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="2ed97-131">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="2ed97-132">Weitere Informationen finden Sie unter [Verwenden von Bibliotheken aus teilweise vertrauenswürdigem Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="2ed97-132">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Management.MethodData[] methodArray, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Management.MethodData[] methodArray, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.MethodDataCollection.CopyTo(System.Management.MethodData[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (methodArray As MethodData(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Management::MethodData ^&gt; ^ methodArray, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodArray" Type="System.Management.MethodData[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="methodArray"><span data-ttu-id="2ed97-133">Das Zielarray, in das die <see cref="T:System.Management.MethodData" />-Objekte kopiert werden sollen.</span><span class="sxs-lookup"><span data-stu-id="2ed97-133">The destination array to which to copy the <see cref="T:System.Management.MethodData" /> objects.</span></span></param>
        <param name="index"><span data-ttu-id="2ed97-134">Der Index im Zielarray, ab dem die Kopie beginnt.</span><span class="sxs-lookup"><span data-stu-id="2ed97-134">The index in the destination array from which to start the copy.</span></span></param>
        <summary><span data-ttu-id="2ed97-135">Kopiert die <see cref="T:System.Management.MethodDataCollection" /> in ein spezielles <see cref="T:System.Management.MethodData" />-Array.</span><span class="sxs-lookup"><span data-stu-id="2ed97-135">Copies the <see cref="T:System.Management.MethodDataCollection" /> to a specialized <see cref="T:System.Management.MethodData" /> array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="2ed97-136">.NET Framework-Sicherheit</span><span class="sxs-lookup"><span data-stu-id="2ed97-136">.NET Framework Security</span></span>  
 <span data-ttu-id="2ed97-137">Volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span><span class="sxs-lookup"><span data-stu-id="2ed97-137">Full trust for the immediate caller.</span></span> <span data-ttu-id="2ed97-138">Dieser Member kann von nur teilweise vertrauenswürdigem Code nicht verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="2ed97-138">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="2ed97-139">Weitere Informationen finden Sie unter [Verwenden von Bibliotheken aus teilweise vertrauenswürdigem Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="2ed97-139">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Management.MethodDataCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2ed97-140">Ruft die Anzahl der Objekte in der <see cref="T:System.Management.MethodDataCollection" />-Auflistung ab.</span><span class="sxs-lookup"><span data-stu-id="2ed97-140">Gets the number of objects in the <see cref="T:System.Management.MethodDataCollection" /> collection.</span></span></summary>
        <value><span data-ttu-id="2ed97-141">Gibt einen <see cref="T:System.Int32" />-Wert zurück, der die Anzahl von Objekten in der Auflistung darstellt.</span><span class="sxs-lookup"><span data-stu-id="2ed97-141">Returns an <see cref="T:System.Int32" /> value representing the number of objects in the collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="2ed97-142">Eigenschaftswert</span><span class="sxs-lookup"><span data-stu-id="2ed97-142">Property Value</span></span>  
 <span data-ttu-id="2ed97-143">Die Anzahl der Objekte in der <xref:System.Management.MethodDataCollection>.</span><span class="sxs-lookup"><span data-stu-id="2ed97-143">The number of objects in the <xref:System.Management.MethodDataCollection>.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="2ed97-144">.NET Framework-Sicherheit</span><span class="sxs-lookup"><span data-stu-id="2ed97-144">.NET Framework Security</span></span>  
 <span data-ttu-id="2ed97-145">Volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span><span class="sxs-lookup"><span data-stu-id="2ed97-145">Full trust for the immediate caller.</span></span> <span data-ttu-id="2ed97-146">Dieser Member kann von nur teilweise vertrauenswürdigem Code nicht verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="2ed97-146">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="2ed97-147">Weitere Informationen finden Sie unter [Verwenden von Bibliotheken aus teilweise vertrauenswürdigem Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="2ed97-147">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.Count" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Management.MethodDataCollection.MethodDataEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Management.MethodDataCollection/MethodDataEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.MethodDataCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As MethodDataCollection.MethodDataEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Management::MethodDataCollection::MethodDataEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.MethodDataCollection+MethodDataEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2ed97-148">Gibt einen Enumerator für den <see cref="T:System.Management.MethodDataCollection" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="2ed97-148">Returns an enumerator for the <see cref="T:System.Management.MethodDataCollection" />.</span></span></summary>
        <returns><span data-ttu-id="2ed97-149">Ein <see cref="T:System.Collections.IEnumerator" /> zum Durchlaufen der Auflistung.</span><span class="sxs-lookup"><span data-stu-id="2ed97-149">An <see cref="T:System.Collections.IEnumerator" /> to enumerate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ed97-150">Jeder Aufruf dieser Methode gibt einen neuen Enumerator in der Auflistung zurück.</span><span class="sxs-lookup"><span data-stu-id="2ed97-150">Each call to this method returns a new enumerator on the collection.</span></span> <span data-ttu-id="2ed97-151">Mehrere Enumeratoren können für dieselbe Methode Auflistung abgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="2ed97-151">Multiple enumerators can be obtained for the same method collection.</span></span> <span data-ttu-id="2ed97-152">Each-Enumerator dauert jedoch, eine Momentaufnahme der Auflistung aus, damit die Änderungen, die auf die Auflistung nach dem Abrufen des Enumerators nicht widergespiegelt werden.</span><span class="sxs-lookup"><span data-stu-id="2ed97-152">However, each enumerator takes a snapshot of the collection, so changes made to the collection after the enumerator was obtained are not reflected.</span></span>  
  
 <span data-ttu-id="2ed97-153">Sie können nur durchlaufen (wie in einer Visual Basic .NET `For Each` -Anweisung oder ein C#- `For` Anweisung) einen Vorwärtscursor einmal durchlaufen.</span><span class="sxs-lookup"><span data-stu-id="2ed97-153">You can only iterate (as in a Visual Basic .NET `For Each` statement or a C# `For` statement) through a forward-only enumerator one time.</span></span> <span data-ttu-id="2ed97-154">So, dass der Enumerator nicht zurückgesetzt werden kann, wird der Speicher mit den Instanzen von WMI freigegeben.</span><span class="sxs-lookup"><span data-stu-id="2ed97-154">The memory containing the instances is released by WMI so that the enumerator cannot be rewound.</span></span> <span data-ttu-id="2ed97-155">Aus diesem Grund die <xref:System.Management.MethodDataCollection.Count%2A> Methode kann nicht verwendet werden, da sie das Zurücksetzen des Enumerators erfordert.</span><span class="sxs-lookup"><span data-stu-id="2ed97-155">Therefore, the <xref:System.Management.MethodDataCollection.Count%2A> method cannot be used since it requires rewinding the enumerator.</span></span>  
  
 <span data-ttu-id="2ed97-156">Vorwärtscursor Enumeratoren werden in der Regel viel schneller ausgeführt und belegen weniger Speicher als konventionelle Enumeratoren, aber es nicht möglich, dass Aufrufe von <xref:System.Management.MethodDataCollection.MethodDataEnumerator.Reset%2A>.</span><span class="sxs-lookup"><span data-stu-id="2ed97-156">Forward-only enumerators are generally much faster and use less memory than conventional enumerators, but they do not allow calls to <xref:System.Management.MethodDataCollection.MethodDataEnumerator.Reset%2A>.</span></span>  
  
 <span data-ttu-id="2ed97-157">Wenn ein Enumerator zurückspulbar ist, werden die Objekte in der Auflistung für mehrere Enumerationen verfügbar gehalten werden.</span><span class="sxs-lookup"><span data-stu-id="2ed97-157">If an enumerator is rewindable, the objects in the collection will be kept available for multiple enumerations.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="2ed97-158">.NET Framework-Sicherheit</span><span class="sxs-lookup"><span data-stu-id="2ed97-158">.NET Framework Security</span></span>  
 <span data-ttu-id="2ed97-159">Volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span><span class="sxs-lookup"><span data-stu-id="2ed97-159">Full trust for the immediate caller.</span></span> <span data-ttu-id="2ed97-160">Dieser Member kann von nur teilweise vertrauenswürdigem Code nicht verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="2ed97-160">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="2ed97-161">Weitere Informationen finden Sie unter [Verwenden von Bibliotheken aus teilweise vertrauenswürdigem Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="2ed97-161">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Management.MethodDataCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2ed97-162">Ruft einen Wert ab, der angibt, ob das Objekt synchronisiert ist.</span><span class="sxs-lookup"><span data-stu-id="2ed97-162">Gets a value that indicates whether the object is synchronized.</span></span></summary>
        <value><span data-ttu-id="2ed97-163">Gibt einen <see cref="T:System.Boolean" />-Wert zurück, der angibt, ob das Objekt synchronisiert ist.</span><span class="sxs-lookup"><span data-stu-id="2ed97-163">Returns a <see cref="T:System.Boolean" /> value indicating whether the object is synchronized.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="2ed97-164">Eigenschaftswert</span><span class="sxs-lookup"><span data-stu-id="2ed97-164">Property Value</span></span>  
 <span data-ttu-id="2ed97-165">`true` Wenn das Objekt synchronisiert wird; andernfalls `false`.</span><span class="sxs-lookup"><span data-stu-id="2ed97-165">`true` if the object is synchronized; otherwise, `false`.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="2ed97-166">.NET Framework-Sicherheit</span><span class="sxs-lookup"><span data-stu-id="2ed97-166">.NET Framework Security</span></span>  
 <span data-ttu-id="2ed97-167">Volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span><span class="sxs-lookup"><span data-stu-id="2ed97-167">Full trust for the immediate caller.</span></span> <span data-ttu-id="2ed97-168">Dieser Member kann von nur teilweise vertrauenswürdigem Code nicht verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="2ed97-168">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="2ed97-169">Weitere Informationen finden Sie unter [Verwenden von Bibliotheken aus teilweise vertrauenswürdigem Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="2ed97-169">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Management.MethodData this[string methodName] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.MethodData Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Management.MethodDataCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(methodName As String) As MethodData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Management::MethodData ^ default[System::String ^] { System::Management::MethodData ^ get(System::String ^ methodName); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.MethodData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="methodName"><span data-ttu-id="2ed97-170">Der Name der angeforderten Methode.</span><span class="sxs-lookup"><span data-stu-id="2ed97-170">The name of the method requested.</span></span></param>
        <summary><span data-ttu-id="2ed97-171">Ruft die angegebenen <see cref="T:System.Management.MethodData" /> aus der <see cref="T:System.Management.MethodDataCollection" /> ab.</span><span class="sxs-lookup"><span data-stu-id="2ed97-171">Gets the specified <see cref="T:System.Management.MethodData" /> from the <see cref="T:System.Management.MethodDataCollection" />.</span></span></summary>
        <value><span data-ttu-id="2ed97-172">Gibt <see cref="T:System.Management.MethodData" /> mit den Methodendaten für eine angegebene Methode aus der Auflistung zurück.</span><span class="sxs-lookup"><span data-stu-id="2ed97-172">Returns a <see cref="T:System.Management.MethodData" /> containing the method data for a specified method from the collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="2ed97-173">Eigenschaftswert</span><span class="sxs-lookup"><span data-stu-id="2ed97-173">Property Value</span></span>  
 <span data-ttu-id="2ed97-174">Ein <xref:System.Management.MethodData> , enthält alle Informationen über die angegebene Methode.</span><span class="sxs-lookup"><span data-stu-id="2ed97-174">A <xref:System.Management.MethodData> containing all information about the specified method.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="2ed97-175">.NET Framework-Sicherheit</span><span class="sxs-lookup"><span data-stu-id="2ed97-175">.NET Framework Security</span></span>  
 <span data-ttu-id="2ed97-176">Volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span><span class="sxs-lookup"><span data-stu-id="2ed97-176">Full trust for the immediate caller.</span></span> <span data-ttu-id="2ed97-177">Dieser Member kann von nur teilweise vertrauenswürdigem Code nicht verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="2ed97-177">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="2ed97-178">Weitere Informationen finden Sie unter [Verwenden von Bibliotheken aus teilweise vertrauenswürdigem Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="2ed97-178">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (string methodName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(string methodName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.MethodDataCollection.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (methodName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::String ^ methodName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="methodName"><span data-ttu-id="2ed97-179">Der Name der Methode, die aus der Auflistung entfernt werden soll.</span><span class="sxs-lookup"><span data-stu-id="2ed97-179">The name of the method to remove from the collection.</span></span></param>
        <summary><span data-ttu-id="2ed97-180">Entfernt <see cref="T:System.Management.MethodData" /> aus <see cref="T:System.Management.MethodDataCollection" />.</span><span class="sxs-lookup"><span data-stu-id="2ed97-180">Removes a <see cref="T:System.Management.MethodData" /> from the <see cref="T:System.Management.MethodDataCollection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ed97-181">Entfernen von <xref:System.Management.MethodData> Objekte aus der <xref:System.Management.MethodDataCollection> kann nur ausgeführt werden, wenn die Klasse keine Instanzen besitzt.</span><span class="sxs-lookup"><span data-stu-id="2ed97-181">Removing <xref:System.Management.MethodData> objects from the <xref:System.Management.MethodDataCollection> can only be done when the class has no instances.</span></span> <span data-ttu-id="2ed97-182">Allen anderen Fällen führt zu einer Ausnahme.</span><span class="sxs-lookup"><span data-stu-id="2ed97-182">Any other case will result in an exception.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="2ed97-183">.NET Framework-Sicherheit</span><span class="sxs-lookup"><span data-stu-id="2ed97-183">.NET Framework Security</span></span>  
 <span data-ttu-id="2ed97-184">Volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span><span class="sxs-lookup"><span data-stu-id="2ed97-184">Full trust for the immediate caller.</span></span> <span data-ttu-id="2ed97-185">Dieser Member kann von nur teilweise vertrauenswürdigem Code nicht verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="2ed97-185">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="2ed97-186">Weitere Informationen finden Sie unter [Verwenden von Bibliotheken aus teilweise vertrauenswürdigem Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="2ed97-186">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Management.MethodDataCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2ed97-187">Ruft das Objekt ab, das für die Synchronisierung verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="2ed97-187">Gets the object to be used for synchronization.</span></span></summary>
        <value><span data-ttu-id="2ed97-188">Gibt einen <see cref="T:System.Object" />-Wert zurück, der das für die Synchronisierung zu verwendende Objekt darstellt.</span><span class="sxs-lookup"><span data-stu-id="2ed97-188">Returns an <see cref="T:System.Object" /> value representing the object to be used for synchronization.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="2ed97-189">Eigenschaftswert</span><span class="sxs-lookup"><span data-stu-id="2ed97-189">Property Value</span></span>  
 <span data-ttu-id="2ed97-190">Das Objekt, für die Synchronisierung verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="2ed97-190">The object to be used for synchronization.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="2ed97-191">.NET Framework-Sicherheit</span><span class="sxs-lookup"><span data-stu-id="2ed97-191">.NET Framework Security</span></span>  
 <span data-ttu-id="2ed97-192">Volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span><span class="sxs-lookup"><span data-stu-id="2ed97-192">Full trust for the immediate caller.</span></span> <span data-ttu-id="2ed97-193">Dieser Member kann von nur teilweise vertrauenswürdigem Code nicht verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="2ed97-193">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="2ed97-194">Weitere Informationen finden Sie unter [Verwenden von Bibliotheken aus teilweise vertrauenswürdigem Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="2ed97-194">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.MethodDataCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2ed97-195">Gibt einen <see cref="T:System.Collections.IEnumerator" /> zurück, der <see cref="T:System.Management.MethodDataCollection" /> durchläuft.</span><span class="sxs-lookup"><span data-stu-id="2ed97-195">Returns an <see cref="T:System.Collections.IEnumerator" /> that iterates through the <see cref="T:System.Management.MethodDataCollection" />.</span></span></summary>
        <returns><span data-ttu-id="2ed97-196">Ein <see cref="T:System.Collections.IEnumerator" /> für das <see cref="T:System.Management.MethodDataCollection" />.</span><span class="sxs-lookup"><span data-stu-id="2ed97-196">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Management.MethodDataCollection" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ed97-197">[Visual Basic, c#]</span><span class="sxs-lookup"><span data-stu-id="2ed97-197">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="2ed97-198">Die `foreach`-Anweisung der Programmiersprache C# (`for each` in Visual Basic) verbirgt die Komplexität der Enumeratoren.</span><span class="sxs-lookup"><span data-stu-id="2ed97-198">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="2ed97-199">Daher empfiehlt es sich, `foreach` zu verwenden und den Enumerator nicht direkt zu ändern.</span><span class="sxs-lookup"><span data-stu-id="2ed97-199">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="2ed97-200">Mit Enumeratoren können die Daten in der Auflistung zwar gelesen, jedoch nicht zum Ändern der zugrunde liegenden Auflistung verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="2ed97-200">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="2ed97-201">Zu Beginn wird der Enumerator vor das erste Element in der Auflistung positioniert.</span><span class="sxs-lookup"><span data-stu-id="2ed97-201">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="2ed97-202"><xref:System.Collections.IEnumerator.Reset%2A> setzt den Enumerator ebenfalls auf diese Position zurück.</span><span class="sxs-lookup"><span data-stu-id="2ed97-202"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span> <span data-ttu-id="2ed97-203">An dieser position Aufrufen <xref:System.Collections.IEnumerator.Current%2A> löst eine Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="2ed97-203">At this position, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="2ed97-204">Daher muss der Enumerator durch einen Aufruf von <xref:System.Collections.IEnumerator.MoveNext%2A> auf das erste Element der Auflistung gesetzt werden, bevor der Wert von <xref:System.Collections.IEnumerator.Current%2A> gelesen werden kann.</span><span class="sxs-lookup"><span data-stu-id="2ed97-204">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="2ed97-205"><xref:System.Collections.IEnumerator.Current%2A> gibt solange dasselbe Objekt zurück, bis <xref:System.Collections.IEnumerator.MoveNext%2A> oder <xref:System.Collections.IEnumerator.Reset%2A> aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="2ed97-205"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="2ed97-206"><xref:System.Collections.IEnumerator.MoveNext%2A> legt <xref:System.Collections.IEnumerator.Current%2A> auf das nächste Element fest.</span><span class="sxs-lookup"><span data-stu-id="2ed97-206"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="2ed97-207">Wenn <xref:System.Collections.IEnumerator.MoveNext%2A> übergibt am Ende der Auflistung der Enumerator hinter dem letzten Element in der Auflistung positioniert ist und <xref:System.Collections.IEnumerator.MoveNext%2A> gibt `false`.</span><span class="sxs-lookup"><span data-stu-id="2ed97-207">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="2ed97-208">Wenn der Enumerator ist an dieser Position ist nachfolgende Aufrufe <xref:System.Collections.IEnumerator.MoveNext%2A> auch zurückgeben `false`.</span><span class="sxs-lookup"><span data-stu-id="2ed97-208">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="2ed97-209">Wenn der letzte Aufruf <xref:System.Collections.IEnumerator.MoveNext%2A> zurückgegebene `false`Aufrufen <xref:System.Collections.IEnumerator.Current%2A> löst eine Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="2ed97-209">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="2ed97-210">Um <xref:System.Collections.IEnumerator.Current%2A> wieder auf das erste Element der Auflistung festzulegen, können Sie <xref:System.Collections.IEnumerator.Reset%2A> gefolgt von <xref:System.Collections.IEnumerator.MoveNext%2A> aufrufen.</span><span class="sxs-lookup"><span data-stu-id="2ed97-210">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="2ed97-211">Ein Enumerator bleibt gültig, solange die Auflistung unverändert ist.</span><span class="sxs-lookup"><span data-stu-id="2ed97-211">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="2ed97-212">Wenn die Änderungen werden auf die Auflistung, z. B. das Hinzufügen, ändern oder Löschen von Elementen aus, das der Enumerator unwiederbringlich seine ist ungültig, und der nächste Aufruf von <xref:System.Collections.IEnumerator.MoveNext%2A> oder <xref:System.Collections.IEnumerator.Reset%2A> löst eine <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="2ed97-212">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="2ed97-213">Wenn die Auflistung, zwischen geändert wird <xref:System.Collections.IEnumerator.MoveNext%2A> und <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> gibt das Element, das auf festgelegt, wird, auch wenn der Enumerator bereits ungültig ist.</span><span class="sxs-lookup"><span data-stu-id="2ed97-213">If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated.</span></span>  
  
 <span data-ttu-id="2ed97-214">Der Enumerator hat keinen exklusiven Zugriff auf die Auflistung. Daher ist die Enumeration einer Auflistung systemintern keine threadsichere Prozedur.</span><span class="sxs-lookup"><span data-stu-id="2ed97-214">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="2ed97-215">Selbst wenn eine Auflistung synchronisiert wird, besteht die Möglichkeit, dass andere Threads sie ändern. Dies führt dazu, dass der Enumerator eine Ausnahme auslöst.</span><span class="sxs-lookup"><span data-stu-id="2ed97-215">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="2ed97-216">Um während der Enumeration Threadsicherheit zu gewährleisten, können Sie entweder die Auflistung während der gesamten Enumeration sperren oder die Ausnahmen, die aus von anderen Threads stammenden Änderungen resultieren, abfangen.</span><span class="sxs-lookup"><span data-stu-id="2ed97-216">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="2ed97-217">Diese Methode ist ein o(1)-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="2ed97-217">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>