<Type Name="EncryptedKey" FullName="System.Security.Cryptography.Xml.EncryptedKey">
  <Metadata><Meta Name="ms.openlocfilehash" Value="575cc0360b7e8576dc3cd1be2314c242831bcd12" /><Meta Name="ms.sourcegitcommit" Value="f828282420515ef705e09bbdb6c22116df98b5e3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="82493536" /></Metadata><TypeSignature Language="C#" Value="public sealed class EncryptedKey : System.Security.Cryptography.Xml.EncryptedType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EncryptedKey extends System.Security.Cryptography.Xml.EncryptedType" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Xml.EncryptedKey" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EncryptedKey&#xA;Inherits EncryptedType" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncryptedKey sealed : System::Security::Cryptography::Xml::EncryptedType" />
  <TypeSignature Language="F#" Value="type EncryptedKey = class&#xA;    inherit EncryptedType" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.Xml.EncryptedType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt das <see langword="&lt;EncryptedKey&gt;" />-Element bei XML-Verschlüsselung dar. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Klasse stellt das- `<EncryptedKey>` Element in XML-Verschlüsselung dar. Das- `<EncryptedKey>` Element wird verwendet, um Verschlüsselungsschlüssel zu senden. Sie kann in einem eigenständigen XML-Dokument erstellt, in einem Anwendungs Dokument abgelegt werden oder sich innerhalb eines `<EncryptedData>` Elements als untergeordnetes Element eines- `<KeyInfo>` Elements befinden. Der Schlüsselwert wird immer für den Empfänger verschlüsselt. Wenn `<EncryptedKey>` entschlüsselt wird, wird der resultierende Schlüssel dem `<EncryptionMethod>` Algorithmus ohne zusätzliche Verarbeitung zur Verfügung gestellt.  
  
 Das- `<EncryptedKey>` Element ähnelt dem- `<EncryptedData>` Element der- <xref:System.Security.Cryptography.Xml.EncryptedData> Klasse, mit der Ausnahme, dass es sich bei den verschlüsselten Daten immer um einen Schlüsselwert handelt.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie ein XML-Element mithilfe der-Klasse verschlüsselt und entschlüsselt wird <xref:System.Security.Cryptography.Xml.EncryptedKey> . In diesem Beispiel werden dann die Werte verschiedener Eigenschaften der- <xref:System.Security.Cryptography.Xml.EncryptedKey> Klasse in der Konsole angezeigt.  
  
 [!code-csharp[Cryptography.XML.EncryptedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.EncryptedKey/cs/example.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.EncryptedKey/vb/example.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncryptedKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedKey.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncryptedKey();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.Xml.EncryptedKey" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor erstellt eine neue Instanz der- <xref:System.Security.Cryptography.Xml.EncryptedKey> Klasse. Weitere Informationen zu XML-Verschlüsselungsstandards finden Sie unter [XML Encryption Syntax and Processing](https://www.w3.org/TR/xmlenc-core/) Specification.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie ein XML-Element mithilfe der-Klasse verschlüsselt und entschlüsselt wird <xref:System.Security.Cryptography.Xml.EncryptedKey> . In diesem Beispiel werden dann die Werte verschiedener Eigenschaften der- <xref:System.Security.Cryptography.Xml.EncryptedKey> Klasse in der Konsole angezeigt.  
  
 [!code-csharp[Cryptography.XML.EncryptedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.EncryptedKey/cs/example.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.EncryptedKey/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddReference">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Fügt dem <see langword="&amp;lt;ReferenceList&amp;gt;" />-Element ein Verweiselement hinzu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddReference">
      <MemberSignature Language="C#" Value="public void AddReference (System.Security.Cryptography.Xml.DataReference dataReference);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddReference(class System.Security.Cryptography.Xml.DataReference dataReference) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedKey.AddReference(System.Security.Cryptography.Xml.DataReference)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddReference (dataReference As DataReference)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddReference(System::Security::Cryptography::Xml::DataReference ^ dataReference);" />
      <MemberSignature Language="F#" Value="member this.AddReference : System.Security.Cryptography.Xml.DataReference -&gt; unit" Usage="encryptedKey.AddReference dataReference" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataReference" Type="System.Security.Cryptography.Xml.DataReference" />
      </Parameters>
      <Docs>
        <param name="dataReference">Das <see cref="T:System.Security.Cryptography.Xml.DataReference" />-Objekt, das der <see cref="P:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList" />-Eigenschaft hinzugefügt werden soll.</param>
        <summary>Fügt dem <see langword="&lt;ReferenceList&gt;" />-Element ein <see langword="&lt;DataReference&gt;" />-Element hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode fügt <xref:System.Security.Cryptography.Xml.DataReference> der-Eigenschaft des-Objekts ein-Objekt hinzu <xref:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList%2A> <xref:System.Security.Cryptography.Xml.EncryptedKey> . Das- `<DataReference>` Element verweist auf verschlüsselte Daten, die mit dem im-Element angegebenen Schlüssel verschlüsselt wurden `<EncryptedKey>` .  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddReference">
      <MemberSignature Language="C#" Value="public void AddReference (System.Security.Cryptography.Xml.KeyReference keyReference);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddReference(class System.Security.Cryptography.Xml.KeyReference keyReference) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedKey.AddReference(System.Security.Cryptography.Xml.KeyReference)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddReference (keyReference As KeyReference)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddReference(System::Security::Cryptography::Xml::KeyReference ^ keyReference);" />
      <MemberSignature Language="F#" Value="member this.AddReference : System.Security.Cryptography.Xml.KeyReference -&gt; unit" Usage="encryptedKey.AddReference keyReference" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyReference" Type="System.Security.Cryptography.Xml.KeyReference" />
      </Parameters>
      <Docs>
        <param name="keyReference">Das <see cref="T:System.Security.Cryptography.Xml.KeyReference" />-Objekt, das der <see cref="P:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList" />-Eigenschaft hinzugefügt werden soll.</param>
        <summary>Fügt dem <see langword="&lt;ReferenceList&gt;" />-Element ein <see langword="&lt;KeyReference&gt;" />-Element hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode fügt <xref:System.Security.Cryptography.Xml.KeyReference> der-Eigenschaft des-Objekts ein-Objekt hinzu <xref:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList%2A> <xref:System.Security.Cryptography.Xml.EncryptedKey> . Das- `<KeyReference>` Element verweist auf einen verschlüsselten Schlüssel, der mit dem im-Element angegebenen Schlüssel verschlüsselt wurde `<EncryptedKey>` .  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CarriedKeyName">
      <MemberSignature Language="C#" Value="public string CarriedKeyName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CarriedKeyName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedKey.CarriedKeyName" />
      <MemberSignature Language="VB.NET" Value="Public Property CarriedKeyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CarriedKeyName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CarriedKeyName : string with get, set" Usage="System.Security.Cryptography.Xml.EncryptedKey.CarriedKeyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das optionale <see langword="&lt;CarriedKeyName&gt;" />-Element in XML-Verschlüsselung ab oder legt dieses fest.</summary>
        <value>Eine Zeichenfolge, die einen Namen für den Schlüsselwert darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das `<CarriedKeyName>` -Element ist ein optionales Element, das einem Schlüsselwert einen Benutzer lesbaren Namen zuordnet. Dieser Name kann dann verwendet werden, um mithilfe des-Elements innerhalb des-Elements auf den Schlüssel zu verweisen `<KeyName>` `<KeyInfo>` . Der gleiche `<CarriedKeyName>` Elementwert kann im Gegensatz zu einem ID-Wert mehrmals innerhalb eines einzelnen Dokuments auftreten. Der Wert des Schlüssels muss in allen Elementen identisch sein, die `<EncryptedKey>` `<CarriedKeyName>` innerhalb eines XML-Dokuments mit demselben Namen identifiziert werden. Beachten Sie, dass Leerraum im Wert des-Elements ebenfalls signifikant ist, da Leerraum im Wert des-Elements signifikant ist `<KeyName>` `<CarriedKeyName>` .  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie ein XML-Element mithilfe der-Klasse verschlüsselt und entschlüsselt wird <xref:System.Security.Cryptography.Xml.EncryptedKey> . In diesem Beispiel werden dann die Werte verschiedener Eigenschaften der- <xref:System.Security.Cryptography.Xml.EncryptedKey> Klasse in der Konsole angezeigt.  
  
 [!code-csharp[Cryptography.XML.EncryptedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.EncryptedKey/cs/example.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.EncryptedKey/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXml">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlElement GetXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.XmlElement GetXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedKey.GetXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetXml () As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Xml::XmlElement ^ GetXml();" />
      <MemberSignature Language="F#" Value="override this.GetXml : unit -&gt; System.Xml.XmlElement" Usage="encryptedKey.GetXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt die XML-Darstellung des <see cref="T:System.Security.Cryptography.Xml.EncryptedKey" />-Objekts zurück.</summary>
        <returns>Ein <see cref="T:System.Xml.XmlElement" />-Objekt, das das <see langword="&lt;EncryptedKey&gt;" />-Element in XML-Verschlüsselung darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Methode, um das- `<EncryptedKey>` Element in XML auszugeben.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Der <see cref="T:System.Security.Cryptography.Xml.EncryptedKey" />-Wert ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="LoadXml">
      <MemberSignature Language="C#" Value="public override void LoadXml (System.Xml.XmlElement value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void LoadXml(class System.Xml.XmlElement value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedKey.LoadXml(System.Xml.XmlElement)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub LoadXml (value As XmlElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void LoadXml(System::Xml::XmlElement ^ value);" />
      <MemberSignature Language="F#" Value="override this.LoadXml : System.Xml.XmlElement -&gt; unit" Usage="encryptedKey.LoadXml value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Xml.XmlElement" />
      </Parameters>
      <Docs>
        <param name="value">Ein <see cref="T:System.Xml.XmlElement" />-Objekt, das ein für das <see langword="&lt;EncryptedKey&gt;" />-Element zu verwendendes XML-Element darstellt.</param>
        <summary>Lädt die angegebenen XML-Informationen in XML-Verschlüsselung in das <see langword="&lt;EncryptedKey&gt;" />-Element.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Methode, um ein vorhandenes XML-Element in das `<EncryptedKey>` durch das-Objekt dargestellte Element zu laden <xref:System.Security.Cryptography.Xml.EncryptedData> .  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie ein XML-Element mithilfe der-Klasse verschlüsselt und entschlüsselt wird <xref:System.Security.Cryptography.Xml.EncryptedKey> . In diesem Beispiel werden dann die Werte verschiedener Eigenschaften der- <xref:System.Security.Cryptography.Xml.EncryptedKey> Klasse in der Konsole angezeigt.  
  
 [!code-csharp[Cryptography.XML.EncryptedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.EncryptedKey/cs/example.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.EncryptedKey/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="value" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Der <paramref name="value" />-Parameter enthält kein <see cref="T:System.Security.Cryptography.Xml.CipherData" />-Element.</exception>
      </Docs>
    </Member>
    <Member MemberName="Recipient">
      <MemberSignature Language="C#" Value="public string Recipient { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Recipient" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedKey.Recipient" />
      <MemberSignature Language="VB.NET" Value="Public Property Recipient As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Recipient { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Recipient : string with get, set" Usage="System.Security.Cryptography.Xml.EncryptedKey.Recipient" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das optionale <see langword="Recipient" />-Attribut in XML-Verschlüsselung ab oder legt dieses fest.</summary>
        <value>Eine Zeichenfolge, die den Wert des <see langword="Recipient" />-Attributs darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das- `<Recipient>` Attribut ist ein optionales Attribut, das Informationen zu dem Empfänger enthält, für den dieser verschlüsselte Schlüsselwert bestimmt ist. Der Inhalt ist abhängig von der Anwendung.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie ein XML-Element mithilfe der-Klasse verschlüsselt und entschlüsselt wird <xref:System.Security.Cryptography.Xml.EncryptedKey> . In diesem Beispiel werden dann die Werte verschiedener Eigenschaften der- <xref:System.Security.Cryptography.Xml.EncryptedKey> Klasse in der Konsole angezeigt.  
  
 [!code-csharp[Cryptography.XML.EncryptedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.EncryptedKey/cs/example.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.EncryptedKey/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferenceList">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Xml.ReferenceList ReferenceList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.ReferenceList ReferenceList" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReferenceList As ReferenceList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Xml::ReferenceList ^ ReferenceList { System::Security::Cryptography::Xml::ReferenceList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReferenceList : System.Security.Cryptography.Xml.ReferenceList" Usage="System.Security.Cryptography.Xml.EncryptedKey.ReferenceList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.ReferenceList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das <see langword="&lt;ReferenceList&gt;" />-Element in XML-Verschlüsselung ab oder legt dieses fest.</summary>
        <value>Ein <see cref="T:System.Security.Cryptography.Xml.ReferenceList" />-Objekt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das `<ReferenceList>` -Element ist ein optionales Element, das Zeiger auf Daten und Schlüssel enthält, die mit diesem Schlüssel verschlüsselt wurden. Die Verweislisten kann mehrere Verweise auf enthalten die `<EncryptedKey>` und `<EncryptedData>` Elemente mithilfe der `<KeyReference>` und `<DataReference>` Elemente bzw.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie ein XML-Element mithilfe der-Klasse verschlüsselt und entschlüsselt wird <xref:System.Security.Cryptography.Xml.EncryptedKey> . In diesem Beispiel werden dann die Werte verschiedener Eigenschaften der- <xref:System.Security.Cryptography.Xml.EncryptedKey> Klasse in der Konsole angezeigt.  
  
 [!code-csharp[Cryptography.XML.EncryptedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.EncryptedKey/cs/example.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.EncryptedKey/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
