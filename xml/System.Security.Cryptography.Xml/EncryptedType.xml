<Type Name="EncryptedType" FullName="System.Security.Cryptography.Xml.EncryptedType">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ba862208afc38e7dbd8e24eb89734e0f4e9726d1" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69262536" /></Metadata><TypeSignature Language="C#" Value="public abstract class EncryptedType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit EncryptedType extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Xml.EncryptedType" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EncryptedType" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncryptedType abstract" />
  <TypeSignature Language="F#" Value="type EncryptedType = class" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt die abstrakte Basisklasse dar, von der sich die <see cref="T:System.Security.Cryptography.Xml.EncryptedData" />-Klasse und die <see cref="T:System.Security.Cryptography.Xml.EncryptedKey" />-Klasse ableiten.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Security.Cryptography.Xml.EncryptedType> -Klasse stellt die abstrakte Basisklasse dar, von <xref:System.Security.Cryptography.Xml.EncryptedData> der <xref:System.Security.Cryptography.Xml.EncryptedKey> die Klassen und abgeleitet werden. Diese beiden Klassen enthalten die eigentlichen verschlüsselten Daten oder Schlüsselinformationen in der XML-Verschlüsselung. Sie sollten diese beiden abgeleiteten Klassen verwenden, um die XML-Verschlüsselungsstandards einzuhalten.  
  
 Weitere Informationen zu XML-Verschlüsselungsstandards finden Sie unter [XML-Verschlüsselungs Syntax und Verarbeitungs Version 1,1](https://www.w3.org/TR/xmlenc-core/).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie ein XML-Element mithilfe der <xref:System.Security.Cryptography.Xml.EncryptedData> -Klasse, die von der <xref:System.Security.Cryptography.Xml.EncryptedType> -Klasse abgeleitet wird, verschlüsselt und entschlüsselt wird.  
  
 [!code-csharp[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/vb/sample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EncryptedType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedType.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EncryptedType();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.Xml.EncryptedType" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor erstellt eine neue Instanz der <xref:System.Security.Cryptography.Xml.EncryptedType> -Klasse. Diese Klasse stellt die abstrakte Basisklasse dar, von der <xref:System.Security.Cryptography.Xml.EncryptedData> die <xref:System.Security.Cryptography.Xml.EncryptedKey> Klassen und abgeleitet werden. Um die XML-Verschlüsselungsstandards einzuhalten, sollten Sie die beiden abgeleiteten Klassen verwenden. Weitere Informationen zu XML-Verschlüsselungsstandards finden Sie unter [XML-Verschlüsselungs Syntax und Verarbeitungs Version 1,1](https://www.w3.org/TR/xmlenc-core/).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie ein XML-Element mithilfe der <xref:System.Security.Cryptography.Xml.EncryptedData> -Klasse, die von der <xref:System.Security.Cryptography.Xml.EncryptedType> -Klasse abgeleitet wird, verschlüsselt und entschlüsselt wird.  
  
 [!code-csharp[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddProperty">
      <MemberSignature Language="C#" Value="public void AddProperty (System.Security.Cryptography.Xml.EncryptionProperty ep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddProperty(class System.Security.Cryptography.Xml.EncryptionProperty ep) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedType.AddProperty(System.Security.Cryptography.Xml.EncryptionProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddProperty (ep As EncryptionProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddProperty(System::Security::Cryptography::Xml::EncryptionProperty ^ ep);" />
      <MemberSignature Language="F#" Value="member this.AddProperty : System.Security.Cryptography.Xml.EncryptionProperty -&gt; unit" Usage="encryptedType.AddProperty ep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ep" Type="System.Security.Cryptography.Xml.EncryptionProperty" />
      </Parameters>
      <Docs>
        <param name="ep">Ein <see cref="T:System.Security.Cryptography.Xml.EncryptionProperty" />-Objekt.</param>
        <summary>Fügt dem <see langword="&lt;EncryptionProperty&gt;" />-Element im aktuellen <see cref="T:System.Security.Cryptography.Xml.EncryptedType" />-Objekt in XML-Verschlüsselung ein untergeordnetes <see langword="&lt;EncryptedProperties&gt;" />-Element hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode kann verwendet werden, um `<EncryptionProperty>` dem `<EncryptedProperties>` -Element untergeordnete Elemente hinzuzufügen. Das `<EncryptedProperties>` -Element stellt zusätzliche Informationen für `<EncryptedType>` das-Element bereit.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CipherData">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.Xml.CipherData CipherData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.CipherData CipherData" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedType.CipherData" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CipherData As CipherData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Cryptography::Xml::CipherData ^ CipherData { System::Security::Cryptography::Xml::CipherData ^ get(); void set(System::Security::Cryptography::Xml::CipherData ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CipherData : System.Security.Cryptography.Xml.CipherData with get, set" Usage="System.Security.Cryptography.Xml.EncryptedType.CipherData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.CipherData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den <see cref="T:System.Security.Cryptography.Xml.CipherData" />-Wert für eine Instanz einer <see cref="T:System.Security.Cryptography.Xml.EncryptedType" />-Klasse ab oder legt diesen fest.</summary>
        <value>Ein <see cref="T:System.Security.Cryptography.Xml.CipherData" />-Objekt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das `<CipherData>` -Element ist ein erforderliches Element in der XML-Verschlüsselung, das die verschlüsselten Daten bereitstellt. Es muss entweder die verschlüsselte Oktett-Sequenz als Base64-codierten Text der <xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A> Eigenschaft enthalten, oder es muss ein Verweis auf einen externen Speicherort bereitgestellt werden, der die verschlüsselte Oktett-Sequenz mithilfe der <xref:System.Security.Cryptography.Xml.CipherData.CipherReference%2A> -Eigenschaft enthält.  
  
 Weitere Informationen zu diesem Element finden <xref:System.Security.Cryptography.Xml.CipherData>Sie unter.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie ein XML-Element mithilfe der <xref:System.Security.Cryptography.Xml.EncryptedData> -Klasse, die von der <xref:System.Security.Cryptography.Xml.EncryptedType> -Klasse abgeleitet wird, verschlüsselt und entschlüsselt wird.  
  
 [!code-csharp[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Die <see cref="P:System.Security.Cryptography.Xml.EncryptedType.CipherData" />-Eigenschaft wurde auf <see langword="null" /> festgelegt.</exception>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public virtual string Encoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Encoding" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedType.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Encoding As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Encoding { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Encoding : string with get, set" Usage="System.Security.Cryptography.Xml.EncryptedType.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das <see langword="Encoding" />-Attribut einer <see cref="T:System.Security.Cryptography.Xml.EncryptedType" />-Instanz in XML-Verschlüsselung ab oder legt dieses fest.</summary>
        <value>Eine Zeichenfolge, die die Codierung der verschlüsselten Daten beschreibt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft beschreibt die Codierung der verschlüsselten Daten. Wenn die verschlüsselten Daten z. b. ein Base64-codiertes PNG sind, kann die Codierung als "<http://www.w3.org/2000/09/xmldsig#base64>" angegeben werden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie ein XML-Element mithilfe der <xref:System.Security.Cryptography.Xml.EncryptedData> -Klasse, die von der <xref:System.Security.Cryptography.Xml.EncryptedType> -Klasse abgeleitet wird, verschlüsselt und entschlüsselt wird. In diesem Beispiel werden dann verschiedene Eigenschaften <xref:System.Security.Cryptography.Xml.EncryptedData> der-Klasse in der Konsole angezeigt.  
  
 [!code-csharp[Cryptography.XML.EncryptedData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.EncryptedData/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.EncryptedData/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptionMethod">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.Xml.EncryptionMethod EncryptionMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.EncryptionMethod EncryptionMethod" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EncryptionMethod As EncryptionMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Cryptography::Xml::EncryptionMethod ^ EncryptionMethod { System::Security::Cryptography::Xml::EncryptionMethod ^ get(); void set(System::Security::Cryptography::Xml::EncryptionMethod ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EncryptionMethod : System.Security.Cryptography.Xml.EncryptionMethod with get, set" Usage="System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.EncryptionMethod</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das <see langword="&lt;EncryptionMethod&gt;" />-Element für die XML-Verschlüsselung ab oder legt dieses fest.</summary>
        <value>Ein <see cref="T:System.Security.Cryptography.Xml.EncryptionMethod" />-Objekt, das das <see langword="&lt;EncryptionMethod&gt;" />-Element darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das `<EncryptionMethod>` ist ein optionales Element, das den Verschlüsselungsalgorithmus beschreibt, der auf die verschlüsselten Daten angewendet wird. Wenn das-Element nicht vorhanden ist, muss der Verschlüsselungsalgorithmus durch den Empfänger bekannt sein, andernfalls tritt beim Entschlüsseln ein Fehler auf.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie ein XML-Element mithilfe der <xref:System.Security.Cryptography.Xml.EncryptedData> -Klasse, die von der <xref:System.Security.Cryptography.Xml.EncryptedType> -Klasse abgeleitet wird, verschlüsselt und entschlüsselt wird.  
  
 [!code-csharp[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptionProperties">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.Xml.EncryptionPropertyCollection EncryptionProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.EncryptionPropertyCollection EncryptionProperties" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedType.EncryptionProperties" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EncryptionProperties As EncryptionPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Cryptography::Xml::EncryptionPropertyCollection ^ EncryptionProperties { System::Security::Cryptography::Xml::EncryptionPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EncryptionProperties : System.Security.Cryptography.Xml.EncryptionPropertyCollection" Usage="System.Security.Cryptography.Xml.EncryptedType.EncryptionProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.EncryptionPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das <see langword="&lt;EncryptionProperties&gt;" />-Element in XML-Verschlüsselung ab oder legt dieses fest.</summary>
        <value>Ein <see cref="T:System.Security.Cryptography.Xml.EncryptionPropertyCollection" />-Objekt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das `<EncryptionProperties>` -Element kann zusätzliche Informationen zur Erstellung <xref:System.Security.Cryptography.Xml.EncryptedType> der-Instanz enthalten, z. b. ein Datums-und Zeitstempel oder die Seriennummer der Kryptografiehardware, die während der Verschlüsselung verwendet wird.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie ein XML-Element mithilfe der <xref:System.Security.Cryptography.Xml.EncryptedData> -Klasse, die von der <xref:System.Security.Cryptography.Xml.EncryptedType> -Klasse abgeleitet wird, verschlüsselt und entschlüsselt wird. In diesem Beispiel werden dann verschiedene Eigenschaften <xref:System.Security.Cryptography.Xml.EncryptedData> der-Klasse in der Konsole angezeigt.  
  
 [!code-csharp[Cryptography.XML.EncryptedData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.EncryptedData/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.EncryptedData/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXml">
      <MemberSignature Language="C#" Value="public abstract System.Xml.XmlElement GetXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlElement GetXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedType.GetXml" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetXml () As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Xml::XmlElement ^ GetXml();" />
      <MemberSignature Language="F#" Value="abstract member GetXml : unit -&gt; System.Xml.XmlElement" Usage="encryptedType.GetXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt die XML-Darstellung des <see cref="T:System.Security.Cryptography.Xml.EncryptedType" />-Objekts zurück.</summary>
        <returns>Ein <see cref="T:System.Xml.XmlElement" />-Objekt, das das <see langword="&lt;EncryptedType&gt;" />-Element in XML-Verschlüsselung darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Methode, um `<EncryptedType>` das-Element in XML auszugeben.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public virtual string Id { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedType.Id" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Id { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Id : string with get, set" Usage="System.Security.Cryptography.Xml.EncryptedType.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das <see langword="Id" />-Attribut einer <see cref="T:System.Security.Cryptography.Xml.EncryptedType" />-Instanz in XML-Verschlüsselung ab oder legt dieses fest.</summary>
        <value>Eine Zeichenfolge des <see langword="Id" />-Attributs des <see langword="&lt;EncryptedType&gt;" />-Elements.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das `Id` -Attribut ist ein optionales Attribut `<EncryptedType>` des-Elements, das eine Standardmethode zum Zuweisen eines Zeichen folgen Bezeichners zu einem Element in einem XML-Dokument bereitstellt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie ein XML-Element mithilfe der <xref:System.Security.Cryptography.Xml.EncryptedData> -Klasse, die von der <xref:System.Security.Cryptography.Xml.EncryptedType> -Klasse abgeleitet wird, verschlüsselt und entschlüsselt wird. In diesem Beispiel werden dann verschiedene Eigenschaften <xref:System.Security.Cryptography.Xml.EncryptedData> der-Klasse in der Konsole angezeigt.  
  
 [!code-csharp[Cryptography.XML.EncryptedData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.EncryptedData/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.EncryptedData/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyInfo">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Xml.KeyInfo KeyInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.KeyInfo KeyInfo" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedType.KeyInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyInfo As KeyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Xml::KeyInfo ^ KeyInfo { System::Security::Cryptography::Xml::KeyInfo ^ get(); void set(System::Security::Cryptography::Xml::KeyInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.KeyInfo : System.Security.Cryptography.Xml.KeyInfo with get, set" Usage="System.Security.Cryptography.Xml.EncryptedType.KeyInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.KeyInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das <see langword="&lt;KeyInfo&gt;" />-Element in XML-Verschlüsselung ab oder legt dieses fest.</summary>
        <value>Ein <see cref="T:System.Security.Cryptography.Xml.KeyInfo" />-Objekt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das `<KeyInfo>` -Element ist ein optionales-Element, das Informationen über den Schlüssel enthält, der zum Verschlüsseln der Daten verwendet wird.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie ein XML-Element mithilfe der <xref:System.Security.Cryptography.Xml.EncryptedData> -Klasse, die von der <xref:System.Security.Cryptography.Xml.EncryptedType> -Klasse abgeleitet wird, verschlüsselt und entschlüsselt wird. In diesem Beispiel werden dann verschiedene Eigenschaften <xref:System.Security.Cryptography.Xml.EncryptedData> der-Klasse in der Konsole angezeigt.  
  
 [!code-csharp[Cryptography.XML.EncryptedData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.EncryptedData/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.EncryptedData/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadXml">
      <MemberSignature Language="C#" Value="public abstract void LoadXml (System.Xml.XmlElement value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadXml(class System.Xml.XmlElement value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedType.LoadXml(System.Xml.XmlElement)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub LoadXml (value As XmlElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void LoadXml(System::Xml::XmlElement ^ value);" />
      <MemberSignature Language="F#" Value="abstract member LoadXml : System.Xml.XmlElement -&gt; unit" Usage="encryptedType.LoadXml value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Xml.XmlElement" />
      </Parameters>
      <Docs>
        <param name="value">Ein <see cref="T:System.Xml.XmlElement" />-Objekt, das ein im <see langword="&lt;EncryptedType&gt;" />-Element zu verwendendes XML-Element darstellt.</param>
        <summary>Lädt XML-Informationen in XML-Verschlüsselung in das <see langword="&lt;EncryptedType&gt;" />-Element.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Methode, um ein vorhandenes XML- <xref:System.Security.Cryptography.Xml.EncryptedType> Element in das-Objekt zu laden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie ein XML-Element mithilfe der <xref:System.Security.Cryptography.Xml.EncryptedData> -Klasse, die von der <xref:System.Security.Cryptography.Xml.EncryptedType> -Klasse abgeleitet wird, verschlüsselt und entschlüsselt wird.  
  
 [!code-csharp[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der enthaltene Parameter <paramref name="value" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="MimeType">
      <MemberSignature Language="C#" Value="public virtual string MimeType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MimeType" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedType.MimeType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property MimeType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ MimeType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MimeType : string with get, set" Usage="System.Security.Cryptography.Xml.EncryptedType.MimeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das <see langword="MimeType" />-Attribut einer <see cref="T:System.Security.Cryptography.Xml.EncryptedType" />-Instanz in XML-Verschlüsselung ab oder legt dieses fest.</summary>
        <value>Eine Zeichenfolge, die den Medientyp der verschlüsselten Daten beschreibt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das `MimeType` -Attribut ist ein optionales Attribut, das den Medientyp der verschlüsselten Daten beschreibt. Der Wert dieses Attributs ist eine Zeichenfolge mit Werten, [die von RFC 2045 definiert werden: Multipurpose Internet Mail Extensions (MIME)-Teil 1: Das Format der Internet Nachrichten](https://www.ietf.org/rfc/rfc2045.txt)Texte. Wenn die verschlüsselten Daten z. b. ein Base64-codiertes PNG sind, lautet `Encoding` das Attribut "<http://www.w3.org/2000/09/xmldsig#base64>", und der `MimeType` Wert wäre "image/png". Dieses Attribut ist optional, und es ist keine `MimeType` Überprüfung der Informationen erforderlich. Das-Attribut gibt nicht an, dass die Verschlüsselungsanwendung zusätzliche Verarbeitungsschritte ausführen muss. Beachten Sie, dass diese Informationen möglicherweise nicht erforderlich sind, wenn Sie bereits an den Bezeichner im `Type` -Attribut gebunden sind.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie ein XML-Element mithilfe der <xref:System.Security.Cryptography.Xml.EncryptedData> -Klasse, die von der <xref:System.Security.Cryptography.Xml.EncryptedType> -Klasse abgeleitet wird, verschlüsselt und entschlüsselt wird. In diesem Beispiel werden dann verschiedene Eigenschaften <xref:System.Security.Cryptography.Xml.EncryptedData> der-Klasse in der Konsole angezeigt.  
  
 [!code-csharp[Cryptography.XML.EncryptedData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.EncryptedData/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.EncryptedData/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public virtual string Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Type" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedType.Type" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Type As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Type { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Type : string with get, set" Usage="System.Security.Cryptography.Xml.EncryptedType.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das <see langword="Type" />-Attribut einer <see cref="T:System.Security.Cryptography.Xml.EncryptedType" />-Instanz in XML-Verschlüsselung ab oder legt dieses fest.</summary>
        <value>Eine Zeichenfolge, die die Textform der verschlüsselten Daten beschreibt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das `Type` -Attribut ist ein optionales Attribut, das Typinformationen über die Textform des verschlüsselten Inhalts identifiziert. Dies ist zwar optional, aber ein wichtiges Attribut und wird bei der obligatorischen Verarbeitung verwendet [, die in Verarbeitungs Regeln beschrieben wird: Entschlüsselung (Abschnitt 4,2) der Syntax-und Verarbeitungs Spezifikation für XML-Verschlüsselunghttps://www.w3.org/TR/xmlenc-core/)(.](https://www.w3.org/TR/xmlenc-core/) Wenn das `<EncryptedData>` -Elementdaten vom Typ `'element'` oder Element `'content'`enthält und diese Daten in einem XML-Dokument ersetzt, wird dringend empfohlen, dass `Type` das-Attribut bereitgestellt wird. Ohne diese Informationen kann die Anwendung, die versucht, die Informationen zu entschlüsseln, das XML-Dokument nicht automatisch in seinem ursprünglichen Textformular wiederherstellen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie ein XML-Element mithilfe der <xref:System.Security.Cryptography.Xml.EncryptedData> -Klasse, die von der <xref:System.Security.Cryptography.Xml.EncryptedType> -Klasse abgeleitet wird, verschlüsselt und entschlüsselt wird.  
  
 [!code-csharp[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
