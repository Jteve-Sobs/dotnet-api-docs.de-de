<Type Name="CipherReference" FullName="System.Security.Cryptography.Xml.CipherReference">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9e4209b90ce2c21b5fe4b59b4361a1ba298fd185" /><Meta Name="ms.sourcegitcommit" Value="a22d0855bbf24d893f43605f8b7e3a44bd9551a5" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70364043" /></Metadata><TypeSignature Language="C#" Value="public sealed class CipherReference : System.Security.Cryptography.Xml.EncryptedReference" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CipherReference extends System.Security.Cryptography.Xml.EncryptedReference" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Xml.CipherReference" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CipherReference&#xA;Inherits EncryptedReference" />
  <TypeSignature Language="C++ CLI" Value="public ref class CipherReference sealed : System::Security::Cryptography::Xml::EncryptedReference" />
  <TypeSignature Language="F#" Value="type CipherReference = class&#xA;    inherit EncryptedReference" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.Xml.EncryptedReference</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt das <see langword="&lt;CipherReference&gt;" />-Element bei XML-Verschlüsselung dar. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Klasse stellt das `<CipherReference>` -Element in XML-Verschlüsselung dar. Es identifiziert eine Quelle, die bei der Verarbeitung die verschlüsselten Daten ergibt.  
  
 Die eigentlichen verschlüsselten Daten, auf die `<CipherReference>` von verwiesen wird, werden durch den folgenden Prozess abgerufen. Die `<CipherReference> URI` -Eigenschaft enthält einen Uniform Resource Identifier (URI), der dereferenziert wird. Wenn das `<CipherReference>` -Element auch eine Transformations Kette enthält, werden die Daten, die sich aus der Dereferenzierung des URIs ergeben, so transformiert, dass die verschlüsselten Daten erzeugt werden. Wenn die verschlüsselten Daten z. b. in einem XML-Dokument Base64-codiert sind, geben die Transformationen einen XPath-Ausdruck gefolgt von einer Base64-Decodierung an, damit die verschlüsselten Daten extrahiert werden können.  
  
 Die Syntax von URI und Transformationen ähnelt der Syntax von digitalen XML-Signaturen.  In digitalen XML-Signaturen beginnen die Generierung und die Validierungs Verarbeitung jedoch mit denselben Quelldaten und führen diese Transformation in derselben Reihenfolge aus. Bei der XML-Verschlüsselung verfügt die entschlüsselnde Anwendung nur über die verschlüsselten Daten und die angegebenen Transformationen. Die Transformationen werden in der Reihenfolge aufgelistet, die zum Abrufen der verschlüsselten Daten erforderlich ist.  
  
 **Hinweis** Standardmäßig ist es nicht möglich, Chiffre Verweise von Dokumenten mit unbekannten Quellen, z. b. Dateien einer Website, zu dereferenzieren, da die <xref:System.Security.Cryptography.Xml.EncryptedXml.DocumentEvidence%2A> -Eigenschaft **null**ist. Wenn Sie z. b. versuchen, eine Datei zu entschlüsseln, `<CipherReference>` die ein-Element enthält, das auf eine Datei <xref:System.Security.SecurityException> im Web verweist, wird eine ausgelöst, auch wenn die Anforderung von einer voll vertrauenswürdigen Assembly gestellt wird.  
  
 Wenn Sie sicher sind, dass die zu entschlüsselnden Dokumente vertrauenswürdig sind, können Sie dieses Verhalten für voll vertrauenswürdige Anwendungen ändern, indem Sie den folgenden Code verwenden:  
  
```  
Evidence ev = new Evidence();  
ev.AddHost (new Zone(SecurityZone.MyComputer));  
EncryptedXml exml = new EncryptedXml(doc, ev);  
```  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine neue Instanz von <xref:System.Security.Cryptography.Xml.CipherReference>erstellt.  
  
 [!code-cpp[cryptography.Xml.CipherReference#1](~/samples/snippets/cpp/VS_Snippets_CLR/cryptography.Xml.CipherReference/CPP/example.cpp#1)]
 [!code-csharp[cryptography.Xml.CipherReference#1](~/samples/snippets/csharp/VS_Snippets_CLR/cryptography.Xml.CipherReference/CS/example.cs#1)]
 [!code-vb[cryptography.Xml.CipherReference#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/cryptography.Xml.CipherReference/VB/example.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.Xml.CipherReference" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor erstellt ein <xref:System.Security.Cryptography.Xml.CipherReference> -Objekt, das Referenzinformationen für <xref:System.Security.Cryptography.Xml.CipherData> ein-Objekt bereitstellt. Die Referenzinformationen stellen den Speicherort der verschlüsselten Daten bereit.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CipherReference ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.CipherReference.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CipherReference();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.Xml.CipherReference" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor erstellt ein <xref:System.Security.Cryptography.Xml.CipherReference> -Objekt, das Referenzinformationen für <xref:System.Security.Cryptography.Xml.CipherData> ein-Objekt bereitstellt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine neue Instanz von <xref:System.Security.Cryptography.Xml.CipherReference>erstellt.  
  
 [!code-cpp[cryptography.Xml.CipherReference#1](~/samples/snippets/cpp/VS_Snippets_CLR/cryptography.Xml.CipherReference/CPP/example.cpp#1)]
 [!code-csharp[cryptography.Xml.CipherReference#1](~/samples/snippets/csharp/VS_Snippets_CLR/cryptography.Xml.CipherReference/CS/example.cs#1)]
 [!code-vb[cryptography.Xml.CipherReference#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/cryptography.Xml.CipherReference/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CipherReference (string uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.CipherReference.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (uri As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CipherReference(System::String ^ uri);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Xml.CipherReference : string -&gt; System.Security.Cryptography.Xml.CipherReference" Usage="new System.Security.Cryptography.Xml.CipherReference uri" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="uri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">Ein URI (Uniform Resource Identifier), der auf die verschlüsselten Daten zeigt.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.Xml.CipherReference" />-Klasse mit dem angegebenen URI (Uniform Resource Identifier).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor erstellt ein <xref:System.Security.Cryptography.Xml.CipherReference> -Objekt mithilfe eines Uniform Resource Identifier (URI), der auf die verschlüsselten Daten zeigt. Das-Objekt wird dann verwendet, um Referenzinformationen für <xref:System.Security.Cryptography.Xml.CipherData> ein-Objekt bereitzustellen.  
  
 Sie können einen URI verwenden, um eine XML-Datei mit verschlüsselten Daten zu bestimmen. Beispiel:  
  
 `String uri = "http://www.woodgrovebank.com/document.xml";`  
  
 Sie können auch einen partiellen URI verwenden, um anzugeben, dass nur ein Teil eines XML-Dokuments verschlüsselt werden soll. Nehmen Sie beispielsweise an, dass ein XML-Dokument mit dem Namen `MyForm` Document. XML zwei Elemente enthält, wie im folgenden XML-Codebeispiel gezeigt:  
  
 `<MyForm Id='Form1'>`  
  
 `<! -- Form data here -->`  
  
 `</MyForm>`  
  
 `<MyForm Id='Form2'>`  
  
 `<! -- Form data here -->`  
  
 `</MyForm>`  
  
 Sie können nur den Inhalt in `Form2` mithilfe eines URI verschlüsseln, wie z. b.:  
  
 `String uri = "http://www.woodgrovebank.com/document.xml#Form2";`  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine neue Instanz von <xref:System.Security.Cryptography.Xml.CipherReference>erstellt.  
  
 [!code-cpp[cryptography.Xml.CipherReference#1](~/samples/snippets/cpp/VS_Snippets_CLR/cryptography.Xml.CipherReference/CPP/example.cpp#1)]
 [!code-csharp[cryptography.Xml.CipherReference#1](~/samples/snippets/csharp/VS_Snippets_CLR/cryptography.Xml.CipherReference/CS/example.cs#1)]
 [!code-vb[cryptography.Xml.CipherReference#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/cryptography.Xml.CipherReference/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CipherReference (string uri, System.Security.Cryptography.Xml.TransformChain transformChain);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string uri, class System.Security.Cryptography.Xml.TransformChain transformChain) cil managed" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.CipherReference.#ctor(System.String,System.Security.Cryptography.Xml.TransformChain)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CipherReference(System::String ^ uri, System::Security::Cryptography::Xml::TransformChain ^ transformChain);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Xml.CipherReference : string * System.Security.Cryptography.Xml.TransformChain -&gt; System.Security.Cryptography.Xml.CipherReference" Usage="new System.Security.Cryptography.Xml.CipherReference (uri, transformChain)" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public CipherReference (string uri, System.Security.Cryptography.Xml.TransformChain tc);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string uri, class System.Security.Cryptography.Xml.TransformChain tc) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (uri As String, tc As TransformChain)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CipherReference(System::String ^ uri, System::Security::Cryptography::Xml::TransformChain ^ tc);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Xml.CipherReference : string * System.Security.Cryptography.Xml.TransformChain -&gt; System.Security.Cryptography.Xml.CipherReference" Usage="new System.Security.Cryptography.Xml.CipherReference (uri, tc)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="uri" Type="System.String" Index="0" />
        <Parameter Name="transformChain" Type="System.Security.Cryptography.Xml.TransformChain" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="tc" Type="System.Security.Cryptography.Xml.TransformChain" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="uri">Ein URI (Uniform Resource Identifier), der auf die verschlüsselten Daten zeigt.</param>
        <param name="transformChain">Ein <see cref="T:System.Security.Cryptography.Xml.TransformChain" />-Objekt, das auf den verschlüsselten Daten auszuführende Transformationen beschreibt.</param>
        <param name="tc">To be added.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.Xml.CipherReference" />-Klasse mit dem angegebenen URI (Uniform Resource Identifier) und Transformationsketteninformationen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor erstellt ein <xref:System.Security.Cryptography.Xml.CipherReference> -Objekt mithilfe eines Uniform Resource Identifier (URI) und einer Transformations Kette, um die verschlüsselten Daten anzugeben. Das-Objekt wird dann verwendet, um Referenzinformationen für <xref:System.Security.Cryptography.Xml.CipherData> ein-Objekt bereitzustellen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine neue Instanz von <xref:System.Security.Cryptography.Xml.CipherReference>erstellt.  
  
 [!code-cpp[cryptography.Xml.CipherReference#1](~/samples/snippets/cpp/VS_Snippets_CLR/cryptography.Xml.CipherReference/CPP/example.cpp#1)]
 [!code-csharp[cryptography.Xml.CipherReference#1](~/samples/snippets/csharp/VS_Snippets_CLR/cryptography.Xml.CipherReference/CS/example.cs#1)]
 [!code-vb[cryptography.Xml.CipherReference#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/cryptography.Xml.CipherReference/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXml">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlElement GetXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.XmlElement GetXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.CipherReference.GetXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetXml () As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Xml::XmlElement ^ GetXml();" />
      <MemberSignature Language="F#" Value="override this.GetXml : unit -&gt; System.Xml.XmlElement" Usage="cipherReference.GetXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt die XML-Darstellung eines <see cref="T:System.Security.Cryptography.Xml.CipherReference" />-Objekts zurück.</summary>
        <returns>Ein <see cref="T:System.Xml.XmlElement" />-Objekt, das das <see langword="&lt;CipherReference&gt;" />-Element in XML-Verschlüsselung darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Methode, um `<CipherReference>` das-Element in XML auszugeben.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt eine Möglichkeit, die <xref:System.Security.Cryptography.Xml.CipherReference.GetXml%2A> -Methode zu verwenden.  
  
 [!code-cpp[CipherReference2#1](~/samples/snippets/cpp/VS_Snippets_CLR/CipherReference2/CPP/example.cpp#1)]
 [!code-csharp[CipherReference2#1](~/samples/snippets/csharp/VS_Snippets_CLR/CipherReference2/CS/example.cs#1)]
 [!code-vb[CipherReference2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CipherReference2/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Der <see cref="T:System.Security.Cryptography.Xml.CipherReference" />-Wert ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="LoadXml">
      <MemberSignature Language="C#" Value="public override void LoadXml (System.Xml.XmlElement value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void LoadXml(class System.Xml.XmlElement value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.CipherReference.LoadXml(System.Xml.XmlElement)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub LoadXml (value As XmlElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void LoadXml(System::Xml::XmlElement ^ value);" />
      <MemberSignature Language="F#" Value="override this.LoadXml : System.Xml.XmlElement -&gt; unit" Usage="cipherReference.LoadXml value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Xml.XmlElement" />
      </Parameters>
      <Docs>
        <param name="value">Ein <see cref="T:System.Xml.XmlElement" />-Objekt, das ein als Verweis zu verwendendes XML-Element darstellt.</param>
        <summary>Lädt XML-Informationen in XML-Verschlüsselung in das <see langword="&lt;CipherReference&gt;" />-Element.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Methode, um ein vorhandenes XML- <xref:System.Security.Cryptography.Xml.CipherReference> Element in das-Objekt zu laden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der enthaltene Parameter <paramref name="value" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
