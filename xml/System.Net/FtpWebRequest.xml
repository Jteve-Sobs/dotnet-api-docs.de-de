<Type Name="FtpWebRequest" FullName="System.Net.FtpWebRequest">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9c49f50c0cd66d2e16a249b769d840807e011c17" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70568321" /></Metadata><TypeSignature Language="C#" Value="public sealed class FtpWebRequest : System.Net.WebRequest" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FtpWebRequest extends System.Net.WebRequest" />
  <TypeSignature Language="DocId" Value="T:System.Net.FtpWebRequest" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FtpWebRequest&#xA;Inherits WebRequest" />
  <TypeSignature Language="C++ CLI" Value="public ref class FtpWebRequest sealed : System::Net::WebRequest" />
  <TypeSignature Language="F#" Value="type FtpWebRequest = class&#xA;    inherit WebRequest" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.Requests</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.WebRequest</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Implementiert einen FTP (File Transfer Protocol)-Client.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks

> [!IMPORTANT]
>  Es wird nicht empfohlen, die- `FtpWebRequest` Klasse für die neue Entwicklung zu verwenden. Weitere Informationen und Alternativen zu finden `FtpWebRequest`Sie unter [WebRequest sollte](https://github.com/dotnet/platform-compat/blob/master/docs/DE0003.md) nicht auf GitHub verwendet werden.

 Verwenden Sie die <xref:System.Net.WebRequest.Create%2A> -Methode <xref:System.Net.FtpWebRequest>, um eine Instanz von zu erhalten. Sie können auch die <xref:System.Net.WebClient> -Klasse verwenden, um Informationen von einem FTP-Server hochzuladen und herunterzuladen. Wenn Sie eine dieser Vorgehensweisen angeben und eine Netzwerkressource angeben, die das FTP-Schema verwendet (z `"ftp://contoso.com"`. b <xref:System.Net.FtpWebRequest> .), bietet die-Klasse die Möglichkeit, Programm gesteuert mit FTP-Servern zu interagieren.  
  
 Der URI kann relativ oder absolut sein. Wenn der URI das `"ftp://contoso.com/%2fpath"` Format hat (% 2F ist eine Escapezeichen "/"), ist der URI absolut, und das aktuelle Verzeichnis ist. `/path` Wenn der URI jedoch das `"ftp://contoso.com/path"`Format hat, meldet sich der .NET Framework zuerst beim FTP-Server an (mit dem Benutzernamen und dem Kennwort, die von der <xref:System.Net.FtpWebRequest.Credentials%2A> -Eigenschaft festgelegt werden), dann `<UserLoginDirectory>/path`wird das aktuelle Verzeichnis auf festgelegt.  
  
 Sie müssen über einen gültigen Benutzernamen und ein Kennwort für den Server verfügen, oder der Server muss die anonyme Anmeldung zulassen. Sie können die Anmelde Informationen zum Herstellen einer Verbindung mit dem Server angeben, <xref:System.Net.FtpWebRequest.Credentials%2A> indem Sie die-Eigenschaft festlegen, oder <xref:System.Uri.UserInfo%2A> Sie können Sie in den Teil des <xref:System.Net.WebRequest.Create%2A> URIs einschließen, der an die-Methode übermittelt wird. Wenn Sie Informationen <xref:System.Uri.UserInfo%2A> in den URI einschließen, wird <xref:System.Net.FtpWebRequest.Credentials%2A> die Eigenschaft auf neue Netzwerk Anmelde Informationen mit dem angegebenen Benutzernamen und Kenn Wort Informationen festgelegt.  
  
> [!CAUTION]
>  Sofern die <xref:System.Net.FtpWebRequest.EnableSsl%2A> -Eigenschaft `true`nicht ist, werden alle Daten und Befehle, einschließlich des Benutzernamens und der Kenn Wort Informationen, als Klartext an den Server gesendet. Personen, die den Netzwerk Datenverkehr überwachen, können Ihre Anmelde Informationen anzeigen und zum Herstellen der Verbindung mit dem Server verwenden Wenn Sie eine Verbindung mit einem FTP-Server herstellen, für den Anmelde Informationen erforderlich sind, und Secure Sockets Layer ( <xref:System.Net.FtpWebRequest.EnableSsl%2A> SSL `true`) unterstützt, sollten Sie auf festlegen.  
  
 Sie müssen <xref:System.Net.WebPermission> auf die FTP-Ressource zugreifen müssen. andernfalls wird <xref:System.Security.SecurityException> eine-Ausnahme ausgelöst.  
  
 Geben Sie den an den Server zu sendenden FTP-Befehl <xref:System.Net.FtpWebRequest.Method%2A> an, indem Sie die-Eigenschaft <xref:System.Net.WebRequestMethods.Ftp> auf einen in der-Struktur definierten Wert festlegen. Um Textdaten zu übertragen, <xref:System.Net.FtpWebRequest.UseBinary%2A> ändern Sie die-Eigenschaft von`true`Ihrem Standard `false`Wert () in. Weitere Informationen und Einschränkungen finden <xref:System.Net.FtpWebRequest.Method%2A>Sie unter.  
  
 Wenn Sie ein <xref:System.Net.FtpWebRequest> -Objekt verwenden, um eine Datei auf einen Server hochzuladen, müssen Sie den Dateiinhalt in den Anforderungs Datenstrom <xref:System.Net.FtpWebRequest.GetRequestStream%2A> schreiben, der durch Aufrufen der-Methode oder <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> seiner <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> asynchronen Entsprechungen abgerufen wurde, die-und-Methoden. Sie müssen in den Stream schreiben und den Stream schließen, bevor Sie die Anforderung senden.  
  
 Anforderungen werden durch Aufrufen der <xref:System.Net.FtpWebRequest.GetResponse%2A> -Methode oder der asynchronen Entsprechungen, der <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> -Methode und <xref:System.Net.FtpWebRequest.EndGetResponse%2A> der-Methode an den Server gesendet. Wenn der angeforderte Vorgang abgeschlossen ist <xref:System.Net.FtpWebResponse> , wird ein Objekt zurückgegeben. Das <xref:System.Net.FtpWebResponse> -Objekt stellt den Status des Vorgangs und alle Daten bereit, die vom Server heruntergeladen werden.  
  
 Mithilfe der <xref:System.Net.FtpWebRequest.ReadWriteTimeout%2A> -Eigenschaft können Sie einen Timeout Wert für das Lesen oder schreiben auf den Server festlegen. Wenn der Timeout Zeitraum überschritten wird, löst die Aufruf Methode eine <xref:System.Net.WebException> aus, bei <xref:System.Net.WebExceptionStatus> der <xref:System.Net.WebExceptionStatus.Timeout>auf festgelegt ist.  
  
 Beim Herunterladen einer Datei von einem FTP-Server ist der Inhalt der angeforderten Datei im Stream des Antwort Objekts verfügbar, wenn der Befehl erfolgreich ausgeführt wurde. Sie können auf diesen Stream zugreifen, indem <xref:System.Net.FtpWebResponse.GetResponseStream%2A> Sie die-Methode aufrufen. Weitere Informationen finden Sie unter <xref:System.Net.FtpWebResponse>.  
  
 Wenn die <xref:System.Net.FtpWebRequest.Proxy%2A> Eigenschaft entweder direkt oder in einer Konfigurationsdatei festgelegt wird, erfolgt die Kommunikation mit dem FTP-Server über den angegebenen Proxy. Wenn der angegebene Proxy ein HTTP-Proxy ist, werden <xref:System.Net.WebRequestMethods.Ftp.DownloadFile>nur <xref:System.Net.WebRequestMethods.Ftp.ListDirectory>die Befehle <xref:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails> , und unterstützt.  
  
 Nur heruntergeladener binärer Inhalt wird zwischengespeichert. Das heißt, dass Inhalt mithilfe des <xref:System.Net.WebRequestMethods.Ftp.DownloadFile> -Befehls empfangen <xref:System.Net.FtpWebRequest.UseBinary%2A> wird und die `true`-Eigenschaft auf festgelegt ist.  
  
 Mehrere <xref:System.Net.FtpWebRequest>s wieder verwenden vorhandene Verbindungen, wenn möglich.  
  
 Weitere Informationen zum FTP-Protokoll finden Sie unter [RFC 959: Dateiübertragungsprotokoll](https://www.ietf.org/rfc/rfc959.txt).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird das Löschen einer Datei von einem FTP-Server veranschaulicht.  
  
 [!code-cpp[NCLFtpClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#4)]
 [!code-csharp[NCLFtpClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#4)]  
  
 Im folgenden Codebeispiel wird das Herunterladen einer Datei von einem FTP-Server <xref:System.Net.WebClient> mithilfe der-Klasse veranschaulicht.  
  
 [!code-cpp[NCLFtpClient#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#5)]
 [!code-csharp[NCLFtpClient#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#5)]  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie asynchrone Vorgänge verwendet werden, um eine Datei auf einen FTP-Server hochzuladen.  
  
 [!code-cpp[NCLFtpAsync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpAsync/CPP/async.cpp#1)]
 [!code-csharp[NCLFtpAsync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpAsync/CS/async.cs#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Net.WebPermission">für den Zugriff auf die Ressource, auf die diese Anforderung verweist. Zugeordnete Enumeration: <see cref="F:System.Net.NetworkAccess.Connect" /></permission>
    <altmember cref="T:System.Net.FtpWebResponse" />
    <altmember cref="T:System.Net.FtpStatusCode" />
    <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
    <altmember cref="T:System.Net.WebRequest" />
    <altmember cref="T:System.Net.WebResponse" />
    <altmember cref="T:System.Net.WebClient" />
  </Docs>
  <Members>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public override void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.FtpWebRequest.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Abort();" />
      <MemberSignature Language="F#" Value="override this.Abort : unit -&gt; unit" Usage="ftpWebRequest.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Beendet einen asynchronen FTP-Vorgang.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn kein Vorgang ausgeführt wird, wird von dieser Methode nichts ausgeführt. Wenn eine Dateiübertragung ausgeführt wird, beendet diese Methode die Übertragung.  
  
> [!NOTE]
>  Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerk Ablauf Verfolgung in der .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie der Benutzer ein asynchrones Hochladen einer Datei aus dem lokalen Verzeichnis auf den Server beenden kann.  
  
 [!code-cpp[NCLFtpClient#10](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#10)]
 [!code-csharp[NCLFtpClient#10](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="BeginGetRequestStream">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginGetRequestStream (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginGetRequestStream(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginGetRequestStream (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginGetRequestStream(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.BeginGetRequestStream : AsyncCallback * obj -&gt; IAsyncResult" Usage="ftpWebRequest.BeginGetRequestStream (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">Ein <see cref="T:System.AsyncCallback" />-Delegat, der auf die Methode verweist, die bei Abschluss des Vorgangs aufgerufen werden soll.</param>
        <param name="state">Ein benutzerdefiniertes Objekt, das Informationen über den Vorgang enthält. Dieses Objekt wird bei Abschluss des Vorgangs an den <paramref name="callback" />-Delegaten übergeben.</param>
        <summary>Beginnt das asynchrone Öffnen des Inhaltsstreams einer Anforderung zum Schreiben.</summary>
        <returns>Eine <see cref="T:System.IAsyncResult" />-Instanz, die den Status des Vorgangs angibt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um den asynchronen Vorgang abzuschließen, müssen Sie die <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> -Methode aufrufen. In der <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> Regel wird von der Methode aufgerufen, `callback`auf die von verwiesen wird. Überprüfen Sie die Eigenschaften <xref:System.IAsyncResult> des-Objekts, das von dieser Methode zurückgegeben wird, um den Status des Vorgangs zu bestimmen.  
  
 Diese Methode wird während des Wartens auf den Stream nicht blockiert. Um zu blockieren, <xref:System.Net.FtpWebRequest.GetRequestStream%2A> wird anstelle dieser Methode aufgerufen.  
  
 Ausführliche Informationen zur Verwendung des asynchronen Programmiermodells finden Sie unter [Asynchrones Aufrufen synchroner Methoden](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).  
  
> [!NOTE]
>  Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerk Ablauf Verfolgung in der .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird das Starten eines asynchronen Vorgangs zum Abrufen des Datenstroms einer Anforderung veranschaulicht. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Net.FtpWebRequest> Klassen Übersicht bereitgestellt wird.  
  
 [!code-cpp[NCLFtpAsync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpAsync/CPP/async.cpp#4)]
 [!code-csharp[NCLFtpAsync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpAsync/CS/async.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Ein vorheriger Aufruf dieser Methode oder <see cref="M:System.Net.FtpWebRequest.GetRequestStream" /> wurde noch nicht abgeschlossen.</exception>
        <exception cref="T:System.Net.WebException">Es konnte keine Verbindung mit dem FTP-Server hergestellt werden.</exception>
        <exception cref="T:System.Net.ProtocolViolationException">Die <see cref="P:System.Net.FtpWebRequest.Method" />-Eigenschaft ist nicht auf <see cref="F:System.Net.WebRequestMethods.Ftp.UploadFile" /> festgelegt.</exception>
        <block subset="none" type="usage"><para>Diese Methode generiert Netzwerk Datenverkehr.</para></block>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="BeginGetResponse">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginGetResponse (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginGetResponse(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginGetResponse (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginGetResponse(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.BeginGetResponse : AsyncCallback * obj -&gt; IAsyncResult" Usage="ftpWebRequest.BeginGetResponse (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">Ein <see cref="T:System.AsyncCallback" />-Delegat, der auf die Methode verweist, die bei Abschluss des Vorgangs aufgerufen werden soll.</param>
        <param name="state">Ein benutzerdefiniertes Objekt, das Informationen über den Vorgang enthält. Dieses Objekt wird bei Abschluss des Vorgangs an den <paramref name="callback" />-Delegaten übergeben.</param>
        <summary>Beginnt mit dem asynchronen Senden einer Anforderung und Empfangen einer Antwort von einem FTP-Server.</summary>
        <returns>Eine <see cref="T:System.IAsyncResult" />-Instanz, die den Status des Vorgangs angibt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um den asynchronen Vorgang abzuschließen, müssen Sie die <xref:System.Net.FtpWebRequest.EndGetResponse%2A> -Methode aufrufen. In der <xref:System.Net.FtpWebRequest.EndGetResponse%2A> Regel wird von der Methode aufgerufen, `callback`auf die von verwiesen wird. Überprüfen Sie die Eigenschaften <xref:System.IAsyncResult> des-Objekts, das von der <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> -Methode zurückgegeben wird, um den Status des Vorgangs zu bestimmen.  
  
 Wenn die <xref:System.Net.FtpWebRequest.Proxy%2A> Eigenschaft entweder direkt oder in einer Konfigurationsdatei festgelegt wird, erfolgt die Kommunikation mit dem FTP-Server über den angegebenen Proxy.  
  
 <xref:System.Net.FtpWebRequest.BeginGetResponse%2A>beim Warten auf die Antwort vom Server wird nicht blockiert. Um zu blockieren, wird <xref:System.Net.FtpWebRequest.GetResponse%2A> die-Methode anstelle <xref:System.Net.FtpWebRequest.BeginGetResponse%2A>von aufgerufen.  
  
 Weitere Informationen zur Verwendung des asynchronen Programmiermodells finden Sie unter [Asynchrones Aufrufen synchroner Methoden](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).  
  
 Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerk Ablauf Verfolgung in der .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
> [!NOTE]
>  Wenn eine <xref:System.Net.WebException> ausgelöst wird, verwenden Sie <xref:System.Net.WebException.Response%2A> die <xref:System.Net.WebException.Status%2A> -Eigenschaft und die-Eigenschaft der Ausnahme, um die Antwort vom Server zu ermitteln.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie ein asynchroner Vorgang beendet wird, um den Datenstrom einer Anforderung zu erhalten, und anschließend eine Anforderung zum Abrufen der Antwort zu starten. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Net.FtpWebRequest> Klassen Übersicht bereitgestellt wird.  
  
 [!code-cpp[NCLFtpAsync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpAsync/CPP/async.cpp#5)]
 [!code-csharp[NCLFtpAsync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpAsync/CS/async.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="M:System.Net.FtpWebRequest.GetResponse" /> oder <see cref="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> wurde bereits für diese Instanz aufgerufen.</exception>
        <block subset="none" type="usage"><para>Diese Methode generiert Netzwerk Datenverkehr.</para></block>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="ClientCertificates">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.ClientCertificates" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientCertificates As X509CertificateCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ ClientCertificates { System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ get(); void set(System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ClientCertificates : System.Security.Cryptography.X509Certificates.X509CertificateCollection with get, set" Usage="System.Net.FtpWebRequest.ClientCertificates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509CertificateCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Zertifikate ab, die für das Herstellen einer verschlüsselten Verbindung mit dem FTP-Server verwendet werden, oder legt sie fest.</summary>
        <value>Ein <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />-Objekt, das die Clientzertifikate enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Client Zertifikate werden verwendet, um den Client während der anfänglichen SSL-Verbindungs Aushandlung zu authentifizieren. Weitere Informationen finden Sie unter <xref:System.Net.FtpWebRequest.EnableSsl%2A>.  
  
> [!NOTE]
>  Der .NET Framework speichert SSL-Sitzungen bei der Erstellung zwischen und versucht nach Möglichkeit, eine zwischengespeicherte Sitzung für eine neue Anforderung wiederzuverwenden. Wenn Sie versuchen, eine SSL-Sitzung wiederzuverwenden, verwendet der .NET Framework das <xref:System.Net.HttpWebRequest.ClientCertificates%2A> erste Element von (sofern vorhanden) oder versucht, eine anonyme Sitzung wiederzuverwenden <xref:System.Net.HttpWebRequest.ClientCertificates%2A> , wenn leer ist.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der für einen SET-Vorgang festgelegte Wert ist <see langword="null" />.</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="ConnectionGroupName">
      <MemberSignature Language="C#" Value="public override string ConnectionGroupName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionGroupName" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.ConnectionGroupName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ConnectionGroupName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConnectionGroupName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionGroupName : string with get, set" Usage="System.Net.FtpWebRequest.ConnectionGroupName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Verbindungsgruppe ab, die den zum Senden der aktuellen Anforderung verwendeten Dienstpunkt enthält, oder legt diesen fest.</summary>
        <value>Ein <see cref="T:System.String" />-Wert, der einen Verbindungsgruppennamen enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verbindungs Gruppen ordnen eine Reihe von Anforderungen einer bestimmten Verbindung oder einer Gruppe von Verbindungen zu. Die Verbindungen in einer Verbindungsgruppe können nur von Anforderungen wieder verwendet werden, die in derselben Anwendungsdomäne stammen, wenn die Anmelde Informationen für die Anforderung identisch sind und die Anforderung den Verbindungs Gruppennamen angibt. Wenn eine Anforderung keinen Verbindungs Gruppennamen angibt, können alle vorhandenen Verbindungen mit dem angeforderten Server, der keiner Verbindungsgruppe zugeordnet ist, verwendet werden. Wenn die Anmelde Informationen nicht identisch sind, wird die vorhandene Verbindung geschlossen, und die neue Anforderung muss erneut authentifiziert werden.  
  
 Die Verwendung von Verbindungs Gruppen kann die Leistung verbessern, da dadurch alle Anforderungen eines Benutzers die Wiederverwendbarkeit der mit den Anmelde Informationen des Benutzers authentifizierten Verbindung wieder verwenden können.  
  
 Wenn Sie <xref:System.Net.FtpWebRequest.ConnectionGroupName%2A> die-Eigenschaft nach <xref:System.Net.FtpWebRequest.GetRequestStream%2A>dem Aufrufen <xref:System.Net.FtpWebRequest.GetResponse%2A>der Methode <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> ,, oder <xref:System.InvalidOperationException> ändern, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>wird eine Ausnahme ausgelöst.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird der Wert dieser Eigenschaft abgerufen.  
  
 [!code-cpp[NCLFtpClient#16](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#16)]
 [!code-csharp[NCLFtpClient#16](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Für diese Eigenschaft wurde ein neuer Wert für eine Anforderung angegeben, die bereits ausgeführt wird.</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
        <related type="Article" href="~/docs/framework/network-programming/managing-connections.md">Verwalten von Verbindungen</related>
      </Docs>
    </Member>
    <Member MemberName="ContentLength">
      <MemberSignature Language="C#" Value="public override long ContentLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ContentLength" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.ContentLength" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ContentLength As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long ContentLength { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.ContentLength : int64 with get, set" Usage="System.Net.FtpWebRequest.ContentLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der von der <see cref="T:System.Net.FtpWebRequest" />-Klasse ignoriert wird, oder legt diesen fest.</summary>
        <value>Ein <see cref="T:System.Int64" />-Wert, der ignoriert werden soll.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Net.FtpWebRequest.ContentLength%2A> <xref:System.Net.WebRequest> -Eigenschaft wird nur für die Kompatibilität mit anderen Implementierungen der- <xref:System.Net.WebResponse> Klasse und der-Klasse bereitgestellt. Es gibt keinen Grund, zu <xref:System.Net.FtpWebRequest.ContentLength%2A>verwenden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentOffset">
      <MemberSignature Language="C#" Value="public long ContentOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ContentOffset" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.ContentOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentOffset As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long ContentOffset { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.ContentOffset : int64 with get, set" Usage="System.Net.FtpWebRequest.ContentOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Byteoffset für die durch diese Anforderung heruntergeladene Datei ab oder legt diesen fest.</summary>
        <value>Eine <see cref="T:System.Int64" />-Instanz, die den Dateioffset in Bytes angibt. Der Standardwert ist 0 (null).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Legen Sie <xref:System.Net.FtpWebRequest.ContentOffset%2A> die Eigenschaft fest, wenn Sie eine Datei von einem FTP-Server herunterladen. Dieser Offset gibt die Position in der Datei des Servers an, die den Anfang der herunter zuladenden Daten markiert. Der Offset wird als die Anzahl der Bytes vom Anfang der Datei angegeben. der Offset des ersten Bytes ist 0 (null).  
  
 Die <xref:System.Net.FtpWebRequest.ContentOffset%2A> Einstellung bewirkt <xref:System.Net.FtpWebRequest> , dass der einen Restart`REST`()-Befehl an den Server sendet. Dieser Befehl wird von den meisten FTP-Server Implementierungen ignoriert, wenn Sie Daten auf den Server hochladen.  
  
 Wenn <xref:System.Net.FtpWebRequest.ContentOffset%2A> Sie nach dem <xref:System.Net.FtpWebRequest.GetRequestStream%2A>aufrufen <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>der <xref:System.Net.FtpWebRequest.GetResponse%2A>Methode, <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> , oder ändern <xref:System.InvalidOperationException> , wird eine Ausnahme ausgelöst.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie ein Teil einer Datei von einem Server heruntergeladen und die heruntergeladenen Daten an eine lokale Datei angehängt werden.  
  
 [!code-cpp[NclFtpClient#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#7)]
 [!code-csharp[NclFtpClient#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Für diese Eigenschaft wurde ein neuer Wert für eine Anforderung angegeben, die bereits ausgeführt wird.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Der für diese Eigenschaft angegebene Wert ist kleiner als 0 (null).</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public override string ContentType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ContentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ContentType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContentType : string with get, set" Usage="System.Net.FtpWebRequest.ContentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Löst immer eine <see cref="T:System.NotSupportedException" /> aus.</summary>
        <value>Löst immer eine <see cref="T:System.NotSupportedException" /> aus.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Net.FtpWebRequest.ContentType%2A> <xref:System.Net.WebRequest> -Eigenschaft wird nur für die Kompatibilität mit anderen Implementierungen der- <xref:System.Net.WebResponse> Klasse und der-Klasse bereitgestellt. Es gibt keinen Grund, zu <xref:System.Net.FtpWebRequest.ContentType%2A>verwenden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Inhaltstypinformationen werden für FTP nicht unterstützt.</exception>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public override System.Net.ICredentials Credentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Credentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::ICredentials ^ Credentials { System::Net::ICredentials ^ get(); void set(System::Net::ICredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Net.ICredentials with get, set" Usage="System.Net.FtpWebRequest.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die für die Kommunikation mit dem FTP-Server verwendeten Anmeldeinformationen ab oder legt diese fest.</summary>
        <value>Eine <see cref="T:System.Net.ICredentials" />-Instanz. Andernfalls <see langword="null" />, wenn die Eigenschaft nicht festgelegt wurde.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Beim Herstellen einer Verbindung mithilfe der anonymen Anmeldung müssen keine Anmelde Informationen angegeben werden. Sie müssen die <xref:System.Net.FtpWebRequest.Credentials%2A> -Eigenschaft mithilfe von Anmelde Informationen vom Typ <xref:System.Net.NetworkCredential>festlegen. Dadurch wird sichergestellt, dass der Benutzername und das Kennwort gelesen und an den Server gesendet werden können.  
  
> [!CAUTION]
>  Anmelde Informationen werden bei der Übertragung an den Server nur dann <xref:System.Net.FtpWebRequest.EnableSsl%2A> verschlüsselt, wenn die `true`-Eigenschaft auf festgelegt ist.  
  
 Wenn <xref:System.Net.FtpWebRequest.Credentials%2A> Sie nach dem <xref:System.Net.FtpWebRequest.GetRequestStream%2A>aufrufen <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>der <xref:System.Net.FtpWebRequest.GetResponse%2A>Methode, <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> , oder ändern <xref:System.InvalidOperationException> , wird eine Ausnahme ausgelöst.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird der Wert dieser Eigenschaft abgerufen und verwendet, um den Benutzernamen anzuzeigen.  
  
 [!code-cpp[NCLFtpClient#14](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#14)]
 [!code-csharp[NCLFtpClient#14](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der für einen SET-Vorgang festgelegte Wert ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Für einen set-Vorgang wurde ein <see cref="T:System.Net.ICredentials" /> von einem anderen Typ als <see cref="T:System.Net.NetworkCredential" /> angegeben.</exception>
        <exception cref="T:System.InvalidOperationException">Für diese Eigenschaft wurde ein neuer Wert für eine Anforderung angegeben, die bereits ausgeführt wird.</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="DefaultCachePolicy">
      <MemberSignature Language="C#" Value="public static System.Net.Cache.RequestCachePolicy DefaultCachePolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.Cache.RequestCachePolicy DefaultCachePolicy" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.DefaultCachePolicy" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultCachePolicy As RequestCachePolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::Cache::RequestCachePolicy ^ DefaultCachePolicy { System::Net::Cache::RequestCachePolicy ^ get(); void set(System::Net::Cache::RequestCachePolicy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultCachePolicy : System.Net.Cache.RequestCachePolicy with get, set" Usage="System.Net.FtpWebRequest.DefaultCachePolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Cache.RequestCachePolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Definiert die Standardcacherichtlinie für alle FTP-Anforderungen.</summary>
        <value>Eine <see cref="T:System.Net.Cache.RequestCachePolicy" />, die die Cacherichtlinie für FTP-Anforderungen definiert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nur mit dem <xref:System.Net.WebRequestMethods.Ftp.DownloadFile> Befehl empfangene Inhalte werden zwischengespeichert.  
  
 In der folgenden Tabelle werden die Auswirkungen von FTP-Cache <xref:System.Net.FtpWebRequest>Richtlinien auf beschrieben.  
  
|Richtlinie|Effekt|  
|------------|------------|  
|<xref:System.Net.Cache.RequestCacheLevel.Default>|Gibt die zwischengespeicherte Ressource zurück, wenn die Ressource neu ist, die Länge des Inhalts genau ist und die Attribute für die Ablauf-, Änderungs-und Inhalts Länge vorhanden sind.|  
|<xref:System.Net.Cache.RequestCacheLevel.BypassCache>|Gibt die Ressource vom Server zurück.|  
|<xref:System.Net.Cache.RequestCacheLevel.CacheOnly>|Gibt die zwischengespeicherte Ressource zurück, wenn die Inhalts Länge vorhanden ist und mit der Eintrags Größe übereinstimmt. Andernfalls löst eine <xref:System.Net.WebException>aus.|  
|<xref:System.Net.Cache.RequestCacheLevel.CacheIfAvailable>|Gibt die zwischengespeicherte Ressource zurück, wenn die Inhalts Länge angegeben wird und mit der Eintrags Größe übereinstimmt. Andernfalls wird die Ressource vom Server heruntergeladen und an den Aufrufer zurückgegeben.|  
|<xref:System.Net.Cache.RequestCacheLevel.Revalidate>|Gibt die zwischengespeicherte Ressource zurück, wenn der Zeitstempel der zwischengespeicherten Ressource mit dem Zeitstempel der Ressource auf dem Server identisch ist. Andernfalls wird die Ressource vom Server heruntergeladen, im Cache gespeichert und an den Aufrufer zurückgegeben.|  
|<xref:System.Net.Cache.RequestCacheLevel.Reload>|Lädt die Ressource vom Server herunter, speichert Sie im Cache und gibt die Ressource an den Aufrufer zurück.|  
|<xref:System.Net.Cache.RequestCacheLevel.NoCacheNoStore>|Wenn eine zwischengespeicherte Ressource vorhanden ist, wird Sie gelöscht. Die Ressource wird vom Server heruntergeladen und an den Aufrufer zurückgegeben.|  
  
> [!NOTE]
>  Durch <xref:System.Net.FtpWebRequest.DefaultCachePolicy%2A> die Einstellung wird jede Konfigurationseinstellung überschrieben.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der Aufrufer hat diese Eigenschaft auf <see langword="null" /> festzulegen versucht.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/0eb0c5cb-dd97-484d-8614-785e88877abb">defaultFtpCachePolicy (Netzwerkeinstellungen)</related>
      </Docs>
    </Member>
    <Member MemberName="EnableSsl">
      <MemberSignature Language="C#" Value="public bool EnableSsl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableSsl" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.EnableSsl" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableSsl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableSsl { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableSsl : bool with get, set" Usage="System.Net.FtpWebRequest.EnableSsl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert vom Typ <see cref="T:System.Boolean" /> ab, der angibt, dass eine SSL-Verbindung verwendet werden soll, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn die Übertragung der Steuerung und Daten verschlüsselt ist, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />sein.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  Sofern die <xref:System.Net.FtpWebRequest.EnableSsl%2A> -Eigenschaft `true`nicht ist, werden alle Daten und Befehle, einschließlich des Benutzernamens und der Kenn Wort Informationen, als Klartext an den Server gesendet. Personen, die den Netzwerk Datenverkehr überwachen, können Ihre Anmelde Informationen anzeigen und zum Herstellen der Verbindung mit dem Server verwenden Wenn Sie eine Verbindung mit einem FTP-Server herstellen, für den Anmelde Informationen erforderlich sind, <xref:System.Net.FtpWebRequest.EnableSsl%2A> und `true`SSL unterstützt, sollten Sie auf festlegen.  
  
 Der `"AUTH TLS"` Befehl wird an den Server gesendet, um eine verschlüsselte Sitzung anzufordern. Wenn der Server diesen Befehl nicht erkennt, erhalten Sie eine <xref:System.Net.WebException> -Ausnahme.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine verschlüsselte Verbindung verwendet, um die Verzeichnisliste von einem FTP-Server herunterzuladen.  
  
 [!code-cpp[NCLFtpClient#8](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#8)]
 [!code-csharp[NCLFtpClient#8](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die Verbindung mit dem FTP-Server wurde bereits hergestellt.</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="EndGetRequestStream">
      <MemberSignature Language="C#" Value="public override System.IO.Stream EndGetRequestStream (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IO.Stream EndGetRequestStream(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.FtpWebRequest.EndGetRequestStream(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EndGetRequestStream (asyncResult As IAsyncResult) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IO::Stream ^ EndGetRequestStream(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndGetRequestStream : IAsyncResult -&gt; System.IO.Stream" Usage="ftpWebRequest.EndGetRequestStream asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">Das <see cref="T:System.IAsyncResult" />-Objekt, das zu Beginn des Vorgangs zurückgegeben wurde.</param>
        <summary>Beendet einen ausstehenden Vorgang, der mit <see cref="M:System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /> gestartet wurde.</summary>
        <returns>Eine nicht schreibgeschützte <see cref="T:System.IO.Stream" />-Instanz, die dieser Instanz zugeordnet ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn der Vorgang nicht abgeschlossen wurde, wird <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> die-Methode blockiert, bis der Vorgang abgeschlossen ist. Überprüfen Sie die <xref:System.IAsyncResult.IsCompleted%2A> -Eigenschaft, bevor Sie aufrufen <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A>, um zu bestimmen, ob der Vorgang abgeschlossen wurde  
  
 Zusätzlich zu den in "Ausnahmen <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> " notierten Ausnahmen löst erneut Ausnahmen aus, die ausgelöst wurden, während der Stream zum Schreiben geöffnet wurde.  
  
> [!NOTE]
>  Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerk Ablauf Verfolgung in der .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie ein asynchroner Vorgang beendet wird, um den Datenstrom einer Anforderung zu erhalten. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Net.FtpWebRequest> Klassen Übersicht bereitgestellt wird.  
  
 [!code-cpp[NCLFtpAsync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpAsync/CPP/async.cpp#5)]
 [!code-csharp[NCLFtpAsync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpAsync/CS/async.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="asyncResult" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="asyncResult" /> wurde nicht durch den Aufruf von <see cref="M:System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /> abgerufen.</exception>
        <exception cref="T:System.InvalidOperationException">Diese Methode wurde bereits für den durch <paramref name="asyncResult" /> bezeichneten Vorgang aufgerufen.</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="EndGetResponse">
      <MemberSignature Language="C#" Value="public override System.Net.WebResponse EndGetResponse (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Net.WebResponse EndGetResponse(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.FtpWebRequest.EndGetResponse(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EndGetResponse (asyncResult As IAsyncResult) As WebResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Net::WebResponse ^ EndGetResponse(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndGetResponse : IAsyncResult -&gt; System.Net.WebResponse" Usage="ftpWebRequest.EndGetResponse asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">Das <see cref="T:System.IAsyncResult" />, das zu Beginn des Vorgangs zurückgegeben wurde.</param>
        <summary>Beendet einen ausstehenden Vorgang, der mit <see cref="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> gestartet wurde.</summary>
        <returns>Ein <see cref="T:System.Net.WebResponse" />-Verweis, der eine <see cref="T:System.Net.FtpWebResponse" />-Instanz enthält. Dieses Objekt enthält die Antwort des FTP-Servers auf die Anforderung.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn der Vorgang zu dem Zeitpunkt, zu dem die <xref:System.Net.FtpWebRequest.EndGetResponse%2A> -Methode aufgerufen wird <xref:System.Net.FtpWebRequest.EndGetResponse%2A> , nicht abgeschlossen wurde, wird blockiert, bis der Vorgang abgeschlossen ist. Überprüfen Sie die <xref:System.IAsyncResult.IsCompleted%2A> -Eigenschaft, bevor Sie aufrufen. <xref:System.Net.FtpWebRequest.EndGetResponse%2A>  
  
 Zusätzlich zu den in "Ausnahmen <xref:System.Net.FtpWebRequest.EndGetResponse%2A> " notierten Ausnahmen löst erneut Ausnahmen aus, die während der Kommunikation mit dem Server ausgelöst wurden.  
  
> [!NOTE]
>  Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerk Ablauf Verfolgung in der .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie ein asynchroner Vorgang beendet wird, um eine Antwort zu erhalten. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Net.FtpWebRequest> Klassen Übersicht bereitgestellt wird.  
  
 [!code-cpp[NCLFtpAsync#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpAsync/CPP/async.cpp#6)]
 [!code-csharp[NCLFtpAsync#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpAsync/CS/async.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="asyncResult" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="asyncResult" /> wurde nicht durch den Aufruf von <see cref="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> abgerufen.</exception>
        <exception cref="T:System.InvalidOperationException">Diese Methode wurde bereits für den durch <paramref name="asyncResult" /> bezeichneten Vorgang aufgerufen.</exception>
        <exception cref="T:System.Net.WebException">Fehler beim Verwenden eines HTTP-Proxys.</exception>
        <block subset="none" type="usage"><para>Diese Methode generiert Netzwerk Datenverkehr.</para></block>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
        <altmember cref="M:System.Net.FtpWebRequest.GetResponse" />
      </Docs>
    </Member>
    <Member MemberName="GetRequestStream">
      <MemberSignature Language="C#" Value="public override System.IO.Stream GetRequestStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IO.Stream GetRequestStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.FtpWebRequest.GetRequestStream" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetRequestStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IO::Stream ^ GetRequestStream();" />
      <MemberSignature Language="F#" Value="override this.GetRequestStream : unit -&gt; System.IO.Stream" Usage="ftpWebRequest.GetRequestStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft den Stream ab, der zum Hochladen von Daten auf einen FTP-Server verwendet wird.</summary>
        <returns>Eine nicht schreibgeschützte <see cref="T:System.IO.Stream" />-Instanz, die zum Speichern von Daten verwendet wird, die durch die aktuelle Anforderung an den Server gesendet werden.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Legen Sie die Anforderungs Eigenschaften vor dem <xref:System.Net.FtpWebRequest.GetRequestStream%2A> Aufrufen der-Methode fest. Nachdem Sie die Daten in den Stream geschrieben haben, müssen Sie den Stream vor dem Senden der Anforderung schließen.  
  
 Wenn Sie die <xref:System.Net.FtpWebRequest.Method%2A> -Eigenschaft nicht auf <xref:System.Net.WebRequestMethods.Ftp.UploadFile> oder <xref:System.Net.WebRequestMethods.Ftp.AppendFile>festgelegt haben, können Sie den Stream nicht erhalten.  
  
 <xref:System.Net.FtpWebRequest.GetRequestStream%2A>blockiert beim Warten auf den Stream. Um dies zu verhindern, müssen <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> Sie die-Methode <xref:System.Net.FtpWebRequest.GetRequestStream%2A>anstelle von aufzurufen.  
  
> [!NOTE]
>  Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerk Ablauf Verfolgung in der .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie eine Datei in den Datenstrom einer Anforderung kopiert und eine Anforderung an den Server gesendet wird, um die Daten hochzuladen und an eine Datei anzufügen.  
  
 [!code-cpp[NCLFtpClient#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#3)]
 [!code-csharp[NCLFtpClient#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="M:System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /> wurde aufgerufen und nicht abgeschlossen.  
  
- oder - 
Ein HTTP-Proxy ist aktiviert, und Sie haben versucht, einen anderen FTP-Befehl als <see cref="F:System.Net.WebRequestMethods.Ftp.DownloadFile" />, <see cref="F:System.Net.WebRequestMethods.Ftp.ListDirectory" /> oder <see cref="F:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails" /> zu verwenden.</exception>
        <exception cref="T:System.Net.WebException">Es konnte keine Verbindung mit dem FTP-Server hergestellt werden.</exception>
        <exception cref="T:System.Net.ProtocolViolationException">Die <see cref="P:System.Net.FtpWebRequest.Method" />-Eigenschaft ist nicht auf <see cref="F:System.Net.WebRequestMethods.Ftp.UploadFile" /> oder <see cref="F:System.Net.WebRequestMethods.Ftp.AppendFile" /> festgelegt.</exception>
        <block subset="none" type="usage"><para>Diese Methode generiert Netzwerk Datenverkehr.</para></block>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="GetResponse">
      <MemberSignature Language="C#" Value="public override System.Net.WebResponse GetResponse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Net.WebResponse GetResponse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.FtpWebRequest.GetResponse" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetResponse () As WebResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Net::WebResponse ^ GetResponse();" />
      <MemberSignature Language="F#" Value="override this.GetResponse : unit -&gt; System.Net.WebResponse" Usage="ftpWebRequest.GetResponse " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebResponse</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt die FTP-Serverantwort zurück.</summary>
        <returns>Ein <see cref="T:System.Net.WebResponse" />-Verweis, der eine <see cref="T:System.Net.FtpWebResponse" />-Instanz enthält. Dieses Objekt enthält die Antwort des FTP-Servers auf die Anforderung.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um auf die FTP-spezifischen Eigenschaften zuzugreifen, müssen Sie das <xref:System.Net.WebResponse> von dieser Methode zurückgegebene- <xref:System.Net.FtpWebResponse>Objekt in umwandeln.  
  
 <xref:System.Net.FtpWebRequest.GetResponse%2A>bewirkt, dass eine Steuerelement Verbindung hergestellt wird, und erstellt möglicherweise auch eine Datenverbindung. <xref:System.Net.FtpWebRequest.GetResponse%2A>blockiert, bis die Antwort empfangen wurde. Um dies zu verhindern, können Sie diesen Vorgang asynchron ausführen, indem <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> Sie <xref:System.Net.FtpWebRequest.EndGetResponse%2A> die-Methode und <xref:System.Net.FtpWebRequest.GetResponse%2A>die-Methode anstelle von aufrufen.  
  
 Wenn die <xref:System.Net.FtpWebRequest.Proxy%2A> Eigenschaft entweder direkt oder in einer Konfigurationsdatei festgelegt wird, erfolgt die Kommunikation mit dem FTP-Server über den Proxy.  
  
 Wenn eine <xref:System.Net.WebException> ausgelöst wird, verwenden Sie <xref:System.Net.WebException.Response%2A> die <xref:System.Net.WebException.Status%2A> -Eigenschaft und die-Eigenschaft der Ausnahme, um die Antwort vom Server zu ermitteln.  
  
 Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerk Ablauf Verfolgung in der .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
> [!NOTE]
>  Mehrere Aufrufe von <xref:System.Net.FtpWebRequest.GetResponse%2A> geben das gleiche Antwortobjekt zurück. die Anforderung wird nicht neu ausgestellt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie eine Datei in den Datenstream einer Anforderung kopiert und eine Anforderung zum Anfügen von Daten an eine Datei an den Server gesendet wird. Im Beispiel wird <xref:System.Net.FtpWebRequest.GetResponse%2A> aufgerufen, um die Anforderung zu senden und zu blockieren, bis die Antwort vom Server zurückgegeben wird.  
  
 [!code-cpp[NCLFtpClient#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#3)]
 [!code-csharp[NCLFtpClient#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="M:System.Net.FtpWebRequest.GetResponse" /> oder <see cref="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> wurde bereits für diese Instanz aufgerufen.  
  
- oder - 
Ein HTTP-Proxy ist aktiviert, und Sie haben versucht, einen anderen FTP-Befehl als <see cref="F:System.Net.WebRequestMethods.Ftp.DownloadFile" />, <see cref="F:System.Net.WebRequestMethods.Ftp.ListDirectory" /> oder <see cref="F:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails" /> zu verwenden.</exception>
        <exception cref="T:System.Net.WebException"><see cref="P:System.Net.FtpWebRequest.EnableSsl" /> ist auf <see langword="true" /> festgelegt, doch der Server unterstützt dieses Feature nicht.  
  
- oder - 
Eine <see cref="P:System.Net.FtpWebRequest.Timeout" />-Eigenschaft wurde angegeben, und das Timeout ist abgelaufen.</exception>
        <block subset="none" type="usage"><para>Diese Methode generiert Netzwerk Datenverkehr.</para></block>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public override System.Net.WebHeaderCollection Headers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.WebHeaderCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.Headers" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Headers As WebHeaderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::WebHeaderCollection ^ Headers { System::Net::WebHeaderCollection ^ get(); void set(System::Net::WebHeaderCollection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Headers : System.Net.WebHeaderCollection with get, set" Usage="System.Net.FtpWebRequest.Headers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.WebHeaderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein leeres <see cref="T:System.Net.WebHeaderCollection" />-Objekt ab.</summary>
        <value>Ein leeres <see cref="T:System.Net.WebHeaderCollection" />-Objekt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Net.FtpWebRequest.Headers%2A> <xref:System.Net.WebRequest> -Eigenschaft wird nur für die Kompatibilität mit anderen Implementierungen der- <xref:System.Net.WebResponse> Klasse und der-Klasse bereitgestellt. Es gibt keinen Grund, zu <xref:System.Net.FtpWebRequest.Headers%2A>verwenden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepAlive">
      <MemberSignature Language="C#" Value="public bool KeepAlive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepAlive" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.KeepAlive" />
      <MemberSignature Language="VB.NET" Value="Public Property KeepAlive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeepAlive { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.KeepAlive : bool with get, set" Usage="System.Net.FtpWebRequest.KeepAlive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("We don't support KeepAlive = true")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen <see cref="T:System.Boolean" />-Wert ab, der angibt, ob die Steuerungsverbindung mit dem FTP-Server nach Abschluss der Anforderung geschlossen wird, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn die Verbindung zum Server nicht zerstört werden soll, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />sein.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Net.FtpWebRequest.KeepAlive%2A> -Eigenschaft auf `false`festgelegt ist, wird die Steuerelement Verbindung geschlossen, <xref:System.Net.FtpWebResponse.Close%2A> Wenn Sie die-Methode aufgerufen haben.  
  
 Wenn <xref:System.Net.FtpWebRequest.KeepAlive%2A> Sie nach dem <xref:System.Net.FtpWebRequest.GetRequestStream%2A>aufrufen <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>der <xref:System.Net.FtpWebRequest.GetResponse%2A>Methode, <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> , oder ändern <xref:System.InvalidOperationException> , wird eine Ausnahme ausgelöst.  
  
   
  
## Examples  
 Im folgenden Codebeispiel werden die Eigenschaftswerte für ein <xref:System.Net.FtpWebRequest> angegebenes Objekt abgerufen und angezeigt.  
  
 [!code-cpp[NCLFtpClient#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#15)]
 [!code-csharp[NCLFtpClient#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Für diese Eigenschaft wurde ein neuer Wert für eine Anforderung angegeben, die bereits ausgeführt wird.</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="Method">
      <MemberSignature Language="C#" Value="public override string Method { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Method" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.Method" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Method As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Method { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Method : string with get, set" Usage="System.Net.FtpWebRequest.Method" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den an den FTP-Server zu sendenden Befehl ab oder legt diesen fest.</summary>
        <value>Ein <see cref="T:System.String" />-Wert, der den an den Server zu sendenden FTP-Befehl enthält. Der Standardwert ist <see cref="F:System.Net.WebRequestMethods.Ftp.DownloadFile" />sein.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Net.FtpWebRequest.Method%2A> -Eigenschaft bestimmt, welcher Befehl an den Server gesendet wird. Sie legen den <xref:System.Net.FtpWebRequest.Method%2A> fest, indem Sie die Zeichen folgen verwenden, die in den <xref:System.Net.WebRequestMethods.Ftp> öffentlichen Feldmembern der Klasse definiert sind. Beachten Sie, dass die in der <xref:System.Net.WebRequestMethods.Ftp> -Klasse definierten Zeichen folgen die einzigen unter <xref:System.Net.FtpWebRequest.Method%2A> stützten Optionen für die-Eigenschaft sind. Wenn Sie <xref:System.Net.FtpWebRequest.Method%2A> die-Eigenschaft auf einen anderen Wert festlegen, <xref:System.ArgumentException> wird eine Ausnahme ausgelöst.  
  
 Wenn Sie <xref:System.Net.FtpWebRequest.Method%2A> auf <xref:System.Net.WebRequestMethods.Ftp.UploadFile>festlegen, müssen Sie dies tun, bevor <xref:System.Net.FtpWebRequest.GetRequestStream%2A> Sie die-Methode aufrufen. Wenn diese Member nicht in der richtigen Reihenfolge aufgerufen werden <xref:System.Net.ProtocolViolationException> , wird eine-Ausnahme ausgelöst, wenn Sie versuchen, den Anforderungs Datenstrom abzurufen.  
  
 Die für das <xref:System.Net.FtpWebRequest> -Objekt angegebenen Anmelde Informationen müssen über die Berechtigung zum Ausführen der angegebenen Methode verfügen. Andernfalls schlägt der FTP-Befehl fehl.  
  
 Überprüfen Sie <xref:System.Net.FtpWebResponse.StatusCode%2A> die-Eigenschaft und die- <xref:System.Net.FtpWebResponse.StatusDescription%2A> Eigenschaft, um den Erfolg oder Misserfolg eines Befehls zu ermitteln.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird diese Eigenschaft auf <xref:System.Net.WebRequestMethods.Ftp.DeleteFile>festgelegt.  
  
 [!code-cpp[NCLFtpClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#4)]
 [!code-csharp[NCLFtpClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Für diese Eigenschaft wurde ein neuer Wert für eine Anforderung angegeben, die bereits ausgeführt wird.</exception>
        <exception cref="T:System.ArgumentException">Die Methode ist ungültig.  
  
- oder -
  
 Die Methode wird nicht unterstützt.  
  
- oder -
  
 Es wurden mehrere Methoden angegeben.</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="PreAuthenticate">
      <MemberSignature Language="C#" Value="public override bool PreAuthenticate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreAuthenticate" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.PreAuthenticate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property PreAuthenticate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool PreAuthenticate { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PreAuthenticate : bool with get, set" Usage="System.Net.FtpWebRequest.PreAuthenticate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Löst immer eine <see cref="T:System.NotSupportedException" /> aus.</summary>
        <value>Löst immer eine <see cref="T:System.NotSupportedException" /> aus.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Net.FtpWebRequest.PreAuthenticate%2A> <xref:System.Net.WebRequest> -Eigenschaft wird nur für die Kompatibilität mit anderen Implementierungen der- <xref:System.Net.WebResponse> Klasse und der-Klasse bereitgestellt.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Eine Vorauthentifizierung wird für FTP nicht unterstützt.</exception>
      </Docs>
    </Member>
    <Member MemberName="Proxy">
      <MemberSignature Language="C#" Value="public override System.Net.IWebProxy Proxy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IWebProxy Proxy" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.Proxy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Proxy As IWebProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::IWebProxy ^ Proxy { System::Net::IWebProxy ^ get(); void set(System::Net::IWebProxy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Proxy : System.Net.IWebProxy with get, set" Usage="System.Net.FtpWebRequest.Proxy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IWebProxy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den für die Kommunikation mit dem FTP-Server verwendeten Proxy ab oder legt diesen fest.</summary>
        <value>Eine <see cref="T:System.Net.IWebProxy" />-Instanz, die für die Kommunikation mit dem FTP-Server zuständig ist. In .net Core ist <see langword="null" />der Wert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

### <a name="on-net-framework"></a>Auf .NET Framework

 Die <xref:System.Net.FtpWebRequest.Proxy%2A> -Eigenschaft identifiziert <xref:System.Net.IWebProxy> die-Instanz, die mit dem FTP-Server kommuniziert. Der Proxy wird vom System mithilfe von Konfigurationsdateien und den Internet Explorer-Einstellungen für das lokale Netzwerk festgelegt. Um anzugeben, dass kein Proxy verwendet werden soll, <xref:System.Net.FtpWebRequest.Proxy%2A> legen Sie auf die Proxy Instanz fest <xref:System.Net.GlobalProxySelection.GetEmptyWebProxy%2A?displayProperty=nameWithType> , die von der-Methode zurückgegeben wird. Weitere Informationen zur automatischen Proxy Erkennung finden Sie unter [Automatische Proxy Erkennung](~/docs/framework/network-programming/automatic-proxy-detection.md).  
  
 Sie müssen festlegen <xref:System.Net.FtpWebRequest.Proxy%2A> , bevor Sie Daten in den Datenstrom der Anforderung schreiben oder die Antwort erhalten. Wenn <xref:System.Net.FtpWebRequest.Proxy%2A> Sie nach dem <xref:System.Net.FtpWebRequest.GetRequestStream%2A>aufrufen <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>der <xref:System.Net.FtpWebRequest.GetResponse%2A>Methode, <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> , oder ändern <xref:System.InvalidOperationException> , wird eine Ausnahme ausgelöst.  
  
 Die <xref:System.Net.FtpWebRequest> -Klasse unterstützt HTTP und ISA Firewall-Client Proxys.  
  
 Wenn der angegebene Proxy ein HTTP-Proxy ist, werden <xref:System.Net.WebRequestMethods.Ftp.DownloadFile>nur <xref:System.Net.WebRequestMethods.Ftp.ListDirectory>die Befehle <xref:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails> , und unterstützt.  
  
### <a name="on-net-core"></a>Unter .net Core   

Die `FtpWebRequest.Proxy` -Eigenschaft wird nicht unterstützt. Das Festlegen der-Eigenschaft hat keine Auswirkungen. Der Eigenschafts Wert wird `null`zurückgegeben. 


## Examples  
 Im folgenden Codebeispiel wird dieser Eigenschafts Wert angezeigt.  
  
 [!code-cpp[NCLFtpClient#16](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#16)]
 [!code-csharp[NCLFtpClient#16](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Diese Eigenschaft kann nicht auf <see langword="null" /> festgelegt werden.</exception>
        <exception cref="T:System.InvalidOperationException">Für diese Eigenschaft wurde ein neuer Wert für eine Anforderung angegeben, die bereits ausgeführt wird.</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
        <altmember cref="T:System.Net.WebProxy" />
        <altmember cref="T:System.Net.GlobalProxySelection" />
      </Docs>
    </Member>
    <Member MemberName="ReadWriteTimeout">
      <MemberSignature Language="C#" Value="public int ReadWriteTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadWriteTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.ReadWriteTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadWriteTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReadWriteTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReadWriteTimeout : int with get, set" Usage="System.Net.FtpWebRequest.ReadWriteTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Timeout für das Lesen aus einem Stream oder das Schreiben in einen Stream ab oder legt dieses fest.</summary>
        <value>Die Anzahl der Millisekunden vor dem Timeout des Lese-oder Schreibvorgangs. Der Standardwert ist 300.000 Millisekunden (5 Minuten).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wird beim Schreiben in den von der <xref:System.Net.FtpWebRequest.GetRequestStream%2A> -Methode zurückgegebenen Stream oder beim Lesen aus dem von der <xref:System.Net.FtpWebResponse.GetResponseStream%2A> -Methode zurückgegebenen Stream verwendet. <xref:System.Net.FtpWebRequest.ReadWriteTimeout%2A>  
  
 Insbesondere steuert die <xref:System.Net.FtpWebRequest.ReadWriteTimeout%2A> -Eigenschaft das Timeout für die <xref:System.IO.Stream.Read%2A> -Methode, die verwendet wird, um den von der <xref:System.Net.FtpWebResponse.GetResponseStream%2A> -Methode zurückgegebenen Stream zu lesen, <xref:System.IO.Stream.Write%2A> und für die-Methode, die verwendet wird, um in den Datenstrom zu schreiben, der von der <xref:System.Net.FtpWebRequest.GetRequestStream%2A>-Methode. Wenn der Timeout Zeitraum überschritten wird, löst die Aufruf Methode eine <xref:System.Net.WebException> aus, bei <xref:System.Net.WebExceptionStatus> der <xref:System.Net.WebExceptionStatus.Timeout>auf festgelegt ist.  
  
 Verwenden Sie die <xref:System.Net.FtpWebRequest.Timeout%2A> -Eigenschaft, um die Zeitspanne anzugeben, die auf den Abschluss der Anforderung gewartet werden soll.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die Anforderung wurde bereits gesendet.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Der für einen set-Vorgang angegebene Wert ist kleiner oder gleich 0 (null) und ungleich <see cref="F:System.Threading.Timeout.Infinite" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RenameTo">
      <MemberSignature Language="C#" Value="public string RenameTo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RenameTo" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.RenameTo" />
      <MemberSignature Language="VB.NET" Value="Public Property RenameTo As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RenameTo { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RenameTo : string with get, set" Usage="System.Net.FtpWebRequest.RenameTo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den neuen Namen einer umbenannten Datei ab oder legt diesen fest.</summary>
        <value>Der neue Name der umbenannten Datei.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Der für einen Set-Vorgang angegebene Wert ist <see langword="null" /> oder eine leere Zeichenfolge.</exception>
        <exception cref="T:System.InvalidOperationException">Für diese Eigenschaft wurde ein neuer Wert für eine Anforderung angegeben, die bereits ausgeführt wird.</exception>
      </Docs>
    </Member>
    <Member MemberName="RequestUri">
      <MemberSignature Language="C#" Value="public override Uri RequestUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri RequestUri" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.RequestUri" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RequestUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Uri ^ RequestUri { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RequestUri : Uri" Usage="System.Net.FtpWebRequest.RequestUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den von dieser Instanz angeforderten URI ab.</summary>
        <value>Eine <see cref="T:System.Uri" />-Instanz, die eine Ressource bezeichnet, auf die mit FTP zugegriffen wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Wert der <xref:System.Net.FtpWebRequest.RequestUri%2A> -Eigenschaft ist der URI, der angegeben <xref:System.Net.WebRequest.Create%2A> wurde, als die-Methode aufgerufen wurde, um diese Instanz zu erhalten.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird dieser Eigenschafts Wert angezeigt.  
  
 [!code-cpp[NCLFtpClient#14](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#14)]
 [!code-csharp[NCLFtpClient#14](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="ServicePoint">
      <MemberSignature Language="C#" Value="public System.Net.ServicePoint ServicePoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ServicePoint ServicePoint" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.ServicePoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServicePoint As ServicePoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::ServicePoint ^ ServicePoint { System::Net::ServicePoint ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServicePoint : System.Net.ServicePoint" Usage="System.Net.FtpWebRequest.ServicePoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ServicePoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das <see cref="T:System.Net.ServicePoint" />-Objekt ab, das zum Herstellen der Verbindung mit dem FTP-Server verwendet wird.</summary>
        <value>Ein <see cref="T:System.Net.ServicePoint" />-Objekt, mit dem das Verbindungsverhalten angepasst werden kann.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn kein <xref:System.Net.ServicePoint> Objekt vorhanden ist, wird eine für den FTP-Server erstellt. Um die maximale Anzahl von Verbindungen festzulegen, die für einen FTP-Server geöffnet sein können <xref:System.Net.ServicePoint.ConnectionLimit%2A> , legen Sie <xref:System.Net.ServicePoint> die-Eigenschaft der Instanz fest, die von dieser Eigenschaft zurückgegeben wird.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird der Dienst Punkt aus einer Anforderung abgerufen und die maximale Anzahl von Verbindungen auf 1 festgelegt.  
  
 [!code-cpp[NCLFtpClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#1)]
 [!code-csharp[NCLFtpClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public override int Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Timeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Timeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Timeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Timeout : int with get, set" Usage="System.Net.FtpWebRequest.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Wartezeit in Millisekunden für eine Anforderung ab oder legt diese fest.</summary>
        <value>Ein <see cref="T:System.Int32" /> -Wert, der die Anzahl der Millisekunden enthält, die gewartet wird, bevor ein Timeout für eine Anforderung eintritt. Der Standardwert ist <see cref="F:System.Threading.Timeout.Infinite" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie einen unendlichen Wert angeben möchten, <xref:System.Net.FtpWebRequest.Timeout%2A> legen Sie <xref:System.Threading.Timeout.Infinite> die-Eigenschaft auf (-1) fest. Dies ist der Standardwert.  
  
 <xref:System.Net.FtpWebRequest.Timeout%2A>die Anzahl von Millisekunden, die eine synchrone Anforderung, die <xref:System.Net.FtpWebRequest.GetResponse%2A> mit der-Methode erfolgt, auf eine <xref:System.Net.FtpWebRequest.GetRequestStream%2A> Antwort wartet und die Methode auf einen Stream wartet. Wenn eine Ressource nicht innerhalb des Timeout Zeitraums antwortet, löst die Anforderung eine <xref:System.Net.WebException> aus, bei der die <xref:System.Net.WebException.Status%2A> -Eigenschaft auf <xref:System.Net.WebExceptionStatus.Timeout>festgelegt ist.  
  
 Wenn <xref:System.Net.FtpWebRequest.Timeout%2A> Sie nach dem <xref:System.Net.FtpWebRequest.GetRequestStream%2A>aufrufen <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>der <xref:System.Net.FtpWebRequest.GetResponse%2A>Methode, <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> , oder ändern <xref:System.InvalidOperationException> , wird eine Ausnahme ausgelöst.  
  
 Eine Domain Name System (DNS)-Abfrage kann bis zu 15 Sekunden dauern, bis eine Rückgabe oder ein Timeout auftritt. Wenn Ihre Anforderung einen Hostnamen enthält, der aufgelöst werden muss, <xref:System.Net.FtpWebRequest.Timeout%2A> und Sie auf einen Wert weniger als 15 Sekunden festlegen, kann es 15 Sekunden oder länger <xref:System.Net.WebException> dauern, bis eine ausgelöst wird, um ein Timeout für Ihre Anforderung anzugeben.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird diese Eigenschaft festgelegt.  
  
 [!code-cpp[NCLFtpClient#23](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#23)]
 [!code-csharp[NCLFtpClient#23](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#23)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der angegebene Wert ist kleiner als 0 (null) und nicht <see cref="F:System.Threading.Timeout.Infinite" />.</exception>
        <exception cref="T:System.InvalidOperationException">Für diese Eigenschaft wurde ein neuer Wert für eine Anforderung angegeben, die bereits ausgeführt wird.</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="UseBinary">
      <MemberSignature Language="C#" Value="public bool UseBinary { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseBinary" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.UseBinary" />
      <MemberSignature Language="VB.NET" Value="Public Property UseBinary As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseBinary { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseBinary : bool with get, set" Usage="System.Net.FtpWebRequest.UseBinary" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen <see cref="T:System.Boolean" />-Wert ab, der den Datentyp für Dateiübertragungen angibt, oder legt diesen fest.</summary>
        <value><see langword="true" />, um für den Server anzugeben, dass die zu übertragenden Daten im Binärformat vorliegen, <see langword="false" />, um anzugeben, dass die Daten im Textformat vorliegen. Der Standardwert ist <see langword="true" />sein.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie Binärdaten (z. b. ein Bild) senden, legen Sie `true`diese Eigenschaft auf fest. Wenn Sie Text senden, legen Sie die-Eigenschaft `false`auf fest. `"TYPE I"` Das `true` Angeben von <xref:System.Net.FtpWebRequest>  bewirkt, dass einen Befehl an den Server sendet. `"Type A"` Das `false` Angeben von <xref:System.Net.FtpWebRequest>  bewirkt, dass einen Befehl an den Server sendet. Diese Befehle können von FTP-Servern ignoriert werden.  
  
 Wenn <xref:System.Net.FtpWebRequest.UseBinary%2A> Sie nach dem <xref:System.Net.FtpWebRequest.GetRequestStream%2A>aufrufen <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>der <xref:System.Net.FtpWebRequest.GetResponse%2A>Methode, <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> , oder ändern <xref:System.InvalidOperationException> , wird eine Ausnahme ausgelöst.  
  
   
  
## Examples  
 Im folgenden Codebeispiel werden die Eigenschaftswerte für ein <xref:System.Net.FtpWebRequest> angegebenes Objekt abgerufen und angezeigt.  
  
 [!code-cpp[NCLFtpClient#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#15)]
 [!code-csharp[NCLFtpClient#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Für diese Eigenschaft wurde ein neuer Wert für eine Anforderung angegeben, die bereits ausgeführt wird.</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="UseDefaultCredentials">
      <MemberSignature Language="C#" Value="public override bool UseDefaultCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.UseDefaultCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property UseDefaultCredentials As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool UseDefaultCredentials { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseDefaultCredentials : bool with get, set" Usage="System.Net.FtpWebRequest.UseDefaultCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Löst immer eine <see cref="T:System.NotSupportedException" /> aus.</summary>
        <value>Löst immer eine <see cref="T:System.NotSupportedException" /> aus.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Net.FtpWebRequest.UseDefaultCredentials%2A> <xref:System.Net.WebRequest> -Eigenschaft wird nur für die Kompatibilität mit anderen Implementierungen der- <xref:System.Net.WebResponse> Klasse und der-Klasse bereitgestellt. Es gibt keinen Grund, zu <xref:System.Net.FtpWebRequest.UseDefaultCredentials%2A>verwenden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Standardanmeldeinformationen werden für FTP nicht unterstützt.</exception>
      </Docs>
    </Member>
    <Member MemberName="UsePassive">
      <MemberSignature Language="C#" Value="public bool UsePassive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UsePassive" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.UsePassive" />
      <MemberSignature Language="VB.NET" Value="Public Property UsePassive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UsePassive { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UsePassive : bool with get, set" Usage="System.Net.FtpWebRequest.UsePassive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Verhalten der Datenübertragung einer Clientanwendung ab oder legt dieses fest.</summary>
        <value><see langword="false" />, wenn die Datenübertragung der Clientanwendung Verbindungen am Datenanschluss überwacht. <see langword="true" />, wenn der Client eine Verbindung am Datenanschluss initiieren soll. Der Standardwert ist <see langword="true" />sein.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie <xref:System.Net.FtpWebRequest.UsePassive%2A> die- `true` Eigenschaft auf festlegen`PASV"` , wird der Befehl an den Server gesendet. Mit diesem Befehl wird der Server aufgefordert, an einem Datenport zu lauschen und auf eine Verbindung zu warten, anstatt eine Verbindung nach dem Empfang eines Übertragungs Befehls zu initiieren.  
  
 Eine Beschreibung der Verhaltensweisen, die mit angegeben werden <xref:System.Net.FtpWebRequest.UsePassive%2A>, finden Sie unter [RFC 959: "Dateiübertragungsprotokoll", Abschnitt 3,2: "Einrichten von Datenverbindungen" und Abschnitt 4.1.2: "Übertragungs Parameter Befehle"](https://www.ietf.org/rfc/rfc959.txt).  
  
 Wenn <xref:System.Net.FtpWebRequest.UsePassive%2A> Sie nach dem <xref:System.Net.FtpWebRequest.GetRequestStream%2A>aufrufen <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>der <xref:System.Net.FtpWebRequest.GetResponse%2A>Methode, <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> , oder ändern <xref:System.InvalidOperationException> , wird eine Ausnahme ausgelöst.  
  
 Wenn <xref:System.Net.FtpWebRequest.UsePassive%2A> auf `true` festgelegt ist, sendet der FTP-Server möglicherweise nicht die Größe der Datei, und der Download Fortschritt kann immer 0 (null) sein. Wenn <xref:System.Net.FtpWebRequest.UsePassive%2A> auf `false` festgelegt ist, kann eine Firewall eine Warnung generieren und das Herunterladen der Datei blockieren.  
  
   
  
## Examples  
 Im folgenden Codebeispiel werden die Eigenschaftswerte für ein <xref:System.Net.FtpWebRequest> angegebenes Objekt abgerufen und angezeigt.  
  
 [!code-cpp[NCLFtpClient#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#6)]
 [!code-csharp[NCLFtpClient#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Für diese Eigenschaft wurde ein neuer Wert für eine Anforderung angegeben, die bereits ausgeführt wird.</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
  </Members>
</Type>
