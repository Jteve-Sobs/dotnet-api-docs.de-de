<Type Name="HttpListenerRequest" FullName="System.Net.HttpListenerRequest">
  <Metadata><Meta Name="ms.openlocfilehash" Value="118c27aa9b2f19e9b03ee150eca06dd5ab3f06dd" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75170086" /></Metadata><TypeSignature Language="C#" Value="public sealed class HttpListenerRequest" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpListenerRequest extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.HttpListenerRequest" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpListenerRequest" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpListenerRequest sealed" />
  <TypeSignature Language="F#" Value="type HttpListenerRequest = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.HttpListener</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="cf546-101">Beschreibt eine eingehende HTTP-Anforderung für ein <see cref="T:System.Net.HttpListener" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="cf546-101">Describes an incoming HTTP request to an <see cref="T:System.Net.HttpListener" /> object.</span></span> <span data-ttu-id="cf546-102">Diese Klasse kann nicht vererbt werden.</span><span class="sxs-lookup"><span data-stu-id="cf546-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf546-103">Wenn ein Client eine Anforderung an einen Uniform Resource Identifier (URI) sendet, der von einem <xref:System.Net.HttpListener>-Objekt verarbeitet wird, stellt der <xref:System.Net.HttpListener> ein <xref:System.Net.HttpListenerContext> Objekt bereit, das Informationen über den Absender, die Anforderung und die Antwort enthält, die an den Client gesendet wird.</span><span class="sxs-lookup"><span data-stu-id="cf546-103">When a client makes a request to a Uniform Resource Identifier (URI) handled by an <xref:System.Net.HttpListener> object, the <xref:System.Net.HttpListener> provides a <xref:System.Net.HttpListenerContext> object that contains information about the sender, the request, and the response that is sent to the client.</span></span> <span data-ttu-id="cf546-104">Die <xref:System.Net.HttpListenerContext.Request%2A?displayProperty=nameWithType>-Eigenschaft gibt das <xref:System.Net.HttpListenerRequest> Objekt zurück, das die Anforderung beschreibt.</span><span class="sxs-lookup"><span data-stu-id="cf546-104">The <xref:System.Net.HttpListenerContext.Request%2A?displayProperty=nameWithType> property returns the <xref:System.Net.HttpListenerRequest> object that describes the request.</span></span>  
  
 <span data-ttu-id="cf546-105">Das <xref:System.Net.HttpListenerRequest>-Objekt enthält Informationen über die Anforderung, z. b. die Anforderung <xref:System.Net.HttpListenerRequest.HttpMethod%2A> Zeichenfolge, <xref:System.Net.HttpListenerRequest.UserAgent%2A> Zeichenfolge und Anforderungs Text Daten (siehe die <xref:System.Net.HttpListenerRequest.InputStream%2A>-Eigenschaft).</span><span class="sxs-lookup"><span data-stu-id="cf546-105">The <xref:System.Net.HttpListenerRequest> object contains information about the request, such as the request <xref:System.Net.HttpListenerRequest.HttpMethod%2A> string, <xref:System.Net.HttpListenerRequest.UserAgent%2A> string, and request body data (see the <xref:System.Net.HttpListenerRequest.InputStream%2A> property).</span></span>  
  
 <span data-ttu-id="cf546-106">Um auf die Anforderung zu antworten, müssen Sie die zugehörige Antwort mithilfe der <xref:System.Net.HttpListenerContext.Response%2A>-Eigenschaft erhalten.</span><span class="sxs-lookup"><span data-stu-id="cf546-106">To reply to the request, you must get the associated response using the <xref:System.Net.HttpListenerContext.Response%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf546-107">Im folgenden Codebeispiel wird veranschaulicht, wie ein <xref:System.Net.HttpListenerRequest>empfangen und darauf reagiert wird.</span><span class="sxs-lookup"><span data-stu-id="cf546-107">The following code example demonstrates how to receive and respond to a <xref:System.Net.HttpListenerRequest>.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#2)]  
 [!code-vb[Net_Listener_Basic#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.HttpListener" />
    <altmember cref="T:System.Net.HttpListenerContext" />
    <altmember cref="T:System.Net.HttpListenerResponse" />
  </Docs>
  <Members>
    <Member MemberName="AcceptTypes">
      <MemberSignature Language="C#" Value="public string[] AcceptTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AcceptTypes" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.AcceptTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AcceptTypes As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ AcceptTypes { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AcceptTypes : string[]" Usage="System.Net.HttpListenerRequest.AcceptTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf546-108">Ruft die vom Client akzeptierten MIME-Typen ab.</span><span class="sxs-lookup"><span data-stu-id="cf546-108">Gets the MIME types accepted by the client.</span></span></summary>
        <value><span data-ttu-id="cf546-109">Ein <see cref="T:System.String" />-Array, das die im <see langword="Accept" />-Header der Anforderung angegebenen Typnamen enthält, oder <see langword="null" />, wenn in der Clientanforderung kein <see langword="Accept" />-Header enthalten war.</span><span class="sxs-lookup"><span data-stu-id="cf546-109">A <see cref="T:System.String" /> array that contains the type names specified in the request's <see langword="Accept" /> header or <see langword="null" /> if the client request did not include an <see langword="Accept" /> header.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf546-110">Der `Accept`-Header ist eine Zeichenfolge mit durch Leerzeichen getrennten Multipurpose Internet Mail Extensions (z. b. `image/jpeg`), die die MIME-Typen angeben, die der Client in einer Antwort akzeptieren und verarbeiten soll.</span><span class="sxs-lookup"><span data-stu-id="cf546-110">The `Accept` header is a string of space-separated Multipurpose Internet Mail Extensions (MIME) type names (for example, `image/jpeg`), which indicate the MIME types that the client is prepared to accept and process in a response.</span></span> <span data-ttu-id="cf546-111">Der Eintrag `*/*` gibt an, dass der Client einen beliebigen MIME-Typ akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="cf546-111">The `*/*` entry indicates that the client accepts any MIME type.</span></span> <span data-ttu-id="cf546-112">Eine ausführliche Beschreibung der `Accept` Kopfzeile finden Sie unter RFC 2616, verfügbar unter [https://www.rfc-editor.org](https://www.rfc-editor.org/).</span><span class="sxs-lookup"><span data-stu-id="cf546-112">For a detailed description of the `Accept` header, see RFC 2616, available at [https://www.rfc-editor.org](https://www.rfc-editor.org/).</span></span>  
  
 <span data-ttu-id="cf546-113">Eine umfassende Liste mit Anforderungs Headern finden Sie in der <xref:System.Net.HttpRequestHeader>-Enumeration.</span><span class="sxs-lookup"><span data-stu-id="cf546-113">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf546-114">Im folgenden Codebeispiel wird die Verwendung dieser Eigenschaft veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="cf546-114">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
 [!code-vb[Net_Listener_Basic#15](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="BeginGetClientCertificate">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginGetClientCertificate (AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginGetClientCertificate(class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginGetClientCertificate (requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginGetClientCertificate(AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginGetClientCertificate : AsyncCallback * obj -&gt; IAsyncResult" Usage="httpListenerRequest.BeginGetClientCertificate (requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="requestCallback"><span data-ttu-id="cf546-115">Ein <see cref="T:System.AsyncCallback" />-Delegat, der auf die Methode verweist, die bei Abschluss des Vorgangs aufgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="cf546-115">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span></span></param>
        <param name="state"><span data-ttu-id="cf546-116">Ein benutzerdefiniertes Objekt, das Informationen über den Vorgang enthält.</span><span class="sxs-lookup"><span data-stu-id="cf546-116">A user-defined object that contains information about the operation.</span></span> <span data-ttu-id="cf546-117">Dieses Objekt wird bei Abschluss des Vorgangs an den Rückrufdelegaten übergeben.</span><span class="sxs-lookup"><span data-stu-id="cf546-117">This object is passed to the callback delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="cf546-118">Beginnt eine asynchrone Anforderung für das X.509 v.3-Zertifikat des Clients.</span><span class="sxs-lookup"><span data-stu-id="cf546-118">Begins an asynchronous request for the client's X.509 v.3 certificate.</span></span></summary>
        <returns><span data-ttu-id="cf546-119">Ein <see cref="T:System.IAsyncResult" />, das den Status des Vorgangs angibt.</span><span class="sxs-lookup"><span data-stu-id="cf546-119">An <see cref="T:System.IAsyncResult" /> that indicates the status of the operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientCertificateError">
      <MemberSignature Language="C#" Value="public int ClientCertificateError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ClientCertificateError" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.ClientCertificateError" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientCertificateError As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ClientCertificateError { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientCertificateError : int" Usage="System.Net.HttpListenerRequest.ClientCertificateError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf546-120">Ruft einen Fehlercode ab, der ein Problem mit dem vom Client bereitgestellten <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> bezeichnet.</span><span class="sxs-lookup"><span data-stu-id="cf546-120">Gets an error code that identifies a problem with the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> provided by the client.</span></span></summary>
        <value><span data-ttu-id="cf546-121">Ein <see cref="T:System.Int32" />-Wert, der einen Windows-Fehlercode enthält.</span><span class="sxs-lookup"><span data-stu-id="cf546-121">An <see cref="T:System.Int32" /> value that contains a Windows error code.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf546-122">Diese Eigenschaft enthält einen Windows-Fehlercode, der von der Schannel Security Support Provider Interface (SSPI) zurückgegeben wird, die zur Überprüfung des Zertifikats verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="cf546-122">This property contains a Windows error code returned by the Secure Channel (Schannel) Security Support Provider Interface (SSPI), which is used to validate the certificate.</span></span> <span data-ttu-id="cf546-123">Weitere Informationen zur SSPI-Unterstützung für SChannel finden Sie unter "Erstellen einer sicheren Verbindung mithilfe von SChannel" in der Sicherheits Dokumentation unter [https://msdn.microsoft.com/library](https://msdn.microsoft.com/library).</span><span class="sxs-lookup"><span data-stu-id="cf546-123">For more information about SSPI support for Schannel, see "Creating a Secure Connection Using Schannel" in the Security documentation at [https://msdn.microsoft.com/library](https://msdn.microsoft.com/library).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf546-124">Im folgenden Codebeispiel wird diese Eigenschaft überprüft, um zu bestimmen, ob die Anforderung ein gültiges Client Zertifikat enthält.</span><span class="sxs-lookup"><span data-stu-id="cf546-124">The following code example checks this property to determine whether the request includes a valid client certificate.</span></span>  
  
 [!code-csharp[NCLListener#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLListener/CS/sample.cs#3)]
 [!code-vb[NCLListener#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLListener/vb/sample.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cf546-125">Das Clientzertifikat wurde noch nicht von einem Aufruf der <see cref="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)" />-Methode oder <see cref="M:System.Net.HttpListenerRequest.GetClientCertificate" />-Methode initialisiert</span><span class="sxs-lookup"><span data-stu-id="cf546-125">The client certificate has not been initialized yet by a call to the <see cref="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)" /> or <see cref="M:System.Net.HttpListenerRequest.GetClientCertificate" /> methods</span></span> 
<span data-ttu-id="cf546-126">- oder - </span><span class="sxs-lookup"><span data-stu-id="cf546-126">-or -</span></span> 
<span data-ttu-id="cf546-127">Der Vorgang wird immer noch ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="cf546-127">The operation is still in progress.</span></span></exception>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="ContentEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding ContentEncoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding ContentEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.ContentEncoding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ ContentEncoding { System::Text::Encoding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentEncoding : System.Text.Encoding" Usage="System.Net.HttpListenerRequest.ContentEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf546-128">Ruft die Inhaltscodierung ab, die für mit der Anforderung gesendete Daten verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="cf546-128">Gets the content encoding that can be used with data sent with the request.</span></span></summary>
        <value><span data-ttu-id="cf546-129">Ein für die Verwendung mit den Daten in der <see cref="T:System.Text.Encoding" />-Eigenschaft geeignetes <see cref="P:System.Net.HttpListenerRequest.InputStream" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="cf546-129">An <see cref="T:System.Text.Encoding" /> object suitable for use with the data in the <see cref="P:System.Net.HttpListenerRequest.InputStream" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf546-130">Ein <xref:System.Text.Encoding>-Objekt kann zum Konvertieren von Byte Sequenzen in Zeichensätze (Codepages) und Zeichen in Byte Sequenzen verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="cf546-130">An <xref:System.Text.Encoding> object can be used to convert byte sequences into character sets (code pages) and characters into byte sequences.</span></span> <span data-ttu-id="cf546-131">Diese Eigenschaft verwendet den charset-Wert aus dem `Content-Type`-Header, um die Codierung zu bestimmen.</span><span class="sxs-lookup"><span data-stu-id="cf546-131">This property uses the charset value from the `Content-Type` header to determine the encoding.</span></span> <span data-ttu-id="cf546-132">Wenn diese Informationen nicht verfügbar sind, gibt diese Eigenschaft <xref:System.Text.Encoding.Default%2A?displayProperty=nameWithType>zurück.</span><span class="sxs-lookup"><span data-stu-id="cf546-132">If that information is not available, this property returns <xref:System.Text.Encoding.Default%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf546-133">Im folgenden Codebeispiel wird die Verwendung der <xref:System.Net.HttpListenerRequest.ContentEncoding%2A>-Eigenschaft veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="cf546-133">The following code example demonstrates using the <xref:System.Net.HttpListenerRequest.ContentEncoding%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#16](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#16)]  
 [!code-vb[Net_Listener_Basic#16](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="ContentLength64">
      <MemberSignature Language="C#" Value="public long ContentLength64 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ContentLength64" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.ContentLength64" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentLength64 As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long ContentLength64 { long get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentLength64 : int64" Usage="System.Net.HttpListenerRequest.ContentLength64" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf546-134">Ruft die Länge der in der Anforderung enthaltenen Textdaten ab.</span><span class="sxs-lookup"><span data-stu-id="cf546-134">Gets the length of the body data included in the request.</span></span></summary>
        <value><span data-ttu-id="cf546-135">Der Wert des <see langword="Content-Length" />-Headers der Anforderung.</span><span class="sxs-lookup"><span data-stu-id="cf546-135">The value from the request's <see langword="Content-Length" /> header.</span></span> <span data-ttu-id="cf546-136">Dieser Wert ist -1, wenn die Inhaltslänge nicht bekannt ist.</span><span class="sxs-lookup"><span data-stu-id="cf546-136">This value is -1 if the content length is not known.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf546-137">Der `Content-Length`-Header drückt die Länge der Textdaten in Bytes aus, die die Anforderung begleitet.</span><span class="sxs-lookup"><span data-stu-id="cf546-137">The `Content-Length` header expresses the length, in bytes, of the body data that accompanies the request.</span></span>  
  
 <span data-ttu-id="cf546-138">Eine umfassende Liste mit Anforderungs Headern finden Sie in der <xref:System.Net.HttpRequestHeader>-Enumeration.</span><span class="sxs-lookup"><span data-stu-id="cf546-138">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf546-139">Im folgenden Codebeispiel wird die <xref:System.Net.HttpListenerRequest.ContentLength64%2A>-Eigenschaft bei der Verarbeitung von Textdaten verwendet.</span><span class="sxs-lookup"><span data-stu-id="cf546-139">The following code example uses the <xref:System.Net.HttpListenerRequest.ContentLength64%2A> property while processing body data.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#16](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#16)]  
 [!code-vb[Net_Listener_Basic#16](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public string ContentType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContentType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentType : string" Usage="System.Net.HttpListenerRequest.ContentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf546-140">Ruft den MIME-Typ der in der Anforderung enthaltenen Textdaten ab.</span><span class="sxs-lookup"><span data-stu-id="cf546-140">Gets the MIME type of the body data included in the request.</span></span></summary>
        <value><span data-ttu-id="cf546-141">Ein <see cref="T:System.String" />, der den Text des <see langword="Content-Type" />-Headers der Anforderung enthält.</span><span class="sxs-lookup"><span data-stu-id="cf546-141">A <see cref="T:System.String" /> that contains the text of the request's <see langword="Content-Type" /> header.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf546-142">Wenn ein Client in einer Anforderung Textdaten enthält, wird der Multipurpose Internet Mail Extensions-Typ (MIME) der Textdaten im `Content-Type`-Header deklariert.</span><span class="sxs-lookup"><span data-stu-id="cf546-142">If a client includes body data in a request, it declares the Multipurpose Internet Mail Extensions (MIME) type of the body data in the `Content-Type` header.</span></span> <span data-ttu-id="cf546-143">Beispielsweise ist der standardmäßige MIME-Typ von Daten, die von einem Webformular mithilfe der `POST`-Methode zurückgegeben werden, `application/x-www-form-urlencoded`.</span><span class="sxs-lookup"><span data-stu-id="cf546-143">For example, the default MIME type of data returned from a Web form using the `POST` method is `application/x-www-form-urlencoded`.</span></span>  
  
 <span data-ttu-id="cf546-144">Eine umfassende Liste mit Anforderungs Headern finden Sie in der <xref:System.Net.HttpRequestHeader>-Enumeration und in RFC 2616, verfügbar unter [https://www.rfc-editor.org](https://www.rfc-editor.org/).</span><span class="sxs-lookup"><span data-stu-id="cf546-144">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration and RFC 2616, available at [https://www.rfc-editor.org](https://www.rfc-editor.org/).</span></span>  
  
 <span data-ttu-id="cf546-145">Der <xref:System.Net.HttpListenerRequest.ContentType%2A> ist NULL, wenn in der Anforderung kein `Content-Type` Header vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="cf546-145">The <xref:System.Net.HttpListenerRequest.ContentType%2A> is null when there is no `Content-Type` header in the request.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf546-146">Im folgenden Codebeispiel wird die Verwendung dieser Eigenschaft veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="cf546-146">The following code example demonstrates how to use this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#16](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#16)]  
 [!code-vb[Net_Listener_Basic#16](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="Cookies">
      <MemberSignature Language="C#" Value="public System.Net.CookieCollection Cookies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.CookieCollection Cookies" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.Cookies" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cookies As CookieCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::CookieCollection ^ Cookies { System::Net::CookieCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Cookies : System.Net.CookieCollection" Usage="System.Net.HttpListenerRequest.Cookies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.CookieCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf546-147">Ruft die mit der Anforderung gesendeten Cookies ab.</span><span class="sxs-lookup"><span data-stu-id="cf546-147">Gets the cookies sent with the request.</span></span></summary>
        <value><span data-ttu-id="cf546-148">Eine <see cref="T:System.Net.CookieCollection" />, die mit der Anforderung gesendete Cookies enthält.</span><span class="sxs-lookup"><span data-stu-id="cf546-148">A <see cref="T:System.Net.CookieCollection" /> that contains cookies that accompany the request.</span></span> <span data-ttu-id="cf546-149">Diese Eigenschaft gibt eine leere Auflistung zurück, wenn die Anforderung keine Cookies enthält.</span><span class="sxs-lookup"><span data-stu-id="cf546-149">This property returns an empty collection if the request does not contain cookies.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf546-150">Ein Cookie ist eine Name-Wert-Textdaten von einem Webserver, der auf dem lokalen Computer (Client) gespeichert ist.</span><span class="sxs-lookup"><span data-stu-id="cf546-150">A cookie is name/value text data from a Web server that is stored on the local (client) computer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf546-151">Im folgenden Codebeispiel werden die Werte von Cookies angezeigt, die mit der Anforderung gesendet werden.</span><span class="sxs-lookup"><span data-stu-id="cf546-151">The following code example displays the values of cookies sent with the request.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#18](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#18)]  
 [!code-vb[Net_Listener_Basic#18](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#18)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="EndGetClientCertificate">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate2 EndGetClientCertificate (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.Cryptography.X509Certificates.X509Certificate2 EndGetClientCertificate(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerRequest.EndGetClientCertificate(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndGetClientCertificate (asyncResult As IAsyncResult) As X509Certificate2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::Cryptography::X509Certificates::X509Certificate2 ^ EndGetClientCertificate(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndGetClientCertificate : IAsyncResult -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="httpListenerRequest.EndGetClientCertificate asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate2</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="cf546-152">Die ausstehende Anforderung für das Zertifikat.</span><span class="sxs-lookup"><span data-stu-id="cf546-152">The pending request for the certificate.</span></span></param>
        <summary><span data-ttu-id="cf546-153">Beendet eine asynchrone Anforderung für das X.509 v.3-Zertifikat des Clients.</span><span class="sxs-lookup"><span data-stu-id="cf546-153">Ends an asynchronous request for the client's X.509 v.3 certificate.</span></span></summary>
        <returns><span data-ttu-id="cf546-154">Das <see cref="T:System.IAsyncResult" />-Objekt, das nach Beginn des Vorgangs zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="cf546-154">The <see cref="T:System.IAsyncResult" /> object that is returned when the operation started.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cf546-155"><paramref name="asyncResult" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cf546-155"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cf546-156"><paramref name="asyncResult" /> wurde nicht durch den Aufruf von <see cref="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)" /><paramref name="e." /> abgerufen.</span><span class="sxs-lookup"><span data-stu-id="cf546-156"><paramref name="asyncResult" /> was not obtained by calling <see cref="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)" /><paramref name="e." /></span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cf546-157">Diese Methode wurde bereits für den durch <paramref name="asyncResult" /> bezeichneten Vorgang aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="cf546-157">This method was already called for the operation identified by <paramref name="asyncResult" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetClientCertificate">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate2 GetClientCertificate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.Cryptography.X509Certificates.X509Certificate2 GetClientCertificate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerRequest.GetClientCertificate" />
      <MemberSignature Language="VB.NET" Value="Public Function GetClientCertificate () As X509Certificate2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::Cryptography::X509Certificates::X509Certificate2 ^ GetClientCertificate();" />
      <MemberSignature Language="F#" Value="member this.GetClientCertificate : unit -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="httpListenerRequest.GetClientCertificate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate2</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cf546-158">Ruft das X.509 v.3-Zertifikat des Clients ab.</span><span class="sxs-lookup"><span data-stu-id="cf546-158">Retrieves the client's X.509 v.3 certificate.</span></span></summary>
        <returns><span data-ttu-id="cf546-159">Ein <see cref="N:System.Security.Cryptography.X509Certificates" />-Objekt, das das X.509 v.3-Zertifikat des Clients enthält.</span><span class="sxs-lookup"><span data-stu-id="cf546-159">A <see cref="N:System.Security.Cryptography.X509Certificates" /> object that contains the client's X.509 v.3 certificate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf546-160">Diese Methode wird blockiert, bis das Zertifikat abgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="cf546-160">This method blocks until the certificate is retrieved.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cf546-161">Ein Aufruf dieser Methode zum Abrufen des X.509 v.3-Zertifikats des Clients wird gerade ausgeführt. Daher kann kein weiterer Aufruf dieser Methode erfolgen.</span><span class="sxs-lookup"><span data-stu-id="cf546-161">A call to this method to retrieve the client's X.509 v.3 certificate is in progress and therefore another call to this method cannot be made.</span></span></exception>
        <altmember cref="N:System.Security.Cryptography.X509Certificates" />
      </Docs>
    </Member>
    <Member MemberName="GetClientCertificateAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Security.Cryptography.X509Certificates.X509Certificate2&gt; GetClientCertificateAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Security.Cryptography.X509Certificates.X509Certificate2&gt; GetClientCertificateAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerRequest.GetClientCertificateAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function GetClientCertificateAsync () As Task(Of X509Certificate2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Security::Cryptography::X509Certificates::X509Certificate2 ^&gt; ^ GetClientCertificateAsync();" />
      <MemberSignature Language="F#" Value="member this.GetClientCertificateAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Security.Cryptography.X509Certificates.X509Certificate2&gt;" Usage="httpListenerRequest.GetClientCertificateAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Security.Cryptography.X509Certificates.X509Certificate2&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cf546-162">Ruft das X.509 v.3-Zertifikat des Client als asynchronen Vorgang ab.</span><span class="sxs-lookup"><span data-stu-id="cf546-162">Retrieves the client's X.509 v.3 certificate as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="cf546-163">Das Taskobjekt, das den asynchronen Vorgang darstellt.</span><span class="sxs-lookup"><span data-stu-id="cf546-163">The task object representing the asynchronous operation.</span></span> <span data-ttu-id="cf546-164">Die <see cref="P:System.Threading.Tasks.Task`1.Result" />-Eigenschaft im Task-Objekt gibt ein <see cref="N:System.Security.Cryptography.X509Certificates" /> Objekt zurück, das das X.509 v.3-Zertifikat des Client enthält.</span><span class="sxs-lookup"><span data-stu-id="cf546-164">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns a <see cref="N:System.Security.Cryptography.X509Certificates" /> object that contains the client's X.509 v.3 certificate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf546-165">Dieser Vorgang wird nicht blockiert.</span><span class="sxs-lookup"><span data-stu-id="cf546-165">This operation will not block.</span></span> <span data-ttu-id="cf546-166">Das zurückgegebene <xref:System.Threading.Tasks.Task%601> Objekt wird abgeschlossen, wenn das Zertifikat abgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="cf546-166">The returned <xref:System.Threading.Tasks.Task%601> object will complete when the certificate has been retrieved.</span></span>  
  
 <span data-ttu-id="cf546-167">Wenn ein Aufrufen dieser Methode zum Abrufen des X. 509 v. 3-Zertifikats des Clients ausgeführt wird, kann kein weiterer aufrufungsvorgang durchgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="cf546-167">If a call to this method to retrieve the client's X.509 v.3 certificate is in progress, then another call to this method cannot be made.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.Security.Cryptography.X509Certificates" />
      </Docs>
    </Member>
    <Member MemberName="HasEntityBody">
      <MemberSignature Language="C#" Value="public bool HasEntityBody { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasEntityBody" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.HasEntityBody" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasEntityBody As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasEntityBody { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasEntityBody : bool" Usage="System.Net.HttpListenerRequest.HasEntityBody" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf546-168">Ruft einen <see cref="T:System.Boolean" />-Wert ab, der angibt, ob der Anforderung Textdaten zugeordnet sind.</span><span class="sxs-lookup"><span data-stu-id="cf546-168">Gets a <see cref="T:System.Boolean" /> value that indicates whether the request has associated body data.</span></span></summary>
        <value><span data-ttu-id="cf546-169"><see langword="true" />, wenn der Anforderung Textdaten zugeordnet sind, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="cf546-169"><see langword="true" /> if the request has associated body data; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf546-170">Eine Anforderung, die mithilfe der `POST`-Methode Daten an den Server sendet, sollte z. b. über einen Entitäts Text verfügen.</span><span class="sxs-lookup"><span data-stu-id="cf546-170">A request that sends data to the server using the `POST` method, for example, should have an entity body.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf546-171">Im folgenden Codebeispiel wird die Verwendung dieser Eigenschaft veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="cf546-171">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#16](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#16)]  
 [!code-vb[Net_Listener_Basic#16](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection Headers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.Headers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Headers As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ Headers { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Headers : System.Collections.Specialized.NameValueCollection" Usage="System.Net.HttpListenerRequest.Headers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf546-172">Ruft die Auflistung der in der Anforderung gesendeten Name-Wert-Paare der Header ab.</span><span class="sxs-lookup"><span data-stu-id="cf546-172">Gets the collection of header name/value pairs sent in the request.</span></span></summary>
        <value><span data-ttu-id="cf546-173">Eine <see cref="T:System.Net.WebHeaderCollection" />, die die in der Anforderung vorhandenen HTTP-Header enthält.</span><span class="sxs-lookup"><span data-stu-id="cf546-173">A <see cref="T:System.Net.WebHeaderCollection" /> that contains the HTTP headers included in the request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf546-174">Anforderungs Header enthalten Metadateninformationen.</span><span class="sxs-lookup"><span data-stu-id="cf546-174">Request headers contain metadata information.</span></span> <span data-ttu-id="cf546-175">Header können z. b. die Uniform Resource Identifier (URI) der Ressource enthalten, die den Client an den Server verwiesen hat, die Identität des vom Client eingesetzten Benutzer-Agents und die zulässigen MIME-Typen für Daten im Antworttext.</span><span class="sxs-lookup"><span data-stu-id="cf546-175">For example, headers can contain the Uniform Resource Identifier (URI) of the resource that referred the client to the server, the identity of the user agent employed by the client, and the acceptable MIME types for data in the response body.</span></span>  
  
 <span data-ttu-id="cf546-176">Eine umfassende Liste mit Anforderungs Headern finden Sie in der <xref:System.Net.HttpRequestHeader>-Enumeration.</span><span class="sxs-lookup"><span data-stu-id="cf546-176">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf546-177">Im folgenden Codebeispiel werden alle Informationen in einem angegebenen <xref:System.Net.WebHeaderCollection> Objekt angezeigt.</span><span class="sxs-lookup"><span data-stu-id="cf546-177">The following code example displays all the information in a given <xref:System.Net.WebHeaderCollection> object.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#21](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#21)]  
 [!code-vb[Net_Listener_Basic#21](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="HttpMethod">
      <MemberSignature Language="C#" Value="public string HttpMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HttpMethod" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.HttpMethod" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HttpMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HttpMethod { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HttpMethod : string" Usage="System.Net.HttpListenerRequest.HttpMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf546-178">Ruft die vom Client angegebene HTTP-Methode ab.</span><span class="sxs-lookup"><span data-stu-id="cf546-178">Gets the HTTP method specified by the client.</span></span></summary>
        <value><span data-ttu-id="cf546-179">Ein <see cref="T:System.String" />, der die in der Anforderung verwendete Methode enthält.</span><span class="sxs-lookup"><span data-stu-id="cf546-179">A <see cref="T:System.String" /> that contains the method used in the request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf546-180">Die HTTP-Methode ist in der Regel Get oder Post, abhängig von der Aktion, die vom Client gewünscht wird.</span><span class="sxs-lookup"><span data-stu-id="cf546-180">The HTTP method is typically GET or POST, depending on the action desired by the client.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf546-181">Im folgenden Codebeispiel wird die Verwendung dieser Eigenschaft veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="cf546-181">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
 [!code-vb[Net_Listener_Basic#17](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="InputStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream InputStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream InputStream" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.InputStream" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ InputStream { System::IO::Stream ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InputStream : System.IO.Stream" Usage="System.Net.HttpListenerRequest.InputStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf546-182">Ruft einen Stream ab, der die vom Client gesendeten Textdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="cf546-182">Gets a stream that contains the body data sent by the client.</span></span></summary>
        <value><span data-ttu-id="cf546-183">Ein lesbares <see cref="T:System.IO.Stream" />-Objekt, das die vom Client im Text der Anforderung gesendeten Bytes enthält.</span><span class="sxs-lookup"><span data-stu-id="cf546-183">A readable <see cref="T:System.IO.Stream" /> object that contains the bytes sent by the client in the body of the request.</span></span> <span data-ttu-id="cf546-184">Diese Eigenschaft gibt <see cref="F:System.IO.Stream.Null" /> zurück, wenn keine Daten mit der Anforderung gesendet werden.</span><span class="sxs-lookup"><span data-stu-id="cf546-184">This property returns <see cref="F:System.IO.Stream.Null" /> if no data is sent with the request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf546-185">Wenn der Client Daten überträgt (z. b. mithilfe der http `POST`-Methode), enthält der von dieser Methode zurückgegebene Stream diese Daten.</span><span class="sxs-lookup"><span data-stu-id="cf546-185">If the client transmits data (for example, using the HTTP `POST` method), the stream returned by this method contains that data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cf546-186">Durch das Schließen der Anforderung wird der von dieser Eigenschaft zurückgegebene Stream nicht geschlossen.</span><span class="sxs-lookup"><span data-stu-id="cf546-186">Closing the request does not close the stream returned by this property.</span></span> <span data-ttu-id="cf546-187">Wenn Sie den Stream nicht mehr benötigen, sollten Sie ihn schließen, indem Sie die <xref:System.IO.Stream.Close%2A>-Methode aufrufen.</span><span class="sxs-lookup"><span data-stu-id="cf546-187">When you no longer need the stream, you should close it by calling the <xref:System.IO.Stream.Close%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf546-188">Im folgenden Codebeispiel wird veranschaulicht, wie mit dieser Eigenschaft die mit einer Anforderung gesendeten Daten gelesen werden.</span><span class="sxs-lookup"><span data-stu-id="cf546-188">The following code example demonstrates using this property to read the data sent with a request.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#16](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#16)]  
 [!code-vb[Net_Listener_Basic#16](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#16)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="cf546-189">Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren.</span><span class="sxs-lookup"><span data-stu-id="cf546-189">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="cf546-190">Weitere Informationen finden Sie unter [Netzwerk Ablauf Verfolgung in der .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="cf546-190">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span></para></block>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAuthenticated : bool" Usage="System.Net.HttpListenerRequest.IsAuthenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Always returns false")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf546-191">Ruft einen <see cref="T:System.Boolean" />-Wert ab, der angibt, ob der diese Anforderung sendende Client authentifiziert ist.</span><span class="sxs-lookup"><span data-stu-id="cf546-191">Gets a <see cref="T:System.Boolean" /> value that indicates whether the client sending this request is authenticated.</span></span></summary>
        <value><span data-ttu-id="cf546-192"><see langword="true" />, wenn der Client authentifiziert wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="cf546-192"><see langword="true" /> if the client was authenticated; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf546-193">Ihre Anwendung fordert die Client Authentifizierung mithilfe der <xref:System.Net.HttpListener.AuthenticationSchemes%2A>-oder <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A>-Eigenschaft an.</span><span class="sxs-lookup"><span data-stu-id="cf546-193">Your application requests client authentication using the <xref:System.Net.HttpListener.AuthenticationSchemes%2A> or <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A> property.</span></span>  
  
 <span data-ttu-id="cf546-194">Die Anwendung empfängt keine <xref:System.Net.HttpListenerContext> für Anforderungen von Clients, die nicht erfolgreich authentifiziert wurden.</span><span class="sxs-lookup"><span data-stu-id="cf546-194">Your application does not receive an <xref:System.Net.HttpListenerContext> for requests from clients that are not successfully authenticated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf546-195">Im folgenden Codebeispiel wird der Wert der <xref:System.Net.HttpListenerRequest.IsAuthenticated%2A>-Eigenschaft angezeigt.</span><span class="sxs-lookup"><span data-stu-id="cf546-195">The following code example displays the value of the <xref:System.Net.HttpListenerRequest.IsAuthenticated%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
 [!code-vb[Net_Listener_Basic#17](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="IsLocal">
      <MemberSignature Language="C#" Value="public bool IsLocal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLocal" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.IsLocal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLocal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLocal { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsLocal : bool" Usage="System.Net.HttpListenerRequest.IsLocal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf546-196">Ruft einen <see cref="T:System.Boolean" />-Wert ab, der angibt, ob die Anforderung vom lokalen Computer gesendet wurde.</span><span class="sxs-lookup"><span data-stu-id="cf546-196">Gets a <see cref="T:System.Boolean" /> value that indicates whether the request is sent from the local computer.</span></span></summary>
        <value><span data-ttu-id="cf546-197"><see langword="true" />, wenn die Anforderung und das <see cref="T:System.Net.HttpListener" />-Objekt, das die Anforderung bereitgestellt hat, von demselben Computer stammen, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="cf546-197"><see langword="true" /> if the request originated on the same computer as the <see cref="T:System.Net.HttpListener" /> object that provided the request; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf546-198">Anwendungen können diese Eigenschaft verwenden, um eine besondere Verarbeitung durchzuführen, wenn Anforderungen vom lokalen Computer stammen.</span><span class="sxs-lookup"><span data-stu-id="cf546-198">Applications can use this property to perform special processing when requests are from the local computer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf546-199">Im folgenden Codebeispiel wird die Verwendung der <xref:System.Net.HttpListenerRequest.IsLocal%2A>-Eigenschaft veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="cf546-199">The following code example demonstrates using the <xref:System.Net.HttpListenerRequest.IsLocal%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
 [!code-vb[Net_Listener_Basic#17](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="IsSecureConnection">
      <MemberSignature Language="C#" Value="public bool IsSecureConnection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSecureConnection" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.IsSecureConnection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSecureConnection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSecureConnection { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSecureConnection : bool" Usage="System.Net.HttpListenerRequest.IsSecureConnection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf546-200">Ruft einen <see cref="T:System.Boolean" />-Wert ab, der angibt, ob die TCP-Verbindung, mit der die Anforderung gesendet wird, das SSL (Secure Sockets Layer)-Protokoll verwendet.</span><span class="sxs-lookup"><span data-stu-id="cf546-200">Gets a <see cref="T:System.Boolean" /> value that indicates whether the TCP connection used to send the request is using the Secure Sockets Layer (SSL) protocol.</span></span></summary>
        <value><span data-ttu-id="cf546-201"><see langword="true" />, wenn die TCP-Verbindung SSL verwendet, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="cf546-201"><see langword="true" /> if the TCP connection is using SSL; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf546-202">Um eine sichere Verbindung anzufordern, verwendet die Client Anforderung <xref:System.Uri.UriSchemeHttps> anstelle von <xref:System.Uri.UriSchemeHttp>.</span><span class="sxs-lookup"><span data-stu-id="cf546-202">To request a secure connection, the client request uses <xref:System.Uri.UriSchemeHttps> instead of <xref:System.Uri.UriSchemeHttp>.</span></span> <span data-ttu-id="cf546-203">Wenn die Verbindung nicht mithilfe von SSL hergestellt werden kann, empfängt der Client eine <xref:System.Net.WebException>, die Informationen über den Fehler enthält.</span><span class="sxs-lookup"><span data-stu-id="cf546-203">If the connection cannot be established using SSL, the client receives a <xref:System.Net.WebException> that provides information about the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf546-204">Im folgenden Codebeispiel wird die Verwendung der <xref:System.Net.HttpListenerRequest.IsSecureConnection%2A>-Eigenschaft veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="cf546-204">The following code example demonstrates using the <xref:System.Net.HttpListenerRequest.IsSecureConnection%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
 [!code-vb[Net_Listener_Basic#17](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="IsWebSocketRequest">
      <MemberSignature Language="C#" Value="public bool IsWebSocketRequest { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWebSocketRequest" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.IsWebSocketRequest" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWebSocketRequest As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWebSocketRequest { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsWebSocketRequest : bool" Usage="System.Net.HttpListenerRequest.IsWebSocketRequest" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf546-205">Ruft einen <see cref="T:System.Boolean" />-Wert ab, der angibt, ob die TCP Verbindung eine WEbSocket Anforderung war.</span><span class="sxs-lookup"><span data-stu-id="cf546-205">Gets a <see cref="T:System.Boolean" /> value that indicates whether the TCP connection was  a WebSocket request.</span></span></summary>
        <value><span data-ttu-id="cf546-206">Gibt <see cref="T:System.Boolean" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="cf546-206">Returns <see cref="T:System.Boolean" />.</span></span>  
  
 <span data-ttu-id="cf546-207"><see langword="true" />, wenn die TCP-Verbindung eine WebSocket-Anforderung ist; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="cf546-207"><see langword="true" /> if the TCP connection is a WebSocket request; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepAlive">
      <MemberSignature Language="C#" Value="public bool KeepAlive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepAlive" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.KeepAlive" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeepAlive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeepAlive { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.KeepAlive : bool" Usage="System.Net.HttpListenerRequest.KeepAlive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf546-208">Ruft einen <see cref="T:System.Boolean" />-Wert ab, der angibt, ob der Client eine permanente Verbindung anfordert.</span><span class="sxs-lookup"><span data-stu-id="cf546-208">Gets a <see cref="T:System.Boolean" /> value that indicates whether the client requests a persistent connection.</span></span></summary>
        <value><span data-ttu-id="cf546-209"><see langword="true" />, wenn die Verbindung geöffnet bleiben soll, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="cf546-209"><see langword="true" /> if the connection should be kept open; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf546-210">Wenn ein HTTP-Client und-Serverdaten in kurzer Zeit mehrmals austauschen können, beschleunigt eine permanente Verbindung Ihre Kommunikation, indem Sie Ihnen ermöglicht, den Aufwand zu vermeiden, der erforderlich ist, um eine TCP-Verbindung für jede Nachricht zu öffnen und zu schließen.</span><span class="sxs-lookup"><span data-stu-id="cf546-210">If an HTTP client and server expect to exchange data multiple times in a short time period, a persistent connection speeds up their communications by allowing them to avoid the overhead required to open and close a TCP connection for each message.</span></span> <span data-ttu-id="cf546-211">Für Clients, die HTTP/1.1 verwenden, ist der Standardwert für diese Eigenschaft `true`.</span><span class="sxs-lookup"><span data-stu-id="cf546-211">For clients using HTTP/1.1, the default value for this property is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf546-212">Im folgenden Codebeispiel wird die Verwendung dieser Eigenschaft veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="cf546-212">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
 [!code-vb[Net_Listener_Basic#17](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="LocalEndPoint">
      <MemberSignature Language="C#" Value="public System.Net.IPEndPoint LocalEndPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IPEndPoint LocalEndPoint" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.LocalEndPoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LocalEndPoint As IPEndPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IPEndPoint ^ LocalEndPoint { System::Net::IPEndPoint ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalEndPoint : System.Net.IPEndPoint" Usage="System.Net.HttpListenerRequest.LocalEndPoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPEndPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf546-213">Ruft die IP-Adresse und Anschlussnummer des Servers ab, an den die Anforderung gerichtet ist.</span><span class="sxs-lookup"><span data-stu-id="cf546-213">Gets the server IP address and port number to which the request is directed.</span></span></summary>
        <value><span data-ttu-id="cf546-214">Ein <see cref="T:System.Net.IPEndPoint" />, der die IP-Adresse darstellt, an die die Anforderung gesendet wird.</span><span class="sxs-lookup"><span data-stu-id="cf546-214">An <see cref="T:System.Net.IPEndPoint" /> that represents the IP address that the request is sent to.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf546-215">Diese Eigenschaft ist nützlich, wenn Sie auf Anforderungen basierend auf der Art und Weise reagieren möchten, in der Sie behandelt werden.</span><span class="sxs-lookup"><span data-stu-id="cf546-215">This property is useful when you want to respond to requests based on the way they are addressed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf546-216">Im folgenden Codebeispiel wird die Verwendung dieser Eigenschaft veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="cf546-216">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
 [!code-vb[Net_Listener_Basic#17](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="ProtocolVersion">
      <MemberSignature Language="C#" Value="public Version ProtocolVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version ProtocolVersion" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.ProtocolVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtocolVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ ProtocolVersion { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProtocolVersion : Version" Usage="System.Net.HttpListenerRequest.ProtocolVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf546-217">Ruft die vom anfordernden Client verwendete HTTP-Version ab.</span><span class="sxs-lookup"><span data-stu-id="cf546-217">Gets the HTTP version used by the requesting client.</span></span></summary>
        <value><span data-ttu-id="cf546-218">Eine <see cref="T:System.Version" />, die die HTTP-Version des Clients bezeichnet.</span><span class="sxs-lookup"><span data-stu-id="cf546-218">A <see cref="T:System.Version" /> that identifies the client's version of HTTP.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf546-219">Die Funktionen verschiedener http-Versionen werden in den unter [https://www.rfc-editor.org](https://www.rfc-editor.org/)verfügbaren Dokumenten angegeben.</span><span class="sxs-lookup"><span data-stu-id="cf546-219">The capabilities of different HTTP versions are specified in the documents available at [https://www.rfc-editor.org](https://www.rfc-editor.org/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf546-220">Im folgenden Codebeispiel wird die Verwendung dieser Eigenschaft veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="cf546-220">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
 [!code-vb[Net_Listener_Basic#17](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="QueryString">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection QueryString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection QueryString" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.QueryString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QueryString As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ QueryString { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.QueryString : System.Collections.Specialized.NameValueCollection" Usage="System.Net.HttpListenerRequest.QueryString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf546-221">Ruft die in der Anforderung enthaltene Abfragezeichenfolge ab.</span><span class="sxs-lookup"><span data-stu-id="cf546-221">Gets the query string included in the request.</span></span></summary>
        <value><span data-ttu-id="cf546-222">Ein <see cref="T:System.Collections.Specialized.NameValueCollection" />-Objekt, das die im Anforderungs-<see cref="P:System.Net.HttpListenerRequest.Url" /> enthaltenen Abfragedaten enthält.</span><span class="sxs-lookup"><span data-stu-id="cf546-222">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> object that contains the query data included in the request <see cref="P:System.Net.HttpListenerRequest.Url" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf546-223">In einer URL werden die Abfrage Informationen durch ein Fragezeichen (?) von den Pfadinformationen getrennt.</span><span class="sxs-lookup"><span data-stu-id="cf546-223">In a URL, the query information is separated from the path information by a question mark (?).</span></span> <span data-ttu-id="cf546-224">Name/Wert-Paare werden durch ein Gleichheitszeichen (=) getrennt.</span><span class="sxs-lookup"><span data-stu-id="cf546-224">Name/value pairs are separated by an equals sign (=).</span></span> <span data-ttu-id="cf546-225">Wenn Sie auf die Abfrage Daten als einzelne Zeichenfolge zugreifen möchten, können Sie den <xref:System.Uri.Query%2A>-Eigenschafts Wert aus dem von <xref:System.Net.HttpListenerRequest.Url%2A>zurückgegebenen <xref:System.Uri>-Objekt abrufen.</span><span class="sxs-lookup"><span data-stu-id="cf546-225">To access the query data as a single string, get the <xref:System.Uri.Query%2A> property value from the <xref:System.Uri> object returned by <xref:System.Net.HttpListenerRequest.Url%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cf546-226">Abfragen ohne Gleichheitszeichen (Beispiel: [http://www.contoso.com/query.htm?Name](http://www.contoso.com/query.htm?Name) ) werden dem `null` Schlüssel im <xref:System.Collections.Specialized.NameValueCollection>hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="cf546-226">Queries without an equal sign (example: [http://www.contoso.com/query.htm?Name](http://www.contoso.com/query.htm?Name) ) are added to the `null` key in the <xref:System.Collections.Specialized.NameValueCollection>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf546-227">Im folgenden Codebeispiel wird die Verwendung der <xref:System.Net.HttpListenerRequest.QueryString%2A>-Eigenschaft veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="cf546-227">The following code example demonstrates using the <xref:System.Net.HttpListenerRequest.QueryString%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
 [!code-vb[Net_Listener_Basic#15](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="RawUrl">
      <MemberSignature Language="C#" Value="public string RawUrl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RawUrl" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.RawUrl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RawUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RawUrl { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RawUrl : string" Usage="System.Net.HttpListenerRequest.RawUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf546-228">Ruft die vom Client angeforderten URL-Informationen (ohne Host und Anschluss) ab.</span><span class="sxs-lookup"><span data-stu-id="cf546-228">Gets the URL information (without the host and port) requested by the client.</span></span></summary>
        <value><span data-ttu-id="cf546-229">Ein <see cref="T:System.String" />, der die Rohdaten-URL für diese Anforderung enthält.</span><span class="sxs-lookup"><span data-stu-id="cf546-229">A <see cref="T:System.String" /> that contains the raw URL for this request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf546-230">Die RAW-URL wird als Teil der URL definiert, die den Domänen Informationen folgt.</span><span class="sxs-lookup"><span data-stu-id="cf546-230">The raw URL is defined as the part of the URL following the domain information.</span></span> <span data-ttu-id="cf546-231">In der URL-Zeichenfolge `http://www.contoso.com/articles/recent.aspx`ist die RAW-URL `/articles/recent.aspx`.</span><span class="sxs-lookup"><span data-stu-id="cf546-231">In the URL string `http://www.contoso.com/articles/recent.aspx`, the raw URL is `/articles/recent.aspx`.</span></span> <span data-ttu-id="cf546-232">Die RAW-URL enthält die Abfrage Zeichenfolge, falls vorhanden.</span><span class="sxs-lookup"><span data-stu-id="cf546-232">The raw URL includes the query string, if present.</span></span>  
  
 <span data-ttu-id="cf546-233">Zum Abrufen der Host-und Port Informationen verwenden Sie die <xref:System.Net.HttpListenerRequest.RemoteEndPoint%2A>-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="cf546-233">To obtain the host and port information, use the <xref:System.Net.HttpListenerRequest.RemoteEndPoint%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf546-234">Im folgenden Codebeispiel wird die Verwendung der <xref:System.Net.HttpListenerRequest.RawUrl%2A>-Eigenschaft veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="cf546-234">The following code example demonstrates using the <xref:System.Net.HttpListenerRequest.RawUrl%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#11](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#11)]  
 [!code-vb[Net_Listener_Basic#11](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="RemoteEndPoint">
      <MemberSignature Language="C#" Value="public System.Net.IPEndPoint RemoteEndPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IPEndPoint RemoteEndPoint" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.RemoteEndPoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RemoteEndPoint As IPEndPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IPEndPoint ^ RemoteEndPoint { System::Net::IPEndPoint ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RemoteEndPoint : System.Net.IPEndPoint" Usage="System.Net.HttpListenerRequest.RemoteEndPoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPEndPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf546-235">Ruft die IP-Adresse und Anschlussnummer des Clients ab, von dem die Anforderung stammt.</span><span class="sxs-lookup"><span data-stu-id="cf546-235">Gets the client IP address and port number from which the request originated.</span></span></summary>
        <value><span data-ttu-id="cf546-236">Ein <see cref="T:System.Net.IPEndPoint" />, der die IP-Adresse und Anschlussnummer darstellt, von denen die Anforderung stammt.</span><span class="sxs-lookup"><span data-stu-id="cf546-236">An <see cref="T:System.Net.IPEndPoint" /> that represents the IP address and port number from which the request originated.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cf546-237">Im folgenden Codebeispiel wird die Verwendung dieser Eigenschaft veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="cf546-237">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
 [!code-vb[Net_Listener_Basic#17](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="RequestTraceIdentifier">
      <MemberSignature Language="C#" Value="public Guid RequestTraceIdentifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid RequestTraceIdentifier" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.RequestTraceIdentifier" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RequestTraceIdentifier As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid RequestTraceIdentifier { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.RequestTraceIdentifier : Guid" Usage="System.Net.HttpListenerRequest.RequestTraceIdentifier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Always returns Guid.Empty")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf546-238">Ruft den Anforderungsbezeichner der eingehenden HTTP-Anforderung ab.</span><span class="sxs-lookup"><span data-stu-id="cf546-238">Gets the request identifier of the incoming HTTP request.</span></span></summary>
        <value><span data-ttu-id="cf546-239">Ein <see cref="T:System.Guid" />-Objekt, das den Bezeichner der HTTP-Anforderung enthält.</span><span class="sxs-lookup"><span data-stu-id="cf546-239">A <see cref="T:System.Guid" /> object that contains the identifier of the HTTP request.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceName">
      <MemberSignature Language="C#" Value="public string ServiceName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServiceName" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.ServiceName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServiceName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ServiceName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServiceName : string" Usage="System.Net.HttpListenerRequest.ServiceName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf546-240">Ruft den Dienstanbieternamen (SPN) ab, der vom Client in der Anforderung gesendet wurde.</span><span class="sxs-lookup"><span data-stu-id="cf546-240">Gets the Service Provider Name (SPN) that the client sent on the request.</span></span></summary>
        <value><span data-ttu-id="cf546-241">Ein <see cref="T:System.String" />, das den vom Client in der Anforderung gesendeten Dienstanbieternamen enthält.</span><span class="sxs-lookup"><span data-stu-id="cf546-241">A <see cref="T:System.String" /> that contains the SPN the client sent on the request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf546-242">Eine Anwendung kann die <xref:System.Net.HttpListenerRequest.ServiceName%2A>-Eigenschaft verwenden, um die Überprüfung des benutzerdefinierten Dienst namens (SPN) auszuführen.</span><span class="sxs-lookup"><span data-stu-id="cf546-242">An application could use the <xref:System.Net.HttpListenerRequest.ServiceName%2A> property to perform custom Service Provide Name (SPN) validation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.HttpListener.DefaultServiceNames" />
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" />
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" />
        <altmember cref="T:System.Net.HttpListener.ExtendedProtectionSelector" />
        <altmember cref="P:System.Net.HttpListenerRequest.TransportContext" />
        <altmember cref="N:System.Security.Authentication.ExtendedProtection" />
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="cf546-243">Integrierte Windows-Authentifizierung unter Verwendung von "Erweiterter Schutz" (möglicherweise auf Englisch)</span><span class="sxs-lookup"><span data-stu-id="cf546-243">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TransportContext">
      <MemberSignature Language="C#" Value="public System.Net.TransportContext TransportContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.TransportContext TransportContext" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.TransportContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TransportContext As TransportContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::TransportContext ^ TransportContext { System::Net::TransportContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TransportContext : System.Net.TransportContext" Usage="System.Net.HttpListenerRequest.TransportContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.TransportContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf546-244">Ruft das <see cref="T:System.Net.TransportContext" /> für die Clientanforderung ab.</span><span class="sxs-lookup"><span data-stu-id="cf546-244">Gets the <see cref="T:System.Net.TransportContext" /> for the client request.</span></span></summary>
        <value><span data-ttu-id="cf546-245">Ein <see cref="T:System.Net.TransportContext" />-Objekt für die Clientanforderung.</span><span class="sxs-lookup"><span data-stu-id="cf546-245">A <see cref="T:System.Net.TransportContext" /> object for the client request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf546-246">Die <xref:System.Net.TransportContext>-Eigenschaft kann verwendet werden, um das channelbindungstoken (CBT) für ein <xref:System.Net.HttpListenerRequest> abzurufen, das über HTTPS gesendet wurde.</span><span class="sxs-lookup"><span data-stu-id="cf546-246">The <xref:System.Net.TransportContext> property can be used to retrieve the channel binding token (CBT) for an <xref:System.Net.HttpListenerRequest> which was sent using HTTPS.</span></span>  
  
 <span data-ttu-id="cf546-247">Eine Anwendung kann die <xref:System.Net.TransportContext>-Eigenschaft verwenden, um eine benutzerdefinierte Authentifizierung mithilfe von Aufrufen der systemeigenen Win32-Funktion " [Accept-SecurityContext](https://go.microsoft.com/fwlink/?LinkId=147021) " auszuführen.</span><span class="sxs-lookup"><span data-stu-id="cf546-247">An application could use the <xref:System.Net.TransportContext> property to perform custom authentication using calls to the native Win32 [AcceptSecurityContext](https://go.microsoft.com/fwlink/?LinkId=147021) function.</span></span>  
  
 <span data-ttu-id="cf546-248">Wenn eine Anwendung versucht, das channelbindungstoken (CBT) mithilfe der <xref:System.Net.TransportContext.GetChannelBinding%2A>-Methode aus dieser <xref:System.Net.HttpListenerRequest.TransportContext%2A> Eigenschaft abzurufen, und der <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind> nicht <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint>ist, wird <xref:System.Net.HttpListenerRequest> ausgelöst.<xref:System.NotSupportedException></span><span class="sxs-lookup"><span data-stu-id="cf546-248">If an application attempts to retrieve the channel binding token (CBT) from this <xref:System.Net.HttpListenerRequest.TransportContext%2A> property using the <xref:System.Net.TransportContext.GetChannelBinding%2A> method and the <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind> is not <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint>, then the <xref:System.Net.HttpListenerRequest> will throw <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="cf546-249">Der <xref:System.Net.HttpListenerRequest> überschreibt die <xref:System.Net.TransportContext.GetChannelBinding%2A>-Methode mit einer internen-Implementierung.</span><span class="sxs-lookup"><span data-stu-id="cf546-249">The <xref:System.Net.HttpListenerRequest> overrides the <xref:System.Net.TransportContext.GetChannelBinding%2A> method with an internal implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.HttpListener.DefaultServiceNames" />
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" />
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" />
        <altmember cref="T:System.Net.HttpListener.ExtendedProtectionSelector" />
        <altmember cref="P:System.Net.HttpListenerRequest.ServiceName" />
        <altmember cref="N:System.Security.Authentication.ExtendedProtection" />
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="cf546-250">Integrierte Windows-Authentifizierung unter Verwendung von "Erweiterter Schutz" (möglicherweise auf Englisch)</span><span class="sxs-lookup"><span data-stu-id="cf546-250">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Url">
      <MemberSignature Language="C#" Value="public Uri Url { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Url" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.Url" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Url As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Url { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Url : Uri" Usage="System.Net.HttpListenerRequest.Url" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf546-251">Ruft das vom Client angeforderte <see cref="T:System.Uri" />-Objekt ab.</span><span class="sxs-lookup"><span data-stu-id="cf546-251">Gets the <see cref="T:System.Uri" /> object requested by the client.</span></span></summary>
        <value><span data-ttu-id="cf546-252">Ein <see cref="T:System.Uri" />-Objekt, das die vom Client angeforderte Ressource bezeichnet.</span><span class="sxs-lookup"><span data-stu-id="cf546-252">A <see cref="T:System.Uri" /> object that identifies the resource requested by the client.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf546-253">Mit der <xref:System.Net.HttpListenerRequest.Url%2A>-Eigenschaft können Sie alle Informationen abrufen, die von einem <xref:System.Uri>-Objekt verfügbar sind.</span><span class="sxs-lookup"><span data-stu-id="cf546-253">The <xref:System.Net.HttpListenerRequest.Url%2A> property allows you to obtain all the information available from a <xref:System.Uri> object.</span></span> <span data-ttu-id="cf546-254">Wenn Sie nur den Rohtext der URI-Anforderung kennen müssen, sollten Sie stattdessen die <xref:System.Net.HttpListenerRequest.RawUrl%2A>-Eigenschaft verwenden.</span><span class="sxs-lookup"><span data-stu-id="cf546-254">If you need to know only the raw text of the URI request, consider using the <xref:System.Net.HttpListenerRequest.RawUrl%2A> property instead.</span></span>  
  
 <span data-ttu-id="cf546-255">Die <xref:System.Net.HttpListenerRequest.Url%2A>-Eigenschaft ist NULL, wenn der <xref:System.Uri> vom Client nicht analysiert werden konnte.</span><span class="sxs-lookup"><span data-stu-id="cf546-255">The <xref:System.Net.HttpListenerRequest.Url%2A> property is null if the <xref:System.Uri> from the client could not be parsed.</span></span>  
  
 <span data-ttu-id="cf546-256">Die <xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A>-Eigenschaft gibt an, ob <xref:System.Net.HttpListener> den unformatierten URI ohne Escapezeichen anstelle des konvertierten URI verwendet, bei dem alle Prozent codierten Werte konvertiert werden und andere normalisierungs Schritte durchgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="cf546-256">The <xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A> property indicates if <xref:System.Net.HttpListener> uses the raw unescaped URI instead of the converted URI where any percent-encoded values are converted and other normalization steps are taken.</span></span>  
  
 <span data-ttu-id="cf546-257">Wenn eine <xref:System.Net.HttpListener> Instanz eine Anforderung über den `http.sys` Dienst empfängt, erstellt Sie eine Instanz der von `http.sys`bereitgestellten URI-Zeichenfolge und macht Sie als <xref:System.Net.HttpListenerRequest.Url%2A?displayProperty=nameWithType> Eigenschaft verfügbar.</span><span class="sxs-lookup"><span data-stu-id="cf546-257">When a <xref:System.Net.HttpListener> instance receives a request through the `http.sys` service, it creates an instance of the URI string provided by `http.sys`, and exposes it as the <xref:System.Net.HttpListenerRequest.Url%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="cf546-258">Der `http.sys`-Dienst macht zwei Anforderungs-URI-Zeichen folgen verfügbar:</span><span class="sxs-lookup"><span data-stu-id="cf546-258">The `http.sys` service exposes two request URI strings:</span></span>  
  
-   <span data-ttu-id="cf546-259">RAW-URI</span><span class="sxs-lookup"><span data-stu-id="cf546-259">Raw URI</span></span>  
  
-   <span data-ttu-id="cf546-260">Konvertierter URI</span><span class="sxs-lookup"><span data-stu-id="cf546-260">Converted URI</span></span>  
  
 <span data-ttu-id="cf546-261">Der RAW-URI ist der <xref:System.Uri?displayProperty=nameWithType>, der in der Anforderungs Zeile einer HTTP-Anforderung bereitgestellt wird:</span><span class="sxs-lookup"><span data-stu-id="cf546-261">The raw URI is the <xref:System.Uri?displayProperty=nameWithType> provided in the request line of a HTTP request:</span></span>  
  
 `GET /path/`  
  
 `Host: www.contoso.com`  
  
 <span data-ttu-id="cf546-262">Der unformatierte URI, der von `http.sys` für die oben genannte Anforderung bereitgestellt wird, ist "/Path/".</span><span class="sxs-lookup"><span data-stu-id="cf546-262">The raw URI provided by `http.sys` for the request mentioned above, is "/path/".</span></span> <span data-ttu-id="cf546-263">Dies stellt die Zeichenfolge dar, die auf das HTTP-Verb folgt, wie es über das Netzwerk gesendet wurde.</span><span class="sxs-lookup"><span data-stu-id="cf546-263">This represents the string following the HTTP verb as it was sent over the network.</span></span>  
  
 <span data-ttu-id="cf546-264">Der `http.sys`-Dienst erstellt einen konvertierten URI aus den Informationen, die in der Anforderung bereitgestellt werden. dabei wird der in der HTTP-Anforderungs Zeile angegebene URI und der Host Header verwendet, um den Ursprungsserver zu ermitteln, an den die Anforderung weitergeleitet</span><span class="sxs-lookup"><span data-stu-id="cf546-264">The `http.sys` service creates a converted URI from the information provided in the request using the URI provided in the HTTP request line and the Host header to determine the origin server the request should be forwarded to.</span></span> <span data-ttu-id="cf546-265">Dies erfolgt durch Vergleichen der Informationen aus der Anforderung mit einem Satz von registrierten URI-Präfixen.</span><span class="sxs-lookup"><span data-stu-id="cf546-265">This is done by comparing the information from the request with a set of registered URI prefixes.</span></span> <span data-ttu-id="cf546-266">Um diese Werte vergleichen zu können, müssen einige Normalisierungen der Anforderung vorgenommen werden.</span><span class="sxs-lookup"><span data-stu-id="cf546-266">In order to be able to compare those values, some normalization to the request needs to be done.</span></span> <span data-ttu-id="cf546-267">Im obigen Beispiel würde der konvertierte URI wie folgt lauten:</span><span class="sxs-lookup"><span data-stu-id="cf546-267">For the sample above the converted URI would be as follows:</span></span>  
  
 `http://www.contoso.com/path/`  
  
 <span data-ttu-id="cf546-268">Der `http.sys`-Dienst kombiniert den <xref:System.Uri.Host%2A?displayProperty=nameWithType>-Eigenschafts Wert und die Zeichenfolge in der Anforderungs Zeile, um einen konvertierten URI zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="cf546-268">The `http.sys` service combines the <xref:System.Uri.Host%2A?displayProperty=nameWithType> property value and the string in the request line to create a converted URI.</span></span> <span data-ttu-id="cf546-269">Außerdem führen `http.sys` und die <xref:System.Uri?displayProperty=nameWithType>-Klasse auch die folgenden Schritte aus:</span><span class="sxs-lookup"><span data-stu-id="cf546-269">In addition, `http.sys` and the <xref:System.Uri?displayProperty=nameWithType> class also do the following:</span></span>  
  
-   <span data-ttu-id="cf546-270">Deaktiviert alle Prozent codierten Werte.</span><span class="sxs-lookup"><span data-stu-id="cf546-270">Un-escapes all percent encoded values.</span></span>  
  
-   <span data-ttu-id="cf546-271">Konvertiert Prozent codierte nicht-ASCII-Zeichen in eine UTF-16-Zeichen Darstellung.</span><span class="sxs-lookup"><span data-stu-id="cf546-271">Converts percent-encoded non-ASCII characters into a UTF-16 character representation.</span></span> <span data-ttu-id="cf546-272">Beachten Sie, dass UTF-8-und ANSI/DBCS-Zeichen sowie Unicode-Zeichen (Unicode-Codierung mit dem Format "% uXXXX") unterstützt werden.</span><span class="sxs-lookup"><span data-stu-id="cf546-272">Note that UTF-8 and ANSI/DBCS characters are supported as well as Unicode characters (Unicode encoding using the %uXXXX format).</span></span>  
  
-   <span data-ttu-id="cf546-273">Führt andere normalisierungs Schritte aus, z. b. Pfad Komprimierung</span><span class="sxs-lookup"><span data-stu-id="cf546-273">Executes other normalization steps, like path compression.</span></span>  
  
 <span data-ttu-id="cf546-274">Da die Anforderung keine Informationen über die Codierung enthält, die für Prozent codierte Werte verwendet wird, ist es möglicherweise nicht möglich, die richtige Codierung zu ermitteln, indem Sie die Prozent codierten Werte zu ermitteln.</span><span class="sxs-lookup"><span data-stu-id="cf546-274">Since the request doesn't contain any information about the encoding used for percent-encoded values, it may not be possible to determine the correct encoding just by parsing the percent-encoded values.</span></span>  
  
 <span data-ttu-id="cf546-275">Daher `http.sys` zwei Registrierungsschlüssel zum Ändern des Prozesses bereit:</span><span class="sxs-lookup"><span data-stu-id="cf546-275">Therefore `http.sys` provides two registry keys for modifying the process:</span></span>  
  
|<span data-ttu-id="cf546-276">-Registrierungsschlüssel</span><span class="sxs-lookup"><span data-stu-id="cf546-276">Registry Key</span></span>|<span data-ttu-id="cf546-277">Standardwert</span><span class="sxs-lookup"><span data-stu-id="cf546-277">Default Value</span></span>|<span data-ttu-id="cf546-278">Beschreibung</span><span class="sxs-lookup"><span data-stu-id="cf546-278">Description</span></span>|  
|------------------|-------------------|-----------------|  
|<span data-ttu-id="cf546-279">EnableNonUTF8</span><span class="sxs-lookup"><span data-stu-id="cf546-279">EnableNonUTF8</span></span>|<span data-ttu-id="cf546-280">1</span><span class="sxs-lookup"><span data-stu-id="cf546-280">1</span></span>|<span data-ttu-id="cf546-281">Wenn der Wert NULL ist, werden `http.sys` nur UTF-8-codierte URLs akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="cf546-281">If zero, `http.sys` accepts only UTF-8-encoded URLs.</span></span><br /><br /> <span data-ttu-id="cf546-282">Wenn der Wert ungleich 0 (null) ist, akzeptiert `http.sys` auch ANSI-codierte oder DBCS-codierte URLs in Anforderungen.</span><span class="sxs-lookup"><span data-stu-id="cf546-282">If non-zero, `http.sys` also accepts ANSI-encoded or DBCS-encoded URLs in requests.</span></span>|  
|<span data-ttu-id="cf546-283">FavorUTF8</span><span class="sxs-lookup"><span data-stu-id="cf546-283">FavorUTF8</span></span>|<span data-ttu-id="cf546-284">1</span><span class="sxs-lookup"><span data-stu-id="cf546-284">1</span></span>|<span data-ttu-id="cf546-285">Wenn der Wert ungleich 0 (null) ist, versucht `http.sys` immer zuerst, eine URL als UTF-8 zu decodieren. Wenn diese Konvertierung fehlschlägt und EnableNonUTF8 nicht NULL ist, versucht http. sys, Sie als ANSI oder DBCS zu decodieren.</span><span class="sxs-lookup"><span data-stu-id="cf546-285">If non-zero, `http.sys` always tries to decode a URL as UTF-8 first; if that conversion fails and EnableNonUTF8 is non-zero, Http.sys then tries to decode it as ANSI or DBCS.</span></span><br /><br /> <span data-ttu-id="cf546-286">Wenn 0 (und EnableNonUTF8 nicht null) ist, versucht `http.sys`, es als ANSI oder DBCS zu decodieren. Wenn dies nicht erfolgreich ist, versucht es, eine UTF-8-Konvertierung durch zukonvertieren.</span><span class="sxs-lookup"><span data-stu-id="cf546-286">If zero (and EnableNonUTF8 is non-zero), `http.sys` tries to decode it as ANSI or DBCS; if that is not successful, it tries a UTF-8 conversion.</span></span>|  
  
 <span data-ttu-id="cf546-287">Wenn <xref:System.Net.HttpListener> eine Anforderung empfängt, wird der konvertierte URI von `http.sys` als Eingabe für die <xref:System.Net.HttpListenerRequest.Url%2A>-Eigenschaft verwendet.</span><span class="sxs-lookup"><span data-stu-id="cf546-287">When <xref:System.Net.HttpListener> receives a request, it uses the converted URI from `http.sys` as input to the <xref:System.Net.HttpListenerRequest.Url%2A> property.</span></span>  
  
 <span data-ttu-id="cf546-288">Es besteht die Notwendigkeit, Zeichen neben Zeichen und Zahlen in URIs zu unterstützen.</span><span class="sxs-lookup"><span data-stu-id="cf546-288">There is a need for supporting characters besides characters and numbers in URIs.</span></span> <span data-ttu-id="cf546-289">Ein Beispiel ist der folgende URI, der zum Abrufen von Kundeninformationen für die Kundennummer "1/3812" verwendet wird:</span><span class="sxs-lookup"><span data-stu-id="cf546-289">An example is the following URI, which is used to retrieve customer information for customer number "1/3812":</span></span>  
  
 `http://www.contoso.com/Customer('1%2F3812')/`  
  
 <span data-ttu-id="cf546-290">Notieren Sie sich den Prozentsatz codierten Schrägstrich im URI (% 2F).</span><span class="sxs-lookup"><span data-stu-id="cf546-290">Note the percent-encoded slash in the Uri (%2F).</span></span> <span data-ttu-id="cf546-291">Dies ist erforderlich, da der Schrägstrich in diesem Fall Daten und kein Pfad Trennzeichen darstellt.</span><span class="sxs-lookup"><span data-stu-id="cf546-291">This is necessary, since in this case the slash character represents data and not a path delimiter.</span></span>  
  
 <span data-ttu-id="cf546-292">Wenn die Zeichenfolge an den URI-Konstruktor übergeben wird, führt dies zu folgendem URI:</span><span class="sxs-lookup"><span data-stu-id="cf546-292">Passing the string to Uri constructor will lead to the following URI:</span></span>  
  
 `http://www.contoso.com/Customer('1/3812')/`  
  
 <span data-ttu-id="cf546-293">Wenn Sie den Pfad in seine Segmente aufteilen, werden die folgenden Elemente angezeigt:</span><span class="sxs-lookup"><span data-stu-id="cf546-293">Splitting the path into its segments would result in the following elements:</span></span>  
  
 `Customer('1`  
  
 `3812')`  
  
 <span data-ttu-id="cf546-294">Dies ist nicht die Absicht des Absenders der Anforderung.</span><span class="sxs-lookup"><span data-stu-id="cf546-294">This is not the intent of the sender of the request.</span></span>  
  
 <span data-ttu-id="cf546-295">Wenn die <xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A>-Eigenschaft auf false festgelegt ist, wird beim Empfangen einer Anforderung durch den <xref:System.Net.HttpListener> der unformatierte URI anstelle des konvertierten URI von `http.sys` als Eingabe für die <xref:System.Net.HttpListenerRequest.Url%2A>-Eigenschaft verwendet.</span><span class="sxs-lookup"><span data-stu-id="cf546-295">If the <xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A> property is set to false, then when the <xref:System.Net.HttpListener> receives a request, it uses the raw URI instead of the converted URI from `http.sys` as input to the <xref:System.Net.HttpListenerRequest.Url%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf546-296">Im folgenden Codebeispiel wird die Verwendung der <xref:System.Net.HttpListenerRequest.Url%2A>-Eigenschaft veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="cf546-296">The following code example demonstrates using the <xref:System.Net.HttpListenerRequest.Url%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
 [!code-vb[Net_Listener_Basic#15](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Configuration.HttpListenerElement" />
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/index.md"><span data-ttu-id="cf546-297">Netzwerkeinstellungsschema</span><span class="sxs-lookup"><span data-stu-id="cf546-297">Network Settings Schema</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/62f121fd-3f2e-4033-bb39-48ae996bfbd9"><span data-ttu-id="cf546-298">&lt;HttpListener&gt;-Element (Netzwerkeinstellungen)</span><span class="sxs-lookup"><span data-stu-id="cf546-298">&lt;httpListener&gt; Element (Network Settings)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UrlReferrer">
      <MemberSignature Language="C#" Value="public Uri UrlReferrer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri UrlReferrer" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.UrlReferrer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UrlReferrer As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ UrlReferrer { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UrlReferrer : Uri" Usage="System.Net.HttpListenerRequest.UrlReferrer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf546-299">Ruft den URI (Uniform Resource Identifier) der Ressource ab, die den Client an den Server verwiesen hat.</span><span class="sxs-lookup"><span data-stu-id="cf546-299">Gets the Uniform Resource Identifier (URI) of the resource that referred the client to the server.</span></span></summary>
        <value><span data-ttu-id="cf546-300">Ein <see cref="T:System.Uri" />-Objekt, das den Text des <see cref="F:System.Net.HttpRequestHeader.Referer" />-Headers der Anforderung enthält, oder <see langword="null" />, wenn der Header nicht in die Anforderung eingefügt wurde.</span><span class="sxs-lookup"><span data-stu-id="cf546-300">A <see cref="T:System.Uri" /> object that contains the text of the request's <see cref="F:System.Net.HttpRequestHeader.Referer" /> header, or <see langword="null" /> if the header was not included in the request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf546-301">Wenn ein Client einen Hyperlink zum angeforderten URI befolgt hat, enthält die Anforderung möglicherweise einen `Referrer`-Header, der den URI der Ressource identifiziert, die den Hyperlink enthielt.</span><span class="sxs-lookup"><span data-stu-id="cf546-301">If a client has followed a hyperlink to the requested URI, its request might contain a `Referrer` header that identifies the URI of the resource that contained the hyperlink.</span></span>  
  
 <span data-ttu-id="cf546-302">Clients können eine <xref:System.Net.HttpRequestHeader.Referer> Kopfzeile fälschen oder nicht angeben.</span><span class="sxs-lookup"><span data-stu-id="cf546-302">Clients can falsify or choose not to present a <xref:System.Net.HttpRequestHeader.Referer> header.</span></span> <span data-ttu-id="cf546-303">Daher kann die <xref:System.Net.HttpListenerRequest.UrlReferrer%2A>-Eigenschaft nützlich sein, um grundlegende Trends im Webdatenverkehr zu identifizieren. Sie sollten Sie nicht als Teil eines Autorisierungs Schemas verwenden, um den Zugriff auf Daten zu steuern.</span><span class="sxs-lookup"><span data-stu-id="cf546-303">Therefore, while the <xref:System.Net.HttpListenerRequest.UrlReferrer%2A> property can be useful for identifying basic trends in Web traffic; you should not use it as part of an authorization scheme to control access to data.</span></span>  
  
 <span data-ttu-id="cf546-304">Eine umfassende Liste mit Anforderungs Headern finden Sie in der <xref:System.Net.HttpRequestHeader>-Enumeration.</span><span class="sxs-lookup"><span data-stu-id="cf546-304">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.</span></span>  
  
 <span data-ttu-id="cf546-305">Der <xref:System.Net.HttpListenerRequest.UrlReferrer%2A> ist NULL, wenn in der Anforderung kein `Referrer` Header vorhanden ist oder wenn der `Referrer` Header in der Anforderung vorhanden ist, aber nicht in einen gültigen <xref:System.Uri>analysiert wird.</span><span class="sxs-lookup"><span data-stu-id="cf546-305">The <xref:System.Net.HttpListenerRequest.UrlReferrer%2A> is null when there is no `Referrer` header in the request or when the `Referrer` header is present in the request but does not parse to a valid <xref:System.Uri>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf546-306">Im folgenden Codebeispiel wird die Verwendung dieser Eigenschaft veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="cf546-306">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
 [!code-vb[Net_Listener_Basic#15](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="UserAgent">
      <MemberSignature Language="C#" Value="public string UserAgent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserAgent" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.UserAgent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserAgent As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserAgent { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserAgent : string" Usage="System.Net.HttpListenerRequest.UserAgent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf546-307">Ruft den vom Client dargestellten Benutzer-Agent ab.</span><span class="sxs-lookup"><span data-stu-id="cf546-307">Gets the user agent presented by the client.</span></span></summary>
        <value><span data-ttu-id="cf546-308">Ein <see cref="T:System.String" />-Objekt, das den Text des <see langword="User-Agent" />-Headers der Anforderung enthält.</span><span class="sxs-lookup"><span data-stu-id="cf546-308">A <see cref="T:System.String" /> object that contains the text of the request's <see langword="User-Agent" /> header.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf546-309">Der `User-Agent`-Header enthält normalerweise Text, der den Namen und die Versionsnummer der Software angibt, die zum Generieren der Anforderung verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="cf546-309">The `User-Agent` header typically contains text that identifies the name and version number of the software used to generate the request.</span></span>  
  
 <span data-ttu-id="cf546-310">Eine umfassende Liste mit Anforderungs Headern finden Sie in der <xref:System.Net.HttpRequestHeader>-Enumeration.</span><span class="sxs-lookup"><span data-stu-id="cf546-310">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.</span></span>  
  
 <span data-ttu-id="cf546-311">Der <xref:System.Net.HttpListenerRequest.UserAgent%2A> ist NULL, wenn in der Anforderung kein `User-Agent` Header vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="cf546-311">The <xref:System.Net.HttpListenerRequest.UserAgent%2A> is null when there is no `User-Agent` header in the request.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf546-312">Im folgenden Codebeispiel wird die Verwendung dieser Eigenschaft veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="cf546-312">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
 [!code-vb[Net_Listener_Basic#15](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="UserHostAddress">
      <MemberSignature Language="C#" Value="public string UserHostAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserHostAddress" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.UserHostAddress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserHostAddress As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserHostAddress { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserHostAddress : string" Usage="System.Net.HttpListenerRequest.UserHostAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf546-313">Ruft die IP-Adresse und Anschlussnummer des Servers ab, an den die Anforderung gerichtet ist.</span><span class="sxs-lookup"><span data-stu-id="cf546-313">Gets the server IP address and port number to which the request is directed.</span></span></summary>
        <value><span data-ttu-id="cf546-314">Ein <see cref="T:System.String" />, der die Hostadressinformationen enthält.</span><span class="sxs-lookup"><span data-stu-id="cf546-314">A <see cref="T:System.String" /> that contains the host address information.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf546-315">Die von dieser Eigenschaft zurückgegebenen Informationen sind auch im <xref:System.Net.HttpListenerRequest.LocalEndPoint%2A>-Eigenschafts Wert verfügbar.</span><span class="sxs-lookup"><span data-stu-id="cf546-315">The information returned by this property is also available in the <xref:System.Net.HttpListenerRequest.LocalEndPoint%2A> property value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf546-316">Im folgenden Codebeispiel wird der Wert dieser Eigenschaft angezeigt.</span><span class="sxs-lookup"><span data-stu-id="cf546-316">The following code example displays the value of this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
 [!code-vb[Net_Listener_Basic#15](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="UserHostName">
      <MemberSignature Language="C#" Value="public string UserHostName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserHostName" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.UserHostName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserHostName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserHostName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserHostName : string" Usage="System.Net.HttpListenerRequest.UserHostName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf546-317">Ruft den DNS-Namen und ggf. die vom Client angegebene Anschlussnummer ab.</span><span class="sxs-lookup"><span data-stu-id="cf546-317">Gets the DNS name and, if provided, the port number specified by the client.</span></span></summary>
        <value><span data-ttu-id="cf546-318">Ein <see cref="T:System.String" />-Wert, der den Text des <see langword="Host" />-Headers der Anforderung enthält.</span><span class="sxs-lookup"><span data-stu-id="cf546-318">A <see cref="T:System.String" /> value that contains the text of the request's <see langword="Host" /> header.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf546-319">Der `Host`-Header enthält den angeforderten Server Hostnamen und die Portnummer, sofern angegeben, durch einen Doppelpunkt getrennt (z. b. `www.contoso.com:8080`).</span><span class="sxs-lookup"><span data-stu-id="cf546-319">The `Host` header contains the requested server host name and port number, if specified, separated by a colon (for example, `www.contoso.com:8080`).</span></span>  
  
 <span data-ttu-id="cf546-320">Sie können diese Eigenschaft verwenden, um je nach dem in der Anforderung angegebenen Hostnamen unterschiedliche Antworten zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="cf546-320">You can use this property to return different responses depending on the host name specified in the request.</span></span>  
  
 <span data-ttu-id="cf546-321">Eine umfassende Liste mit Anforderungs Headern finden Sie in der <xref:System.Net.HttpRequestHeader>-Enumeration.</span><span class="sxs-lookup"><span data-stu-id="cf546-321">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf546-322">Im folgenden Codebeispiel wird die Verwendung dieser Eigenschaft veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="cf546-322">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
 [!code-vb[Net_Listener_Basic#15](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="UserLanguages">
      <MemberSignature Language="C#" Value="public string[] UserLanguages { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] UserLanguages" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.UserLanguages" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserLanguages As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ UserLanguages { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserLanguages : string[]" Usage="System.Net.HttpListenerRequest.UserLanguages" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf546-323">Ruft die natürlichen Sprachen ab, die für die Antwort bevorzugt werden.</span><span class="sxs-lookup"><span data-stu-id="cf546-323">Gets the natural languages that are preferred for the response.</span></span></summary>
        <value><span data-ttu-id="cf546-324">Ein <see cref="T:System.String" />-Array, das die im <see cref="F:System.Net.HttpRequestHeader.AcceptLanguage" />-Header der Anforderung angegebenen Sprachen enthält, oder <see langword="null" />, wenn in der Clientanforderung kein <see cref="F:System.Net.HttpRequestHeader.AcceptLanguage" />-Header enthalten war.</span><span class="sxs-lookup"><span data-stu-id="cf546-324">A <see cref="T:System.String" /> array that contains the languages specified in the request's <see cref="F:System.Net.HttpRequestHeader.AcceptLanguage" /> header or <see langword="null" /> if the client request did not include an <see cref="F:System.Net.HttpRequestHeader.AcceptLanguage" /> header.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf546-325">Eine ausführliche Beschreibung der `Accept-Language` Kopfzeile finden Sie unter RFC 2616, Abschnitt 14,4, verfügbar unter [https://www.rfc-editor.org](https://www.rfc-editor.org/).</span><span class="sxs-lookup"><span data-stu-id="cf546-325">For a detailed description of the `Accept-Language` header, see RFC 2616 Section 14.4, available at [https://www.rfc-editor.org](https://www.rfc-editor.org/).</span></span>  
  
 <span data-ttu-id="cf546-326">Eine umfassende Liste mit Anforderungs Headern finden Sie in der <xref:System.Net.HttpRequestHeader>-Enumeration.</span><span class="sxs-lookup"><span data-stu-id="cf546-326">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf546-327">Im folgenden Codebeispiel werden die Sprachen aus dem `Accept-Language`-Header der Anforderung angezeigt.</span><span class="sxs-lookup"><span data-stu-id="cf546-327">The following code example displays the languages from the request's `Accept-Language` header.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
 [!code-vb[Net_Listener_Basic#15](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
  </Members>
</Type>
