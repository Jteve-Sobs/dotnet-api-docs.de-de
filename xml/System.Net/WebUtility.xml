<Type Name="WebUtility" FullName="System.Net.WebUtility">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="00077ce3265b7c9b8c9786ed662a0c1ce1775cb1" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="40449474" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class WebUtility" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit WebUtility extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.WebUtility" />
  <TypeSignature Language="VB.NET" Value="Public Class WebUtility" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebUtility abstract sealed" />
  <TypeSignature Language="F#" Value="type WebUtility = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="eb4da-101">Stellt Methoden zum Codieren und Decodieren von URLs bei der Verarbeitung von Webanforderungen bereit.</span>
      <span class="sxs-lookup">
        <span data-stu-id="eb4da-101">Provides methods for encoding and decoding URLs when processing Web requests.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4da-102">Die <xref:System.Web.HttpUtility> -Klasse enthält, codieren und Decodieren von Hilfsmethoden für die Verwendung mit HTML-Codierung von Zeichenfolgen.</span><span class="sxs-lookup"><span data-stu-id="eb4da-102">The <xref:System.Web.HttpUtility> class contains encoding and decoding utility methods for use with HTML-encode strings.</span></span> <span data-ttu-id="eb4da-103">Die <xref:System.Uri?displayProperty=nameWithType> Klasse enthält auch die Methoden und Eigenschaften, die für ähnliche Zwecke verwendet werden können.</span><span class="sxs-lookup"><span data-stu-id="eb4da-103">The <xref:System.Uri?displayProperty=nameWithType> class also contains methods and properties that can be used for similar purposes.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Uri" />
    <altmember cref="T:System.Web.HttpUtility" />
    <altmember cref="T:System.Web.HttpServerUtility" />
    <altmember cref="P:System.Web.HttpContext.Server" />
  </Docs>
  <Members>
    <MemberGroup MemberName="HtmlDecode">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="eb4da-104">Konvertiert eine Zeichenfolge, die für die HTTP-Übertragung HTML-codiert wurde, in eine decodierte Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4da-104">Converts a string that has been HTML-encoded for HTTP transmission into a decoded string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlDecode">
      <MemberSignature Language="C#" Value="public static string HtmlDecode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlDecode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.HtmlDecode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlDecode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlDecode(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member HtmlDecode : string -&gt; string" Usage="System.Net.WebUtility.HtmlDecode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="eb4da-105">Die zu decodierende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4da-105">The string to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb4da-106">Konvertiert eine Zeichenfolge, die für die HTTP-Übertragung HTML-codiert wurde, in eine decodierte Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4da-106">Converts a string that has been HTML-encoded for HTTP transmission into a decoded string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eb4da-107">Eine decodierte Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4da-107">A decoded string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4da-108">Wenn Zeichen wie Leerzeichen und Satzzeichen in einem HTTP-Datenstrom übergeben werden, können sie an der empfangenden Seite fehlinterpretiert werden.</span><span class="sxs-lookup"><span data-stu-id="eb4da-108">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="eb4da-109">HTML-Codierung konvertiert Zeichen, die nicht in HTML-Code in Zeichenentitäten zulässig sind. Die HTML-Decodierung kehrt die Codierung.</span><span class="sxs-lookup"><span data-stu-id="eb4da-109">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="eb4da-110">Beispielsweise wird bei der Einbettung in einen Textblock, der Zeichen `<` und `>` knotentypinformationen als `&lt;` und `&gt;` für HTTP-Übertragung.</span><span class="sxs-lookup"><span data-stu-id="eb4da-110">For example, when embedded in a block of text, the characters `<` and `>` are encoded as `&lt;` and `&gt;` for HTTP transmission.</span></span>  
  
 <span data-ttu-id="eb4da-111">Wenn die `value` Parameter `null`, und klicken Sie dann die zurückgegebene decodierte Zeichenfolge `null`.</span><span class="sxs-lookup"><span data-stu-id="eb4da-111">If the `value` parameter is `null`, then the returned decoded string is `null`.</span></span> <span data-ttu-id="eb4da-112">Wenn die `value` Parameter ist eine leere Zeichenfolge, und klicken Sie dann die zurückgegebene decodierte Zeichenfolge ist eine leere Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="eb4da-112">If the `value` parameter is an empty string, then the returned decoded string is an empty string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.WebUtility.HtmlEncode(System.String)" />
        <altmember cref="M:System.Web.HttpUtility.HtmlEncode(System.String)" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="HtmlDecode">
      <MemberSignature Language="C#" Value="public static void HtmlDecode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HtmlDecode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.HtmlDecode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub HtmlDecode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void HtmlDecode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="static member HtmlDecode : string * System.IO.TextWriter -&gt; unit" Usage="System.Net.WebUtility.HtmlDecode (value, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="eb4da-113">Die zu decodierende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4da-113">The string to decode.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="eb4da-114">Ein <see cref="T:System.IO.TextWriter" />-Ausgabestream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4da-114">A <see cref="T:System.IO.TextWriter" /> stream of output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb4da-115">Konvertiert eine HTML-codierte Zeichenfolge in eine decodierte Zeichenfolge und sendet die decodierte Zeichenfolge an einen <see cref="T:System.IO.TextWriter" />-Ausgabestream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4da-115">Converts a string that has been HTML-encoded into a decoded string, and sends the decoded string to a <see cref="T:System.IO.TextWriter" /> output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4da-116">Wenn Zeichen wie Leerzeichen und Satzzeichen in einem HTTP-Datenstrom übergeben werden, können sie an der empfangenden Seite fehlinterpretiert werden.</span><span class="sxs-lookup"><span data-stu-id="eb4da-116">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="eb4da-117">HTML-Codierung konvertiert Zeichen, die nicht in HTML-Code in Zeichenentitäten zulässig sind. Die HTML-Decodierung kehrt die Codierung.</span><span class="sxs-lookup"><span data-stu-id="eb4da-117">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="eb4da-118">Beispielsweise wird bei der Einbettung in einen Textblock, der Zeichen `<` und `>` knotentypinformationen als `&lt;` und `&gt;` für HTTP-Übertragung.</span><span class="sxs-lookup"><span data-stu-id="eb4da-118">For example, when embedded in a block of text, the characters `<` and `>` are encoded as `&lt;` and `&gt;` for HTTP transmission.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="eb4da-119">Der <paramref name="output" />-Parameter kann nicht <see langword="null" /> sein, wenn der <paramref name="value" />-Parameter nicht <see langword="null" /> ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4da-119">The <paramref name="output" /> parameter cannot be <see langword="null" /> if the <paramref name="value" /> parameter is not <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.WebUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
        <altmember cref="M:System.Web.HttpUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <MemberGroup MemberName="HtmlEncode">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="eb4da-120">Konvertiert eine Zeichenfolge in eine HTML-codierte Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4da-120">Converts a string to an HTML-encoded string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public static string HtmlEncode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlEncode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.HtmlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlEncode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlEncode(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member HtmlEncode : string -&gt; string" Usage="System.Net.WebUtility.HtmlEncode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="eb4da-121">Die zu codierende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4da-121">The string to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb4da-122">Konvertiert eine Zeichenfolge in eine HTML-codierte Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4da-122">Converts a string to an HTML-encoded string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eb4da-123">Eine codierte Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4da-123">An encoded string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4da-124">Wenn Zeichen wie Leerzeichen und Satzzeichen in einem HTTP-Datenstrom übergeben werden, können sie an der empfangenden Seite fehlinterpretiert werden.</span><span class="sxs-lookup"><span data-stu-id="eb4da-124">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="eb4da-125">HTML-Codierung konvertiert Zeichen, die nicht in HTML-Code in Zeichenentitäten zulässig sind. Die HTML-Decodierung kehrt die Codierung.</span><span class="sxs-lookup"><span data-stu-id="eb4da-125">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="eb4da-126">Beispielsweise wird bei der Einbettung in einen Textblock, der Zeichen `<` und `>` knotentypinformationen als `&lt;` und `&gt;` für HTTP-Übertragung.</span><span class="sxs-lookup"><span data-stu-id="eb4da-126">For example, when embedded in a block of text, the characters `<` and `>` are encoded as `&lt;` and `&gt;` for HTTP transmission.</span></span>  
  
 <span data-ttu-id="eb4da-127">Wenn die `value` Parameter `null`, und klicken Sie dann die zurückgegebene codierte Zeichenfolge `null`.</span><span class="sxs-lookup"><span data-stu-id="eb4da-127">If the `value` parameter is `null`, then the returned encoded string is `null`.</span></span> <span data-ttu-id="eb4da-128">Wenn die `value` Parameter ist eine leere Zeichenfolge, und klicken Sie dann die zurückgegebene codierte Zeichenfolge ist eine leere Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="eb4da-128">If the `value` parameter is an empty string, then the returned encoded string is an empty string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.WebUtility.HtmlDecode(System.String)" />
        <altmember cref="M:System.Web.HttpUtility.HtmlDecode(System.String)" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public static void HtmlEncode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HtmlEncode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub HtmlEncode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void HtmlEncode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="static member HtmlEncode : string * System.IO.TextWriter -&gt; unit" Usage="System.Net.WebUtility.HtmlEncode (value, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="eb4da-129">Die zu codierende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4da-129">The string to encode.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="eb4da-130">Ein <see cref="T:System.IO.TextWriter" />-Ausgabestream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4da-130">A <see cref="T:System.IO.TextWriter" /> output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb4da-131">Konvertiert eine Zeichenfolge in eine HTML-codierte Zeichenfolge und gibt das Ergebnis in Form eines <see cref="T:System.IO.TextWriter" />-Ausgabestreams zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4da-131">Converts a string into an HTML-encoded string, and returns the output as a <see cref="T:System.IO.TextWriter" /> stream of output.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4da-132">Wenn Zeichen wie Leerzeichen und Satzzeichen in einem HTTP-Datenstrom übergeben werden, können sie an der empfangenden Seite fehlinterpretiert werden.</span><span class="sxs-lookup"><span data-stu-id="eb4da-132">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="eb4da-133">HTML-Codierung konvertiert Zeichen, die nicht in HTML-Code in Zeichenentitäten zulässig sind. Die HTML-Decodierung kehrt die Codierung.</span><span class="sxs-lookup"><span data-stu-id="eb4da-133">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="eb4da-134">Beispielsweise wird bei der Einbettung in einen Textblock, der Zeichen `<` und `>` knotentypinformationen als `&lt;` und `&gt;` für HTTP-Übertragung.</span><span class="sxs-lookup"><span data-stu-id="eb4da-134">For example, when embedded in a block of text, the characters `<` and `>` are encoded as `&lt;` and `&gt;` for HTTP transmission.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="eb4da-135">Der <paramref name="output" />-Parameter kann nicht <see langword="null" /> sein, wenn der <paramref name="value" />-Parameter nicht <see langword="null" /> ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4da-135">The <paramref name="output" /> parameter cannot be <see langword="null" /> if the <paramref name="value" /> parameter is not <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.WebUtility.HtmlDecode(System.String,System.IO.TextWriter)" />
        <altmember cref="M:System.Web.HttpUtility.HtmlDecode(System.String,System.IO.TextWriter)" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="UrlDecode">
      <MemberSignature Language="C#" Value="public static string UrlDecode (string encodedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlDecode(string encodedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.UrlDecode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlDecode (encodedValue As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlDecode(System::String ^ encodedValue);" />
      <MemberSignature Language="F#" Value="static member UrlDecode : string -&gt; string" Usage="System.Net.WebUtility.UrlDecode encodedValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encodedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="encodedValue">
          <span data-ttu-id="eb4da-136">Eine zu decodierende URL-codierte Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4da-136">A URL-encoded string to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb4da-137">Konvertiert eine Zeichenfolge, die für die Übertragung in einer URL codiert wurde, in eine decodierte Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4da-137">Converts a string that has been encoded for transmission in a URL into a decoded string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eb4da-138">Eine decodierte Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4da-138">A decoded string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4da-139">Wenn Zeichen wie Leerzeichen und Satzzeichen in einem HTTP-Datenstrom übergeben werden, können sie an der empfangenden Seite fehlinterpretiert werden.</span><span class="sxs-lookup"><span data-stu-id="eb4da-139">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="eb4da-140">URL-Codierung konvertiert unzulässige Zeichen in einer URL in die entsprechende hexadezimale Escapesequenzen sind.</span><span class="sxs-lookup"><span data-stu-id="eb4da-140">URL encoding converts characters that are not allowed in a URL into equivalent hexadecimal escape sequences.</span></span> <span data-ttu-id="eb4da-141">Die <xref:System.Net.WebUtility.UrlEncode%2A> Methode erstellt eine URL-codierte Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="eb4da-141">The <xref:System.Net.WebUtility.UrlEncode%2A> method creates a URL-encoded string.</span></span>  
  
 <span data-ttu-id="eb4da-142">URL-Decodierung, werden hexadezimale Escapesequenzen durch entsprechende ASCII-Zeichen-Entsprechungen ersetzt.</span><span class="sxs-lookup"><span data-stu-id="eb4da-142">URL decoding replaces hexadecimal escape sequences with corresponding ASCII character equivalents.</span></span> <span data-ttu-id="eb4da-143">Z. B. bei der Einbettung in einen Block von URL-codierte Text die Escapesequenzen `%3c` und `%3e` werden in Zeichen decodiert, `<` und `>`.</span><span class="sxs-lookup"><span data-stu-id="eb4da-143">For example, when embedded in a block of URL-encoded text, the escape sequences `%3c` and `%3e` are decoded into the characters `<` and `>`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlDecodeToBytes">
      <MemberSignature Language="C#" Value="public static byte[] UrlDecodeToBytes (byte[] encodedValue, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlDecodeToBytes(unsigned int8[] encodedValue, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.UrlDecodeToBytes(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlDecodeToBytes (encodedValue As Byte(), offset As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlDecodeToBytes(cli::array &lt;System::Byte&gt; ^ encodedValue, int offset, int count);" />
      <MemberSignature Language="F#" Value="static member UrlDecodeToBytes : byte[] * int * int -&gt; byte[]" Usage="System.Net.WebUtility.UrlDecodeToBytes (encodedValue, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encodedValue" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="encodedValue">
          <span data-ttu-id="eb4da-144">Ein zu decodierende URL-codiertes <see cref="T:System.Byte" /> Array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4da-144">A URL-encoded <see cref="T:System.Byte" /> array to decode.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="eb4da-145">Der Offset, in Bytes, vom Anfang des zu decodierenden <see cref="T:System.Byte" /> Arrays.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4da-145">The offset, in bytes, from the start of the <see cref="T:System.Byte" /> array to decode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="eb4da-146">Die Anzahl, in Bytes, die vom <see cref="T:System.Byte" /> Array decodiert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4da-146">The count, in bytes, to decode from the <see cref="T:System.Byte" /> array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb4da-147">Konvertiert ein codiertes Bytearray, das für die Übertragung in eine URL in ein codiertes Bytearray  codiert wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4da-147">Converts an encoded byte array that has been encoded for transmission in a URL into a decoded byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eb4da-148">Ein decodiertes <see cref="T:System.Byte" /> Array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4da-148">A decoded <see cref="T:System.Byte" /> array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4da-149">Wenn Zeichen wie Leerzeichen und Satzzeichen in einem HTTP-Datenstrom übergeben werden, können sie an der empfangenden Seite fehlinterpretiert werden.</span><span class="sxs-lookup"><span data-stu-id="eb4da-149">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="eb4da-150">URL-Codierung konvertiert unzulässige Zeichen in einer URL in die entsprechende hexadezimale Escapesequenzen sind.</span><span class="sxs-lookup"><span data-stu-id="eb4da-150">URL encoding converts characters that are not allowed in a URL into equivalent hexadecimal escape sequences.</span></span> <span data-ttu-id="eb4da-151">Die <xref:System.Net.WebUtility.UrlEncodeToBytes%2A> Methode erstellt eine URL-codiertes Bytearray.</span><span class="sxs-lookup"><span data-stu-id="eb4da-151">The <xref:System.Net.WebUtility.UrlEncodeToBytes%2A> method creates a URL-encoded byte array.</span></span>  
  
 <span data-ttu-id="eb4da-152">URL-Decodierung, werden hexadezimale Escapesequenzen durch entsprechende ASCII-Zeichen-Entsprechungen ersetzt.</span><span class="sxs-lookup"><span data-stu-id="eb4da-152">URL decoding replaces hexadecimal escape sequences with corresponding ASCII character equivalents.</span></span> <span data-ttu-id="eb4da-153">Z. B. bei der Einbettung in einen Block von URL-codierte Text die Escapesequenzen `%3c` und `%3e` werden in Zeichen decodiert, `<` und `>`.</span><span class="sxs-lookup"><span data-stu-id="eb4da-153">For example, when embedded in a block of URL-encoded text, the escape sequences `%3c` and `%3e` are decoded into the characters `<` and `>`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="public static string UrlEncode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlEncode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.UrlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlEncode(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member UrlEncode : string -&gt; string" Usage="System.Net.WebUtility.UrlEncode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="eb4da-154">Der als URL zu codierende Text.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4da-154">The text to URL-encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb4da-155">Konvertiert eine Textzeichenfolge in eine URL-codierte Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4da-155">Converts a text string into a URL-encoded string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eb4da-156">Eine URL-codierte Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4da-156">A URL-encoded string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4da-157">Wenn Zeichen wie Leerzeichen und Satzzeichen in einem HTTP-Datenstrom übergeben werden, können sie an der empfangenden Seite fehlinterpretiert werden.</span><span class="sxs-lookup"><span data-stu-id="eb4da-157">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="eb4da-158">URL-Codierung ersetzt Zeichen, die nicht mit Zeichenentitäten bestehend aus hexadezimale Escapesequenzen in einer URL zulässig sind.</span><span class="sxs-lookup"><span data-stu-id="eb4da-158">URL encoding replaces characters that are not allowed in a URL with character-entity equivalents consisting of hexadecimal escape sequences.</span></span> <span data-ttu-id="eb4da-159">Die konvertierte Zeichenfolge wird erwartet, das UTF-8-Format entsprechen.</span><span class="sxs-lookup"><span data-stu-id="eb4da-159">The converted string is expected to conform to the UTF-8 format.</span></span>  
  
 <span data-ttu-id="eb4da-160">URL-Codierung ersetzt alle Zeichencodes mit Ausnahme von Buchstaben, Zahlen und Interpunktionszeichen folgende:</span><span class="sxs-lookup"><span data-stu-id="eb4da-160">URL encoding replaces all character codes except for letters, numbers, and the following punctuation characters:</span></span>  
  
-   <span data-ttu-id="eb4da-161">`-` (Minuszeichen)</span><span class="sxs-lookup"><span data-stu-id="eb4da-161">`-` (minus sign)</span></span>  
  
-   <span data-ttu-id="eb4da-162">`_` (Unterstrich)</span><span class="sxs-lookup"><span data-stu-id="eb4da-162">`_` (underscore)</span></span>  
  
-   <span data-ttu-id="eb4da-163">`.` (Punkt)</span><span class="sxs-lookup"><span data-stu-id="eb4da-163">`.` (period)</span></span>  
  
-   <span data-ttu-id="eb4da-164">`!` (Ausrufezeichen)</span><span class="sxs-lookup"><span data-stu-id="eb4da-164">`!` (exclamation point)</span></span>  
  
-   <span data-ttu-id="eb4da-165">`*` (Sternchen)</span><span class="sxs-lookup"><span data-stu-id="eb4da-165">`*` (asterisk)</span></span>  
  
-   <span data-ttu-id="eb4da-166">`(` und `)` (öffnende und schließende runde Klammer)</span><span class="sxs-lookup"><span data-stu-id="eb4da-166">`(` and `)` (opening and closing parentheses)</span></span>  
  
 <span data-ttu-id="eb4da-167">Bei der Einbettung in einen Block mit Text in einer URL, die Zeichen übertragen werden beispielsweise `<` und `>` knotentypinformationen als `%3c` und `%3e`.</span><span class="sxs-lookup"><span data-stu-id="eb4da-167">For example, when embedded in a block of text to be transmitted in a URL, the characters `<` and `>` are encoded as `%3c` and `%3e`.</span></span>  
  
 <span data-ttu-id="eb4da-168">Die <xref:System.Net.WebUtility.UrlDecode%2A> Methode kehrt die Codierung.</span><span class="sxs-lookup"><span data-stu-id="eb4da-168">The <xref:System.Net.WebUtility.UrlDecode%2A> method reverses the encoding.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncodeToBytes">
      <MemberSignature Language="C#" Value="public static byte[] UrlEncodeToBytes (byte[] value, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlEncodeToBytes(unsigned int8[] value, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.UrlEncodeToBytes(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncodeToBytes (value As Byte(), offset As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlEncodeToBytes(cli::array &lt;System::Byte&gt; ^ value, int offset, int count);" />
      <MemberSignature Language="F#" Value="static member UrlEncodeToBytes : byte[] * int * int -&gt; byte[]" Usage="System.Net.WebUtility.UrlEncodeToBytes (value, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="eb4da-169">Das mit URL zu codierende <see cref="T:System.Byte" /> Array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4da-169">The <see cref="T:System.Byte" /> array to URL-encode.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="eb4da-170">Der Offset, in Bytes, vom Anfang des zu codierenden <see cref="T:System.Byte" /> Arrays.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4da-170">The offset, in bytes, from the start of the <see cref="T:System.Byte" /> array to encode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="eb4da-171">Die Anzahl, in Bytes, die vom <see cref="T:System.Byte" /> Array codiert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4da-171">The count, in bytes, to encode from the <see cref="T:System.Byte" /> array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb4da-172">Konvertiert ein Bytearray in ein URL-codiertes URL-Bytearray.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4da-172">Converts a byte array into a URL-encoded byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eb4da-173">Ein codiertes <see cref="T:System.Byte" /> array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4da-173">An encoded <see cref="T:System.Byte" /> array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4da-174">Wenn Zeichen wie Leerzeichen und Satzzeichen in einem HTTP-Datenstrom übergeben werden, können sie an der empfangenden Seite fehlinterpretiert werden.</span><span class="sxs-lookup"><span data-stu-id="eb4da-174">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="eb4da-175">URL-Codierung ersetzt Zeichen, die nicht mit Zeichenentitäten bestehend aus hexadezimale Escapesequenzen in einer URL zulässig sind.</span><span class="sxs-lookup"><span data-stu-id="eb4da-175">URL encoding replaces characters that are not allowed in a URL with character-entity equivalents consisting of hexadecimal escape sequences.</span></span> <span data-ttu-id="eb4da-176">Die konvertierte Zeichenfolge wird erwartet, das UTF-8-Format entsprechen.</span><span class="sxs-lookup"><span data-stu-id="eb4da-176">The converted string is expected to conform to the UTF-8 format.</span></span>  
  
 <span data-ttu-id="eb4da-177">URL-Codierung ersetzt alle Zeichencodes mit Ausnahme von Buchstaben, Zahlen und Interpunktionszeichen folgende:</span><span class="sxs-lookup"><span data-stu-id="eb4da-177">URL encoding replaces all character codes except for letters, numbers, and the following punctuation characters:</span></span>  
  
-   <span data-ttu-id="eb4da-178">`-` (Minuszeichen)</span><span class="sxs-lookup"><span data-stu-id="eb4da-178">`-` (minus sign)</span></span>  
  
-   <span data-ttu-id="eb4da-179">`_` (Unterstrich)</span><span class="sxs-lookup"><span data-stu-id="eb4da-179">`_` (underscore)</span></span>  
  
-   <span data-ttu-id="eb4da-180">`.` (Punkt)</span><span class="sxs-lookup"><span data-stu-id="eb4da-180">`.` (period)</span></span>  
  
-   <span data-ttu-id="eb4da-181">`!` (Ausrufezeichen)</span><span class="sxs-lookup"><span data-stu-id="eb4da-181">`!` (exclamation point)</span></span>  
  
-   <span data-ttu-id="eb4da-182">`*` (Sternchen)</span><span class="sxs-lookup"><span data-stu-id="eb4da-182">`*` (asterisk)</span></span>  
  
-   <span data-ttu-id="eb4da-183">`'` (einfaches Anführungszeichen)</span><span class="sxs-lookup"><span data-stu-id="eb4da-183">`'` (single quotation mark)</span></span>  
  
-   <span data-ttu-id="eb4da-184">`(` und `)` (öffnende und schließende runde Klammer)</span><span class="sxs-lookup"><span data-stu-id="eb4da-184">`(` and `)` (opening and closing parentheses)</span></span>  
  
 <span data-ttu-id="eb4da-185">Bei der Einbettung in einen Block mit Text in einer URL, die Zeichen übertragen werden beispielsweise `<` und `>` knotentypinformationen als `%3c` und `%3e`.</span><span class="sxs-lookup"><span data-stu-id="eb4da-185">For example, when embedded in a block of text to be transmitted in a URL, the characters `<` and `>` are encoded as `%3c` and `%3e`.</span></span>  
  
 <span data-ttu-id="eb4da-186">Die <xref:System.Net.WebUtility.UrlDecodeToBytes%2A> Methode kehrt die Codierung.</span><span class="sxs-lookup"><span data-stu-id="eb4da-186">The <xref:System.Net.WebUtility.UrlDecodeToBytes%2A> method reverses the encoding.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>