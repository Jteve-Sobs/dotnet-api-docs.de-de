<Type Name="HttpListenerContext" FullName="System.Net.HttpListenerContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fc1e87b533e11c673d551750dfe4f38bb9f28850" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48661835" /></Metadata><TypeSignature Language="C#" Value="public sealed class HttpListenerContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpListenerContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.HttpListenerContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpListenerContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpListenerContext sealed" />
  <TypeSignature Language="F#" Value="type HttpListenerContext = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.HttpListener</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="9228f-101">Ermöglicht den Zugriff auf die von der <see cref="T:System.Net.HttpListener" />-Klasse verwendeten Anforderungs- und Antwortobjekte.</span><span class="sxs-lookup"><span data-stu-id="9228f-101">Provides access to the request and response objects used by the <see cref="T:System.Net.HttpListener" /> class.</span></span> <span data-ttu-id="9228f-102">Diese Klasse kann nicht vererbt werden.</span><span class="sxs-lookup"><span data-stu-id="9228f-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9228f-103">Diese Klasse stellt die Informationen im Zusammenhang mit der die Anforderung eines Clients Hypertext Transfer Protocol (HTTP) von verarbeiteten ein <xref:System.Net.HttpListener> Objekt.</span><span class="sxs-lookup"><span data-stu-id="9228f-103">This class provides the information related to a client's Hypertext Transfer Protocol (HTTP) request being processed by an <xref:System.Net.HttpListener> object.</span></span> <span data-ttu-id="9228f-104">Diese Klasse verfügt auch über Methoden, mit denen ein <xref:System.Net.HttpListener> Objekt um eine WebSocket-Verbindung zu akzeptieren.</span><span class="sxs-lookup"><span data-stu-id="9228f-104">This class also has methods that allow an <xref:System.Net.HttpListener> object to accept a WebSocket connection.</span></span>  
  
 <span data-ttu-id="9228f-105">Die <xref:System.Net.HttpListener.GetContext%2A> Methodenrückgabe Instanzen der <xref:System.Net.HttpListenerContext> Klasse.</span><span class="sxs-lookup"><span data-stu-id="9228f-105">The <xref:System.Net.HttpListener.GetContext%2A> method returns instances of the <xref:System.Net.HttpListenerContext> class.</span></span> <span data-ttu-id="9228f-106">Verwenden Sie zum Abrufen des Objekts, das die Clientanforderung darstellt, die <xref:System.Net.HttpListenerContext.Request%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="9228f-106">To get the object that represents the client request, use the <xref:System.Net.HttpListenerContext.Request%2A> property.</span></span> <span data-ttu-id="9228f-107">Zum Abrufen des Objekts, das die Antwort, die an den Client von gesendet werden darstellt, die <xref:System.Net.HttpListener>, verwenden Sie die <xref:System.Net.HttpListenerContext.Response%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="9228f-107">To get the object that represents the response that will be sent to the client by the <xref:System.Net.HttpListener>, use the <xref:System.Net.HttpListenerContext.Response%2A> property.</span></span> <span data-ttu-id="9228f-108">Zum Abrufen der Benutzerinformationen von der Client sendet die Anforderung, z. B. den Anmeldenamen und gibt an, ob sie authentifiziert wurde, können Sie die Eigenschaften in Abfragen der <xref:System.Security.Principal.IPrincipal> zurückgegebenes Objekt der <xref:System.Net.HttpListenerContext.User%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="9228f-108">To get user information about the client sending the request, such as its login name and whether it has been authenticated, you can query the properties in the <xref:System.Security.Principal.IPrincipal> object returned by the <xref:System.Net.HttpListenerContext.User%2A> property.</span></span>  
  
 <span data-ttu-id="9228f-109">Schließen einer <xref:System.Net.HttpListenerContext> Objekt sendet die Antwort an den Client und gibt alle vom verwendeten Ressourcen frei, die <xref:System.Net.HttpListenerContext>.</span><span class="sxs-lookup"><span data-stu-id="9228f-109">Closing an <xref:System.Net.HttpListenerContext> object sends the response to the client and frees any resources used by the <xref:System.Net.HttpListenerContext>.</span></span> <span data-ttu-id="9228f-110">Abbrechen einer <xref:System.Net.HttpListenerContext> -Objekt verwirft die Antwort an den Client aus, sofern dies nicht gesendet wurde noch, und gibt alle vom verwendeten Ressourcen frei, die <xref:System.Net.HttpListenerContext>.</span><span class="sxs-lookup"><span data-stu-id="9228f-110">Aborting an <xref:System.Net.HttpListenerContext> object discards the response to the client if it has not already been sent, and frees any resources used by the <xref:System.Net.HttpListenerContext>.</span></span> <span data-ttu-id="9228f-111">Nach dem Schließen oder Abbrechen einer <xref:System.Net.HttpListenerContext> Objekt, dessen Methoden oder Eigenschaften kann nicht verwiesen werden.</span><span class="sxs-lookup"><span data-stu-id="9228f-111">After closing or aborting an <xref:System.Net.HttpListenerContext> object, you cannot reference its methods or properties.</span></span> <span data-ttu-id="9228f-112">Wenn Sie dies tun, erhalten Sie eine <xref:System.ObjectDisposedException> Ausnahme.</span><span class="sxs-lookup"><span data-stu-id="9228f-112">If you do so, you will receive an <xref:System.ObjectDisposedException> exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9228f-113">Das folgende Codebeispiel zeigt die Benutzerinformationen für eine Clientanforderung an.</span><span class="sxs-lookup"><span data-stu-id="9228f-113">The following code example displays the user information for a client request.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#8](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#8)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.HttpListener" />
    <altmember cref="T:System.Net.HttpListenerRequest" />
    <altmember cref="T:System.Net.HttpListenerResponse" />
  </Docs>
  <Members>
    <MemberGroup MemberName="AcceptWebSocketAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9228f-114">Nehmen Sie eine WebSocket-Verbindung als asynchroner Vorgang an.</span><span class="sxs-lookup"><span data-stu-id="9228f-114">Accept a WebSocket connection as an asynchronous operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AcceptWebSocketAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.WebSockets.HttpListenerWebSocketContext&gt; AcceptWebSocketAsync (string subProtocol);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.WebSockets.HttpListenerWebSocketContext&gt; AcceptWebSocketAsync(string subProtocol) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AcceptWebSocketAsync (subProtocol As String) As Task(Of HttpListenerWebSocketContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::WebSockets::HttpListenerWebSocketContext ^&gt; ^ AcceptWebSocketAsync(System::String ^ subProtocol);" />
      <MemberSignature Language="F#" Value="member this.AcceptWebSocketAsync : string -&gt; System.Threading.Tasks.Task&lt;System.Net.WebSockets.HttpListenerWebSocketContext&gt;" Usage="httpListenerContext.AcceptWebSocketAsync subProtocol" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.WebSockets.HttpListenerWebSocketContext&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subProtocol" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subProtocol"><span data-ttu-id="9228f-115">Das unterstützte WebSocket-Unterprotokoll.</span><span class="sxs-lookup"><span data-stu-id="9228f-115">The supported WebSocket sub-protocol.</span></span></param>
        <summary><span data-ttu-id="9228f-116">Nehmen Sie eine WebSocket-Verbindung als asynchroner Vorgang an.</span><span class="sxs-lookup"><span data-stu-id="9228f-116">Accept a WebSocket connection as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="9228f-117">Gibt <see cref="T:System.Threading.Tasks.Task`1" />zurück.</span><span class="sxs-lookup"><span data-stu-id="9228f-117">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span></span>  
  
<span data-ttu-id="9228f-118">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</span><span class="sxs-lookup"><span data-stu-id="9228f-118">The task object representing the asynchronous operation.</span></span> <span data-ttu-id="9228f-119">Die <see cref="P:System.Threading.Tasks.Task`1.Result" />-Eigenschaft des Taskobjekts gibt ein <see cref="T:System.Net.WebSockets.HttpListenerWebSocketContext" />-Objekt zurück.</span><span class="sxs-lookup"><span data-stu-id="9228f-119">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns an <see cref="T:System.Net.WebSockets.HttpListenerWebSocketContext" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9228f-120">Dieser Vorgang wird nicht blockiert.</span><span class="sxs-lookup"><span data-stu-id="9228f-120">This operation will not block.</span></span> <span data-ttu-id="9228f-121">Das zurückgegebene <xref:System.Threading.Tasks.Task%601> Objekt wird abgeschlossen, nachdem die WebSocket-Verbindung akzeptiert wurde.</span><span class="sxs-lookup"><span data-stu-id="9228f-121">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the WebSocket connection has been accepted.</span></span>  
  
 <span data-ttu-id="9228f-122">Die Größe des Empfangspuffers beträgt 16,385 Bytes.</span><span class="sxs-lookup"><span data-stu-id="9228f-122">The size of the receive buffer is 16,385 bytes.</span></span> <span data-ttu-id="9228f-123">Das WebSocket Keep-alive-Intervall wird auf den Standardwert von 30.000 (30 Sekunden) festgelegt.</span><span class="sxs-lookup"><span data-stu-id="9228f-123">The WebSocket keep-alive interval is set to the default value of 30,000 (30 seconds).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9228f-124"><paramref name="subProtocol" /> ist eine leere Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="9228f-124"><paramref name="subProtocol" /> is an empty string</span></span> 
<span data-ttu-id="9228f-125">- oder - </span><span class="sxs-lookup"><span data-stu-id="9228f-125">-or-</span></span> 
 <span data-ttu-id="9228f-126"><paramref name="subProtocol" /> enthält ungültige Zeichen.</span><span class="sxs-lookup"><span data-stu-id="9228f-126"><paramref name="subProtocol" /> contains illegal characters.</span></span></exception>
        <exception cref="T:System.Net.WebSockets.WebSocketException"><span data-ttu-id="9228f-127">Fehler beim Senden der Antwort, um den WebSocket-Handshake abzuschließen.</span><span class="sxs-lookup"><span data-stu-id="9228f-127">An error occurred when sending the response to complete the WebSocket handshake.</span></span></exception>
        <altmember cref="T:System.Net.WebSockets.HttpListenerWebSocketContext" />
      </Docs>
    </Member>
    <Member MemberName="AcceptWebSocketAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.WebSockets.HttpListenerWebSocketContext&gt; AcceptWebSocketAsync (string subProtocol, TimeSpan keepAliveInterval);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.WebSockets.HttpListenerWebSocketContext&gt; AcceptWebSocketAsync(string subProtocol, valuetype System.TimeSpan keepAliveInterval) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function AcceptWebSocketAsync (subProtocol As String, keepAliveInterval As TimeSpan) As Task(Of HttpListenerWebSocketContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::WebSockets::HttpListenerWebSocketContext ^&gt; ^ AcceptWebSocketAsync(System::String ^ subProtocol, TimeSpan keepAliveInterval);" />
      <MemberSignature Language="F#" Value="member this.AcceptWebSocketAsync : string * TimeSpan -&gt; System.Threading.Tasks.Task&lt;System.Net.WebSockets.HttpListenerWebSocketContext&gt;" Usage="httpListenerContext.AcceptWebSocketAsync (subProtocol, keepAliveInterval)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.WebSockets.HttpListenerWebSocketContext&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subProtocol" Type="System.String" />
        <Parameter Name="keepAliveInterval" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="subProtocol"><span data-ttu-id="9228f-128">Das unterstützte WebSocket-Unterprotokoll.</span><span class="sxs-lookup"><span data-stu-id="9228f-128">The supported WebSocket sub-protocol.</span></span></param>
        <param name="keepAliveInterval"><span data-ttu-id="9228f-129">Das Keep-Alive-Intervall des WebSocket-Protokolls in Millisekunden.</span><span class="sxs-lookup"><span data-stu-id="9228f-129">The WebSocket protocol keep-alive interval in milliseconds.</span></span></param>
        <summary><span data-ttu-id="9228f-130">Nehmen Sie eine WebSocket-Verbindung an, die das unterstützte WebSocket-Unterprotokoll und das WebSocket Keep-Alive-Intervall  als asynchroner Vorgang angibt.</span><span class="sxs-lookup"><span data-stu-id="9228f-130">Accept a WebSocket connection specifying the supported WebSocket sub-protocol  and WebSocket keep-alive interval as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="9228f-131">Gibt <see cref="T:System.Threading.Tasks.Task`1" />zurück.</span><span class="sxs-lookup"><span data-stu-id="9228f-131">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span></span>  
  
<span data-ttu-id="9228f-132">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</span><span class="sxs-lookup"><span data-stu-id="9228f-132">The task object representing the asynchronous operation.</span></span> <span data-ttu-id="9228f-133">Die <see cref="P:System.Threading.Tasks.Task`1.Result" />-Eigenschaft des Taskobjekts gibt ein <see cref="T:System.Net.WebSockets.HttpListenerWebSocketContext" />-Objekt zurück.</span><span class="sxs-lookup"><span data-stu-id="9228f-133">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns an <see cref="T:System.Net.WebSockets.HttpListenerWebSocketContext" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9228f-134">Dieser Vorgang wird nicht blockiert.</span><span class="sxs-lookup"><span data-stu-id="9228f-134">This operation will not block.</span></span> <span data-ttu-id="9228f-135">Das zurückgegebene <xref:System.Threading.Tasks.Task%601> Objekt wird abgeschlossen, nachdem die WebSocket-Verbindung akzeptiert wurde.</span><span class="sxs-lookup"><span data-stu-id="9228f-135">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the WebSocket connection has been accepted.</span></span>  
  
 <span data-ttu-id="9228f-136">Die Größe des Empfangspuffers beträgt 16,385 Bytes.</span><span class="sxs-lookup"><span data-stu-id="9228f-136">The size of the receive buffer is 16,385 bytes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9228f-137"><paramref name="subProtocol" /> ist eine leere Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="9228f-137"><paramref name="subProtocol" /> is an empty string</span></span> 
<span data-ttu-id="9228f-138">- oder - </span><span class="sxs-lookup"><span data-stu-id="9228f-138">-or-</span></span> 
 <span data-ttu-id="9228f-139"><paramref name="subProtocol" /> enthält ungültige Zeichen.</span><span class="sxs-lookup"><span data-stu-id="9228f-139"><paramref name="subProtocol" /> contains illegal characters.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9228f-140"><paramref name="keepAliveInterval" /> ist zu klein.</span><span class="sxs-lookup"><span data-stu-id="9228f-140"><paramref name="keepAliveInterval" /> is too small.</span></span></exception>
        <exception cref="T:System.Net.WebSockets.WebSocketException"><span data-ttu-id="9228f-141">Fehler beim Senden der Antwort, um den WebSocket-Handshake abzuschließen.</span><span class="sxs-lookup"><span data-stu-id="9228f-141">An error occurred when sending the response to complete the WebSocket handshake.</span></span></exception>
        <altmember cref="T:System.Net.WebSockets.HttpListenerWebSocketContext" />
      </Docs>
    </Member>
    <Member MemberName="AcceptWebSocketAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.WebSockets.HttpListenerWebSocketContext&gt; AcceptWebSocketAsync (string subProtocol, int receiveBufferSize, TimeSpan keepAliveInterval);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.WebSockets.HttpListenerWebSocketContext&gt; AcceptWebSocketAsync(string subProtocol, int32 receiveBufferSize, valuetype System.TimeSpan keepAliveInterval) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String,System.Int32,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function AcceptWebSocketAsync (subProtocol As String, receiveBufferSize As Integer, keepAliveInterval As TimeSpan) As Task(Of HttpListenerWebSocketContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::WebSockets::HttpListenerWebSocketContext ^&gt; ^ AcceptWebSocketAsync(System::String ^ subProtocol, int receiveBufferSize, TimeSpan keepAliveInterval);" />
      <MemberSignature Language="F#" Value="member this.AcceptWebSocketAsync : string * int * TimeSpan -&gt; System.Threading.Tasks.Task&lt;System.Net.WebSockets.HttpListenerWebSocketContext&gt;" Usage="httpListenerContext.AcceptWebSocketAsync (subProtocol, receiveBufferSize, keepAliveInterval)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.WebSockets.HttpListenerWebSocketContext&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subProtocol" Type="System.String" />
        <Parameter Name="receiveBufferSize" Type="System.Int32" />
        <Parameter Name="keepAliveInterval" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="subProtocol"><span data-ttu-id="9228f-142">Das unterstützte WebSocket-Unterprotokoll.</span><span class="sxs-lookup"><span data-stu-id="9228f-142">The supported WebSocket sub-protocol.</span></span></param>
        <param name="receiveBufferSize"><span data-ttu-id="9228f-143">Die Empfangspuffergröße in Byte.</span><span class="sxs-lookup"><span data-stu-id="9228f-143">The receive buffer size in bytes.</span></span></param>
        <param name="keepAliveInterval"><span data-ttu-id="9228f-144">Das Keep-Alive-Intervall des WebSocket-Protokolls in Millisekunden.</span><span class="sxs-lookup"><span data-stu-id="9228f-144">The WebSocket protocol keep-alive interval in milliseconds.</span></span></param>
        <summary><span data-ttu-id="9228f-145">Nehmen Sie eine WebSocket-Verbindung an, die das unterstützte WebSocket-Unterprotokoll, empfangene Puffergröße und das WebSocket Keep-Alive-Intervall  als asynchroner Vorgang angibt.</span><span class="sxs-lookup"><span data-stu-id="9228f-145">Accept a WebSocket connection specifying the supported WebSocket sub-protocol, receive buffer size, and WebSocket keep-alive interval as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="9228f-146">Gibt <see cref="T:System.Threading.Tasks.Task`1" />zurück.</span><span class="sxs-lookup"><span data-stu-id="9228f-146">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span></span>  
  
<span data-ttu-id="9228f-147">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</span><span class="sxs-lookup"><span data-stu-id="9228f-147">The task object representing the asynchronous operation.</span></span> <span data-ttu-id="9228f-148">Die <see cref="P:System.Threading.Tasks.Task`1.Result" />-Eigenschaft des Taskobjekts gibt ein <see cref="T:System.Net.WebSockets.HttpListenerWebSocketContext" />-Objekt zurück.</span><span class="sxs-lookup"><span data-stu-id="9228f-148">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns an <see cref="T:System.Net.WebSockets.HttpListenerWebSocketContext" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9228f-149">Dieser Vorgang wird nicht blockiert.</span><span class="sxs-lookup"><span data-stu-id="9228f-149">This operation will not block.</span></span> <span data-ttu-id="9228f-150">Das zurückgegebene <xref:System.Threading.Tasks.Task%601> >-Objekt wird abgeschlossen, nachdem die WebSocket-Verbindung akzeptiert wurde.</span><span class="sxs-lookup"><span data-stu-id="9228f-150">The returned <xref:System.Threading.Tasks.Task%601> > object will complete after the WebSocket connection has been accepted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9228f-151"><paramref name="subProtocol" /> ist eine leere Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="9228f-151"><paramref name="subProtocol" /> is an empty string</span></span> 
<span data-ttu-id="9228f-152">- oder - </span><span class="sxs-lookup"><span data-stu-id="9228f-152">-or-</span></span> 
 <span data-ttu-id="9228f-153"><paramref name="subProtocol" /> enthält ungültige Zeichen.</span><span class="sxs-lookup"><span data-stu-id="9228f-153"><paramref name="subProtocol" /> contains illegal characters.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9228f-154"><paramref name="keepAliveInterval" /> ist zu klein.</span><span class="sxs-lookup"><span data-stu-id="9228f-154"><paramref name="keepAliveInterval" /> is too small.</span></span>  
  
<span data-ttu-id="9228f-155">- oder - </span><span class="sxs-lookup"><span data-stu-id="9228f-155">-or-</span></span> 
 <span data-ttu-id="9228f-156"><paramref name="receiveBufferSize" /> ist kleiner als -16 Bytes.</span><span class="sxs-lookup"><span data-stu-id="9228f-156"><paramref name="receiveBufferSize" /> is less than 16 bytes</span></span> 
<span data-ttu-id="9228f-157">- oder - </span><span class="sxs-lookup"><span data-stu-id="9228f-157">-or-</span></span> 
 <span data-ttu-id="9228f-158"><paramref name="receiveBufferSize" /> ist größer als 64k Bytes.</span><span class="sxs-lookup"><span data-stu-id="9228f-158"><paramref name="receiveBufferSize" /> is greater than 64K bytes.</span></span></exception>
        <exception cref="T:System.Net.WebSockets.WebSocketException"><span data-ttu-id="9228f-159">Fehler beim Senden der Antwort, um den WebSocket-Handshake abzuschließen.</span><span class="sxs-lookup"><span data-stu-id="9228f-159">An error occurred when sending the response to complete the WebSocket handshake.</span></span></exception>
        <altmember cref="T:System.Net.WebSockets.HttpListenerWebSocketContext" />
      </Docs>
    </Member>
    <Member MemberName="AcceptWebSocketAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.WebSockets.HttpListenerWebSocketContext&gt; AcceptWebSocketAsync (string subProtocol, int receiveBufferSize, TimeSpan keepAliveInterval, ArraySegment&lt;byte&gt; internalBuffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.WebSockets.HttpListenerWebSocketContext&gt; AcceptWebSocketAsync(string subProtocol, int32 receiveBufferSize, valuetype System.TimeSpan keepAliveInterval, valuetype System.ArraySegment`1&lt;unsigned int8&gt; internalBuffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String,System.Int32,System.TimeSpan,System.ArraySegment{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Function AcceptWebSocketAsync (subProtocol As String, receiveBufferSize As Integer, keepAliveInterval As TimeSpan, internalBuffer As ArraySegment(Of Byte)) As Task(Of HttpListenerWebSocketContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::WebSockets::HttpListenerWebSocketContext ^&gt; ^ AcceptWebSocketAsync(System::String ^ subProtocol, int receiveBufferSize, TimeSpan keepAliveInterval, ArraySegment&lt;System::Byte&gt; internalBuffer);" />
      <MemberSignature Language="F#" Value="member this.AcceptWebSocketAsync : string * int * TimeSpan * ArraySegment&lt;byte&gt; -&gt; System.Threading.Tasks.Task&lt;System.Net.WebSockets.HttpListenerWebSocketContext&gt;" Usage="httpListenerContext.AcceptWebSocketAsync (subProtocol, receiveBufferSize, keepAliveInterval, internalBuffer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.WebSockets.HttpListenerWebSocketContext&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subProtocol" Type="System.String" />
        <Parameter Name="receiveBufferSize" Type="System.Int32" />
        <Parameter Name="keepAliveInterval" Type="System.TimeSpan" />
        <Parameter Name="internalBuffer" Type="System.ArraySegment&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="subProtocol"><span data-ttu-id="9228f-160">Das unterstützte WebSocket-Unterprotokoll.</span><span class="sxs-lookup"><span data-stu-id="9228f-160">The supported WebSocket sub-protocol.</span></span></param>
        <param name="receiveBufferSize"><span data-ttu-id="9228f-161">Die Empfangspuffergröße in Byte.</span><span class="sxs-lookup"><span data-stu-id="9228f-161">The receive buffer size in bytes.</span></span></param>
        <param name="keepAliveInterval"><span data-ttu-id="9228f-162">Das Keep-Alive-Intervall des WebSocket-Protokolls in Millisekunden.</span><span class="sxs-lookup"><span data-stu-id="9228f-162">The WebSocket protocol keep-alive interval in milliseconds.</span></span></param>
        <param name="internalBuffer"><span data-ttu-id="9228f-163">Ein interner für diesen Vorgang zu verwendender Puffer.</span><span class="sxs-lookup"><span data-stu-id="9228f-163">An internal buffer to use for this operation.</span></span></param>
        <summary><span data-ttu-id="9228f-164">Nehmen Sie eine WebSocket-Verbindung an, die das unterstützte WebSocket-Unterprotokoll, empfangene Puffergröße, das WebSocket Keep-Alive-Intervall und den internen Puffer als asynchroner Vorgang angibt.</span><span class="sxs-lookup"><span data-stu-id="9228f-164">Accept a WebSocket connection specifying the supported WebSocket sub-protocol, receive buffer size, WebSocket keep-alive interval, and the internal buffer as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="9228f-165">Gibt <see cref="T:System.Threading.Tasks.Task`1" />zurück.</span><span class="sxs-lookup"><span data-stu-id="9228f-165">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span></span>  
  
<span data-ttu-id="9228f-166">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</span><span class="sxs-lookup"><span data-stu-id="9228f-166">The task object representing the asynchronous operation.</span></span> <span data-ttu-id="9228f-167">Die <see cref="P:System.Threading.Tasks.Task`1.Result" />-Eigenschaft des Taskobjekts gibt ein <see cref="T:System.Net.WebSockets.HttpListenerWebSocketContext" />-Objekt zurück.</span><span class="sxs-lookup"><span data-stu-id="9228f-167">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns an <see cref="T:System.Net.WebSockets.HttpListenerWebSocketContext" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9228f-168">Dieser Vorgang wird nicht blockiert.</span><span class="sxs-lookup"><span data-stu-id="9228f-168">This operation will not block.</span></span> <span data-ttu-id="9228f-169">Das zurückgegebene <xref:System.Threading.Tasks.Task%601> Objekt wird abgeschlossen, nachdem die WebSocket-Verbindung akzeptiert wurde.</span><span class="sxs-lookup"><span data-stu-id="9228f-169">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the WebSocket connection has been accepted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9228f-170"><paramref name="subProtocol" /> ist eine leere Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="9228f-170"><paramref name="subProtocol" /> is an empty string</span></span> 
<span data-ttu-id="9228f-171">- oder - </span><span class="sxs-lookup"><span data-stu-id="9228f-171">-or-</span></span> 
 <span data-ttu-id="9228f-172"><paramref name="subProtocol" /> enthält ungültige Zeichen.</span><span class="sxs-lookup"><span data-stu-id="9228f-172"><paramref name="subProtocol" /> contains illegal characters.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9228f-173"><paramref name="keepAliveInterval" /> ist zu klein.</span><span class="sxs-lookup"><span data-stu-id="9228f-173"><paramref name="keepAliveInterval" /> is too small.</span></span>  
  
<span data-ttu-id="9228f-174">- oder - </span><span class="sxs-lookup"><span data-stu-id="9228f-174">-or-</span></span> 
 <span data-ttu-id="9228f-175"><paramref name="receiveBufferSize" /> ist kleiner als -16 Bytes.</span><span class="sxs-lookup"><span data-stu-id="9228f-175"><paramref name="receiveBufferSize" /> is less than 16 bytes</span></span> 
<span data-ttu-id="9228f-176">- oder - </span><span class="sxs-lookup"><span data-stu-id="9228f-176">-or-</span></span> 
 <span data-ttu-id="9228f-177"><paramref name="receiveBufferSize" /> ist größer als 64k Bytes.</span><span class="sxs-lookup"><span data-stu-id="9228f-177"><paramref name="receiveBufferSize" /> is greater than 64K bytes.</span></span></exception>
        <exception cref="T:System.Net.WebSockets.WebSocketException"><span data-ttu-id="9228f-178">Fehler beim Senden der Antwort, um den WebSocket-Handshake abzuschließen.</span><span class="sxs-lookup"><span data-stu-id="9228f-178">An error occurred when sending the response to complete the WebSocket handshake.</span></span></exception>
        <altmember cref="T:System.Net.WebSockets.HttpListenerWebSocketContext" />
      </Docs>
    </Member>
    <Member MemberName="Request">
      <MemberSignature Language="C#" Value="public System.Net.HttpListenerRequest Request { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.HttpListenerRequest Request" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerContext.Request" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Request As HttpListenerRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::HttpListenerRequest ^ Request { System::Net::HttpListenerRequest ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Request : System.Net.HttpListenerRequest" Usage="System.Net.HttpListenerContext.Request" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.HttpListenerRequest</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9228f-179">Ruft die <see cref="T:System.Net.HttpListenerRequest" /> ab, die die Anforderung eines Clients für eine Ressource darstellt.</span><span class="sxs-lookup"><span data-stu-id="9228f-179">Gets the <see cref="T:System.Net.HttpListenerRequest" /> that represents a client's request for a resource.</span></span></summary>
        <value><span data-ttu-id="9228f-180">Ein <see cref="T:System.Net.HttpListenerRequest" />-Objekt, das die Clientanforderung darstellt.</span><span class="sxs-lookup"><span data-stu-id="9228f-180">An <see cref="T:System.Net.HttpListenerRequest" /> object that represents the client request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9228f-181">Wenn Sie diese schließen <xref:System.Net.HttpListenerContext>, Traffic Manager sendet die Antwort an den Client schließen die <xref:System.Net.HttpListenerResponse> , enthält die Antwort ein, und schließen Sie die <xref:System.Net.HttpListenerRequest> von dieser Eigenschaft zurückgegebenen Objekts.</span><span class="sxs-lookup"><span data-stu-id="9228f-181">If you close this <xref:System.Net.HttpListenerContext>, it will send the response to the client, close the <xref:System.Net.HttpListenerResponse> that contains the response, and close the <xref:System.Net.HttpListenerRequest> object returned by this property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9228f-182">Das folgende Codebeispiel veranschaulicht das Aufrufen dieser Methode.</span><span class="sxs-lookup"><span data-stu-id="9228f-182">The following code example demonstrates calling this method.</span></span> <span data-ttu-id="9228f-183">Die `listener` Variable enthält eine <xref:System.Net.HttpListener> Objekt.</span><span class="sxs-lookup"><span data-stu-id="9228f-183">The `listener` variable holds an <xref:System.Net.HttpListener> object.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#3](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Response">
      <MemberSignature Language="C#" Value="public System.Net.HttpListenerResponse Response { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.HttpListenerResponse Response" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerContext.Response" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Response As HttpListenerResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::HttpListenerResponse ^ Response { System::Net::HttpListenerResponse ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Response : System.Net.HttpListenerResponse" Usage="System.Net.HttpListenerContext.Response" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.HttpListenerResponse</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9228f-184">Ruft das <see cref="T:System.Net.HttpListenerResponse" />-Objekt ab, das als Antwort auf die Anforderung des Clients an den Client gesendet wird.</span><span class="sxs-lookup"><span data-stu-id="9228f-184">Gets the <see cref="T:System.Net.HttpListenerResponse" /> object that will be sent to the client in response to the client's request.</span></span></summary>
        <value><span data-ttu-id="9228f-185">Ein <see cref="T:System.Net.HttpListenerResponse" />-Objekt, das zum Zurücksenden einer Antwort an den Client verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="9228f-185">An <see cref="T:System.Net.HttpListenerResponse" /> object used to send a response back to the client.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9228f-186">Ihre Anwendung konfiguriert die Antwort durch Festlegen von Eigenschaften der <xref:System.Net.HttpListenerResponse> von dieser Eigenschaft zurückgegebenen Objekts.</span><span class="sxs-lookup"><span data-stu-id="9228f-186">Your application configures the response by setting properties in the <xref:System.Net.HttpListenerResponse> object returned by this property.</span></span> <span data-ttu-id="9228f-187">Nach dem Konfigurieren der Antwort, senden Sie es an den Client durch das Schließen der Antwort oder durch Schließen dieses <xref:System.Net.HttpListenerContext> Objekt.</span><span class="sxs-lookup"><span data-stu-id="9228f-187">After configuring the response, you send it to the client by closing the response, or by closing this <xref:System.Net.HttpListenerContext> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9228f-188">Im folgenden Codebeispiel wird veranschaulicht, Abrufen der Antwort auf die Anforderung eines Clients und das Hinzufügen von Text der Antwort.</span><span class="sxs-lookup"><span data-stu-id="9228f-188">The following code example demonstrates getting the response to a client's request and adding the response body.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#3](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="9228f-189">Hinweis: Dieser Member gibt Ablaufverfolgungsinformationen, wenn Sie die netzwerkablaufverfolgung in Ihrer Anwendung aktivieren.</span><span class="sxs-lookup"><span data-stu-id="9228f-189">Note: This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="9228f-190">Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="9228f-190">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="User">
      <MemberSignature Language="C#" Value="public System.Security.Principal.IPrincipal User { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IPrincipal User" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerContext.User" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property User As IPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::IPrincipal ^ User { System::Security::Principal::IPrincipal ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.User : System.Security.Principal.IPrincipal" Usage="System.Net.HttpListenerContext.User" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9228f-191">Ruft ein Objekt ab, das zum Abrufen von Identitäts- und Sicherheitsinformationen sowie von Sicherheitsrollen für den Client verwendet wird, dessen Anforderung durch dieses <see cref="T:System.Net.HttpListenerContext" />-Objekt dargestellt wird.</span><span class="sxs-lookup"><span data-stu-id="9228f-191">Gets an object used to obtain identity, authentication information, and security roles for the client whose request is represented by this <see cref="T:System.Net.HttpListenerContext" /> object.</span></span></summary>
        <value><span data-ttu-id="9228f-192">Ein <see cref="T:System.Security.Principal.IPrincipal" />-Objekt, das den Client beschreibt, oder <see langword="null" />, wenn der <see cref="T:System.Net.HttpListener" />, der diesen <see cref="T:System.Net.HttpListenerContext" /> bereitgestellt hat, keine Authentifizierung erfordert.</span><span class="sxs-lookup"><span data-stu-id="9228f-192">An <see cref="T:System.Security.Principal.IPrincipal" /> object that describes the client, or <see langword="null" /> if the <see cref="T:System.Net.HttpListener" /> that supplied this <see cref="T:System.Net.HttpListenerContext" /> does not require authentication.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9228f-193">Ein <xref:System.Net.HttpListener> gibt an, dass sie mit der Verwendung der Authentifizierung erfordert die <xref:System.Net.HttpListener.AuthenticationSchemes%2A> Eigenschaft oder durch Angabe einer <xref:System.Net.AuthenticationSchemeSelector> delegieren Sie mithilfe der <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="9228f-193">An <xref:System.Net.HttpListener> indicates that it requires authentication using the <xref:System.Net.HttpListener.AuthenticationSchemes%2A> property or by specifying an <xref:System.Net.AuthenticationSchemeSelector> delegate using the <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A> property.</span></span>  
  
 <span data-ttu-id="9228f-194">Um anmeldungs- und Informationen für die Authentifizierung des Clients zu bestimmen, überprüfen Sie die <xref:System.Security.Principal.IPrincipal.Identity%2A?displayProperty=nameWithType> -Eigenschaft in der von dieser Eigenschaft zurückgegebenen Objekts.</span><span class="sxs-lookup"><span data-stu-id="9228f-194">To determine the client's login name and authentication information, check the <xref:System.Security.Principal.IPrincipal.Identity%2A?displayProperty=nameWithType> property in the object returned by this property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9228f-195">Das folgende Codebeispiel veranschaulicht den Zugriff auf Informationen von Identität und Authentifizierung über den Client, und sie in der Antwort an den Client zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="9228f-195">The following code example demonstrates accessing identity and authentication information about the client, and returning it to the client in the response.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#8](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#8)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="9228f-196">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /><see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="9228f-196">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /><see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
  </Members>
</Type>