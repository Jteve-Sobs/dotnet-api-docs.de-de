<Type Name="WebClient" FullName="System.Net.WebClient">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d52e0389fae96ede231b36a333fcc5d736c9760d" /><Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="11/29/2018" /><Meta Name="ms.locfileid" Value="52614046" /></Metadata><TypeSignature Language="C#" Value="public class WebClient : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebClient extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.Net.WebClient" />
  <TypeSignature Language="VB.NET" Value="Public Class WebClient&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebClient : System::ComponentModel::Component" />
  <TypeSignature Language="F#" Value="type WebClient = class&#xA;    inherit Component" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.WebClient</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt allgemeine Methoden für das Senden von Daten an und das Empfangen von Daten von Ressourcen bereit, die durch einen URI angegeben sind.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks

> [!IMPORTANT]
>  Es wird nicht empfohlen, dass Sie verwenden die `WebClient` Klasse für die neue Entwicklung. Verwenden Sie stattdessen die <xref:System.Net.Http.HttpClient?displayProperty=nameWithType> Klasse.

 Die <xref:System.Net.WebClient> Klasse stellt allgemeine Methoden zum Senden von Daten an und Empfangen von Daten aus beliebigen lokalen, Intranet oder Internet-Ressource, die von einem URI identifiziert.  
  
 Die <xref:System.Net.WebClient> -Klasse verwendet die <xref:System.Net.WebRequest> Klasse, um den Zugriff auf Ressourcen bereitzustellen. <xref:System.Net.WebClient> Instanzen können Datenzugriff mit einem <xref:System.Net.WebRequest> Nachfolger registriert die <xref:System.Net.WebRequest.RegisterPrefix%2A?displayProperty=nameWithType> Methode.  
  
> [!NOTE]
>  .NET Framework unterstützt standardmäßig URIs, die mit beginnen `http:`, `https:`, `ftp:`, und `file:` Schema Bezeichner.  
  
 Die folgende Tabelle beschreibt <xref:System.Net.WebClient> Methoden zum Hochladen von Daten auf eine Ressource.  
  
|Methode|Beschreibung |  
|------------|-----------------|  
|<xref:System.Net.WebClient.OpenWrite%2A>|Ruft eine <xref:System.IO.Stream> verwendet, um Daten an die Ressource zu senden.|  
|<xref:System.Net.WebClient.OpenWriteAsync%2A>|Ruft eine <xref:System.IO.Stream> verwendet, um Daten in die Ressource zu senden, ohne den aufrufenden Thread blockieren.|  
|<xref:System.Net.WebClient.UploadData%2A>|Sendet ein Byte-Array an die Ressource, und gibt eine <xref:System.Byte> Array mit einer beliebigen Antwort.|  
|<xref:System.Net.WebClient.UploadDataAsync%2A>|Sendet eine <xref:System.Byte> Array, das die Ressource, ohne den aufrufenden Thread blockieren.|  
|<xref:System.Net.WebClient.UploadFile%2A>|Sendet eine lokale Datei auf die Ressource, und gibt eine <xref:System.Byte> Array mit einer beliebigen Antwort.|  
|<xref:System.Net.WebClient.UploadFileAsync%2A>|Sendet eine lokale Datei auf die Ressource, ohne den aufrufenden Thread blockieren.|  
|<xref:System.Net.WebClient.UploadValues%2A>|Sendet eine <xref:System.Collections.Specialized.NameValueCollection> zur Ressource, und gibt eine <xref:System.Byte> Array mit einer beliebigen Antwort.|  
|<xref:System.Net.WebClient.UploadValuesAsync%2A>|Sendet eine <xref:System.Collections.Specialized.NameValueCollection> zur Ressource, und gibt eine <xref:System.Byte> Array mit allen Antworten ohne Blockieren des aufrufenden Threads.|  
|<xref:System.Net.WebClient.UploadString%2A>|Sendet eine <xref:System.String> auf die Ressource, ohne den aufrufenden Thread blockieren.|  
|<xref:System.Net.WebClient.UploadStringAsync%2A>|Sendet eine <xref:System.String> auf die Ressource, ohne den aufrufenden Thread blockieren.|  
  
 Die folgende Tabelle beschreibt <xref:System.Net.WebClient> Methoden zum Herunterladen von Daten aus einer Ressource.  
  
|Methode|Beschreibung |  
|------------|-----------------|  
|<xref:System.Net.WebClient.OpenRead%2A>|Gibt die Daten aus einer Ressource als eine <xref:System.IO.Stream>.|  
|<xref:System.Net.WebClient.OpenReadAsync%2A>|Die Daten zurückgegeben aus einer Ressource, ohne den aufrufenden Thread blockieren.|  
|<xref:System.Net.WebClient.DownloadData%2A>|Lädt Daten aus einer Ressource herunter, und gibt eine <xref:System.Byte> Array.|  
|<xref:System.Net.WebClient.DownloadDataAsync%2A>|Lädt Daten aus einer Ressource herunter, und gibt eine <xref:System.Byte> Array ohne Blockieren des aufrufenden Threads.|  
|<xref:System.Net.WebClient.DownloadFile%2A>|Lädt Daten aus einer Ressource in eine lokale Datei herunter.|  
|<xref:System.Net.WebClient.DownloadFileAsync%2A>|Lädt Daten aus einer Ressource in einer lokalen Datei, ohne den aufrufenden Thread blockieren.|  
|<xref:System.Net.WebClient.DownloadString%2A>|Lädt eine <xref:System.String> aus einer Ressource und gibt eine <xref:System.String>.|  
|<xref:System.Net.WebClient.DownloadStringAsync%2A>|Lädt eine <xref:System.String> aus einer Ressource, ohne den aufrufenden Thread blockieren.|  
  
 Sie können die <xref:System.Net.WebClient.CancelAsync%2A> Methode, um asynchrone Vorgänge abzubrechen, die nicht abgeschlossen wurden.  
  
 Ein <xref:System.Net.WebClient> Instanz optionalen HTTP-Header nicht standardmäßig gesendet. Wenn die Anforderung einen optionalen-Header erforderlich ist, müssen Sie hinzufügen, Header, um die <xref:System.Net.WebClient.Headers%2A> Auflistung. Wenn Abfragen in der Antwort beibehalten möchten, müssen Sie z. B. einen Benutzer-Agent-Header hinzufügen. Außerdem können Server 500 (Interner Serverfehler) zurückgeben, wenn der Benutzer-Agent-Header nicht vorhanden ist.  
  
 <xref:System.Net.HttpWebRequest.AllowAutoRedirect%2A> nastaven NA hodnotu `true` in <xref:System.Net.WebClient> Instanzen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird der URI einer Ressource, abgerufen und die Antwort anzeigt.  
  
 [!code-cpp[NCLWebClientUserAgent#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientUserAgent/CPP/useragent.cpp#1)]
 [!code-csharp[NCLWebClientUserAgent#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientUserAgent/CS/useragent.cs#1)]
 [!code-vb[NCLWebClientUserAgent#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientUserAgent/VB/useragent.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Net.WebPermission">auf dem angeforderten URI oder einen beliebigen URI, der die Anforderung umgeleitet wurde. Zugeordnete Enumeration: <see cref="F:System.Net.NetworkAccess.Connect" /></permission>
    <block subset="none" type="overrides"><para>Abgeleitete Klassen sollten die Implementierung der Basisklasse aufrufen <see cref="T:System.Net.WebClient" /> um sicherzustellen, dass die abgeleitete Klasse wie erwartet funktioniert.</para></block>
    <altmember cref="T:System.Net.WebRequest" />
    <altmember cref="T:System.Net.WebResponse" />
    <altmember cref="T:System.Net.HttpWebRequest" />
    <altmember cref="T:System.Net.HttpWebResponse" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebClient();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.WebClient" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Standardkonstruktor erstellt eine neue Instanz der dem <xref:System.Net.WebClient> Klasse. Die Standard-HTTP-Methode ist GET. Die Standardmethode für die FTP-ist RETR. Die Standardeinstellung für <xref:System.Net.WebClient.Encoding%2A> ist <xref:System.Text.Encoding.Default%2A>. Der Standardwert von <xref:System.Net.HttpWebRequest.AllowAutoRedirect%2A> ist `true`.  
  
   
  
## Examples  
 Das folgende Codebeispiel erstellt eine <xref:System.Net.WebClient> Instanz, und klicken Sie dann zum Herunterladen von Daten von einem Server, und klicken Sie auf der System-Konsole anzeigen, Herunterladen von Daten von einem Server und in eine Datei zu schreiben und so die Formularwerte auf einen Server hochladen und die Antwort empfangen wird.  
  
 [!code-cpp[WebClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient/CPP/webclient.cpp#1)]
 [!code-csharp[WebClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient/CS/webclient.cs#1)]
 [!code-vb[WebClient#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient/VB/webclient.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowReadStreamBuffering">
      <MemberSignature Language="C#" Value="public bool AllowReadStreamBuffering { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowReadStreamBuffering" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.AllowReadStreamBuffering" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowReadStreamBuffering As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowReadStreamBuffering { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowReadStreamBuffering : bool with get, set" Usage="System.Net.WebClient.AllowReadStreamBuffering" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die aus der Internetressource gelesenen Daten für eine <see cref="T:System.Net.WebClient" />-Instanz gepuffert werden sollen, oder legt diesen Wert fest.</summary>
        <value>Gibt <see cref="T:System.Boolean" />zurück.  
  
 <see langword="true" /> aktiviert die Zwischenspeicherung der aus der Internetressource empfangenen Daten, <see langword="false" /> deaktiviert die Zwischenspeicherung. Der Standardwert ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Net.WebClient.AllowReadStreamBuffering%2A> Eigenschaft `true`, die Daten im Arbeitsspeicher gepuffert werden, damit er von der app gelesen werden kann.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowWriteStreamBuffering">
      <MemberSignature Language="C#" Value="public bool AllowWriteStreamBuffering { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowWriteStreamBuffering" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.AllowWriteStreamBuffering" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowWriteStreamBuffering As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowWriteStreamBuffering { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowWriteStreamBuffering : bool with get, set" Usage="System.Net.WebClient.AllowWriteStreamBuffering" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die in die Internetressource geschriebenen Daten für eine <see cref="T:System.Net.WebClient" />-Instanz gepuffert werden sollen, oder legt diesen Wert fest.</summary>
        <value>Gibt <see cref="T:System.Boolean" />zurück.  
  
 <see langword="true" /> aktiviert das Puffern der in die Internetressource geschriebenen Daten, <see langword="false" /> deaktiviert das Puffern. Der Standardwert ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Net.WebClient.AllowWriteStreamBuffering%2A> Eigenschaft `true`, die Daten werden im Arbeitsspeicher gepuffert, damit sie mit der Internetressource in größeren Blöcken effizienter geschrieben werden kann.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseAddress">
      <MemberSignature Language="C#" Value="public string BaseAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseAddress" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.BaseAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseAddress As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BaseAddress { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BaseAddress : string with get, set" Usage="System.Net.WebClient.BaseAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Basis-URI für Anforderungen eines <see cref="T:System.Net.WebClient" /> ab oder legt diesen fest.</summary>
        <value>Ein <see cref="T:System.String" />, der den Basis-URI für Anforderungen von <see cref="T:System.Net.WebClient" /> oder <see cref="F:System.String.Empty" /> enthält, wenn keine Basisadresse angegeben wurde.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft enthält einen Basis-URI, der mit der relativen Adresse kombiniert wird. Wenn Sie eine Methode aufrufen, die hochgeladen oder heruntergeladen Daten, die <xref:System.Net.WebClient> Objekt kombiniert diese Basis-URI mit der relativen Adresse, die Sie im Aufruf Methode angeben. Wenn Sie angeben, dass einen absoluten URI, <xref:System.Net.WebClient> verwendet nicht die <xref:System.Net.WebClient.BaseAddress%2A> -Eigenschaftswert.  
  
 So entfernen Sie einen zuvor festgelegten Wert, legen Sie diese Eigenschaft auf `null` oder eine leere Zeichenfolge ("").  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird mithilfe von Daten aus einem Internetserver heruntergeladen und auf der Konsole angezeigt. Es setzt voraus, dass die Adresse des Servers (z. B. http://www.contoso.com) befindet sich im `hostUri` und der Pfad zu der Ressource (z. B./Default.htm) ist `uriSuffix`.  
  
 [!code-cpp[WebClient_BaseAddress_ResponseHeaders#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_BaseAddress_ResponseHeaders/CPP/webclient_baseaddress_responseheaders.cpp#1)]
 [!code-csharp[WebClient_BaseAddress_ResponseHeaders#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_BaseAddress_ResponseHeaders/CS/webclient_baseaddress_responseheaders.cs#1)]
 [!code-vb[WebClient_BaseAddress_ResponseHeaders#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_BaseAddress_ResponseHeaders/VB/webclient_baseaddress_responseheaders.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><see cref="P:System.Net.WebClient.BaseAddress" /> ist auf einen ungültigen URI festgelegt. Die innere Ausnahme enthält möglicherweise Informationen, die Sie bei der Fehlersuche unterstützen.</exception>
      </Docs>
    </Member>
    <Member MemberName="CachePolicy">
      <MemberSignature Language="C#" Value="public System.Net.Cache.RequestCachePolicy CachePolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Cache.RequestCachePolicy CachePolicy" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.CachePolicy" />
      <MemberSignature Language="VB.NET" Value="Public Property CachePolicy As RequestCachePolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Cache::RequestCachePolicy ^ CachePolicy { System::Net::Cache::RequestCachePolicy ^ get(); void set(System::Net::Cache::RequestCachePolicy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CachePolicy : System.Net.Cache.RequestCachePolicy with get, set" Usage="System.Net.WebClient.CachePolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Cache.RequestCachePolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Cacherichtlinien der Anwendung für alle von dieser WebClient-Instanz unter Verwendung von <see cref="T:System.Net.WebRequest" />-Objekten abgerufenen Ressourcen ab oder legt diese fest.</summary>
        <value>Ein <see cref="T:System.Net.Cache.RequestCachePolicy" />-Objekt, das die Anforderungen des Caches der Anwendung darstellt.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelAsync">
      <MemberSignature Language="C#" Value="public void CancelAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.CancelAsync" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelAsync();" />
      <MemberSignature Language="F#" Value="member this.CancelAsync : unit -&gt; unit" Usage="webClient.CancelAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Bricht einen ausstehenden asynchronen Vorgang ab.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn ein Vorgang aussteht, wird diese Methode ruft <xref:System.Net.WebRequest.Abort%2A> für den zugrunde liegenden <xref:System.Net.WebRequest>.  
  
 Beim Aufruf <xref:System.Net.WebClient.CancelAsync%2A>, Ihre Anwendung erhält weiterhin das Abschlussereignis, die dem Vorgang zugeordnet. Z. B. beim Aufruf <xref:System.Net.WebClient.CancelAsync%2A> zum Abbrechen einer <xref:System.Net.WebClient.DownloadStringAsync%2A> -Operation, wenn Sie einen Ereignishandler für angegeben haben die <xref:System.Net.WebClient.DownloadStringCompleted> -Ereignis Ereignishandler empfängt Benachrichtigung, die der Vorgang beendet wurde. Um zu erfahren, ob der Vorgang erfolgreich abgeschlossen, lesen die <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> Eigenschaft für die Basisklasse von <xref:System.Net.DownloadDataCompletedEventArgs> Datenobjekt, das in den Ereignisdaten übergeben, an den Ereignishandler.  
  
 Wenn kein asynchroner Vorgang ausgeführt wird, bewirkt diese Methode nichts.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public System.Net.ICredentials Credentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Property Credentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::ICredentials ^ Credentials { System::Net::ICredentials ^ get(); void set(System::Net::ICredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Net.ICredentials with get, set" Usage="System.Net.WebClient.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Netzwerkanmeldeinformationen ab, die an den Host gesendet und für die Authentifizierung der Anforderung verwendet werden, oder legt diese fest.</summary>
        <value>Eine <see cref="T:System.Net.ICredentials" />-Schnittstelle mit den Anmeldeinformationen für die Authentifizierung der Anforderung. Der Standardwert ist <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Net.WebClient.Credentials%2A> Eigenschaft enthält die Anmeldeinformationen für die Authentifizierung verwendet, um den Zugriff auf eine Ressource auf einem Host. In den meisten Szenarien für die clientseitige, verwenden Sie die <xref:System.Net.CredentialCache.DefaultCredentials%2A>, welche sind die Anmeldeinformationen des aktuell angemeldeten Benutzers. Zu diesem Zweck legen Sie die <xref:System.Net.WebClient.UseDefaultCredentials%2A> Eigenschaft `true` statt durch Festlegen dieser Eigenschaft.  
  
 Wenn die <xref:System.Net.WebClient> Klasse wird in einer Anwendung auf mittlerer Ebene, z. B. eine ASP.NET-Anwendung verwendet die <xref:System.Net.CredentialCache.DefaultCredentials%2A> gehören zu dem Konto, unter der ASP-Seite (die serverseitige-Anmeldeinformationen). In der Regel würden Sie diese Eigenschaft auf die Anmeldeinformationen des Clients festlegen, in die Namen angefordert wird.  
  
 Aus Sicherheitsgründen bei umleitungen automatisch folgen, speichern Sie die Anmeldeinformationen, die Sie die Umleitung in enthalten sein sollen eine <xref:System.Net.CredentialCache> und weisen sie diese Eigenschaft. Diese Eigenschaft wird automatisch festgelegt werden, um `null` bei der Umleitung, wenn sie nichts außer enthält eine <xref:System.Net.CredentialCache>. Dass der Wert dieser Eigenschaft auf automatisch festgelegt werden `null` unter diesen Bedingungen verhindert, dass Anmeldeinformationen in einem nicht beabsichtigten Ziel gesendet werden.
  
## Examples  
 Das folgende Codebeispiel verwendet die Anmeldeinformationen des Benutzers System zum Authentifizieren einer Anforderung.  
  
 [!code-cpp[WebClientAuthentication#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClientAuthentication/CPP/webclientauth.cpp#1)]
 [!code-csharp[WebClientAuthentication#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClientAuthentication/CS/webclientauth.cs#1)]
 [!code-vb[WebClientAuthentication#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClientAuthentication/VB/webclientauth.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="P:System.Net.WebRequest.Credentials" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadData">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Lädt die Ressourcen als ein <see cref="T:System.Byte" /> Array von der angegebenen URI herunter.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadData">
      <MemberSignature Language="C#" Value="public byte[] DownloadData (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] DownloadData(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DownloadData (address As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ DownloadData(System::String ^ address);" />
      <MemberSignature Language="F#" Value="member this.DownloadData : string -&gt; byte[]" Usage="webClient.DownloadData address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Der URI für den Download der Daten.</param>
        <summary>Lädt die Ressourcen als ein <see cref="T:System.Byte" /> Array von der angegebenen URI herunter.</summary>
        <returns>Ein <see cref="T:System.Byte" />-Array, das die heruntergeladene Ressource enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Net.WebClient.DownloadData%2A> Methode lädt die Ressource herunter, mit dem vom angegebenen URI die `address` Parameter. Diese Methode wird beim Herunterladen der Ressource blockiert. Um eine Ressource herunterzuladen, und weiter ausgeführt, während des Wartens auf die Antwort des Servers, gehen die <xref:System.Net.WebClient.DownloadDataAsync%2A> Methoden.  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge ("") und `address` enthält keinen absoluten URI, `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Daten zu bilden. Wenn die <xref:System.Net.WebClient.QueryString%2A> -Eigenschaft keine leere Zeichenfolge ist, wird dieser an angefügt `address`.  
  
 Diese Methode verwendet den RETR-Befehl zum Herunterladen einer FTP-Ressource. Für eine HTTP-Ressource wird die GET-Methode verwendet.  
  
> [!NOTE]
>  Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird Daten von einem Server angefordert, und die zurückgegebenen Daten angezeigt. Es wird vorausgesetzt, dass `remoteUri` einen gültigen URI für die angeforderten Daten enthält.  
  
 [!code-cpp[WebClient_DownloadData#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_DownloadData/CPP/webclient_downloaddata.cpp#1)]
 [!code-csharp[WebClient_DownloadData#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_DownloadData/CS/webclient_downloaddata.cs#1)]
 [!code-vb[WebClient_DownloadData#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_DownloadData/VB/webclient_downloaddata.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und <paramref name="address" /> gebildete URI ist ungültig.  
  
- oder -  
Fehler beim Herunterladen von Daten.</exception>
        <exception cref="T:System.NotSupportedException">Die Methode wurde gleichzeitig für mehrere Threads aufgerufen.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadData">
      <MemberSignature Language="C#" Value="public byte[] DownloadData (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] DownloadData(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadData(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function DownloadData (address As Uri) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ DownloadData(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.DownloadData : Uri -&gt; byte[]" Usage="webClient.DownloadData address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">Der vom <see cref="T:System.Uri" />-Objekt dargestellte URI für den Download von Daten.</param>
        <summary>Lädt die Ressourcen als ein <see cref="T:System.Byte" /> Array von der angegebenen URI herunter.</summary>
        <returns>Ein <see cref="T:System.Byte" />-Array, das die heruntergeladene Ressource enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Net.WebClient.DownloadData%2A> Methode lädt die Ressource herunter, mit dem vom angegebenen URI die `address` Parameter. Diese Methode wird beim Herunterladen der Ressource blockiert. Um eine Ressource herunterzuladen, und weiter ausgeführt, während des Wartens auf die Antwort des Servers, gehen die <xref:System.Net.WebClient.DownloadDataAsync%2A> Methoden.  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge ("") und `address` enthält keinen absoluten URI, `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Daten zu bilden. Wenn die <xref:System.Net.WebClient.QueryString%2A> -Eigenschaft keine leere Zeichenfolge ist, wird dieser an angefügt `address`.  
  
 Diese Methode verwendet den RETR-Befehl zum Herunterladen einer FTP-Ressource. Für eine HTTP-Ressource wird die GET-Methode verwendet.  
  
 **Beachten Sie** dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die netzwerkablaufverfolgung in Ihrer Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadDataAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Lädt die Ressource als <see cref="T:System.Byte" /> Array aus dem URI herunter, das als asynchroner Vorgang angegeben wird. Durch diese Methoden wird der aufrufende Thread nicht blockiert.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadDataAsync">
      <MemberSignature Language="C#" Value="public void DownloadDataAsync (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadDataAsync(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadDataAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadDataAsync (address As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadDataAsync(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.DownloadDataAsync : Uri -&gt; unit" Usage="webClient.DownloadDataAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">Ein <see cref="T:System.Uri" /> mit dem herunterzuladenden URI.</param>
        <summary>Lädt die Ressource als <see cref="T:System.Byte" /> Array aus dem URI herunter, das als asynchroner Vorgang angegeben wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ruft die angegebene Ressource mithilfe der Standardmethode für das Protokoll, das im angegebenen URI-Schema zugeordnet `address`. Die Daten werden heruntergeladen mit asynchron aus dem Threadpool Threadressourcen, die automatisch zugewiesen werden.  
  
 Diese Methode blockiert den aufrufenden Thread nicht, beim Herunterladen der Ressource. Verwenden Sie zum Herunterladen einer Ressource und der Block beim Warten auf die Antwort des Servers eines der <xref:System.Net.WebClient.DownloadData%2A> Methoden. Wenn der Download abgeschlossen ist, die <xref:System.Net.WebClient.DownloadDataCompleted> Ereignis wird ausgelöst. Die Anwendung muss dieses Ereignis, um die Benachrichtigung behandeln. Die heruntergeladenen Daten finden Sie in der <xref:System.Net.DownloadDataCompletedEventArgs.Result%2A> Eigenschaft.  
  
 Sie können die <xref:System.Net.WebClient.CancelAsync%2A> Methode, um asynchrone Vorgänge abzubrechen, die nicht abgeschlossen wurden.  
  
 Diese Methode verwendet den RETR-Befehl zum Herunterladen einer FTP-Ressource. Für eine HTTP-Ressource wird die GET-Methode verwendet.  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge ("") und `address` enthält keinen absoluten URI, `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Daten zu bilden. Wenn die <xref:System.Net.WebClient.QueryString%2A> -Eigenschaft keine leere Zeichenfolge ist, wird dieser an angefügt `address`.  
  
> [!NOTE]
>  Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und <paramref name="address" /> gebildete URI ist ungültig.  
  
- oder -  
Fehler beim Herunterladen der Ressource.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadDataAsync">
      <MemberSignature Language="C#" Value="public void DownloadDataAsync (Uri address, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadDataAsync(class System.Uri address, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadDataAsync(System.Uri,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadDataAsync (address As Uri, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadDataAsync(Uri ^ address, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.DownloadDataAsync : Uri * obj -&gt; unit" Usage="webClient.DownloadDataAsync (address, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">Ein <see cref="T:System.Uri" /> mit dem herunterzuladenden URI.</param>
        <param name="userToken">Ein benutzerdefiniertes Objekt, das bei Abschluss des asynchronen Vorgangs an die aufgerufene Methode übergeben wird.</param>
        <summary>Lädt die Ressource als <see cref="T:System.Byte" /> Array aus dem URI herunter, das als asynchroner Vorgang angegeben wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ruft die angegebene Ressource mithilfe der Standardmethode für das Protokoll, das im angegebenen URI-Schema zugeordnet `address`. Die Daten werden heruntergeladen mit asynchron aus dem Threadpool Threadressourcen, die automatisch zugewiesen werden.  
  
 Diese Methode blockiert den aufrufenden Thread nicht, beim Herunterladen der Ressource. Verwenden Sie zum Herunterladen einer Ressource und der Block beim Warten auf die Antwort des Servers eines der <xref:System.Net.WebClient.DownloadData%2A> Methoden. Wenn der Download abgeschlossen ist, die <xref:System.Net.WebClient.DownloadDataCompleted> Ereignis wird ausgelöst. Die Anwendung muss dieses Ereignis, um die Benachrichtigung behandeln. Die heruntergeladenen Daten finden Sie in der <xref:System.Net.DownloadDataCompletedEventArgs.Result%2A> Eigenschaft.  
  
 Sie können die <xref:System.Net.WebClient.CancelAsync%2A> Methode, um asynchrone Vorgänge abzubrechen, die nicht abgeschlossen wurden.  
  
 Diese Methode verwendet den RETR-Befehl zum Herunterladen einer FTP-Ressource. Für eine HTTP-Ressource wird die GET-Methode verwendet.  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge ("") und `address` enthält keinen absoluten URI, `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Daten zu bilden. Wenn die <xref:System.Net.WebClient.QueryString%2A> -Eigenschaft keine leere Zeichenfolge ist, wird dieser an angefügt `address`.  
  
> [!NOTE]
>  Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und <paramref name="address" /> gebildete URI ist ungültig.  
  
- oder -  
Fehler beim Herunterladen der Ressource.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadDataCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.DownloadDataCompletedEventHandler DownloadDataCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.DownloadDataCompletedEventHandler DownloadDataCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.DownloadDataCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DownloadDataCompleted As DownloadDataCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::DownloadDataCompletedEventHandler ^ DownloadDataCompleted;" />
      <MemberSignature Language="F#" Value="member this.DownloadDataCompleted : System.Net.DownloadDataCompletedEventHandler " Usage="member this.DownloadDataCompleted : System.Net.DownloadDataCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.DownloadDataCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn ein asynchroner Datendownload abgeschlossen wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis wird jedes Mal ausgelöst, wenn ein asynchroner Datendownload abgeschlossen ist. Asynchronen Downloads werden gestartet, durch den Aufruf der <xref:System.Net.WebClient.DownloadDataAsync%2A> Methoden.  
  
 Die <xref:System.Net.DownloadDataCompletedEventHandler> ist der Delegat für dieses Ereignis. Die <xref:System.Net.DownloadDataCompletedEventArgs> Klasse stellt den Ereignishandler mit Ereignisdaten bereit.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht das Festlegen von eines ereignishandlers für dieses Ereignis.  
  
 [!code-cpp[NCLWebClientAsync#21](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#21)]
 [!code-csharp[NCLWebClientAsync#21](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#21)]
 [!code-vb[NCLWebClientAsync#21](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadDataTaskAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Lädt die Ressource als <see cref="T:System.Byte" /> Array aus dem URI herunter, das als asynchroner Vorgang mithilfe eines Taskobjekts angegeben wird. Durch diese Methoden wird der aufrufende Thread nicht blockiert.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadDataTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; DownloadDataTaskAsync (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; DownloadDataTaskAsync(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadDataTaskAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DownloadDataTaskAsync (address As String) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ DownloadDataTaskAsync(System::String ^ address);" />
      <MemberSignature Language="F#" Value="member this.DownloadDataTaskAsync : string -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.DownloadDataTaskAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Der herunterzuladende URI der Ressource.</param>
        <summary>Lädt die Ressource als <see cref="T:System.Byte" /> Array aus dem URI herunter, das als asynchroner Vorgang mithilfe eines Taskobjekts angegeben wird.</summary>
        <returns>Gibt <see cref="T:System.Threading.Tasks.Task`1" />zurück.  
  
Das Aufgabenobjekt, das den asynchronen Vorgang darstellt. Die <see cref="P:System.Threading.Tasks.Task`1.Result" />-Eigenschaft im Task-Objekt gibt ein <see cref="T:System.Byte" /> Array zurück, das die heruntergeladene Ressource enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Vorgang wird nicht blockiert. Das zurückgegebene <xref:System.Threading.Tasks.Task%601> Objekt wird abgeschlossen, nachdem die Ressource heruntergeladen wurde.  
  
 Diese Methode ruft die angegebene Ressource mithilfe der Standardmethode für das Protokoll verknüpft ist, mit dem URI-Schema, das im angegebenen ab der `address` Parameter. Die Daten werden heruntergeladen mit asynchron aus dem Threadpool Threadressourcen, die automatisch zugewiesen werden.  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge ("") und `address` enthält keinen absoluten URI, `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Daten zu bilden. Wenn die <xref:System.Net.WebClient.QueryString%2A> -Eigenschaft keine leere Zeichenfolge ist, wird dieser an angefügt `address`.  
  
 Diese Methode verwendet den RETR-Befehl zum Herunterladen einer FTP-Ressource. Für eine HTTP-Ressource wird die GET-Methode verwendet.  
  
> [!NOTE]
>  Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 Im folgenden Codebeispiel wird Daten von einem Server angefordert, und die zurückgegebenen Daten angezeigt. Es wird vorausgesetzt, dass `remoteUri` einen gültigen URI für die angeforderten Daten enthält.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und <paramref name="address" /> gebildete URI ist ungültig.  
  
- oder -  
Fehler beim Herunterladen der Ressource.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadDataTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; DownloadDataTaskAsync (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; DownloadDataTaskAsync(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadDataTaskAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function DownloadDataTaskAsync (address As Uri) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ DownloadDataTaskAsync(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.DownloadDataTaskAsync : Uri -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.DownloadDataTaskAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">Der herunterzuladende URI der Ressource.</param>
        <summary>Lädt die Ressource als <see cref="T:System.Byte" /> Array aus dem URI herunter, das als asynchroner Vorgang mithilfe eines Taskobjekts angegeben wird.</summary>
        <returns>Gibt <see cref="T:System.Threading.Tasks.Task`1" />zurück.  
  
Das Aufgabenobjekt, das den asynchronen Vorgang darstellt. Die <see cref="P:System.Threading.Tasks.Task`1.Result" />-Eigenschaft im Task-Objekt gibt ein <see cref="T:System.Byte" /> Array zurück, das die heruntergeladene Ressource enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Vorgang wird nicht blockiert. Das zurückgegebene <xref:System.Threading.Tasks.Task%601> Objekt wird abgeschlossen, nachdem die Ressource heruntergeladen wurde.  
  
 Diese Methode ruft die angegebene Ressource mithilfe der Standardmethode für das Protokoll verknüpft ist, mit dem URI-Schema, das im angegebenen ab der `address` Parameter. Die Daten werden heruntergeladen mit asynchron aus dem Threadpool Threadressourcen, die automatisch zugewiesen werden.  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge ("") und `address` enthält keinen absoluten URI, `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Daten zu bilden. Wenn die <xref:System.Net.WebClient.QueryString%2A> -Eigenschaft keine leere Zeichenfolge ist, wird dieser an angefügt `address`.  
  
 Diese Methode verwendet den RETR-Befehl zum Herunterladen einer FTP-Ressource. Für eine HTTP-Ressource wird die GET-Methode verwendet.  
  
 **Beachten Sie** dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die netzwerkablaufverfolgung in Ihrer Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und <paramref name="address" /> gebildete URI ist ungültig.  
  
- oder -  
Fehler beim Herunterladen der Ressource.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadFile">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Lädt die Ressource mit dem angegebenen URI in eine lokale Datei herunter.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (string address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadFile(string address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As String, fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(System::String ^ address, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : string * string -&gt; unit" Usage="webClient.DownloadFile (address, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Der URI für den Download der Daten.</param>
        <param name="fileName">Der Name der lokalen Datei, die die Daten empfangen soll.</param>
        <summary>Lädt die Ressource mit dem angegebenen URI in eine lokale Datei herunter.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Net.WebClient.DownloadFile%2A> Methode downloads von Daten einer lokalen Datei auf den angegebenen URI die `address` Parameter. Diese Methode wird beim Herunterladen der Ressource blockiert. Um eine Ressource herunterzuladen, und weiter ausgeführt, während des Wartens auf die Antwort des Servers, gehen die <xref:System.Net.WebClient.DownloadFileAsync%2A> Methoden.  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge ("") und `address` enthält keinen absoluten URI, `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Daten zu bilden. Wenn die <xref:System.Net.WebClient.QueryString%2A> -Eigenschaft keine leere Zeichenfolge ist, wird dieser an angefügt `address`.  
  
 Diese Methode verwendet den RETR-Befehl zum Herunterladen einer FTP-Ressource. Für eine HTTP-Ressource wird die GET-Methode verwendet.  
  
> [!NOTE]
>  Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 Bei Verwendung dieser Methode in einer Anwendung auf mittlerer Ebene, z. B. einer ASP.NET-Seite erhalten Sie einen Fehler, wenn das Konto, unter dem die Anwendung ausgeführt wird, nicht über die Berechtigung zum Zugriff auf die Datei verfügt.  
  
   
  
## Examples  
 Das folgende Codebeispiel lädt eine Datei aus http://www.contoso.com auf der lokalen Festplatte gespeichert.  
  
 [!code-cpp[WebClient_DownloadFile#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_DownloadFile/CPP/webclient_downloadfile.cpp#1)]
 [!code-csharp[WebClient_DownloadFile#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_DownloadFile/CS/webclient_downloadfile.cs#1)]
 [!code-vb[WebClient_DownloadFile#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_DownloadFile/VB/webclient_downloadfile.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und <paramref name="address" /> gebildete URI ist ungültig.  
  
- oder -  
 <paramref name="filename" /> ist <see langword="null" /> oder <see cref="F:System.String.Empty" />.  
  
- oder -  
Die Datei ist nicht vorhanden.  
  
– oder – Fehler beim Herunterladen von Daten.</exception>
        <exception cref="T:System.NotSupportedException">Die Methode wurde gleichzeitig für mehrere Threads aufgerufen.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">um die Datei schreiben <paramref name="fileName" />. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></permission>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadFile(class System.Uri address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadFile(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string -&gt; unit" Usage="webClient.DownloadFile (address, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Der als ein <see cref="T:System.String" /> angegebene URI, von dem Daten heruntergeladen werden.</param>
        <param name="fileName">Der Name der lokalen Datei, die die Daten empfangen soll.</param>
        <summary>Lädt die Ressource mit dem angegebenen URI in eine lokale Datei herunter.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Net.WebClient.DownloadFile%2A> Methode downloads von Daten einer lokalen Datei auf den angegebenen URI die `address` Parameter. Diese Methode wird beim Herunterladen der Ressource blockiert. Um eine Ressource herunterzuladen, und weiter ausgeführt, während des Wartens auf die Antwort des Servers, gehen die <xref:System.Net.WebClient.DownloadFileAsync%2A> Methoden.  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge ("") und `address` enthält keinen absoluten URI, `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Daten zu bilden. Wenn die <xref:System.Net.WebClient.QueryString%2A> -Eigenschaft keine leere Zeichenfolge ist, wird dieser an angefügt `address`.  
  
 Diese Methode verwendet den RETR-Befehl zum Herunterladen einer FTP-Ressource. Für eine HTTP-Ressource wird die GET-Methode verwendet.  
  
> [!NOTE]
>  Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 Bei Verwendung dieser Methode in einer Anwendung auf mittlerer Ebene, z. B. einer ASP.NET-Seite erhalten Sie einen Fehler, wenn das Konto, unter dem die Anwendung ausgeführt wird, nicht über die Berechtigung zum Zugriff auf die Datei verfügt.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.  
  
- oder -  
Der <paramref name="fileName" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und <paramref name="address" /> gebildete URI ist ungültig.  
  
- oder -  
 <paramref name="filename" /> ist <see langword="null" /> oder <see cref="F:System.String.Empty" />.  
  
- oder -  
Die Datei ist nicht vorhanden.  
  
- oder -  
Fehler beim Herunterladen von Daten.</exception>
        <exception cref="T:System.NotSupportedException">Die Methode wurde gleichzeitig für mehrere Threads aufgerufen.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">um die Datei schreiben <paramref name="fileName" />. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadFileAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Lädt die angegebene Ressource in eine lokale Datei als asynchroner Vorgang herunter und gibt ein Taskobjekts zurück. Durch diese Methoden wird der aufrufende Thread nicht blockiert.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadFileAsync">
      <MemberSignature Language="C#" Value="public void DownloadFileAsync (Uri address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadFileAsync(class System.Uri address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadFileAsync(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFileAsync (address As Uri, fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFileAsync(Uri ^ address, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFileAsync : Uri * string -&gt; unit" Usage="webClient.DownloadFileAsync (address, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Der herunterzuladende URI der Ressource.</param>
        <param name="fileName">Der Name der Datei, die auf dem lokalen Computer platziert werden soll.</param>
        <summary>Lädt die Ressource mit dem angegebenen URI in eine lokale Datei herunter. Durch diese Methode wird der aufrufende Thread nicht blockiert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode lädt die Ressource auf den angegebenen URI die `address` Parameter. Wenn der Download erfolgreich abgeschlossen wurde, kann die heruntergeladene Datei heißt `fileName` auf dem lokalen Computer. Die Datei wird heruntergeladen mit asynchron aus dem Threadpool Threadressourcen, die automatisch zugewiesen werden. Fügen Sie einen Ereignishandler hinzu, um benachrichtigt zu werden, wenn die Datei verfügbar ist, die <xref:System.Net.WebClient.DownloadFileCompleted> Ereignis.  
  
 Diese Methode wird den aufrufenden Thread nicht blockiert, während die Ressource heruntergeladen wird. Um zu blockieren, bis der Download abgeschlossen, gehen die <xref:System.Net.WebClient.DownloadFile%2A> Methoden.  
  
 Sie können die <xref:System.Net.WebClient.CancelAsync%2A> Methode, um asynchrone Vorgänge abzubrechen, die nicht abgeschlossen wurden.  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge ("") und `address` gibt kein absoluten URI, `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Daten zu bilden. Wenn die <xref:System.Net.WebClient.QueryString%2A> -Eigenschaft keine leere Zeichenfolge ist, wird dieser an angefügt `address`.  
  
 Diese Methode verwendet den RETR-Befehl zum Herunterladen einer FTP-Ressource. Für eine HTTP-Ressource wird die GET-Methode verwendet.  
  
> [!NOTE]
>  Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 Wenn Sie diese Methode in einer ASP.NET-Seite zu verwenden, erhalten Sie einen Fehler, wenn das Konto, dem in die Seite ausgeführt wird, nicht über die Berechtigung zum Zugriff auf die lokale Datei verfügt.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.  
  
- oder -  
Der <paramref name="fileName" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und <paramref name="address" /> gebildete URI ist ungültig.  
  
- oder -  
Fehler beim Herunterladen der Ressource.</exception>
        <exception cref="T:System.InvalidOperationException">Die von <paramref name="fileName" /> angegebene lokale Datei wird von einem anderen Thread verwendet.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadFileAsync">
      <MemberSignature Language="C#" Value="public void DownloadFileAsync (Uri address, string fileName, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadFileAsync(class System.Uri address, string fileName, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadFileAsync(System.Uri,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFileAsync (address As Uri, fileName As String, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFileAsync(Uri ^ address, System::String ^ fileName, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.DownloadFileAsync : Uri * string * obj -&gt; unit" Usage="webClient.DownloadFileAsync (address, fileName, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">Der herunterzuladende URI der Ressource.</param>
        <param name="fileName">Der Name der Datei, die auf dem lokalen Computer platziert werden soll.</param>
        <param name="userToken">Ein benutzerdefiniertes Objekt, das bei Abschluss des asynchronen Vorgangs an die aufgerufene Methode übergeben wird.</param>
        <summary>Lädt die Ressource mit dem angegebenen URI in eine lokale Datei herunter. Durch diese Methode wird der aufrufende Thread nicht blockiert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode lädt die Ressource auf den angegebenen URI die `address` Parameter. Wenn der Download erfolgreich abgeschlossen wurde, kann die heruntergeladene Datei heißt `fileName` auf dem lokalen Computer. Die Datei wird heruntergeladen mit asynchron aus dem Threadpool Threadressourcen, die automatisch zugewiesen werden. Fügen Sie einen Ereignishandler hinzu, um benachrichtigt zu werden, wenn die Datei verfügbar ist, die <xref:System.Net.WebClient.DownloadFileCompleted> Ereignis.  
  
 Diese Methode wird den aufrufenden Thread nicht blockiert, während die Ressource heruntergeladen wird. Um zu blockieren, bis der Download abgeschlossen, gehen die <xref:System.Net.WebClient.DownloadFile%2A> Methoden.  
  
 Sie können die <xref:System.Net.WebClient.CancelAsync%2A> Methode, um asynchrone Vorgänge abzubrechen, die nicht abgeschlossen wurden.  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge ("") und `address` gibt kein absoluten URI, `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Daten zu bilden. Wenn die <xref:System.Net.WebClient.QueryString%2A> -Eigenschaft keine leere Zeichenfolge ist, wird dieser an angefügt `address`.  
  
 Diese Methode verwendet den RETR-Befehl zum Herunterladen einer FTP-Ressource. Für eine HTTP-Ressource wird die GET-Methode verwendet.  
  
> [!NOTE]
>  Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 Wenn Sie diese Methode in einer ASP.NET-Seite zu verwenden, erhalten Sie einen Fehler, wenn das Konto, dem in die Seite ausgeführt wird, nicht über die Berechtigung zum Zugriff auf die lokale Datei verfügt.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.  
  
- oder -  
Der <paramref name="fileName" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und <paramref name="address" /> gebildete URI ist ungültig.  
  
- oder -  
Fehler beim Herunterladen der Ressource.</exception>
        <exception cref="T:System.InvalidOperationException">Die von <paramref name="fileName" /> angegebene lokale Datei wird von einem anderen Thread verwendet.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadFileCompleted">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.AsyncCompletedEventHandler DownloadFileCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.AsyncCompletedEventHandler DownloadFileCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.DownloadFileCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DownloadFileCompleted As AsyncCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::AsyncCompletedEventHandler ^ DownloadFileCompleted;" />
      <MemberSignature Language="F#" Value="member this.DownloadFileCompleted : System.ComponentModel.AsyncCompletedEventHandler " Usage="member this.DownloadFileCompleted : System.ComponentModel.AsyncCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AsyncCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn ein asynchroner Dateidownload abgeschlossen wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis wird jedes Mal ausgelöst, wenn ein asynchroner Dateidownload abgeschlossen wird. Asynchrone Datei-Downloads werden gestartet, durch den Aufruf der <xref:System.Net.WebClient.DownloadFileAsync%2A> Methoden.  
  
 Die <xref:System.ComponentModel.AsyncCompletedEventHandler> ist der Delegat für dieses Ereignis. Die <xref:System.ComponentModel.AsyncCompletedEventArgs> Klasse stellt den Ereignishandler mit Ereignisdaten bereit.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht das Festlegen von eines ereignishandlers für dieses Ereignis.  
  
 [!code-cpp[NCLWebClientAsync#19](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#19)]
 [!code-csharp[NCLWebClientAsync#19](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#19)]
 [!code-vb[NCLWebClientAsync#19](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadFileTaskAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Lädt die angegebene Ressource in eine lokale Datei als asynchroner Vorgang mithilfe eines Taskobjekts herunter. Durch diese Methoden wird der aufrufende Thread nicht blockiert.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadFileTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task DownloadFileTaskAsync (string address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task DownloadFileTaskAsync(string address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadFileTaskAsync(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DownloadFileTaskAsync (address As String, fileName As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ DownloadFileTaskAsync(System::String ^ address, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFileTaskAsync : string * string -&gt; System.Threading.Tasks.Task" Usage="webClient.DownloadFileTaskAsync (address, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Der herunterzuladende URI der Ressource.</param>
        <param name="fileName">Der Name der Datei, die auf dem lokalen Computer platziert werden soll.</param>
        <summary>Lädt die angegebene Ressource in eine lokale Datei als asynchroner Vorgang mithilfe eines Taskobjekts herunter.</summary>
        <returns>Gibt <see cref="T:System.Threading.Tasks.Task" />zurück.  
  
Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Vorgang wird nicht blockiert. Das zurückgegebene <xref:System.Threading.Tasks.Task> Objekt wird abgeschlossen, nachdem die Ressource heruntergeladen wurde.  
  
 Diese Methode lädt die Ressource auf den angegebenen URI die `address` Parameter. Wenn der Download erfolgreich abgeschlossen wurde, kann die heruntergeladene Datei heißt `fileName` auf dem lokalen Computer. Die Datei wird heruntergeladen mit asynchron aus dem Threadpool Threadressourcen, die automatisch zugewiesen werden.  
  
 Sie können die <xref:System.Net.WebClient.CancelAsync%2A> Methode, um asynchrone Vorgänge abzubrechen, die nicht abgeschlossen wurden.  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge ("") und `address` gibt kein absoluten URI, `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Daten zu bilden. Wenn die <xref:System.Net.WebClient.QueryString%2A> -Eigenschaft keine leere Zeichenfolge ist, wird dieser an angefügt `address`.  
  
 Diese Methode verwendet den RETR-Befehl zum Herunterladen einer FTP-Ressource. Für eine HTTP-Ressource wird die GET-Methode verwendet.  
  
> [!NOTE]
>  Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 Wenn Sie diese Methode in einer ASP.NET-Seite zu verwenden, erhalten Sie einen Fehler, wenn das Konto, dem in die Seite ausgeführt wird, nicht über die Berechtigung zum Zugriff auf die lokale Datei verfügt.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.  
  
- oder -  
Der <paramref name="fileName" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und <paramref name="address" /> gebildete URI ist ungültig.  
  
- oder -  
Fehler beim Herunterladen der Ressource.</exception>
        <exception cref="T:System.InvalidOperationException">Die von <paramref name="fileName" /> angegebene lokale Datei wird von einem anderen Thread verwendet.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadFileTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task DownloadFileTaskAsync (Uri address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task DownloadFileTaskAsync(class System.Uri address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadFileTaskAsync(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DownloadFileTaskAsync (address As Uri, fileName As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ DownloadFileTaskAsync(Uri ^ address, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFileTaskAsync : Uri * string -&gt; System.Threading.Tasks.Task" Usage="webClient.DownloadFileTaskAsync (address, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Der herunterzuladende URI der Ressource.</param>
        <param name="fileName">Der Name der Datei, die auf dem lokalen Computer platziert werden soll.</param>
        <summary>Lädt die angegebene Ressource in eine lokale Datei als asynchroner Vorgang mithilfe eines Taskobjekts herunter.</summary>
        <returns>Gibt <see cref="T:System.Threading.Tasks.Task" />zurück.  
  
Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Vorgang wird nicht blockiert. Das zurückgegebene <xref:System.Threading.Tasks.Task> Objekt wird abgeschlossen, nachdem die Ressource heruntergeladen wurde.  
  
 Diese Methode lädt die Ressource auf den angegebenen URI die `address` Parameter. Wenn der Download erfolgreich abgeschlossen wurde, kann die heruntergeladene Datei heißt `fileName` auf dem lokalen Computer. Die Datei wird heruntergeladen mit asynchron aus dem Threadpool Threadressourcen, die automatisch zugewiesen werden.  
  
 Sie können die <xref:System.Net.WebClient.CancelAsync%2A> Methode, um asynchrone Vorgänge abzubrechen, die nicht abgeschlossen wurden.  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge ("") und `address` gibt kein absoluten URI, `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Daten zu bilden. Wenn die <xref:System.Net.WebClient.QueryString%2A> -Eigenschaft keine leere Zeichenfolge ist, wird dieser an angefügt `address`.  
  
 Diese Methode verwendet den RETR-Befehl zum Herunterladen einer FTP-Ressource. Für eine HTTP-Ressource wird die GET-Methode verwendet.  
  
> [!NOTE]
>  Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 Wenn Sie diese Methode in einer ASP.NET-Seite zu verwenden, erhalten Sie einen Fehler, wenn das Konto, dem in die Seite ausgeführt wird, nicht über die Berechtigung zum Zugriff auf die lokale Datei verfügt.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.  
  
- oder -  
Der <paramref name="fileName" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und <paramref name="address" /> gebildete URI ist ungültig.  
  
- oder -  
Fehler beim Herunterladen der Ressource.</exception>
        <exception cref="T:System.InvalidOperationException">Die von <paramref name="fileName" /> angegebene lokale Datei wird von einem anderen Thread verwendet.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadProgressChanged">
      <MemberSignature Language="C#" Value="public event System.Net.DownloadProgressChangedEventHandler DownloadProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.DownloadProgressChangedEventHandler DownloadProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.DownloadProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DownloadProgressChanged As DownloadProgressChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::DownloadProgressChangedEventHandler ^ DownloadProgressChanged;" />
      <MemberSignature Language="F#" Value="member this.DownloadProgressChanged : System.Net.DownloadProgressChangedEventHandler " Usage="member this.DownloadProgressChanged : System.Net.DownloadProgressChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.DownloadProgressChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn Daten teilweise oder vollständig erfolgreich über einen asynchronen Download übertragen werden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis wird jedes Mal ausgelöst, ein asynchroner Download durchgeführt wird. Dieses Ereignis wird ausgelöst, wenn Downloads mit einer der folgenden Methoden gestartet werden.  
  
|Methode|Beschreibung |  
|------------|-----------------|  
|<xref:System.Net.WebClient.DownloadDataAsync%2A>|Lädt Daten aus einer Ressource herunter, und gibt eine <xref:System.Byte> Array ohne Blockieren des aufrufenden Threads.|  
|<xref:System.Net.WebClient.DownloadFileAsync%2A>|Lädt Daten aus einer Ressource in einer lokalen Datei, ohne den aufrufenden Thread blockieren.|  
|<xref:System.Net.WebClient.OpenReadAsync%2A>|Die Daten zurückgegeben aus einer Ressource, ohne den aufrufenden Thread blockieren.|  
  
 Die <xref:System.Net.DownloadProgressChangedEventHandler> ist der Delegat für dieses Ereignis. Die <xref:System.Net.DownloadProgressChangedEventArgs> Klasse stellt den Ereignishandler mit Ereignisdaten bereit.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
> [!NOTE]
>  Eine passive FTP-Dateiübertragung zeigen daraufhin immer eine statusprozentsatz 0 (null), da die Dateigröße nicht in der Server gesendet hat. Um den Fortschritt anzuzeigen, können Sie die FTP-Verbindung in den aktiven ändern, durch Überschreiben der <xref:System.Net.WebClient.GetWebRequest%2A> virtuelle Methode:  
  
```csharp  
internal class MyWebClient : WebClient
{  
    protected override WebRequest GetWebRequest(Uri address)
    {  
        FtpWebRequest req = (FtpWebRequest)base.GetWebRequest(address);  
        req.UsePassive = false;  
        return req;  
    }  
}  
```  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht das Festlegen von eines ereignishandlers für dieses Ereignis.  
  
 [!code-cpp[NCLWebClientAsync#19](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#19)]
 [!code-csharp[NCLWebClientAsync#19](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#19)]
 [!code-vb[NCLWebClientAsync#19](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#19)]  
  
 Das folgende Codebeispiel zeigt eine Implementierung eines Handlers für dieses Ereignis.  
  
 [!code-cpp[NCLWebClientAsync#42](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#42)]
 [!code-csharp[NCLWebClientAsync#42](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#42)]
 [!code-vb[NCLWebClientAsync#42](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#42)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadString">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Lädt die angeforderte Ressource als <see cref="T:System.String" /> herunter. Die herunterzuladende Ressource wird möglicherweise als <see cref="T:System.String" />, der den URI enthält, oder als <see cref="T:System.Uri" /> angegeben.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadString">
      <MemberSignature Language="C#" Value="public string DownloadString (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string DownloadString(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DownloadString (address As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ DownloadString(System::String ^ address);" />
      <MemberSignature Language="F#" Value="member this.DownloadString : string -&gt; string" Usage="webClient.DownloadString address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Ein <see cref="T:System.String" /> mit dem herunterzuladenden URI.</param>
        <summary>Lädt die angeforderte Ressource als <see cref="T:System.String" /> herunter. Die herunterzuladende Ressource wird als <see cref="T:System.String" /> angegeben, der den URI enthält.</summary>
        <returns>Ein <see cref="T:System.String" /> mit der angeforderten Ressource.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ruft die angegebene Ressource ab. Nach dem Download der Ressource, die Methode verwendet die Codierung angegeben werden, der <xref:System.Net.WebClient.Encoding%2A> Eigenschaft, um die Ressource konvertieren eine <xref:System.String>. Diese Methode wird beim Herunterladen der Ressource blockiert. Um eine Ressource herunterzuladen, und weiter ausgeführt, während des Wartens auf die Antwort des Servers, gehen die <xref:System.Net.WebClient.DownloadStringAsync%2A> Methoden.  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge ("") und `address` enthält keinen absoluten URI, `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Daten zu bilden. Wenn die <xref:System.Net.WebClient.QueryString%2A> -Eigenschaft keine leere Zeichenfolge ist, wird dieser an angefügt `address`.  
  
 Diese Methode verwendet den RETR-Befehl zum Herunterladen einer FTP-Ressource. Für eine HTTP-Ressource wird die GET-Methode verwendet.  
  
> [!NOTE]
>  Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht das Aufrufen dieser Methode.  
  
 [!code-cpp[NCLWebClientAsync#25](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#25)]
 [!code-csharp[NCLWebClientAsync#25](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#25)]
 [!code-vb[NCLWebClientAsync#25](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#25)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und <paramref name="address" /> gebildete URI ist ungültig.  
  
- oder -  
Fehler beim Herunterladen der Ressource.</exception>
        <exception cref="T:System.NotSupportedException">Die Methode wurde gleichzeitig für mehrere Threads aufgerufen.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadString">
      <MemberSignature Language="C#" Value="public string DownloadString (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string DownloadString(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadString(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function DownloadString (address As Uri) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ DownloadString(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.DownloadString : Uri -&gt; string" Usage="webClient.DownloadString address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">Ein <see cref="T:System.Uri" />-Objekt, das den herunterzuladenden URI enthält.</param>
        <summary>Lädt die angeforderte Ressource als <see cref="T:System.String" /> herunter. Die herunterzuladende Ressource ist als <see cref="T:System.Uri" /> angegeben.</summary>
        <returns>Ein <see cref="T:System.String" /> mit der angeforderten Ressource.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ruft die angegebene Ressource ab. Nach dem Download der Ressource, die Methode verwendet die Codierung angegeben werden, der <xref:System.Net.WebClient.Encoding%2A> Eigenschaft, um die Ressource konvertieren eine <xref:System.String>. Diese Methode wird beim Herunterladen der Ressource blockiert. Um eine Ressource herunterzuladen, und weiter ausgeführt, während des Wartens auf die Antwort des Servers, gehen die <xref:System.Net.WebClient.DownloadStringAsync%2A> Methoden.  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge ("") und `address` enthält keinen absoluten URI, `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Daten zu bilden. Wenn die <xref:System.Net.WebClient.QueryString%2A> -Eigenschaft keine leere Zeichenfolge ist, wird dieser an angefügt `address`.  
  
 Diese Methode verwendet den RETR-Befehl zum Herunterladen einer FTP-Ressource. Für eine HTTP-Ressource wird die GET-Methode verwendet.  
  
> [!NOTE]
>  Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und <paramref name="address" /> gebildete URI ist ungültig.  
  
- oder -  
Fehler beim Herunterladen der Ressource.</exception>
        <exception cref="T:System.NotSupportedException">Die Methode wurde gleichzeitig für mehrere Threads aufgerufen.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadStringAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Lädt die als <see cref="T:System.String" /> oder <see cref="T:System.Uri" /> angegebene Ressource herunter. Durch diese Methoden wird der aufrufende Thread nicht blockiert.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadStringAsync">
      <MemberSignature Language="C#" Value="public void DownloadStringAsync (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadStringAsync(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadStringAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadStringAsync (address As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadStringAsync(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.DownloadStringAsync : Uri -&gt; unit" Usage="webClient.DownloadStringAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">Ein <see cref="T:System.Uri" /> mit dem herunterzuladenden URI.</param>
        <summary>Lädt die als <see cref="T:System.Uri" /> angegebene Ressource herunter. Durch diese Methode wird der aufrufende Thread nicht blockiert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Ressource wird heruntergeladen mit asynchron aus dem Threadpool Threadressourcen, die automatisch zugewiesen werden.  
  
 Nach dem Herunterladen der Ressource an, diese Methode verwendet die Codierung angegeben werden, der <xref:System.Net.WebClient.Encoding%2A> Eigenschaft, um die Ressource konvertieren eine <xref:System.String>. Diese Methode blockiert den aufrufenden Thread nicht, beim Herunterladen der Ressource. Verwenden Sie zum Herunterladen einer Ressource und einen Block während des Wartens auf die Antwort des Servers der <xref:System.Net.WebClient.DownloadString%2A> Methode. Wenn der Download abgeschlossen ist, die <xref:System.Net.WebClient.DownloadStringCompleted> Ereignis wird ausgelöst. Die Anwendung muss dieses Ereignis, um die Benachrichtigung behandeln. Der heruntergeladene Zeichenfolge steht in der <xref:System.Net.DownloadStringCompletedEventArgs.Result%2A> Eigenschaft.  
  
 Sie können die <xref:System.Net.WebClient.CancelAsync%2A> Methode, um asynchrone Vorgänge abzubrechen, die nicht abgeschlossen wurden.  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge ("") und `address` enthält keinen absoluten URI, `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Daten zu bilden. Wenn die <xref:System.Net.WebClient.QueryString%2A> -Eigenschaft keine leere Zeichenfolge ist, wird dieser an angefügt `address`.  
  
 Diese Methode verwendet den RETR-Befehl zum Herunterladen einer FTP-Ressource. Für eine HTTP-Ressource wird die GET-Methode verwendet.  
  
> [!NOTE]
>  Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und <paramref name="address" /> gebildete URI ist ungültig.  
  
- oder -  
Fehler beim Herunterladen der Ressource.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadStringAsync">
      <MemberSignature Language="C#" Value="public void DownloadStringAsync (Uri address, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadStringAsync(class System.Uri address, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadStringAsync(System.Uri,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadStringAsync (address As Uri, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadStringAsync(Uri ^ address, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.DownloadStringAsync : Uri * obj -&gt; unit" Usage="webClient.DownloadStringAsync (address, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">Ein <see cref="T:System.Uri" /> mit dem herunterzuladenden URI.</param>
        <param name="userToken">Ein benutzerdefiniertes Objekt, das bei Abschluss des asynchronen Vorgangs an die aufgerufene Methode übergeben wird.</param>
        <summary>Lädt die angegebene Zeichenfolge in die angegebene Ressource herunter. Durch diese Methode wird der aufrufende Thread nicht blockiert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Ressource wird heruntergeladen mit asynchron aus dem Threadpool Threadressourcen, die automatisch zugewiesen werden.  
  
 Nach dem Herunterladen der Ressource an, diese Methode verwendet die Codierung angegeben werden, der <xref:System.Net.WebClient.Encoding%2A> Eigenschaft, um die Ressource konvertieren eine <xref:System.String>. Diese Methode blockiert den aufrufenden Thread nicht, beim Herunterladen der Ressource. Verwenden Sie zum Herunterladen einer Ressource und einen Block während des Wartens auf die Antwort des Servers der <xref:System.Net.WebClient.DownloadString%2A> Methode. Wenn der Download abgeschlossen ist, die <xref:System.Net.WebClient.DownloadStringCompleted> Ereignis wird ausgelöst. Die Anwendung muss dieses Ereignis, um die Benachrichtigung behandeln. Der heruntergeladene Zeichenfolge steht in der <xref:System.Net.DownloadStringCompletedEventArgs.Result%2A> Eigenschaft.  
  
 Sie können die <xref:System.Net.WebClient.CancelAsync%2A> Methode, um asynchrone Vorgänge abzubrechen, die nicht abgeschlossen wurden.  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge ("") und `address` enthält keinen absoluten URI, `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Daten zu bilden. Wenn die <xref:System.Net.WebClient.QueryString%2A> -Eigenschaft keine leere Zeichenfolge ist, wird dieser an angefügt `address`.  
  
 Diese Methode verwendet den RETR-Befehl zum Herunterladen einer FTP-Ressource. Für eine HTTP-Ressource wird die GET-Methode verwendet.  
  
> [!NOTE]
>  Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und <paramref name="address" /> gebildete URI ist ungültig.  
  
- oder -  
Fehler beim Herunterladen der Ressource.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadStringCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.DownloadStringCompletedEventHandler DownloadStringCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.DownloadStringCompletedEventHandler DownloadStringCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.DownloadStringCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DownloadStringCompleted As DownloadStringCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::DownloadStringCompletedEventHandler ^ DownloadStringCompleted;" />
      <MemberSignature Language="F#" Value="member this.DownloadStringCompleted : System.Net.DownloadStringCompletedEventHandler " Usage="member this.DownloadStringCompleted : System.Net.DownloadStringCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.DownloadStringCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn ein asynchroner Ressourcendownload abgeschlossen wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis wird jedes Mal ausgelöst, wenn ein asynchroner Vorgang zum Herunterladen einer Ressource als Zeichenfolge schließt. Diese Vorgänge werden gestartet, durch den Aufruf der <xref:System.Net.WebClient.DownloadStringAsync%2A> Methoden.  
  
 Die <xref:System.Net.DownloadStringCompletedEventHandler> ist der Delegat für dieses Ereignis. Die <xref:System.Net.DownloadStringCompletedEventArgs> Klasse stellt den Ereignishandler mit Ereignisdaten bereit.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht das Festlegen von eines ereignishandlers für dieses Ereignis.  
  
 [!code-cpp[NCLWebClientAsync#28](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#28)]
 [!code-csharp[NCLWebClientAsync#28](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#28)]
 [!code-vb[NCLWebClientAsync#28](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadStringTaskAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Lädt die Ressource als <see cref="T:System.String" /> aus dem URI herunter, das als asynchroner Vorgang mithilfe eines Taskobjekts angegeben wird.  Durch diese Methoden wird der aufrufende Thread nicht blockiert.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadStringTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; DownloadStringTaskAsync (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;string&gt; DownloadStringTaskAsync(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadStringTaskAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DownloadStringTaskAsync (address As String) As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::String ^&gt; ^ DownloadStringTaskAsync(System::String ^ address);" />
      <MemberSignature Language="F#" Value="member this.DownloadStringTaskAsync : string -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="webClient.DownloadStringTaskAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Der herunterzuladende URI der Ressource.</param>
        <summary>Lädt die Ressource als <see cref="T:System.String" /> aus dem URI herunter, das als asynchroner Vorgang mithilfe eines Taskobjekts angegeben wird.</summary>
        <returns>Gibt <see cref="T:System.Threading.Tasks.Task`1" />zurück.  
  
Das Aufgabenobjekt, das den asynchronen Vorgang darstellt. Die <see cref="P:System.Threading.Tasks.Task`1.Result" />-Eigenschaft im Task-Objekt gibt ein <see cref="T:System.Byte" /> Array zurück, das die heruntergeladene Ressource enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Vorgang wird nicht blockiert. Das zurückgegebene <xref:System.Threading.Tasks.Task%601> Objekt wird abgeschlossen, nachdem die Ressource heruntergeladen wurde.  Die Ressource wird heruntergeladen mit asynchron aus dem Threadpool Threadressourcen, die automatisch zugewiesen werden.  
  
 Nach dem Herunterladen der Ressource an, diese Methode verwendet die Codierung angegeben werden, der <xref:System.Net.WebClient.Encoding%2A> Eigenschaft, um die Ressource konvertieren eine <xref:System.String>. Diese Methode blockiert den aufrufenden Thread nicht, beim Herunterladen der Ressource.  
  
 Sie können die <xref:System.Net.WebClient.CancelAsync%2A> Methode, um asynchrone Vorgänge abzubrechen, die nicht abgeschlossen wurden.  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge ("") und `address` enthält keinen absoluten URI, `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Daten zu bilden. Wenn die <xref:System.Net.WebClient.QueryString%2A> -Eigenschaft keine leere Zeichenfolge ist, wird dieser an angefügt `address`.  
  
 Diese Methode verwendet den RETR-Befehl zum Herunterladen einer FTP-Ressource. Für eine HTTP-Ressource wird die GET-Methode verwendet.  
  
 Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und <paramref name="address" /> gebildete URI ist ungültig.  
  
- oder -  
Fehler beim Herunterladen der Ressource.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadStringTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; DownloadStringTaskAsync (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;string&gt; DownloadStringTaskAsync(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadStringTaskAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function DownloadStringTaskAsync (address As Uri) As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::String ^&gt; ^ DownloadStringTaskAsync(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.DownloadStringTaskAsync : Uri -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="webClient.DownloadStringTaskAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">Der herunterzuladende URI der Ressource.</param>
        <summary>Lädt die Ressource als <see cref="T:System.String" /> aus dem URI herunter, das als asynchroner Vorgang mithilfe eines Taskobjekts angegeben wird.</summary>
        <returns>Gibt <see cref="T:System.Threading.Tasks.Task`1" />zurück.  
  
Das Aufgabenobjekt, das den asynchronen Vorgang darstellt. Die <see cref="P:System.Threading.Tasks.Task`1.Result" />-Eigenschaft im Task-Objekt gibt ein <see cref="T:System.Byte" /> Array zurück, das die heruntergeladene Ressource enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Vorgang wird nicht blockiert. Das zurückgegebene <xref:System.Threading.Tasks.Task%601> Objekt wird abgeschlossen, nachdem die Ressource heruntergeladen wurde. Die Ressource wird heruntergeladen mit asynchron aus dem Threadpool Threadressourcen, die automatisch zugewiesen werden.  
  
 Nach dem Herunterladen der Ressource an, diese Methode verwendet die Codierung angegeben werden, der <xref:System.Net.WebClient.Encoding%2A> Eigenschaft, um die Ressource konvertieren eine <xref:System.String>. Diese Methode blockiert den aufrufenden Thread nicht, beim Herunterladen der Ressource.  
  
 Sie können die <xref:System.Net.WebClient.CancelAsync%2A> Methode, um asynchrone Vorgänge abzubrechen, die nicht abgeschlossen wurden.  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge ("") und `address` enthält keinen absoluten URI, `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Daten zu bilden. Wenn die <xref:System.Net.WebClient.QueryString%2A> -Eigenschaft keine leere Zeichenfolge ist, wird dieser an angefügt `address`.  
  
 Diese Methode verwendet den RETR-Befehl zum Herunterladen einer FTP-Ressource. Für eine HTTP-Ressource wird die GET-Methode verwendet.  
  
 Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und <paramref name="address" /> gebildete URI ist ungültig.  
  
- oder -  
Fehler beim Herunterladen der Ressource.</exception>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding Encoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Encoding : System.Text.Encoding with get, set" Usage="System.Net.WebClient.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die <see cref="T:System.Text.Encoding" /> für den Up- und Download von Zeichenfolgen ab, oder legt diese fest.</summary>
        <value>Eine <see cref="T:System.Text.Encoding" /> zum Codieren von Zeichenfolgen. Der Standardwert dieser Eigenschaft ist die von <see cref="P:System.Text.Encoding.Default" /> zurückgegebene Codierung.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Net.WebClient.UploadString%2A> und <xref:System.Net.WebClient.UploadStringAsync%2A> Methoden verwenden diese Eigenschaft konvertiert die angegebene Zeichenfolge in eine <xref:System.Byte> Array vor dem Hochladen der Zeichenfolge. Weitere Informationen finden Sie unter der <xref:System.Text.Encoding.GetBytes%2A> Methode.  
  
 Wenn eine Zeichenfolge mit heruntergeladen wird die <xref:System.Net.WebClient.DownloadString%2A> oder <xref:System.Net.WebClient.DownloadStringAsync%2A> Methoden <xref:System.Net.WebClient> verwendet die <xref:System.Text.Encoding> zum Konvertieren des heruntergeladenen zurückgegebene <xref:System.Byte> Array in eine Zeichenfolge. Weitere Informationen finden Sie unter der <xref:System.Text.Encoding.GetString%2A> Methode.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht das Festlegen des Werts dieser Eigenschaft.  
  
 [!code-cpp[NCLWebClientAsync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#1)]
 [!code-csharp[NCLWebClientAsync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#1)]
 [!code-vb[NCLWebClientAsync#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWebRequest">
      <MemberSignature Language="C#" Value="protected virtual System.Net.WebRequest GetWebRequest (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Net.WebRequest GetWebRequest(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.GetWebRequest(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetWebRequest (address As Uri) As WebRequest" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Net::WebRequest ^ GetWebRequest(Uri ^ address);" />
      <MemberSignature Language="F#" Value="abstract member GetWebRequest : Uri -&gt; System.Net.WebRequest&#xA;override this.GetWebRequest : Uri -&gt; System.Net.WebRequest" Usage="webClient.GetWebRequest address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">Ein <see cref="T:System.Uri" />, der die anzufordernde Ressource identifiziert.</param>
        <summary>Gibt ein <see cref="T:System.Net.WebRequest" />-Objekt für die angegebene Ressource zurück.</summary>
        <returns>Ein neues <see cref="T:System.Net.WebRequest" />-Objekt für die angegebene Ressource.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode kopiert die vorhandene <xref:System.Net.WebClient.Headers%2A>, <xref:System.Net.WebClient.Credentials%2A>, und die Methode, um die neu erstellte <xref:System.Net.WebRequest> Objekt.  
  
 Diese Methode kann aufgerufen werden, nur von Klassen, die von erben <xref:System.Net.WebClient>. Er wird bereitgestellt, erben den Zugriff auf die zugrunde liegende gewähren <xref:System.Net.WebRequest> Objekt. Abgeleitete Klassen sollten die Implementierung der Basisklasse aufrufen <xref:System.Net.WebClient.GetWebRequest%2A> um sicherzustellen, dass die Methode wie erwartet funktioniert.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt eine Implementierung dieser Methode, die von einer abgeleiteten Klasse von angepasst werden können <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#1)]
 [!code-csharp[NCLCustomWebClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetWebResponse">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt den <see cref="T:System.Net.WebResponse" /> für das angegebene <see cref="T:System.Net.WebRequest" /> zurück.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetWebResponse">
      <MemberSignature Language="C#" Value="protected virtual System.Net.WebResponse GetWebResponse (System.Net.WebRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Net.WebResponse GetWebResponse(class System.Net.WebRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.GetWebResponse(System.Net.WebRequest)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetWebResponse (request As WebRequest) As WebResponse" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Net::WebResponse ^ GetWebResponse(System::Net::WebRequest ^ request);" />
      <MemberSignature Language="F#" Value="abstract member GetWebResponse : System.Net.WebRequest -&gt; System.Net.WebResponse&#xA;override this.GetWebResponse : System.Net.WebRequest -&gt; System.Net.WebResponse" Usage="webClient.GetWebResponse request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.WebRequest" />
      </Parameters>
      <Docs>
        <param name="request">Eine <see cref="T:System.Net.WebRequest" />, mit der die Antwort abgerufen wird.</param>
        <summary>Gibt den <see cref="T:System.Net.WebResponse" /> für das angegebene <see cref="T:System.Net.WebRequest" /> zurück.</summary>
        <returns>Eine <see cref="T:System.Net.WebResponse" /> mit der Antwort auf die angegebene <see cref="T:System.Net.WebRequest" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das Objekt, das von dieser Methode zurückgegebene wird abgerufen, durch den Aufruf der <xref:System.Net.WebRequest.GetResponse%2A> Methode für das angegebene <xref:System.Net.WebRequest> Objekt.  
  
 Diese Methode kann aufgerufen werden, nur von Klassen, die von erben <xref:System.Net.WebClient>. Er wird bereitgestellt, erben den Zugriff auf die zugrunde liegende gewähren <xref:System.Net.WebResponse> Objekt.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt eine Implementierung dieser Methode, die von einer abgeleiteten Klasse von angepasst werden können <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#2)]
 [!code-csharp[NCLCustomWebClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWebResponse">
      <MemberSignature Language="C#" Value="protected virtual System.Net.WebResponse GetWebResponse (System.Net.WebRequest request, IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Net.WebResponse GetWebResponse(class System.Net.WebRequest request, class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetWebResponse (request As WebRequest, result As IAsyncResult) As WebResponse" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Net::WebResponse ^ GetWebResponse(System::Net::WebRequest ^ request, IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member GetWebResponse : System.Net.WebRequest * IAsyncResult -&gt; System.Net.WebResponse&#xA;override this.GetWebResponse : System.Net.WebRequest * IAsyncResult -&gt; System.Net.WebResponse" Usage="webClient.GetWebResponse (request, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.WebRequest" />
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="request">Eine <see cref="T:System.Net.WebRequest" />, mit der die Antwort abgerufen wird.</param>
        <param name="result">Ein <see cref="T:System.IAsyncResult" />-Objekt, das durch einen vorherigen Aufruf von <see cref="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> abgerufen wurde.</param>
        <summary>Gibt die <see cref="T:System.Net.WebResponse" /> für die angegebene <see cref="T:System.Net.WebRequest" /> mit dem angegebenen <see cref="T:System.IAsyncResult" /> zurück.</summary>
        <returns>Eine <see cref="T:System.Net.WebResponse" /> mit der Antwort auf die angegebene <see cref="T:System.Net.WebRequest" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das Objekt, das von dieser Methode zurückgegebene wird abgerufen, durch den Aufruf der <xref:System.Net.WebRequest.EndGetResponse%2A> Methode für das angegebene <xref:System.Net.WebRequest> Objekt.  
  
 Diese Methode kann aufgerufen werden, nur von Klassen, die von erben <xref:System.Net.WebClient>. Er wird bereitgestellt, erben den Zugriff auf die zugrunde liegende gewähren <xref:System.Net.WebResponse> Objekt.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt eine Implementierung dieser Methode, die von einer abgeleiteten Klasse von angepasst werden können <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#3)]
 [!code-csharp[NCLCustomWebClient#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public System.Net.WebHeaderCollection Headers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.WebHeaderCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.Headers" />
      <MemberSignature Language="VB.NET" Value="Public Property Headers As WebHeaderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::WebHeaderCollection ^ Headers { System::Net::WebHeaderCollection ^ get(); void set(System::Net::WebHeaderCollection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Headers : System.Net.WebHeaderCollection with get, set" Usage="System.Net.WebClient.Headers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.WebHeaderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Auflistung der Name-Wert-Paare für Header auf, die der Anforderung zugeordnet sind, oder legt diese fest.</summary>
        <value>Eine <see cref="T:System.Net.WebHeaderCollection" /> mit den dieser Anforderung zugeordneten Name-Wert-Paaren für Header.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Net.WebClient.Headers%2A> Eigenschaft enthält eine <xref:System.Net.WebHeaderCollection> Instanz, die Protokollheader enthält, die die <xref:System.Net.WebClient> mit der Anforderung sendet.  
  
 Einige allgemeine Header gelten eingeschränkt und werden durch das System geschützt und kann nicht festgelegt oder geändert einem <xref:System.Net.WebHeaderCollection> Objekt. Jeder Versuch, eine der in dieser eingeschränkten Header Festlegen der <xref:System.Net.WebHeaderCollection> zugeordnete Objekt ein <xref:System.Net.WebClient> Objekt wird eine Ausnahme ausgelöst, bei dem Versuch zum Senden von der <xref:System.Net.WebClient> Anforderung.  
  
 Eingeschränkten Header, die durch das System geschützt sind, aber Sie sind nicht auf Folgendes beschränkt:  
  
-   Datum  
  
-   Host  
  
 Darüber hinaus einige andere Header sind ebenfalls eingeschränkt, wenn mit einem <xref:System.Net.WebClient> Objekt. Dieser eingeschränkten Header enthalten, aber Sie sind nicht auf Folgendes beschränkt:  
  
-   Akzeptieren  
  
-   Verbindung  
  
-   Content-Length  
  
-   Erwarten, dass (wenn der Wert festgelegt ist, auf "100-fortsetzen"  
  
-   If-Modified-Since  
  
-   Bereich  
  
-   Transfer-Encoding  
  
 Die <xref:System.Net.HttpWebRequest> -Klasse verfügt über Eigenschaften für einige der oben stehenden Header festlegen. Ist es wichtig, dass eine Anwendung diese Header, festlegen und dann die <xref:System.Net.HttpWebRequest> Klasse sollte verwendet werden, statt die <xref:System.Net.WebRequest> Klasse.  
  
 Sie sollten nicht davon ausgehen, dass die Headerwerte unverändert bleiben werden, da Webservern und Caches geändert oder Header zu einer webanforderung hinzufügen können.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die <xref:System.Net.WebClient.Headers%2A> Auflistung festzulegende HTTP `Content-Type` Header `application/x-www-form-urlencoded,` benachrichtigen Sie der Server, die Daten bilden an das Posting angefügt ist.  
  
 [!code-cpp[WebClient_UpLoadData_Headers#2](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_UpLoadData_Headers/CPP/webclient_uploaddata_headers.cpp#2)]
 [!code-csharp[WebClient_UpLoadData_Headers#2](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_UpLoadData_Headers/CS/webclient_uploaddata_headers.cs#2)]
 [!code-vb[WebClient_UpLoadData_Headers#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_UpLoadData_Headers/VB/webclient_uploaddata_headers.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.WebRequest.Headers" />
        <altmember cref="P:System.Net.HttpWebRequest.Headers" />
      </Docs>
    </Member>
    <Member MemberName="IsBusy">
      <MemberSignature Language="C#" Value="public bool IsBusy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBusy" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.IsBusy" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsBusy As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBusy { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsBusy : bool" Usage="System.Net.WebClient.IsBusy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab, ob gerade eine Webanforderung ausgeführt wird.</summary>
        <value><see langword="true" />, wenn die Webanforderung gerade ausgeführt wird; andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDownloadDataCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnDownloadDataCompleted (System.Net.DownloadDataCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDownloadDataCompleted(class System.Net.DownloadDataCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnDownloadDataCompleted(System.Net.DownloadDataCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDownloadDataCompleted (e As DownloadDataCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDownloadDataCompleted(System::Net::DownloadDataCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDownloadDataCompleted : System.Net.DownloadDataCompletedEventArgs -&gt; unit&#xA;override this.OnDownloadDataCompleted : System.Net.DownloadDataCompletedEventArgs -&gt; unit" Usage="webClient.OnDownloadDataCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.DownloadDataCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Net.DownloadDataCompletedEventArgs" />-Objekt, das Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Net.WebClient.DownloadDataCompleted" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klassen, die von dieser Klasse erben können dies außer Kraft setzen Methode, um zusätzliche führen Vorgänge fest, wenn die <xref:System.Net.WebClient.DownloadDataCompleted> Ereignis auftritt.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Net.WebClient.OnDownloadDataCompleted%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt eine Implementierung dieser Methode, die von einer abgeleiteten Klasse von angepasst werden können <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#4)]
 [!code-csharp[NCLCustomWebClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Beim Überschreiben von <see cref="M:System.Net.WebClient.OnDownloadDataCompleted(System.Net.DownloadDataCompletedEventArgs)" /> in einer abgeleiteten Klasse, werden Sie sicher, dass die Basisklasse aufrufen <see cref="M:System.Net.WebClient.OnDownloadDataCompleted(System.Net.DownloadDataCompletedEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnDownloadFileCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnDownloadFileCompleted (System.ComponentModel.AsyncCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDownloadFileCompleted(class System.ComponentModel.AsyncCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnDownloadFileCompleted(System.ComponentModel.AsyncCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDownloadFileCompleted (e As AsyncCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDownloadFileCompleted(System::ComponentModel::AsyncCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDownloadFileCompleted : System.ComponentModel.AsyncCompletedEventArgs -&gt; unit&#xA;override this.OnDownloadFileCompleted : System.ComponentModel.AsyncCompletedEventArgs -&gt; unit" Usage="webClient.OnDownloadFileCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.AsyncCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" />-Objekt, das Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Net.WebClient.DownloadFileCompleted" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klassen, die von dieser Klasse erben können dies außer Kraft setzen Methode, um zusätzliche führen Vorgänge fest, wenn die <xref:System.Net.WebClient.DownloadFileCompleted> Ereignis auftritt.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Net.WebClient.OnDownloadFileCompleted%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt eine Implementierung dieser Methode, die von einer abgeleiteten Klasse von angepasst werden können <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#5)]
 [!code-csharp[NCLCustomWebClient#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Beim Überschreiben von <see cref="M:System.Net.WebClient.OnDownloadFileCompleted(System.ComponentModel.AsyncCompletedEventArgs)" /> in einer abgeleiteten Klasse, werden Sie sicher, dass die Basisklasse aufrufen <see cref="M:System.Net.WebClient.OnDownloadFileCompleted(System.ComponentModel.AsyncCompletedEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnDownloadProgressChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDownloadProgressChanged (System.Net.DownloadProgressChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDownloadProgressChanged(class System.Net.DownloadProgressChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnDownloadProgressChanged(System.Net.DownloadProgressChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDownloadProgressChanged (e As DownloadProgressChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDownloadProgressChanged(System::Net::DownloadProgressChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDownloadProgressChanged : System.Net.DownloadProgressChangedEventArgs -&gt; unit&#xA;override this.OnDownloadProgressChanged : System.Net.DownloadProgressChangedEventArgs -&gt; unit" Usage="webClient.OnDownloadProgressChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.DownloadProgressChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Net.DownloadProgressChangedEventArgs" />-Objekt, das Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Net.WebClient.DownloadProgressChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klassen, die von dieser Klasse erben können dies außer Kraft setzen Methode, um zusätzliche führen Vorgänge fest, wenn die <xref:System.Net.WebClient.DownloadProgressChanged> Ereignis auftritt.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Net.WebClient.OnDownloadProgressChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt eine Implementierung dieser Methode, die von einer abgeleiteten Klasse von angepasst werden können <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#12](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#12)]
 [!code-csharp[NCLCustomWebClient#12](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#12)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Beim Überschreiben von <see cref="M:System.Net.WebClient.OnDownloadProgressChanged(System.Net.DownloadProgressChangedEventArgs)" /> in einer abgeleiteten Klasse, werden Sie sicher, dass die Basisklasse aufrufen <see cref="M:System.Net.WebClient.OnDownloadProgressChanged(System.Net.DownloadProgressChangedEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnDownloadStringCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnDownloadStringCompleted (System.Net.DownloadStringCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDownloadStringCompleted(class System.Net.DownloadStringCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnDownloadStringCompleted(System.Net.DownloadStringCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDownloadStringCompleted (e As DownloadStringCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDownloadStringCompleted(System::Net::DownloadStringCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDownloadStringCompleted : System.Net.DownloadStringCompletedEventArgs -&gt; unit&#xA;override this.OnDownloadStringCompleted : System.Net.DownloadStringCompletedEventArgs -&gt; unit" Usage="webClient.OnDownloadStringCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.DownloadStringCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Net.DownloadStringCompletedEventArgs" />-Objekt, das Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Net.WebClient.DownloadStringCompleted" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klassen, die von dieser Klasse erben können dies außer Kraft setzen Methode, um zusätzliche führen Vorgänge fest, wenn die <xref:System.Net.WebClient.DownloadStringCompleted> Ereignis auftritt.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Net.WebClient.OnDownloadStringCompleted%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt eine Implementierung dieser Methode, die von einer abgeleiteten Klasse von angepasst werden können <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#6)]
 [!code-csharp[NCLCustomWebClient#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#6)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Beim Überschreiben von <see cref="M:System.Net.WebClient.OnDownloadStringCompleted(System.Net.DownloadStringCompletedEventArgs)" /> in einer abgeleiteten Klasse, werden Sie sicher, dass die Basisklasse aufrufen <see cref="M:System.Net.WebClient.OnDownloadStringCompleted(System.Net.DownloadStringCompletedEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnOpenReadCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnOpenReadCompleted (System.Net.OpenReadCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnOpenReadCompleted(class System.Net.OpenReadCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnOpenReadCompleted(System.Net.OpenReadCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnOpenReadCompleted (e As OpenReadCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnOpenReadCompleted(System::Net::OpenReadCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnOpenReadCompleted : System.Net.OpenReadCompletedEventArgs -&gt; unit&#xA;override this.OnOpenReadCompleted : System.Net.OpenReadCompletedEventArgs -&gt; unit" Usage="webClient.OnOpenReadCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.OpenReadCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Net.OpenReadCompletedEventArgs" />-Objekt, das Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Net.WebClient.OpenReadCompleted" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klassen, die von dieser Klasse erben können dies außer Kraft setzen Methode, um zusätzliche führen Vorgänge fest, wenn die <xref:System.Net.WebClient.OpenReadCompleted> Ereignis auftritt.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Net.WebClient.OnOpenReadCompleted%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt eine Implementierung dieser Methode, die von einer abgeleiteten Klasse von angepasst werden können <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#7)]
 [!code-csharp[NCLCustomWebClient#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#7)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Beim Überschreiben von <see cref="M:System.Net.WebClient.OnOpenReadCompleted(System.Net.OpenReadCompletedEventArgs)" /> in einer abgeleiteten Klasse, werden Sie sicher, dass die Basisklasse aufrufen <see cref="M:System.Net.WebClient.OnOpenReadCompleted(System.Net.OpenReadCompletedEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnOpenWriteCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnOpenWriteCompleted (System.Net.OpenWriteCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnOpenWriteCompleted(class System.Net.OpenWriteCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnOpenWriteCompleted(System.Net.OpenWriteCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnOpenWriteCompleted (e As OpenWriteCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnOpenWriteCompleted(System::Net::OpenWriteCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnOpenWriteCompleted : System.Net.OpenWriteCompletedEventArgs -&gt; unit&#xA;override this.OnOpenWriteCompleted : System.Net.OpenWriteCompletedEventArgs -&gt; unit" Usage="webClient.OnOpenWriteCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.OpenWriteCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Net.OpenWriteCompletedEventArgs" />-Objekt, das Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Net.WebClient.OpenWriteCompleted" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klassen, die von dieser Klasse erben können dies außer Kraft setzen Methode, um zusätzliche führen Vorgänge fest, wenn die <xref:System.Net.WebClient.OpenWriteCompleted> Ereignis auftritt.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Net.WebClient.OnOpenWriteCompleted%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt eine Implementierung dieser Methode, die von einer abgeleiteten Klasse von angepasst werden können <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#8](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#8)]
 [!code-csharp[NCLCustomWebClient#8](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#8)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Beim Überschreiben von <see cref="M:System.Net.WebClient.OnOpenWriteCompleted(System.Net.OpenWriteCompletedEventArgs)" /> in einer abgeleiteten Klasse, werden Sie sicher, dass die Basisklasse aufrufen <see cref="M:System.Net.WebClient.OnOpenWriteCompleted(System.Net.OpenWriteCompletedEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnUploadDataCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnUploadDataCompleted (System.Net.UploadDataCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUploadDataCompleted(class System.Net.UploadDataCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnUploadDataCompleted(System.Net.UploadDataCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUploadDataCompleted (e As UploadDataCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUploadDataCompleted(System::Net::UploadDataCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUploadDataCompleted : System.Net.UploadDataCompletedEventArgs -&gt; unit&#xA;override this.OnUploadDataCompleted : System.Net.UploadDataCompletedEventArgs -&gt; unit" Usage="webClient.OnUploadDataCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.UploadDataCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Net.UploadDataCompletedEventArgs" />-Objekt, das Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Net.WebClient.UploadDataCompleted" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klassen, die von dieser Klasse erben können dies außer Kraft setzen Methode, um zusätzliche führen Vorgänge fest, wenn die <xref:System.Net.WebClient.UploadDataCompleted> Ereignis auftritt.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Net.WebClient.OnUploadDataCompleted%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt eine Implementierung dieser Methode, die von einer abgeleiteten Klasse von angepasst werden können <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#9](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#9)]
 [!code-csharp[NCLCustomWebClient#9](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#9)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Beim Überschreiben von <see cref="M:System.Net.WebClient.OnUploadDataCompleted(System.Net.UploadDataCompletedEventArgs)" /> in einer abgeleiteten Klasse, werden Sie sicher, dass die Basisklasse aufrufen <see cref="M:System.Net.WebClient.OnUploadDataCompleted(System.Net.UploadDataCompletedEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnUploadFileCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnUploadFileCompleted (System.Net.UploadFileCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUploadFileCompleted(class System.Net.UploadFileCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnUploadFileCompleted(System.Net.UploadFileCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUploadFileCompleted (e As UploadFileCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUploadFileCompleted(System::Net::UploadFileCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUploadFileCompleted : System.Net.UploadFileCompletedEventArgs -&gt; unit&#xA;override this.OnUploadFileCompleted : System.Net.UploadFileCompletedEventArgs -&gt; unit" Usage="webClient.OnUploadFileCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.UploadFileCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Net.UploadFileCompletedEventArgs" />-Objekt, das Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Net.WebClient.UploadFileCompleted" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klassen, die von dieser Klasse erben können dies außer Kraft setzen Methode, um zusätzliche führen Vorgänge fest, wenn die <xref:System.Net.WebClient.UploadFileCompleted> Ereignis auftritt.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Net.WebClient.OnUploadFileCompleted%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt eine Implementierung dieser Methode, die von einer abgeleiteten Klasse von angepasst werden können <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#10](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#10)]
 [!code-csharp[NCLCustomWebClient#10](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#10)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Beim Überschreiben von <see cref="M:System.Net.WebClient.OnUploadFileCompleted(System.Net.UploadFileCompletedEventArgs)" /> in einer abgeleiteten Klasse, werden Sie sicher, dass die Basisklasse aufrufen <see cref="M:System.Net.WebClient.OnUploadFileCompleted(System.Net.UploadFileCompletedEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnUploadProgressChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnUploadProgressChanged (System.Net.UploadProgressChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUploadProgressChanged(class System.Net.UploadProgressChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnUploadProgressChanged(System.Net.UploadProgressChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUploadProgressChanged (e As UploadProgressChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUploadProgressChanged(System::Net::UploadProgressChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUploadProgressChanged : System.Net.UploadProgressChangedEventArgs -&gt; unit&#xA;override this.OnUploadProgressChanged : System.Net.UploadProgressChangedEventArgs -&gt; unit" Usage="webClient.OnUploadProgressChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.UploadProgressChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Net.UploadProgressChangedEventArgs" />-Objekt, das Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Net.WebClient.UploadProgressChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klassen, die von dieser Klasse erben können dies außer Kraft setzen Methode, um zusätzliche führen Vorgänge fest, wenn die <xref:System.Net.WebClient.UploadProgressChanged> Ereignis auftritt.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Net.WebClient.OnUploadProgressChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt eine Implementierung dieser Methode, die von einer abgeleiteten Klasse von angepasst werden können <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#13](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#13)]
 [!code-csharp[NCLCustomWebClient#13](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#13)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Beim Überschreiben von <see cref="M:System.Net.WebClient.OnUploadProgressChanged(System.Net.UploadProgressChangedEventArgs)" /> in einer abgeleiteten Klasse, werden Sie sicher, dass die Basisklasse aufrufen <see cref="M:System.Net.WebClient.OnUploadProgressChanged(System.Net.UploadProgressChangedEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnUploadStringCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnUploadStringCompleted (System.Net.UploadStringCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUploadStringCompleted(class System.Net.UploadStringCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnUploadStringCompleted(System.Net.UploadStringCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUploadStringCompleted (e As UploadStringCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUploadStringCompleted(System::Net::UploadStringCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUploadStringCompleted : System.Net.UploadStringCompletedEventArgs -&gt; unit&#xA;override this.OnUploadStringCompleted : System.Net.UploadStringCompletedEventArgs -&gt; unit" Usage="webClient.OnUploadStringCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.UploadStringCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Net.UploadStringCompletedEventArgs" />-Objekt, das Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Net.WebClient.UploadStringCompleted" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klassen, die von dieser Klasse erben können dies außer Kraft setzen Methode, um zusätzliche führen Vorgänge fest, wenn die <xref:System.Net.WebClient.UploadStringCompleted> Ereignis auftritt.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Net.WebClient.OnUploadStringCompleted%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt eine Implementierung dieser Methode, die von einer abgeleiteten Klasse von angepasst werden können <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#11](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#11)]
 [!code-csharp[NCLCustomWebClient#11](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#11)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Beim Überschreiben von <see cref="M:System.Net.WebClient.OnUploadStringCompleted(System.Net.UploadStringCompletedEventArgs)" /> in einer abgeleiteten Klasse, werden Sie sicher, dass die Basisklasse aufrufen <see cref="M:System.Net.WebClient.OnUploadStringCompleted(System.Net.UploadStringCompletedEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnUploadValuesCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnUploadValuesCompleted (System.Net.UploadValuesCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUploadValuesCompleted(class System.Net.UploadValuesCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnUploadValuesCompleted(System.Net.UploadValuesCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUploadValuesCompleted (e As UploadValuesCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUploadValuesCompleted(System::Net::UploadValuesCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUploadValuesCompleted : System.Net.UploadValuesCompletedEventArgs -&gt; unit&#xA;override this.OnUploadValuesCompleted : System.Net.UploadValuesCompletedEventArgs -&gt; unit" Usage="webClient.OnUploadValuesCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.UploadValuesCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Net.UploadValuesCompletedEventArgs" />-Objekt, das Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Net.WebClient.UploadValuesCompleted" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klassen, die von dieser Klasse erben können dies außer Kraft setzen Methode, um zusätzliche führen Vorgänge fest, wenn die <xref:System.Net.WebClient.UploadValuesCompleted> Ereignis auftritt.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Net.WebClient.OnUploadValuesCompleted%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt eine Implementierung dieser Methode, die von einer abgeleiteten Klasse von angepasst werden können <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#14](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#14)]
 [!code-csharp[NCLCustomWebClient#14](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#14)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Beim Überschreiben von <see cref="M:System.Net.WebClient.OnUploadValuesCompleted(System.Net.UploadValuesCompletedEventArgs)" /> in einer abgeleiteten Klasse, werden Sie sicher, dass die Basisklasse aufrufen <see cref="M:System.Net.WebClient.OnUploadValuesCompleted(System.Net.UploadValuesCompletedEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnWriteStreamClosed">
      <MemberSignature Language="C#" Value="protected virtual void OnWriteStreamClosed (System.Net.WriteStreamClosedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWriteStreamClosed(class System.Net.WriteStreamClosedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnWriteStreamClosed(System.Net.WriteStreamClosedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWriteStreamClosed (e As WriteStreamClosedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWriteStreamClosed(System::Net::WriteStreamClosedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWriteStreamClosed : System.Net.WriteStreamClosedEventArgs -&gt; unit&#xA;override this.OnWriteStreamClosed : System.Net.WriteStreamClosedEventArgs -&gt; unit" Usage="webClient.OnWriteStreamClosed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.WriteStreamClosedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Net.WriteStreamClosedEventArgs" />-Objekt, das Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Net.WebClient.WriteStreamClosed" />-Ereignis aus.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenRead">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Öffnet einen lesbaren Stream für die von einer Ressource mit dem angegebenen URI heruntergeladenen Daten.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenRead">
      <MemberSignature Language="C#" Value="public System.IO.Stream OpenRead (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream OpenRead(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenRead(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenRead (address As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ OpenRead(System::String ^ address);" />
      <MemberSignature Language="F#" Value="member this.OpenRead : string -&gt; System.IO.Stream" Usage="webClient.OpenRead address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Der als <see cref="T:System.String" /> angegebene URI, von dem Daten heruntergeladen werden.</param>
        <summary>Öffnet einen lesbaren Stream für die von einer Ressource mit dem als <see cref="T:System.String" /> angegebenen URI heruntergeladenen Daten.</summary>
        <returns>Ein zum Lesen von Daten aus einer Ressource verwendeter <see cref="T:System.IO.Stream" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Net.WebClient.OpenRead%2A> -Methode erstellt eine <xref:System.IO.Stream> Instanz verwendet, um den Inhalt der Ressource angegeben, die durch Lesen der `address` Parameter. Diese Methode blockiert, beim Öffnen des Streams. Zum Fortsetzen der Ausführung beim Warten auf des Streams verwenden Sie eines der <xref:System.Net.WebClient.OpenReadAsync%2A> Methoden.  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge ("") und `address` enthält keinen absoluten URI, `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Daten zu bilden. Wenn die <xref:System.Net.WebClient.QueryString%2A> Eigenschaft ist nicht `null`, wird dieser an angefügt `address`.  
  
 Diese Methode verwendet den RETR-Befehl zum Herunterladen einer FTP-Ressource. Für eine HTTP-Ressource wird die GET-Methode verwendet.  
  
> [!NOTE]
>  Rufen Sie <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> Abschluss die <xref:System.IO.Stream> genügend Systemressourcen zu vermeiden.  
  
> [!NOTE]
>  Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird geöffnet, die identifizierte Ressource `uriString` und zeigt die Ergebnisse auf der System-Konsole. Beachten Sie, dass die <xref:System.IO.Stream> zurückgegebenes <xref:System.Net.WebClient.OpenRead%2A> wird geschlossen, wenn die Daten gelesen wurden.  
  
 [!code-cpp[WebClient_OpenRead#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_OpenRead/CPP/webclient_openread.cpp#1)]
 [!code-csharp[WebClient_OpenRead#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_OpenRead/CS/webclient_openread.cs#1)]
 [!code-vb[WebClient_OpenRead#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_OpenRead/VB/webclient_openread.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und <paramref name="address" /> gebildete URI ist ungültig.  
  
- oder -  
Fehler beim Herunterladen von Daten.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenRead">
      <MemberSignature Language="C#" Value="public System.IO.Stream OpenRead (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream OpenRead(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenRead(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenRead (address As Uri) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ OpenRead(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.OpenRead : Uri -&gt; System.IO.Stream" Usage="webClient.OpenRead address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">Der als <see cref="T:System.Uri" /> angegebene URI, von dem Daten heruntergeladen werden.</param>
        <summary>Öffnet einen lesbaren Stream für die von einer Ressource mit dem als <see cref="T:System.Uri" /> angegebenen URI heruntergeladenen Daten.</summary>
        <returns>Ein zum Lesen von Daten aus einer Ressource verwendeter <see cref="T:System.IO.Stream" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Net.WebClient.OpenRead%2A> -Methode erstellt eine <xref:System.IO.Stream> Instanz verwendet, um den Inhalt der Ressource angegeben, die durch Lesen der `address` Parameter. Diese Methode blockiert, beim Öffnen des Streams. Zum Fortsetzen der Ausführung beim Warten auf des Streams verwenden Sie eines der <xref:System.Net.WebClient.OpenReadAsync%2A> Methoden.  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge ("") und `address` enthält keinen absoluten URI, `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Daten zu bilden. Wenn die <xref:System.Net.WebClient.QueryString%2A> Eigenschaft ist nicht `null`, wird dieser an angefügt `address`.  
  
 Diese Methode verwendet den RETR-Befehl zum Herunterladen einer FTP-Ressource. Für eine HTTP-Ressource wird die GET-Methode verwendet.  
  
> [!NOTE]
>  Rufen Sie <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> Abschluss die <xref:System.IO.Stream> genügend Systemressourcen zu vermeiden.  
  
 **Beachten Sie** dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die netzwerkablaufverfolgung in Ihrer Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und <paramref name="address" /> gebildete URI ist ungültig.  
  
- oder -  
Fehler beim Herunterladen von Daten.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenReadAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Öffnet einen lesbaren Stream, der die angegebene Ressource enthält. Durch diese Methoden wird der aufrufende Thread nicht blockiert.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenReadAsync">
      <MemberSignature Language="C#" Value="public void OpenReadAsync (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OpenReadAsync(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenReadAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OpenReadAsync (address As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OpenReadAsync(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.OpenReadAsync : Uri -&gt; unit" Usage="webClient.OpenReadAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">Der abzurufende URI der Ressource.</param>
        <summary>Öffnet einen lesbaren Stream, der die angegebene Ressource enthält. Durch diese Methode wird der aufrufende Thread nicht blockiert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ruft eine <xref:System.IO.Stream> Instanz verwendet, um Zugriff auf die Ressource, die gemäß der `address` Parameter. Der Stream wird mit Thread-Ressourcen, die automatisch zugewiesen werden, aus dem Threadpool abgerufen. Fügen Sie einen Ereignishandler hinzu, um benachrichtigt zu werden, wenn der Stream verfügbar ist, die <xref:System.Net.WebClient.OpenReadCompleted> Ereignis.  
  
> [!NOTE]
>  Rufen Sie <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> werden mit der <xref:System.IO.Stream> genügend Systemressourcen zu vermeiden.  
  
 Diese Methode wird den aufrufenden Thread nicht blockiert, während der Stream geöffnet ist. Beim Warten auf des Streams blockieren, verwenden Sie die <xref:System.Net.WebClient.OpenReadAsync%2A> Methode.  
  
 Asynchrone Vorgänge, die nicht abgeschlossen wurden können abgebrochen werden, mithilfe der <xref:System.Net.WebClient.CancelAsync%2A> Methode.  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge ("") und `address` gibt kein absoluten URI, `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Ressource zu erstellen. Wenn die <xref:System.Net.WebClient.QueryString%2A> Eigenschaft ist nicht `null`, wird dieser an angefügt `address`.  
  
 Diese Methode verwendet den RETR-Befehl zum Herunterladen einer FTP-Ressource. Für eine HTTP-Ressource wird die GET-Methode verwendet.  
  
> [!NOTE]
>  Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und address gebildete URI ist ungültig.  
  
- oder -  
Fehler beim Herunterladen der Ressource.  
  
- oder -  
Fehler beim Öffnen des Streams.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenReadAsync">
      <MemberSignature Language="C#" Value="public void OpenReadAsync (Uri address, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OpenReadAsync(class System.Uri address, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenReadAsync(System.Uri,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OpenReadAsync (address As Uri, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OpenReadAsync(Uri ^ address, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.OpenReadAsync : Uri * obj -&gt; unit" Usage="webClient.OpenReadAsync (address, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">Der abzurufende URI der Ressource.</param>
        <param name="userToken">Ein benutzerdefiniertes Objekt, das bei Abschluss des asynchronen Vorgangs an die aufgerufene Methode übergeben wird.</param>
        <summary>Öffnet einen lesbaren Stream, der die angegebene Ressource enthält. Durch diese Methode wird der aufrufende Thread nicht blockiert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ruft eine <xref:System.IO.Stream> Instanz verwendet, um Zugriff auf die Ressource, die gemäß der `address` Parameter. Der Stream wird mit Thread-Ressourcen, die automatisch zugewiesen werden, aus dem Threadpool abgerufen. Fügen Sie einen Ereignishandler hinzu, um benachrichtigt zu werden, wenn der Stream verfügbar ist, die <xref:System.Net.WebClient.OpenReadCompleted> Ereignis.  
  
> [!NOTE]
>  Rufen Sie <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> werden mit der <xref:System.IO.Stream> genügend Systemressourcen zu vermeiden.  
  
 Diese Methode wird den aufrufenden Thread nicht blockiert, während der Stream geöffnet ist. Beim Warten auf des Streams blockieren, verwenden Sie die <xref:System.Net.WebClient.OpenRead%2A> Methode.  
  
 Asynchrone Vorgänge, die nicht abgeschlossen wurden können abgebrochen werden, mithilfe der <xref:System.Net.WebClient.CancelAsync%2A> Methode.  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge ("") und `address` gibt kein absoluten URI, `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Ressource zu erstellen. Wenn die <xref:System.Net.WebClient.QueryString%2A> Eigenschaft ist nicht `null`, wird dieser an angefügt `address`.  
  
 Diese Methode verwendet den RETR-Befehl zum Herunterladen einer FTP-Ressource. Für eine HTTP-Ressource wird die GET-Methode verwendet.  
  
> [!NOTE]
>  Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und address gebildete URI ist ungültig.  
  
- oder -  
Fehler beim Herunterladen der Ressource.  
  
- oder -  
Fehler beim Öffnen des Streams.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenReadCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.OpenReadCompletedEventHandler OpenReadCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.OpenReadCompletedEventHandler OpenReadCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.OpenReadCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event OpenReadCompleted As OpenReadCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::OpenReadCompletedEventHandler ^ OpenReadCompleted;" />
      <MemberSignature Language="F#" Value="member this.OpenReadCompleted : System.Net.OpenReadCompletedEventHandler " Usage="member this.OpenReadCompleted : System.Net.OpenReadCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.OpenReadCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn ein asynchroner Vorgang zum Öffnen eines Streams, der eine Ressource enthält, abgeschlossen wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis wird jedes Mal ausgelöst, die Abschluss eines asynchronen Vorgangs zum Öffnen eines Datenstroms, der eine Ressource enthält. Diese Vorgänge werden gestartet, durch den Aufruf der <xref:System.Net.WebClient.OpenReadAsync%2A> Methoden.  
  
 Die <xref:System.Net.OpenReadCompletedEventHandler> ist der Delegat für dieses Ereignis. Die <xref:System.Net.OpenReadCompletedEventArgs> Klasse stellt den Ereignishandler mit Ereignisdaten bereit.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht das Festlegen von eines ereignishandlers für dieses Ereignis.  
  
 [!code-cpp[NCLWebClientAsync#30](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#30)]
 [!code-csharp[NCLWebClientAsync#30](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#30)]
 [!code-vb[NCLWebClientAsync#30](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#30)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenReadTaskAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Öffnet einen lesbaren Datenstrom, der die angegebene Ressource als asynchroner Vorgang mithilfe eines Taskobjekts enthält. Durch diese Methoden wird der aufrufende Thread nicht blockiert.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenReadTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenReadTaskAsync (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; OpenReadTaskAsync(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenReadTaskAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenReadTaskAsync (address As String) As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ OpenReadTaskAsync(System::String ^ address);" />
      <MemberSignature Language="F#" Value="member this.OpenReadTaskAsync : string -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="webClient.OpenReadTaskAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Der abzurufende URI der Ressource.</param>
        <summary>Öffnet einen lesbaren Datenstrom, der die angegebene Ressource als asynchroner Vorgang mithilfe eines Taskobjekts enthält.</summary>
        <returns>Gibt <see cref="T:System.Threading.Tasks.Task`1" />zurück.  
  
Das Aufgabenobjekt, das den asynchronen Vorgang darstellt. Die <see cref="P:System.Threading.Tasks.Task`1.Result" />-Eigenschaft im Task-Objekt gibt <see cref="T:System.IO.Stream" /> zurück, das verwendet wird, um Daten aus einer Ressource zu lesen.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Vorgang wird nicht blockiert. Das zurückgegebene <xref:System.Threading.Tasks.Task%601> Objekt wird abgeschlossen, nachdem die ein lesbarer Stream für die Datenressource geöffnet wurde. Diese Methode wird den aufrufenden Thread nicht blockiert, während der Stream geöffnet ist.  
  
 Diese Methode ruft eine <xref:System.IO.Stream> Instanz verwendet, um Zugriff auf die Ressource, die gemäß der `address` Parameter. Der Stream wird mit Thread-Ressourcen, die automatisch zugewiesen werden, aus dem Threadpool abgerufen.  
  
> [!NOTE]
>  Rufen Sie <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> werden mit der <xref:System.IO.Stream> genügend Systemressourcen zu vermeiden.  
  
 Asynchrone Vorgänge, die nicht abgeschlossen wurden können abgebrochen werden, mithilfe der <xref:System.Net.WebClient.CancelAsync%2A> Methode.  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge ("") und `address` gibt kein absoluten URI, `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Ressource zu erstellen. Wenn die <xref:System.Net.WebClient.QueryString%2A> Eigenschaft ist nicht `null`, wird dieser an angefügt `address`.  
  
 Diese Methode verwendet den RETR-Befehl zum Herunterladen einer FTP-Ressource. Für eine HTTP-Ressource wird die GET-Methode verwendet.  
  
> [!NOTE]
>  Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und address gebildete URI ist ungültig.  
  
- oder -  
Fehler beim Herunterladen der Ressource.  
  
- oder -  
Fehler beim Öffnen des Streams.</exception>
        <altmember cref="T:System.IO.Stream" />
      </Docs>
    </Member>
    <Member MemberName="OpenReadTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenReadTaskAsync (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; OpenReadTaskAsync(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenReadTaskAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenReadTaskAsync (address As Uri) As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ OpenReadTaskAsync(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.OpenReadTaskAsync : Uri -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="webClient.OpenReadTaskAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">Der abzurufende URI der Ressource.</param>
        <summary>Öffnet einen lesbaren Datenstrom, der die angegebene Ressource als asynchroner Vorgang mithilfe eines Taskobjekts enthält.</summary>
        <returns>Gibt <see cref="T:System.Threading.Tasks.Task`1" />zurück.  
  
Das Aufgabenobjekt, das den asynchronen Vorgang darstellt. Die <see cref="P:System.Threading.Tasks.Task`1.Result" />-Eigenschaft im Task-Objekt gibt <see cref="T:System.IO.Stream" /> zurück, das verwendet wird, um Daten aus einer Ressource zu lesen.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Vorgang wird nicht blockiert. Das zurückgegebene <xref:System.Threading.Tasks.Task%601> Objekt wird abgeschlossen, nachdem die ein lesbarer Stream für die Datenressource geöffnet wurde. Diese Methode wird den aufrufenden Thread nicht blockiert, während der Stream geöffnet ist.  
  
 Diese Methode ruft eine <xref:System.IO.Stream> Instanz verwendet, um Zugriff auf die Ressource, die gemäß der `address` Parameter. Der Stream wird mit Thread-Ressourcen, die automatisch zugewiesen werden, aus dem Threadpool abgerufen.  
  
> [!NOTE]
>  Rufen Sie <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> werden mit der <xref:System.IO.Stream> genügend Systemressourcen zu vermeiden.  
  
 Asynchrone Vorgänge, die nicht abgeschlossen wurden können abgebrochen werden, mithilfe der <xref:System.Net.WebClient.CancelAsync%2A> Methode.  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge ("") und `address` gibt kein absoluten URI, `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Ressource zu erstellen. Wenn die <xref:System.Net.WebClient.QueryString%2A> Eigenschaft ist nicht `null`, wird dieser an angefügt `address`.  
  
 Diese Methode verwendet den RETR-Befehl zum Herunterladen einer FTP-Ressource. Für eine HTTP-Ressource wird die GET-Methode verwendet.  
  
> [!NOTE]
>  Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und address gebildete URI ist ungültig.  
  
- oder -  
Fehler beim Herunterladen der Ressource.  
  
- oder -  
Fehler beim Öffnen des Streams.</exception>
        <altmember cref="T:System.IO.Stream" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenWrite">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Öffnet einen Stream, um Daten in eine Ressource mit dem angegebenen URI zu schreiben.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenWrite">
      <MemberSignature Language="C#" Value="public System.IO.Stream OpenWrite (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream OpenWrite(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWrite(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenWrite (address As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ OpenWrite(System::String ^ address);" />
      <MemberSignature Language="F#" Value="member this.OpenWrite : string -&gt; System.IO.Stream" Usage="webClient.OpenWrite address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Der URI der Ressource, die die Daten empfangen soll.</param>
        <summary>Öffnet einen Stream, um Daten in die angegebene Ressource zu schreiben.</summary>
        <returns>Ein <see cref="T:System.IO.Stream" />, der zum Schreiben von Daten in eine Ressource verwendet wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Net.WebClient.OpenWrite%2A> Methodenrückgabe Datenstrom kann geschrieben werden, die zum Senden von Daten auf eine Ressource verwendet wird. Diese Methode blockiert, beim Öffnen des Streams. Zum Fortsetzen der Ausführung beim Warten auf des Streams verwenden Sie eines der <xref:System.Net.WebClient.OpenWriteAsync%2A> Methoden.  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge ("") und `address` enthält keinen absoluten URI, `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Daten zu bilden. Wenn die <xref:System.Net.WebClient.QueryString%2A> -Eigenschaft keine leere Zeichenfolge ist, wird dieser an angefügt `address`.  
  
 Diese Methode verwendet den STOR-Befehl zum Hochladen von einer FTP-Ressource. Für eine HTTP-Ressource wird die POST-Methode verwendet.  
  
> [!NOTE]
>  Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Das folgende Codebeispiel liest Daten aus der Befehlszeile aus, und verwendet <xref:System.Net.WebClient.OpenWrite%2A> einen Stream zum Schreiben der Daten abgerufen werden. Beachten Sie, dass die <xref:System.IO.Stream> zurückgegebenes <xref:System.Net.WebClient.OpenWrite%2A> wird geschlossen, nachdem die Daten gesendet werden.  
  
 [!code-cpp[WebClient_OpenWrite2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_OpenWrite2/CPP/webclient_openwrite2.cpp#1)]
 [!code-csharp[WebClient_OpenWrite2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_OpenWrite2/CS/webclient_openwrite2.cs#1)]
 [!code-vb[WebClient_OpenWrite2#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_OpenWrite2/VB/webclient_openwrite2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und <paramref name="address" /> gebildete URI ist ungültig.  
  
- oder -  
Fehler beim Öffnen des Streams.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenWrite">
      <MemberSignature Language="C#" Value="public System.IO.Stream OpenWrite (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream OpenWrite(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWrite(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenWrite (address As Uri) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ OpenWrite(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.OpenWrite : Uri -&gt; System.IO.Stream" Usage="webClient.OpenWrite address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">Der URI der Ressource, die die Daten empfangen soll.</param>
        <summary>Öffnet einen Stream, um Daten in die angegebene Ressource zu schreiben.</summary>
        <returns>Ein <see cref="T:System.IO.Stream" />, der zum Schreiben von Daten in eine Ressource verwendet wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Net.WebClient.OpenWrite%2A> Methodenrückgabe Datenstrom kann geschrieben werden, die zum Senden von Daten auf eine Ressource verwendet wird. Diese Methode blockiert, beim Öffnen des Streams. Zum Fortsetzen der Ausführung beim Warten auf des Streams verwenden Sie eines der <xref:System.Net.WebClient.OpenWriteAsync%2A> Methoden.  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge ("") und `address` enthält keinen absoluten URI, `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Daten zu bilden. Wenn die <xref:System.Net.WebClient.QueryString%2A> -Eigenschaft keine leere Zeichenfolge ist, wird dieser an angefügt `address`.  
  
 Diese Methode verwendet den STOR-Befehl zum Hochladen von einer FTP-Ressource. Für eine HTTP-Ressource wird die POST-Methode verwendet.  
  
> [!NOTE]
>  Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und <paramref name="address" /> gebildete URI ist ungültig.  
  
- oder -  
Fehler beim Öffnen des Streams.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenWrite">
      <MemberSignature Language="C#" Value="public System.IO.Stream OpenWrite (string address, string method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream OpenWrite(string address, string method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWrite(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenWrite (address As String, method As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ OpenWrite(System::String ^ address, System::String ^ method);" />
      <MemberSignature Language="F#" Value="member this.OpenWrite : string * string -&gt; System.IO.Stream" Usage="webClient.OpenWrite (address, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Der URI der Ressource, die die Daten empfangen soll.</param>
        <param name="method">Die Methode, die zum Senden der Daten an die Ressource verwendet wird. Wenn NULL, lautet der Standard für http POST und für ftp STOR.</param>
        <summary>Öffnet mithilfe der angegebenen Methode einen Stream zum Schreiben von Daten in die angegebene Ressource.</summary>
        <returns>Ein <see cref="T:System.IO.Stream" />, der zum Schreiben von Daten in eine Ressource verwendet wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Net.WebClient.OpenWrite%2A> Methodenrückgabe Datenstrom kann geschrieben werden, die zum Senden von Daten auf eine Ressource verwendet wird. Die zugrunde liegende Anforderung erfolgt mit der Methode die `method` Parameter. Die Daten ist an den Server gesendet, wenn Sie den Stream zu schließen. Diese Methode blockiert, beim Öffnen des Streams. Zum Fortsetzen der Ausführung beim Warten auf des Streams verwenden Sie eines der <xref:System.Net.WebClient.OpenWriteAsync%2A> Methoden.  
  
 Wenn die `method` Parameter gibt an, eine Methode, die vom Server nicht verstanden wird, bestimmen die zugrunde liegenden Abläufe. In der Regel eine <xref:System.Net.WebException> ausgelöst und die <xref:System.Net.WebException.Status%2A> Eigenschaft festgelegt wird, um den Fehler anzugeben.  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge ("") und `address` gibt eine absolute Adresse, kein `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Daten zu bilden. Wenn die <xref:System.Net.WebClient.QueryString%2A> -Eigenschaft keine leere Zeichenfolge ist, wird dieser an angefügt `address`.  
  
> [!NOTE]
>  Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Das folgende Codebeispiel liest Daten aus der Befehlszeile aus, und verwendet <xref:System.Net.WebClient.OpenWrite%2A> um einen Stream zum Schreiben der Daten zu erhalten. Beachten Sie, dass die <xref:System.IO.Stream> zurückgegebenes <xref:System.Net.WebClient.OpenWrite%2A> muss geschlossen werden, um die Daten zu senden.  
  
 [!code-cpp[WebClient_OpenWrite#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_OpenWrite/CPP/webclient_openwrite.cpp#1)]
 [!code-csharp[WebClient_OpenWrite#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_OpenWrite/CS/webclient_openwrite.cs#1)]
 [!code-vb[WebClient_OpenWrite#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_OpenWrite/VB/webclient_openwrite.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und <paramref name="address" /> gebildete URI ist ungültig.  
  
- oder -  
Fehler beim Öffnen des Streams.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenWrite">
      <MemberSignature Language="C#" Value="public System.IO.Stream OpenWrite (Uri address, string method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream OpenWrite(class System.Uri address, string method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWrite(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenWrite (address As Uri, method As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ OpenWrite(Uri ^ address, System::String ^ method);" />
      <MemberSignature Language="F#" Value="member this.OpenWrite : Uri * string -&gt; System.IO.Stream" Usage="webClient.OpenWrite (address, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Der URI der Ressource, die die Daten empfangen soll.</param>
        <param name="method">Die Methode, die zum Senden der Daten an die Ressource verwendet wird. Wenn NULL, lautet der Standard für http POST und für ftp STOR.</param>
        <summary>Öffnet mithilfe der angegebenen Methode einen Stream zum Schreiben von Daten in die angegebene Ressource.</summary>
        <returns>Ein <see cref="T:System.IO.Stream" />, der zum Schreiben von Daten in eine Ressource verwendet wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Net.WebClient.OpenWrite%2A> Methodenrückgabe Datenstrom kann geschrieben werden, die zum Senden von Daten auf eine Ressource verwendet wird. Diese Methode blockiert, beim Öffnen des Streams. Zum Fortsetzen der Ausführung beim Warten auf des Streams verwenden Sie eines der <xref:System.Net.WebClient.OpenWriteAsync%2A> Methoden.  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge ("") und `address` enthält keinen absoluten URI, `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Daten zu bilden. Wenn die <xref:System.Net.WebClient.QueryString%2A> -Eigenschaft keine leere Zeichenfolge ist, wird dieser an angefügt `address`.  
  
> [!NOTE]
>  Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und <paramref name="address" /> gebildete URI ist ungültig.  
  
- oder -  
Fehler beim Öffnen des Streams.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenWriteAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Öffnet einen Stream, um Daten in die angegebene Ressource zu schreiben. Durch diese Methoden wird der aufrufende Thread nicht blockiert.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenWriteAsync">
      <MemberSignature Language="C#" Value="public void OpenWriteAsync (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OpenWriteAsync(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWriteAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OpenWriteAsync (address As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OpenWriteAsync(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.OpenWriteAsync : Uri -&gt; unit" Usage="webClient.OpenWriteAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">Der URI der Ressource, die die Daten empfangen soll.</param>
        <summary>Öffnet einen Stream, um Daten in die angegebene Ressource zu schreiben. Durch diese Methode wird der aufrufende Thread nicht blockiert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ruft ein beschreibbarer Datenstrom, der verwendet wird, zum Senden von Daten auf eine Ressource ab. Der Stream wird mit Thread-Ressourcen, die automatisch zugewiesen werden, aus dem Threadpool abgerufen. Fügen Sie einen Ereignishandler hinzu, um benachrichtigt zu werden, wenn der Stream verfügbar ist, die <xref:System.Net.WebClient.OpenWriteCompleted> Ereignis. Wenn Sie den Stream schließen, wird der Thread blockiert, bis die Anforderung, um gesendet wird `address` und eine Antwort empfangen wird.  
  
 Diese Methode wird den aufrufenden Thread nicht blockiert, während der Stream geöffnet wird. Um beim Warten auf des Streams zu blockieren, gehen die <xref:System.Net.WebClient.OpenWrite%2A> Methoden.  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge ("") und `address` enthält keinen absoluten URI, `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Daten zu bilden. Wenn die <xref:System.Net.WebClient.QueryString%2A> -Eigenschaft keine leere Zeichenfolge ist, wird dieser an angefügt `address`.  
  
 Diese Methode verwendet den STOR-Befehl zum Hochladen von einer FTP-Ressource. Für eine HTTP-Ressource wird die POST-Methode verwendet.  
  
> [!NOTE]
>  Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenWriteAsync">
      <MemberSignature Language="C#" Value="public void OpenWriteAsync (Uri address, string method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OpenWriteAsync(class System.Uri address, string method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWriteAsync(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OpenWriteAsync (address As Uri, method As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OpenWriteAsync(Uri ^ address, System::String ^ method);" />
      <MemberSignature Language="F#" Value="member this.OpenWriteAsync : Uri * string -&gt; unit" Usage="webClient.OpenWriteAsync (address, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Der URI der Ressource, die die Daten empfangen soll.</param>
        <param name="method">Die Methode, die zum Senden der Daten an die Ressource verwendet wird. Wenn NULL, lautet der Standard für http POST und für ftp STOR.</param>
        <summary>Öffnet einen Stream, um Daten in die angegebene Ressource zu schreiben. Durch diese Methode wird der aufrufende Thread nicht blockiert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ruft ein beschreibbarer Datenstrom, der verwendet wird, zum Senden von Daten auf eine Ressource ab. Der Stream wird mit Thread-Ressourcen, die automatisch zugewiesen werden, aus dem Threadpool abgerufen. Fügen Sie einen Ereignishandler hinzu, um benachrichtigt zu werden, wenn der Stream verfügbar ist, die <xref:System.Net.WebClient.OpenWriteCompleted> Ereignis. Wenn Sie den Stream schließen, wird der Thread blockiert, bis die Anforderung, um gesendet wird `address` und eine Antwort empfangen wird.  
  
 Diese Methode wird den aufrufenden Thread nicht blockiert, während der Stream geöffnet wird. Um beim Warten auf des Streams zu blockieren, gehen die <xref:System.Net.WebClient.OpenWrite%2A> Methoden.  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge ("") und `address` enthält keinen absoluten URI, `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Daten zu bilden. Wenn die <xref:System.Net.WebClient.QueryString%2A> -Eigenschaft keine leere Zeichenfolge ist, wird dieser an angefügt `address`.  
  
> [!NOTE]
>  Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenWriteAsync">
      <MemberSignature Language="C#" Value="public void OpenWriteAsync (Uri address, string method, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OpenWriteAsync(class System.Uri address, string method, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWriteAsync(System.Uri,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OpenWriteAsync (address As Uri, method As String, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OpenWriteAsync(Uri ^ address, System::String ^ method, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.OpenWriteAsync : Uri * string * obj -&gt; unit" Usage="webClient.OpenWriteAsync (address, method, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">Der URI der Ressource, die die Daten empfangen soll.</param>
        <param name="method">Die Methode, die zum Senden der Daten an die Ressource verwendet wird. Wenn NULL, lautet der Standard für http POST und für ftp STOR.</param>
        <param name="userToken">Ein benutzerdefiniertes Objekt, das bei Abschluss des asynchronen Vorgangs an die aufgerufene Methode übergeben wird.</param>
        <summary>Öffnet mithilfe der angegebenen Methode einen Stream zum Schreiben von Daten in die angegebene Ressource. Durch diese Methode wird der aufrufende Thread nicht blockiert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ruft ein beschreibbarer Datenstrom, der verwendet wird, zum Senden von Daten auf eine Ressource ab. Der Stream wird abgerufen, mit asynchron aus dem Threadpool Threadressourcen, die automatisch zugewiesen werden. Fügen Sie einen Ereignishandler hinzu, um benachrichtigt zu werden, wenn der Stream verfügbar ist, die <xref:System.Net.WebClient.OpenWriteCompleted> Ereignis. Der Inhalt des Streams werden an den Server gesendet, wenn Sie den Stream zu schließen.  
  
 Wenn die `method` Parameter gibt an, eine Methode, die vom Server nicht verstanden wird, bestimmen die zugrunde liegenden Abläufe. In der Regel eine <xref:System.Net.WebException> ausgelöst und die <xref:System.Net.WebException.Status%2A> Eigenschaft festgelegt wird, um den Fehler anzugeben.  
  
 Asynchrone Vorgänge, die nicht abgeschlossen wurden können abgebrochen werden, mithilfe der <xref:System.Net.WebClient.CancelAsync%2A> Methode.  
  
 Diese Methode wird den aufrufenden Thread nicht blockiert, während der Stream geöffnet wird. Um beim Warten auf des Streams zu blockieren, gehen die <xref:System.Net.WebClient.OpenWrite%2A> Methoden.  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge ("") und `address` enthält keinen absoluten URI, `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Daten zu bilden. Wenn die <xref:System.Net.WebClient.QueryString%2A> -Eigenschaft keine leere Zeichenfolge ist, wird dieser an angefügt `address`.  
  
> [!NOTE]
>  Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und <paramref name="address" /> gebildete URI ist ungültig.  
  
- oder -  
Fehler beim Öffnen des Streams.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenWriteCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.OpenWriteCompletedEventHandler OpenWriteCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.OpenWriteCompletedEventHandler OpenWriteCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.OpenWriteCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event OpenWriteCompleted As OpenWriteCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::OpenWriteCompletedEventHandler ^ OpenWriteCompleted;" />
      <MemberSignature Language="F#" Value="member this.OpenWriteCompleted : System.Net.OpenWriteCompletedEventHandler " Usage="member this.OpenWriteCompleted : System.Net.OpenWriteCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.OpenWriteCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn ein asynchroner Vorgang zum Öffnen eines Streams, der Daten in eine Ressource schreibt, abgeschlossen wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis wird jedes Mal ausgelöst, die Abschluss eines asynchronen Vorgangs zum Öffnen eines Datenstroms, das zum Senden von Daten auf eine Ressource verwendet wird. Diese Vorgänge werden gestartet, durch den Aufruf der <xref:System.Net.WebClient.OpenWriteAsync%2A> Methoden.  
  
 Die <xref:System.Net.OpenWriteCompletedEventHandler> ist der Delegat für dieses Ereignis. Die <xref:System.Net.OpenWriteCompletedEventArgs> Klasse stellt den Ereignishandler mit Ereignisdaten bereit.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht das Festlegen von eines ereignishandlers für dieses Ereignis.  
  
 [!code-cpp[NCLWebClientAsync#14](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#14)]
 [!code-csharp[NCLWebClientAsync#14](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#14)]
 [!code-vb[NCLWebClientAsync#14](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenWriteTaskAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Öffnet einen Stream für das Schreiben von Daten in die angegebene Ressource mithilfe eines Taskobjekts als asynchronen Vorgang. Durch diese Methoden wird der aufrufende Thread nicht blockiert.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenWriteTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenWriteTaskAsync (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; OpenWriteTaskAsync(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWriteTaskAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenWriteTaskAsync (address As String) As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ OpenWriteTaskAsync(System::String ^ address);" />
      <MemberSignature Language="F#" Value="member this.OpenWriteTaskAsync : string -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="webClient.OpenWriteTaskAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Der URI der Ressource, die die Daten empfangen soll.</param>
        <summary>Öffnet einen Stream für das Schreiben von Daten in die angegebene Ressource mithilfe eines Taskobjekts als asynchronen Vorgang.</summary>
        <returns>Gibt <see cref="T:System.Threading.Tasks.Task`1" />zurück.  
  
Das Aufgabenobjekt, das den asynchronen Vorgang darstellt. Die <see cref="P:System.Threading.Tasks.Task`1.Result" />-Eigenschaft im Task-Objekt gibt <see cref="T:System.IO.Stream" /> zurück, das verwendet wird, um Daten in die Ressource zu schreiben.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Vorgang wird nicht blockiert. Das zurückgegebene <xref:System.Threading.Tasks.Task%601> Objekt wird abgeschlossen, nachdem der Datenstrom kann geschrieben werden auf die Ressource geöffnet wurde. Diese Methode wird den aufrufenden Thread nicht blockiert, während der Stream geöffnet ist.  
  
 Diese Methode ruft eine <xref:System.IO.Stream> Instanz, die zum Schreiben von Daten auf die Ressource, die gemäß der `address` Parameter. Der Stream wird mit Thread-Ressourcen, die automatisch zugewiesen werden, aus dem Threadpool abgerufen.  
  
> [!NOTE]
>  Rufen Sie <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> werden mit der <xref:System.IO.Stream> genügend Systemressourcen zu vermeiden.  
  
 Asynchrone Vorgänge, die nicht abgeschlossen wurden können abgebrochen werden, mithilfe der <xref:System.Net.WebClient.CancelAsync%2A> Methode.  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge ("") und `address` enthält keinen absoluten URI, `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Daten zu bilden. Wenn die <xref:System.Net.WebClient.QueryString%2A> -Eigenschaft keine leere Zeichenfolge ist, wird dieser an angefügt `address`.  
  
 Diese Methode verwendet den STOR-Befehl zum Hochladen von einer FTP-Ressource. Für eine HTTP-Ressource wird die POST-Methode verwendet.  
  
 Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und <paramref name="address" /> gebildete URI ist ungültig.  
  
- oder -  
Fehler beim Öffnen des Streams.</exception>
        <altmember cref="T:System.IO.Stream" />
      </Docs>
    </Member>
    <Member MemberName="OpenWriteTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenWriteTaskAsync (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; OpenWriteTaskAsync(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWriteTaskAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenWriteTaskAsync (address As Uri) As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ OpenWriteTaskAsync(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.OpenWriteTaskAsync : Uri -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="webClient.OpenWriteTaskAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">Der URI der Ressource, die die Daten empfangen soll.</param>
        <summary>Öffnet einen Stream für das Schreiben von Daten in die angegebene Ressource mithilfe eines Taskobjekts als asynchronen Vorgang.</summary>
        <returns>Gibt <see cref="T:System.Threading.Tasks.Task`1" />zurück.  
  
Das Aufgabenobjekt, das den asynchronen Vorgang darstellt. Die <see cref="P:System.Threading.Tasks.Task`1.Result" />-Eigenschaft im Task-Objekt gibt <see cref="T:System.IO.Stream" /> zurück, das verwendet wird, um Daten in die Ressource zu schreiben.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Vorgang wird nicht blockiert. Das zurückgegebene <xref:System.Threading.Tasks.Task%601> Objekt wird abgeschlossen, nachdem der Datenstrom kann geschrieben werden auf die Ressource geöffnet wurde. Diese Methode wird den aufrufenden Thread nicht blockiert, während der Stream geöffnet ist.  
  
 Diese Methode ruft eine <xref:System.IO.Stream> Instanz, die zum Schreiben von Daten auf die Ressource, die gemäß der `address` Parameter. Der Stream wird mit Thread-Ressourcen, die automatisch zugewiesen werden, aus dem Threadpool abgerufen.  
  
> [!NOTE]
>  Rufen Sie <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> werden mit der <xref:System.IO.Stream> genügend Systemressourcen zu vermeiden.  
  
 Asynchrone Vorgänge, die nicht abgeschlossen wurden können abgebrochen werden, mithilfe der <xref:System.Net.WebClient.CancelAsync%2A> Methode.  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge ("") und `address` enthält keinen absoluten URI, `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Daten zu bilden. Wenn die <xref:System.Net.WebClient.QueryString%2A> -Eigenschaft keine leere Zeichenfolge ist, wird dieser an angefügt `address`.  
  
 Diese Methode verwendet den STOR-Befehl zum Hochladen von einer FTP-Ressource. Für eine HTTP-Ressource wird die POST-Methode verwendet.  
  
 Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und <paramref name="address" /> gebildete URI ist ungültig.  
  
- oder -  
Fehler beim Öffnen des Streams.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenWriteTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenWriteTaskAsync (string address, string method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; OpenWriteTaskAsync(string address, string method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWriteTaskAsync(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenWriteTaskAsync (address As String, method As String) As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ OpenWriteTaskAsync(System::String ^ address, System::String ^ method);" />
      <MemberSignature Language="F#" Value="member this.OpenWriteTaskAsync : string * string -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="webClient.OpenWriteTaskAsync (address, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Der URI der Ressource, die die Daten empfangen soll.</param>
        <param name="method">Die Methode, die zum Senden der Daten an die Ressource verwendet wird. Wenn NULL, lautet der Standard für http POST und für ftp STOR.</param>
        <summary>Öffnet einen Stream für das Schreiben von Daten in die angegebene Ressource mithilfe eines Taskobjekts als asynchronen Vorgang.</summary>
        <returns>Gibt <see cref="T:System.Threading.Tasks.Task`1" />zurück.  
  
Das Aufgabenobjekt, das den asynchronen Vorgang darstellt. Die <see cref="P:System.Threading.Tasks.Task`1.Result" />-Eigenschaft im Task-Objekt gibt <see cref="T:System.IO.Stream" /> zurück, das verwendet wird, um Daten in die Ressource zu schreiben.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Vorgang wird nicht blockiert. Das zurückgegebene <xref:System.Threading.Tasks.Task%601> Objekt wird abgeschlossen, nachdem der Datenstrom kann geschrieben werden auf die Ressource geöffnet wurde. Diese Methode wird den aufrufenden Thread nicht blockiert, während der Stream geöffnet ist.  
  
 Diese Methode ruft eine <xref:System.IO.Stream> Instanz, die zum Schreiben von Daten auf die Ressource, die gemäß der `address` Parameter. Der Stream wird mit Thread-Ressourcen, die automatisch zugewiesen werden, aus dem Threadpool abgerufen.  
  
> [!NOTE]
>  Rufen Sie <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> werden mit der <xref:System.IO.Stream> genügend Systemressourcen zu vermeiden.  
  
 Wenn die `method` Parameter gibt an, eine Methode, die vom Server nicht verstanden wird, bestimmen die zugrunde liegenden Abläufe. In der Regel eine <xref:System.Net.WebException> ausgelöst und die <xref:System.Net.WebException.Status%2A> Eigenschaft festgelegt wird, um den Fehler anzugeben.  
  
 Asynchrone Vorgänge, die nicht abgeschlossen wurden können abgebrochen werden, mithilfe der <xref:System.Net.WebClient.CancelAsync%2A> Methode.  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge ("") und `address` enthält keinen absoluten URI, `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Daten zu bilden. Wenn die <xref:System.Net.WebClient.QueryString%2A> -Eigenschaft keine leere Zeichenfolge ist, wird dieser an angefügt `address`.  
  
 Diese Methode verwendet den STOR-Befehl zum Hochladen von einer FTP-Ressource. Für eine HTTP-Ressource wird die POST-Methode verwendet.  
  
 Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und <paramref name="address" /> gebildete URI ist ungültig.  
  
- oder -  
Fehler beim Öffnen des Streams.</exception>
        <altmember cref="T:System.IO.Stream" />
      </Docs>
    </Member>
    <Member MemberName="OpenWriteTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenWriteTaskAsync (Uri address, string method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; OpenWriteTaskAsync(class System.Uri address, string method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWriteTaskAsync(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenWriteTaskAsync (address As Uri, method As String) As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ OpenWriteTaskAsync(Uri ^ address, System::String ^ method);" />
      <MemberSignature Language="F#" Value="member this.OpenWriteTaskAsync : Uri * string -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="webClient.OpenWriteTaskAsync (address, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Der URI der Ressource, die die Daten empfangen soll.</param>
        <param name="method">Die Methode, die zum Senden der Daten an die Ressource verwendet wird. Wenn NULL, lautet der Standard für http POST und für ftp STOR.</param>
        <summary>Öffnet einen Stream für das Schreiben von Daten in die angegebene Ressource mithilfe eines Taskobjekts als asynchronen Vorgang.</summary>
        <returns>Gibt <see cref="T:System.Threading.Tasks.Task`1" />zurück.  
  
Das Aufgabenobjekt, das den asynchronen Vorgang darstellt. Die <see cref="P:System.Threading.Tasks.Task`1.Result" />-Eigenschaft im Task-Objekt gibt <see cref="T:System.IO.Stream" /> zurück, das verwendet wird, um Daten in die Ressource zu schreiben.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Vorgang wird nicht blockiert. Das zurückgegebene <xref:System.Threading.Tasks.Task%601> Objekt wird abgeschlossen, nachdem der Datenstrom kann geschrieben werden auf die Ressource geöffnet wurde. Diese Methode wird den aufrufenden Thread nicht blockiert, während der Stream geöffnet ist.  
  
 Diese Methode ruft eine <xref:System.IO.Stream> Instanz, die zum Schreiben von Daten auf die Ressource, die gemäß der `address` Parameter. Der Stream wird mit Thread-Ressourcen, die automatisch zugewiesen werden, aus dem Threadpool abgerufen.  
  
> [!NOTE]
>  Rufen Sie <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> werden mit der <xref:System.IO.Stream> genügend Systemressourcen zu vermeiden.  
  
 Wenn die `method` Parameter gibt an, eine Methode, die vom Server nicht verstanden wird, bestimmen die zugrunde liegenden Abläufe. In der Regel eine <xref:System.Net.WebException> ausgelöst und die <xref:System.Net.WebException.Status%2A> Eigenschaft festgelegt wird, um den Fehler anzugeben.  
  
 Asynchrone Vorgänge, die nicht abgeschlossen wurden können abgebrochen werden, mithilfe der <xref:System.Net.WebClient.CancelAsync%2A> Methode.  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge ("") und `address` enthält keinen absoluten URI, `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Daten zu bilden. Wenn die <xref:System.Net.WebClient.QueryString%2A> -Eigenschaft keine leere Zeichenfolge ist, wird dieser an angefügt `address`.  
  
 Diese Methode verwendet den STOR-Befehl zum Hochladen von einer FTP-Ressource. Für eine HTTP-Ressource wird die POST-Methode verwendet.  
  
 Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und <paramref name="address" /> gebildete URI ist ungültig.  
  
- oder -  
Fehler beim Öffnen des Streams.</exception>
        <altmember cref="T:System.IO.Stream" />
      </Docs>
    </Member>
    <Member MemberName="Proxy">
      <MemberSignature Language="C#" Value="public System.Net.IWebProxy Proxy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IWebProxy Proxy" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.Proxy" />
      <MemberSignature Language="VB.NET" Value="Public Property Proxy As IWebProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IWebProxy ^ Proxy { System::Net::IWebProxy ^ get(); void set(System::Net::IWebProxy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Proxy : System.Net.IWebProxy with get, set" Usage="System.Net.WebClient.Proxy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IWebProxy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den von diesem <see cref="T:System.Net.WebClient" />-Objekt verwendeten Proxy ab oder legt diesen fest.</summary>
        <value>Eine <see cref="T:System.Net.IWebProxy" />-Instanz zum Senden von Anforderungen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Net.WebClient.Proxy%2A> identifiziert die <xref:System.Net.IWebProxy> -Instanz, die für diese mit Remoteserver kommuniziert <xref:System.Net.WebClient> Objekt. Der Proxy wird durch das System mithilfe von Konfigurationsdateien und die Internet Explorer-LAN-Einstellungen festgelegt. Um anzugeben, dass kein Proxy verwendet werden soll, legen die <xref:System.Net.WebClient.Proxy%2A> Eigenschaft `null`.  
  
 Weitere Informationen zur automatischen Proxyerkennung finden Sie unter [automatische Proxyerkennung](~/docs/framework/network-programming/automatic-proxy-detection.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Für <see cref="P:System.Net.WebClient.Proxy" /> ist <see langword="null" /> festgelegt.</exception>
        <permission cref="T:System.Net.WebPermission">Das ist nicht eingeschränkt. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.HttpWebRequest" />
        <altmember cref="T:System.Net.HttpWebResponse" />
        <altmember cref="T:System.Net.FtpWebRequest" />
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.GlobalProxySelection" />
        <altmember cref="T:System.Net.WebProxy" />
      </Docs>
    </Member>
    <Member MemberName="QueryString">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection QueryString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection QueryString" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.QueryString" />
      <MemberSignature Language="VB.NET" Value="Public Property QueryString As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ QueryString { System::Collections::Specialized::NameValueCollection ^ get(); void set(System::Collections::Specialized::NameValueCollection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.QueryString : System.Collections.Specialized.NameValueCollection with get, set" Usage="System.Net.WebClient.QueryString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Auflistung der Name-Wert-Paare für Abfragen auf, die der Anforderung zugeordnet sind, oder legt diese fest.</summary>
        <value>Eine <see cref="T:System.Collections.Specialized.NameValueCollection" /> mit den der Anforderung zugeordneten Name-Wert-Paaren für Abfragen. Wenn der Anforderung keine Paare zugeordnet sind, ist der Wert eine leere <see cref="T:System.Collections.Specialized.NameValueCollection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Net.WebClient.QueryString%2A> Eigenschaft enthält eine <xref:System.Collections.Specialized.NameValueCollection> -Instanz mit Name/Wert-Paare, die den URI als Abfragezeichenfolge angefügt sind. Den Inhalt der <xref:System.Net.WebClient.QueryString%2A> Eigenschaft durch ein Fragezeichen (?) vorangestellt werden, und die Name/Wert-Paare werden durch ein kaufmännisches und-Zeichen voneinander getrennt (&).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird erhält Benutzereingaben über die Befehlszeile und erstellt eine <xref:System.Collections.Specialized.NameValueCollection> , zugewiesen ist die <xref:System.Net.WebClient.QueryString%2A> Eigenschaft. Es werden dann die Antwort vom Server in eine lokale Datei heruntergeladen.  
  
 [!code-cpp[WebClient_QueryString#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_QueryString/CPP/webclient_querystring.cpp#1)]
 [!code-csharp[WebClient_QueryString#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_QueryString/CS/webclient_querystring.cs#1)]
 [!code-vb[WebClient_QueryString#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_QueryString/VB/webclient_querystring.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResponseHeaders">
      <MemberSignature Language="C#" Value="public System.Net.WebHeaderCollection ResponseHeaders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.WebHeaderCollection ResponseHeaders" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.ResponseHeaders" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ResponseHeaders As WebHeaderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::WebHeaderCollection ^ ResponseHeaders { System::Net::WebHeaderCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ResponseHeaders : System.Net.WebHeaderCollection" Usage="System.Net.WebClient.ResponseHeaders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebHeaderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Auflistung der Name-Wert-Paare für Header auf, die der Antwort zugeordnet sind.</summary>
        <value>Eine <see cref="T:System.Net.WebHeaderCollection" /> mit der Antwort zugeordneten Name-Wert-Paaren eines Headers, oder <see langword="null" />, wenn keine Antwort empfangen wurde.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Net.WebClient.ResponseHeaders%2A> Eigenschaft enthält eine <xref:System.Net.WebHeaderCollection> Instanz, die Headerinformationen enthält die <xref:System.Net.WebClient> in die Antwort empfängt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird heruntergeladen und zeigt die <xref:System.Net.WebClient.ResponseHeaders%2A> vom Server zurückgegebenen.  
  
 [!code-cpp[WebClient_BaseAddress_ResponseHeaders#2](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_BaseAddress_ResponseHeaders/CPP/webclient_baseaddress_responseheaders.cpp#2)]
 [!code-csharp[WebClient_BaseAddress_ResponseHeaders#2](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_BaseAddress_ResponseHeaders/CS/webclient_baseaddress_responseheaders.cs#2)]
 [!code-vb[WebClient_BaseAddress_ResponseHeaders#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_BaseAddress_ResponseHeaders/VB/webclient_baseaddress_responseheaders.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadData">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Lädt einen Datenpuffer in eine Ressource mit dem angegebenen URI hoch.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadData">
      <MemberSignature Language="C#" Value="public byte[] UploadData (string address, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadData(string address, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadData(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadData (address As String, data As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadData(System::String ^ address, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadData : string * byte[] -&gt; byte[]" Usage="webClient.UploadData (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">Der URI der Ressource, die die Daten empfangen soll.</param>
        <param name="data">Der an die Ressource zu sendende Datenpuffer.</param>
        <summary>Lädt einen Datenpuffer in eine Ressource hoch, die von einem URI identifiziert wird.</summary>
        <returns>Ein <see cref="T:System.Byte" />-Array mit dem Textkörper der Ressourcenantwort.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Net.WebClient.UploadData%2A> Methode sendet einen Datenpuffer in eine Ressource.  
  
 Diese Methode verwendet den STOR-Befehl zum Hochladen von einer FTP-Ressource. Für eine HTTP-Ressource wird die POST-Methode verwendet. Wenn die zugrunde liegende Anforderung vom Server nicht verstanden wird, bestimmen die zugrunde liegende Protokoll Abläufe. In der Regel eine <xref:System.Net.WebException> ausgelöst und die <xref:System.Net.WebException.Status%2A> Eigenschaft festgelegt wird, um den Fehler anzugeben.  
  
 Die <xref:System.Net.WebClient.UploadData%2A> Methode sendet den Inhalt des `data` an den Server, ohne ihn zu codieren. Diese Methode blockiert, während des Hochladens der das. Wenn Sie eine Ressource herunterladen und beim Warten auf die Serverantwort die Ausführung fortsetzen möchten, können Sie eine der <xref:System.Net.WebClient.UploadDataAsync%2A>-Methoden verwenden.  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge ("") und `address` enthält keinen absoluten URI, `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Daten zu bilden. Wenn die <xref:System.Net.WebClient.QueryString%2A> -Eigenschaft keine leere Zeichenfolge ist, wird dieser an angefügt `address`.  
  
> [!NOTE]
>  Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird konvertiert eine Zeichenfolge, die aus der Konsole eine <xref:System.Byte> array und das Array mit dem angegebenen Server <xref:System.Net.WebClient.UploadData%2A>. Antwort vom Server wird in der Konsole angezeigt.  
  
 [!code-cpp[WebClient_UpLoadData2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_UpLoadData2/CPP/webclient_uploaddata2.cpp#1)]
 [!code-csharp[WebClient_UpLoadData2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_UpLoadData2/CS/webclient_uploaddata2.cs#1)]
 [!code-vb[WebClient_UpLoadData2#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_UpLoadData2/VB/webclient_uploaddata2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und <paramref name="address" /> gebildete URI ist ungültig.  
  
- oder -  
 <paramref name="data" /> ist <see langword="null" />.  
  
- oder -  
Fehler beim Senden der Daten.  
  
- oder -  
Der Server, der Host dieser Ressource ist, hat nicht geantwortet.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadData">
      <MemberSignature Language="C#" Value="public byte[] UploadData (Uri address, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadData(class System.Uri address, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadData(System.Uri,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadData (address As Uri, data As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadData(Uri ^ address, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadData : Uri * byte[] -&gt; byte[]" Usage="webClient.UploadData (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">Der URI der Ressource, die die Daten empfangen soll.</param>
        <param name="data">Der an die Ressource zu sendende Datenpuffer.</param>
        <summary>Lädt einen Datenpuffer in eine Ressource hoch, die von einem URI identifiziert wird.</summary>
        <returns>Ein <see cref="T:System.Byte" />-Array mit dem Textkörper der Ressourcenantwort.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Net.WebClient.UploadData%2A> Methode sendet einen Datenpuffer in eine Ressource.  
  
 Diese Methode verwendet den STOR-Befehl zum Hochladen von einer FTP-Ressource. Für eine HTTP-Ressource wird die POST-Methode verwendet. Wenn die zugrunde liegende Anforderung vom Server nicht verstanden wird, bestimmen die zugrunde liegende Protokoll Abläufe. In der Regel eine <xref:System.Net.WebException> ausgelöst und die <xref:System.Net.WebException.Status%2A> Eigenschaft festgelegt wird, um den Fehler anzugeben.  
  
 Die <xref:System.Net.WebClient.UploadData%2A> Methode sendet den Inhalt des `data` an den Server, ohne ihn zu codieren. Diese Methode blockiert, während des Hochladens der das. Wenn Sie eine Ressource herunterladen und beim Warten auf die Serverantwort die Ausführung fortsetzen möchten, können Sie eine der <xref:System.Net.WebClient.UploadDataAsync%2A>-Methoden verwenden.  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge ("") und `address` enthält keinen absoluten URI, `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Daten zu bilden. Wenn die <xref:System.Net.WebClient.QueryString%2A> -Eigenschaft keine leere Zeichenfolge ist, wird dieser an angefügt `address`.  
  
> [!NOTE]
>  Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und <paramref name="address" /> gebildete URI ist ungültig.  
  
- oder -  
 <paramref name="data" /> ist <see langword="null" />.  
  
- oder -  
Fehler beim Senden der Daten.  
  
- oder -  
Der Server, der Host dieser Ressource ist, hat nicht geantwortet.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadData">
      <MemberSignature Language="C#" Value="public byte[] UploadData (string address, string method, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadData(string address, string method, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadData(System.String,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadData (address As String, method As String, data As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadData(System::String ^ address, System::String ^ method, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadData : string * string * byte[] -&gt; byte[]" Usage="webClient.UploadData (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">Der URI der Ressource, die die Daten empfangen soll.</param>
        <param name="method">Die HTTP-Methode zum Senden der Daten an die Ressource. Wenn NULL, lautet der Standard für http POST und für ftp STOR.</param>
        <param name="data">Der an die Ressource zu sendende Datenpuffer.</param>
        <summary>Lädt einen Datenpuffer in die angegebene Ressource mit der angegebenen Methode hoch.</summary>
        <returns>Ein <see cref="T:System.Byte" />-Array mit dem Textkörper der Ressourcenantwort.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Net.WebClient.UploadData%2A> Methode sendet einen Datenpuffer auf eine Ressource mit der im angegebenen HTTP-Methode der `method` -Parameter und Antwort vom Server zurückgegeben. Diese Methode blockiert, während des Hochladens der das. Wenn Sie eine Ressource herunterladen und beim Warten auf die Serverantwort die Ausführung fortsetzen möchten, können Sie eine der <xref:System.Net.WebClient.UploadDataAsync%2A>-Methoden verwenden.  
  
 Die <xref:System.Net.WebClient.UploadData%2A> Methode sendet den Inhalt des `data` an den Server, ohne ihn zu codieren.  
  
 Wenn die `method` Parameter gibt an, ein Verb an, die vom Server nicht verstanden wird, bestimmen die zugrunde liegenden Abläufe. In der Regel eine <xref:System.Net.WebException> ausgelöst und die <xref:System.Net.WebException.Status%2A> Eigenschaft festgelegt wird, um den Fehler anzugeben.  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge ("") und `address` enthält keinen absoluten URI, `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Daten zu bilden. Wenn die <xref:System.Net.WebClient.QueryString%2A> -Eigenschaft keine leere Zeichenfolge ist, wird dieser an angefügt `address`.  
  
> [!NOTE]
>  Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine Zeichenfolge, die in der Konsole eingegeben haben, in ein Bytearray konvertiert und das Array mit dem angegebenen Server <xref:System.Net.WebClient.UploadData%2A>. Antwort vom Server wird in der Konsole angezeigt.  
  
 [!code-cpp[WebClient_UpLoadData_Headers#2](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_UpLoadData_Headers/CPP/webclient_uploaddata_headers.cpp#2)]
 [!code-csharp[WebClient_UpLoadData_Headers#2](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_UpLoadData_Headers/CS/webclient_uploaddata_headers.cs#2)]
 [!code-vb[WebClient_UpLoadData_Headers#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_UpLoadData_Headers/VB/webclient_uploaddata_headers.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und <paramref name="address" /> gebildete URI ist ungültig.  
  
- oder -  
 <paramref name="data" /> ist <see langword="null" />.  
  
- oder -  
Fehler beim Hochladen der Daten.  
  
- oder -  
Der Server, der Host dieser Ressource ist, hat nicht geantwortet.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadData">
      <MemberSignature Language="C#" Value="public byte[] UploadData (Uri address, string method, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadData(class System.Uri address, string method, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadData(System.Uri,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadData (address As Uri, method As String, data As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadData(Uri ^ address, System::String ^ method, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadData : Uri * string * byte[] -&gt; byte[]" Usage="webClient.UploadData (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">Der URI der Ressource, die die Daten empfangen soll.</param>
        <param name="method">Die HTTP-Methode zum Senden der Daten an die Ressource. Wenn NULL, lautet der Standard für http POST und für ftp STOR.</param>
        <param name="data">Der an die Ressource zu sendende Datenpuffer.</param>
        <summary>Lädt einen Datenpuffer in die angegebene Ressource mit der angegebenen Methode hoch.</summary>
        <returns>Ein <see cref="T:System.Byte" />-Array mit dem Textkörper der Ressourcenantwort.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Net.WebClient.UploadData%2A> Methode sendet einen Datenpuffer auf eine Ressource mit der im angegebenen HTTP-Methode der `method` -Parameter und Antwort vom Server zurückgegeben. Diese Methode blockiert, während des Hochladens der das. Wenn Sie eine Ressource herunterladen und beim Warten auf die Serverantwort die Ausführung fortsetzen möchten, können Sie eine der <xref:System.Net.WebClient.UploadDataAsync%2A>-Methoden verwenden.  
  
 Die <xref:System.Net.WebClient.UploadData%2A> Methode sendet den Inhalt des `data` an den Server, ohne ihn zu codieren.  
  
 Wenn die `method` Parameter gibt an, ein Verb an, die vom Server nicht verstanden wird, bestimmen die zugrunde liegenden Abläufe. In der Regel eine <xref:System.Net.WebException> ausgelöst und die <xref:System.Net.WebException.Status%2A> Eigenschaft festgelegt wird, um den Fehler anzugeben.  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge ("") und `address` enthält keinen absoluten URI, `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Daten zu bilden. Wenn die <xref:System.Net.WebClient.QueryString%2A> -Eigenschaft keine leere Zeichenfolge ist, wird dieser an angefügt `address`.  
  
> [!NOTE]
>  Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und <paramref name="address" /> gebildete URI ist ungültig.  
  
- oder -  
 <paramref name="data" /> ist <see langword="null" />.  
  
- oder -  
Fehler beim Hochladen der Daten.  
  
- oder -  
Der Server, der Host dieser Ressource ist, hat nicht geantwortet.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadDataAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Lädt einen Datenpuffer in eine Ressource hoch, die von einem URI identifiziert wird. Durch diese Methode wird der aufrufende Thread nicht blockiert.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadDataAsync">
      <MemberSignature Language="C#" Value="public void UploadDataAsync (Uri address, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadDataAsync(class System.Uri address, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadDataAsync(System.Uri,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadDataAsync (address As Uri, data As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadDataAsync(Uri ^ address, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadDataAsync : Uri * byte[] -&gt; unit" Usage="webClient.UploadDataAsync (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">Der URI der Ressource, die die Daten empfangen soll.</param>
        <param name="data">Der an die Ressource zu sendende Datenpuffer.</param>
        <summary>Lädt mit der POST-Methode einen Datenpuffer in eine Ressource hoch, die von einem URI identifiziert wird. Durch diese Methode wird der aufrufende Thread nicht blockiert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode sendet einen Datenpuffer in eine Ressource an. Der Datenpuffer wird asynchron mit Thread-Ressourcen, die automatisch zugewiesen werden aus dem Threadpool gesendet. Die Daten werden nicht codiert. Fügen Sie einen Ereignishandler hinzu, um benachrichtigt zu werden, wenn der Datenupload abgeschlossen ist, die <xref:System.Net.WebClient.UploadDataCompleted> Ereignis.  
  
 Diese Methode wird den aufrufenden Thread nicht blockiert, während die Daten gesendet werden. Verwenden Sie zum Senden von Daten und Block beim Warten auf die Antwort des Servers, eines der <xref:System.Net.WebClient.UploadData%2A> Methoden.  
  
 Asynchrone Vorgänge, die nicht abgeschlossen wurden können abgebrochen werden, mithilfe der <xref:System.Net.WebClient.CancelAsync%2A> Methode.  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge (""), und `address` enthält keinen absoluten URI, `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Daten zu bilden. Wenn die <xref:System.Net.WebClient.QueryString%2A> -Eigenschaft keine leere Zeichenfolge ist, wird dieser an angefügt `address`.  
  
 Diese Methode verwendet den STOR-Befehl zum Hochladen von einer FTP-Ressource. Für eine HTTP-Ressource wird die POST-Methode verwendet.  
  
> [!NOTE]
>  Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und <paramref name="address" /> gebildete URI ist ungültig.  
  
- oder -  
Fehler beim Öffnen des Streams.  
  
- oder -  
Der Server, der Host dieser Ressource ist, hat nicht geantwortet.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadDataAsync">
      <MemberSignature Language="C#" Value="public void UploadDataAsync (Uri address, string method, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadDataAsync(class System.Uri address, string method, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadDataAsync(System.Uri,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadDataAsync (address As Uri, method As String, data As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadDataAsync(Uri ^ address, System::String ^ method, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadDataAsync : Uri * string * byte[] -&gt; unit" Usage="webClient.UploadDataAsync (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">Der URI der Ressource, die die Daten empfangen soll.</param>
        <param name="method">Die Methode, die zum Senden der Daten an die Ressource verwendet wird. Wenn <see langword="null" /> lautet der Standard für http POST und für ftp STOR.</param>
        <param name="data">Der an die Ressource zu sendende Datenpuffer.</param>
        <summary>Lädt einen Datenpuffer mit der angegebenen Methode in eine Ressource hoch, die von einem URI identifiziert wird. Durch diese Methode wird der aufrufende Thread nicht blockiert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode sendet einen Datenpuffer in eine Ressource an. Der Datenpuffer wird asynchron mit Thread-Ressourcen, die automatisch zugewiesen werden aus dem Threadpool gesendet. Die Daten werden nicht codiert. Fügen Sie einen Ereignishandler hinzu, um benachrichtigt zu werden, wenn der Datenupload abgeschlossen ist, die <xref:System.Net.WebClient.UploadDataCompleted> Ereignis.  
  
 Diese Methode wird den aufrufenden Thread nicht blockiert, während die Daten gesendet werden. Verwenden Sie zum Senden von Daten und Block beim Warten auf die Antwort des Servers, eines der <xref:System.Net.WebClient.UploadData%2A> Methoden.  
  
 Asynchrone Vorgänge, die nicht abgeschlossen wurden können abgebrochen werden, mithilfe der <xref:System.Net.WebClient.CancelAsync%2A> Methode.  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge (""), und `address` enthält keinen absoluten URI, `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Daten zu bilden. Wenn die <xref:System.Net.WebClient.QueryString%2A> -Eigenschaft keine leere Zeichenfolge ist, wird dieser an angefügt `address`.  
  
> [!NOTE]
>  Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und <paramref name="address" /> gebildete URI ist ungültig.  
  
- oder -  
Fehler beim Öffnen des Streams.  
  
- oder -  
Der Server, der Host dieser Ressource ist, hat nicht geantwortet.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadDataAsync">
      <MemberSignature Language="C#" Value="public void UploadDataAsync (Uri address, string method, byte[] data, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadDataAsync(class System.Uri address, string method, unsigned int8[] data, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadDataAsync(System.Uri,System.String,System.Byte[],System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadDataAsync (address As Uri, method As String, data As Byte(), userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadDataAsync(Uri ^ address, System::String ^ method, cli::array &lt;System::Byte&gt; ^ data, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.UploadDataAsync : Uri * string * byte[] * obj -&gt; unit" Usage="webClient.UploadDataAsync (address, method, data, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">Der URI der Ressource, die die Daten empfangen soll.</param>
        <param name="method">Die Methode, die zum Senden der Daten an die Ressource verwendet wird. Wenn <see langword="null" /> lautet der Standard für http POST und für ftp STOR.</param>
        <param name="data">Der an die Ressource zu sendende Datenpuffer.</param>
        <param name="userToken">Ein benutzerdefiniertes Objekt, das bei Abschluss des asynchronen Vorgangs an die aufgerufene Methode übergeben wird.</param>
        <summary>Lädt einen Datenpuffer mit der POST-Methode in eine durch einen URI bezeichnete Ressource hoch und verwendet dabei die angegebene Methode und das bezeichnende Token.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode sendet einen Datenpuffer in eine Ressource an. Der Datenpuffer wird asynchron mit Thread-Ressourcen, die automatisch zugewiesen werden aus dem Threadpool gesendet. Die Daten werden nicht codiert. Fügen Sie einen Ereignishandler hinzu, um benachrichtigt zu werden, wenn der Datenupload abgeschlossen ist, die <xref:System.Net.WebClient.UploadDataCompleted> Ereignis.  
  
 Diese Methode wird den aufrufenden Thread nicht blockiert, während die Daten gesendet werden. Verwenden Sie zum Senden von Daten und Block beim Warten auf die Antwort des Servers, eines der <xref:System.Net.WebClient.UploadData%2A> Methoden.  
  
 Asynchrone Vorgänge, die nicht abgeschlossen wurden können abgebrochen werden, mithilfe der <xref:System.Net.WebClient.CancelAsync%2A> Methode.  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge (""), und `address` enthält keinen absoluten URI, `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Daten zu bilden. Wenn die <xref:System.Net.WebClient.QueryString%2A> -Eigenschaft keine leere Zeichenfolge ist, wird dieser an angefügt `address`.  
  
> [!NOTE]
>  Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und <paramref name="address" /> gebildete URI ist ungültig.  
  
- oder -  
Fehler beim Öffnen des Streams.  
  
- oder -  
Der Server, der Host dieser Ressource ist, hat nicht geantwortet.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadDataCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.UploadDataCompletedEventHandler UploadDataCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.UploadDataCompletedEventHandler UploadDataCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.UploadDataCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UploadDataCompleted As UploadDataCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::UploadDataCompletedEventHandler ^ UploadDataCompleted;" />
      <MemberSignature Language="F#" Value="member this.UploadDataCompleted : System.Net.UploadDataCompletedEventHandler " Usage="member this.UploadDataCompleted : System.Net.UploadDataCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.UploadDataCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn ein asynchroner Datenupload abgeschlossen wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis wird jedes Mal ausgelöst, wenn ein asynchroner Datenupload abgeschlossen ist. Asynchrone Datenuploads werden gestartet, durch den Aufruf der <xref:System.Net.WebClient.UploadDataAsync%2A> Methoden.  
  
 Die <xref:System.Net.UploadDataCompletedEventHandler> ist der Delegat für dieses Ereignis. Die <xref:System.Net.UploadDataCompletedEventArgs> Klasse stellt den Ereignishandler mit Ereignisdaten bereit.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht das Festlegen von eines ereignishandlers für dieses Ereignis.  
  
 [!code-cpp[NCLWebClientAsync#36](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#36)]
 [!code-csharp[NCLWebClientAsync#36](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#36)]
 [!code-vb[NCLWebClientAsync#36](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#36)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadDataTaskAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Lädt einen Datenpuffer hoch, der ein <see cref="T:System.Byte" /> Array an den URI enthält, der mithilfe eines Taskobjekts als asynchroner Vorgang angegeben wird.  Durch diese Methoden wird der aufrufende Thread nicht blockiert.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadDataTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadDataTaskAsync (string address, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadDataTaskAsync(string address, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadDataTaskAsync(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadDataTaskAsync (address As String, data As Byte()) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadDataTaskAsync(System::String ^ address, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadDataTaskAsync : string * byte[] -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.UploadDataTaskAsync (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">Der URI der Ressource, die die Daten empfangen soll.</param>
        <param name="data">Der an die Ressource zu sendende Datenpuffer.</param>
        <summary>Lädt einen Datenpuffer hoch, der ein <see cref="T:System.Byte" /> Array an den URI enthält, der mithilfe eines Taskobjekts als asynchroner Vorgang angegeben wird.</summary>
        <returns>Gibt <see cref="T:System.Threading.Tasks.Task`1" />zurück.  
  
Das Aufgabenobjekt, das den asynchronen Vorgang darstellt. Die <see cref="P:System.Threading.Tasks.Task`1.Result" />-Eigenschaft im Task-Objekt gibt ein <see cref="T:System.Byte" /> Array zurück, das den Text der Antwort enthält, die von der Ressource empfangen wurde, als der Datenpuffer hochgeladen wurde.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Vorgang wird nicht blockiert. Das zurückgegebene <xref:System.Threading.Tasks.Task%601> Objekt wird abgeschlossen, nachdem die Ressource ein Datenpuffer hochgeladen wurde.  
  
 Diese Methode sendet einen Datenpuffer in eine Ressource an. Der Datenpuffer wird asynchron mit Thread-Ressourcen, die automatisch zugewiesen werden aus dem Threadpool gesendet. Die Daten werden nicht codiert.  
  
 Asynchrone Vorgänge, die nicht abgeschlossen wurden können abgebrochen werden, mithilfe der <xref:System.Net.WebClient.CancelAsync%2A> Methode.  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge (""), und `address` enthält keinen absoluten URI, `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Daten zu bilden. Wenn die <xref:System.Net.WebClient.QueryString%2A> -Eigenschaft keine leere Zeichenfolge ist, wird dieser an angefügt `address`.  
  
 Diese Methode verwendet den STOR-Befehl zum Hochladen von einer FTP-Ressource. Für eine HTTP-Ressource wird die POST-Methode verwendet.  
  
> [!NOTE]
>  Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und <paramref name="address" /> gebildete URI ist ungültig.  
  
- oder -  
Fehler beim Öffnen des Streams.  
  
- oder -  
Der Server, der Host dieser Ressource ist, hat nicht geantwortet.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadDataTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadDataTaskAsync (Uri address, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadDataTaskAsync(class System.Uri address, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadDataTaskAsync(System.Uri,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadDataTaskAsync (address As Uri, data As Byte()) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadDataTaskAsync(Uri ^ address, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadDataTaskAsync : Uri * byte[] -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.UploadDataTaskAsync (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">Der URI der Ressource, die die Daten empfangen soll.</param>
        <param name="data">Der an die Ressource zu sendende Datenpuffer.</param>
        <summary>Lädt einen Datenpuffer hoch, der ein <see cref="T:System.Byte" /> Array an den URI enthält, der mithilfe eines Taskobjekts als asynchroner Vorgang angegeben wird.</summary>
        <returns>Gibt <see cref="T:System.Threading.Tasks.Task`1" />zurück.  
  
Das Aufgabenobjekt, das den asynchronen Vorgang darstellt. Die <see cref="P:System.Threading.Tasks.Task`1.Result" />-Eigenschaft im Task-Objekt gibt ein <see cref="T:System.Byte" /> Array zurück, das den Text der Antwort enthält, die von der Ressource empfangen wurde, als der Datenpuffer hochgeladen wurde.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Vorgang wird nicht blockiert. Das zurückgegebene <xref:System.Threading.Tasks.Task%601> Objekt wird abgeschlossen, nachdem die Ressource ein Datenpuffer hochgeladen wurde.  
  
 Diese Methode sendet einen Datenpuffer in eine Ressource an. Der Datenpuffer wird asynchron mit Thread-Ressourcen, die automatisch zugewiesen werden aus dem Threadpool gesendet. Die Daten werden nicht codiert.  
  
 Asynchrone Vorgänge, die nicht abgeschlossen wurden können abgebrochen werden, mithilfe der <xref:System.Net.WebClient.CancelAsync%2A> Methode.  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge (""), und `address` enthält keinen absoluten URI, `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Daten zu bilden. Wenn die <xref:System.Net.WebClient.QueryString%2A> -Eigenschaft keine leere Zeichenfolge ist, wird dieser an angefügt `address`.  
  
 Diese Methode verwendet den STOR-Befehl zum Hochladen von einer FTP-Ressource. Für eine HTTP-Ressource wird die POST-Methode verwendet.  
  
> [!NOTE]
>  Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und <paramref name="address" /> gebildete URI ist ungültig.  
  
- oder -  
Fehler beim Öffnen des Streams.  
  
- oder -  
Der Server, der Host dieser Ressource ist, hat nicht geantwortet.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadDataTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadDataTaskAsync (string address, string method, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadDataTaskAsync(string address, string method, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadDataTaskAsync(System.String,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadDataTaskAsync (address As String, method As String, data As Byte()) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadDataTaskAsync(System::String ^ address, System::String ^ method, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadDataTaskAsync : string * string * byte[] -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.UploadDataTaskAsync (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">Der URI der Ressource, die die Daten empfangen soll.</param>
        <param name="method">Die Methode, die zum Senden der Daten an die Ressource verwendet wird. Wenn <see langword="null" /> lautet der Standard für http POST und für ftp STOR.</param>
        <param name="data">Der an die Ressource zu sendende Datenpuffer.</param>
        <summary>Lädt einen Datenpuffer hoch, der ein <see cref="T:System.Byte" /> Array an den URI enthält, der mithilfe eines Taskobjekts als asynchroner Vorgang angegeben wird.</summary>
        <returns>Gibt <see cref="T:System.Threading.Tasks.Task`1" />zurück.  
  
Das Aufgabenobjekt, das den asynchronen Vorgang darstellt. Die <see cref="P:System.Threading.Tasks.Task`1.Result" />-Eigenschaft im Task-Objekt gibt ein <see cref="T:System.Byte" /> Array zurück, das den Text der Antwort enthält, die von der Ressource empfangen wurde, als der Datenpuffer hochgeladen wurde.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Vorgang wird nicht blockiert. Das zurückgegebene <xref:System.Threading.Tasks.Task%601> Objekt wird abgeschlossen, nachdem die Ressource ein Datenpuffer hochgeladen wurde.  
  
 Diese Methode sendet einen Datenpuffer in eine Ressource an. Der Datenpuffer wird asynchron mit Thread-Ressourcen, die automatisch zugewiesen werden aus dem Threadpool gesendet. Die Daten werden nicht codiert.  
  
 Asynchrone Vorgänge, die nicht abgeschlossen wurden können abgebrochen werden, mithilfe der <xref:System.Net.WebClient.CancelAsync%2A> Methode.  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge (""), und `address` enthält keinen absoluten URI, `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Daten zu bilden. Wenn die <xref:System.Net.WebClient.QueryString%2A> -Eigenschaft keine leere Zeichenfolge ist, wird dieser an angefügt `address`.  
  
> [!NOTE]
>  Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und <paramref name="address" /> gebildete URI ist ungültig.  
  
- oder -  
Fehler beim Öffnen des Streams.  
  
- oder -  
Der Server, der Host dieser Ressource ist, hat nicht geantwortet.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadDataTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadDataTaskAsync (Uri address, string method, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadDataTaskAsync(class System.Uri address, string method, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadDataTaskAsync(System.Uri,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadDataTaskAsync (address As Uri, method As String, data As Byte()) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadDataTaskAsync(Uri ^ address, System::String ^ method, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadDataTaskAsync : Uri * string * byte[] -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.UploadDataTaskAsync (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">Der URI der Ressource, die die Daten empfangen soll.</param>
        <param name="method">Die Methode, die zum Senden der Daten an die Ressource verwendet wird. Wenn <see langword="null" /> lautet der Standard für http POST und für ftp STOR.</param>
        <param name="data">Der an die Ressource zu sendende Datenpuffer.</param>
        <summary>Lädt einen Datenpuffer hoch, der ein <see cref="T:System.Byte" /> Array an den URI enthält, der mithilfe eines Taskobjekts als asynchroner Vorgang angegeben wird.</summary>
        <returns>Gibt <see cref="T:System.Threading.Tasks.Task`1" />zurück.  
  
Das Aufgabenobjekt, das den asynchronen Vorgang darstellt. Die <see cref="P:System.Threading.Tasks.Task`1.Result" />-Eigenschaft im Task-Objekt gibt ein <see cref="T:System.Byte" /> Array zurück, das den Text der Antwort enthält, die von der Ressource empfangen wurde, als der Datenpuffer hochgeladen wurde.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Vorgang wird nicht blockiert. Das zurückgegebene <xref:System.Threading.Tasks.Task%601> Objekt wird abgeschlossen, nachdem die Ressource ein Datenpuffer hochgeladen wurde.  
  
 Diese Methode sendet einen Datenpuffer in eine Ressource an. Der Datenpuffer wird asynchron mit Thread-Ressourcen, die automatisch zugewiesen werden aus dem Threadpool gesendet. Die Daten werden nicht codiert.  
  
 Asynchrone Vorgänge, die nicht abgeschlossen wurden können abgebrochen werden, mithilfe der <xref:System.Net.WebClient.CancelAsync%2A> Methode.  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge (""), und `address` enthält keinen absoluten URI, `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Daten zu bilden. Wenn die <xref:System.Net.WebClient.QueryString%2A> -Eigenschaft keine leere Zeichenfolge ist, wird dieser an angefügt `address`.  
  
> [!NOTE]
>  Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und <paramref name="address" /> gebildete URI ist ungültig.  
  
- oder -  
Fehler beim Öffnen des Streams.  
  
- oder -  
Der Server, der Host dieser Ressource ist, hat nicht geantwortet.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadFile">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Lädt eine lokale Datei in eine Ressource mit dem angegebenen URI hoch.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public byte[] UploadFile (string address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadFile(string address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadFile (address As String, fileName As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadFile(System::String ^ address, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * string -&gt; byte[]" Usage="webClient.UploadFile (address, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Der URI der Ressource, die die Datei empfangen soll. Zum Beispiel "ftp://localhost/samplefile.txt".</param>
        <param name="fileName">Die an die Ressource zu sendende Datei. Beispiel: "samplefile.txt".</param>
        <summary>Lädt die angegebene lokale Datei in eine Ressource mit dem angegebenen URI hoch.</summary>
        <returns>Ein <see cref="T:System.Byte" />-Array mit dem Textkörper der Ressourcenantwort.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Net.WebClient.UploadFile%2A> Methode sendet eine lokale Datei auf eine Ressource. Diese Methode verwendet den STOR-Befehl zum Hochladen von einer FTP-Ressource. Für eine HTTP-Ressource wird die POST-Methode verwendet.  
  
 Diese Methode blockiert, während des Hochladens der das. Wenn Sie eine Ressource herunterladen und beim Warten auf die Serverantwort die Ausführung fortsetzen möchten, können Sie eine der <xref:System.Net.WebClient.UploadFileAsync%2A>-Methoden verwenden.  
  
 Die `POST` von HTTP-Methode definiert ist. Wenn die zugrunde liegende Anforderung nicht HTTP verwendet und `POST` wird nicht verstanden durch den Server, bestimmen die zugrunde liegenden Abläufe. In der Regel eine <xref:System.Net.WebException> ausgelöst und die <xref:System.Net.WebException.Status%2A> Eigenschaft festgelegt wird, um den Fehler anzugeben.  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge ("") und `address` enthält keinen absoluten URI, `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Daten zu bilden. Wenn die <xref:System.Net.WebClient.QueryString%2A> -Eigenschaft keine leere Zeichenfolge ist, wird dieser an angefügt `address`.  
  
> [!NOTE]
>  Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Das folgende Codebeispiel lädt die angegebene Datei mit dem angegebenen URI <xref:System.Net.WebClient.UploadFile%2A>. Jede vom Server zurückgegebenen Antwort ist in der Konsole angezeigt.  
  
 [!code-cpp[WebClient_UpLoadFile#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_UpLoadFile/CPP/webclient_uploadfile.cpp#1)]
 [!code-csharp[WebClient_UpLoadFile#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_UpLoadFile/CS/webclient_uploadfile.cs#1)]
 [!code-vb[WebClient_UpLoadFile#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_UpLoadFile/VB/webclient_uploadfile.vb#1)]  
  
 Das folgende Codebeispiel zeigt eine ASP.NET-Seite, die akzeptieren kann gebucht Dateien und eignet sich für die Verwendung mit der <xref:System.Net.WebClient.UploadFile%2A> Methode. Die Seite muss auf einem Webserver befinden. Die Adresse stellt den Wert für die `address` Parameter der <xref:System.Net.WebClient.UploadFile%2A> Methode.  
  
 [!code-aspx-csharp[NCLWebClientAsp#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsp/CS/fileuploadercs.aspx#1)]
 [!code-aspx-vb[NCLWebClientAsp#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsp/VB/fileuploadervb.aspx#1)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.  
  
- oder -  
Der <paramref name="fileName" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und <paramref name="address" /> gebildete URI ist ungültig.  
  
- oder -  
 <paramref name="fileName" /> ist <see langword="null" />, <see cref="F:System.String.Empty" />, enthält ungültige Zeichen oder existiert nicht.  
  
- oder -  
Fehler beim Hochladen der Datei.  
  
- oder -  
Der Server, der Host dieser Ressource ist, hat nicht geantwortet.  
  
- oder -  
Der <see langword="Content-type" />-Header beginnt mit <see langword="multipart" />.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Zugriff auf die lokale Datei. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></permission>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public byte[] UploadFile (Uri address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadFile(class System.Uri address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFile(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadFile (address As Uri, fileName As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadFile(Uri ^ address, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : Uri * string -&gt; byte[]" Usage="webClient.UploadFile (address, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Der URI der Ressource, die die Datei empfangen soll. Zum Beispiel "ftp://localhost/samplefile.txt".</param>
        <param name="fileName">Die an die Ressource zu sendende Datei. Beispiel: "samplefile.txt".</param>
        <summary>Lädt die angegebene lokale Datei in eine Ressource mit dem angegebenen URI hoch.</summary>
        <returns>Ein <see cref="T:System.Byte" />-Array mit dem Textkörper der Ressourcenantwort.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Net.WebClient.UploadFile%2A> Methode sendet eine lokale Datei auf eine Ressource. Diese Methode verwendet den STOR-Befehl zum Hochladen von einer FTP-Ressource. Für eine HTTP-Ressource wird die POST-Methode verwendet.  
  
 Diese Methode blockiert, während des Hochladens der das. Wenn Sie eine Ressource herunterladen und beim Warten auf die Serverantwort die Ausführung fortsetzen möchten, können Sie eine der <xref:System.Net.WebClient.UploadFileAsync%2A>-Methoden verwenden.  
  
 Die `POST` von HTTP-Methode definiert ist. Wenn die zugrunde liegende Anforderung nicht HTTP verwendet und `POST` wird nicht verstanden durch den Server, bestimmen die zugrunde liegenden Abläufe. In der Regel eine <xref:System.Net.WebException> ausgelöst und die <xref:System.Net.WebException.Status%2A> Eigenschaft festgelegt wird, um den Fehler anzugeben.  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge ("") und `address` enthält keinen absoluten URI, `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Daten zu bilden. Wenn die <xref:System.Net.WebClient.QueryString%2A> -Eigenschaft keine leere Zeichenfolge ist, wird dieser an angefügt `address`.  
  
> [!NOTE]
>  Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.  
  
- oder -  
Der <paramref name="fileName" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und <paramref name="address" /> gebildete URI ist ungültig.  
  
- oder -  
 <paramref name="fileName" /> ist <see langword="null" />, <see cref="F:System.String.Empty" />, enthält ungültige Zeichen oder existiert nicht.  
  
- oder -  
Fehler beim Hochladen der Datei.  
  
- oder -  
Der Server, der Host dieser Ressource ist, hat nicht geantwortet.  
  
- oder -  
Der <see langword="Content-type" />-Header beginnt mit <see langword="multipart" />.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Zugriff auf die lokale Datei. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></permission>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public byte[] UploadFile (string address, string method, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadFile(string address, string method, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFile(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadFile (address As String, method As String, fileName As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadFile(System::String ^ address, System::String ^ method, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * string * string -&gt; byte[]" Usage="webClient.UploadFile (address, method, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Der URI der Ressource, die die Datei empfangen soll.</param>
        <param name="method">Die Methode zum Senden der Datei an die Ressource. Wenn <see langword="null" /> lautet der Standard für http POST und für ftp STOR.</param>
        <param name="fileName">Die an die Ressource zu sendende Datei.</param>
        <summary>Lädt die angegebene lokale Datei mithilfe der angegebenen Methode in die angegebene Ressource hoch.</summary>
        <returns>Ein <see cref="T:System.Byte" />-Array mit dem Textkörper der Ressourcenantwort.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die Adresse eine HTTP-Ressource angibt, die <xref:System.Net.WebClient.UploadFile%2A> Methode sendet eine lokale Datei auf eine Ressource mit der im angegebenen HTTP-Methode der `method` Parameter und Antwort vom Server zurückgegeben. Diese Methode blockiert, während des Hochladens der das. Wenn Sie eine Ressource herunterladen und beim Warten auf die Serverantwort die Ausführung fortsetzen möchten, können Sie eine der <xref:System.Net.WebClient.UploadFileAsync%2A>-Methoden verwenden.  
  
 Wenn die `method` Parameter gibt an, ein Verb, das vom Server nicht erkannt wird oder die `address` Ressource bestimmen die zugrunde liegenden Abläufe. In der Regel eine <xref:System.Net.WebException> ausgelöst und die <xref:System.Net.WebException.Status%2A> Eigenschaft festgelegt wird, um den Fehler anzugeben.  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge ("") und `address` enthält keinen absoluten URI, `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Daten zu bilden. Wenn die <xref:System.Net.WebClient.QueryString%2A> -Eigenschaft keine leere Zeichenfolge ist, wird dieser an angefügt `address`.  
  
> [!NOTE]
>  Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Das folgende Codebeispiel lädt die angegebene Datei mit dem angegebenen URI <xref:System.Net.WebClient.UploadFile%2A>. Jede vom Server zurückgegebenen Antwort ist in der Konsole angezeigt.  
  
 [!code-cpp[WebClient_UpLoadFile2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_UpLoadFile2/CPP/webclient_uploadfile2.cpp#1)]
 [!code-csharp[WebClient_UpLoadFile2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_UpLoadFile2/CS/webclient_uploadfile2.cs#1)]
 [!code-vb[WebClient_UpLoadFile2#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_UpLoadFile2/VB/webclient_uploadfile2.vb#1)]  
  
 Das folgende Codebeispiel zeigt eine ASP.NET-Seite, die akzeptieren kann gebucht Dateien und eignet sich für die Verwendung mit der <xref:System.Net.WebClient.UploadFile%2A> Methode. Die Seite muss auf einem Webserver befinden. Die Adresse stellt den Wert für die `address` Parameter der <xref:System.Net.WebClient.UploadFile%2A> Methode.  
  
 [!code-aspx-csharp[NCLWebClientAsp#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsp/CS/fileuploadercs.aspx#1)]
 [!code-aspx-vb[NCLWebClientAsp#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsp/VB/fileuploadervb.aspx#1)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.  
  
- oder -  
Der <paramref name="fileName" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und <paramref name="address" /> gebildete URI ist ungültig.  
  
- oder -  
 <paramref name="fileName" /> ist <see langword="null" />, <see cref="F:System.String.Empty" />, enthält ungültige Zeichen oder existiert nicht.  
  
- oder -  
Fehler beim Hochladen der Datei.  
  
- oder -  
Der Server, der Host dieser Ressource ist, hat nicht geantwortet.  
  
- oder -  
Der <see langword="Content-type" />-Header beginnt mit <see langword="multipart" />.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Zugriff auf die lokale Datei. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></permission>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public byte[] UploadFile (Uri address, string method, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadFile(class System.Uri address, string method, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFile(System.Uri,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadFile (address As Uri, method As String, fileName As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadFile(Uri ^ address, System::String ^ method, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : Uri * string * string -&gt; byte[]" Usage="webClient.UploadFile (address, method, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Der URI der Ressource, die die Datei empfangen soll.</param>
        <param name="method">Die Methode zum Senden der Datei an die Ressource. Wenn <see langword="null" /> lautet der Standard für http POST und für ftp STOR.</param>
        <param name="fileName">Die an die Ressource zu sendende Datei.</param>
        <summary>Lädt die angegebene lokale Datei mithilfe der angegebenen Methode in die angegebene Ressource hoch.</summary>
        <returns>Ein <see cref="T:System.Byte" />-Array mit dem Textkörper der Ressourcenantwort.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die Adresse eine HTTP-Ressource angibt, die <xref:System.Net.WebClient.UploadFile%2A> Methode sendet eine lokale Datei auf eine Ressource mit der im angegebenen HTTP-Methode der `method` Parameter und Antwort vom Server zurückgegeben. Diese Methode blockiert, während des Hochladens der das. Wenn Sie eine Ressource herunterladen und beim Warten auf die Serverantwort die Ausführung fortsetzen möchten, können Sie eine der <xref:System.Net.WebClient.UploadFileAsync%2A>-Methoden verwenden.  
  
 Wenn die `method` Parameter gibt an, ein Verb, das vom Server nicht erkannt wird oder die `address` Ressource bestimmen die zugrunde liegenden Abläufe. In der Regel eine <xref:System.Net.WebException> ausgelöst und die <xref:System.Net.WebException.Status%2A> Eigenschaft festgelegt wird, um den Fehler anzugeben.  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge ("") und `address` enthält keinen absoluten URI, `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Daten zu bilden. Wenn die <xref:System.Net.WebClient.QueryString%2A> -Eigenschaft keine leere Zeichenfolge ist, wird dieser an angefügt `address`.  
  
> [!NOTE]
>  Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.  
  
- oder -  
Der <paramref name="fileName" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und <paramref name="address" /> gebildete URI ist ungültig.  
  
- oder -  
 <paramref name="fileName" /> ist <see langword="null" />, <see cref="F:System.String.Empty" />, enthält ungültige Zeichen oder existiert nicht.  
  
- oder -  
Fehler beim Hochladen der Datei.  
  
- oder -  
Der Server, der Host dieser Ressource ist, hat nicht geantwortet.  
  
- oder -  
Der <see langword="Content-type" />-Header beginnt mit <see langword="multipart" />.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Zugriff auf die lokale Datei. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadFileAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Lädt die angegebene lokale Datei in die angegebene Ressource hoch. Durch diese Methoden wird der aufrufende Thread nicht blockiert.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadFileAsync">
      <MemberSignature Language="C#" Value="public void UploadFileAsync (Uri address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadFileAsync(class System.Uri address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFileAsync(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFileAsync (address As Uri, fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFileAsync(Uri ^ address, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.UploadFileAsync : Uri * string -&gt; unit" Usage="webClient.UploadFileAsync (address, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Der URI der Ressource, die die Datei empfangen soll. Für HTTP-Ressourcen muss dieser URI eine Ressource identifizieren, die eine mit der POST-Methode gesendete Anforderung annehmen kann, z. B. ein Skript oder eine ASP-Seite.</param>
        <param name="fileName">Die an die Ressource zu sendende Datei.</param>
        <summary>Lädt die angegebene lokale Datei mithilfe der POST-Methode in die angegebene Ressource hoch. Durch diese Methode wird der aufrufende Thread nicht blockiert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Datei wird asynchron mit Thread-Ressourcen, die automatisch zugewiesen werden aus dem Threadpool gesendet. Fügen Sie einen Ereignishandler hinzu, um benachrichtigt zu werden, wenn das Hochladen der Datei abgeschlossen ist, die <xref:System.Net.WebClient.UploadFileCompleted> Ereignis.  
  
 Diese Methode wird den aufrufenden Thread nicht blockiert, während die Datei gesendet wird. Um eine Datei und einen Block während des Wartens auf die Antwort des Servers zu senden, gehen die <xref:System.Net.WebClient.UploadFile%2A> Methoden.  
  
 Asynchrone Vorgänge, die nicht abgeschlossen wurden können abgebrochen werden, mithilfe der <xref:System.Net.WebClient.CancelAsync%2A> Methode.  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge (""), `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Daten zu bilden. Wenn die <xref:System.Net.WebClient.QueryString%2A> -Eigenschaft keine leere Zeichenfolge ist, wird dieser an angefügt `address`.  
  
 Diese Methode verwendet den STOR-Befehl zum Hochladen von einer FTP-Ressource. Für eine HTTP-Ressource wird die POST-Methode verwendet.  
  
> [!NOTE]
>  Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.  
  
- oder -  
Der <paramref name="fileName" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und <paramref name="address" /> gebildete URI ist ungültig.  
  
- oder -  
 <paramref name="fileName" /> ist <see langword="null" /> oder <see cref="F:System.String.Empty" />, enthält ungültige Zeichen oder der angegebene Pfad zur Datei ist nicht vorhanden.  
  
- oder -  
Fehler beim Öffnen des Streams.  
  
- oder -  
Der Server, der Host dieser Ressource ist, hat nicht geantwortet.  
  
- oder -  
Der <see langword="Content-type" />-Header beginnt mit <see langword="multipart" />.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Zugriff auf die lokale Datei. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></permission>
      </Docs>
    </Member>
    <Member MemberName="UploadFileAsync">
      <MemberSignature Language="C#" Value="public void UploadFileAsync (Uri address, string method, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadFileAsync(class System.Uri address, string method, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFileAsync(System.Uri,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFileAsync (address As Uri, method As String, fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFileAsync(Uri ^ address, System::String ^ method, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.UploadFileAsync : Uri * string * string -&gt; unit" Usage="webClient.UploadFileAsync (address, method, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Der URI der Ressource, die die Datei empfangen soll. Für HTTP-Ressourcen muss dieser URI eine Ressource identifizieren, die eine mit der POST-Methode gesendete Anforderung annehmen kann, z. B. ein Skript oder eine ASP-Seite.</param>
        <param name="method">Die Methode, die zum Senden der Daten an die Ressource verwendet wird. Wenn <see langword="null" /> lautet der Standard für http POST und für ftp STOR.</param>
        <param name="fileName">Die an die Ressource zu sendende Datei.</param>
        <summary>Lädt die angegebene lokale Datei mithilfe der POST-Methode in die angegebene Ressource hoch. Durch diese Methode wird der aufrufende Thread nicht blockiert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Datei wird asynchron mit Thread-Ressourcen, die automatisch zugewiesen werden aus dem Threadpool gesendet. Fügen Sie einen Ereignishandler hinzu, um benachrichtigt zu werden, wenn das Hochladen der Datei abgeschlossen ist, die <xref:System.Net.WebClient.UploadFileCompleted> Ereignis.  
  
 Diese Methode wird den aufrufenden Thread nicht blockiert, während die Datei gesendet wird. Um eine Datei und einen Block während des Wartens auf die Antwort des Servers zu senden, gehen die <xref:System.Net.WebClient.UploadFile%2A> Methoden.  
  
 Asynchrone Vorgänge, die nicht abgeschlossen wurden können abgebrochen werden, mithilfe der <xref:System.Net.WebClient.CancelAsync%2A> Methode.  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge (""), `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Daten zu bilden. Wenn die <xref:System.Net.WebClient.QueryString%2A> -Eigenschaft keine leere Zeichenfolge ist, wird dieser an angefügt `address`.  
  
 Diese Methode verwendet den STOR-Befehl zum Hochladen von einer FTP-Ressource. Für eine HTTP-Ressource wird die POST-Methode verwendet.  
  
> [!NOTE]
>  Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.  
  
- oder -  
Der <paramref name="fileName" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und <paramref name="address" /> gebildete URI ist ungültig.  
  
- oder -  
 <paramref name="fileName" /> ist <see langword="null" /> oder <see cref="F:System.String.Empty" />, enthält ungültige Zeichen oder der angegebene Pfad zur Datei ist nicht vorhanden.  
  
- oder -  
Fehler beim Öffnen des Streams.  
  
- oder -  
Der Server, der Host dieser Ressource ist, hat nicht geantwortet.  
  
- oder -  
Der <see langword="Content-type" />-Header beginnt mit <see langword="multipart" />.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Zugriff auf die lokale Datei. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></permission>
      </Docs>
    </Member>
    <Member MemberName="UploadFileAsync">
      <MemberSignature Language="C#" Value="public void UploadFileAsync (Uri address, string method, string fileName, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadFileAsync(class System.Uri address, string method, string fileName, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFileAsync(System.Uri,System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFileAsync (address As Uri, method As String, fileName As String, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFileAsync(Uri ^ address, System::String ^ method, System::String ^ fileName, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.UploadFileAsync : Uri * string * string * obj -&gt; unit" Usage="webClient.UploadFileAsync (address, method, fileName, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">Der URI der Ressource, die die Datei empfangen soll. Für HTTP-Ressourcen muss dieser URI eine Ressource identifizieren, die eine mit der POST-Methode gesendete Anforderung annehmen kann, z. B. ein Skript oder eine ASP-Seite.</param>
        <param name="method">Die Methode, die zum Senden der Daten an die Ressource verwendet wird. Wenn <see langword="null" /> lautet der Standard für http POST und für ftp STOR.</param>
        <param name="fileName">Die an die Ressource zu sendende Datei.</param>
        <param name="userToken">Ein benutzerdefiniertes Objekt, das bei Abschluss des asynchronen Vorgangs an die aufgerufene Methode übergeben wird.</param>
        <summary>Lädt die angegebene lokale Datei mithilfe der POST-Methode in die angegebene Ressource hoch. Durch diese Methode wird der aufrufende Thread nicht blockiert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Datei wird asynchron mit Thread-Ressourcen, die automatisch zugewiesen werden aus dem Threadpool gesendet. Fügen Sie einen Ereignishandler hinzu, um benachrichtigt zu werden, wenn das Hochladen der Datei abgeschlossen ist, die <xref:System.Net.WebClient.UploadFileCompleted> Ereignis.  
  
 Diese Methode wird den aufrufenden Thread nicht blockiert, während die Datei gesendet wird. Um eine Datei und einen Block während des Wartens auf die Antwort des Servers zu senden, gehen die <xref:System.Net.WebClient.UploadFile%2A> Methoden.  
  
 Asynchrone Vorgänge, die nicht abgeschlossen wurden können abgebrochen werden, mithilfe der <xref:System.Net.WebClient.CancelAsync%2A> Methode.  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge (""), `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Daten zu bilden. Wenn die <xref:System.Net.WebClient.QueryString%2A> -Eigenschaft keine leere Zeichenfolge ist, wird dieser an angefügt `address`.  
  
 Diese Methode verwendet den STOR-Befehl zum Hochladen von einer FTP-Ressource. Für eine HTTP-Ressource wird die POST-Methode verwendet.  
  
> [!NOTE]
>  Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.  
  
- oder -  
Der <paramref name="fileName" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und <paramref name="address" /> gebildete URI ist ungültig.  
  
- oder -  
 <paramref name="fileName" /> ist <see langword="null" /> oder <see cref="F:System.String.Empty" />, enthält ungültige Zeichen oder der angegebene Pfad zur Datei ist nicht vorhanden.  
  
- oder -  
Fehler beim Öffnen des Streams.  
  
- oder -  
Der Server, der Host dieser Ressource ist, hat nicht geantwortet.  
  
- oder -  
Der <see langword="Content-type" />-Header beginnt mit <see langword="multipart" />.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Zugriff auf die lokale Datei. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></permission>
      </Docs>
    </Member>
    <Member MemberName="UploadFileCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.UploadFileCompletedEventHandler UploadFileCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.UploadFileCompletedEventHandler UploadFileCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.UploadFileCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UploadFileCompleted As UploadFileCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::UploadFileCompletedEventHandler ^ UploadFileCompleted;" />
      <MemberSignature Language="F#" Value="member this.UploadFileCompleted : System.Net.UploadFileCompletedEventHandler " Usage="member this.UploadFileCompleted : System.Net.UploadFileCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.UploadFileCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn ein asynchroner Dateiupload abgeschlossen wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis wird jedes Mal ausgelöst, wenn ein asynchroner Dateiupload abgeschlossen wird. Asynchrone Dateiuploads werden gestartet, durch den Aufruf der <xref:System.Net.WebClient.UploadFileAsync%2A> Methoden.  
  
 Die <xref:System.Net.UploadFileCompletedEventHandler> ist der Delegat für dieses Ereignis. Die <xref:System.Net.UploadFileCompletedEventArgs> Klasse stellt den Ereignishandler mit Ereignisdaten bereit.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht das Festlegen von eines ereignishandlers für dieses Ereignis.  
  
 [!code-cpp[NCLWebClientAsync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#4)]
 [!code-csharp[NCLWebClientAsync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#4)]
 [!code-vb[NCLWebClientAsync#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadFileTaskAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Lädt die angegebene lokale Datei zu der Ressource mithilfe eines Taskobjekts als asynchroner Vorgang hoch. Durch diese Methoden wird der aufrufende Thread nicht blockiert.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadFileTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadFileTaskAsync (string address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadFileTaskAsync(string address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFileTaskAsync(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadFileTaskAsync (address As String, fileName As String) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadFileTaskAsync(System::String ^ address, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.UploadFileTaskAsync : string * string -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.UploadFileTaskAsync (address, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Der URI der Ressource, die die Datei empfangen soll. Für HTTP-Ressourcen muss dieser URI eine Ressource identifizieren, die eine mit der POST-Methode gesendete Anforderung annehmen kann, z. B. ein Skript oder eine ASP-Seite.</param>
        <param name="fileName">Die an die Ressource zu sendende lokale Datei.</param>
        <summary>Lädt die angegebene lokale Datei zu der Ressource mithilfe eines Taskobjekts als asynchroner Vorgang hoch.</summary>
        <returns>Gibt <see cref="T:System.Threading.Tasks.Task`1" />zurück.  
  
Das Aufgabenobjekt, das den asynchronen Vorgang darstellt. Die <see cref="P:System.Threading.Tasks.Task`1.Result" />-Eigenschaft im Task-Objekt gibt ein <see cref="T:System.Byte" /> Array zurück, das den Text der Antwort enthält, die von der Ressource empfangen wurde, als die Datei hochgeladen wurde.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Vorgang wird nicht blockiert. Das zurückgegebene <xref:System.Threading.Tasks.Task%601> Objekt wird abgeschlossen, nachdem die Datei auf die Ressource hochgeladen wurde. Die Datei wird asynchron mit Thread-Ressourcen, die automatisch zugewiesen werden aus dem Threadpool gesendet.  
  
 Asynchrone Vorgänge, die nicht abgeschlossen wurden können abgebrochen werden, mithilfe der <xref:System.Net.WebClient.CancelAsync%2A> Methode.  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge (""), `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Daten zu bilden. Wenn die <xref:System.Net.WebClient.QueryString%2A> -Eigenschaft keine leere Zeichenfolge ist, wird dieser an angefügt `address`.  
  
 Diese Methode verwendet den STOR-Befehl zum Hochladen von einer FTP-Ressource. Für eine HTTP-Ressource wird die POST-Methode verwendet.  
  
> [!NOTE]
>  Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.  
  
- oder -  
Der <paramref name="fileName" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und <paramref name="address" /> gebildete URI ist ungültig.  
  
- oder -  
 <paramref name="fileName" /> ist <see langword="null" /> oder <see cref="F:System.String.Empty" />, enthält ungültige Zeichen oder der angegebene Pfad zur Datei ist nicht vorhanden.  
  
- oder -  
Fehler beim Öffnen des Streams.  
  
- oder -  
Der Server, der Host dieser Ressource ist, hat nicht geantwortet.  
  
- oder -  
Der <see langword="Content-type" />-Header beginnt mit <see langword="multipart" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadFileTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadFileTaskAsync (Uri address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadFileTaskAsync(class System.Uri address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFileTaskAsync(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadFileTaskAsync (address As Uri, fileName As String) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadFileTaskAsync(Uri ^ address, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.UploadFileTaskAsync : Uri * string -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.UploadFileTaskAsync (address, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Der URI der Ressource, die die Datei empfangen soll. Für HTTP-Ressourcen muss dieser URI eine Ressource identifizieren, die eine mit der POST-Methode gesendete Anforderung annehmen kann, z. B. ein Skript oder eine ASP-Seite.</param>
        <param name="fileName">Die an die Ressource zu sendende lokale Datei.</param>
        <summary>Lädt die angegebene lokale Datei zu der Ressource mithilfe eines Taskobjekts als asynchroner Vorgang hoch.</summary>
        <returns>Gibt <see cref="T:System.Threading.Tasks.Task`1" />zurück.  
  
Das Aufgabenobjekt, das den asynchronen Vorgang darstellt. Die <see cref="P:System.Threading.Tasks.Task`1.Result" />-Eigenschaft im Task-Objekt gibt ein <see cref="T:System.Byte" /> Array zurück, das den Text der Antwort enthält, die von der Ressource empfangen wurde, als die Datei hochgeladen wurde.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Vorgang wird nicht blockiert. Das zurückgegebene <xref:System.Threading.Tasks.Task%601> Objekt wird abgeschlossen, nachdem die Datei auf die Ressource hochgeladen wurde. Die Datei wird asynchron mit Thread-Ressourcen, die automatisch zugewiesen werden aus dem Threadpool gesendet.  
  
 Asynchrone Vorgänge, die nicht abgeschlossen wurden können abgebrochen werden, mithilfe der <xref:System.Net.WebClient.CancelAsync%2A> Methode.  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge (""), `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Daten zu bilden. Wenn die <xref:System.Net.WebClient.QueryString%2A> -Eigenschaft keine leere Zeichenfolge ist, wird dieser an angefügt `address`.  
  
 Diese Methode verwendet den STOR-Befehl zum Hochladen von einer FTP-Ressource. Für eine HTTP-Ressource wird die POST-Methode verwendet.  
  
> [!NOTE]
>  Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.  
  
- oder -  
Der <paramref name="fileName" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und <paramref name="address" /> gebildete URI ist ungültig.  
  
- oder -  
 <paramref name="fileName" /> ist <see langword="null" /> oder <see cref="F:System.String.Empty" />, enthält ungültige Zeichen oder der angegebene Pfad zur Datei ist nicht vorhanden.  
  
- oder -  
Fehler beim Öffnen des Streams.  
  
- oder -  
Der Server, der Host dieser Ressource ist, hat nicht geantwortet.  
  
- oder -  
Der <see langword="Content-type" />-Header beginnt mit <see langword="multipart" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadFileTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadFileTaskAsync (string address, string method, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadFileTaskAsync(string address, string method, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFileTaskAsync(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadFileTaskAsync (address As String, method As String, fileName As String) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadFileTaskAsync(System::String ^ address, System::String ^ method, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.UploadFileTaskAsync : string * string * string -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.UploadFileTaskAsync (address, method, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Der URI der Ressource, die die Datei empfangen soll. Für HTTP-Ressourcen muss dieser URI eine Ressource identifizieren, die eine mit der POST-Methode gesendete Anforderung annehmen kann, z. B. ein Skript oder eine ASP-Seite.</param>
        <param name="method">Die Methode, die zum Senden der Daten an die Ressource verwendet wird. Wenn <see langword="null" /> lautet der Standard für http POST und für ftp STOR.</param>
        <param name="fileName">Die an die Ressource zu sendende lokale Datei.</param>
        <summary>Lädt die angegebene lokale Datei zu der Ressource mithilfe eines Taskobjekts als asynchroner Vorgang hoch.</summary>
        <returns>Gibt <see cref="T:System.Threading.Tasks.Task`1" />zurück.  
  
Das Aufgabenobjekt, das den asynchronen Vorgang darstellt. Die <see cref="P:System.Threading.Tasks.Task`1.Result" />-Eigenschaft im Task-Objekt gibt ein <see cref="T:System.Byte" /> Array zurück, das den Text der Antwort enthält, die von der Ressource empfangen wurde, als die Datei hochgeladen wurde.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Vorgang wird nicht blockiert. Das zurückgegebene <xref:System.Threading.Tasks.Task%601> Objekt wird abgeschlossen, nachdem die Datei auf die Ressource hochgeladen wurde. Die Datei wird asynchron mit Thread-Ressourcen, die automatisch zugewiesen werden aus dem Threadpool gesendet.  
  
 Asynchrone Vorgänge, die nicht abgeschlossen wurden können abgebrochen werden, mithilfe der <xref:System.Net.WebClient.CancelAsync%2A> Methode.  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge (""), `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Daten zu bilden. Wenn die <xref:System.Net.WebClient.QueryString%2A> -Eigenschaft keine leere Zeichenfolge ist, wird dieser an angefügt `address`.  
  
 STANDARDMÄßIG verwendet diese Methode den STOR-Befehl zum Hochladen von einer FTP-Ressource. Für eine HTTP-Ressource wird die POST-Methode verwendet.  
  
> [!NOTE]
>  Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.  
  
- oder -  
Der <paramref name="fileName" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und <paramref name="address" /> gebildete URI ist ungültig.  
  
- oder -  
 <paramref name="fileName" /> ist <see langword="null" /> oder <see cref="F:System.String.Empty" />, enthält ungültige Zeichen oder der angegebene Pfad zur Datei ist nicht vorhanden.  
  
- oder -  
Fehler beim Öffnen des Streams.  
  
- oder -  
Der Server, der Host dieser Ressource ist, hat nicht geantwortet.  
  
- oder -  
Der <see langword="Content-type" />-Header beginnt mit <see langword="multipart" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadFileTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadFileTaskAsync (Uri address, string method, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadFileTaskAsync(class System.Uri address, string method, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFileTaskAsync(System.Uri,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadFileTaskAsync (address As Uri, method As String, fileName As String) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadFileTaskAsync(Uri ^ address, System::String ^ method, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.UploadFileTaskAsync : Uri * string * string -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.UploadFileTaskAsync (address, method, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Der URI der Ressource, die die Datei empfangen soll. Für HTTP-Ressourcen muss dieser URI eine Ressource identifizieren, die eine mit der POST-Methode gesendete Anforderung annehmen kann, z. B. ein Skript oder eine ASP-Seite.</param>
        <param name="method">Die Methode, die zum Senden der Daten an die Ressource verwendet wird. Wenn <see langword="null" /> lautet der Standard für http POST und für ftp STOR.</param>
        <param name="fileName">Die an die Ressource zu sendende lokale Datei.</param>
        <summary>Lädt die angegebene lokale Datei zu der Ressource mithilfe eines Taskobjekts als asynchroner Vorgang hoch.</summary>
        <returns>Gibt <see cref="T:System.Threading.Tasks.Task`1" />zurück.  
  
Das Aufgabenobjekt, das den asynchronen Vorgang darstellt. Die <see cref="P:System.Threading.Tasks.Task`1.Result" />-Eigenschaft im Task-Objekt gibt ein <see cref="T:System.Byte" /> Array zurück, das den Text der Antwort enthält, die von der Ressource empfangen wurde, als die Datei hochgeladen wurde.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Vorgang wird nicht blockiert. Das zurückgegebene <xref:System.Threading.Tasks.Task%601> Objekt wird abgeschlossen, nachdem die Datei auf die Ressource hochgeladen wurde. Die Datei wird asynchron mit Thread-Ressourcen, die automatisch zugewiesen werden aus dem Threadpool gesendet.  
  
 Asynchrone Vorgänge, die nicht abgeschlossen wurden können abgebrochen werden, mithilfe der <xref:System.Net.WebClient.CancelAsync%2A> Methode.  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge (""), `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Daten zu bilden. Wenn die <xref:System.Net.WebClient.QueryString%2A> -Eigenschaft keine leere Zeichenfolge ist, wird dieser an angefügt `address`.  
  
 STANDARDMÄßIG verwendet diese Methode den STOR-Befehl zum Hochladen von einer FTP-Ressource. Für eine HTTP-Ressource wird die POST-Methode verwendet.  
  
> [!NOTE]
>  Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.  
  
- oder -  
Der <paramref name="fileName" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und <paramref name="address" /> gebildete URI ist ungültig.  
  
- oder -  
 <paramref name="fileName" /> ist <see langword="null" /> oder <see cref="F:System.String.Empty" />, enthält ungültige Zeichen oder der angegebene Pfad zur Datei ist nicht vorhanden.  
  
- oder -  
Fehler beim Öffnen des Streams.  
  
- oder -  
Der Server, der Host dieser Ressource ist, hat nicht geantwortet.  
  
- oder -  
Der <see langword="Content-type" />-Header beginnt mit <see langword="multipart" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadProgressChanged">
      <MemberSignature Language="C#" Value="public event System.Net.UploadProgressChangedEventHandler UploadProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.UploadProgressChangedEventHandler UploadProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.UploadProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UploadProgressChanged As UploadProgressChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::UploadProgressChangedEventHandler ^ UploadProgressChanged;" />
      <MemberSignature Language="F#" Value="member this.UploadProgressChanged : System.Net.UploadProgressChangedEventHandler " Usage="member this.UploadProgressChanged : System.Net.UploadProgressChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.UploadProgressChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn Daten teilweise oder vollständig erfolgreich über einen asynchronen Upload übertragen werden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis wird jedes Mal ausgelöst, wenn ein asynchroner Upload durchgeführt wird. Dieses Ereignis wird ausgelöst, wenn Uploads mit einer der folgenden Methoden gestartet werden.  
  
|Methode|Beschreibung |  
|------------|-----------------|  
|<xref:System.Net.WebClient.UploadDataAsync%2A>|Sendet eine <xref:System.Byte> Array, das die Ressource, ohne den aufrufenden Thread blockieren.|  
|<xref:System.Net.WebClient.UploadFileAsync%2A>|Sendet eine lokale Datei auf die Ressource, ohne den aufrufenden Thread blockieren.|  
|<xref:System.Net.WebClient.UploadValuesAsync%2A>|Sendet eine <xref:System.Collections.Specialized.NameValueCollection> zur Ressource, und gibt eine <xref:System.Byte> Array mit allen Antworten ohne Blockieren des aufrufenden Threads.|  
  
 Die <xref:System.Net.UploadProgressChangedEventHandler> ist der Delegat für dieses Ereignis. Die <xref:System.Net.UploadProgressChangedEventArgs> Klasse stellt den Ereignishandler mit Ereignisdaten bereit.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht das Festlegen von eines ereignishandlers für dieses Ereignis.  
  
 [!code-cpp[NCLWebClientAsync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#4)]
 [!code-csharp[NCLWebClientAsync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#4)]
 [!code-vb[NCLWebClientAsync#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#4)]  
  
 Das folgende Codebeispiel zeigt eine Implementierung eines Handlers für dieses Ereignis.  
  
 [!code-cpp[NCLWebClientAsync#42](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#42)]
 [!code-csharp[NCLWebClientAsync#42](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#42)]
 [!code-vb[NCLWebClientAsync#42](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#42)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadString">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Lädt die angegebene Zeichenfolge in die angegebene Ressource hoch.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadString">
      <MemberSignature Language="C#" Value="public string UploadString (string address, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string UploadString(string address, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadString(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadString (address As String, data As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ UploadString(System::String ^ address, System::String ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadString : string * string -&gt; string" Usage="webClient.UploadString (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Der URI der Ressource, die die Zeichenfolge empfangen soll. Für HTTP-Ressourcen muss dieser URI eine Ressource identifizieren, die eine mit der POST-Methode gesendete Anforderung annehmen kann, z. B. ein Skript oder eine ASP-Seite.</param>
        <param name="data">Die Uploadzeichenfolge.</param>
        <summary>Lädt die angegebene Zeichenfolge in die angegebene Ressource mithilfe der POST-Methode hoch.</summary>
        <returns>Ein <see cref="T:System.String" />, der die vom Server gesendete Antwort enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode vor dem Hochladen der Zeichenfolge, konvertiert sie in einer <xref:System.Byte> array mit der Codierung angegeben werden, der <xref:System.Net.WebClient.Encoding%2A> Eigenschaft. Diese Methode blockiert, während der Übertragung der Zeichenfolge. Verwenden Sie zum Senden einer Zeichenfolge und weiter ausgeführt, während des Wartens auf die Antwort des Servers, eines der <xref:System.Net.WebClient.UploadStringAsync%2A> Methoden.  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge (""), und `address` enthält keinen absoluten URI, `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Daten zu bilden. Wenn die <xref:System.Net.WebClient.QueryString%2A> -Eigenschaft keine leere Zeichenfolge ist, wird dieser an angefügt `address`.  
  
 Diese Methode verwendet den STOR-Befehl zum Hochladen von einer FTP-Ressource. Für eine HTTP-Ressource wird die POST-Methode verwendet.  
  
> [!NOTE]
>  Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht das Aufrufen dieser Methode.  
  
 [!code-cpp[NCLWebClientAsync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#1)]
 [!code-csharp[NCLWebClientAsync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#1)]
 [!code-vb[NCLWebClientAsync#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.  
  
- oder -  
Der <paramref name="data" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und <paramref name="address" /> gebildete URI ist ungültig.  
  
- oder -  
Der Server, der Host dieser Ressource ist, hat nicht geantwortet.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadString">
      <MemberSignature Language="C#" Value="public string UploadString (Uri address, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string UploadString(class System.Uri address, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadString(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadString (address As Uri, data As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ UploadString(Uri ^ address, System::String ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadString : Uri * string -&gt; string" Usage="webClient.UploadString (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Der URI der Ressource, die die Zeichenfolge empfangen soll. Für HTTP-Ressourcen muss dieser URI eine Ressource identifizieren, die eine mit der POST-Methode gesendete Anforderung annehmen kann, z. B. ein Skript oder eine ASP-Seite.</param>
        <param name="data">Die Uploadzeichenfolge.</param>
        <summary>Lädt die angegebene Zeichenfolge in die angegebene Ressource mithilfe der POST-Methode hoch.</summary>
        <returns>Ein <see cref="T:System.String" />, der die vom Server gesendete Antwort enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode vor dem Hochladen der Zeichenfolge, konvertiert sie in einer <xref:System.Byte> array mit der Codierung angegeben werden, der <xref:System.Net.WebClient.Encoding%2A> Eigenschaft. Diese Methode blockiert, während der Übertragung der Zeichenfolge. Verwenden Sie zum Senden einer Zeichenfolge und weiter ausgeführt, während des Wartens auf die Antwort des Servers, eines der <xref:System.Net.WebClient.UploadStringAsync%2A> Methoden.  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge (""), und `address` enthält keinen absoluten URI, `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Daten zu bilden. Wenn die <xref:System.Net.WebClient.QueryString%2A> -Eigenschaft keine leere Zeichenfolge ist, wird dieser an angefügt `address`.  
  
 Diese Methode verwendet den STOR-Befehl zum Hochladen von einer FTP-Ressource. Für eine HTTP-Ressource wird die POST-Methode verwendet.  
  
> [!NOTE]
>  Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.  
  
- oder -  
Der <paramref name="data" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und <paramref name="address" /> gebildete URI ist ungültig.  
  
- oder -  
Der Server, der Host dieser Ressource ist, hat nicht geantwortet.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadString">
      <MemberSignature Language="C#" Value="public string UploadString (string address, string method, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string UploadString(string address, string method, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadString(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadString (address As String, method As String, data As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ UploadString(System::String ^ address, System::String ^ method, System::String ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadString : string * string * string -&gt; string" Usage="webClient.UploadString (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Der URI der Ressource, die die Zeichenfolge empfangen soll. Dieser URI muss eine Ressource identifizieren, die eine mit der <paramref name="method" />-Methode gesendete Anforderung annehmen kann.</param>
        <param name="method">Die HTTP-Methode zum Senden der Zeichenfolge an die Ressource. Wenn NULL, lautet der Standard für http POST und für ftp STOR.</param>
        <param name="data">Die Uploadzeichenfolge.</param>
        <summary>Lädt die angegebene Zeichenfolge in die angegebene Ressource mithilfe der angegebenen Methode hoch.</summary>
        <returns>Ein <see cref="T:System.String" />, der die vom Server gesendete Antwort enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode vor dem Hochladen der Zeichenfolge, konvertiert sie in einer <xref:System.Byte> array mit der Codierung angegeben werden, der <xref:System.Net.WebClient.Encoding%2A> Eigenschaft. Diese Methode blockiert, während der Übertragung der Zeichenfolge. Verwenden Sie zum Senden einer Zeichenfolge und weiter ausgeführt, während des Wartens auf die Antwort des Servers, eines der <xref:System.Net.WebClient.UploadStringAsync%2A> Methoden.  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge ("") und `address` enthält keinen absoluten URI, `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Daten zu bilden. Wenn die <xref:System.Net.WebClient.QueryString%2A> -Eigenschaft keine leere Zeichenfolge ist, wird dieser an angefügt `address`.  
  
> [!NOTE]
>  Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht das Aufrufen dieser Methode.  
  
 [!code-cpp[NCLWebClientAsync#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#2)]
 [!code-csharp[NCLWebClientAsync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#2)]
 [!code-vb[NCLWebClientAsync#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.  
  
- oder -  
Der <paramref name="data" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und <paramref name="address" /> gebildete URI ist ungültig.  
  
- oder -  
Der Server, der Host dieser Ressource ist, hat nicht geantwortet.  
  
- oder -  
 <paramref name="method" /> kann nicht zum Senden von Inhalten verwendet werden.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadString">
      <MemberSignature Language="C#" Value="public string UploadString (Uri address, string method, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string UploadString(class System.Uri address, string method, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadString(System.Uri,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadString (address As Uri, method As String, data As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ UploadString(Uri ^ address, System::String ^ method, System::String ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadString : Uri * string * string -&gt; string" Usage="webClient.UploadString (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Der URI der Ressource, die die Zeichenfolge empfangen soll. Dieser URI muss eine Ressource identifizieren, die eine mit der <paramref name="method" />-Methode gesendete Anforderung annehmen kann.</param>
        <param name="method">Die HTTP-Methode zum Senden der Zeichenfolge an die Ressource. Wenn NULL, lautet der Standard für http POST und für ftp STOR.</param>
        <param name="data">Die Uploadzeichenfolge.</param>
        <summary>Lädt die angegebene Zeichenfolge in die angegebene Ressource mithilfe der angegebenen Methode hoch.</summary>
        <returns>Ein <see cref="T:System.String" />, der die vom Server gesendete Antwort enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode vor dem Hochladen der Zeichenfolge, konvertiert sie in einer <xref:System.Byte> array mit der Codierung angegeben werden, der <xref:System.Net.WebClient.Encoding%2A> Eigenschaft. Diese Methode blockiert, während der Übertragung der Zeichenfolge. Verwenden Sie zum Senden einer Zeichenfolge und weiter ausgeführt, während des Wartens auf die Antwort des Servers, eines der <xref:System.Net.WebClient.UploadStringAsync%2A> Methoden.  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge ("") und `address` enthält keinen absoluten URI, `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Daten zu bilden. Wenn die <xref:System.Net.WebClient.QueryString%2A> -Eigenschaft keine leere Zeichenfolge ist, wird dieser an angefügt `address`.  
  
> [!NOTE]
>  Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.  
  
- oder -  
Der <paramref name="data" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und <paramref name="address" /> gebildete URI ist ungültig.  
  
- oder -  
Der Server, der Host dieser Ressource ist, hat nicht geantwortet.  
  
- oder -  
 <paramref name="method" /> kann nicht zum Senden von Inhalten verwendet werden.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadStringAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Lädt die angegebene Zeichenfolge in die angegebene Ressource hoch. Durch diese Methoden wird der aufrufende Thread nicht blockiert.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadStringAsync">
      <MemberSignature Language="C#" Value="public void UploadStringAsync (Uri address, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadStringAsync(class System.Uri address, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadStringAsync(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadStringAsync (address As Uri, data As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadStringAsync(Uri ^ address, System::String ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadStringAsync : Uri * string -&gt; unit" Usage="webClient.UploadStringAsync (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Der URI der Ressource, die die Zeichenfolge empfangen soll. Für HTTP-Ressourcen muss dieser URI eine Ressource identifizieren, die eine mit der POST-Methode gesendete Anforderung annehmen kann, z. B. ein Skript oder eine ASP-Seite.</param>
        <param name="data">Die Uploadzeichenfolge.</param>
        <summary>Lädt die angegebene Zeichenfolge in die angegebene Ressource hoch. Durch diese Methode wird der aufrufende Thread nicht blockiert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode sendet eine Zeichenfolge in eine Ressource an. Die Zeichenfolge wird asynchron mit Thread-Ressourcen, die automatisch zugewiesen werden aus dem Threadpool gesendet. Diese Methode vor dem Hochladen der Zeichenfolge, konvertiert sie in einer <xref:System.Byte> array mit der Codierung angegeben werden, der <xref:System.Net.WebClient.Encoding%2A> Eigenschaft. Um benachrichtigt zu werden, bei der Zeichenfolge Upload abgeschlossen ist, können Sie einen Ereignishandler hinzufügen der <xref:System.Net.WebClient.UploadStringCompleted> Ereignis.  
  
 Diese Methode wird den aufrufenden Thread nicht blockiert, während die Zeichenfolge gesendet wird. Um eine Zeichenfolge und ein Block beim Warten auf die Antwort des Servers zu senden, gehen die <xref:System.Net.WebClient.UploadString%2A> Methoden.  
  
 Asynchrone Vorgänge, die nicht abgeschlossen wurden können abgebrochen werden, mithilfe der <xref:System.Net.WebClient.CancelAsync%2A> Methode.  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge ("") und `address` enthält keinen absoluten URI, `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Daten zu bilden. Wenn die <xref:System.Net.WebClient.QueryString%2A> -Eigenschaft keine leere Zeichenfolge ist, wird dieser an angefügt `address`.  
  
 Diese Methode verwendet den STOR-Befehl zum Hochladen von einer FTP-Ressource. Für eine HTTP-Ressource wird die POST-Methode verwendet.  
  
> [!NOTE]
>  Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.  
  
- oder -  
Der <paramref name="data" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und <paramref name="address" /> gebildete URI ist ungültig.  
  
- oder -  
Der Server, der Host dieser Ressource ist, hat nicht geantwortet.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadStringAsync">
      <MemberSignature Language="C#" Value="public void UploadStringAsync (Uri address, string method, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadStringAsync(class System.Uri address, string method, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadStringAsync(System.Uri,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadStringAsync (address As Uri, method As String, data As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadStringAsync(Uri ^ address, System::String ^ method, System::String ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadStringAsync : Uri * string * string -&gt; unit" Usage="webClient.UploadStringAsync (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Der URI der Ressource, die die Zeichenfolge empfangen soll. Für HTTP-Ressourcen muss dieser URI eine Ressource identifizieren, die eine mit der POST-Methode gesendete Anforderung annehmen kann, z. B. ein Skript oder eine ASP-Seite.</param>
        <param name="method">Die HTTP-Methode zum Senden der Datei an die Ressource. Wenn NULL, lautet der Standard für http POST und für ftp STOR.</param>
        <param name="data">Die Uploadzeichenfolge.</param>
        <summary>Lädt die angegebene Zeichenfolge in die angegebene Ressource hoch. Durch diese Methode wird der aufrufende Thread nicht blockiert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode sendet eine Zeichenfolge in eine Ressource an. Die Zeichenfolge wird asynchron mit Thread-Ressourcen, die automatisch zugewiesen werden aus dem Threadpool gesendet. Diese Methode vor dem Hochladen der Zeichenfolge, konvertiert sie in einer <xref:System.Byte> array mit der Codierung angegeben werden, der <xref:System.Net.WebClient.Encoding%2A> Eigenschaft. Um benachrichtigt zu werden, bei der Zeichenfolge Upload abgeschlossen ist, können Sie einen Ereignishandler hinzufügen der <xref:System.Net.WebClient.UploadStringCompleted> Ereignis.  
  
 Diese Methode wird den aufrufenden Thread nicht blockiert, während die Zeichenfolge gesendet wird. Um eine Zeichenfolge und ein Block beim Warten auf die Antwort des Servers zu senden, gehen die <xref:System.Net.WebClient.UploadString%2A> Methoden.  
  
 Asynchrone Vorgänge, die nicht abgeschlossen wurden können abgebrochen werden, mithilfe der <xref:System.Net.WebClient.CancelAsync%2A> Methode.  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge ("") und `address` enthält keinen absoluten URI, `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Daten zu bilden. Wenn die <xref:System.Net.WebClient.QueryString%2A> -Eigenschaft keine leere Zeichenfolge ist, wird dieser an angefügt `address`.  
  
> [!NOTE]
>  Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.  
  
- oder -  
Der <paramref name="data" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und <paramref name="address" /> gebildete URI ist ungültig.  
  
- oder -  
 <paramref name="method" /> kann nicht zum Senden von Inhalten verwendet werden.  
  
- oder -  
Der Server, der Host dieser Ressource ist, hat nicht geantwortet.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadStringAsync">
      <MemberSignature Language="C#" Value="public void UploadStringAsync (Uri address, string method, string data, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadStringAsync(class System.Uri address, string method, string data, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadStringAsync(System.Uri,System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadStringAsync (address As Uri, method As String, data As String, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadStringAsync(Uri ^ address, System::String ^ method, System::String ^ data, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.UploadStringAsync : Uri * string * string * obj -&gt; unit" Usage="webClient.UploadStringAsync (address, method, data, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.String" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">Der URI der Ressource, die die Zeichenfolge empfangen soll. Für HTTP-Ressourcen muss dieser URI eine Ressource identifizieren, die eine mit der POST-Methode gesendete Anforderung annehmen kann, z. B. ein Skript oder eine ASP-Seite.</param>
        <param name="method">Die HTTP-Methode zum Senden der Datei an die Ressource. Wenn NULL, lautet der Standard für http POST und für ftp STOR.</param>
        <param name="data">Die Uploadzeichenfolge.</param>
        <param name="userToken">Ein benutzerdefiniertes Objekt, das bei Abschluss des asynchronen Vorgangs an die aufgerufene Methode übergeben wird.</param>
        <summary>Lädt die angegebene Zeichenfolge in die angegebene Ressource hoch. Durch diese Methode wird der aufrufende Thread nicht blockiert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode sendet eine Zeichenfolge in eine Ressource an. Die Zeichenfolge wird asynchron mit Thread-Ressourcen, die automatisch zugewiesen werden aus dem Threadpool gesendet. Diese Methode vor dem Hochladen der Zeichenfolge, konvertiert sie in einer <xref:System.Byte> array mit der Codierung angegeben werden, der <xref:System.Net.WebClient.Encoding%2A> Eigenschaft. Um benachrichtigt zu werden, bei der Zeichenfolge Upload abgeschlossen ist, können Sie einen Ereignishandler hinzufügen der <xref:System.Net.WebClient.UploadStringCompleted> Ereignis.  
  
 Diese Methode wird den aufrufenden Thread nicht blockiert, während die Zeichenfolge gesendet wird. Um eine Zeichenfolge und ein Block beim Warten auf die Antwort des Servers zu senden, gehen die <xref:System.Net.WebClient.UploadString%2A> Methoden.  
  
 Asynchrone Vorgänge, die nicht abgeschlossen wurden können abgebrochen werden, mithilfe der <xref:System.Net.WebClient.CancelAsync%2A> Methode.  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge ("") und `address` enthält keinen absoluten URI, `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Daten zu bilden. Wenn die <xref:System.Net.WebClient.QueryString%2A> -Eigenschaft keine leere Zeichenfolge ist, wird dieser an angefügt `address`.  
  
> [!NOTE]
>  Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.  
  
- oder -  
Der <paramref name="data" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und <paramref name="address" /> gebildete URI ist ungültig.  
  
- oder -  
 <paramref name="method" /> kann nicht zum Senden von Inhalten verwendet werden.  
  
- oder -  
Der Server, der Host dieser Ressource ist, hat nicht geantwortet.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadStringCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.UploadStringCompletedEventHandler UploadStringCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.UploadStringCompletedEventHandler UploadStringCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.UploadStringCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UploadStringCompleted As UploadStringCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::UploadStringCompletedEventHandler ^ UploadStringCompleted;" />
      <MemberSignature Language="F#" Value="member this.UploadStringCompleted : System.Net.UploadStringCompletedEventHandler " Usage="member this.UploadStringCompleted : System.Net.UploadStringCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.UploadStringCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn ein asynchroner Zeichenfolgenupload abgeschlossen wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis wird jedes Mal ausgelöst, wenn ein asynchroner Zeichenfolgenupload abgeschlossen wird. Asynchrone Zeichenfolge hochgeladen werden gestartet, durch den Aufruf der <xref:System.Net.WebClient.UploadStringAsync%2A> Methoden.  
  
 Die <xref:System.Net.UploadStringCompletedEventHandler> ist der Delegat für dieses Ereignis. Die <xref:System.Net.UploadStringCompletedEventArgs> Klasse stellt den Ereignishandler mit Ereignisdaten bereit.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht das Festlegen von eines ereignishandlers für dieses Ereignis.  
  
 [!code-cpp[NCLWebClientAsync#38](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#38)]
 [!code-csharp[NCLWebClientAsync#38](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#38)]
 [!code-vb[NCLWebClientAsync#38](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#38)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadStringTaskAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Lädt die angegebene Zeichenfolge der angegebenen Ressource als asynchroner Vorgang mithilfe eines Taskobjekts hoch. Durch diese Methoden wird der aufrufende Thread nicht blockiert.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadStringTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; UploadStringTaskAsync (string address, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;string&gt; UploadStringTaskAsync(string address, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadStringTaskAsync(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadStringTaskAsync (address As String, data As String) As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::String ^&gt; ^ UploadStringTaskAsync(System::String ^ address, System::String ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadStringTaskAsync : string * string -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="webClient.UploadStringTaskAsync (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Der URI der Ressource, die die Zeichenfolge empfangen soll. Für HTTP-Ressourcen muss dieser URI eine Ressource identifizieren, die eine mit der POST-Methode gesendete Anforderung annehmen kann, z. B. ein Skript oder eine ASP-Seite.</param>
        <param name="data">Die Uploadzeichenfolge.</param>
        <summary>Lädt die angegebene Zeichenfolge der angegebenen Ressource als asynchroner Vorgang mithilfe eines Taskobjekts hoch.</summary>
        <returns>Gibt <see cref="T:System.Threading.Tasks.Task`1" />zurück.  
  
Das Aufgabenobjekt, das den asynchronen Vorgang darstellt. Die <see cref="P:System.Threading.Tasks.Task`1.Result" />-Eigenschaft im Task-Objekt gibt ein <see cref="T:System.String" /> zurück, das die Antwort enthält, die vom Server gesendet wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Vorgang wird nicht blockiert. Das zurückgegebene <xref:System.Threading.Tasks.Task%601> Objekt wird abgeschlossen, nachdem auf die Ressource die Zeichenfolge hochgeladen wurde. Die Zeichenfolge wird asynchron mit Thread-Ressourcen, die automatisch zugewiesen werden aus dem Threadpool gesendet.  
  
 Asynchrone Vorgänge, die nicht abgeschlossen wurden können abgebrochen werden, mithilfe der <xref:System.Net.WebClient.CancelAsync%2A> Methode.  
  
 Diese Methode vor dem Hochladen der Zeichenfolge, konvertiert sie in einer <xref:System.Byte> array mit der Codierung angegeben werden, der <xref:System.Net.WebClient.Encoding%2A> Eigenschaft. Diese Methode blockiert, während der Übertragung der Zeichenfolge.  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge ("") und `address` enthält keinen absoluten URI, `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Daten zu bilden. Wenn die <xref:System.Net.WebClient.QueryString%2A> -Eigenschaft keine leere Zeichenfolge ist, wird dieser an angefügt `address`.  
  
> [!NOTE]
>  Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.  
  
- oder -  
Der <paramref name="data" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und <paramref name="address" /> gebildete URI ist ungültig.  
  
- oder -  
Der Server, der Host dieser Ressource ist, hat nicht geantwortet.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadStringTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; UploadStringTaskAsync (Uri address, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;string&gt; UploadStringTaskAsync(class System.Uri address, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadStringTaskAsync(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadStringTaskAsync (address As Uri, data As String) As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::String ^&gt; ^ UploadStringTaskAsync(Uri ^ address, System::String ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadStringTaskAsync : Uri * string -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="webClient.UploadStringTaskAsync (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Der URI der Ressource, die die Zeichenfolge empfangen soll. Für HTTP-Ressourcen muss dieser URI eine Ressource identifizieren, die eine mit der POST-Methode gesendete Anforderung annehmen kann, z. B. ein Skript oder eine ASP-Seite.</param>
        <param name="data">Die Uploadzeichenfolge.</param>
        <summary>Lädt die angegebene Zeichenfolge der angegebenen Ressource als asynchroner Vorgang mithilfe eines Taskobjekts hoch.</summary>
        <returns>Gibt <see cref="T:System.Threading.Tasks.Task`1" />zurück.  
  
Das Aufgabenobjekt, das den asynchronen Vorgang darstellt. Die <see cref="P:System.Threading.Tasks.Task`1.Result" />-Eigenschaft im Task-Objekt gibt ein <see cref="T:System.String" /> zurück, das die Antwort enthält, die vom Server gesendet wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Vorgang wird nicht blockiert. Das zurückgegebene <xref:System.Threading.Tasks.Task%601> Objekt wird abgeschlossen, nachdem auf die Ressource die Zeichenfolge hochgeladen wurde. Die Zeichenfolge wird asynchron mit Thread-Ressourcen, die automatisch zugewiesen werden aus dem Threadpool gesendet.  
  
 Asynchrone Vorgänge, die nicht abgeschlossen wurden können abgebrochen werden, mithilfe der <xref:System.Net.WebClient.CancelAsync%2A> Methode.  
  
 Diese Methode vor dem Hochladen der Zeichenfolge, konvertiert sie in einer <xref:System.Byte> array mit der Codierung angegeben werden, der <xref:System.Net.WebClient.Encoding%2A> Eigenschaft. Diese Methode blockiert, während der Übertragung der Zeichenfolge.  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge ("") und `address` enthält keinen absoluten URI, `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Daten zu bilden. Wenn die <xref:System.Net.WebClient.QueryString%2A> -Eigenschaft keine leere Zeichenfolge ist, wird dieser an angefügt `address`.  
  
> [!NOTE]
>  Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.  
  
- oder -  
Der <paramref name="data" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und <paramref name="address" /> gebildete URI ist ungültig.  
  
- oder -  
Der Server, der Host dieser Ressource ist, hat nicht geantwortet.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadStringTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; UploadStringTaskAsync (string address, string method, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;string&gt; UploadStringTaskAsync(string address, string method, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadStringTaskAsync(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadStringTaskAsync (address As String, method As String, data As String) As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::String ^&gt; ^ UploadStringTaskAsync(System::String ^ address, System::String ^ method, System::String ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadStringTaskAsync : string * string * string -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="webClient.UploadStringTaskAsync (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Der URI der Ressource, die die Zeichenfolge empfangen soll. Für HTTP-Ressourcen muss dieser URI eine Ressource identifizieren, die eine mit der POST-Methode gesendete Anforderung annehmen kann, z. B. ein Skript oder eine ASP-Seite.</param>
        <param name="method">Die HTTP-Methode zum Senden der Datei an die Ressource. Wenn NULL, lautet der Standard für http POST und für ftp STOR.</param>
        <param name="data">Die Uploadzeichenfolge.</param>
        <summary>Lädt die angegebene Zeichenfolge der angegebenen Ressource als asynchroner Vorgang mithilfe eines Taskobjekts hoch.</summary>
        <returns>Gibt <see cref="T:System.Threading.Tasks.Task`1" />zurück.  
  
Das Aufgabenobjekt, das den asynchronen Vorgang darstellt. Die <see cref="P:System.Threading.Tasks.Task`1.Result" />-Eigenschaft im Task-Objekt gibt ein <see cref="T:System.String" /> zurück, das die Antwort enthält, die vom Server gesendet wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Vorgang wird nicht blockiert. Das zurückgegebene <xref:System.Threading.Tasks.Task%601> Objekt wird abgeschlossen, nachdem auf die Ressource die Zeichenfolge hochgeladen wurde. Die Zeichenfolge wird asynchron mit Thread-Ressourcen, die automatisch zugewiesen werden aus dem Threadpool gesendet.  
  
 Asynchrone Vorgänge, die nicht abgeschlossen wurden können abgebrochen werden, mithilfe der <xref:System.Net.WebClient.CancelAsync%2A> Methode.  
  
 Diese Methode vor dem Hochladen der Zeichenfolge, konvertiert sie in einer <xref:System.Byte> array mit der Codierung angegeben werden, der <xref:System.Net.WebClient.Encoding%2A> Eigenschaft. Diese Methode blockiert, während der Übertragung der Zeichenfolge.  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge ("") und `address` enthält keinen absoluten URI, `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Daten zu bilden. Wenn die <xref:System.Net.WebClient.QueryString%2A> -Eigenschaft keine leere Zeichenfolge ist, wird dieser an angefügt `address`.  
  
> [!NOTE]
>  Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.  
  
- oder -  
Der <paramref name="data" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und <paramref name="address" /> gebildete URI ist ungültig.  
  
- oder -  
 <paramref name="method" /> kann nicht zum Senden von Inhalten verwendet werden.  
  
- oder -  
Der Server, der Host dieser Ressource ist, hat nicht geantwortet.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadStringTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; UploadStringTaskAsync (Uri address, string method, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;string&gt; UploadStringTaskAsync(class System.Uri address, string method, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadStringTaskAsync(System.Uri,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadStringTaskAsync (address As Uri, method As String, data As String) As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::String ^&gt; ^ UploadStringTaskAsync(Uri ^ address, System::String ^ method, System::String ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadStringTaskAsync : Uri * string * string -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="webClient.UploadStringTaskAsync (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Der URI der Ressource, die die Zeichenfolge empfangen soll. Für HTTP-Ressourcen muss dieser URI eine Ressource identifizieren, die eine mit der POST-Methode gesendete Anforderung annehmen kann, z. B. ein Skript oder eine ASP-Seite.</param>
        <param name="method">Die HTTP-Methode zum Senden der Datei an die Ressource. Wenn NULL, lautet der Standard für http POST und für ftp STOR.</param>
        <param name="data">Die Uploadzeichenfolge.</param>
        <summary>Lädt die angegebene Zeichenfolge der angegebenen Ressource als asynchroner Vorgang mithilfe eines Taskobjekts hoch.</summary>
        <returns>Gibt <see cref="T:System.Threading.Tasks.Task`1" />zurück.  
  
Das Aufgabenobjekt, das den asynchronen Vorgang darstellt. Die <see cref="P:System.Threading.Tasks.Task`1.Result" />-Eigenschaft im Task-Objekt gibt ein <see cref="T:System.String" /> zurück, das die Antwort enthält, die vom Server gesendet wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Vorgang wird nicht blockiert. Das zurückgegebene <xref:System.Threading.Tasks.Task%601> Objekt wird abgeschlossen, nachdem auf die Ressource die Zeichenfolge hochgeladen wurde. Die Zeichenfolge wird asynchron mit Thread-Ressourcen, die automatisch zugewiesen werden aus dem Threadpool gesendet.  
  
 Asynchrone Vorgänge, die nicht abgeschlossen wurden können abgebrochen werden, mithilfe der <xref:System.Net.WebClient.CancelAsync%2A> Methode.  
  
 Diese Methode vor dem Hochladen der Zeichenfolge, konvertiert sie in einer <xref:System.Byte> array mit der Codierung angegeben werden, der <xref:System.Net.WebClient.Encoding%2A> Eigenschaft. Diese Methode blockiert, während der Übertragung der Zeichenfolge.  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge ("") und `address` enthält keinen absoluten URI, `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Daten zu bilden. Wenn die <xref:System.Net.WebClient.QueryString%2A> -Eigenschaft keine leere Zeichenfolge ist, wird dieser an angefügt `address`.  
  
> [!NOTE]
>  Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.  
  
- oder -  
Der <paramref name="data" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und <paramref name="address" /> gebildete URI ist ungültig.  
  
- oder -  
 <paramref name="method" /> kann nicht zum Senden von Inhalten verwendet werden.  
  
- oder -  
Der Server, der Host dieser Ressource ist, hat nicht geantwortet.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadValues">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Lädt eine Name-Wert-Auflistung in eine Ressource mit dem angegebenen URI hoch.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadValues">
      <MemberSignature Language="C#" Value="public byte[] UploadValues (string address, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadValues(string address, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValues(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadValues (address As String, data As NameValueCollection) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadValues(System::String ^ address, System::Collections::Specialized::NameValueCollection ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadValues : string * System.Collections.Specialized.NameValueCollection -&gt; byte[]" Usage="webClient.UploadValues (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="address">Der URI der Ressource, die die Auflistung empfangen soll.</param>
        <param name="data">Die an die Ressource zu sendende <see cref="T:System.Collections.Specialized.NameValueCollection" />.</param>
        <summary>Lädt die angegebene Name-Wert-Auflistung in die durch den angegebenen URI identifizierte Ressource hoch.</summary>
        <returns>Ein <see cref="T:System.Byte" />-Array mit dem Textkörper der Ressourcenantwort.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Net.WebClient.UploadValues%2A> Methode sendet eine <xref:System.Collections.Specialized.NameValueCollection> auf einem Server. Diese Methode blockiert, während des Hochladens der das. Wenn Sie eine Ressource herunterladen und beim Warten auf die Serverantwort die Ausführung fortsetzen möchten, können Sie eine der <xref:System.Net.WebClient.UploadValuesAsync%2A>-Methoden verwenden.  
  
 Wenn die zugrunde liegende Anforderung vom Server nicht verstanden wird, bestimmen die zugrunde liegende Protokoll Abläufe. In der Regel eine <xref:System.Net.WebException> ausgelöst und die <xref:System.Net.WebException.Status%2A> Eigenschaft festgelegt wird, um den Fehler anzugeben.  
  
 Wenn der Content-Type-Header ist `null`, <xref:System.Net.WebClient.UploadValues%2A> Methode wird auf "Application/X-www-form-urlencoded".  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge ("") und `address` enthält keinen absoluten URI, `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Daten zu bilden. Wenn die <xref:System.Net.WebClient.QueryString%2A> -Eigenschaft keine leere Zeichenfolge ist, wird dieser an angefügt `address`.  
  
 Diese Methode verwendet den STOR-Befehl zum Hochladen von einer FTP-Ressource. Für eine HTTP-Ressource wird die POST-Methode verwendet.  
  
> [!NOTE]
>  Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird sammelt Informationen vom Benutzer (Name, Alter und Adresse) und die Werte mit dem Server <xref:System.Net.WebClient.UploadValues%2A>. Antwort vom Server wird in der Konsole angezeigt.  
  
 [!code-cpp[WebClient_UploadValues#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_UploadValues/CPP/webclient_uploadvalues.cpp#1)]
 [!code-csharp[WebClient_UploadValues#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_UploadValues/CS/webclient_uploadvalues.cs#1)]
 [!code-vb[WebClient_UploadValues#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_UploadValues/VB/webclient_uploadvalues.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.  
  
- oder -  
Der <paramref name="data" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und <paramref name="address" /> gebildete URI ist ungültig.  
  
- oder -  
 <paramref name="data" /> ist <see langword="null" />.  
  
- oder -  
Der Server, der Host dieser Ressource ist, hat nicht geantwortet.  
  
- oder -  
Fehler beim Öffnen des Streams.  
  
- oder -  
Der <see langword="Content-type" />-Header ist nicht <see langword="null" /> oder "application/x-www-form-urlencoded".</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadValues">
      <MemberSignature Language="C#" Value="public byte[] UploadValues (Uri address, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadValues(class System.Uri address, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValues(System.Uri,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadValues (address As Uri, data As NameValueCollection) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadValues(Uri ^ address, System::Collections::Specialized::NameValueCollection ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadValues : Uri * System.Collections.Specialized.NameValueCollection -&gt; byte[]" Usage="webClient.UploadValues (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="address">Der URI der Ressource, die die Auflistung empfangen soll.</param>
        <param name="data">Die an die Ressource zu sendende <see cref="T:System.Collections.Specialized.NameValueCollection" />.</param>
        <summary>Lädt die angegebene Name-Wert-Auflistung in die durch den angegebenen URI identifizierte Ressource hoch.</summary>
        <returns>Ein <see cref="T:System.Byte" />-Array mit dem Textkörper der Ressourcenantwort.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Net.WebClient.UploadValues%2A> Methode sendet eine <xref:System.Collections.Specialized.NameValueCollection> auf einem Server. Diese Methode blockiert, während des Hochladens der das. Wenn Sie eine Ressource herunterladen und beim Warten auf die Serverantwort die Ausführung fortsetzen möchten, können Sie eine der <xref:System.Net.WebClient.UploadValuesAsync%2A>-Methoden verwenden.  
  
 Wenn die zugrunde liegende Anforderung vom Server nicht verstanden wird, bestimmen die zugrunde liegende Protokoll Abläufe. In der Regel eine <xref:System.Net.WebException> ausgelöst und die <xref:System.Net.WebException.Status%2A> Eigenschaft festgelegt wird, um den Fehler anzugeben.  
  
 Wenn der Content-Type-Header ist `null`, <xref:System.Net.WebClient.UploadValues%2A> Methode wird auf "Application/X-www-form-urlencoded".  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge ("") und `address` enthält keinen absoluten URI, `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Daten zu bilden. Wenn die <xref:System.Net.WebClient.QueryString%2A> -Eigenschaft keine leere Zeichenfolge ist, wird dieser an angefügt `address`.  
  
 Diese Methode verwendet den STOR-Befehl zum Hochladen von einer FTP-Ressource. Für eine HTTP-Ressource wird die POST-Methode verwendet.  
  
> [!NOTE]
>  Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.  
  
- oder -  
Der <paramref name="data" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und <paramref name="address" /> gebildete URI ist ungültig.  
  
- oder -  
 <paramref name="data" /> ist <see langword="null" />.  
  
- oder -  
Der Server, der Host dieser Ressource ist, hat nicht geantwortet.  
  
- oder -  
Fehler beim Öffnen des Streams.  
  
- oder -  
Der <see langword="Content-type" />-Header ist nicht <see langword="null" /> oder "application/x-www-form-urlencoded".</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadValues">
      <MemberSignature Language="C#" Value="public byte[] UploadValues (string address, string method, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadValues(string address, string method, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValues(System.String,System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadValues (address As String, method As String, data As NameValueCollection) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadValues(System::String ^ address, System::String ^ method, System::Collections::Specialized::NameValueCollection ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadValues : string * string * System.Collections.Specialized.NameValueCollection -&gt; byte[]" Usage="webClient.UploadValues (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="address">Der URI der Ressource, die die Auflistung empfangen soll.</param>
        <param name="method">Die HTTP-Methode zum Senden der Datei an die Ressource. Wenn NULL, lautet der Standard für http POST und für ftp STOR.</param>
        <param name="data">Die an die Ressource zu sendende <see cref="T:System.Collections.Specialized.NameValueCollection" />.</param>
        <summary>Lädt die angegebene Name-Wert-Auflistung mit der angegebenen Methode in die durch den angegebenen URI identifizierte Ressource hoch.</summary>
        <returns>Ein <see cref="T:System.Byte" />-Array mit dem Textkörper der Ressourcenantwort.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Net.WebClient.UploadValues%2A> Methode sendet eine <xref:System.Collections.Specialized.NameValueCollection> auf eine Ressource, die mithilfe der Methode der `method` Parameter und Antwort vom Server zurückgegeben. Diese Methode blockiert, während des Hochladens der das. Wenn Sie eine Ressource herunterladen und beim Warten auf die Serverantwort die Ausführung fortsetzen möchten, können Sie eine der <xref:System.Net.WebClient.UploadValuesAsync%2A>-Methoden verwenden.  
  
 Wenn die `Content-type` Header `null`, <xref:System.Net.WebClient.UploadValues%2A> Methode wird auf `application/x-www-form-urlencoded`.  
  
 Wenn die `method` Parameter gibt an, ein Verb an, die vom Server nicht verstanden wird, bestimmen die zugrunde liegenden Abläufe. In der Regel eine <xref:System.Net.WebException> ausgelöst und die <xref:System.Net.WebException.Status%2A> Eigenschaft festgelegt wird, um den Fehler anzugeben.  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge ("") und `address` enthält keinen absoluten URI, `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Daten zu bilden. Wenn die <xref:System.Net.WebClient.QueryString%2A> -Eigenschaft keine leere Zeichenfolge ist, wird dieser an angefügt `address`.  
  
> [!NOTE]
>  Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird sammelt Informationen vom Benutzer (Name, Alter und Adresse) und die Werte mit dem Server <xref:System.Net.WebClient.UploadValues%2A>. Antwort vom Server wird in der Konsole angezeigt.  
  
 [!code-cpp[WebClient_UploadValues2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_UploadValues2/CPP/webclient_uploadvalues2.cpp#1)]
 [!code-csharp[WebClient_UploadValues2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_UploadValues2/CS/webclient_uploadvalues2.cs#1)]
 [!code-vb[WebClient_UploadValues2#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_UploadValues2/VB/webclient_uploadvalues2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.  
  
- oder -  
Der <paramref name="data" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und <paramref name="address" /> gebildete URI ist ungültig.  
  
- oder -  
 <paramref name="data" /> ist <see langword="null" />.  
  
- oder -  
Fehler beim Öffnen des Streams.  
  
- oder -  
Der Server, der Host dieser Ressource ist, hat nicht geantwortet.  
  
- oder -  
Der Wert des <see langword="Content-type" />-Headers ist weder <see langword="null" /> noch <see langword="application/x-www-form-urlencoded" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadValues">
      <MemberSignature Language="C#" Value="public byte[] UploadValues (Uri address, string method, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadValues(class System.Uri address, string method, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValues(System.Uri,System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadValues (address As Uri, method As String, data As NameValueCollection) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadValues(Uri ^ address, System::String ^ method, System::Collections::Specialized::NameValueCollection ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadValues : Uri * string * System.Collections.Specialized.NameValueCollection -&gt; byte[]" Usage="webClient.UploadValues (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="address">Der URI der Ressource, die die Auflistung empfangen soll.</param>
        <param name="method">Die HTTP-Methode zum Senden der Datei an die Ressource. Wenn NULL, lautet der Standard für http POST und für ftp STOR.</param>
        <param name="data">Die an die Ressource zu sendende <see cref="T:System.Collections.Specialized.NameValueCollection" />.</param>
        <summary>Lädt die angegebene Name-Wert-Auflistung mit der angegebenen Methode in die durch den angegebenen URI identifizierte Ressource hoch.</summary>
        <returns>Ein <see cref="T:System.Byte" />-Array mit dem Textkörper der Ressourcenantwort.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Net.WebClient.UploadValues%2A> Methode sendet eine <xref:System.Collections.Specialized.NameValueCollection> auf eine Ressource, die mithilfe der Methode der `method` Parameter und Antwort vom Server zurückgegeben. Diese Methode blockiert, während des Hochladens der das. Wenn Sie eine Ressource herunterladen und beim Warten auf die Serverantwort die Ausführung fortsetzen möchten, können Sie eine der <xref:System.Net.WebClient.UploadValuesAsync%2A>-Methoden verwenden.  
  
 Wenn die `Content-type` Header `null`, <xref:System.Net.WebClient.UploadValues%2A> Methode wird auf `application/x-www-form-urlencoded`.  
  
 Wenn die `method` Parameter gibt an, ein Verb an, die vom Server nicht verstanden wird, bestimmen die zugrunde liegenden Abläufe. In der Regel eine <xref:System.Net.WebException> ausgelöst und die <xref:System.Net.WebException.Status%2A> Eigenschaft festgelegt wird, um den Fehler anzugeben.  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge ("") und `address` enthält keinen absoluten URI, `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Daten zu bilden. Wenn die <xref:System.Net.WebClient.QueryString%2A> -Eigenschaft keine leere Zeichenfolge ist, wird dieser an angefügt `address`.  
  
> [!NOTE]
>  Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.  
  
- oder -  
Der <paramref name="data" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und <paramref name="address" /> gebildete URI ist ungültig.  
  
- oder -  
 <paramref name="data" /> ist <see langword="null" />.  
  
- oder -  
Fehler beim Öffnen des Streams.  
  
- oder -  
Der Server, der Host dieser Ressource ist, hat nicht geantwortet.  
  
- oder -  
Der Wert des <see langword="Content-type" />-Headers ist weder <see langword="null" /> noch <see langword="application/x-www-form-urlencoded" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadValuesAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Lädt die angegebene Name-Wert-Auflistung in die durch den angegebenen URI identifizierte Ressource hoch. Durch diese Methoden wird der aufrufende Thread nicht blockiert.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadValuesAsync">
      <MemberSignature Language="C#" Value="public void UploadValuesAsync (Uri address, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadValuesAsync(class System.Uri address, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValuesAsync(System.Uri,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadValuesAsync (address As Uri, data As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadValuesAsync(Uri ^ address, System::Collections::Specialized::NameValueCollection ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadValuesAsync : Uri * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="webClient.UploadValuesAsync (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="address">Der URI der Ressource, die die Auflistung empfangen soll. Dieser URI muss eine Ressource identifizieren, die eine mit der Standardmethode gesendete Anforderung annehmen kann.</param>
        <param name="data">Die an die Ressource zu sendende <see cref="T:System.Collections.Specialized.NameValueCollection" />.</param>
        <summary>Lädt die Daten in der angegebenen Name-Wert-Auflistung in die durch den angegebenen URI identifizierte Ressource hoch. Durch diese Methode wird der aufrufende Thread nicht blockiert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode sendet eine Zeichenfolge in eine Ressource an. Die Zeichenfolge wird asynchron mit Thread-Ressourcen, die automatisch zugewiesen werden aus dem Threadpool gesendet. Diese Methode vor dem Hochladen der Zeichenfolge, konvertiert sie in einer <xref:System.Byte> array mit der Codierung angegeben werden, der <xref:System.Net.WebClient.Encoding%2A> Eigenschaft. Um benachrichtigt zu werden, bei der Zeichenfolge Upload abgeschlossen ist, können Sie einen Ereignishandler hinzufügen der <xref:System.Net.WebClient.UploadStringCompleted> Ereignis.  
  
 Diese Methode wird den aufrufenden Thread nicht blockiert, während die Zeichenfolge gesendet wird. Um eine Zeichenfolge und ein Block beim Warten auf die Antwort des Servers zu senden, gehen die <xref:System.Net.WebClient.UploadString%2A> Methoden.  
  
 Asynchrone Vorgänge, die nicht abgeschlossen wurden können abgebrochen werden, mithilfe der <xref:System.Net.WebClient.CancelAsync%2A> Methode.  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge ("") und `address` enthält keinen absoluten URI, `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Daten zu bilden. Wenn die <xref:System.Net.WebClient.QueryString%2A> -Eigenschaft keine leere Zeichenfolge ist, wird dieser an angefügt `address`.  
  
 Diese Methode verwendet den STOR-Befehl zum Hochladen von einer FTP-Ressource. Für eine HTTP-Ressource wird die POST-Methode verwendet.  
  
> [!NOTE]
>  Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.  
  
- oder -  
Der <paramref name="data" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und <paramref name="address" /> gebildete URI ist ungültig.  
  
- oder -  
Der Server, der Host dieser Ressource ist, hat nicht geantwortet.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadValuesAsync">
      <MemberSignature Language="C#" Value="public void UploadValuesAsync (Uri address, string method, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadValuesAsync(class System.Uri address, string method, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValuesAsync(System.Uri,System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadValuesAsync (address As Uri, method As String, data As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadValuesAsync(Uri ^ address, System::String ^ method, System::Collections::Specialized::NameValueCollection ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadValuesAsync : Uri * string * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="webClient.UploadValuesAsync (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="address">Der URI der Ressource, die die Auflistung empfangen soll. Dieser URI muss eine Ressource identifizieren, die eine mit der <paramref name="method" />-Methode gesendete Anforderung annehmen kann.</param>
        <param name="method">Die Methode, die zum Senden der Zeichenfolge an die Ressource verwendet wird. Wenn NULL, lautet der Standard für http POST und für ftp STOR.</param>
        <param name="data">Die an die Ressource zu sendende <see cref="T:System.Collections.Specialized.NameValueCollection" />.</param>
        <summary>Lädt die Daten in der angegebenen Name-Wert-Auflistung mit der angegebenen Methode in die durch den angegebenen URI identifizierte Ressource hoch. Durch diese Methode wird der aufrufende Thread nicht blockiert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode sendet die Daten in einem <xref:System.Collections.Specialized.NameValueCollection> auf die `address` Ressource. Verwenden Sie diese Methode, um Formulardaten an einen URI für die Verarbeitung zu senden. Die Daten werden mithilfe des Form-Urlencoded-Medientyps gesendet; der Content-Type-Headerwert muss auf "Application/X-www-form-urlencoded" festgelegt werden. Der Header wird standardmäßig richtig festgelegt. Die <xref:System.Net.WebClient.UploadValuesAsync%2A> Methoden lösen eine <xref:System.Net.WebException> , wenn Sie diese Methode mit einem anderen Content-Type-Header-Wert-Satz in Aufrufen der <xref:System.Net.WebClient.Headers%2A> Auflistung.  
  
 Wenn die `method` Methode wird nicht verstanden durch den Server, bestimmen die zugrunde liegenden Abläufe. In der Regel eine <xref:System.Net.WebException> ausgelöst und die <xref:System.Net.WebException.Status%2A> Eigenschaft festgelegt wird, um den Fehler anzugeben.  
  
 Die <xref:System.Collections.Specialized.NameValueCollection> wird gesendet, asynchron aus dem Threadpool mit Threadressourcen, die automatisch zugewiesen werden. Fügen Sie einen Ereignishandler hinzu, um benachrichtigt zu werden, wenn der Uploadvorgang abgeschlossen ist, die <xref:System.Net.WebClient.UploadValuesCompleted> Ereignis.  
  
 Diese Methode wird den aufrufenden Thread nicht blockiert, während die Zeichenfolge gesendet wird. Um eine Zeichenfolge und ein Block beim Warten auf die Antwort des Servers zu senden, gehen die <xref:System.Net.WebClient.UploadValues%2A> Methoden.  
  
 Asynchrone Vorgänge, die nicht abgeschlossen wurden können abgebrochen werden, mithilfe der <xref:System.Net.WebClient.CancelAsync%2A> Methode.  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge ("") und `address` enthält keinen absoluten URI, `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Daten zu bilden. Wenn die <xref:System.Net.WebClient.QueryString%2A> Eigenschaft ist nicht leer, wird dieser an angefügt `address`.  
  
> [!NOTE]
>  Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.  
  
- oder -  
Der <paramref name="data" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und <paramref name="address" /> gebildete URI ist ungültig.  
  
- oder -  
Der Server, der Host dieser Ressource ist, hat nicht geantwortet.  
  
- oder -  
 <paramref name="method" /> kann nicht zum Senden von Inhalten verwendet werden.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadValuesAsync">
      <MemberSignature Language="C#" Value="public void UploadValuesAsync (Uri address, string method, System.Collections.Specialized.NameValueCollection data, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadValuesAsync(class System.Uri address, string method, class System.Collections.Specialized.NameValueCollection data, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValuesAsync(System.Uri,System.String,System.Collections.Specialized.NameValueCollection,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadValuesAsync (address As Uri, method As String, data As NameValueCollection, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadValuesAsync(Uri ^ address, System::String ^ method, System::Collections::Specialized::NameValueCollection ^ data, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.UploadValuesAsync : Uri * string * System.Collections.Specialized.NameValueCollection * obj -&gt; unit" Usage="webClient.UploadValuesAsync (address, method, data, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">Der URI der Ressource, die die Auflistung empfangen soll. Dieser URI muss eine Ressource identifizieren, die eine mit der <paramref name="method" />-Methode gesendete Anforderung annehmen kann.</param>
        <param name="method">Die HTTP-Methode zum Senden der Zeichenfolge an die Ressource. Wenn NULL, lautet der Standard für http POST und für ftp STOR.</param>
        <param name="data">Die an die Ressource zu sendende <see cref="T:System.Collections.Specialized.NameValueCollection" />.</param>
        <param name="userToken">Ein benutzerdefiniertes Objekt, das bei Abschluss des asynchronen Vorgangs an die aufgerufene Methode übergeben wird.</param>
        <summary>Lädt die Daten in der angegebenen Name-Wert-Auflistung mit der angegebenen Methode in die durch den angegebenen URI identifizierte Ressource hoch. Durch diese Methode wird der aufrufende Thread nicht blockiert, und dem Aufrufer wird die Übergabe eines Objekts an die Methode ermöglicht, die beim Abschluss des Vorgangs aufgerufen wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode sendet die Daten in einem <xref:System.Collections.Specialized.NameValueCollection> auf die `address` Ressource. Verwenden Sie diese Methode, um Formulardaten an einen URI für die Verarbeitung zu senden. Die Daten werden mithilfe des Form-Urlencoded-Medientyps gesendet; der Content-Type-Headerwert muss auf "Application/X-www-form-urlencoded" festgelegt werden. Der Header wird standardmäßig richtig festgelegt. Die <xref:System.Net.WebClient.UploadValuesAsync%2A> Methoden lösen eine <xref:System.Net.WebException> , wenn Sie diese Methode mit einem anderen Content-Type-Header-Wert-Satz in Aufrufen der <xref:System.Net.WebClient.Headers%2A> Auflistung.  
  
 Wenn die `method` Methode wird nicht verstanden durch den Server, bestimmen die zugrunde liegenden Abläufe. In der Regel eine <xref:System.Net.WebException> ausgelöst und die <xref:System.Net.WebException.Status%2A> Eigenschaft festgelegt wird, um den Fehler anzugeben.  
  
 Die <xref:System.Collections.Specialized.NameValueCollection> wird gesendet, asynchron aus dem Threadpool mit Threadressourcen, die automatisch zugewiesen werden. Fügen Sie einen Ereignishandler hinzu, um benachrichtigt zu werden, wenn der Uploadvorgang abgeschlossen ist, die <xref:System.Net.WebClient.UploadValuesCompleted> Ereignis.  
  
 Diese Methode wird den aufrufenden Thread nicht blockiert, während die Zeichenfolge gesendet wird. Um eine Zeichenfolge und ein Block beim Warten auf die Antwort des Servers zu senden, gehen die <xref:System.Net.WebClient.UploadValues%2A> Methoden.  
  
 Asynchrone Vorgänge, die nicht abgeschlossen wurden können abgebrochen werden, mithilfe der <xref:System.Net.WebClient.CancelAsync%2A> Methode.  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge ("") und `address` enthält keinen absoluten URI, `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Daten zu bilden. Wenn die <xref:System.Net.WebClient.QueryString%2A> Eigenschaft ist nicht leer, wird dieser an angefügt `address`.  
  
> [!NOTE]
>  Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.  
  
- oder -  
Der <paramref name="data" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und <paramref name="address" /> gebildete URI ist ungültig.  
  
- oder -  
Der Server, der Host dieser Ressource ist, hat nicht geantwortet.  
  
- oder -  
 <paramref name="method" /> kann nicht zum Senden von Inhalten verwendet werden.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadValuesCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.UploadValuesCompletedEventHandler UploadValuesCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.UploadValuesCompletedEventHandler UploadValuesCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.UploadValuesCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UploadValuesCompleted As UploadValuesCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::UploadValuesCompletedEventHandler ^ UploadValuesCompleted;" />
      <MemberSignature Language="F#" Value="member this.UploadValuesCompleted : System.Net.UploadValuesCompletedEventHandler " Usage="member this.UploadValuesCompleted : System.Net.UploadValuesCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.UploadValuesCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn ein asynchroner Upload einer Name-Wert-Auflistung abgeschlossen wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis wird ausgelöst, jedes Mal, wenn einen asynchronen Upload einer <xref:System.Collections.Specialized.NameValueCollection> Daten des Objekts abgeschlossen ist. Diese Uploads werden gestartet, durch den Aufruf der <xref:System.Net.WebClient.UploadValuesAsync%2A> Methoden.  
  
 Die <xref:System.Net.UploadValuesCompletedEventHandler> ist der Delegat für dieses Ereignis. Die <xref:System.Net.UploadValuesCompletedEventArgs> Klasse stellt den Ereignishandler mit Ereignisdaten bereit.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadValuesTaskAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Lädt die angegebene Name-Werts-Auflistung zur Ressource hoch, die durch das angegebene URI als asynchroner Vorgang mithilfe eines Taskobjekts identifiziert wird. Durch diese Methoden wird der aufrufende Thread nicht blockiert.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadValuesTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadValuesTaskAsync (string address, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadValuesTaskAsync(string address, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValuesTaskAsync(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadValuesTaskAsync (address As String, data As NameValueCollection) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadValuesTaskAsync(System::String ^ address, System::Collections::Specialized::NameValueCollection ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadValuesTaskAsync : string * System.Collections.Specialized.NameValueCollection -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.UploadValuesTaskAsync (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="address">Der URI der Ressource, die die Auflistung empfangen soll.</param>
        <param name="data">Die an die Ressource zu sendende <see cref="T:System.Collections.Specialized.NameValueCollection" />.</param>
        <summary>Lädt die angegebene Name-Werts-Auflistung zur Ressource hoch, die durch das angegebene URI als asynchroner Vorgang mithilfe eines Taskobjekts identifiziert wird.</summary>
        <returns>Gibt <see cref="T:System.Threading.Tasks.Task`1" />zurück.  
  
Das Aufgabenobjekt, das den asynchronen Vorgang darstellt. Die <see cref="P:System.Threading.Tasks.Task`1.Result" />-Eigenschaft im Task-Objekt gibt ein <see cref="T:System.Byte" /> Array zurück, das die Antwort enthält, die vom Server gesendet wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Vorgang wird nicht blockiert. Das zurückgegebene <xref:System.Threading.Tasks.Task%601> Objekt wird abgeschlossen, nachdem die Name/Wert-Auflistung auf die Ressource hochgeladen wurde. Name/Wert-Auflistung wird asynchron mit Thread-Ressourcen, die automatisch zugewiesen werden aus dem Threadpool gesendet.  
  
 Asynchrone Vorgänge, die nicht abgeschlossen wurden können abgebrochen werden, mithilfe der <xref:System.Net.WebClient.CancelAsync%2A> Methode.  
  
 Wenn die zugrunde liegende Anforderung vom Server nicht verstanden wird, bestimmen die zugrunde liegende Protokoll Abläufe. In der Regel eine <xref:System.Net.WebException> ausgelöst und die <xref:System.Net.WebException.Status%2A> Eigenschaft festgelegt wird, um den Fehler anzugeben.  
  
 Wenn der Content-Type-Header ist `null`, diese Methode wird auf "Application/X-www-form-urlencoded".  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge ("") und `address` enthält keinen absoluten URI, `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Daten zu bilden. Wenn die <xref:System.Net.WebClient.QueryString%2A> -Eigenschaft keine leere Zeichenfolge ist, wird dieser an angefügt `address`.  
  
 Diese Methode verwendet den STOR-Befehl zum Hochladen von einer FTP-Ressource. Für eine HTTP-Ressource wird die POST-Methode verwendet.  
  
> [!NOTE]
>  Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.  
  
- oder -  
Der <paramref name="data" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und <paramref name="address" /> gebildete URI ist ungültig.  
  
- oder -  
Der Server, der Host dieser Ressource ist, hat nicht geantwortet.  
  
- oder -  
Fehler beim Öffnen des Streams.  
  
- oder -  
Der <see langword="Content-type" />-Header ist nicht <see langword="null" /> oder "application/x-www-form-urlencoded".</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadValuesTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadValuesTaskAsync (Uri address, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadValuesTaskAsync(class System.Uri address, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValuesTaskAsync(System.Uri,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadValuesTaskAsync (address As Uri, data As NameValueCollection) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadValuesTaskAsync(Uri ^ address, System::Collections::Specialized::NameValueCollection ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadValuesTaskAsync : Uri * System.Collections.Specialized.NameValueCollection -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.UploadValuesTaskAsync (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="address">Der URI der Ressource, die die Auflistung empfangen soll.</param>
        <param name="data">Die an die Ressource zu sendende <see cref="T:System.Collections.Specialized.NameValueCollection" />.</param>
        <summary>Lädt die angegebene Name-Werts-Auflistung zur Ressource hoch, die durch das angegebene URI als asynchroner Vorgang mithilfe eines Taskobjekts identifiziert wird.</summary>
        <returns>Gibt <see cref="T:System.Threading.Tasks.Task`1" />zurück.  
  
Das Aufgabenobjekt, das den asynchronen Vorgang darstellt. Die <see cref="P:System.Threading.Tasks.Task`1.Result" />-Eigenschaft im Task-Objekt gibt ein <see cref="T:System.Byte" /> Array zurück, das die Antwort enthält, die vom Server gesendet wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Vorgang wird nicht blockiert. Das zurückgegebene <xref:System.Threading.Tasks.Task%601> Objekt wird abgeschlossen, nachdem die Name/Wert-Auflistung auf die Ressource hochgeladen wurde. Name/Wert-Auflistung wird asynchron mit Thread-Ressourcen, die automatisch zugewiesen werden aus dem Threadpool gesendet.  
  
 Asynchrone Vorgänge, die nicht abgeschlossen wurden können abgebrochen werden, mithilfe der <xref:System.Net.WebClient.CancelAsync%2A> Methode.  
  
 Wenn die zugrunde liegende Anforderung vom Server nicht verstanden wird, bestimmen die zugrunde liegende Protokoll Abläufe. In der Regel eine <xref:System.Net.WebException> ausgelöst und die <xref:System.Net.WebException.Status%2A> Eigenschaft festgelegt wird, um den Fehler anzugeben.  
  
 Wenn der Content-Type-Header ist `null`, diese Methode wird auf "Application/X-www-form-urlencoded".  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge ("") und `address` enthält keinen absoluten URI, `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Daten zu bilden. Wenn die <xref:System.Net.WebClient.QueryString%2A> -Eigenschaft keine leere Zeichenfolge ist, wird dieser an angefügt `address`.  
  
 Diese Methode verwendet den STOR-Befehl zum Hochladen von einer FTP-Ressource. Für eine HTTP-Ressource wird die POST-Methode verwendet.  
  
> [!NOTE]
>  Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.  
  
- oder -  
Der <paramref name="data" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und <paramref name="address" /> gebildete URI ist ungültig.  
  
- oder -  
Fehler beim Öffnen des Streams.  
  
- oder -  
Der Server, der Host dieser Ressource ist, hat nicht geantwortet.  
  
- oder -  
Der Wert des <see langword="Content-type" />-Headers ist weder <see langword="null" /> noch <see langword="application/x-www-form-urlencoded" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadValuesTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadValuesTaskAsync (string address, string method, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadValuesTaskAsync(string address, string method, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValuesTaskAsync(System.String,System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadValuesTaskAsync (address As String, method As String, data As NameValueCollection) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadValuesTaskAsync(System::String ^ address, System::String ^ method, System::Collections::Specialized::NameValueCollection ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadValuesTaskAsync : string * string * System.Collections.Specialized.NameValueCollection -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.UploadValuesTaskAsync (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="address">Der URI der Ressource, die die Auflistung empfangen soll.</param>
        <param name="method">Die HTTP-Methode zum Senden der Auflistung an die Ressource. Wenn NULL, lautet der Standard für http POST und für ftp STOR.</param>
        <param name="data">Die an die Ressource zu sendende <see cref="T:System.Collections.Specialized.NameValueCollection" />.</param>
        <summary>Lädt die angegebene Name-Werts-Auflistung zur Ressource hoch, die durch das angegebene URI als asynchroner Vorgang mithilfe eines Taskobjekts identifiziert wird.</summary>
        <returns>Gibt <see cref="T:System.Threading.Tasks.Task`1" />zurück.  
  
Das Aufgabenobjekt, das den asynchronen Vorgang darstellt. Die <see cref="P:System.Threading.Tasks.Task`1.Result" />-Eigenschaft im Task-Objekt gibt ein <see cref="T:System.Byte" /> Array zurück, das die Antwort enthält, die vom Server gesendet wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Vorgang wird nicht blockiert. Das zurückgegebene <xref:System.Threading.Tasks.Task%601> Objekt wird abgeschlossen, nachdem die Name/Wert-Auflistung auf die Ressource hochgeladen wurde. Name/Wert-Auflistung wird asynchron mit Thread-Ressourcen, die automatisch zugewiesen werden aus dem Threadpool gesendet.  
  
 Asynchrone Vorgänge, die nicht abgeschlossen wurden können abgebrochen werden, mithilfe der <xref:System.Net.WebClient.CancelAsync%2A> Methode.  
  
 Wenn die zugrunde liegende Anforderung vom Server nicht verstanden wird, bestimmen die zugrunde liegende Protokoll Abläufe. In der Regel eine <xref:System.Net.WebException> ausgelöst und die <xref:System.Net.WebException.Status%2A> Eigenschaft festgelegt wird, um den Fehler anzugeben.  
  
 Wenn der Content-Type-Header ist `null`, diese Methode wird auf "Application/X-www-form-urlencoded".  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge ("") und `address` enthält keinen absoluten URI, `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Daten zu bilden. Wenn die <xref:System.Net.WebClient.QueryString%2A> -Eigenschaft keine leere Zeichenfolge ist, wird dieser an angefügt `address`.  
  
 Diese Methode verwendet den STOR-Befehl zum Hochladen von einer FTP-Ressource. Für eine HTTP-Ressource wird die POST-Methode verwendet.  
  
> [!NOTE]
>  Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.  
  
- oder -  
Der <paramref name="data" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und <paramref name="address" /> gebildete URI ist ungültig.  
  
- oder -  
 <paramref name="method" /> kann nicht zum Senden von Inhalten verwendet werden.  
  
- oder -  
Der Server, der Host dieser Ressource ist, hat nicht geantwortet.  
  
- oder -  
Fehler beim Öffnen des Streams.  
  
- oder -  
Der <see langword="Content-type" />-Header ist nicht <see langword="null" /> oder "application/x-www-form-urlencoded".</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadValuesTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadValuesTaskAsync (Uri address, string method, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadValuesTaskAsync(class System.Uri address, string method, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValuesTaskAsync(System.Uri,System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadValuesTaskAsync (address As Uri, method As String, data As NameValueCollection) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadValuesTaskAsync(Uri ^ address, System::String ^ method, System::Collections::Specialized::NameValueCollection ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadValuesTaskAsync : Uri * string * System.Collections.Specialized.NameValueCollection -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.UploadValuesTaskAsync (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="address">Der URI der Ressource, die die Auflistung empfangen soll.</param>
        <param name="method">Die HTTP-Methode zum Senden der Auflistung an die Ressource. Wenn NULL, lautet der Standard für http POST und für ftp STOR.</param>
        <param name="data">Die an die Ressource zu sendende <see cref="T:System.Collections.Specialized.NameValueCollection" />.</param>
        <summary>Lädt die angegebene Name-Werts-Auflistung zur Ressource hoch, die durch das angegebene URI als asynchroner Vorgang mithilfe eines Taskobjekts identifiziert wird.</summary>
        <returns>Gibt <see cref="T:System.Threading.Tasks.Task`1" />zurück.  
  
Das Aufgabenobjekt, das den asynchronen Vorgang darstellt. Die <see cref="P:System.Threading.Tasks.Task`1.Result" />-Eigenschaft im Task-Objekt gibt ein <see cref="T:System.Byte" /> Array zurück, das die Antwort enthält, die vom Server gesendet wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Vorgang wird nicht blockiert. Das zurückgegebene <xref:System.Threading.Tasks.Task%601> Objekt wird abgeschlossen, nachdem die Name/Wert-Auflistung auf die Ressource hochgeladen wurde. Name/Wert-Auflistung wird asynchron mit Thread-Ressourcen, die automatisch zugewiesen werden aus dem Threadpool gesendet.  
  
 Asynchrone Vorgänge, die nicht abgeschlossen wurden können abgebrochen werden, mithilfe der <xref:System.Net.WebClient.CancelAsync%2A> Methode.  
  
 Wenn die zugrunde liegende Anforderung vom Server nicht verstanden wird, bestimmen die zugrunde liegende Protokoll Abläufe. In der Regel eine <xref:System.Net.WebException> ausgelöst und die <xref:System.Net.WebException.Status%2A> Eigenschaft festgelegt wird, um den Fehler anzugeben.  
  
 Wenn der Content-Type-Header ist `null`, diese Methode wird auf "Application/X-www-form-urlencoded".  
  
 Wenn die <xref:System.Net.WebClient.BaseAddress%2A> Eigenschaft handelt es sich nicht um eine leere Zeichenfolge ("") und `address` enthält keinen absoluten URI, `address` muss ein relativer URI, der in Kombination <xref:System.Net.WebClient.BaseAddress%2A> um den absoluten URI der angeforderten Daten zu bilden. Wenn die <xref:System.Net.WebClient.QueryString%2A> -Eigenschaft keine leere Zeichenfolge ist, wird dieser an angefügt `address`.  
  
 Diese Methode verwendet den STOR-Befehl zum Hochladen von einer FTP-Ressource. Für eine HTTP-Ressource wird die POST-Methode verwendet.  
  
> [!NOTE]
>  Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren. Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist <see langword="null" />.  
  
- oder -  
Der <paramref name="data" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und <paramref name="address" /> gebildete URI ist ungültig.  
  
- oder -  
 <paramref name="method" /> kann nicht zum Senden von Inhalten verwendet werden.  
  
- oder -  
Der Server, der Host dieser Ressource ist, hat nicht geantwortet.  
  
- oder -  
Fehler beim Öffnen des Streams.  
  
- oder -  
Der <see langword="Content-type" />-Header ist nicht <see langword="null" /> oder "application/x-www-form-urlencoded".</exception>
      </Docs>
    </Member>
    <Member MemberName="UseDefaultCredentials">
      <MemberSignature Language="C#" Value="public bool UseDefaultCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.UseDefaultCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Property UseDefaultCredentials As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseDefaultCredentials { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseDefaultCredentials : bool with get, set" Usage="System.Net.WebClient.UseDefaultCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen <see cref="T:System.Boolean" />-Wert ab, der steuert, ob mit den Anforderungen <see cref="P:System.Net.CredentialCache.DefaultCredentials" /> gesendet werden, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn die Standardanmeldeinformationen verwendet werden, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Legen Sie diese Eigenschaft auf `true` bei Anforderungen von dieser <xref:System.Net.WebClient> Objekt sollte, wenn vom Server angefordert authentifiziert werden mit den Standardanmeldeinformationen des aktuell angemeldeten Benutzers. Bei Clientanwendungen ist dies das gewünschte Verhalten in den meisten Szenarien. Für Anwendungen der mittleren Ebene, z. B. ASP.NET-Anwendungen anstelle dieser Eigenschaft legen Sie in der Regel die <xref:System.Net.WebClient.Credentials%2A> Eigenschaft, um die Anmeldeinformationen des Clients in deren Auftrag die Anforderung wird ausgeführt.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht das Festlegen dieser Eigenschaft.  
  
 [!code-cpp[NCLWebClientAsync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#3)]
 [!code-csharp[NCLWebClientAsync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#3)]
 [!code-vb[NCLWebClientAsync#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteStreamClosed">
      <MemberSignature Language="C#" Value="public event System.Net.WriteStreamClosedEventHandler WriteStreamClosed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.WriteStreamClosedEventHandler WriteStreamClosed" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.WriteStreamClosed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WriteStreamClosed As WriteStreamClosedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::WriteStreamClosedEventHandler ^ WriteStreamClosed;" />
      <MemberSignature Language="F#" Value="member this.WriteStreamClosed : System.Net.WriteStreamClosedEventHandler " Usage="member this.WriteStreamClosed : System.Net.WriteStreamClosedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.WriteStreamClosedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn ein asynchroner Vorgang, um Daten mithilfe eines Schreibstreams in eine Ressource zu schreiben, abgeschlossen wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis wird jedes Mal ausgelöst, die ein asynchroner Vorgang zum Schreiben von Daten auf eine Ressource mithilfe eines Schreibstreams geschlossen wird. Diese Vorgänge führen Aufrufe an die <xref:System.Net.WebClient.OpenWriteTaskAsync%2A> Methoden.  
  
 Die <xref:System.Net.WriteStreamClosedEventHandler> ist der Delegat für dieses Ereignis. Die <xref:System.Net.WriteStreamClosedEventArgs> Klasse stellt den Ereignishandler mit Ereignisdaten bereit.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>