<Type Name="AuthenticationManager" FullName="System.Net.AuthenticationManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6557aa33b5dbcbdad923774777f049037478e1e6" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39959107" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class AuthenticationManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AuthenticationManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.AuthenticationManager" />
  <TypeSignature Language="VB.NET" Value="Public Class AuthenticationManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class AuthenticationManager" />
  <TypeSignature Language="F#" Value="type AuthenticationManager = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.Requests</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Verwaltet die Authentifizierungsmodule, die während der Clientauthentifizierung aufgerufen werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.AuthenticationManager> ist eine statische Klasse, die die Authentifizierungsmodule verwaltet, die eine Anwendung verwendet. Wenn eine Anforderung an den geschützten Ressourcen, die <xref:System.Net.AuthenticationManager> Aufrufe der <xref:System.Net.AuthenticationManager.Authenticate%2A> -Methode zum Abrufen einer <xref:System.Net.Authorization> Instanz, die in nachfolgenden Anforderungen verwendet.  
  
 Die <xref:System.Net.AuthenticationManager> fragt alle registrierten Authentifizierungsmodule durch einen Aufruf der <xref:System.Net.IAuthenticationModule.Authenticate%2A?displayProperty=nameWithType> Methode für jedes Modul. Das erste Authentifizierungsmodul zurückzugebenden ein <xref:System.Net.Authorization> Instanz wird zum Authentifizieren der Anforderung verwendet.  
  
 Module, die Geben Sie die Standard-, Digest-, Negotiate-, NTLM- und Kerberos-Authentifizierungstypen registriert werden, die <xref:System.Net.AuthenticationManager> standardmäßig. Zusätzliche Authentifizierung-Module, implementieren die <xref:System.Net.IAuthenticationModule> Schnittstelle kann hinzugefügt werden, mithilfe der <xref:System.Net.AuthenticationManager.Register%2A> Methode. Authentifizierungsmodule werden in der Reihenfolge aufgerufen, in denen sie zur Liste hinzugefügt wurden.  
  
> [!NOTE]
>  Kerberos und aushandeln Authentifizierungstyp wird nicht auf Windows 95-und Windows 98 oder Windows NT 4.0 unterstützt.  
  
   
  
## Examples  
 [!code-cpp[System.Net.Authentication#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Authentication/CPP/custombasicauthentication.cpp#1)]
 [!code-csharp[System.Net.Authentication#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Authentication/CS/custombasicauthentication.cs#1)]
 [!code-vb[System.Net.Authentication#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Authentication/VB/custombasicauthentication.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Authenticate">
      <MemberSignature Language="C#" Value="public static System.Net.Authorization Authenticate (string challenge, System.Net.WebRequest request, System.Net.ICredentials credentials);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.Authorization Authenticate(string challenge, class System.Net.WebRequest request, class System.Net.ICredentials credentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.AuthenticationManager.Authenticate(System.String,System.Net.WebRequest,System.Net.ICredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Authenticate (challenge As String, request As WebRequest, credentials As ICredentials) As Authorization" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::Authorization ^ Authenticate(System::String ^ challenge, System::Net::WebRequest ^ request, System::Net::ICredentials ^ credentials);" />
      <MemberSignature Language="F#" Value="static member Authenticate : string * System.Net.WebRequest * System.Net.ICredentials -&gt; System.Net.Authorization" Usage="System.Net.AuthenticationManager.Authenticate (challenge, request, credentials)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Authorization</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="challenge" Type="System.String" />
        <Parameter Name="request" Type="System.Net.WebRequest" />
        <Parameter Name="credentials" Type="System.Net.ICredentials" />
      </Parameters>
      <Docs>
        <param name="challenge">Die Aufforderung, die von der Internetressource zurückgegeben wird.</param>
        <param name="request">Die <see cref="T:System.Net.WebRequest" />, von der die Authentifizierungsaufforderung initiiert wurde.</param>
        <param name="credentials">Die mit dieser Anforderung verknüpften <see cref="T:System.Net.ICredentials" />.</param>
        <summary>Ruft alle registrierten Authentifizierungsmodule auf, um das erste Modul zu bestimmen, das auf die Authentifizierungsanforderung antworten kann.</summary>
        <returns>Eine Instanz der <see cref="T:System.Net.Authorization" />-Klasse, die das Ergebnis des Authentifizierungsversuchs enthält. Wenn kein Authentifizierungsmodul verfügbar ist, das auf die Aufforderung antworten kann, gibt diese Methode <see langword="null" /> zurück.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Net.AuthenticationManager.Authenticate%2A> Methodenaufrufe der <xref:System.Net.IAuthenticationModule.Authenticate%2A?displayProperty=nameWithType> Methode für alle registrierten Authentifizierungsmodule, bis eines der Module mit antwortet ein <xref:System.Net.Authorization> Instanz.  
  
 Die erste <xref:System.Net.Authorization> zurückgegebene Instanz wird verwendet, um die Anforderung zu authentifizieren. Wenn kein Modul für die Authentifizierung die Anforderung authentifiziert werden kann die <xref:System.Net.AuthenticationManager.Authenticate%2A> Methodenrückgabe `null`.  
  
 Authentifizierungsmodule werden aufgerufen, in der Reihenfolge, in dem sie registriert sind mit, den <xref:System.Net.AuthenticationManager>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="challenge" /> ist <see langword="null" />.  
  
- oder -  
 <paramref name="request" /> ist <see langword="null" />.  
  
- oder -  
 <paramref name="credentials" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CredentialPolicy">
      <MemberSignature Language="C#" Value="public static System.Net.ICredentialPolicy CredentialPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.ICredentialPolicy CredentialPolicy" />
      <MemberSignature Language="DocId" Value="P:System.Net.AuthenticationManager.CredentialPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CredentialPolicy As ICredentialPolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::ICredentialPolicy ^ CredentialPolicy { System::Net::ICredentialPolicy ^ get(); void set(System::Net::ICredentialPolicy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CredentialPolicy : System.Net.ICredentialPolicy with get, set" Usage="System.Net.AuthenticationManager.CredentialPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.ICredentialPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anmeldeinformationen-Richtline ab, die für mit der <see cref="T:System.Net.HttpWebRequest" />-Klasse durchgeführte Ressourcenanforderungen verwendet werden soll, oder legt diese fest.</summary>
        <value>Ein Objekt, das die <see cref="T:System.Net.ICredentialPolicy" />-Schnittstelle implementiert und bestimmt, ob mit Anforderungen Anmeldeinformationen gesendet werden. Der Standardwert ist <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Anmeldeinformationen-Richtline bestimmt, ob Anmeldeinformationen beim Senden einer Anforderung für eine Netzwerkressource, z. B. den Inhalt einer Webseite zu senden. Wenn Anmeldeinformationen gesendet werden, können Server, für die Clientauthentifizierung erforderlich versuchen, zum Authentifizieren des Clients, wenn die Anforderung empfangen wird, anstatt das Senden einer Antwort gibt an, dass die Anmeldeinformationen des Clients erforderlich sind. Während dies einen Roundtrip zum Server speichert, muss dies für das Senden von Anmeldeinformationen über das Netzwerk Sicherheitsrisiko ausgeglichen werden. Wenn der Zielserver keine Clientauthentifizierung erfordert empfiehlt es sich auf keine Anmeldeinformationen zu senden.  
  
 Die Anmeldeinformationen-Richtline lautet nur für Anforderungen, die Anmeldeinformationen angeben, oder verwenden eine <xref:System.Net.WebProxy> -Objekt, das Anmeldeinformationen angibt.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht das Festlegen der Anmeldeinformationen-Richtlinie.  
  
 [!code-cpp[NclCredPolicy#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCredPolicy/CPP/NCLCredPolicy.cpp#2)]
 [!code-csharp[NclCredPolicy#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCredPolicy/CS/websample.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomTargetNameDictionary">
      <MemberSignature Language="C#" Value="public static System.Collections.Specialized.StringDictionary CustomTargetNameDictionary { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Specialized.StringDictionary CustomTargetNameDictionary" />
      <MemberSignature Language="DocId" Value="P:System.Net.AuthenticationManager.CustomTargetNameDictionary" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CustomTargetNameDictionary As StringDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::Specialized::StringDictionary ^ CustomTargetNameDictionary { System::Collections::Specialized::StringDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CustomTargetNameDictionary : System.Collections.Specialized.StringDictionary" Usage="System.Net.AuthenticationManager.CustomTargetNameDictionary" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Wörterbuch ab, das SPNs (Service Principal Names) enthält. Diese werden während der Kerberos-Authentifizierung zum Identifizieren von Hosts für Anforderungen verwendet, die mit <see cref="T:System.Net.WebRequest" /> und den abgeleiteten Klassen ausgeführt werden.</summary>
        <value>Ein nicht schreibgeschütztes <see cref="T:System.Collections.Specialized.StringDictionary" />, das die SPN-Werte für aus Hostinformationen bestehende Schlüssel enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein SPN ist ein Name, der über den ein Client eine Instanz eines Diensts oder einer Anwendung auf einem Server für die gegenseitige Authentifizierung eindeutig identifiziert. Gegenseitiger Authentifizierung standardmäßig angefordert wird, und Sie können es erforderlich, durch Festlegen von <xref:System.Net.WebRequest.AuthenticationLevel%2A?displayProperty=nameWithType> zu <xref:System.Net.Security.AuthenticationLevel.MutualAuthRequired> in Ihrer Anforderung.  
  
 Wenn eine <xref:System.Net.WebRequest> erfordert die gegenseitige Authentifizierung, den SPN für das Ziel, die vom Client angegeben werden muss. Wenn Sie den SPN kennen, können Sie ihn zum Hinzufügen der <xref:System.Net.AuthenticationManager.CustomTargetNameDictionary%2A> vor dem Senden der Anforderung. Wenn Sie dieses Wörterbuch, kein SPN-Informationen hinzugefügt haben die <xref:System.Net.AuthenticationManager> verwendet die <xref:System.Net.WebRequest.RequestUri%2A> Methode, um die am wahrscheinlichsten SPN zu erstellen; Dies ist jedoch ein berechneter Wert und ist möglicherweise falsch. Wenn gegenseitiger Authentifizierung versucht wird und fehlschlägt, können Sie das Wörterbuch, um zu bestimmen, den berechnete SPN überprüfen. Kein SPN wird in das Wörterbuch eingegeben, wenn das Authentifizierungsprotokoll keine gegenseitigen Authentifizierung unterstützt.  
  
 Um eine SPN-Wert auf dieses Wörterbuch hinzuzufügen, verwenden die <xref:System.Uri.AbsoluteUri%2A> von der <xref:System.Net.WebRequest.RequestUri%2A> als Schlüssel. Intern wird der Schlüssel abgeschnitten, enthält die <xref:System.Uri.Scheme%2A>, <xref:System.Uri.Host%2A>, und die <xref:System.Uri.Port%2A> ist dies nicht der Standardport.  
  
> [!NOTE]
>  Zugreifen auf die Methoden und Eigenschaften der <xref:System.Net.AuthenticationManager.CustomTargetNameDictionary%2A> erfordert uneingeschränkten <xref:System.Net.WebPermission>.  
  
> [!NOTE]
>  Wenn Kerberos-Authentifizierung über einen Proxy ausgeführt wird, müssen sowohl den Proxy und der ultimate Hostname für einen SPN aufgelöst werden. Die Proxy-namensauflösung wird durch ein Timeout geschützt. Auflösung des Hostnamens für einen SPN ultimate erfordert einen DNS-Lookup, und es gibt kein Timeout, die diesen Vorgang direkt zugeordnet. Synchrone Vorgänge können daher aktuell ein Timeout länger dauern. Um dies zu umgehen, die SPN-Cache vor, die Anforderungen, Hinzufügen des Hosts, auf die ultimate-URI-Präfix.  
  
 Version 3.5 SP1 gibt jetzt standardmäßig den Hostnamen in der Anforderungs-URL in der SPN im NTLM-Authentifizierungsaustausch (NT LAN Manager) an, wenn die <xref:System.Net.AuthenticationManager.CustomTargetNameDictionary%2A>-Eigenschaft nicht festgelegt ist. Der Hostname in der Anforderungs-URL kann vom in <xref:System.Net.HttpRequestHeader?displayProperty=nameWithType> in der Clientanforderung angegebenen Hostheader abweichen. Der Hostname in der Anforderungs-URL kann vom tatsächlichen Hostnamen des Servers, dem Computernamen des Servers, der IP-Adresse des Computers oder der Loopbackadresse abweichen. In diesen Fällen schlägt die Authentifizierungsanforderung in Windows fehl. Um das Problem zu beheben, müssen Sie möglicherweise Windows benachrichtigen, die den Namen des Hosts verwendet im Anforderungs-URL auf dem Client-Anforderung (z. B. "Contoso") ist tatsächlich ein alternativer Name für den lokalen Computer.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, Anzeigen des Inhalts von der <xref:System.Net.AuthenticationManager.CustomTargetNameDictionary%2A>.  
  
 [!code-cpp[NclCredPolicy#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCredPolicy/CPP/NCLCredPolicy.cpp#5)]
 [!code-csharp[NclCredPolicy#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCredPolicy/CS/websample.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreAuthenticate">
      <MemberSignature Language="C#" Value="public static System.Net.Authorization PreAuthenticate (System.Net.WebRequest request, System.Net.ICredentials credentials);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.Authorization PreAuthenticate(class System.Net.WebRequest request, class System.Net.ICredentials credentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.AuthenticationManager.PreAuthenticate(System.Net.WebRequest,System.Net.ICredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PreAuthenticate (request As WebRequest, credentials As ICredentials) As Authorization" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::Authorization ^ PreAuthenticate(System::Net::WebRequest ^ request, System::Net::ICredentials ^ credentials);" />
      <MemberSignature Language="F#" Value="static member PreAuthenticate : System.Net.WebRequest * System.Net.ICredentials -&gt; System.Net.Authorization" Usage="System.Net.AuthenticationManager.PreAuthenticate (request, credentials)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Authorization</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.WebRequest" />
        <Parameter Name="credentials" Type="System.Net.ICredentials" />
      </Parameters>
      <Docs>
        <param name="request">Eine <see cref="T:System.Net.WebRequest" /> an eine Internetressource.</param>
        <param name="credentials">Die mit dieser Anforderung verknüpften <see cref="T:System.Net.ICredentials" />.</param>
        <summary>Führt die Vorauthentifizierung einer Anforderung durch.</summary>
        <returns>Eine Instanz der <see cref="T:System.Net.Authorization" />-Klasse, wenn die Anforderung vorauthentifiziert werden kann, andernfalls <see langword="null" />. Wenn <paramref name="credentials" /> gleich <see langword="null" /> ist, gibt die Methode <see langword="null" /> zurück.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die Anforderung vorauthentifiziert werden das Modul für die Authentifizierung soll kann die <xref:System.Net.AuthenticationManager.PreAuthenticate%2A> Methode gibt eine authentifizierungsinstanz und sendet Sie die Autorisierungsinformationen, mit dem Server bereits im Vorfeld, anstatt abzuwarten, bis die Ressource, geben Sie eine Herausforderung dar. Dieses Verhalten wird in Abschnitt 3.3 der RFC 2617 beschrieben (HTTP-Authentifizierung: Standard- und Hashwertauthentifizierung für den Zugriff). Authentifizierungsmodule, die die Präauthentifizierung unterstützen können Clients Server Effizienz zu verbessern, durch das Vermeiden von zusätzlichen Roundtrips durch authentifizierungsanforderungen verursacht werden.  
  
 Authorization-Module, die preauthenticate können Anforderungen Satz der <xref:System.Net.IAuthenticationModule.CanPreAuthenticate%2A?displayProperty=nameWithType> Eigenschaft `true`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="request" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public static void Register (System.Net.IAuthenticationModule authenticationModule);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Register(class System.Net.IAuthenticationModule authenticationModule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.AuthenticationManager.Register(System.Net.IAuthenticationModule)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Register (authenticationModule As IAuthenticationModule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Register(System::Net::IAuthenticationModule ^ authenticationModule);" />
      <MemberSignature Language="F#" Value="static member Register : System.Net.IAuthenticationModule -&gt; unit" Usage="System.Net.AuthenticationManager.Register authenticationModule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationModule" Type="System.Net.IAuthenticationModule" />
      </Parameters>
      <Docs>
        <param name="authenticationModule">Das <see cref="T:System.Net.IAuthenticationModule" />, das beim Authentifizierungsmanager registriert werden soll.</param>
        <summary>Registriert ein Authentifizierungsmodul beim Authentifizierungsmanager.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Net.AuthenticationManager.Register%2A> Methode fügt Authentifizierungsmodule an das Ende der Liste der Module, die aufgerufen werden, indem die <xref:System.Net.AuthenticationManager.Authenticate%2A> Methode. Authentifizierungsmodule werden in der Reihenfolge aufgerufen, in denen sie zur Liste hinzugefügt wurden. Wenn ein Modul mit dem gleichen <xref:System.Net.IAuthenticationModule.AuthenticationType%2A> ist bereits registriert ist, diese Methode der registrierten Module entfernt und fügt `authenticationModule` an das Ende der Liste.  
  
   
  
## Examples  
 Im folgende Beispiel werden ein Authentifizierungsmodul beim Authentifizierungsmanager registriert. Ein vollständiges Beispiel finden Sie in der <xref:System.Net.AuthenticationManager> Klasse.  
  
 [!code-cpp[System.Net.Sockets.Authentication#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.Authentication/CPP/custombasicauthentication.cpp#2)]
 [!code-csharp[System.Net.Sockets.Authentication#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.Authentication/CS/custombasicauthentication.cs#2)]
 [!code-vb[System.Net.Sockets.Authentication#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.Authentication/VB/custombasicauthentication.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="authenticationModule" /> ist <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">zum Ausführen von nicht verwalteten Codes. Zugeordnete Enumeration: <see cref="T:System.Security.Permissions.SecurityPermissionFlag" /></permission>
      </Docs>
    </Member>
    <Member MemberName="RegisteredModules">
      <MemberSignature Language="C#" Value="public static System.Collections.IEnumerator RegisteredModules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.IEnumerator RegisteredModules" />
      <MemberSignature Language="DocId" Value="P:System.Net.AuthenticationManager.RegisteredModules" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property RegisteredModules As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::IEnumerator ^ RegisteredModules { System::Collections::IEnumerator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RegisteredModules : System.Collections.IEnumerator" Usage="System.Net.AuthenticationManager.RegisteredModules" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Liste der Authentifizierungsmodule ab, die beim Authentifizierungsmanager registriert sind.</summary>
        <value>Ein <see cref="T:System.Collections.IEnumerator" />, mit dem die registrierten Authentifizierungsmodule gelesen werden können.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Net.AuthenticationManager.RegisteredModules%2A> Eigenschaft enthält eine <xref:System.Collections.IEnumerator> Instanz, die es die Liste der ermöglicht registrierten Authentifizierungsmodule gelesen werden. Die <xref:System.Net.AuthenticationManager.Register%2A> Methode der Liste der Module hinzugefügt und die <xref:System.Net.AuthenticationManager.Unregister%2A> Methode entfernt Module aus.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die <xref:System.Net.AuthenticationManager.RegisteredModules%2A> Eigenschaft, um eine Liste der Authentifizierungsmodule abzurufen, die beim Authentifizierungsmanager registriert sind. Ein vollständiges Beispiel finden Sie in der <xref:System.Net.AuthenticationManager> Klasse.  
  
 [!code-cpp[System.Net.Authentication#8](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Authentication/CPP/custombasicauthentication.cpp#8)]
 [!code-csharp[System.Net.Authentication#8](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Authentication/CS/custombasicauthentication.cs#8)]
 [!code-vb[System.Net.Authentication#8](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Authentication/VB/custombasicauthentication.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Unregister">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Entfernt die Authentifizierungsmodule aus der Liste der registrierten Module.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Unregister">
      <MemberSignature Language="C#" Value="public static void Unregister (System.Net.IAuthenticationModule authenticationModule);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Unregister(class System.Net.IAuthenticationModule authenticationModule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.AuthenticationManager.Unregister(System.Net.IAuthenticationModule)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Unregister (authenticationModule As IAuthenticationModule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unregister(System::Net::IAuthenticationModule ^ authenticationModule);" />
      <MemberSignature Language="F#" Value="static member Unregister : System.Net.IAuthenticationModule -&gt; unit" Usage="System.Net.AuthenticationManager.Unregister authenticationModule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationModule" Type="System.Net.IAuthenticationModule" />
      </Parameters>
      <Docs>
        <param name="authenticationModule">Das <see cref="T:System.Net.IAuthenticationModule" />, das aus der Liste der registrierten Module entfernt werden soll.</param>
        <summary>Entfernt das angegebene Authentifizierungsmodul aus der Liste der registrierten Module.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Net.AuthenticationManager.Unregister%2A> Methode entfernt das angegebene Authentifizierungsmodul aus der Liste der Authentifizierungsmodule, die aufgerufen werden, indem die <xref:System.Net.AuthenticationManager.Authenticate%2A> Methode. Das Modul muss hinzugefügt wurde, der Liste mithilfe der <xref:System.Net.AuthenticationManager.Register%2A> -Methode auf, bevor Sie sie aus der Liste entfernt werden kann.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die <xref:System.Net.AuthenticationManager.Unregister%2A> Methode, um das angegebene Authentifizierungsmodul aus der Liste der registrierten Module zu entfernen. Ein vollständiges Beispiel finden Sie in der <xref:System.Net.AuthenticationManager> Klasse.  
  
 [!code-cpp[System.Net.Sockets.Authentication#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.Authentication/CPP/custombasicauthentication.cpp#2)]
 [!code-csharp[System.Net.Sockets.Authentication#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.Authentication/CS/custombasicauthentication.cs#2)]
 [!code-vb[System.Net.Sockets.Authentication#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.Authentication/VB/custombasicauthentication.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="authenticationModule" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Das angegebene <see cref="T:System.Net.IAuthenticationModule" /> ist nicht registriert.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">zum Ausführen von nicht verwalteten Codes. Zugeordnete Enumeration: <see cref="T:System.Security.Permissions.SecurityPermissionFlag" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Unregister">
      <MemberSignature Language="C#" Value="public static void Unregister (string authenticationScheme);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Unregister(string authenticationScheme) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.AuthenticationManager.Unregister(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Unregister (authenticationScheme As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unregister(System::String ^ authenticationScheme);" />
      <MemberSignature Language="F#" Value="static member Unregister : string -&gt; unit" Usage="System.Net.AuthenticationManager.Unregister authenticationScheme" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationScheme" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="authenticationScheme">Das Authentifizierungsschema des zu entfernenden Moduls.</param>
        <summary>Entfernt die Authentifizierungsmodule mit dem angegebenen Authentifizierungsschema aus der Liste der registrierten Module.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Net.AuthenticationManager.Unregister%2A> Methode entfernt das Authentifizierungs-Modul mit dem angegebenen Authentifizierungsschema aus der Liste der Authentifizierungsmodule, die aufgerufen werden, indem die <xref:System.Net.AuthenticationManager.Authenticate%2A> Methode. Das Modul muss hinzugefügt wurde, der Liste mithilfe der <xref:System.Net.AuthenticationManager.Register%2A> -Methode auf, bevor Sie sie aus der Liste entfernt werden kann.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die <xref:System.Net.AuthenticationManager.Unregister%2A> Methode, um ein Authentifizierungsmodul mit dem angegebenen Authentifizierungsschema aus der Liste der registrierten Module zu entfernen.  
  
 [!code-cpp[AuthenticationManager_UnRegister2#2](~/samples/snippets/cpp/VS_Snippets_Remoting/AuthenticationManager_UnRegister2/CPP/authenticationmanager_unregister2.cpp#2)]
 [!code-csharp[AuthenticationManager_UnRegister2#2](~/samples/snippets/csharp/VS_Snippets_Remoting/AuthenticationManager_UnRegister2/CS/authenticationmanager_unregister2.cs#2)]
 [!code-vb[AuthenticationManager_UnRegister2#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/AuthenticationManager_UnRegister2/VB/authenticationmanager_unregister2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="authenticationScheme" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Ein Modul ist für dieses Authentifizierungsschema nicht registriert.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">zum Ausführen von nicht verwalteten Codes. Zugeordnete Enumeration: <see cref="T:System.Security.Permissions.SecurityPermissionFlag" /></permission>
      </Docs>
    </Member>
  </Members>
</Type>