<Type Name="AuthenticationManager" FullName="System.Net.AuthenticationManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d6af9e7bc87693587573772dcee851171ff5ff5f" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75170320" /></Metadata><TypeSignature Language="C#" Value="public class AuthenticationManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AuthenticationManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.AuthenticationManager" />
  <TypeSignature Language="VB.NET" Value="Public Class AuthenticationManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class AuthenticationManager" />
  <TypeSignature Language="F#" Value="type AuthenticationManager = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.Requests</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Verwaltet die Authentifizierungsmodule, die während des Clientauthentifizierungsvorgangs aufgerufen werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.AuthenticationManager> ist eine statische Klasse, die die von einer Anwendung verwendeten Authentifizierungs Module verwaltet. Wenn eine Anforderung an geschützte Ressourcen gerichtet ist, ruft der <xref:System.Net.AuthenticationManager> die <xref:System.Net.AuthenticationManager.Authenticate%2A>-Methode auf, um eine <xref:System.Net.Authorization> Instanz zu erhalten, die in nachfolgenden Anforderungen verwendet werden soll.  
  
 Die <xref:System.Net.AuthenticationManager> fragt jedes registrierte Authentifizierungs Modul ab, indem die <xref:System.Net.IAuthenticationModule.Authenticate%2A?displayProperty=nameWithType>-Methode für jedes Modul aufgerufen wird. Das erste Authentifizierungs Modul, das eine <xref:System.Net.Authorization> Instanz zurückgibt, wird verwendet, um die Anforderung zu authentifizieren.  
  
 Module, die die Authentifizierungs Typen Basic, Digest, Aushandlung, NTLM und Kerberos bereitstellen, werden standardmäßig mit dem-<xref:System.Net.AuthenticationManager> registriert. Zusätzliche Authentifizierungs Module, die die <xref:System.Net.IAuthenticationModule>-Schnittstelle implementieren, können mit der <xref:System.Net.AuthenticationManager.Register%2A>-Methode hinzugefügt werden. Authentifizierungs Module werden in der Reihenfolge aufgerufen, in der Sie der Liste hinzugefügt wurden.  
  
> [!NOTE]
>  Der Kerberos-und Aushandlungs Authentifizierungstyp wird unter Windows 95/98 oder Windows NT 4,0 nicht unterstützt.  
  
   
  
## Examples  
 [!code-cpp[System.Net.Authentication#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Authentication/CPP/custombasicauthentication.cpp#1)]
 [!code-csharp[System.Net.Authentication#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Authentication/CS/custombasicauthentication.cs#1)]
 [!code-vb[System.Net.Authentication#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Authentication/VB/custombasicauthentication.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/8bf0b428-5a21-4299-8d6e-bf8251fd978a">Änderungen an der NTLM-Authentifizierung für "HttpWebRequest" in Version 3,5 SP1</related>
  </Docs>
  <Members>
    <Member MemberName="Authenticate">
      <MemberSignature Language="C#" Value="public static System.Net.Authorization Authenticate (string challenge, System.Net.WebRequest request, System.Net.ICredentials credentials);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.Authorization Authenticate(string challenge, class System.Net.WebRequest request, class System.Net.ICredentials credentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.AuthenticationManager.Authenticate(System.String,System.Net.WebRequest,System.Net.ICredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Authenticate (challenge As String, request As WebRequest, credentials As ICredentials) As Authorization" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::Authorization ^ Authenticate(System::String ^ challenge, System::Net::WebRequest ^ request, System::Net::ICredentials ^ credentials);" />
      <MemberSignature Language="F#" Value="static member Authenticate : string * System.Net.WebRequest * System.Net.ICredentials -&gt; System.Net.Authorization" Usage="System.Net.AuthenticationManager.Authenticate (challenge, request, credentials)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Authorization</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="challenge" Type="System.String" />
        <Parameter Name="request" Type="System.Net.WebRequest" />
        <Parameter Name="credentials" Type="System.Net.ICredentials" />
      </Parameters>
      <Docs>
        <param name="challenge">Die Aufforderung, die von der Internetressource zurückgegeben wird.</param>
        <param name="request">Die <see cref="T:System.Net.WebRequest" />, von der die Authentifizierungsaufforderung initiiert wurde.</param>
        <param name="credentials">Die mit dieser Anforderung verknüpften <see cref="T:System.Net.ICredentials" />.</param>
        <summary>Ruft alle registrierten Authentifizierungsmodule auf, um das erste Modul zu bestimmen, das auf die Authentifizierungsanforderung antworten kann.</summary>
        <returns>Eine Instanz der <see cref="T:System.Net.Authorization" />-Klasse, die das Ergebnis des Authentifizierungsversuchs enthält. Wenn kein Authentifizierungsmodul verfügbar ist, das auf die Aufforderung antworten kann, gibt diese Methode <see langword="null" /> zurück.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Net.AuthenticationManager.Authenticate%2A>-Methode ruft die <xref:System.Net.IAuthenticationModule.Authenticate%2A?displayProperty=nameWithType>-Methode für jedes registrierte Authentifizierungs Modul auf, bis eines der Module mit einer <xref:System.Net.Authorization> Instanz antwortet.  
  
 Die erste <xref:System.Net.Authorization> zurückgegebene Instanz wird verwendet, um die Anforderung zu authentifizieren. Wenn ein Authentifizierungs Modul die Anforderung nicht authentifizieren kann, gibt die <xref:System.Net.AuthenticationManager.Authenticate%2A> Methode `null`zurück.  
  
 Authentifizierungs Module werden in der Reihenfolge aufgerufen, in der Sie beim <xref:System.Net.AuthenticationManager>registriert sind.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="challenge" /> ist <see langword="null" />.  
  
- oder - 
 <paramref name="request" /> ist <see langword="null" />.  
  
- oder - 
 <paramref name="credentials" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CredentialPolicy">
      <MemberSignature Language="C#" Value="public static System.Net.ICredentialPolicy CredentialPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.ICredentialPolicy CredentialPolicy" />
      <MemberSignature Language="DocId" Value="P:System.Net.AuthenticationManager.CredentialPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CredentialPolicy As ICredentialPolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::ICredentialPolicy ^ CredentialPolicy { System::Net::ICredentialPolicy ^ get(); void set(System::Net::ICredentialPolicy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CredentialPolicy : System.Net.ICredentialPolicy with get, set" Usage="System.Net.AuthenticationManager.CredentialPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.ICredentialPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anmeldeinformationen-Richtline ab, die für mit der <see cref="T:System.Net.HttpWebRequest" />-Klasse durchgeführte Ressourcenanforderungen verwendet werden soll, oder legt diese fest.</summary>
        <value>Ein Objekt, das die <see cref="T:System.Net.ICredentialPolicy" />-Schnittstelle implementiert und bestimmt, ob mit Anforderungen Anmeldeinformationen gesendet werden. Der Standardwert ist <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Richtlinie für Anmelde Informationen legt fest, ob beim Senden einer Anforderung für eine Netzwerkressource, z. b. der Inhalt einer Webseite, Anmelde Informationen gesendet werden sollen. Wenn Anmelde Informationen gesendet werden, können Server, die Client Authentifizierung erfordern, versuchen, den Client zu authentifizieren, wenn die Anforderung empfangen wird, anstatt eine Antwort zu senden, die angibt, dass die Anmelde Informationen des Clients erforderlich sind. Dies spart zwar einen Roundtrip zum Server, dies muss jedoch gegen das Sicherheitsrisiko abgewogen werden, das beim Senden von Anmelde Informationen über das Netzwerk besteht. Wenn der Zielserver keine Client Authentifizierung erfordert, ist es am besten, keine Anmelde Informationen zu senden.  
  
 Die Richtlinie für Anmelde Informationen wird nur für Anforderungen aufgerufen, die Anmelde Informationen angeben, oder ein <xref:System.Net.WebProxy> Objekt, das die Anmelde Informationen angibt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird das Festlegen der Richtlinie für Anmelde Informationen veranschaulicht.  
  
 [!code-cpp[NclCredPolicy#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCredPolicy/CPP/NCLCredPolicy.cpp#2)]
 [!code-csharp[NclCredPolicy#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCredPolicy/CS/websample.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomTargetNameDictionary">
      <MemberSignature Language="C#" Value="public static System.Collections.Specialized.StringDictionary CustomTargetNameDictionary { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Specialized.StringDictionary CustomTargetNameDictionary" />
      <MemberSignature Language="DocId" Value="P:System.Net.AuthenticationManager.CustomTargetNameDictionary" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CustomTargetNameDictionary As StringDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::Specialized::StringDictionary ^ CustomTargetNameDictionary { System::Collections::Specialized::StringDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CustomTargetNameDictionary : System.Collections.Specialized.StringDictionary" Usage="System.Net.AuthenticationManager.CustomTargetNameDictionary" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Wörterbuch ab, das SPNs (Service Principal Names) enthält. Diese werden während der Kerberos-Authentifizierung zum Identifizieren von Hosts für Anforderungen verwendet, die mit <see cref="T:System.Net.WebRequest" /> und den abgeleiteten Klassen ausgeführt werden.</summary>
        <value>Ein nicht schreibgeschütztes <see cref="T:System.Collections.Specialized.StringDictionary" />, das die SPN-Werte für aus Hostinformationen bestehende Schlüssel enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein SPN ist ein Name, mit dem ein Client eine Instanz eines Dienstanbieter oder einer Anwendung auf einem Server für die gegenseitige Authentifizierung eindeutig identifiziert. Die gegenseitige Authentifizierung wird standardmäßig angefordert, und Sie können Sie anfordern, indem Sie <xref:System.Net.WebRequest.AuthenticationLevel%2A?displayProperty=nameWithType> auf <xref:System.Net.Security.AuthenticationLevel.MutualAuthRequired> in Ihrer Anforderung festlegen.  
  
 Wenn ein <xref:System.Net.WebRequest> eine gegenseitige Authentifizierung erfordert, muss der SPN für das Ziel vom Client bereitgestellt werden. Wenn Sie den SPN kennen, können Sie ihn vor dem Senden der Anforderung dem <xref:System.Net.AuthenticationManager.CustomTargetNameDictionary%2A> hinzufügen. Wenn Sie diesem Wörterbuch keine SPN-Informationen hinzugefügt haben, verwendet das <xref:System.Net.AuthenticationManager> die <xref:System.Net.WebRequest.RequestUri%2A>-Methode, um den wahrscheinlichsten SPN zu erstellen. Dabei handelt es sich jedoch um einen berechneten Wert, der möglicherweise falsch ist. Wenn die gegenseitige Authentifizierung versucht wird und fehlschlägt, können Sie das Wörterbuch überprüfen, um den berechneten SPN zu ermitteln. Ein SPN wird nicht in das Wörterbuch eingegeben, wenn das Authentifizierungsprotokoll keine gegenseitige Authentifizierung unterstützt.  
  
 Um diesem Wörterbuch einen SPN-Wert hinzuzufügen, verwenden Sie den <xref:System.Uri.AbsoluteUri%2A> der <xref:System.Net.WebRequest.RequestUri%2A> als Schlüssel. Intern wird der Schlüssel gekürzt, um die <xref:System.Uri.Scheme%2A>, <xref:System.Uri.Host%2A>und die <xref:System.Uri.Port%2A> einzubeziehen, wenn dies nicht der Standardport ist.  
  
> [!NOTE]
>  Der Zugriff auf die Methoden und Eigenschaften des <xref:System.Net.AuthenticationManager.CustomTargetNameDictionary%2A> erfordert uneingeschränkte <xref:System.Net.WebPermission>.  
  
> [!NOTE]
>  Wenn die Kerberos-Authentifizierung über einen Proxy durchgeführt wird, müssen sowohl der Proxy als auch der ultimative Hostname in einen SPN aufgelöst werden. Die Proxy Namensauflösung wird durch ein Timeout geschützt. Für die Auflösung des Ultimate-Host Namens zu einem SPN ist eine DNS-Suche erforderlich, und diesem Vorgang ist kein Timeout direkt zugeordnet. Daher kann es länger dauern, bis synchrone Vorgänge ablaufen. Um dies zu umgehen, fügen Sie das URI-Präfix des ultimativen Hosts zum SPN-Cache hinzu, bevor Sie Anforderungen an den Dienst senden.  
  
 Version 3.5 SP1 gibt jetzt standardmäßig den Hostnamen in der Anforderungs-URL in der SPN im NTLM-Authentifizierungsaustausch (NT LAN Manager) an, wenn die <xref:System.Net.AuthenticationManager.CustomTargetNameDictionary%2A>-Eigenschaft nicht festgelegt ist. Der Hostname in der Anforderungs-URL kann vom in <xref:System.Net.HttpRequestHeader?displayProperty=nameWithType> in der Clientanforderung angegebenen Hostheader abweichen. Der Hostname in der Anforderungs-URL kann vom tatsächlichen Hostnamen des Servers, dem Computernamen des Servers, der IP-Adresse des Computers oder der Loopbackadresse abweichen. In diesen Fällen schlägt die Authentifizierungsanforderung in Windows fehl. Um das Problem zu beheben, müssen Sie Windows möglicherweise Benachrichtigen, dass der Hostname, der in der Anforderungs-URL in der Client Anforderung verwendet wird (z. b. ""), tatsächlich ein alternativer Name für den lokalen Computer ist.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie der Inhalt der <xref:System.Net.AuthenticationManager.CustomTargetNameDictionary%2A>angezeigt wird.  
  
 [!code-cpp[NclCredPolicy#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCredPolicy/CPP/NCLCredPolicy.cpp#5)]
 [!code-csharp[NclCredPolicy#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCredPolicy/CS/websample.cs#5)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/8bf0b428-5a21-4299-8d6e-bf8251fd978a">Änderungen an der NTLM-Authentifizierung für "HttpWebRequest" in Version 3,5 SP1</related>
      </Docs>
    </Member>
    <Member MemberName="PreAuthenticate">
      <MemberSignature Language="C#" Value="public static System.Net.Authorization PreAuthenticate (System.Net.WebRequest request, System.Net.ICredentials credentials);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.Authorization PreAuthenticate(class System.Net.WebRequest request, class System.Net.ICredentials credentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.AuthenticationManager.PreAuthenticate(System.Net.WebRequest,System.Net.ICredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PreAuthenticate (request As WebRequest, credentials As ICredentials) As Authorization" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::Authorization ^ PreAuthenticate(System::Net::WebRequest ^ request, System::Net::ICredentials ^ credentials);" />
      <MemberSignature Language="F#" Value="static member PreAuthenticate : System.Net.WebRequest * System.Net.ICredentials -&gt; System.Net.Authorization" Usage="System.Net.AuthenticationManager.PreAuthenticate (request, credentials)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Authorization</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.WebRequest" />
        <Parameter Name="credentials" Type="System.Net.ICredentials" />
      </Parameters>
      <Docs>
        <param name="request">Eine <see cref="T:System.Net.WebRequest" /> an eine Internetressource.</param>
        <param name="credentials">Die mit dieser Anforderung verknüpften <see cref="T:System.Net.ICredentials" />.</param>
        <summary>Führt die Vorauthentifizierung einer Anforderung durch.</summary>
        <returns>Eine Instanz der <see cref="T:System.Net.Authorization" />-Klasse, wenn die Anforderung vorauthentifiziert werden kann, andernfalls <see langword="null" />. Wenn <paramref name="credentials" /> gleich <see langword="null" /> ist, gibt die Methode <see langword="null" /> zurück.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn das Authentifizierungs Modul die Anforderung vorab authentifizieren kann, gibt die <xref:System.Net.AuthenticationManager.PreAuthenticate%2A> Methode eine Authentifizierungs Instanz zurück und sendet die Autorisierungs Informationen vorzeitig an den Server, anstatt darauf zu warten, dass die Ressource eine Abfrage ausgibt. Dieses Verhalten wird im Abschnitt 3,3 von RFC 2617 (http-Authentifizierung: Standard Authentifizierung und Digest-Zugriffs Authentifizierung) beschrieben. Authentifizierungs Module, die die Vorauthentifizierung unterstützen, ermöglichen es Clients, die Server Effizienz zu verbessern, indem zusätzliche Roundtrips vermieden werden.  
  
 Autorisierungs Module, die Anforderungen vorab authentifizieren können, legen die <xref:System.Net.IAuthenticationModule.CanPreAuthenticate%2A?displayProperty=nameWithType>-Eigenschaft auf `true`fest.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="request" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public static void Register (System.Net.IAuthenticationModule authenticationModule);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Register(class System.Net.IAuthenticationModule authenticationModule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.AuthenticationManager.Register(System.Net.IAuthenticationModule)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Register (authenticationModule As IAuthenticationModule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Register(System::Net::IAuthenticationModule ^ authenticationModule);" />
      <MemberSignature Language="F#" Value="static member Register : System.Net.IAuthenticationModule -&gt; unit" Usage="System.Net.AuthenticationManager.Register authenticationModule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationModule" Type="System.Net.IAuthenticationModule" />
      </Parameters>
      <Docs>
        <param name="authenticationModule">Das <see cref="T:System.Net.IAuthenticationModule" />, das beim Authentifizierungsmanager registriert werden soll.</param>
        <summary>Registriert ein Authentifizierungsmodul beim Authentifizierungsmanager.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Net.AuthenticationManager.Register%2A>-Methode fügt dem Ende der Liste der Module, die von der <xref:System.Net.AuthenticationManager.Authenticate%2A>-Methode aufgerufen werden, Authentifizierungs Module hinzu. Authentifizierungs Module werden in der Reihenfolge aufgerufen, in der Sie der Liste hinzugefügt wurden. Wenn ein Modul mit dem gleichen <xref:System.Net.IAuthenticationModule.AuthenticationType%2A> bereits registriert ist, entfernt diese Methode das registrierte Modul und fügt `authenticationModule` am Ende der Liste hinzu.  
  
   
  
## Examples  
 Im folgenden Beispiel wird ein Authentifizierungs Modul beim Authentifizierungs-Manager registriert. Ein umfassendes Beispiel finden Sie in der <xref:System.Net.AuthenticationManager>-Klasse.  
  
 [!code-cpp[System.Net.Sockets.Authentication#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.Authentication/CPP/custombasicauthentication.cpp#2)]
 [!code-csharp[System.Net.Sockets.Authentication#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.Authentication/CS/custombasicauthentication.cs#2)]
 [!code-vb[System.Net.Sockets.Authentication#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.Authentication/VB/custombasicauthentication.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="authenticationModule" /> ist <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">zum Ausführen von nicht verwaltetem Code. Zugeordnete Enumeration: <see cref="T:System.Security.Permissions.SecurityPermissionFlag" /></permission>
      </Docs>
    </Member>
    <Member MemberName="RegisteredModules">
      <MemberSignature Language="C#" Value="public static System.Collections.IEnumerator RegisteredModules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.IEnumerator RegisteredModules" />
      <MemberSignature Language="DocId" Value="P:System.Net.AuthenticationManager.RegisteredModules" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property RegisteredModules As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::IEnumerator ^ RegisteredModules { System::Collections::IEnumerator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RegisteredModules : System.Collections.IEnumerator" Usage="System.Net.AuthenticationManager.RegisteredModules" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Liste der Authentifizierungsmodule ab, die beim Authentifizierungsmanager registriert sind.</summary>
        <value>Ein <see cref="T:System.Collections.IEnumerator" />, mit dem die registrierten Authentifizierungsmodule gelesen werden können.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Net.AuthenticationManager.RegisteredModules%2A>-Eigenschaft stellt eine <xref:System.Collections.IEnumerator>-Instanz bereit, die das Lesen der Liste registrierter Authentifizierungs Module ermöglicht. Die <xref:System.Net.AuthenticationManager.Register%2A>-Methode fügt der Liste Module hinzu, und die <xref:System.Net.AuthenticationManager.Unregister%2A>-Methode entfernt Module daraus.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die <xref:System.Net.AuthenticationManager.RegisteredModules%2A>-Eigenschaft verwendet, um eine Liste der Authentifizierungs Module, die beim Authentifizierungs-Manager registriert sind, zu erhalten. Ein umfassendes Beispiel finden Sie in der <xref:System.Net.AuthenticationManager>-Klasse.  
  
 [!code-cpp[System.Net.Authentication#8](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Authentication/CPP/custombasicauthentication.cpp#8)]
 [!code-csharp[System.Net.Authentication#8](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Authentication/CS/custombasicauthentication.cs#8)]
 [!code-vb[System.Net.Authentication#8](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Authentication/VB/custombasicauthentication.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Unregister">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Entfernt die Authentifizierungsmodule aus der Liste der registrierten Module.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Unregister">
      <MemberSignature Language="C#" Value="public static void Unregister (System.Net.IAuthenticationModule authenticationModule);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Unregister(class System.Net.IAuthenticationModule authenticationModule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.AuthenticationManager.Unregister(System.Net.IAuthenticationModule)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Unregister (authenticationModule As IAuthenticationModule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unregister(System::Net::IAuthenticationModule ^ authenticationModule);" />
      <MemberSignature Language="F#" Value="static member Unregister : System.Net.IAuthenticationModule -&gt; unit" Usage="System.Net.AuthenticationManager.Unregister authenticationModule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationModule" Type="System.Net.IAuthenticationModule" />
      </Parameters>
      <Docs>
        <param name="authenticationModule">Das <see cref="T:System.Net.IAuthenticationModule" />, das aus der Liste der registrierten Module entfernt werden soll.</param>
        <summary>Entfernt das angegebene Authentifizierungsmodul aus der Liste der registrierten Module.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Net.AuthenticationManager.Unregister%2A>-Methode entfernt das angegebene Authentifizierungs Modul aus der Liste der Authentifizierungs Module, die von der <xref:System.Net.AuthenticationManager.Authenticate%2A>-Methode aufgerufen werden. Das Modul muss der Liste mithilfe der <xref:System.Net.AuthenticationManager.Register%2A>-Methode hinzugefügt worden sein, bevor es aus der Liste entfernt werden kann.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die <xref:System.Net.AuthenticationManager.Unregister%2A>-Methode verwendet, um das angegebene Authentifizierungs Modul aus der Liste der registrierten Module zu entfernen. Ein umfassendes Beispiel finden Sie in der <xref:System.Net.AuthenticationManager>-Klasse.  
  
 [!code-cpp[System.Net.Sockets.Authentication#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.Authentication/CPP/custombasicauthentication.cpp#2)]
 [!code-csharp[System.Net.Sockets.Authentication#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.Authentication/CS/custombasicauthentication.cs#2)]
 [!code-vb[System.Net.Sockets.Authentication#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.Authentication/VB/custombasicauthentication.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="authenticationModule" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Das angegebene <see cref="T:System.Net.IAuthenticationModule" /> ist nicht registriert.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">zum Ausführen von nicht verwaltetem Code. Zugeordnete Enumeration: <see cref="T:System.Security.Permissions.SecurityPermissionFlag" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Unregister">
      <MemberSignature Language="C#" Value="public static void Unregister (string authenticationScheme);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Unregister(string authenticationScheme) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.AuthenticationManager.Unregister(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Unregister (authenticationScheme As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unregister(System::String ^ authenticationScheme);" />
      <MemberSignature Language="F#" Value="static member Unregister : string -&gt; unit" Usage="System.Net.AuthenticationManager.Unregister authenticationScheme" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationScheme" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="authenticationScheme">Das Authentifizierungsschema des zu entfernenden Moduls.</param>
        <summary>Entfernt die Authentifizierungsmodule mit dem angegebenen Authentifizierungsschema aus der Liste der registrierten Module.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Net.AuthenticationManager.Unregister%2A>-Methode entfernt das Authentifizierungs Modul mit dem angegebenen Authentifizierungsschema aus der Liste der Authentifizierungs Module, die von der <xref:System.Net.AuthenticationManager.Authenticate%2A>-Methode aufgerufen werden. Das Modul muss der Liste mithilfe der <xref:System.Net.AuthenticationManager.Register%2A>-Methode hinzugefügt worden sein, bevor es aus der Liste entfernt werden kann.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die <xref:System.Net.AuthenticationManager.Unregister%2A>-Methode verwendet, um ein Authentifizierungs Modul mit dem angegebenen Authentifizierungsschema aus der Liste der registrierten Module zu entfernen.  
  
 [!code-cpp[AuthenticationManager_UnRegister2#2](~/samples/snippets/cpp/VS_Snippets_Remoting/AuthenticationManager_UnRegister2/CPP/authenticationmanager_unregister2.cpp#2)]
 [!code-csharp[AuthenticationManager_UnRegister2#2](~/samples/snippets/csharp/VS_Snippets_Remoting/AuthenticationManager_UnRegister2/CS/authenticationmanager_unregister2.cs#2)]
 [!code-vb[AuthenticationManager_UnRegister2#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/AuthenticationManager_UnRegister2/VB/authenticationmanager_unregister2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="authenticationScheme" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Ein Modul ist für dieses Authentifizierungsschema nicht registriert.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">zum Ausführen von nicht verwaltetem Code. Zugeordnete Enumeration: <see cref="T:System.Security.Permissions.SecurityPermissionFlag" /></permission>
      </Docs>
    </Member>
  </Members>
</Type>
