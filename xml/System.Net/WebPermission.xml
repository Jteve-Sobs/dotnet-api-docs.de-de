<Type Name="WebPermission" FullName="System.Net.WebPermission">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0a232d501fdb3e1d6d03ecec61b9d063b81ad890" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37642586" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class WebPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit WebPermission extends System.Security.CodeAccessPermission implements class System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="DocId" Value="T:System.Net.WebPermission" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WebPermission&#xA;Inherits CodeAccessPermission&#xA;Implements IUnrestrictedPermission" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebPermission sealed : System::Security::CodeAccessPermission, System::Security::Permissions::IUnrestrictedPermission" />
  <TypeSignature Language="F#" Value="type WebPermission = class&#xA;    inherit CodeAccessPermission&#xA;    interface IUnrestrictedPermission" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.CodeAccessPermission</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Permissions.IUnrestrictedPermission</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Steuert die Zugriffsrechte für den Zugriff auf HTTP-Internetressourcen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebPermission> Stellt einen Satz von Methoden und Eigenschaften zum Steuern des Zugriffs auf Ressourcen im Internet bereit. Können Sie eine <xref:System.Net.WebPermission> eingeschränkter oder uneingeschränkter Zugriff auf die Ressource, auf der Grundlage der <xref:System.Security.Permissions.PermissionState> , wird festgelegt, wenn die <xref:System.Net.WebPermission> erstellt wird.  
  
 Erstellen Sie eine <xref:System.Net.WebPermission> Instanz durch Aufrufen des Konstruktors mit einem der folgenden Parametersätze:  
  
-   Keine Parameter. Die Standardeinstellung für <xref:System.Security.Permissions.PermissionState> ist <xref:System.Security.Permissions.PermissionState.None>.  
  
-   Ein <xref:System.Security.Permissions.PermissionState>. Geben Sie entweder <xref:System.Security.Permissions.PermissionState.Unrestricted> auf einen beliebigen URI in der Zielklasse verwendet werden können oder <xref:System.Security.Permissions.PermissionState.None> nur URIs erlauben, die Sie mithilfe des angeben der <xref:System.Net.WebPermission.AddPermission%2A> Methode.  
  
-   Ein <xref:System.Net.NetworkAccess> Wert und eine URI-Zeichenfolge. Der angegebene URI verfügt, von erteilten Berechtigungen die <xref:System.Net.NetworkAccess> Wert.  
  
-   Ein <xref:System.Net.NetworkAccess> Bezeichner und regulären URI-Ausdruck.  
  
 Die <xref:System.Net.WebPermission.ConnectList%2A> und <xref:System.Net.WebPermission.AcceptList%2A> enthalten die URIs, die für die Sie Zugriffsberechtigungen erteilt. Verwenden Sie zum Hinzufügen eines URI zu einer der beiden Listen <xref:System.Net.WebPermission.AddPermission%2A>. Wenn Sie übergeben <xref:System.Net.NetworkAccess.Accept> als die <xref:System.Net.NetworkAccess> Parameter, der URI wird hinzugefügt der <xref:System.Net.WebPermission.AcceptList%2A>. <xref:System.Net.WebPermission> lässt Verbindungen mit der Zielklasse mit übereinstimmenden URIs der <xref:System.Net.WebPermission.AcceptList%2A>.  
  
> [!CAUTION]
>  Zum Verweigern von Zugriff auf eine Internetressource müssen Sie den Zugriff auf alle möglichen Pfade auf diese Ressource verweigert. Dies erfordert das Aufrufen <xref:System.Net.WebPermission.%23ctor%2A?displayProperty=nameWithType> mit State-Parameter festgelegt <xref:System.Security.CodeAccessPermission.Deny%2A>. Ein besserer Ansatz ist nur für die jeweilige Ressource erlauben. Weitere Informationen zu diesem Thema finden Sie in der [NIB: Verwenden der Deny-Methode](http://msdn.microsoft.com/library/6b4d2e01-c504-4ac3-b50e-d6f5e7f5df25) Thema.  
  
> [!NOTE]
>  Sie müssen den Zugriff nur den kanonischen Pfad Ressource zu verweigern. Es ist nicht erforderlich, alle Path syntaktische Varianten verwenden.  
  
> [!NOTE]
>  Benutzer und -Port-Informationen werden entfernt, von der <xref:System.Uri> vor dem Vergleich mit dem regulären Ausdruck-Argument, die an die <xref:System.Net.WebPermission.%23ctor%28System.Net.NetworkAccess%2CSystem.Text.RegularExpressions.Regex%29> Konstruktor. Wenn der reguläre Ausdruck, Benutzerinformationen oder die Standardportnummer, und alle eingehenden enthält <xref:System.Uri>s kann nicht dem regulären Ausdruck übereinstimmen.  
  
   
  
## Examples  
 Im folgende Beispiel wird veranschaulicht, wie erstellen Sie eine neue Instanz der <xref:System.Net.WebPermission> mithilfe einer <xref:System.Text.RegularExpressions.Regex>. Weitere Hosts hinzugefügt werden, für das Verbinden, und akzeptieren Sie die Liste der <xref:System.Net.WebPermission>. Schließlich verbinden und akzeptieren Sie die Liste in der Konsole angezeigt werden.  
  
 [!code-cpp[WebPermission_Regex#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_Regex/CPP/regex.cpp#1)]
 [!code-csharp[WebPermission_Regex#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_Regex/CS/regex.cs#1)]
 [!code-vb[WebPermission_Regex#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_Regex/VB/regex.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.CodeAccessPermission" />
    <altmember cref="T:System.Security.Permissions.PermissionState" />
    <altmember cref="T:System.Net.NetworkAccess" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Erstellt eine neue Instanz der <see cref="T:System.Net.WebPermission" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebPermission ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebPermission();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Erstellt eine neue Instanz der <see cref="T:System.Net.WebPermission" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Erstellt eine neue Instanz der <xref:System.Net.WebPermission>-Klasse. Dieser Konstruktor erstellt eine leere Berechtigung, die keine Rechte gewährt.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.WebPermission.IsUnrestricted" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebPermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebPermission(System::Security::Permissions::PermissionState state);" />
      <MemberSignature Language="F#" Value="new System.Net.WebPermission : System.Security.Permissions.PermissionState -&gt; System.Net.WebPermission" Usage="new System.Net.WebPermission state" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state">Ein <see cref="T:System.Security.Permissions.PermissionState" />-Wert.</param>
        <summary>Erstellt eine neue Instanz der <see cref="T:System.Net.WebPermission" />-Klasse, die alle Anforderungen entweder übergibt oder ablehnt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Wert des der `state` -Parameter ist entweder <xref:System.Security.Permissions.PermissionState.None?displayProperty=nameWithType> oder <xref:System.Security.Permissions.PermissionState.Unrestricted?displayProperty=nameWithType>bzw. Rückgabe vollständig eingeschränkt oder vollständig uneingeschränkten Zugriff auf alle Security-Variablen. Bei Angabe von <xref:System.Security.Permissions.PermissionState.None?displayProperty=nameWithType>, und Sie Zugriff auf den einzelnen URIs gewähren können, mithilfe von <xref:System.Net.WebPermission.AddPermission%2A>.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt eine Instanz von <xref:System.Net.WebPermission> und gibt die Zugriffsrechte auf bestimmte URLs.  
  
 [!code-cpp[WebPermission_Copy#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_Copy/CPP/webpermission_copy.cpp#1)]
 [!code-csharp[WebPermission_Copy#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_Copy/CS/webpermission_copy.cs#1)]
 [!code-vb[WebPermission_Copy#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_Copy/VB/webpermission_copy.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Security.Permissions.PermissionState.Unrestricted" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebPermission (System.Net.NetworkAccess access, string uriString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.NetworkAccess access, string uriString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (access As NetworkAccess, uriString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebPermission(System::Net::NetworkAccess access, System::String ^ uriString);" />
      <MemberSignature Language="F#" Value="new System.Net.WebPermission : System.Net.NetworkAccess * string -&gt; System.Net.WebPermission" Usage="new System.Net.WebPermission (access, uriString)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="access" Type="System.Net.NetworkAccess" />
        <Parameter Name="uriString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="access">Ein NetworkAccess-Wert, der die Art des zu gewährenden Zugriffs für den angegebenen URI angibt. <see cref="F:System.Net.NetworkAccess.Accept" /> gibt an, dass die Anwendung Verbindungen über das Internet für eine lokale Ressource zulassen darf. <see cref="F:System.Net.NetworkAccess.Connect" /> gibt an, dass die Anwendung Verbindungen mit bestimmten Internetressourcen herstellen darf.</param>
        <param name="uriString">Eine URI-Zeichenfolge, auf die Zugriffsrechte erteilt werden.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.WebPermission" />-Klasse mit den angegebenen Zugriffsrechten für den angegebenen URI.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor initialisiert ein <xref:System.Net.WebPermission> und dessen die Zielberechtigung, eine Remote-Server-Verbindung, oder übernehmen Sie eine Verbindung mit dem URI beschriebenen gewährt der `uriString` Parameter.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt eine neue Instanz der <xref:System.Net.WebPermission> mit Connect-Berechtigungen für den angegebenen URI.  
  
 [!code-cpp[WebPermission_Union#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_Union/CPP/webpermission_union.cpp#1)]
 [!code-csharp[WebPermission_Union#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_Union/CS/webpermission_union.cs#1)]
 [!code-vb[WebPermission_Union#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_Union/VB/webpermission_union.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="uriString" /> ist <see langword="null" />.</exception>
        <altmember cref="T:System.Text.RegularExpressions.Regex" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebPermission (System.Net.NetworkAccess access, System.Text.RegularExpressions.Regex uriRegex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.NetworkAccess access, class System.Text.RegularExpressions.Regex uriRegex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (access As NetworkAccess, uriRegex As Regex)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebPermission(System::Net::NetworkAccess access, System::Text::RegularExpressions::Regex ^ uriRegex);" />
      <MemberSignature Language="F#" Value="new System.Net.WebPermission : System.Net.NetworkAccess * System.Text.RegularExpressions.Regex -&gt; System.Net.WebPermission" Usage="new System.Net.WebPermission (access, uriRegex)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="access" Type="System.Net.NetworkAccess" />
        <Parameter Name="uriRegex" Type="System.Text.RegularExpressions.Regex" />
      </Parameters>
      <Docs>
        <param name="access">Ein <see cref="T:System.Net.NetworkAccess" />-Wert, der die Art des zu gewährenden Zugriffs für den angegebenen URI angibt. <see cref="F:System.Net.NetworkAccess.Accept" /> gibt an, dass die Anwendung Verbindungen über das Internet für eine lokale Ressource zulassen darf. <see cref="F:System.Net.NetworkAccess.Connect" /> gibt an, dass die Anwendung Verbindungen mit bestimmten Internetressourcen herstellen darf.</param>
        <param name="uriRegex">Ein regulärer Ausdruck, der den URI beschreibt, auf den Zugriff gewährt werden soll.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.WebPermission" />-Klasse mit den angegebenen Zugriffsrechten für den angegebenen regulären URI-Ausdruck.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor initialisiert ein <xref:System.Net.WebPermission> und dessen die Zielberechtigung, eine Remote-Server-Verbindung, oder übernehmen Sie eine Verbindung mit dem URI beschriebenen gewährt der `uriRegex` Parameter.  
  
> [!NOTE]
>  Es wird empfohlen, die Sie erstellen `uriRegex` mithilfe der <xref:System.Text.RegularExpressions.RegexOptions.IgnoreCase?displayProperty=nameWithType>, <xref:System.Text.RegularExpressions.RegexOptions.Compiled?displayProperty=nameWithType>, und <xref:System.Text.RegularExpressions.RegexOptions.Singleline?displayProperty=nameWithType> Flags.  
  
> [!NOTE]
>  Eine mögliche URI-Zeichenfolge anhand der Liste der relevanten regulären Ausdrücken aktiviert ist (<xref:System.Net.WebPermission.AcceptList%2A> oder <xref:System.Net.WebPermission.ConnectList%2A>) gibt es zwei Möglichkeiten. Zunächst wird der mögliche URI-Zeichenfolge anhand der entsprechenden Liste überprüft. Klicken Sie dann, wenn keine Übereinstimmung vorhanden ist, der mögliche URI-Zeichenfolge wird konvertiert in eine <xref:System.Uri> und der entsprechenden Liste verglichen.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt eine neue Instanz der <xref:System.Net.WebPermission> mit Connect-Berechtigungen für den angegebenen <xref:System.Text.RegularExpressions.Regex?displayProperty=nameWithType>.  
  
 [!code-cpp[WebPermission_Constructor4#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_Constructor4/CPP/webpermission_constructor4.cpp#1)]
 [!code-csharp[WebPermission_Constructor4#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_Constructor4/CS/webpermission_constructor4.cs#1)]
 [!code-vb[WebPermission_Constructor4#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_Constructor4/VB/webpermission_constructor4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.RegularExpressions.Regex" />
      </Docs>
    </Member>
    <Member MemberName="AcceptList">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator AcceptList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerator AcceptList" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebPermission.AcceptList" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AcceptList As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IEnumerator ^ AcceptList { System::Collections::IEnumerator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AcceptList : System.Collections.IEnumerator" Usage="System.Net.WebPermission.AcceptList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Diese Eigenschaft gibt eine Enumeration einer einzelnen Akzeptierungsberechtigung zurück, die in dieser <see cref="T:System.Net.WebPermission" /> enthalten ist. Mögliche, in der zurückgegebenen Enumeration enthaltene Objekttypen sind <see cref="T:System.String" /> und <see cref="T:System.Text.RegularExpressions.Regex" />.</summary>
        <value>Die <see cref="T:System.Collections.IEnumerator" />-Schnittstelle, die Akzeptierungsberechtigungen enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ruft eine Liste von lokalen Ressourcen, die von diesem zulässig <xref:System.Net.WebPermission>. Die Klasse, die auf die Sie angewendet haben <xref:System.Net.WebPermission> nur berechtigt, eine eingehende Verbindung auf lokale Ressourcen finden Sie in dieser Liste empfangen.  
  
> [!NOTE]
>  Sie können diese Liste mit URIs hinzufügen <xref:System.Net.WebPermission.AddPermission%2A>.  
  
> [!NOTE]
>  Eine mögliche URI-Zeichenfolge anhand der Liste der relevanten regulären Ausdrücken aktiviert ist (<xref:System.Net.WebPermission.AcceptList%2A> oder <xref:System.Net.WebPermission.ConnectList%2A>) gibt es zwei Möglichkeiten. Zunächst wird der mögliche URI-Zeichenfolge anhand der entsprechenden Liste überprüft. Klicken Sie dann, wenn keine Übereinstimmung vorhanden ist, der mögliche URI-Zeichenfolge wird konvertiert in eine <xref:System.Uri> und der entsprechenden Liste verglichen.  
  
   
  
## Examples  
 Das folgende Beispiel gibt die URLs in die <xref:System.Net.WebPermission.AcceptList%2A> an die Konsole.  
  
 [!code-cpp[WebPermission_AcceptConnectList#2](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_AcceptConnectList/CPP/webpermission_acceptconnectlist.cpp#2)]
 [!code-csharp[WebPermission_AcceptConnectList#2](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_AcceptConnectList/CS/webpermission_acceptconnectlist.cs#2)]
 [!code-vb[WebPermission_AcceptConnectList#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_AcceptConnectList/VB/webpermission_acceptconnectlist.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddPermission">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Fügt der aktuellen <see cref="T:System.Net.WebPermission" /> den angegebenen URI mit den angegebenen Zugriffsrechten hinzu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddPermission">
      <MemberSignature Language="C#" Value="public void AddPermission (System.Net.NetworkAccess access, string uriString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPermission(valuetype System.Net.NetworkAccess access, string uriString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPermission (access As NetworkAccess, uriString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPermission(System::Net::NetworkAccess access, System::String ^ uriString);" />
      <MemberSignature Language="F#" Value="member this.AddPermission : System.Net.NetworkAccess * string -&gt; unit" Usage="webPermission.AddPermission (access, uriString)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="access" Type="System.Net.NetworkAccess" />
        <Parameter Name="uriString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="access">Ein <see cref="T:System.Net.NetworkAccess" />, der die Zugriffsrechte angibt, die dem URI gewährt werden.</param>
        <param name="uriString">Eine Zeichenfolge, die den URI beschreibt, dem Zugriffsrechte erteilt werden.</param>
        <summary>Fügt der aktuellen <see cref="T:System.Net.WebPermission" /> die angegebene URI-Zeichenfolge mit den angegebenen Zugriffsrechten hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie angegeben haben <xref:System.Security.Permissions.PermissionState.None> als die <xref:System.Security.Permissions.PermissionState>, verwenden Sie <xref:System.Net.WebPermission.AddPermission%2A> gestatten die Verwendung von `uriString` in der Zielklasse. Die Weise `uriString` kann verwendet werden, die vom Ziel-Klasse wird angegeben, indem `access`. Geben Sie <xref:System.Net.NetworkAccess.Accept> als Zugriffsparameter durch angegebenen URI durch Hinzufügen der `uriString` Parameter, um die Liste der URI Zeichenfolgen akzeptiert, oder geben Sie <xref:System.Net.NetworkAccess.Connect> wie die Parameter, um die Liste der URI den URI hinzu, eine Verbindung herstellen Zeichenfolgen.  
  
> [!NOTE]
>  Aufrufen von <xref:System.Net.WebPermission.AddPermission%2A> auf <xref:System.Security.Permissions.PermissionState.Unrestricted> <xref:System.Net.WebPermission> hat keine Auswirkungen, da es sich bei allen URIs Berechtigung erteilt wird.  
  
> [!NOTE]
>  Eine mögliche URI-Zeichenfolge anhand der Liste der relevanten regulären Ausdrücken aktiviert ist (<xref:System.Net.WebPermission.AcceptList%2A> oder <xref:System.Net.WebPermission.ConnectList%2A>) gibt es zwei Möglichkeiten. Zunächst wird der mögliche URI-Zeichenfolge anhand der entsprechenden Liste überprüft. Klicken Sie dann, wenn keine Übereinstimmung vorhanden ist, der mögliche URI-Zeichenfolge wird konvertiert in eine <xref:System.Uri> und der entsprechenden Liste verglichen.  
  
   
  
## Examples  
 Im folgende Beispiel wird veranschaulicht, über die Zugriffsrechte für bestimmte URL-Zeichenfolgen hinzufügen.  
  
 [!code-cpp[WebPermission_Intersect#2](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_Intersect/CPP/webpermission_intersect.cpp#2)]
 [!code-csharp[WebPermission_Intersect#2](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_Intersect/CS/webpermission_intersect.cs#2)]
 [!code-vb[WebPermission_Intersect#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_Intersect/VB/webpermission_intersect.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="uriString" /> ist <see langword="null" />.</exception>
        <altmember cref="T:System.Net.NetworkAccess" />
      </Docs>
    </Member>
    <Member MemberName="AddPermission">
      <MemberSignature Language="C#" Value="public void AddPermission (System.Net.NetworkAccess access, System.Text.RegularExpressions.Regex uriRegex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPermission(valuetype System.Net.NetworkAccess access, class System.Text.RegularExpressions.Regex uriRegex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPermission (access As NetworkAccess, uriRegex As Regex)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPermission(System::Net::NetworkAccess access, System::Text::RegularExpressions::Regex ^ uriRegex);" />
      <MemberSignature Language="F#" Value="member this.AddPermission : System.Net.NetworkAccess * System.Text.RegularExpressions.Regex -&gt; unit" Usage="webPermission.AddPermission (access, uriRegex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="access" Type="System.Net.NetworkAccess" />
        <Parameter Name="uriRegex" Type="System.Text.RegularExpressions.Regex" />
      </Parameters>
      <Docs>
        <param name="access">Ein NetworkAccess, der die Zugriffsrechte angibt, die dem URI gewährt werden.</param>
        <param name="uriRegex">Ein regulärer Ausdruck, der den Satz der URIs beschreibt, dem Zugriffsrechte erteilt werden.</param>
        <summary>Fügt der aktuellen <see cref="T:System.Net.WebPermission" /> den angegebenen URI mit den angegebenen Zugriffsrechten hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie angegeben haben <xref:System.Security.Permissions.PermissionState.None> als die <xref:System.Security.Permissions.PermissionState>, verwenden Sie <xref:System.Net.WebPermission.AddPermission%2A> um ermöglichen die Verwendung von `uriRegex` in der Zielklasse. Geben Sie <xref:System.Net.NetworkAccess.Accept> als die `access` Parameter, um die vom angegebenen URI Hinzufügen der `uriRegex` Parameter, um die Liste der URI Zeichenfolgen akzeptiert, oder geben Sie <xref:System.Net.NetworkAccess.Connect> wie die Parameter, um die Liste der URI den URI hinzu, eine Verbindung herstellen Zeichenfolgen.  
  
> [!NOTE]
>  Aufrufen von <xref:System.Net.WebPermission.AddPermission%2A> auf eine <xref:System.Security.Permissions.PermissionState.Unrestricted> <xref:System.Net.WebPermission> Instanz hat keine Auswirkungen, da alle URIs Berechtigung erteilt wird.  
  
> [!NOTE]
>  Es wird empfohlen, die Sie erstellen `uriRegex` mithilfe der <xref:System.Text.RegularExpressions.RegexOptions.IgnoreCase?displayProperty=nameWithType>, <xref:System.Text.RegularExpressions.RegexOptions.Compiled?displayProperty=nameWithType>, und <xref:System.Text.RegularExpressions.RegexOptions.Singleline?displayProperty=nameWithType> Flags.  
  
> [!NOTE]
>  Eine mögliche URI-Zeichenfolge anhand der Liste der relevanten regulären Ausdrücken aktiviert ist (<xref:System.Net.WebPermission.AcceptList%2A> oder <xref:System.Net.WebPermission.ConnectList%2A>) gibt es zwei Möglichkeiten. Zunächst wird der mögliche URI-Zeichenfolge anhand der entsprechenden Liste überprüft. Klicken Sie dann, wenn keine Übereinstimmung vorhanden ist, der mögliche URI-Zeichenfolge wird konvertiert in eine <xref:System.Uri> und der entsprechenden Liste verglichen.  
  
   
  
## Examples  
 Im folgenden Beispiel wird <xref:System.Net.WebPermission.AddPermission%2A> um Zugriffsrechte für den angegebenen URI zu erteilen.  
  
 [!code-cpp[WebPermission_IsSubset#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_IsSubset/CPP/webpermission_issubset.cpp#1)]
 [!code-csharp[WebPermission_IsSubset#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_IsSubset/CS/webpermission_issubset.cs#1)]
 [!code-vb[WebPermission_IsSubset#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_IsSubset/VB/webpermission_issubset.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="uriRegex" />-Parameter ist <see langword="null" />.</exception>
        <altmember cref="T:System.Net.NetworkAccess" />
      </Docs>
    </Member>
    <Member MemberName="ConnectList">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator ConnectList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerator ConnectList" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebPermission.ConnectList" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConnectList As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IEnumerator ^ ConnectList { System::Collections::IEnumerator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConnectList : System.Collections.IEnumerator" Usage="System.Net.WebPermission.ConnectList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Diese Eigenschaft gibt eine Enumeration einer einzelnen Verbindungsberechtigung zurück, die in dieser <see cref="T:System.Net.WebPermission" /> enthalten ist. Mögliche, in der zurückgegebenen Enumeration enthaltene Objekttypen sind <see cref="T:System.String" /> und <see cref="T:System.Text.RegularExpressions.Regex" />.</summary>
        <value>Die <see cref="T:System.Collections.IEnumerator" />-Schnittstelle, die Verbindungsberechtigungen enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ruft eine Liste der remote-Ressourcen, die von diesem dürfen <xref:System.Net.WebPermission>. Die Klasse, die auf die Sie angewendet haben <xref:System.Net.WebPermission> hat nur die Berechtigung zur verbindungsherstellung mit Ressourcen in dieser Liste gefunden.  
  
> [!NOTE]
>  Sie können diese Liste mit URIs hinzufügen <xref:System.Net.WebPermission.AddPermission%2A>.  
  
> [!NOTE]
>  Eine mögliche URI-Zeichenfolge anhand der Liste der relevanten regulären Ausdrücken aktiviert ist (<xref:System.Net.WebPermission.AcceptList%2A> oder <xref:System.Net.WebPermission.ConnectList%2A>) gibt es zwei Möglichkeiten. Zunächst wird der mögliche URI-Zeichenfolge anhand der entsprechenden Liste überprüft. Klicken Sie dann, wenn keine Übereinstimmung vorhanden ist, der mögliche URI-Zeichenfolge wird konvertiert in eine <xref:System.Uri> und der entsprechenden Liste verglichen.  
  
   
  
## Examples  
 Das folgende Beispiel gibt die URLs in die <xref:System.Net.WebPermission.ConnectList%2A> an die Konsole.  
  
 [!code-cpp[WebPermission_AcceptConnectList#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_AcceptConnectList/CPP/webpermission_acceptconnectlist.cpp#1)]
 [!code-csharp[WebPermission_AcceptConnectList#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_AcceptConnectList/CS/webpermission_acceptconnectlist.cs#1)]
 [!code-vb[WebPermission_AcceptConnectList#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_AcceptConnectList/VB/webpermission_acceptconnectlist.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Copy();" />
      <MemberSignature Language="F#" Value="abstract member Copy : unit -&gt; System.Security.IPermission&#xA;override this.Copy : unit -&gt; System.Security.IPermission" Usage="webPermission.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt eine Kopie einer <see cref="T:System.Net.WebPermission" />.</summary>
        <returns>Eine neue Instanz der <see cref="T:System.Net.WebPermission" />-Klasse mit den gleichen Werten wie die ursprüngliche Instanz.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Security.IPermission> , die von dieser Methode darstellt, die den gleichen Zugriff auf Ressourcen wie das Original <xref:System.Net.WebPermission>. Diese Methode überschreibt <xref:System.Security.CodeAccessPermission.Copy%2A> und wird implementiert zur Unterstützung der <xref:System.Security.IPermission> Schnittstelle.  
  
   
  
## Examples  
 Im folgende Beispiel wird veranschaulicht, wie erstellen Sie eine zweite Instanz von <xref:System.Net.WebPermission> mit <xref:System.Net.WebPermission.Copy%2A>. Diese zweite Instanz ist mit dem ersten identisch.  
  
 [!code-cpp[WebPermission_Copy#2](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_Copy/CPP/webpermission_copy.cpp#2)]
 [!code-csharp[WebPermission_Copy#2](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_Copy/CS/webpermission_copy.cs#2)]
 [!code-vb[WebPermission_Copy#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_Copy/VB/webpermission_copy.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public override void FromXml (System.Security.SecurityElement securityElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXml(class System.Security.SecurityElement securityElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void FromXml(System::Security::SecurityElement ^ securityElement);" />
      <MemberSignature Language="F#" Value="abstract member FromXml : System.Security.SecurityElement -&gt; unit&#xA;override this.FromXml : System.Security.SecurityElement -&gt; unit" Usage="webPermission.FromXml securityElement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityElement" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="securityElement">Die XML-Codierung, aus der die <see cref="T:System.Net.WebPermission" /> rekonstruiert wird.</param>
        <summary>Rekonstruiert eine <see cref="T:System.Net.WebPermission" /> aus einer XML-Codierung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Net.WebPermission.FromXml%2A> -Methode rekonstruiert eine <xref:System.Net.WebPermission> aus einem XML-Codierung von definiert die <xref:System.Security.SecurityElement> Klasse.  
  
 Verwenden der <xref:System.Net.WebPermission.ToXml%2A> Methode, um die XML-Codierung der <xref:System.Net.WebPermission>, einschließlich Zustandsinformationen.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt eine <xref:System.Security.SecurityElement?displayProperty=nameWithType>, füllt die Attribute und verwendet <xref:System.Net.WebPermission.FromXml%2A> für die Übermittlung dieser Informationen mit einer Instanz von <xref:System.Net.WebPermission>.  
  
 [!code-cpp[WebPermission_FromToXml#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_FromToXml/CPP/webpermission_fromtoxml.cpp#1)]
 [!code-csharp[WebPermission_FromToXml#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_FromToXml/CS/webpermission_fromtoxml.cs#1)]
 [!code-vb[WebPermission_FromToXml#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_FromToXml/VB/webpermission_fromtoxml.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="securityElement" />-Parameter ist <see langword="null." />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="securityElement" /> ist kein Berechtigungselement für diesen Typ.</exception>
        <altmember cref="M:System.Net.WebPermission.ToXml" />
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member Intersect : System.Security.IPermission -&gt; System.Security.IPermission&#xA;override this.Intersect : System.Security.IPermission -&gt; System.Security.IPermission" Usage="webPermission.Intersect target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">Das <see cref="T:System.Net.WebPermission" />, das mit der aktuellen Instanz verglichen werden soll.</param>
        <summary>Gibt die logische Schnittmenge zweier <see cref="T:System.Net.WebPermission" />-Instanzen zurück.</summary>
        <returns>Eine neue <see cref="T:System.Net.WebPermission" />, die die Schnittmenge der aktuellen Instanz mit dem <paramref name="target" />-Parameter darstellt. Wenn die Schnittmenge leer ist, gibt die Methode <see langword="null" /> zurück.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebPermission.Intersect%2A> Gibt eine <xref:System.Net.WebPermission> , enthält diese Berechtigungen, die in beiden gelten `target` und die aktuelle Instanz.  
  
 Diese Methode überschreibt <xref:System.Security.CodeAccessPermission.Intersect%2A> und wird implementiert zur Unterstützung der <xref:System.Security.IPermission> Schnittstelle.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie zum Erstellen einer Instanz von <xref:System.Net.WebPermission> verwenden die logische Schnittmenge zweier vorhandener <xref:System.Net.WebPermission> Instanzen.  
  
 [!code-cpp[WebPermission_Intersect#3](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_Intersect/CPP/webpermission_intersect.cpp#3)]
 [!code-csharp[WebPermission_Intersect#3](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_Intersect/CS/webpermission_intersect.cs#3)]
 [!code-vb[WebPermission_Intersect#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_Intersect/VB/webpermission_intersect.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="target" /> ist nicht <see langword="null" /> oder vom Typ <see cref="T:System.Net.WebPermission" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public override bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member IsSubsetOf : System.Security.IPermission -&gt; bool&#xA;override this.IsSubsetOf : System.Security.IPermission -&gt; bool" Usage="webPermission.IsSubsetOf target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">Die <see cref="T:System.Net.WebPermission" />, die mit der aktuellen <see cref="T:System.Net.WebPermission" /> verglichen werden soll.</param>
        <summary>Bestimmt, ob die aktuelle <see cref="T:System.Net.WebPermission" /> eine Teilmenge des angegebenen Objekts ist.</summary>
        <returns>
          <see langword="true" />, wenn die aktuelle Instanz eine Teilmenge des <paramref name="target" />-Parameters ist, andernfalls <see langword="false" />. Wenn das Ziel <see langword="null" /> ist, gibt die Methode <see langword="true" /> für eine leere aktuelle Berechtigung zurück, die nicht unbeschränkt ist, andernfalls gibt sie <see langword="false" /> zurück.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die aktuelle <xref:System.Net.WebPermission> gibt einen Satz von zugehörigen Ressourcen, die vollständig in enthalten ist das `target` -Parameter, und klicken Sie dann auf die aktuelle <xref:System.Net.WebPermission> ist eine Teilmenge der `target`. Diese Methode überschreibt <xref:System.Net.WebPermission.IsSubsetOf%2A> und wird implementiert zur Unterstützung der <xref:System.Security.IPermission> Schnittstelle.  
  
   
  
## Examples  
 Im folgenden Beispiel wird <xref:System.Net.WebPermission.IsSubsetOf%2A> zu bestimmen, ob die Zugriffsrechte finden Sie in einer Instanz von <xref:System.Net.WebPermission> befinden sich in einer anderen Instanz von <xref:System.Net.WebPermission>.  
  
 [!code-cpp[WebPermission_IsSubset2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_IsSubset2/CPP/source.cpp#1)]
 [!code-csharp[WebPermission_IsSubset2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_IsSubset2/CS/source.cs#1)]
 [!code-vb[WebPermission_IsSubset2#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_IsSubset2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Der Zielparameter ist keine Instanz von <see cref="T:System.Net.WebPermission" />.</exception>
        <exception cref="T:System.NotSupportedException">Die aktuelle Instanz enthält eine Regex-codierte Berechtigung und in der Zielinstanz kein identisches Recht vorhanden.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsUnrestricted">
      <MemberSignature Language="C#" Value="public bool IsUnrestricted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUnrestricted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.IsUnrestricted" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUnrestricted () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsUnrestricted();" />
      <MemberSignature Language="F#" Value="abstract member IsUnrestricted : unit -&gt; bool&#xA;override this.IsUnrestricted : unit -&gt; bool" Usage="webPermission.IsUnrestricted " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Überprüft den allgemeinen Berechtigungszustand der <see cref="T:System.Net.WebPermission" />.</summary>
        <returns>
          <see langword="true" />, wenn die <see cref="T:System.Net.WebPermission" /> mit dem <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /><see cref="T:System.Security.Permissions.PermissionState" /> erstellt wurde, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn <xref:System.Net.WebPermission> ist <xref:System.Security.Permissions.PermissionState.Unrestricted>, und klicken Sie dann die Zielklasse alle URIs verwenden kann. Andernfalls muss bestimmte Berechtigung für einen beliebigen URI angegeben werden, die Sie mit der Zielklasse verwenden möchten.  
  
> [!NOTE]
>  Verwendung <xref:System.Net.WebPermission.AddPermission%2A> fügen Sie einen URI hinzu, und geben Sie die Berechtigungen.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public override System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::SecurityElement ^ ToXml();" />
      <MemberSignature Language="F#" Value="abstract member ToXml : unit -&gt; System.Security.SecurityElement&#xA;override this.ToXml : unit -&gt; System.Security.SecurityElement" Usage="webPermission.ToXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt eine XML-Codierung einer <see cref="T:System.Net.WebPermission" /> und ihres aktuellen Zustands.</summary>
        <returns>Ein <see cref="T:System.Security.SecurityElement" />, das eine XML-codierte Darstellung der <see cref="T:System.Net.WebPermission" /> einschließlich der Zustandsinformationen enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Net.WebPermission.FromXml%2A> Verfahren zum Wiederherstellen von Informationen über den Zustand einer <xref:System.Security.SecurityElement>.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie <xref:System.Net.WebPermission.ToXml%2A> zum Erstellen einer <xref:System.Security.SecurityElement?displayProperty=nameWithType> und dessen Attribute in der Konsole.  
  
 [!code-cpp[WebPermission_FromToXml#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_FromToXml/CPP/webpermission_fromtoxml.cpp#1)]
 [!code-csharp[WebPermission_FromToXml#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_FromToXml/CS/webpermission_fromtoxml.cs#1)]
 [!code-vb[WebPermission_FromToXml#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_FromToXml/VB/webpermission_fromtoxml.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.WebPermission.FromXml(System.Security.SecurityElement)" />
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Union (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Union(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Union (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Union(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member Union : System.Security.IPermission -&gt; System.Security.IPermission&#xA;override this.Union : System.Security.IPermission -&gt; System.Security.IPermission" Usage="webPermission.Union target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">Die <see cref="T:System.Net.WebPermission" />, die mit der aktuellen <see cref="T:System.Net.WebPermission" /> kombiniert werden soll.</param>
        <summary>Gibt die logische Gesamtmenge zweier Instanzen der <see cref="T:System.Net.WebPermission" />-Klasse zurück.</summary>
        <returns>Eine <see cref="T:System.Net.WebPermission" />, die die Gesamtmenge der aktuellen Instanz und des <paramref name="target" />-Parameters darstellt. Wenn eine der beiden <see langword="WebPermission" /> den Wert <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> besitzt, gibt die Methode eine <see cref="T:System.Net.WebPermission" /> zurück, die <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> ist. Wenn das Ziel <see langword="null" /> ist, gibt die Methode eine Kopie der aktuellen <see cref="T:System.Net.WebPermission" /> zurück.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebPermission.Union%2A> Gibt eine <xref:System.Net.WebPermission> , enthält alle Berechtigungen in beiden `target` und die aktuelle Instanz.  
  
   
  
## Examples  
 Im folgende Beispiel wird die logische Gesamtmenge zweier <xref:System.Net.WebPermission> zu eine dritte Instanz des zu erstellenden Instanzen <xref:System.Net.WebPermission>.  
  
 [!code-cpp[WebPermission_Union#2](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_Union/CPP/webpermission_union.cpp#2)]
 [!code-csharp[WebPermission_Union#2](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_Union/CS/webpermission_union.cs#2)]
 [!code-vb[WebPermission_Union#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_Union/VB/webpermission_union.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Das Ziel ist nicht <see langword="null" /> oder vom Typ <see cref="T:System.Net.WebPermission" />.</exception>
        <altmember cref="T:System.Security.Permissions.PermissionState" />
      </Docs>
    </Member>
  </Members>
</Type>