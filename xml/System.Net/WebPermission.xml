<Type Name="WebPermission" FullName="System.Net.WebPermission">
  <Metadata><Meta Name="ms.openlocfilehash" Value="225907b310d9fcf4ae5d57f00e288a49df93fc35" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86798389" /></Metadata><TypeSignature Language="C#" Value="public sealed class WebPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WebPermission extends System.Security.CodeAccessPermission implements class System.Security.Permissions.IUnrestrictedPermission" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="DocId" Value="T:System.Net.WebPermission" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WebPermission&#xA;Inherits CodeAccessPermission&#xA;Implements IUnrestrictedPermission" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebPermission sealed : System::Security::CodeAccessPermission, System::Security::Permissions::IUnrestrictedPermission" />
  <TypeSignature Language="F#" Value="type WebPermission = class&#xA;    inherit CodeAccessPermission&#xA;    interface IUnrestrictedPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit WebPermission extends System.Security.CodeAccessPermission implements class System.Security.Permissions.IUnrestrictedPermission" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.CodeAccessPermission</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Permissions.IUnrestrictedPermission</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Steuert die Zugriffsrechte für den Zugriff auf HTTP-Internetressourcen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebPermission> stellt eine Reihe von Methoden und Eigenschaften bereit, um den Zugriff auf Internet Ressourcen zu steuern. Sie können einen verwenden, <xref:System.Net.WebPermission> um einen eingeschränkten oder uneingeschränkten Zugriff auf die Ressource bereitzustellen, basierend auf dem <xref:System.Security.Permissions.PermissionState> , der beim Erstellen von festgelegt wird <xref:System.Net.WebPermission> .  
  
 Erstellen Sie eine- <xref:System.Net.WebPermission> Instanz, indem Sie Ihren Konstruktor mit einem der folgenden Parametersätze aufrufen:  
  
-   Keine Parameter. Der Standardwert von <xref:System.Security.Permissions.PermissionState> lautet <xref:System.Security.Permissions.PermissionState.None>.  
  
-   Ein <xref:System.Security.Permissions.PermissionState>. Geben <xref:System.Security.Permissions.PermissionState.Unrestricted> Sie an, ob ein beliebiger URI in der Zielklasse verwendet werden soll, oder, <xref:System.Security.Permissions.PermissionState.None> um nur den Zugriff auf URIs zuzulassen, die Sie durch die Verwendung der- <xref:System.Net.WebPermission.AddPermission%2A> Methode angeben.  
  
-   Ein <xref:System.Net.NetworkAccess> -Wert und eine URI-Zeichenfolge. Der angegebene URI verfügt über die Berechtigungen, die durch den Wert erteilt wurden <xref:System.Net.NetworkAccess> .  
  
-   Der <xref:System.Net.NetworkAccess> reguläre Ausdruck eines Spezifizierers und URI.  
  
 <xref:System.Net.WebPermission.ConnectList%2A>Und <xref:System.Net.WebPermission.AcceptList%2A> enthalten die URIs, denen Sie die Zugriffsberechtigung erteilt haben. Verwenden Sie, um einer dieser Listen einen URI hinzuzufügen <xref:System.Net.WebPermission.AddPermission%2A> . Wenn Sie <xref:System.Net.NetworkAccess.Accept> als- <xref:System.Net.NetworkAccess> Parameter übergeben, wird der URI hinzugefügt <xref:System.Net.WebPermission.AcceptList%2A> . <xref:System.Net.WebPermission> ermöglicht Verbindungen mit der Zielklasse mit URIs, die mit übereinstimmen <xref:System.Net.WebPermission.AcceptList%2A> .  
  
> [!CAUTION]
>  Wenn Sie den Zugriff auf eine Internet Ressource verweigern möchten, müssen Sie den Zugriff auf alle möglichen Pfade zu dieser Ressource verweigern. Dies erfordert <xref:System.Net.WebPermission.%23ctor%2A?displayProperty=nameWithType> , dass mit dem State-Parameter auf festgelegt ist <xref:System.Security.CodeAccessPermission.Deny%2A> . Ein besserer Ansatz besteht darin, nur den Zugriff auf die jeweilige Ressource zuzulassen. Weitere Informationen zu diesem Betreff finden Sie im Thema [Verwenden der Deny-Methode](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/hk3b9142(v=vs.100)) .  
  
> [!NOTE]
>  Sie müssen den Zugriff nur mit dem kanonischen Ressourcenpfad verweigern. Es ist nicht erforderlich, alle syntaktischen Variationen des Pfads zu verwenden.  
  
> [!NOTE]
>  Die Informationen zum Benutzernamen und zum Standardport <xref:System.Uri> werden vor dem Vergleich mit dem Argument für reguläre Ausdrücke, das für den Konstruktor bereitgestellt wird, entfernt <xref:System.Net.WebPermission.%23ctor%28System.Net.NetworkAccess%2CSystem.Text.RegularExpressions.Regex%29> . Wenn der reguläre Ausdruck Benutzerinformationen oder die Standard Portnummer enthält, treten alle eingehenden <xref:System.Uri> e nicht mit dem regulären Ausdruck in Einklang.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie eine neue Instanz von mithilfe von erstellt wird <xref:System.Net.WebPermission> <xref:System.Text.RegularExpressions.Regex> . Der Connect-und Accept-Liste von werden weitere Hosts hinzugefügt <xref:System.Net.WebPermission> . Zum Schluss werden die Connect-und die Accept-Liste in der Konsole angezeigt.  
  
 [!code-cpp[WebPermission_Regex#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_Regex/CPP/regex.cpp#1)]
 [!code-csharp[WebPermission_Regex#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_Regex/CS/regex.cs#1)]
 [!code-vb[WebPermission_Regex#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_Regex/VB/regex.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.CodeAccessPermission" />
    <altmember cref="T:System.Security.Permissions.PermissionState" />
    <altmember cref="T:System.Net.NetworkAccess" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Erstellt eine neue Instanz der <see cref="T:System.Net.WebPermission" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebPermission ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebPermission();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Erstellt eine neue Instanz der <see cref="T:System.Net.WebPermission" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Erstellt eine neue Instanz der <xref:System.Net.WebPermission>-Klasse. Dieser Konstruktor erstellt eine leere Berechtigung, die keine Rechte gewährt.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.WebPermission.IsUnrestricted" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebPermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebPermission(System::Security::Permissions::PermissionState state);" />
      <MemberSignature Language="F#" Value="new System.Net.WebPermission : System.Security.Permissions.PermissionState -&gt; System.Net.WebPermission" Usage="new System.Net.WebPermission state" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state">Ein <see cref="T:System.Security.Permissions.PermissionState" />-Wert.</param>
        <summary>Erstellt eine neue Instanz der <see cref="T:System.Net.WebPermission" />-Klasse, die alle Anforderungen entweder übergibt oder ablehnt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Wert des- `state` Parameters ist entweder <xref:System.Security.Permissions.PermissionState.None?displayProperty=nameWithType> oder, wobei ein <xref:System.Security.Permissions.PermissionState.Unrestricted?displayProperty=nameWithType> vollständig eingeschränkter oder vollständig uneingeschränkter Zugriff auf alle Sicherheits Variablen ergibt. Wenn Sie angeben <xref:System.Security.Permissions.PermissionState.None?displayProperty=nameWithType> , können Sie mithilfe von Zugriff auf einzelne URIs erhalten <xref:System.Net.WebPermission.AddPermission%2A> .  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine Instanz von erstellt <xref:System.Net.WebPermission> , und es werden Zugriffsrechte für bestimmte URLs erteilt.  
  
 [!code-cpp[WebPermission_Copy#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_Copy/CPP/webpermission_copy.cpp#1)]
 [!code-csharp[WebPermission_Copy#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_Copy/CS/webpermission_copy.cs#1)]
 [!code-vb[WebPermission_Copy#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_Copy/VB/webpermission_copy.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Security.Permissions.PermissionState.Unrestricted" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebPermission (System.Net.NetworkAccess access, string uriString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.NetworkAccess access, string uriString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (access As NetworkAccess, uriString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebPermission(System::Net::NetworkAccess access, System::String ^ uriString);" />
      <MemberSignature Language="F#" Value="new System.Net.WebPermission : System.Net.NetworkAccess * string -&gt; System.Net.WebPermission" Usage="new System.Net.WebPermission (access, uriString)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="access" Type="System.Net.NetworkAccess" />
        <Parameter Name="uriString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="access">Ein NetworkAccess-Wert, der die Art des zu gewährenden Zugriffs für den angegebenen URI angibt. <see cref="F:System.Net.NetworkAccess.Accept" /> gibt an, dass die Anwendung Verbindungen über das Internet für eine lokale Ressource zulassen darf. <see cref="F:System.Net.NetworkAccess.Connect" /> gibt an, dass die Anwendung Verbindungen mit bestimmten Internetressourcen herstellen darf.</param>
        <param name="uriString">Eine URI-Zeichenfolge, auf die Zugriffsrechte erteilt werden.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.WebPermission" />-Klasse mit den angegebenen Zugriffsrechten für den angegebenen URI.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor initialisiert einen <xref:System.Net.WebPermission> und erteilt seine Ziel Berechtigung, entweder eine Remote Host Verbindung herzustellen oder eine Remote Host Verbindung mit dem vom-Parameter beschriebenen URI zu akzeptieren `uriString` .  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine neue Instanz von <xref:System.Net.WebPermission> mit Connect-rechten für den angegebenen URI erstellt.  
  
 [!code-cpp[WebPermission_Union#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_Union/CPP/webpermission_union.cpp#1)]
 [!code-csharp[WebPermission_Union#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_Union/CS/webpermission_union.cs#1)]
 [!code-vb[WebPermission_Union#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_Union/VB/webpermission_union.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="uriString" /> ist <see langword="null" />.</exception>
        <altmember cref="T:System.Text.RegularExpressions.Regex" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebPermission (System.Net.NetworkAccess access, System.Text.RegularExpressions.Regex uriRegex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.NetworkAccess access, class System.Text.RegularExpressions.Regex uriRegex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (access As NetworkAccess, uriRegex As Regex)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebPermission(System::Net::NetworkAccess access, System::Text::RegularExpressions::Regex ^ uriRegex);" />
      <MemberSignature Language="F#" Value="new System.Net.WebPermission : System.Net.NetworkAccess * System.Text.RegularExpressions.Regex -&gt; System.Net.WebPermission" Usage="new System.Net.WebPermission (access, uriRegex)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="access" Type="System.Net.NetworkAccess" />
        <Parameter Name="uriRegex" Type="System.Text.RegularExpressions.Regex" />
      </Parameters>
      <Docs>
        <param name="access">Ein <see cref="T:System.Net.NetworkAccess" />-Wert, der die Art des zu gewährenden Zugriffs für den angegebenen URI angibt. <see cref="F:System.Net.NetworkAccess.Accept" /> gibt an, dass die Anwendung Verbindungen über das Internet für eine lokale Ressource zulassen darf. <see cref="F:System.Net.NetworkAccess.Connect" /> gibt an, dass die Anwendung Verbindungen mit bestimmten Internetressourcen herstellen darf.</param>
        <param name="uriRegex">Ein regulärer Ausdruck, der den URI beschreibt, auf den Zugriff gewährt werden soll.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.WebPermission" />-Klasse mit den angegebenen Zugriffsrechten für den angegebenen regulären URI-Ausdruck.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor initialisiert einen <xref:System.Net.WebPermission> und erteilt seine Ziel Berechtigung, entweder eine Remote Host Verbindung herzustellen oder eine Remote Host Verbindung mit dem vom-Parameter beschriebenen URI zu akzeptieren `uriRegex` .  
  
> [!NOTE]
>  Es wird empfohlen, dass Sie `uriRegex` mit den <xref:System.Text.RegularExpressions.RegexOptions.IgnoreCase?displayProperty=nameWithType> <xref:System.Text.RegularExpressions.RegexOptions.Compiled?displayProperty=nameWithType> Flags, und erstellen <xref:System.Text.RegularExpressions.RegexOptions.Singleline?displayProperty=nameWithType> .  
  
> [!NOTE]
>  Eine Kandidaten-URI-Zeichenfolge wird auf zweierlei Weise anhand der Liste der relevanten regulären Ausdrücke ( <xref:System.Net.WebPermission.AcceptList%2A> oder <xref:System.Net.WebPermission.ConnectList%2A> ) überprüft. Zuerst wird die Kandidaten-URI-Zeichenfolge anhand der entsprechenden Liste überprüft. Wenn keine Entsprechung vorhanden ist, wird die URI-Zeichenfolge des Kandidaten in eine konvertiert <xref:System.Uri> und mit der entsprechenden Liste überprüft.  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine neue Instanz von <xref:System.Net.WebPermission> mit Connect-rechten für den angegebenen erstellt <xref:System.Text.RegularExpressions.Regex?displayProperty=nameWithType> .  
  
 [!code-cpp[WebPermission_Constructor4#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_Constructor4/CPP/webpermission_constructor4.cpp#1)]
 [!code-csharp[WebPermission_Constructor4#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_Constructor4/CS/webpermission_constructor4.cs#1)]
 [!code-vb[WebPermission_Constructor4#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_Constructor4/VB/webpermission_constructor4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.RegularExpressions.Regex" />
      </Docs>
    </Member>
    <Member MemberName="AcceptList">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator AcceptList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerator AcceptList" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebPermission.AcceptList" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AcceptList As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IEnumerator ^ AcceptList { System::Collections::IEnumerator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AcceptList : System.Collections.IEnumerator" Usage="System.Net.WebPermission.AcceptList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Diese Eigenschaft gibt eine Enumeration einer einzelnen Akzeptierungsberechtigung zurück, die in dieser <see cref="T:System.Net.WebPermission" /> enthalten ist. Mögliche, in der zurückgegebenen Enumeration enthaltene Objekttypen sind <see cref="T:System.String" /> und <see cref="T:System.Text.RegularExpressions.Regex" />.</summary>
        <value>Die <see cref="T:System.Collections.IEnumerator" />-Schnittstelle, die Akzeptierungsberechtigungen enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit dieser Eigenschaft wird eine Liste der lokalen Ressourcen abgerufen, die von diesem zugelassen werden <xref:System.Net.WebPermission> . Die Klasse, auf die Sie nur angewendet haben, verfügt über die <xref:System.Net.WebPermission> Berechtigung, eine eingehende Verbindung zu lokalen Ressourcen zu empfangen, die in dieser Liste enthalten sind.  
  
> [!NOTE]
>  Mithilfe von können Sie dieser Liste URIs hinzufügen <xref:System.Net.WebPermission.AddPermission%2A> .  
  
> [!NOTE]
>  Eine Kandidaten-URI-Zeichenfolge wird auf zweierlei Weise anhand der Liste der relevanten regulären Ausdrücke ( <xref:System.Net.WebPermission.AcceptList%2A> oder <xref:System.Net.WebPermission.ConnectList%2A> ) überprüft. Zuerst wird die Kandidaten-URI-Zeichenfolge anhand der entsprechenden Liste überprüft. Wenn keine Entsprechung vorhanden ist, wird die URI-Zeichenfolge des Kandidaten in eine konvertiert <xref:System.Uri> und mit der entsprechenden Liste überprüft.  
  
   
  
## Examples  
 Im folgenden Beispiel werden die URLs in der <xref:System.Net.WebPermission.AcceptList%2A> auf der Konsole ausgegeben.  
  
 [!code-cpp[WebPermission_AcceptConnectList#2](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_AcceptConnectList/CPP/webpermission_acceptconnectlist.cpp#2)]
 [!code-csharp[WebPermission_AcceptConnectList#2](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_AcceptConnectList/CS/webpermission_acceptconnectlist.cs#2)]
 [!code-vb[WebPermission_AcceptConnectList#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_AcceptConnectList/VB/webpermission_acceptconnectlist.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddPermission">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Fügt der aktuellen <see cref="T:System.Net.WebPermission" /> den angegebenen URI mit den angegebenen Zugriffsrechten hinzu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddPermission">
      <MemberSignature Language="C#" Value="public void AddPermission (System.Net.NetworkAccess access, string uriString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPermission(valuetype System.Net.NetworkAccess access, string uriString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPermission (access As NetworkAccess, uriString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPermission(System::Net::NetworkAccess access, System::String ^ uriString);" />
      <MemberSignature Language="F#" Value="member this.AddPermission : System.Net.NetworkAccess * string -&gt; unit" Usage="webPermission.AddPermission (access, uriString)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="access" Type="System.Net.NetworkAccess" />
        <Parameter Name="uriString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="access">Ein <see cref="T:System.Net.NetworkAccess" />, der die Zugriffsrechte angibt, die dem URI gewährt werden.</param>
        <param name="uriString">Eine Zeichenfolge, die den URI beschreibt, dem Zugriffsrechte erteilt werden.</param>
        <summary>Fügt der aktuellen <see cref="T:System.Net.WebPermission" /> die angegebene URI-Zeichenfolge mit den angegebenen Zugriffsrechten hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie als angegeben haben <xref:System.Security.Permissions.PermissionState.None> <xref:System.Security.Permissions.PermissionState> , verwenden Sie, <xref:System.Net.WebPermission.AddPermission%2A> um die Verwendung von `uriString` in der Zielklasse zuzulassen. Die Methode, die `uriString` von der Zielklasse verwendet werden kann, wird von angegeben `access` . Geben Sie <xref:System.Net.NetworkAccess.Accept> als Zugriffsparameter an, um den URI, der vom- `uriString` Parameter angegeben wird, der Liste der URI-Accept-Zeichen folgen hinzuzufügen, oder geben Sie als Access-Parameter an, um den <xref:System.Net.NetworkAccess.Connect> URI der Liste der URI-Verbindungs Zeichenfolgen  
  
> [!NOTE]
>  Das Aufrufen <xref:System.Net.WebPermission.AddPermission%2A> von für <xref:System.Security.Permissions.PermissionState.Unrestricted> <xref:System.Net.WebPermission> hat keine Auswirkung, da allen URIs Berechtigungen gewährt werden.  
  
> [!NOTE]
>  Eine Kandidaten-URI-Zeichenfolge wird auf zweierlei Weise anhand der Liste der relevanten regulären Ausdrücke ( <xref:System.Net.WebPermission.AcceptList%2A> oder <xref:System.Net.WebPermission.ConnectList%2A> ) überprüft. Zuerst wird die Kandidaten-URI-Zeichenfolge anhand der entsprechenden Liste überprüft. Wenn keine Entsprechung vorhanden ist, wird die URI-Zeichenfolge des Kandidaten in eine konvertiert <xref:System.Uri> und mit der entsprechenden Liste überprüft.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie Zugriffsrechte für bestimmte URL-Zeichen folgen hinzugefügt werden.  
  
 [!code-cpp[WebPermission_Intersect#2](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_Intersect/CPP/webpermission_intersect.cpp#2)]
 [!code-csharp[WebPermission_Intersect#2](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_Intersect/CS/webpermission_intersect.cs#2)]
 [!code-vb[WebPermission_Intersect#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_Intersect/VB/webpermission_intersect.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="uriString" /> ist <see langword="null" />.</exception>
        <altmember cref="T:System.Net.NetworkAccess" />
      </Docs>
    </Member>
    <Member MemberName="AddPermission">
      <MemberSignature Language="C#" Value="public void AddPermission (System.Net.NetworkAccess access, System.Text.RegularExpressions.Regex uriRegex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPermission(valuetype System.Net.NetworkAccess access, class System.Text.RegularExpressions.Regex uriRegex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPermission (access As NetworkAccess, uriRegex As Regex)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPermission(System::Net::NetworkAccess access, System::Text::RegularExpressions::Regex ^ uriRegex);" />
      <MemberSignature Language="F#" Value="member this.AddPermission : System.Net.NetworkAccess * System.Text.RegularExpressions.Regex -&gt; unit" Usage="webPermission.AddPermission (access, uriRegex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="access" Type="System.Net.NetworkAccess" />
        <Parameter Name="uriRegex" Type="System.Text.RegularExpressions.Regex" />
      </Parameters>
      <Docs>
        <param name="access">Ein NetworkAccess, der die Zugriffsrechte angibt, die dem URI gewährt werden.</param>
        <param name="uriRegex">Ein regulärer Ausdruck, der den Satz der URIs beschreibt, dem Zugriffsrechte erteilt werden.</param>
        <summary>Fügt der aktuellen <see cref="T:System.Net.WebPermission" /> den angegebenen URI mit den angegebenen Zugriffsrechten hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie als angegeben haben <xref:System.Security.Permissions.PermissionState.None> <xref:System.Security.Permissions.PermissionState> , verwenden Sie, <xref:System.Net.WebPermission.AddPermission%2A> um die Verwendung von `uriRegex` in der Zielklasse zuzulassen. Geben Sie <xref:System.Net.NetworkAccess.Accept> als `access` Parameter an, um den vom-Parameter angegebenen URI der Liste der URI-Accept-Zeichen folgen hinzuzufügen `uriRegex` , oder geben Sie <xref:System.Net.NetworkAccess.Connect> als Access-Parameter an, um den URI der Liste der URI-Verbindungs Zeichenfolgen hinzuzufügen.  
  
> [!NOTE]
>  Das Aufrufen <xref:System.Net.WebPermission.AddPermission%2A> von für eine- <xref:System.Security.Permissions.PermissionState.Unrestricted> <xref:System.Net.WebPermission> Instanz hat keine Auswirkung, da allen URIs Berechtigungen gewährt werden.  
  
> [!NOTE]
>  Es wird empfohlen, dass Sie `uriRegex` mit den <xref:System.Text.RegularExpressions.RegexOptions.IgnoreCase?displayProperty=nameWithType> <xref:System.Text.RegularExpressions.RegexOptions.Compiled?displayProperty=nameWithType> Flags, und erstellen <xref:System.Text.RegularExpressions.RegexOptions.Singleline?displayProperty=nameWithType> .  
  
> [!NOTE]
>  Eine Kandidaten-URI-Zeichenfolge wird auf zweierlei Weise anhand der Liste der relevanten regulären Ausdrücke ( <xref:System.Net.WebPermission.AcceptList%2A> oder <xref:System.Net.WebPermission.ConnectList%2A> ) überprüft. Zuerst wird die Kandidaten-URI-Zeichenfolge anhand der entsprechenden Liste überprüft. Wenn keine Entsprechung vorhanden ist, wird die URI-Zeichenfolge des Kandidaten in eine konvertiert <xref:System.Uri> und mit der entsprechenden Liste überprüft.  
  
   
  
## Examples  
 Im folgenden Beispiel wird verwendet <xref:System.Net.WebPermission.AddPermission%2A> , um Zugriffsrechte für den angegebenen URI zu erhalten.  
  
 [!code-cpp[WebPermission_IsSubset#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_IsSubset/CPP/webpermission_issubset.cpp#1)]
 [!code-csharp[WebPermission_IsSubset#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_IsSubset/CS/webpermission_issubset.cs#1)]
 [!code-vb[WebPermission_IsSubset#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_IsSubset/VB/webpermission_issubset.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="uriRegex" />-Parameter ist <see langword="null" />.</exception>
        <altmember cref="T:System.Net.NetworkAccess" />
      </Docs>
    </Member>
    <Member MemberName="ConnectList">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator ConnectList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerator ConnectList" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebPermission.ConnectList" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConnectList As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IEnumerator ^ ConnectList { System::Collections::IEnumerator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConnectList : System.Collections.IEnumerator" Usage="System.Net.WebPermission.ConnectList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Diese Eigenschaft gibt eine Enumeration einer einzelnen Verbindungsberechtigung zurück, die in dieser <see cref="T:System.Net.WebPermission" /> enthalten ist. Mögliche, in der zurückgegebenen Enumeration enthaltene Objekttypen sind <see cref="T:System.String" /> und <see cref="T:System.Text.RegularExpressions.Regex" />.</summary>
        <value>Die <see cref="T:System.Collections.IEnumerator" />-Schnittstelle, die Verbindungsberechtigungen enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit dieser Eigenschaft wird eine Liste der Remote Ressourcen abgerufen, die von diesem zugelassen werden <xref:System.Net.WebPermission> . Die Klasse, auf die Sie angewendet haben, verfügt über die <xref:System.Net.WebPermission> Berechtigung zum Herstellen einer Verbindung mit Ressourcen, die in dieser Liste enthalten sind.  
  
> [!NOTE]
>  Mithilfe von können Sie dieser Liste URIs hinzufügen <xref:System.Net.WebPermission.AddPermission%2A> .  
  
> [!NOTE]
>  Eine Kandidaten-URI-Zeichenfolge wird auf zweierlei Weise anhand der Liste der relevanten regulären Ausdrücke ( <xref:System.Net.WebPermission.AcceptList%2A> oder <xref:System.Net.WebPermission.ConnectList%2A> ) überprüft. Zuerst wird die Kandidaten-URI-Zeichenfolge anhand der entsprechenden Liste überprüft. Wenn keine Entsprechung vorhanden ist, wird die URI-Zeichenfolge des Kandidaten in eine konvertiert <xref:System.Uri> und mit der entsprechenden Liste überprüft.  
  
   
  
## Examples  
 Im folgenden Beispiel werden die URLs in der <xref:System.Net.WebPermission.ConnectList%2A> auf der Konsole ausgegeben.  
  
 [!code-cpp[WebPermission_AcceptConnectList#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_AcceptConnectList/CPP/webpermission_acceptconnectlist.cpp#1)]
 [!code-csharp[WebPermission_AcceptConnectList#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_AcceptConnectList/CS/webpermission_acceptconnectlist.cs#1)]
 [!code-vb[WebPermission_AcceptConnectList#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_AcceptConnectList/VB/webpermission_acceptconnectlist.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Copy();" />
      <MemberSignature Language="F#" Value="override this.Copy : unit -&gt; System.Security.IPermission" Usage="webPermission.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt eine Kopie einer <see cref="T:System.Net.WebPermission" />.</summary>
        <returns>Eine neue Instanz der <see cref="T:System.Net.WebPermission" />-Klasse mit den gleichen Werten wie die ursprüngliche Instanz.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der <xref:System.Security.IPermission> , der von dieser Methode zurückgegeben wird, stellt denselben Zugriff auf Ressourcen wie die ursprüngliche dar <xref:System.Net.WebPermission> . Diese Methode überschreibt <xref:System.Security.CodeAccessPermission.Copy%2A> und wird zur Unterstützung der- <xref:System.Security.IPermission> Schnittstelle implementiert.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie mithilfe von eine zweite Instanz von erstellt wird <xref:System.Net.WebPermission> <xref:System.Net.WebPermission.Copy%2A> . Diese zweite Instanz ist mit der ersten identisch.  
  
 [!code-cpp[WebPermission_Copy#2](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_Copy/CPP/webpermission_copy.cpp#2)]
 [!code-csharp[WebPermission_Copy#2](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_Copy/CS/webpermission_copy.cs#2)]
 [!code-vb[WebPermission_Copy#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_Copy/VB/webpermission_copy.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public override void FromXml (System.Security.SecurityElement securityElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXml(class System.Security.SecurityElement securityElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub FromXml (securityElement As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void FromXml(System::Security::SecurityElement ^ securityElement);" />
      <MemberSignature Language="F#" Value="override this.FromXml : System.Security.SecurityElement -&gt; unit" Usage="webPermission.FromXml securityElement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityElement" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="securityElement">Die XML-Codierung, aus der die <see cref="T:System.Net.WebPermission" /> rekonstruiert wird.</param>
        <summary>Rekonstruiert eine <see cref="T:System.Net.WebPermission" /> aus einer XML-Codierung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die- <xref:System.Net.WebPermission.FromXml%2A> Methode rekonstruiert einen <xref:System.Net.WebPermission> aus einer XML-Codierung, die von der-Klasse definiert wird <xref:System.Security.SecurityElement> .  
  
 Verwenden <xref:System.Net.WebPermission.ToXml%2A> Sie die-Methode zum XML-Codieren von <xref:System.Net.WebPermission> , einschließlich der Zustandsinformationen.  
  
   
  
## Examples  
 Im folgenden Beispiel wird ein erstellt <xref:System.Security.SecurityElement?displayProperty=nameWithType> , dessen Attribute aufgefüllt und verwendet, <xref:System.Net.WebPermission.FromXml%2A> um diese Informationen an eine Instanz von zu übertragen <xref:System.Net.WebPermission> .  
  
 [!code-cpp[WebPermission_FromToXml#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_FromToXml/CPP/webpermission_fromtoxml.cpp#1)]
 [!code-csharp[WebPermission_FromToXml#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_FromToXml/CS/webpermission_fromtoxml.cs#1)]
 [!code-vb[WebPermission_FromToXml#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_FromToXml/VB/webpermission_fromtoxml.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="securityElement" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="securityElement" /> ist kein Berechtigungselement für diesen Typ.</exception>
        <altmember cref="M:System.Net.WebPermission.ToXml" />
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.Intersect : System.Security.IPermission -&gt; System.Security.IPermission" Usage="webPermission.Intersect target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">Das <see cref="T:System.Net.WebPermission" />, das mit der aktuellen Instanz verglichen werden soll.</param>
        <summary>Gibt die logische Schnittmenge zweier <see cref="T:System.Net.WebPermission" />-Instanzen zurück.</summary>
        <returns>Eine neue <see cref="T:System.Net.WebPermission" />, die die Schnittmenge der aktuellen Instanz mit dem <paramref name="target" />-Parameter darstellt. Wenn die Schnittmenge leer ist, gibt die Methode <see langword="null" /> zurück.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebPermission.Intersect%2A> gibt eine zurück <xref:System.Net.WebPermission> , die die Berechtigungen enthält, die sowohl in `target` als auch in der aktuellen Instanz gemeinsam sind.  
  
 Diese Methode überschreibt <xref:System.Security.CodeAccessPermission.Intersect%2A> und wird zur Unterstützung der- <xref:System.Security.IPermission> Schnittstelle implementiert.  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie eine Instanz von <xref:System.Net.WebPermission> mithilfe der logischen Schnittmenge von zwei vorhandenen-Instanzen erstellt wird <xref:System.Net.WebPermission> .  
  
 [!code-cpp[WebPermission_Intersect#3](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_Intersect/CPP/webpermission_intersect.cpp#3)]
 [!code-csharp[WebPermission_Intersect#3](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_Intersect/CS/webpermission_intersect.cs#3)]
 [!code-vb[WebPermission_Intersect#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_Intersect/VB/webpermission_intersect.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="target" /> ist nicht <see langword="null" /> oder vom Typ <see cref="T:System.Net.WebPermission" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public override bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.IsSubsetOf : System.Security.IPermission -&gt; bool" Usage="webPermission.IsSubsetOf target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">Die <see cref="T:System.Net.WebPermission" />, die mit der aktuellen <see cref="T:System.Net.WebPermission" /> verglichen werden soll.</param>
        <summary>Bestimmt, ob die aktuelle <see cref="T:System.Net.WebPermission" /> eine Teilmenge des angegebenen Objekts ist.</summary>
        <returns><see langword="true" />, wenn die aktuelle Instanz eine Teilmenge des <paramref name="target" />-Parameters ist, andernfalls <see langword="false" />. Wenn das Ziel <see langword="null" /> ist, gibt die Methode <see langword="true" /> für eine leere aktuelle Berechtigung zurück, die nicht unbeschränkt ist, andernfalls gibt sie <see langword="false" /> zurück.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn der aktuelle <xref:System.Net.WebPermission> eine Menge zugeordneter Ressourcen angibt, die vollständig im-Parameter enthalten ist `target` , <xref:System.Net.WebPermission> ist die aktuelle eine Teilmenge von `target` . Diese Methode überschreibt <xref:System.Net.WebPermission.IsSubsetOf%2A> und wird zur Unterstützung der- <xref:System.Security.IPermission> Schnittstelle implementiert.  
  
   
  
## Examples  
 Im folgenden Beispiel <xref:System.Net.WebPermission.IsSubsetOf%2A> wird verwendet, um zu bestimmen, ob die in einer Instanz von gefundenen Zugriffsrechte <xref:System.Net.WebPermission> in einer anderen Instanz von gefunden werden <xref:System.Net.WebPermission> .  
  
 [!code-cpp[WebPermission_IsSubset2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_IsSubset2/CPP/source.cpp#1)]
 [!code-csharp[WebPermission_IsSubset2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_IsSubset2/CS/source.cs#1)]
 [!code-vb[WebPermission_IsSubset2#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_IsSubset2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Der Zielparameter ist keine Instanz von <see cref="T:System.Net.WebPermission" />.</exception>
        <exception cref="T:System.NotSupportedException">Die aktuelle Instanz enthält eine Regex-codierte Berechtigung und in der Zielinstanz kein identisches Recht vorhanden.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsUnrestricted">
      <MemberSignature Language="C#" Value="public bool IsUnrestricted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUnrestricted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.IsUnrestricted" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUnrestricted () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsUnrestricted();" />
      <MemberSignature Language="F#" Value="abstract member IsUnrestricted : unit -&gt; bool&#xA;override this.IsUnrestricted : unit -&gt; bool" Usage="webPermission.IsUnrestricted " FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="override this.IsUnrestricted : unit -&gt; bool" Usage="webPermission.IsUnrestricted " FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Permissions.IUnrestrictedPermission.IsUnrestricted</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Überprüft den allgemeinen Berechtigungszustand der <see cref="T:System.Net.WebPermission" />.</summary>
        <returns><see langword="true" />, wenn die <see cref="T:System.Net.WebPermission" /> mit dem <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /><see cref="T:System.Security.Permissions.PermissionState" /> erstellt wurde, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn <xref:System.Net.WebPermission> ist <xref:System.Security.Permissions.PermissionState.Unrestricted> , kann die Zielklasse alle URIs verwenden. Andernfalls muss für jeden URI, den Sie mit der Zielklasse verwenden möchten, eine bestimmte Berechtigung erteilt werden.  
  
> [!NOTE]
>  Verwenden Sie <xref:System.Net.WebPermission.AddPermission%2A> , um einen URI hinzuzufügen und die zugehörigen Berechtigungen anzugeben.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public override System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::SecurityElement ^ ToXml();" />
      <MemberSignature Language="F#" Value="override this.ToXml : unit -&gt; System.Security.SecurityElement" Usage="webPermission.ToXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt eine XML-Codierung einer <see cref="T:System.Net.WebPermission" /> und ihres aktuellen Zustands.</summary>
        <returns>Ein <see cref="T:System.Security.SecurityElement" />, das eine XML-codierte Darstellung der <see cref="T:System.Net.WebPermission" /> einschließlich der Zustandsinformationen enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die- <xref:System.Net.WebPermission.FromXml%2A> Methode, um die Zustandsinformationen aus einer wiederherzustellen <xref:System.Security.SecurityElement> .  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie verwendet wird, <xref:System.Net.WebPermission.ToXml%2A> um eine zu erstellen und die zugehörigen <xref:System.Security.SecurityElement?displayProperty=nameWithType> Attribute in der Konsole auszugeben.  
  
 [!code-cpp[WebPermission_FromToXml#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_FromToXml/CPP/webpermission_fromtoxml.cpp#1)]
 [!code-csharp[WebPermission_FromToXml#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_FromToXml/CS/webpermission_fromtoxml.cs#1)]
 [!code-vb[WebPermission_FromToXml#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_FromToXml/VB/webpermission_fromtoxml.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.WebPermission.FromXml(System.Security.SecurityElement)" />
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Union (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Union(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Union (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Union(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.Union : System.Security.IPermission -&gt; System.Security.IPermission" Usage="webPermission.Union target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">Die <see cref="T:System.Net.WebPermission" />, die mit der aktuellen <see cref="T:System.Net.WebPermission" /> kombiniert werden soll.</param>
        <summary>Gibt die logische Gesamtmenge zweier Instanzen der <see cref="T:System.Net.WebPermission" />-Klasse zurück.</summary>
        <returns>Eine <see cref="T:System.Net.WebPermission" />, die die Gesamtmenge der aktuellen Instanz und des <paramref name="target" />-Parameters darstellt. Wenn eine der beiden <see langword="WebPermission" /> den Wert <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> besitzt, gibt die Methode eine <see cref="T:System.Net.WebPermission" /> zurück, die <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> ist. Wenn das Ziel <see langword="null" /> ist, gibt die Methode eine Kopie der aktuellen <see cref="T:System.Net.WebPermission" /> zurück.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebPermission.Union%2A> Gibt einen zurück <xref:System.Net.WebPermission> , der alle Berechtigungen sowohl in `target` als auch in der aktuellen Instanz enthält.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die logische Union von zwei- <xref:System.Net.WebPermission> Instanzen zum Erstellen einer dritten Instanz von benötigt <xref:System.Net.WebPermission> .  
  
 [!code-cpp[WebPermission_Union#2](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_Union/CPP/webpermission_union.cpp#2)]
 [!code-csharp[WebPermission_Union#2](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_Union/CS/webpermission_union.cs#2)]
 [!code-vb[WebPermission_Union#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_Union/VB/webpermission_union.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Das Ziel ist nicht <see langword="null" /> oder vom Typ <see cref="T:System.Net.WebPermission" />.</exception>
        <altmember cref="T:System.Security.Permissions.PermissionState" />
      </Docs>
    </Member>
  </Members>
</Type>
