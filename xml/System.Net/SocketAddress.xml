<Type Name="SocketAddress" FullName="System.Net.SocketAddress">
  <Metadata><Meta Name="ms.openlocfilehash" Value="da9f151dfabaf41434debd4b70d79deebdc74cbd" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86798688" /></Metadata><TypeSignature Language="C#" Value="public class SocketAddress" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SocketAddress extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.SocketAddress" />
  <TypeSignature Language="VB.NET" Value="Public Class SocketAddress" />
  <TypeSignature Language="C++ CLI" Value="public ref class SocketAddress" />
  <TypeSignature Language="F#" Value="type SocketAddress = class" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Primitives</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Net.Primitives" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Net" FromVersion="4.0.0.0" To="System" ToVersion="4.0.0.0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="54eba-101">Speichert serialisierte Informationen von Klassen, die von <see cref="T:System.Net.EndPoint" /> abgeleitet sind.</span><span class="sxs-lookup"><span data-stu-id="54eba-101">Stores serialized information from <see cref="T:System.Net.EndPoint" /> derived classes.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54eba-102">Die ersten 2 Bytes des zugrunde liegenden Puffers sind für den- <xref:System.Net.Sockets.AddressFamily> Enumerationswert reserviert.</span><span class="sxs-lookup"><span data-stu-id="54eba-102">The first 2 bytes of the underlying buffer are reserved for the <xref:System.Net.Sockets.AddressFamily> enumerated value.</span></span> <span data-ttu-id="54eba-103">Wenn das <xref:System.Net.SocketAddress> zum Speichern eines serialisierten verwendet wird <xref:System.Net.IPEndPoint> , werden das dritte und vierte Byte zum Speichern von Informationen zu Portnummern verwendet.</span><span class="sxs-lookup"><span data-stu-id="54eba-103">When the <xref:System.Net.SocketAddress> is used to store a serialized <xref:System.Net.IPEndPoint>, the third and fourth bytes are used to store port number information.</span></span> <span data-ttu-id="54eba-104">Die nächsten Bytes werden zum Speichern der IP-Adresse verwendet.</span><span class="sxs-lookup"><span data-stu-id="54eba-104">The next bytes are used to store the IP address.</span></span> <span data-ttu-id="54eba-105">Sie können auf alle Informationen innerhalb dieses zugrunde liegenden Byte Puffers zugreifen, indem Sie auf die Indexposition verweisen. der Byte Puffer verwendet die null basierte Indizierung.</span><span class="sxs-lookup"><span data-stu-id="54eba-105">You can access any information within this underlying byte buffer by referring to its index position; the byte buffer uses zero-based indexing.</span></span> <span data-ttu-id="54eba-106">Sie können auch die <xref:System.Net.SocketAddress.Family%2A> und <xref:System.Net.SocketAddress.Size%2A> Eigenschaften zum Abrufen der <xref:System.Net.Sockets.AddressFamily> Wert und der Puffer die Größe, bzw.</span><span class="sxs-lookup"><span data-stu-id="54eba-106">You can also use the <xref:System.Net.SocketAddress.Family%2A> and <xref:System.Net.SocketAddress.Size%2A> properties to get the <xref:System.Net.Sockets.AddressFamily> value and the buffer size, respectively.</span></span> <span data-ttu-id="54eba-107">Um diese Informationen als Zeichenfolge anzuzeigen, verwenden Sie die- <xref:System.Net.SocketAddress.ToString%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="54eba-107">To view any of this information as a string, use the <xref:System.Net.SocketAddress.ToString%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54eba-108">Im folgenden Beispiel wird veranschaulicht, wie verwendet wird, <xref:System.Net.SocketAddress> um eine Instanz der-Klasse zu serialisieren <xref:System.Net.EndPoint> .</span><span class="sxs-lookup"><span data-stu-id="54eba-108">The following example demonstrates how to use <xref:System.Net.SocketAddress> to serialize an instance of the <xref:System.Net.EndPoint> class.</span></span> <span data-ttu-id="54eba-109">Nach der Serialisierung enthält der zugrunde liegende Byte Puffer von <xref:System.Net.SocketAddress> alle <xref:System.Net.IPEndPoint> Zustandsinformationen.</span><span class="sxs-lookup"><span data-stu-id="54eba-109">After serialization, the underlying byte buffer of the <xref:System.Net.SocketAddress> contains all of the <xref:System.Net.IPEndPoint> state information.</span></span>  
  
 [!code-cpp[Classic SocketAddressExample#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SocketAddressExample/CPP/source.cpp#1)]
 [!code-csharp[Classic SocketAddressExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SocketAddressExample/CS/source.cs#1)]
 [!code-vb[Classic SocketAddressExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SocketAddressExample/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="54eba-110">Erstellt eine neue Instanz der <see cref="T:System.Net.SocketAddress" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="54eba-110">Creates a new instance of the <see cref="T:System.Net.SocketAddress" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SocketAddress (System.Net.Sockets.AddressFamily family);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Sockets.AddressFamily family) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.SocketAddress.#ctor(System.Net.Sockets.AddressFamily)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (family As AddressFamily)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SocketAddress(System::Net::Sockets::AddressFamily family);" />
      <MemberSignature Language="F#" Value="new System.Net.SocketAddress : System.Net.Sockets.AddressFamily -&gt; System.Net.SocketAddress" Usage="new System.Net.SocketAddress family" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="family" Type="System.Net.Sockets.AddressFamily" />
      </Parameters>
      <Docs>
        <param name="family"><span data-ttu-id="54eba-111">Ein <see cref="T:System.Net.Sockets.AddressFamily" />-Enumerationswert.</span><span class="sxs-lookup"><span data-stu-id="54eba-111">An <see cref="T:System.Net.Sockets.AddressFamily" /> enumerated value.</span></span></param>
        <summary><span data-ttu-id="54eba-112">Erstellt eine neue Instanz der <see cref="T:System.Net.SocketAddress" />-Klasse für die angegebene Adressfamilie.</span><span class="sxs-lookup"><span data-stu-id="54eba-112">Creates a new instance of the <see cref="T:System.Net.SocketAddress" /> class for the given address family.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54eba-113">Diese Überladung legt die zugrunde liegende Puffergröße auf 32 Bytes fest.</span><span class="sxs-lookup"><span data-stu-id="54eba-113">This overload sets the underlying buffer size to 32 bytes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SocketAddress (System.Net.Sockets.AddressFamily family, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Sockets.AddressFamily family, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.SocketAddress.#ctor(System.Net.Sockets.AddressFamily,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (family As AddressFamily, size As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SocketAddress(System::Net::Sockets::AddressFamily family, int size);" />
      <MemberSignature Language="F#" Value="new System.Net.SocketAddress : System.Net.Sockets.AddressFamily * int -&gt; System.Net.SocketAddress" Usage="new System.Net.SocketAddress (family, size)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="family" Type="System.Net.Sockets.AddressFamily" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="family"><span data-ttu-id="54eba-114">Ein <see cref="T:System.Net.Sockets.AddressFamily" />-Enumerationswert.</span><span class="sxs-lookup"><span data-stu-id="54eba-114">An <see cref="T:System.Net.Sockets.AddressFamily" /> enumerated value.</span></span></param>
        <param name="size"><span data-ttu-id="54eba-115">Die Anzahl der für den zugrunde liegenden Puffer zu reservierenden Bytes.</span><span class="sxs-lookup"><span data-stu-id="54eba-115">The number of bytes to allocate for the underlying buffer.</span></span></param>
        <summary><span data-ttu-id="54eba-116">Erstellt eine neue Instanz der <see cref="T:System.Net.SocketAddress" />-Klasse, wobei die angegebene Adressfamilie und die angegebene Puffergröße verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="54eba-116">Creates a new instance of the <see cref="T:System.Net.SocketAddress" /> class using the specified address family and buffer size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54eba-117">Verwenden Sie diese Überladung, um eine neue Instanz der- <xref:System.Net.SocketAddress> Klasse mit einer bestimmten zugrunde liegenden Puffergröße zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="54eba-117">Use this overload to create a new instance of the <xref:System.Net.SocketAddress> class with a particular underlying buffer size.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="54eba-118"><paramref name="size" /> ist kleiner als 2.</span><span class="sxs-lookup"><span data-stu-id="54eba-118"><paramref name="size" /> is less than 2.</span></span> <span data-ttu-id="54eba-119">Diese 2 Bytes werden zum Speichern von <paramref name="family" /> benötigt.</span><span class="sxs-lookup"><span data-stu-id="54eba-119">These 2 bytes are needed to store <paramref name="family" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object comparand);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object comparand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.SocketAddress.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (comparand As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ comparand);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="socketAddress.Equals comparand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparand" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="comparand"><span data-ttu-id="54eba-120">Das <see cref="T:System.Object" />, das mit dem aktuellen <see langword="Object" /> verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="54eba-120">The <see cref="T:System.Object" /> to compare with the current <see langword="Object" />.</span></span></param>
        <summary><span data-ttu-id="54eba-121">Bestimmt, ob das angegebene <see langword="Object" /> mit der angegebenen <see langword="Object" /> identisch ist.</span><span class="sxs-lookup"><span data-stu-id="54eba-121">Determines whether the specified <see langword="Object" /> is equal to the current <see langword="Object" />.</span></span></summary>
        <returns><span data-ttu-id="54eba-122"><see langword="true" />, wenn das angegebene <see langword="Object" /> gleich der aktuellen <see langword="Object" /> ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="54eba-122"><see langword="true" /> if the specified <see langword="Object" /> is equal to the current <see langword="Object" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Family">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.AddressFamily Family { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Sockets.AddressFamily Family" />
      <MemberSignature Language="DocId" Value="P:System.Net.SocketAddress.Family" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Family As AddressFamily" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::AddressFamily Family { System::Net::Sockets::AddressFamily get(); };" />
      <MemberSignature Language="F#" Value="member this.Family : System.Net.Sockets.AddressFamily" Usage="System.Net.SocketAddress.Family" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.AddressFamily</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54eba-123">Ruft den <see cref="T:System.Net.Sockets.AddressFamily" />-Enumerationswert der aktuellen <see cref="T:System.Net.SocketAddress" /> ab.</span><span class="sxs-lookup"><span data-stu-id="54eba-123">Gets the <see cref="T:System.Net.Sockets.AddressFamily" /> enumerated value of the current <see cref="T:System.Net.SocketAddress" />.</span></span></summary>
        <value><span data-ttu-id="54eba-124">Einer der <see cref="T:System.Net.Sockets.AddressFamily" />-Enumerationswerte.</span><span class="sxs-lookup"><span data-stu-id="54eba-124">One of the <see cref="T:System.Net.Sockets.AddressFamily" /> enumerated values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54eba-125">Diese Methode ruft den- <xref:System.Net.Sockets.AddressFamily> Enumerationswert ab, der das Adressierungs Schema des aktuellen darstellt <xref:System.Net.SocketAddress> .</span><span class="sxs-lookup"><span data-stu-id="54eba-125">This method gets the <xref:System.Net.Sockets.AddressFamily> enumerated value that represents the addressing scheme of the current <xref:System.Net.SocketAddress>.</span></span> <span data-ttu-id="54eba-126">Wenn Sie die entsprechende Zeichen folgen Darstellung von anzeigen möchten <xref:System.Net.Sockets.AddressFamily> , verwenden Sie die- <xref:System.Net.SocketAddress.ToString%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="54eba-126">If you want to view the corresponding string representation of <xref:System.Net.Sockets.AddressFamily>, use the <xref:System.Net.SocketAddress.ToString%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Sockets.AddressFamily" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.SocketAddress.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="socketAddress.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="54eba-127">Dient als Hashfunktion für einen bestimmten Typ, die in Hashalgorithmen und Datenstrukturen (z. B. Hashtabellen) verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="54eba-127">Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.</span></span></summary>
        <returns><span data-ttu-id="54eba-128">Ein Hashcode für die aktuelle <see cref="T:System.Object" />.</span><span class="sxs-lookup"><span data-stu-id="54eba-128">A hash code for the current <see cref="T:System.Object" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public byte this[int offset] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Net.SocketAddress.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(offset As Integer) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte default[int] { System::Byte get(int offset); void set(int offset, System::Byte value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : byte with get, set" Usage="System.Net.SocketAddress.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="54eba-129">Das Arrayindexelement für die gewünschten Informationen.</span><span class="sxs-lookup"><span data-stu-id="54eba-129">The array index element of the desired information.</span></span></param>
        <summary><span data-ttu-id="54eba-130">Ruft das angegebene Indexelement im zugrunde liegenden Puffer ab oder legt dieses fest.</span><span class="sxs-lookup"><span data-stu-id="54eba-130">Gets or sets the specified index element in the underlying buffer.</span></span></summary>
        <value><span data-ttu-id="54eba-131">Der Wert des angegebenen Indexelements im zugrunde liegenden Puffer.</span><span class="sxs-lookup"><span data-stu-id="54eba-131">The value of the specified index element in the underlying buffer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54eba-132">Diese Eigenschaft ruft die angegebene Byte Position im zugrunde liegenden Puffer ab oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="54eba-132">This property gets or sets the specified byte position in the underlying buffer.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="54eba-133">Stellen Sie sicher, dass aufgerufen wird, <xref:System.Net.SocketAddress.Size%2A> bevor auf Elemente im zugrunde liegenden Puffer verwiesen wird.</span><span class="sxs-lookup"><span data-stu-id="54eba-133">Be sure to call <xref:System.Net.SocketAddress.Size%2A> before referring to elements in the underlying buffer.</span></span> <span data-ttu-id="54eba-134">Das verweisen auf einen nicht vorhandenen Index bewirkt <xref:System.Net.SocketAddress> , dass eine auslöst <xref:System.IndexOutOfRangeException> .</span><span class="sxs-lookup"><span data-stu-id="54eba-134">Referring to an index that does not exist will cause the <xref:System.Net.SocketAddress> to throw an <xref:System.IndexOutOfRangeException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="54eba-135">Der angegebene Index ist im Puffer nicht vorhanden.</span><span class="sxs-lookup"><span data-stu-id="54eba-135">The specified index does not exist in the buffer.</span></span></exception>
        <altmember cref="P:System.Net.SocketAddress.Size" />
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public int Size { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Size" />
      <MemberSignature Language="DocId" Value="P:System.Net.SocketAddress.Size" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Size As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Size { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Size : int" Usage="System.Net.SocketAddress.Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54eba-136">Ruft die Größe des zugrunde liegenden Puffers der <see cref="T:System.Net.SocketAddress" /> ab.</span><span class="sxs-lookup"><span data-stu-id="54eba-136">Gets the underlying buffer size of the <see cref="T:System.Net.SocketAddress" />.</span></span></summary>
        <value><span data-ttu-id="54eba-137">Die Größe des zugrunde liegenden Puffers der <see cref="T:System.Net.SocketAddress" />.</span><span class="sxs-lookup"><span data-stu-id="54eba-137">The underlying buffer size of the <see cref="T:System.Net.SocketAddress" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54eba-138">Diese Eigenschaft ruft die zugrunde liegende Puffergröße des <xref:System.Net.SocketAddress> in Bytes ab.</span><span class="sxs-lookup"><span data-stu-id="54eba-138">This property gets the underlying buffer size of the <xref:System.Net.SocketAddress> in bytes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.SocketAddress.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="socketAddress.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="54eba-139">Gibt Informationen über die Socketadresse zurück.</span><span class="sxs-lookup"><span data-stu-id="54eba-139">Returns information about the socket address.</span></span></summary>
        <returns><span data-ttu-id="54eba-140">Eine Zeichenfolge mit Informationen über die <see cref="T:System.Net.SocketAddress" />.</span><span class="sxs-lookup"><span data-stu-id="54eba-140">A string that contains information about the <see cref="T:System.Net.SocketAddress" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54eba-141">Die <xref:System.Net.SocketAddress.ToString%2A> -Methode gibt eine Zeichenfolge zurück, die den <xref:System.Net.Sockets.AddressFamily> Enumerationswert, die Größe des zugrunde liegenden Puffers der <xref:System.Net.SocketAddress> Struktur und den restlichen Inhalt des Puffers enthält.</span><span class="sxs-lookup"><span data-stu-id="54eba-141">The <xref:System.Net.SocketAddress.ToString%2A> method returns a string that contains the <xref:System.Net.Sockets.AddressFamily> enumerated value, the size of the underlying buffer of the <xref:System.Net.SocketAddress> structure, and the remaining contents of the buffer.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
