<Type Name="DnsPermission" FullName="System.Net.DnsPermission">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b8755517ecb51f5d237b93a88e85cc78d63b6325" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36472616" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DnsPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit DnsPermission extends System.Security.CodeAccessPermission implements class System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="DocId" Value="T:System.Net.DnsPermission" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DnsPermission&#xA;Inherits CodeAccessPermission&#xA;Implements IUnrestrictedPermission" />
  <TypeSignature Language="C++ CLI" Value="public ref class DnsPermission sealed : System::Security::CodeAccessPermission, System::Security::Permissions::IUnrestrictedPermission" />
  <TypeSignature Language="F#" Value="type DnsPermission = class&#xA;    inherit CodeAccessPermission&#xA;    interface IUnrestrictedPermission" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.CodeAccessPermission</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Permissions.IUnrestrictedPermission</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Steuert die Zugriffsrechte auf die DNS-Server (Domain Name System) im Netzwerk.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Standardberechtigungen können alle lokalen und Zone Intranetanwendungen Zugriff auf DNS-Dienste und kein DNS-Berechtigung für Anwendungen für die Internetzone.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.SecurityZone" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DnsPermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.DnsPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DnsPermission(System::Security::Permissions::PermissionState state);" />
      <MemberSignature Language="F#" Value="new System.Net.DnsPermission : System.Security.Permissions.PermissionState -&gt; System.Net.DnsPermission" Usage="new System.Net.DnsPermission state" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state">Einer der <see cref="T:System.Security.Permissions.PermissionState" />-Werte.</param>
        <summary>Erstellt eine neue Instanz der <see cref="T:System.Net.DnsPermission" />-Klasse, die entweder uneingeschränkten oder keinen DNS-Zugriff ermöglicht.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn `state` ist <xref:System.Security.Permissions.PermissionState.Unrestricted>die <xref:System.Net.DnsPermission> Instanz übergibt alle Forderungen. Wenn `state` jeder andere Wert enthält den <xref:System.Net.DnsPermission> Instanz schlägt fehl, alle Anforderungen.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt eine Instanz von der <xref:System.Net.DnsPermission> Klasse.  
  
 [!code-cpp[DnsPermission_Constructor#1](~/samples/snippets/cpp/VS_Snippets_Remoting/DnsPermission_Constructor/CPP/dnspermission_constructor.cpp#1)]
 [!code-csharp[DnsPermission_Constructor#1](~/samples/snippets/csharp/VS_Snippets_Remoting/DnsPermission_Constructor/CS/dnspermission_constructor.cs#1)]
 [!code-vb[DnsPermission_Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/DnsPermission_Constructor/VB/dnspermission_constructor.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="state" /> ist kein gültiger <see cref="T:System.Security.Permissions.PermissionState" />-Wert.</exception>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.DnsPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Copy();" />
      <MemberSignature Language="F#" Value="abstract member Copy : unit -&gt; System.Security.IPermission&#xA;override this.Copy : unit -&gt; System.Security.IPermission" Usage="dnsPermission.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt eine identische Kopie der aktuellen Berechtigungsinstanz.</summary>
        <returns>Eine neue Instanz der <see cref="T:System.Net.DnsPermission" />-Klasse, die eine identische Kopie der aktuellen Instanz ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Kopie einer <xref:System.Net.DnsPermission> Instanz bietet den gleichen Zugriff auf DNS-Server wie die ursprüngliche Berechtigungsinstanz.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt eine identische Kopie eines vorhandenen <xref:System.Net.DnsPermission> Instanz.  
  
 [!code-cpp[DnsPermission_Copy#1](~/samples/snippets/cpp/VS_Snippets_Remoting/DnsPermission_Copy/CPP/dnspermission_copy.cpp#1)]
 [!code-csharp[DnsPermission_Copy#1](~/samples/snippets/csharp/VS_Snippets_Remoting/DnsPermission_Copy/CS/dnspermission_copy.cs#1)]
 [!code-vb[DnsPermission_Copy#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/DnsPermission_Copy/VB/dnspermission_copy.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public override void FromXml (System.Security.SecurityElement securityElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXml(class System.Security.SecurityElement securityElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.DnsPermission.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void FromXml(System::Security::SecurityElement ^ securityElement);" />
      <MemberSignature Language="F#" Value="abstract member FromXml : System.Security.SecurityElement -&gt; unit&#xA;override this.FromXml : System.Security.SecurityElement -&gt; unit" Usage="dnsPermission.FromXml securityElement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityElement" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="securityElement">Die XML-Codierung, die zum Wiederherstellen der <see cref="T:System.Net.DnsPermission" />-Instanz verwendet werden soll.</param>
        <summary>Stellt eine <see cref="T:System.Net.DnsPermission" />-Instanz aus einer XML-Codierung wieder her.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Net.DnsPermission.FromXml%2A> -Methode rekonstruiert ein <xref:System.Net.DnsPermission> -Instanz anhand einer XML-Codierung, die definiert, indem die <xref:System.Security.SecurityElement> Klasse.  
  
 Verwenden der <xref:System.Net.DnsPermission.ToXml%2A> Methode für die XML-Codierung der <xref:System.Net.DnsPermission> Instanz, einschließlich Zustandsinformationen.  
  
   
  
## Examples  
 Im folgenden Beispiel wird rekonstruiert ein <xref:System.Net.DnsPermission> -Instanz anhand einer XML-Codierung.  
  
 [!code-cpp[DnsPermission_FromXml#1](~/samples/snippets/cpp/VS_Snippets_Remoting/DnsPermission_FromXml/CPP/dnspermission_fromxml.cpp#1)]
 [!code-csharp[DnsPermission_FromXml#1](~/samples/snippets/csharp/VS_Snippets_Remoting/DnsPermission_FromXml/CS/dnspermission_fromxml.cs#1)]
 [!code-vb[DnsPermission_FromXml#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/DnsPermission_FromXml/VB/dnspermission_fromxml.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="securityElement" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="securityElement" /> ist kein <see cref="T:System.Net.DnsPermission" />-Element.</exception>
        <altmember cref="T:System.Security.SecurityElement" />
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.DnsPermission.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member Intersect : System.Security.IPermission -&gt; System.Security.IPermission&#xA;override this.Intersect : System.Security.IPermission -&gt; System.Security.IPermission" Usage="dnsPermission.Intersect target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">Die <see cref="T:System.Net.DnsPermission" />-Instanz, von der mit der aktuellen Instanz eine Schnittmenge gebildet werden soll.</param>
        <summary>Erstellt eine Berechtigungsinstanz, die die Schnittmenge aus der aktuellen Berechtigungsinstanz und der angegebenen Berechtigungsinstanz ist.</summary>
        <returns>Eine <see cref="T:System.Net.DnsPermission" />-Instanz, die die Schnittmenge aus der aktuellen <see cref="T:System.Net.DnsPermission" />-Instanz und der angegebenen <see cref="T:System.Net.DnsPermission" />-Instanz darstellt oder <see langword="null" />, wenn die Schnittmenge leer ist. Wenn die aktuelle Instanz und <paramref name="target" /> uneingeschränkt sind, gibt diese Methode eine neue, uneingeschränkte <see cref="T:System.Net.DnsPermission" />-Instanz zurück, andernfalls wird <see langword="null" /> zurückgegeben.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Net.DnsPermission.Intersect%2A> Methode gibt ein <xref:System.Net.DnsPermission> -Instanz, die den Zugriff durch sowohl das aktuelle definierten ermöglicht <xref:System.Net.DnsPermission> Instanz und die angegebene <xref:System.Net.DnsPermission> Instanz. Jede Anforderung muss beide Berechtigungen für die Weiterleitung von ihrer Schnittmenge übergeben.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt eine Berechtigung, die die Schnittmenge der aktuellen Berechtigungsinstanz ist auch die angegebene Berechtigungsinstanz.  
  
 [!code-cpp[dnspermission_union_intersect#2](~/samples/snippets/cpp/VS_Snippets_Remoting/dnspermission_union_intersect/CPP/dnspermission_union_intersect.cpp#2)]
 [!code-csharp[dnspermission_union_intersect#2](~/samples/snippets/csharp/VS_Snippets_Remoting/dnspermission_union_intersect/CS/dnspermission_union_intersect.cs#2)]
 [!code-vb[dnspermission_union_intersect#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/dnspermission_union_intersect/VB/dnspermission_union_intersect.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="target" /> ist weder eine <see cref="T:System.Net.DnsPermission" /> noch <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public override bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.DnsPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member IsSubsetOf : System.Security.IPermission -&gt; bool&#xA;override this.IsSubsetOf : System.Security.IPermission -&gt; bool" Usage="dnsPermission.IsSubsetOf target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">Die zweite <see cref="T:System.Net.DnsPermission" />-Instanz, die auf die Teilmengenbeziehung überprüft werden soll.</param>
        <summary>Bestimmt, ob die aktuelle Berechtigungsinstanz eine Teilmenge der angegebenen Berechtigungsinstanz ist.</summary>
        <returns>
          <see langword="false" />, wenn die aktuelle Instanz uneingeschränkt und <paramref name="target" /> entweder <see langword="null" /> oder uneingeschränkt ist, andernfalls <see langword="true" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die aktuelle <xref:System.Net.DnsPermission> Instanz ist eine Teilmenge des angegebenen <xref:System.Net.DnsPermission> Instanz, wenn die aktuelle <xref:System.Net.DnsPermission> Instanz gibt eine Reihe von Vorgängen, die vollständig enthalten ist durch das angegebene <xref:System.Net.DnsPermission> Instanz.  
  
 Wenn die <xref:System.Net.DnsPermission.IsSubsetOf%2A> -Methode zurückkehrt `true`, den aktuellen <xref:System.Net.DnsPermission> Instanz lässt keine umfassenderen Zugriff auf DNS-Server als verfügt das angegebene <xref:System.Net.DnsPermission> Instanz.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die <xref:System.Net.DnsPermission.IsSubsetOf%2A> Methode, um zu bestimmen, ob die aktuelle Berechtigungsinstanz eine Teilmenge der angegebenen Berechtigung-Instanz ist.  
  
 [!code-cpp[DnsPermission_IsSubsetOf#1](~/samples/snippets/cpp/VS_Snippets_Remoting/DnsPermission_IsSubsetOf/CPP/dnspermission_issubsetof.cpp#1)]
 [!code-csharp[DnsPermission_IsSubsetOf#1](~/samples/snippets/csharp/VS_Snippets_Remoting/DnsPermission_IsSubsetOf/CS/dnspermission_issubsetof.cs#1)]
 [!code-vb[DnsPermission_IsSubsetOf#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/DnsPermission_IsSubsetOf/VB/dnspermission_issubsetof.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="target" /> ist weder eine <see cref="T:System.Net.DnsPermission" /> noch <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsUnrestricted">
      <MemberSignature Language="C#" Value="public bool IsUnrestricted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUnrestricted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.DnsPermission.IsUnrestricted" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUnrestricted () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsUnrestricted();" />
      <MemberSignature Language="F#" Value="abstract member IsUnrestricted : unit -&gt; bool&#xA;override this.IsUnrestricted : unit -&gt; bool" Usage="dnsPermission.IsUnrestricted " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Überprüft den allgemeinen Berechtigungszustand des Objekts.</summary>
        <returns>
          <see langword="true" />, wenn die <see cref="T:System.Net.DnsPermission" />-Instanz mit <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> erstellt wurde, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel wird die <xref:System.Net.DnsPermission.IsUnrestricted%2A> Methode, um den gesamten Berechtigungsstatus des Objekts zu überprüfen.  
  
 [!code-cpp[DnsPermission_IsUnrestricted#1](~/samples/snippets/cpp/VS_Snippets_Remoting/DnsPermission_IsUnrestricted/CPP/dnspermission_isunrestricted.cpp#1)]
 [!code-csharp[DnsPermission_IsUnrestricted#1](~/samples/snippets/csharp/VS_Snippets_Remoting/DnsPermission_IsUnrestricted/CS/dnspermission_isunrestricted.cs#1)]
 [!code-vb[DnsPermission_IsUnrestricted#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/DnsPermission_IsUnrestricted/VB/dnspermission_isunrestricted.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public override System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.DnsPermission.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::SecurityElement ^ ToXml();" />
      <MemberSignature Language="F#" Value="abstract member ToXml : unit -&gt; System.Security.SecurityElement&#xA;override this.ToXml : unit -&gt; System.Security.SecurityElement" Usage="dnsPermission.ToXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt eine XML-Codierung einer <see cref="T:System.Net.DnsPermission" />-Instanz und ihres aktuellen Zustands.</summary>
        <returns>Eine <see cref="T:System.Security.SecurityElement" />-Instanz, die eine XML-codierte Darstellung des Sicherheitsobjekts einschließlich der Zustandsinformationen enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Net.DnsPermission.ToXml%2A> Methode erstellt eine <xref:System.Security.SecurityElement> Instanz für die XML-Codierung, eine Darstellung der <xref:System.Net.DnsPermission> Instanz, einschließlich Zustandsinformationen.  
  
 Verwenden der <xref:System.Net.DnsPermission.FromXml%2A> Verfahren zum Wiederherstellen von Informationen über den Zustand aus einer <xref:System.Security.SecurityElement> Instanz.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt eine XML-Codierung einer <xref:System.Net.DnsPermission> Instanz.  
  
 [!code-cpp[DnsPermission_Constructor#1](~/samples/snippets/cpp/VS_Snippets_Remoting/DnsPermission_Constructor/CPP/dnspermission_constructor.cpp#1)]
 [!code-csharp[DnsPermission_Constructor#1](~/samples/snippets/csharp/VS_Snippets_Remoting/DnsPermission_Constructor/CS/dnspermission_constructor.cs#1)]
 [!code-vb[DnsPermission_Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/DnsPermission_Constructor/VB/dnspermission_constructor.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Union (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Union(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.DnsPermission.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Union (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Union(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member Union : System.Security.IPermission -&gt; System.Security.IPermission&#xA;override this.Union : System.Security.IPermission -&gt; System.Security.IPermission" Usage="dnsPermission.Union target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">Die <see cref="T:System.Net.DnsPermission" />-Instanz, die mit der aktuellen Instanz kombiniert werden soll.</param>
        <summary>Erstellt eine Berechtigungsinstanz, die die Gesamtmenge der aktuellen Berechtigungsinstanz und der angegebenen Berechtigungsinstanz ist.</summary>
        <returns>Eine <see cref="T:System.Net.DnsPermission" />-Instanz, die die Gesamtmenge der aktuellen <see cref="T:System.Net.DnsPermission" />-Instanz mit der angegebenen <see cref="T:System.Net.DnsPermission" />-Instanz darstellt. Wenn <paramref name="target" /><see langword="null" /> ist, gibt diese Methode eine Kopie der aktuellen Instanz zurück. Wenn die aktuelle Instanz oder <paramref name="target" /> uneingeschränkt ist, gibt diese Methode eine uneingeschränkte <see cref="T:System.Net.DnsPermission" />-Instanz zurück, andernfalls wird eine eingeschränkte <see cref="T:System.Net.DnsPermission" />-Instanz zurückgegeben.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Net.DnsPermission.Union%2A> Methode gibt ein <xref:System.Net.DnsPermission> Instanz, die Zugriff erlaubt, definiert entweder durch die aktuelle <xref:System.Net.DnsPermission> Instanz oder die angegebene <xref:System.Net.DnsPermission> Instanz. Jede Anforderung, entweder Berechtigung durchläuft, übergibt die Union.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt eine Berechtigungsinstanz, die als Kombination der aktuellen Berechtigungsinstanz und die angegebene Berechtigung-Instanz.  
  
 [!code-cpp[dnspermission_union_intersect#1](~/samples/snippets/cpp/VS_Snippets_Remoting/dnspermission_union_intersect/CPP/dnspermission_union_intersect.cpp#1)]
 [!code-csharp[dnspermission_union_intersect#1](~/samples/snippets/csharp/VS_Snippets_Remoting/dnspermission_union_intersect/CS/dnspermission_union_intersect.cs#1)]
 [!code-vb[dnspermission_union_intersect#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/dnspermission_union_intersect/VB/dnspermission_union_intersect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="target" /> ist weder eine <see cref="T:System.Net.DnsPermission" /> noch <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>