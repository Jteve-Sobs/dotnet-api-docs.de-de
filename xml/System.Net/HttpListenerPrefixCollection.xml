<Type Name="HttpListenerPrefixCollection" FullName="System.Net.HttpListenerPrefixCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c9b1785f4db30b4d5fecdc48fb5ab30ca2262662" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52195098" /></Metadata><TypeSignature Language="C#" Value="public class HttpListenerPrefixCollection : System.Collections.Generic.ICollection&lt;string&gt;, System.Collections.Generic.IEnumerable&lt;string&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HttpListenerPrefixCollection extends System.Object implements class System.Collections.Generic.ICollection`1&lt;string&gt;, class System.Collections.Generic.IEnumerable`1&lt;string&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Net.HttpListenerPrefixCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class HttpListenerPrefixCollection&#xA;Implements ICollection(Of String), IEnumerable(Of String)" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpListenerPrefixCollection : System::Collections::Generic::ICollection&lt;System::String ^&gt;, System::Collections::Generic::IEnumerable&lt;System::String ^&gt;" />
  <TypeSignature Language="F#" Value="type HttpListenerPrefixCollection = class&#xA;    interface ICollection&lt;string&gt;&#xA;    interface seq&lt;string&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.HttpListener</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.String&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.String&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="c6633-101">Stellt die Auflistung dar, in der URI-Präfixe (Uniform Resource Identifier) für <see cref="T:System.Net.HttpListener" />-Objekte gespeichert werden.</span><span class="sxs-lookup"><span data-stu-id="c6633-101">Represents the collection used to store Uniform Resource Identifier (URI) prefixes for <see cref="T:System.Net.HttpListener" /> objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6633-102">Die <xref:System.Net.HttpListener.Prefixes%2A> Eigenschaft gibt Instanzen dieser Auflistung zurück.</span><span class="sxs-lookup"><span data-stu-id="c6633-102">The <xref:System.Net.HttpListener.Prefixes%2A> property returns instances of this collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6633-103">Das folgende Codebeispiel erstellt ein <xref:System.Net.HttpListener> und fügt benutzerdefinierte Präfixe für die <xref:System.Net.HttpListenerPrefixCollection>.</span><span class="sxs-lookup"><span data-stu-id="c6633-103">The following code example creates an <xref:System.Net.HttpListener> and adds user-specified prefixes to its <xref:System.Net.HttpListenerPrefixCollection>.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string uriPrefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(string uriPrefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerPrefixCollection.Add(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (uriPrefix As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::String ^ uriPrefix);" />
      <MemberSignature Language="F#" Value="abstract member Add : string -&gt; unit&#xA;override this.Add : string -&gt; unit" Usage="httpListenerPrefixCollection.Add uriPrefix" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uriPrefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uriPrefix"><span data-ttu-id="c6633-104">Eine <see cref="T:System.String" />, die die URI-Informationen identifiziert, die in eingehenden Anforderungen verglichen werden.</span><span class="sxs-lookup"><span data-stu-id="c6633-104">A <see cref="T:System.String" /> that identifies the URI information that is compared in incoming requests.</span></span> <span data-ttu-id="c6633-105">Das Präfix muss mit einem Schrägstrich ("/") beendet werden.</span><span class="sxs-lookup"><span data-stu-id="c6633-105">The prefix must be terminated with a forward slash ("/").</span></span></param>
        <summary><span data-ttu-id="c6633-106">Fügt der Sammlung ein Uniform Resource Identifier-Präfix (URI) hinzu.</span><span class="sxs-lookup"><span data-stu-id="c6633-106">Adds a Uniform Resource Identifier (URI) prefix to the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6633-107">Diese Methode fügt ein URI-Präfix auf den Satz von Präfixen, die von der zugeordneten verwalteten <xref:System.Net.HttpListener> Objekt.</span><span class="sxs-lookup"><span data-stu-id="c6633-107">This method adds a URI prefix to the set of prefixes managed by the associated <xref:System.Net.HttpListener> object.</span></span> <span data-ttu-id="c6633-108">Bei der Überprüfung `uriPrefix` um sicherzustellen, dass es ist zulässig, die Groß-/Kleinschreibung ignoriert wird.</span><span class="sxs-lookup"><span data-stu-id="c6633-108">When checking `uriPrefix` to ensure it is valid, case is ignored.</span></span>  
  
 <span data-ttu-id="c6633-109">Eine URI-Präfix-Zeichenfolge besteht aus einem Schema (http oder Https), einem Host, einem optionalen Port und einen optionalen Pfad, z. B. "`http://www.contoso.com:8080/customerData/`".</span><span class="sxs-lookup"><span data-stu-id="c6633-109">A URI prefix string is composed of a scheme (http or https), a host, an optional port, and an optional path, for example, "`http://www.contoso.com:8080/customerData/`".</span></span> <span data-ttu-id="c6633-110">Das Präfix muss mit einem Schrägstrich ("/") beendet werden.</span><span class="sxs-lookup"><span data-stu-id="c6633-110">The prefix must be terminated with a forward slash ("/").</span></span> <span data-ttu-id="c6633-111">Die <xref:System.Net.HttpListener> mit dem Präfix, das einen angeforderten URI am ehesten entspricht antwortet auf die Anforderung.</span><span class="sxs-lookup"><span data-stu-id="c6633-111">The <xref:System.Net.HttpListener> with the prefix that most closely matches a requested URI responds to the request.</span></span> <span data-ttu-id="c6633-112">Mehrere <xref:System.Net.HttpListener> Objekte können nicht das gleiche Präfix hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="c6633-112">Multiple <xref:System.Net.HttpListener> objects cannot add the same prefix.</span></span> <span data-ttu-id="c6633-113">Ein <xref:System.Net.HttpListenerException> Ausnahme wird ausgelöst, wenn ein <xref:System.Net.HttpListener> hinzufügt, verwenden Sie ein Präfix, das bereits vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="c6633-113">An <xref:System.Net.HttpListenerException> exception is thrown if an <xref:System.Net.HttpListener> adds a prefix that is already in use.</span></span>  
  
 <span data-ttu-id="c6633-114">Wenn ein Port angegeben ist, kann das Hostelement ersetzt werden, mit "`*`" gibt an, dass die <xref:System.Net.HttpListener> akzeptiert Anforderungen an den Port gesendet werden, wenn der angeforderte URI nicht mit einem anderen Präfix übereinstimmt.</span><span class="sxs-lookup"><span data-stu-id="c6633-114">When a port is specified, the host element can be replaced with "`*`" to indicate that the <xref:System.Net.HttpListener> accepts requests sent to the port if the requested URI does not match any other prefix.</span></span> <span data-ttu-id="c6633-115">Beispielsweise erhalten Sie alle Anforderungen gesendet an Port 8080, wenn der angeforderte URI nicht durch einen anderen behandelt <xref:System.Net.HttpListener>, das Präfix ist "`http://*:8080/`".</span><span class="sxs-lookup"><span data-stu-id="c6633-115">For example, to receive all requests sent to port 8080 when the requested URI is not handled by any other <xref:System.Net.HttpListener>, the prefix is "`http://*:8080/`".</span></span> <span data-ttu-id="c6633-116">Auf ähnliche Weise an, dass die <xref:System.Net.HttpListener> akzeptiert alle Anforderungen an einen Port gesendet ersetzen Sie das Hostelement mit der "`+`'Character',`https://+:8080/`".</span><span class="sxs-lookup"><span data-stu-id="c6633-116">Similarly, to specify that the <xref:System.Net.HttpListener> accepts all requests sent to a port, replace the host element with the "`+`" character, "`https://+:8080/`".</span></span> <span data-ttu-id="c6633-117">Die "`*`"und"`+`" Zeichen in der Präfixe, die Pfade enthalten vorhanden sein können.</span><span class="sxs-lookup"><span data-stu-id="c6633-117">The "`*`" and "`+`" characters can be present in prefixes that include paths.</span></span>  
  
 <span data-ttu-id="c6633-118">Ab .NET 4.5.3 und Windows 10, werden Platzhalter Unterdomänen in URI-Präfixe, die von verwaltet werden unterstützt eine <xref:System.Net.HttpListener> Objekt.</span><span class="sxs-lookup"><span data-stu-id="c6633-118">Starting with .NET 4.5.3 and Windows 10, wildcard subdomains are supported in URI prefixes that are managed by an <xref:System.Net.HttpListener> object.</span></span> <span data-ttu-id="c6633-119">Um eine Unterdomäne Platzhalter anzugeben, verwenden die "\*"-Zeichen als Teil des Hostnamens in eine URI-Präfix: z. B. `http://*.foo.com/`, und dies als Argument an die HttpListenerPrefixCollection.Add-Methode übergeben.</span><span class="sxs-lookup"><span data-stu-id="c6633-119">To specify a wildcard subdomain, use the "\*" character as part of the hostname in a URI prefix: for example, `http://*.foo.com/`, and pass this as the argument to the HttpListenerPrefixCollection.Add method.</span></span> <span data-ttu-id="c6633-120">Dies funktioniert auf .NET 4.5.3 und Windows 10; in früheren Versionen, erzeugt dies einen <xref:System.Net.HttpListenerException></span><span class="sxs-lookup"><span data-stu-id="c6633-120">This will work on .NET 4.5.3 and Windows 10; in earlier versions, this would generate an <xref:System.Net.HttpListenerException></span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6633-121">Das folgende Codebeispiel erstellt ein <xref:System.Net.HttpListener> und fügt benutzerdefinierte Präfixe für die <xref:System.Net.HttpListenerPrefixCollection>.</span><span class="sxs-lookup"><span data-stu-id="c6633-121">The following code example creates an <xref:System.Net.HttpListener> and adds user-specified prefixes to its <xref:System.Net.HttpListenerPrefixCollection>.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c6633-122"><paramref name="uriPrefix" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c6633-122"><paramref name="uriPrefix" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c6633-123"><paramref name="uriPrefix" /> verwendet nicht das Schema „http://“ oder „https://“.</span><span class="sxs-lookup"><span data-stu-id="c6633-123"><paramref name="uriPrefix" /> does not use the http:// or https:// scheme.</span></span> <span data-ttu-id="c6633-124">Dies sind die einzigen für <see cref="T:System.Net.HttpListener" />-Objekte unterstützten Schemas.</span><span class="sxs-lookup"><span data-stu-id="c6633-124">These are the only schemes supported for <see cref="T:System.Net.HttpListener" /> objects.</span></span>  
  
<span data-ttu-id="c6633-125">- oder - </span><span class="sxs-lookup"><span data-stu-id="c6633-125">-or-</span></span> 
 <span data-ttu-id="c6633-126"><paramref name="uriPrefix" /> ist kein ordnungsgemäß formatiertes URI-Präfix.</span><span class="sxs-lookup"><span data-stu-id="c6633-126"><paramref name="uriPrefix" /> is not a correctly formatted URI prefix.</span></span> <span data-ttu-id="c6633-127">Stellen Sie sicher, dass die Zeichenfolge mit einem "/" beendet wird.</span><span class="sxs-lookup"><span data-stu-id="c6633-127">Make sure the string is terminated with a "/".</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="c6633-128">Der <see cref="T:System.Net.HttpListener" />, der dieser Sammlung zugeordnet ist, ist geschlossen.</span><span class="sxs-lookup"><span data-stu-id="c6633-128">The <see cref="T:System.Net.HttpListener" /> associated with this collection is closed.</span></span></exception>
        <exception cref="T:System.Net.HttpListenerException"><span data-ttu-id="c6633-129">Bei einem Windows-Funktionsaufruf ist ein Fehler aufgetreten.</span><span class="sxs-lookup"><span data-stu-id="c6633-129">A Windows function call failed.</span></span> <span data-ttu-id="c6633-130">Überprüfen Sie die <see cref="P:System.Net.HttpListenerException.ErrorCode" />-Eigenschaft der Ausnahme, um die Ursache der Ausnahme zu bestimmen.</span><span class="sxs-lookup"><span data-stu-id="c6633-130">Check the exception's <see cref="P:System.Net.HttpListenerException.ErrorCode" /> property to determine the cause of the exception.</span></span> <span data-ttu-id="c6633-131">Diese Ausnahme wird ausgelöst, wenn bereits ein anderer <see cref="T:System.Net.HttpListener" /> das <paramref name="uriPrefix" />-Präfix hinzugefügt hat.</span><span class="sxs-lookup"><span data-stu-id="c6633-131">This exception is thrown if another <see cref="T:System.Net.HttpListener" /> has already added the prefix <paramref name="uriPrefix" />.</span></span></exception>
        <permission cref="T:System.Net.WebPermission"><span data-ttu-id="c6633-132">Um Netzwerkverbindungen zu akzeptieren.</span><span class="sxs-lookup"><span data-stu-id="c6633-132">To accept network connections.</span></span> <span data-ttu-id="c6633-133">Zugeordnete Enumeration: <see cref="F:System.Net.NetworkAccess.Accept" /></span><span class="sxs-lookup"><span data-stu-id="c6633-133">Associated enumeration: <see cref="F:System.Net.NetworkAccess.Accept" /></span></span></permission>
        <altmember cref="T:System.Net.HttpListener" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerPrefixCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="httpListenerPrefixCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c6633-134">Entfernt alle URI-Präfixe aus der Auflistung.</span><span class="sxs-lookup"><span data-stu-id="c6633-134">Removes all the Uniform Resource Identifier (URI) prefixes from the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6633-135">Nach dem Aufrufen dieser Methode kann nicht gestartet werden das zugeordnete <xref:System.Net.HttpListener> ohne neue Präfixe hinzuzufügen; Wenn Sie versuchen, zu diesem Zweck eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="c6633-135">After calling this method, you cannot start the associated <xref:System.Net.HttpListener> without adding new prefixes; if you try to do so, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6633-136">Das folgende Codebeispiel entfernt alle Präfixe in einem <xref:System.Net.HttpListenerPrefixCollection>.</span><span class="sxs-lookup"><span data-stu-id="c6633-136">The following code example removes all prefixes in an <xref:System.Net.HttpListenerPrefixCollection>.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#6](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.HttpListenerException"><span data-ttu-id="c6633-137">Bei einem Windows-Funktionsaufruf ist ein Fehler aufgetreten.</span><span class="sxs-lookup"><span data-stu-id="c6633-137">A Windows function call failed.</span></span> <span data-ttu-id="c6633-138">Überprüfen Sie die <see cref="P:System.Net.HttpListenerException.ErrorCode" />-Eigenschaft der Ausnahme, um die Ursache der Ausnahme zu bestimmen.</span><span class="sxs-lookup"><span data-stu-id="c6633-138">Check the exception's <see cref="P:System.Net.HttpListenerException.ErrorCode" /> property to determine the cause of the exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="c6633-139">Der <see cref="T:System.Net.HttpListener" />, der dieser Sammlung zugeordnet ist, ist geschlossen.</span><span class="sxs-lookup"><span data-stu-id="c6633-139">The <see cref="T:System.Net.HttpListener" /> associated with this collection is closed.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="c6633-140">Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren.</span><span class="sxs-lookup"><span data-stu-id="c6633-140">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="c6633-141">Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="c6633-141">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span></para></block>
        <altmember cref="T:System.Net.HttpListener" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (string uriPrefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(string uriPrefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerPrefixCollection.Contains(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (uriPrefix As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::String ^ uriPrefix);" />
      <MemberSignature Language="F#" Value="abstract member Contains : string -&gt; bool&#xA;override this.Contains : string -&gt; bool" Usage="httpListenerPrefixCollection.Contains uriPrefix" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uriPrefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uriPrefix"><span data-ttu-id="c6633-142">Ein <see cref="T:System.String" />, der das zu testende URI-Präfix enthält.</span><span class="sxs-lookup"><span data-stu-id="c6633-142">A <see cref="T:System.String" /> that contains the Uniform Resource Identifier (URI) prefix to test.</span></span></param>
        <summary><span data-ttu-id="c6633-143">Gibt einen <see cref="T:System.Boolean" />-Wert zurück, der angibt, ob das angegebene Präfix in der Auflistung enthalten ist.</span><span class="sxs-lookup"><span data-stu-id="c6633-143">Returns a <see cref="T:System.Boolean" /> value that indicates whether the specified prefix is contained in the collection.</span></span></summary>
        <returns><span data-ttu-id="c6633-144"><see langword="true" />, wenn die Auflistung das durch <paramref name="uriPrefix" /> angegebene Präfix enthält, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c6633-144"><see langword="true" /> if this collection contains the prefix specified by <paramref name="uriPrefix" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6633-145">Das angegebene Präfix muss einen vorhandenen Wert genau übereinstimmen.</span><span class="sxs-lookup"><span data-stu-id="c6633-145">The specified prefix must exactly match an existing value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6633-146">Im folgenden Codebeispiel wird überprüft, ob einem Benutzer angegebenen Präfix, in der Präfix-Auflistung, der enthalten ist eine <xref:System.Net.HttpListener>.</span><span class="sxs-lookup"><span data-stu-id="c6633-146">The following code example checks to see whether a user-specified prefix is contained in the prefix collection of an <xref:System.Net.HttpListener>.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#4](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c6633-147"><paramref name="uriPrefix" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c6633-147"><paramref name="uriPrefix" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Net.HttpListener" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c6633-148">Kopiert den Inhalt einer <see cref="T:System.Net.HttpListenerPrefixCollection" /> in das angegebene Array.</span><span class="sxs-lookup"><span data-stu-id="c6633-148">Copies the contents of an <see cref="T:System.Net.HttpListenerPrefixCollection" /> to the specified array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6633-149">Das Array muss Zeichenfolgen enthalten können, und kann nicht mehrdimensional sein.</span><span class="sxs-lookup"><span data-stu-id="c6633-149">The array must be able to contain strings and cannot be multidimensional.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Array array, int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerPrefixCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(Array ^ array, int offset);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : Array * int -&gt; unit" Usage="httpListenerPrefixCollection.CopyTo (array, offset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="c6633-150">Das eindimensionale <see cref="T:System.Array" />, das die URI-Präfixzeichenfolgen in dieser Auflistung empfängt.</span><span class="sxs-lookup"><span data-stu-id="c6633-150">The one dimensional <see cref="T:System.Array" /> that receives the Uniform Resource Identifier (URI) prefix strings in this collection.</span></span></param>
        <param name="offset"><span data-ttu-id="c6633-151">Der nullbasierte Index im <paramref name="array" />, bei dem der Kopiervorgang beginnt.</span><span class="sxs-lookup"><span data-stu-id="c6633-151">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="c6633-152">Kopiert den Inhalt einer <see cref="T:System.Net.HttpListenerPrefixCollection" /> in das angegebene Array.</span><span class="sxs-lookup"><span data-stu-id="c6633-152">Copies the contents of an <see cref="T:System.Net.HttpListenerPrefixCollection" /> to the specified array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6633-153">Das Array muss Zeichenfolgen enthalten können, und kann nicht mehrdimensional sein.</span><span class="sxs-lookup"><span data-stu-id="c6633-153">The array must be able to contain strings and cannot be multidimensional.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6633-154">Im folgenden Codebeispiel wird kopiert, die Präfixe in einem <xref:System.Net.HttpListenerPrefixCollection>.</span><span class="sxs-lookup"><span data-stu-id="c6633-154">The following code example copies the prefixes in a <xref:System.Net.HttpListenerPrefixCollection>.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#7](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c6633-155"><paramref name="array" /> ist mehrdimensional.</span><span class="sxs-lookup"><span data-stu-id="c6633-155"><paramref name="array" /> has more than one dimension.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c6633-156">Diese Auflistung enthält mehr Elemente als in <paramref name="array" /> ab dem <paramref name="offset" /> gespeichert werden können.</span><span class="sxs-lookup"><span data-stu-id="c6633-156">This collection contains more elements than can be stored in <paramref name="array" /> starting at <paramref name="offset" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="c6633-157">Der <see cref="T:System.Net.HttpListener" />, der dieser Sammlung zugeordnet ist, ist geschlossen.</span><span class="sxs-lookup"><span data-stu-id="c6633-157">The <see cref="T:System.Net.HttpListener" /> associated with this collection is closed.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="c6633-158">In <paramref name="array" /> können keine Zeichenfolgenwerte gespeichert werden.</span><span class="sxs-lookup"><span data-stu-id="c6633-158"><paramref name="array" /> cannot store string values.</span></span></exception>
        <altmember cref="T:System.Net.HttpListener" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (string[] array, int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(string[] array, int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerPrefixCollection.CopyTo(System.String[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As String(), offset As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;System::String ^&gt; ^ array, int offset);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : string[] * int -&gt; unit&#xA;override this.CopyTo : string[] * int -&gt; unit" Usage="httpListenerPrefixCollection.CopyTo (array, offset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.String[]" />
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="c6633-159">Das eindimensionale Zeichenfolgenarray, das die URI-Präfixzeichenfolgen in dieser Auflistung empfängt.</span><span class="sxs-lookup"><span data-stu-id="c6633-159">The one dimensional string array that receives the Uniform Resource Identifier (URI) prefix strings in this collection.</span></span></param>
        <param name="offset"><span data-ttu-id="c6633-160">Der nullbasierte Index im <paramref name="array" />, bei dem der Kopiervorgang beginnt.</span><span class="sxs-lookup"><span data-stu-id="c6633-160">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="c6633-161">Kopiert den Inhalt einer <see cref="T:System.Net.HttpListenerPrefixCollection" /> in das angegebene Zeichenfolgenarray.</span><span class="sxs-lookup"><span data-stu-id="c6633-161">Copies the contents of an <see cref="T:System.Net.HttpListenerPrefixCollection" /> to the specified string array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6633-162">Das Array muss Zeichenfolgen enthalten können, und kann nicht mehrdimensional sein.</span><span class="sxs-lookup"><span data-stu-id="c6633-162">The array must be able to contain strings and cannot be multidimensional.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6633-163">Im folgenden Codebeispiel wird kopiert, die Präfixe in einem <xref:System.Net.HttpListenerPrefixCollection>.</span><span class="sxs-lookup"><span data-stu-id="c6633-163">The following code example copies the prefixes in a <xref:System.Net.HttpListenerPrefixCollection>.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#7](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c6633-164"><paramref name="array" /> ist mehrdimensional.</span><span class="sxs-lookup"><span data-stu-id="c6633-164"><paramref name="array" /> has more than one dimension.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c6633-165">Diese Auflistung enthält mehr Elemente als in <paramref name="array" /> ab dem <paramref name="offset" /> gespeichert werden können.</span><span class="sxs-lookup"><span data-stu-id="c6633-165">This collection contains more elements than can be stored in <paramref name="array" /> starting at <paramref name="offset" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="c6633-166">Der <see cref="T:System.Net.HttpListener" />, der dieser Sammlung zugeordnet ist, ist geschlossen.</span><span class="sxs-lookup"><span data-stu-id="c6633-166">The <see cref="T:System.Net.HttpListener" /> associated with this collection is closed.</span></span></exception>
        <altmember cref="T:System.Net.HttpListener" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerPrefixCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Net.HttpListenerPrefixCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c6633-167">Ruft die Anzahl der Präfixe in der Auflistung ab.</span><span class="sxs-lookup"><span data-stu-id="c6633-167">Gets the number of prefixes contained in the collection.</span></span></summary>
        <value><span data-ttu-id="c6633-168">Ein <see cref="T:System.Int32" />-Typ, der die Anzahl der Präfixe in dieser Auflistung enthält.</span><span class="sxs-lookup"><span data-stu-id="c6633-168">An <see cref="T:System.Int32" /> that contains the number of prefixes in this collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c6633-169">Das folgende Codebeispiel zeigt die Präfixe in einer Auflistung.</span><span class="sxs-lookup"><span data-stu-id="c6633-169">The following code example displays the prefixes in a collection.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;string&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;string&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerPrefixCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;System::String ^&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;string&gt;&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;string&gt;" Usage="httpListenerPrefixCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c6633-170">Gibt ein Objekt zurück, das zum Durchlaufen der Auflistung verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="c6633-170">Returns an object that can be used to iterate through the collection.</span></span></summary>
        <returns><span data-ttu-id="c6633-171">Ein Objekt, das die <see cref="T:System.Collections.IEnumerator" />-Schnittstelle implementiert und Zugriff auf die Zeichenfolgen in dieser Auflistung bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="c6633-171">An object that implements the <see cref="T:System.Collections.IEnumerator" /> interface and provides access to the strings in this collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6633-172">Das Objekt, das von dieser Methode zurückgegeben wird, ist zunächst vor dem ersten Element in der Auflistung positioniert.</span><span class="sxs-lookup"><span data-stu-id="c6633-172">The object that is returned by this method is initially positioned before the first element in this collection.</span></span> <span data-ttu-id="c6633-173">Rufen Sie die <xref:System.Collections.IEnumerator.MoveNext%2A> -Methode auf, bevor Sie das erste Element zugreifen können.</span><span class="sxs-lookup"><span data-stu-id="c6633-173">You must call the <xref:System.Collections.IEnumerator.MoveNext%2A> method before you can access the first element.</span></span> <span data-ttu-id="c6633-174">Wenn das Element an der aktuellen Position zugreifen zu können, rufen die <xref:System.Collections.IEnumerator.Current%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c6633-174">To access the element at the current position, call the <xref:System.Collections.IEnumerator.Current%2A> property.</span></span>  
  
 <span data-ttu-id="c6633-175">Ändern Sie die Auflistung bei der Verwendung des Enumerators nicht.</span><span class="sxs-lookup"><span data-stu-id="c6633-175">Do not modify the collection while using the enumerator.</span></span> <span data-ttu-id="c6633-176">Wenn die Auflistung geändert wird, während eines Enumerators verwenden, beim Festlegen der Position durch den Aufruf <xref:System.Collections.IEnumerator.MoveNext%2A> oder <xref:System.Collections.IEnumerator.Reset%2A> bewirkt, dass ein <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="c6633-176">If the collection is modified while an enumerator is in use, an attempt to set the position by calling <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> causes an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="c6633-177">Eine ausführliche Beschreibung der Enumeratoren, finden Sie in der Dokumentation für die <xref:System.Collections.IEnumerator> Klasse und die <xref:System.Collections.IEnumerable.GetEnumerator%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="c6633-177">For a detailed description of enumerators, see the documentation for the <xref:System.Collections.IEnumerator> class and the <xref:System.Collections.IEnumerable.GetEnumerator%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6633-178">Im folgenden Codebeispiel wird veranschaulicht, Enumeration einer Auflistung.</span><span class="sxs-lookup"><span data-stu-id="c6633-178">The following code example demonstrates enumerating through a collection.</span></span> <span data-ttu-id="c6633-179">Beachten Sie, dass die Visual Basic- und c#-Beispiele-spezifische Anweisungen verwenden, um das Durchlaufen der Auflistung anstatt durch Abrufen des Enumerators.</span><span class="sxs-lookup"><span data-stu-id="c6633-179">Note that the Visual Basic and C# examples use language specific statements to enumerate through the collection instead of retrieving the enumerator.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerPrefixCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Net.HttpListenerPrefixCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c6633-180">Ruft einen Wert ab, der angibt, ob die Auflistung schreibgeschützt ist.</span><span class="sxs-lookup"><span data-stu-id="c6633-180">Gets a value that indicates whether access to the collection is read-only.</span></span></summary>
        <value><span data-ttu-id="c6633-181">Gibt immer <see langword="false" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="c6633-181">Always returns <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerPrefixCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Net.HttpListenerPrefixCollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c6633-182">Ruft einen Wert ab, der angibt, ob der Zugriff auf die Auflistung synchronisiert (threadsicher) ist.</span><span class="sxs-lookup"><span data-stu-id="c6633-182">Gets a value that indicates whether access to the collection is synchronized (thread-safe).</span></span></summary>
        <value><span data-ttu-id="c6633-183">Diese Eigenschaft gibt immer <see langword="false" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="c6633-183">This property always returns <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6633-184">Die Enumeration einer Auflistung ist systemintern keine threadsichere Prozedur.</span><span class="sxs-lookup"><span data-stu-id="c6633-184">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="c6633-185">Selbst wenn eine Auflistung synchronisiert wird, besteht die Möglichkeit, dass andere Threads sie ändern. Dies führt dazu, dass der Enumerator eine Ausnahme auslöst.</span><span class="sxs-lookup"><span data-stu-id="c6633-185">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="c6633-186">Um während der Enumeration Threadsicherheit zu gewährleisten, können Sie entweder die Auflistung während der gesamten Enumeration sperren oder die Ausnahmen, die aus von anderen Threads stammenden Änderungen resultieren.</span><span class="sxs-lookup"><span data-stu-id="c6633-186">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions that result from changes made by other threads.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (string uriPrefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(string uriPrefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerPrefixCollection.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (uriPrefix As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(System::String ^ uriPrefix);" />
      <MemberSignature Language="F#" Value="abstract member Remove : string -&gt; bool&#xA;override this.Remove : string -&gt; bool" Usage="httpListenerPrefixCollection.Remove uriPrefix" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uriPrefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uriPrefix"><span data-ttu-id="c6633-187">Ein <see cref="T:System.String" />, der das zu entfernende URI-Präfix enthält.</span><span class="sxs-lookup"><span data-stu-id="c6633-187">A <see cref="T:System.String" /> that contains the URI prefix to remove.</span></span></param>
        <summary><span data-ttu-id="c6633-188">Entfernt den angegebenen URI aus der Liste der Präfixe, die vom <see cref="T:System.Net.HttpListener" />-Objekt behandelt werden.</span><span class="sxs-lookup"><span data-stu-id="c6633-188">Removes the specified Uniform Resource Identifier (URI) from the list of prefixes handled by the <see cref="T:System.Net.HttpListener" /> object.</span></span></summary>
        <returns><span data-ttu-id="c6633-189"><see langword="true" />, wenn die <paramref name="uriPrefix" /> in der <see cref="T:System.Net.HttpListenerPrefixCollection" /> gefunden und entfernt wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c6633-189"><see langword="true" /> if the <paramref name="uriPrefix" /> was found in the <see cref="T:System.Net.HttpListenerPrefixCollection" /> and removed; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6633-190">Wenn `uriPrefix` ist nicht in der Auflistung, diese Methode führt keine Aktion.</span><span class="sxs-lookup"><span data-stu-id="c6633-190">If `uriPrefix` is not in the collection, this method does nothing.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c6633-191"><paramref name="uriPrefix" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c6633-191"><paramref name="uriPrefix" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.HttpListenerException"><span data-ttu-id="c6633-192">Bei einem Windows-Funktionsaufruf ist ein Fehler aufgetreten.</span><span class="sxs-lookup"><span data-stu-id="c6633-192">A Windows function call failed.</span></span> <span data-ttu-id="c6633-193">Überprüfen Sie den Fehlercode der Ausnahme, um die Ursache der Ausnahme zu bestimmen.</span><span class="sxs-lookup"><span data-stu-id="c6633-193">To determine the cause of the exception, check the exception's error code.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="c6633-194">Der <see cref="T:System.Net.HttpListener" />, der dieser Sammlung zugeordnet ist, ist geschlossen.</span><span class="sxs-lookup"><span data-stu-id="c6633-194">The <see cref="T:System.Net.HttpListener" /> associated with this collection is closed.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="c6633-195">Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren.</span><span class="sxs-lookup"><span data-stu-id="c6633-195">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="c6633-196">Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="c6633-196">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span></para></block>
        <altmember cref="T:System.Net.HttpListener" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerPrefixCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c6633-197">Gibt ein Objekt zurück, das zum Durchlaufen der Auflistung verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="c6633-197">Returns an object that can be used to iterate through the collection.</span></span></summary>
        <returns><span data-ttu-id="c6633-198">Ein Objekt, das die <see cref="T:System.Collections.IEnumerator" />-Schnittstelle implementiert und Zugriff auf die Zeichenfolgen in dieser Auflistung bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="c6633-198">An object that implements the <see cref="T:System.Collections.IEnumerator" /> interface and provides access to the strings in this collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6633-199">Das Objekt, das von dieser Methode zurückgegeben wird, ist zunächst vor dem ersten Element in der Auflistung positioniert.</span><span class="sxs-lookup"><span data-stu-id="c6633-199">The object that is returned by this method is initially positioned before the first element in this collection.</span></span> <span data-ttu-id="c6633-200">Rufen Sie die <xref:System.Collections.IEnumerator.MoveNext%2A> -Methode auf, bevor Sie das erste Element zugreifen können.</span><span class="sxs-lookup"><span data-stu-id="c6633-200">You must call the <xref:System.Collections.IEnumerator.MoveNext%2A> method before you can access the first element.</span></span> <span data-ttu-id="c6633-201">Wenn das Element an der aktuellen Position zugreifen zu können, rufen die <xref:System.Collections.IEnumerator.Current%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c6633-201">To access the element at the current position, call the <xref:System.Collections.IEnumerator.Current%2A> property.</span></span>  
  
 <span data-ttu-id="c6633-202">Ändern Sie die Auflistung bei der Verwendung des Enumerators nicht.</span><span class="sxs-lookup"><span data-stu-id="c6633-202">Do not modify the collection while using the enumerator.</span></span> <span data-ttu-id="c6633-203">Wenn die Auflistung geändert wird, während eines Enumerators verwenden, beim Festlegen der Position durch den Aufruf <xref:System.Collections.IEnumerator.MoveNext%2A> oder <xref:System.Collections.IEnumerator.Reset%2A> bewirkt, dass ein <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="c6633-203">If the collection is modified while an enumerator is in use, an attempt to set the position by calling <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> causes an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="c6633-204">Eine ausführliche Beschreibung der Enumeratoren, finden Sie in der Dokumentation für die <xref:System.Collections.IEnumerator> Klasse und die <xref:System.Collections.IEnumerable.GetEnumerator%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="c6633-204">For a detailed description of enumerators, see the documentation for the <xref:System.Collections.IEnumerator> class and the <xref:System.Collections.IEnumerable.GetEnumerator%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
      </Docs>
    </Member>
  </Members>
</Type>