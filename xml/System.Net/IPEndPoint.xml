<Type Name="IPEndPoint" FullName="System.Net.IPEndPoint">
  <Metadata><Meta Name="ms.openlocfilehash" Value="be809cc096173de5a3663a077b3c19e0fe194c75" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86798922" /></Metadata><TypeSignature Language="C#" Value="public class IPEndPoint : System.Net.EndPoint" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit IPEndPoint extends System.Net.EndPoint" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="DocId" Value="T:System.Net.IPEndPoint" />
  <TypeSignature Language="VB.NET" Value="Public Class IPEndPoint&#xA;Inherits EndPoint" />
  <TypeSignature Language="C++ CLI" Value="public ref class IPEndPoint : System::Net::EndPoint" />
  <TypeSignature Language="F#" Value="type IPEndPoint = class&#xA;    inherit EndPoint" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit IPEndPoint extends System.Net.EndPoint" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Primitives</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Net.Primitives" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Net" FromVersion="4.0.0.0" To="System" ToVersion="4.0.0.0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Net.EndPoint</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="56398-101">Stellt einen Netzwerkendpunkt als eine IP-Adresse und einer Portnummer dar.</span><span class="sxs-lookup"><span data-stu-id="56398-101">Represents a network endpoint as an IP address and a port number.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56398-102">Die <xref:System.Net.IPEndPoint> -Klasse enthält die Host-und lokalen-oder remoteinportinformationen, die von einer Anwendung benötigt werden, um eine Verbindung mit einem Dienst auf einem Host herzustellen</span><span class="sxs-lookup"><span data-stu-id="56398-102">The <xref:System.Net.IPEndPoint> class contains the host and local or remote port information needed by an application to connect to a service on a host.</span></span> <span data-ttu-id="56398-103">Durch Kombinieren der IP-Adresse und Portnummer eines Diensts des Hosts <xref:System.Net.IPEndPoint> bildet die-Klasse einen Verbindungspunkt zu einem Dienst.</span><span class="sxs-lookup"><span data-stu-id="56398-103">By combining the host's IP address and port number of a service, the <xref:System.Net.IPEndPoint> class forms a connection point to a service.</span></span>  
  
   
  
## Examples  
 [!code-cpp[System.Net.IPEndPoint#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.IPEndPoint/CPP/ipendpoint.cpp#1)]
 [!code-csharp[System.Net.IPEndPoint#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.IPEndPoint/CS/ipendpoint.cs#1)]
 [!code-vb[System.Net.IPEndPoint#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.IPEndPoint/VB/ipendpoint.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="56398-104">Initialisiert eine neue Instanz der <see cref="T:System.Net.IPEndPoint" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="56398-104">Initializes a new instance of the <see cref="T:System.Net.IPEndPoint" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IPEndPoint (long address, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 address, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.IPEndPoint.#ctor(System.Int64,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (address As Long, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IPEndPoint(long address, int port);" />
      <MemberSignature Language="F#" Value="new System.Net.IPEndPoint : int64 * int -&gt; System.Net.IPEndPoint" Usage="new System.Net.IPEndPoint (address, port)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="address" Type="System.Int64" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="56398-105">Die IP-Adresse des Internethosts.</span><span class="sxs-lookup"><span data-stu-id="56398-105">The IP address of the Internet host.</span></span> <span data-ttu-id="56398-106">Der Wert 0x2414188f weist z. B. im Big-Endian-Format die IP-Adresse "143.24.20.36" auf.</span><span class="sxs-lookup"><span data-stu-id="56398-106">For example, the value 0x2414188f in big-endian format would be the IP address "143.24.20.36".</span></span></param>
        <param name="port"><span data-ttu-id="56398-107">Die der <paramref name="address" /> zugeordnete Portnummer oder 0, um einen beliebigen verfügbaren Port anzugeben.</span><span class="sxs-lookup"><span data-stu-id="56398-107">The port number associated with the <paramref name="address" />, or 0 to specify any available port.</span></span> <span data-ttu-id="56398-108"><paramref name="port" /> liegt in der Hostreihenfolge vor.</span><span class="sxs-lookup"><span data-stu-id="56398-108"><paramref name="port" /> is in host order.</span></span></param>
        <summary><span data-ttu-id="56398-109">Initialisiert eine neue Instanz der <see cref="T:System.Net.IPEndPoint" />-Klasse mit der angegebenen Adresse und der angegebenen Anschlussnummer.</span><span class="sxs-lookup"><span data-stu-id="56398-109">Initializes a new instance of the <see cref="T:System.Net.IPEndPoint" /> class with the specified address and port number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="56398-110">Im folgenden Beispiel wird die angegebene IP-Adresse und Portnummer verwendet, um einen zu erstellen <xref:System.Net.IPEndPoint> .</span><span class="sxs-lookup"><span data-stu-id="56398-110">The following example uses the specified IP address and port number to create an <xref:System.Net.IPEndPoint>.</span></span>  
  
 [!code-cpp[IPEndPoint_Properties#4](~/samples/snippets/cpp/VS_Snippets_Remoting/IPEndPoint_Properties/CPP/ipendpoint_properties.cpp#4)]
 [!code-csharp[IPEndPoint_Properties#4](~/samples/snippets/csharp/VS_Snippets_Remoting/IPEndPoint_Properties/CS/ipendpoint_properties.cs#4)]
 [!code-vb[IPEndPoint_Properties#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/IPEndPoint_Properties/VB/ipendpoint_properties.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="56398-111"><paramref name="port" /> ist kleiner als <see cref="F:System.Net.IPEndPoint.MinPort" />.</span><span class="sxs-lookup"><span data-stu-id="56398-111"><paramref name="port" /> is less than <see cref="F:System.Net.IPEndPoint.MinPort" />.</span></span>  
  
<span data-ttu-id="56398-112">- oder -</span><span class="sxs-lookup"><span data-stu-id="56398-112">-or-</span></span> 
 <span data-ttu-id="56398-113"><paramref name="port" /> ist größer als <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span><span class="sxs-lookup"><span data-stu-id="56398-113"><paramref name="port" /> is greater than <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span></span>  
  
<span data-ttu-id="56398-114">Oder</span><span class="sxs-lookup"><span data-stu-id="56398-114">-or-</span></span> 
 <span data-ttu-id="56398-115"><paramref name="address" /> ist kleiner als 0 oder größer als 0x00000000FFFFFFFF.</span><span class="sxs-lookup"><span data-stu-id="56398-115"><paramref name="address" /> is less than 0 or greater than 0x00000000FFFFFFFF.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IPEndPoint (System.Net.IPAddress address, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.IPAddress address, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.IPEndPoint.#ctor(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (address As IPAddress, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IPEndPoint(System::Net::IPAddress ^ address, int port);" />
      <MemberSignature Language="F#" Value="new System.Net.IPEndPoint : System.Net.IPAddress * int -&gt; System.Net.IPEndPoint" Usage="new System.Net.IPEndPoint (address, port)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="56398-116"><see cref="T:System.Net.IPAddress" />.</span><span class="sxs-lookup"><span data-stu-id="56398-116">An <see cref="T:System.Net.IPAddress" />.</span></span></param>
        <param name="port"><span data-ttu-id="56398-117">Die der <paramref name="address" /> zugeordnete Portnummer oder 0, um einen beliebigen verfügbaren Port anzugeben.</span><span class="sxs-lookup"><span data-stu-id="56398-117">The port number associated with the <paramref name="address" />, or 0 to specify any available port.</span></span> <span data-ttu-id="56398-118"><paramref name="port" /> liegt in der Hostreihenfolge vor.</span><span class="sxs-lookup"><span data-stu-id="56398-118"><paramref name="port" /> is in host order.</span></span></param>
        <summary><span data-ttu-id="56398-119">Initialisiert eine neue Instanz der <see cref="T:System.Net.IPEndPoint" />-Klasse mit der angegebenen Adresse und der angegebenen Anschlussnummer.</span><span class="sxs-lookup"><span data-stu-id="56398-119">Initializes a new instance of the <see cref="T:System.Net.IPEndPoint" /> class with the specified address and port number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[System.Net.IPEndPoint#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.IPEndPoint/CPP/ipendpoint.cpp#2)]
 [!code-csharp[System.Net.IPEndPoint#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.IPEndPoint/CS/ipendpoint.cs#2)]
 [!code-vb[System.Net.IPEndPoint#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.IPEndPoint/VB/ipendpoint.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56398-120"><paramref name="address" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="56398-120"><paramref name="address" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="56398-121"><paramref name="port" /> ist kleiner als <see cref="F:System.Net.IPEndPoint.MinPort" />.</span><span class="sxs-lookup"><span data-stu-id="56398-121"><paramref name="port" /> is less than <see cref="F:System.Net.IPEndPoint.MinPort" />.</span></span>  
  
<span data-ttu-id="56398-122">- oder -</span><span class="sxs-lookup"><span data-stu-id="56398-122">-or-</span></span> 
 <span data-ttu-id="56398-123"><paramref name="port" /> ist größer als <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span><span class="sxs-lookup"><span data-stu-id="56398-123"><paramref name="port" /> is greater than <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span></span>  
  
<span data-ttu-id="56398-124">Oder</span><span class="sxs-lookup"><span data-stu-id="56398-124">-or-</span></span> 
 <span data-ttu-id="56398-125"><paramref name="address" /> ist kleiner als 0 oder größer als 0x00000000FFFFFFFF.</span><span class="sxs-lookup"><span data-stu-id="56398-125"><paramref name="address" /> is less than 0 or greater than 0x00000000FFFFFFFF.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Address">
      <MemberSignature Language="C#" Value="public System.Net.IPAddress Address { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IPAddress Address" />
      <MemberSignature Language="DocId" Value="P:System.Net.IPEndPoint.Address" />
      <MemberSignature Language="VB.NET" Value="Public Property Address As IPAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IPAddress ^ Address { System::Net::IPAddress ^ get(); void set(System::Net::IPAddress ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Address : System.Net.IPAddress with get, set" Usage="System.Net.IPEndPoint.Address" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56398-126">Ruft die IP-Adresse des Endpunktes ab oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="56398-126">Gets or sets the IP address of the endpoint.</span></span></summary>
        <value><span data-ttu-id="56398-127">Eine <see cref="T:System.Net.IPAddress" />-Instanz mit der IP-Adresse des Endpunkts.</span><span class="sxs-lookup"><span data-stu-id="56398-127">An <see cref="T:System.Net.IPAddress" /> instance containing the IP address of the endpoint.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="56398-128">Im folgenden Beispiel wird die- <xref:System.Net.IPEndPoint.Address%2A> Eigenschaft mit dem <xref:System.Net.IPAddress> angegebenen festgelegt.</span><span class="sxs-lookup"><span data-stu-id="56398-128">The following example sets the <xref:System.Net.IPEndPoint.Address%2A> property using the <xref:System.Net.IPAddress> specified.</span></span>  
  
 [!code-cpp[System.Net.IPEndPoint#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.IPEndPoint/CPP/ipendpoint.cpp#3)]
 [!code-csharp[System.Net.IPEndPoint#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.IPEndPoint/CS/ipendpoint.cs#3)]
 [!code-vb[System.Net.IPEndPoint#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.IPEndPoint/VB/ipendpoint.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddressFamily">
      <MemberSignature Language="C#" Value="public override System.Net.Sockets.AddressFamily AddressFamily { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Sockets.AddressFamily AddressFamily" />
      <MemberSignature Language="DocId" Value="P:System.Net.IPEndPoint.AddressFamily" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AddressFamily As AddressFamily" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::Sockets::AddressFamily AddressFamily { System::Net::Sockets::AddressFamily get(); };" />
      <MemberSignature Language="F#" Value="member this.AddressFamily : System.Net.Sockets.AddressFamily" Usage="System.Net.IPEndPoint.AddressFamily" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.AddressFamily</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56398-129">Ruft die IP-Adressfamilie ab.</span><span class="sxs-lookup"><span data-stu-id="56398-129">Gets the Internet Protocol (IP) address family.</span></span></summary>
        <value><span data-ttu-id="56398-130">Gibt <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="56398-130">Returns <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="56398-131">Im folgenden Beispiel wird die- <xref:System.Net.IPEndPoint.AddressFamily%2A> Eigenschaft verwendet, um das zurückzugeben <xref:System.Net.Sockets.AddressFamily> , zu dem <xref:System.Net.IPEndPoint> gehört.</span><span class="sxs-lookup"><span data-stu-id="56398-131">The following example uses the <xref:System.Net.IPEndPoint.AddressFamily%2A> property to return the <xref:System.Net.Sockets.AddressFamily> to which the <xref:System.Net.IPEndPoint> belongs.</span></span> <span data-ttu-id="56398-132">In diesem Fall ist es das <xref:System.Net.Sockets.AddressFamily.InterNetwork><xref:System.Net.Sockets.AddressFamily>.</span><span class="sxs-lookup"><span data-stu-id="56398-132">In this case it is the <xref:System.Net.Sockets.AddressFamily.InterNetwork><xref:System.Net.Sockets.AddressFamily>.</span></span>  
  
 [!code-cpp[System.Net.IPEndPoint#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.IPEndPoint/CPP/ipendpoint.cpp#3)]
 [!code-csharp[System.Net.IPEndPoint#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.IPEndPoint/CS/ipendpoint.cs#3)]
 [!code-vb[System.Net.IPEndPoint#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.IPEndPoint/VB/ipendpoint.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.EndPoint" />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public override System.Net.EndPoint Create (System.Net.SocketAddress socketAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Net.EndPoint Create(class System.Net.SocketAddress socketAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.IPEndPoint.Create(System.Net.SocketAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Create (socketAddress As SocketAddress) As EndPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Net::EndPoint ^ Create(System::Net::SocketAddress ^ socketAddress);" />
      <MemberSignature Language="F#" Value="override this.Create : System.Net.SocketAddress -&gt; System.Net.EndPoint" Usage="iPEndPoint.Create socketAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.EndPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="socketAddress" Type="System.Net.SocketAddress" />
      </Parameters>
      <Docs>
        <param name="socketAddress"><span data-ttu-id="56398-133">Die <see cref="T:System.Net.SocketAddress" />, die für den Endpunkt verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="56398-133">The <see cref="T:System.Net.SocketAddress" /> to use for the endpoint.</span></span></param>
        <summary><span data-ttu-id="56398-134">Erstellt einen Endpunkt aus einer Socketadresse.</span><span class="sxs-lookup"><span data-stu-id="56398-134">Creates an endpoint from a socket address.</span></span></summary>
        <returns><span data-ttu-id="56398-135">Eine <see cref="T:System.Net.EndPoint" />-Instanz, die die angegebene Socketadresse verwendet.</span><span class="sxs-lookup"><span data-stu-id="56398-135">An <see cref="T:System.Net.EndPoint" /> instance using the specified socket address.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="56398-136">Im folgenden Beispiel wird die angegebene verwendet <xref:System.Net.SocketAddress> , um einen zu erstellen <xref:System.Net.IPEndPoint> .</span><span class="sxs-lookup"><span data-stu-id="56398-136">The following example uses the specified <xref:System.Net.SocketAddress> to create an <xref:System.Net.IPEndPoint>.</span></span>  
  
 [!code-cpp[System.Net.IPEndPoint#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.IPEndPoint/CPP/ipendpoint.cpp#5)]
 [!code-csharp[System.Net.IPEndPoint#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.IPEndPoint/CS/ipendpoint.cs#5)]
 [!code-vb[System.Net.IPEndPoint#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.IPEndPoint/VB/ipendpoint.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="56398-137">Die AddressFamily von <paramref name="socketAddress" /> entspricht nicht der AddressFamily der aktuellen Instanz.</span><span class="sxs-lookup"><span data-stu-id="56398-137">The AddressFamily of <paramref name="socketAddress" /> is not equal to the AddressFamily of the current instance.</span></span>  
  
<span data-ttu-id="56398-138">Oder</span><span class="sxs-lookup"><span data-stu-id="56398-138">-or-</span></span> 
 <span data-ttu-id="56398-139"><paramref name="socketAddress" />.Size &lt; 8.</span><span class="sxs-lookup"><span data-stu-id="56398-139"><paramref name="socketAddress" />.Size &lt; 8.</span></span></exception>
        <altmember cref="T:System.Net.EndPoint" />
        <altmember cref="T:System.Net.SocketAddress" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object comparand);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object comparand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.IPEndPoint.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (comparand As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ comparand);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="iPEndPoint.Equals comparand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparand" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="comparand"><span data-ttu-id="56398-140">Das <see cref="T:System.Object" />, das mit dem aktuellen <see cref="T:System.Object" /> verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="56398-140">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />.</span></span></param>
        <summary><span data-ttu-id="56398-141">Bestimmt, ob das angegebene <see cref="T:System.Object" /> mit der angegebenen <see cref="T:System.Object" /> identisch ist.</span><span class="sxs-lookup"><span data-stu-id="56398-141">Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />.</span></span></summary>
        <returns><span data-ttu-id="56398-142"><see langword="true" />, wenn das angegebene <see cref="T:System.Object" /> gleich der aktuellen <see cref="T:System.Object" /> ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="56398-142"><see langword="true" /> if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.IPEndPoint.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="iPEndPoint.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="56398-143">Gibt einen Hashwert für eine <see cref="T:System.Net.IPEndPoint" />-Instanz zurück.</span><span class="sxs-lookup"><span data-stu-id="56398-143">Returns a hash value for a <see cref="T:System.Net.IPEndPoint" /> instance.</span></span></summary>
        <returns><span data-ttu-id="56398-144">Ein ganzzahliger Hashwert.</span><span class="sxs-lookup"><span data-stu-id="56398-144">An integer hash value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56398-145">Die <xref:System.Net.IPEndPoint.GetHashCode%2A> -Methode gibt einen Hashcode der IP-Endpunkt Instanz zurück.</span><span class="sxs-lookup"><span data-stu-id="56398-145">The <xref:System.Net.IPEndPoint.GetHashCode%2A> method returns a hash code of the IP endpoint instance.</span></span> <span data-ttu-id="56398-146">Dieser Wert kann als Schlüssel in Hash Tabellen verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="56398-146">This value can be used as a key in hash tables.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxPort">
      <MemberSignature Language="C#" Value="public const int MaxPort = 65535;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MaxPort = (65535)" />
      <MemberSignature Language="DocId" Value="F:System.Net.IPEndPoint.MaxPort" />
      <MemberSignature Language="VB.NET" Value="Public Const MaxPort As Integer  = 65535" />
      <MemberSignature Language="C++ CLI" Value="public: int MaxPort = 65535;" />
      <MemberSignature Language="F#" Value="val mutable MaxPort : int" Usage="System.Net.IPEndPoint.MaxPort" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>65535</MemberValue>
      <Docs>
        <summary><span data-ttu-id="56398-147">Gibt den Höchstwert an, der der <see cref="P:System.Net.IPEndPoint.Port" />-Eigenschaft zugeordnet werden kann.</span><span class="sxs-lookup"><span data-stu-id="56398-147">Specifies the maximum value that can be assigned to the <see cref="P:System.Net.IPEndPoint.Port" /> property.</span></span> <span data-ttu-id="56398-148">Der MaxPort-Wert ist auf 0x0000FFFF festgelegt.</span><span class="sxs-lookup"><span data-stu-id="56398-148">The MaxPort value is set to 0x0000FFFF.</span></span> <span data-ttu-id="56398-149">Dieses Feld ist schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="56398-149">This field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="56398-150">Im folgenden Beispiel wird die- <xref:System.Net.IPEndPoint.MaxPort> Eigenschaft verwendet, um den maximalen Wert auszugeben, der der-Eigenschaft zugewiesen werden kann <xref:System.Net.IPEndPoint.Port%2A> .</span><span class="sxs-lookup"><span data-stu-id="56398-150">The following example uses the <xref:System.Net.IPEndPoint.MaxPort> property to print the maximum value that can be assigned to the <xref:System.Net.IPEndPoint.Port%2A> property.</span></span>  
  
 [!code-cpp[IPEndPoint_Properties#4](~/samples/snippets/cpp/VS_Snippets_Remoting/IPEndPoint_Properties/CPP/ipendpoint_properties.cpp#4)]
 [!code-csharp[IPEndPoint_Properties#4](~/samples/snippets/csharp/VS_Snippets_Remoting/IPEndPoint_Properties/CS/ipendpoint_properties.cs#4)]
 [!code-vb[IPEndPoint_Properties#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/IPEndPoint_Properties/VB/ipendpoint_properties.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinPort">
      <MemberSignature Language="C#" Value="public const int MinPort = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MinPort = (0)" />
      <MemberSignature Language="DocId" Value="F:System.Net.IPEndPoint.MinPort" />
      <MemberSignature Language="VB.NET" Value="Public Const MinPort As Integer  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: int MinPort = 0;" />
      <MemberSignature Language="F#" Value="val mutable MinPort : int" Usage="System.Net.IPEndPoint.MinPort" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="56398-151">Gibt den Mindestwert an, der der <see cref="P:System.Net.IPEndPoint.Port" />-Eigenschaft zugeordnet werden kann.</span><span class="sxs-lookup"><span data-stu-id="56398-151">Specifies the minimum value that can be assigned to the <see cref="P:System.Net.IPEndPoint.Port" /> property.</span></span> <span data-ttu-id="56398-152">Dieses Feld ist schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="56398-152">This field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="56398-153">Im folgenden Beispiel wird die- <xref:System.Net.IPEndPoint.MinPort> Eigenschaft verwendet, um den minimalen Wert auszugeben, der der-Eigenschaft zugewiesen werden kann <xref:System.Net.IPEndPoint.Port%2A> .</span><span class="sxs-lookup"><span data-stu-id="56398-153">The following example uses the <xref:System.Net.IPEndPoint.MinPort> property to print the minimum value that can be assigned to the <xref:System.Net.IPEndPoint.Port%2A> property.</span></span>  
  
 [!code-cpp[IPEndPoint_Properties#4](~/samples/snippets/cpp/VS_Snippets_Remoting/IPEndPoint_Properties/CPP/ipendpoint_properties.cpp#4)]
 [!code-csharp[IPEndPoint_Properties#4](~/samples/snippets/csharp/VS_Snippets_Remoting/IPEndPoint_Properties/CS/ipendpoint_properties.cs#4)]
 [!code-vb[IPEndPoint_Properties#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/IPEndPoint_Properties/VB/ipendpoint_properties.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="56398-154">Die Anzahl der Teile (die jeweils durch einen Punkt getrennt sind) in `s` bestimmt, wie die IP-Adresse des Endpunkts erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="56398-154">The number of parts (each part is separated by a period) in `s` determines how the endpoint's IP address is constructed.</span></span> <span data-ttu-id="56398-155">Eine einteilige Adresse wird direkt in der Netzwerkadresse gespeichert.</span><span class="sxs-lookup"><span data-stu-id="56398-155">A one-part address is stored directly in the network address.</span></span> <span data-ttu-id="56398-156">Eine zweiteilige Adresse, die für die Angabe einer Klasse eine Adresse geeignet ist, platziert den führenden Teil im ersten Byte und den nachfolgenden Teil in den rechten drei Bytes der Netzwerkadresse.</span><span class="sxs-lookup"><span data-stu-id="56398-156">A two-part address, convenient for specifying a class A address, puts the leading part in the first byte and the trailing part in the right-most three bytes of the network address.</span></span> <span data-ttu-id="56398-157">Eine dreiteilige Adresse, die für die Angabe einer Class B-Adresse geeignet ist, legt den ersten Teil im ersten Byte, den zweiten Teil des zweiten Bytes und den letzten Teil in den rechten 2 Bytes der Netzwerkadresse ab.</span><span class="sxs-lookup"><span data-stu-id="56398-157">A three-part address, convenient for specifying a class B address, puts the first part in the first byte, the second part in the second byte, and the final part in the right-most two bytes of the network address.</span></span> <span data-ttu-id="56398-158">Beispiel:</span><span class="sxs-lookup"><span data-stu-id="56398-158">For example:</span></span>

|<span data-ttu-id="56398-159">Anzahl von Teilen und Beispiel `s`</span><span class="sxs-lookup"><span data-stu-id="56398-159">Number of parts and example `s`</span></span>|<span data-ttu-id="56398-160">IPv4-Adresse für "ipdpoint. Address"</span><span class="sxs-lookup"><span data-stu-id="56398-160">IPv4 address for IPEndPoint.Address</span></span>|<span data-ttu-id="56398-161">Port</span><span class="sxs-lookup"><span data-stu-id="56398-161">Port</span></span>|
|-------------------------|--------------------------------|-------------------------|  
|<span data-ttu-id="56398-162">1--"1"</span><span class="sxs-lookup"><span data-stu-id="56398-162">1 -- "1"</span></span>|<span data-ttu-id="56398-163">0.0.0.1</span><span class="sxs-lookup"><span data-stu-id="56398-163">0.0.0.1</span></span>|<span data-ttu-id="56398-164">0</span><span class="sxs-lookup"><span data-stu-id="56398-164">0</span></span>|  
|<span data-ttu-id="56398-165">2--"20,2:80"</span><span class="sxs-lookup"><span data-stu-id="56398-165">2 -- "20.2:80"</span></span>|<span data-ttu-id="56398-166">20.0.0.2</span><span class="sxs-lookup"><span data-stu-id="56398-166">20.0.0.2</span></span>|<span data-ttu-id="56398-167">80</span><span class="sxs-lookup"><span data-stu-id="56398-167">80</span></span>|  
|<span data-ttu-id="56398-168">2--"20.65535:23"</span><span class="sxs-lookup"><span data-stu-id="56398-168">2 -- "20.65535:23"</span></span>|<span data-ttu-id="56398-169">20.0.255.255</span><span class="sxs-lookup"><span data-stu-id="56398-169">20.0.255.255</span></span>|<span data-ttu-id="56398-170">23</span><span class="sxs-lookup"><span data-stu-id="56398-170">23</span></span>|  
|<span data-ttu-id="56398-171">3--"128.1.2:443"</span><span class="sxs-lookup"><span data-stu-id="56398-171">3 -- "128.1.2:443"</span></span>|<span data-ttu-id="56398-172">128.1.0.2</span><span class="sxs-lookup"><span data-stu-id="56398-172">128.1.0.2</span></span>|<span data-ttu-id="56398-173">443</span><span class="sxs-lookup"><span data-stu-id="56398-173">443</span></span>|  

> [!IMPORTANT]
> <span data-ttu-id="56398-174">Beachten Sie, dass diese Methode als gültiger Wert akzeptiert, der als analysiert werden kann <xref:System.Int64> , und diesen dann <xref:System.Int64> als langen Wert einer IP-Adresse in der Netzwerk-Byte Reihenfolge behandelt, ähnlich wie der IPAddress-Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="56398-174">Note that this method accepts as valid a value that can be parsed as an <xref:System.Int64>, and then treats that <xref:System.Int64> as the long value of an IP address in network byte order, similar to the way that the IPAddress constructor does.</span></span> <span data-ttu-id="56398-175">Dies bedeutet, dass diese Methode true zurückgibt, wenn das Int64-Element erfolgreich analysiert wird, selbst wenn es sich um eine Adresse handelt, die keine gültige IP-Adresse ist.</span><span class="sxs-lookup"><span data-stu-id="56398-175">This means that this method returns true if the Int64 is parsed successfully, even if it represents an address that's not a valid IP address.</span></span> <span data-ttu-id="56398-176">Wenn s z. b. "1" ist, gibt diese Methode "true" zurück, obwohl "1" (oder 0.0.0.1) keine gültige IP-Adresse ist und Sie möglicherweise davon ausgehen, dass diese Methode false zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="56398-176">For example, if s is "1", this method returns true even though "1" (or 0.0.0.1) is not a valid IP address and you might expect this method to return false.</span></span> <span data-ttu-id="56398-177">Wenn Sie diesen Fehler beheben, werden vorhandene apps nicht geändert, sodass das aktuelle Verhalten nicht geändert wird.</span><span class="sxs-lookup"><span data-stu-id="56398-177">Fixing this bug would break existing apps, so the current behavior will not be changed.</span></span> <span data-ttu-id="56398-178">Der Code kann dieses Verhalten vermeiden, indem er sicherstellt, dass er nur diese Methode verwendet, um IP-Adressen im gepunkteten Dezimal Format zu analysieren.</span><span class="sxs-lookup"><span data-stu-id="56398-178">Your code can avoid this behavior by ensuring that it only uses this method to parse IP addresses in dotted-decimal format.</span></span>
 
<span data-ttu-id="56398-179">Literale IPv6-Adressen müssen bei der Übergabe eines Endpunkts, der eine Portnummer angibt, in eckige Klammern [] eingeschlossen werden. Andernfalls sind eckige Klammern nicht obligatorisch.</span><span class="sxs-lookup"><span data-stu-id="56398-179">Literal IPv6 addresses require to be enclosed in square brackets [] when passing an endpoint that specifies a port number; otherwise, square braces are not mandatory.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Net.IPEndPoint? Parse (ReadOnlySpan&lt;char&gt; s);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPEndPoint Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.IPEndPoint.Parse(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As ReadOnlySpan(Of Char)) As IPEndPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPEndPoint ^ Parse(ReadOnlySpan&lt;char&gt; s);" />
      <MemberSignature Language="F#" Value="static member Parse : ReadOnlySpan&lt;char&gt; -&gt; System.Net.IPEndPoint" Usage="System.Net.IPEndPoint.Parse s" />
      <MemberSignature Language="C#" Value="public static System.Net.IPEndPoint Parse (ReadOnlySpan&lt;char&gt; s);" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPEndPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="56398-180">Ein schreibgeschützter Bereich, der einen IP-Endpunkt im Punktformat (Dotted-Quad Notation) oder mit Netzwerk-Bytereihenfolge für IPv4 und im durch Doppelpunkt getrennten Hexadezimalformat für IPv6 enthält.</span><span class="sxs-lookup"><span data-stu-id="56398-180">A read-only span that contains an IP endpoint in dotted-quad notation or network byte order for IPv4 and in colon-hexadecimal notation for IPv6.</span></span></param>
        <summary><span data-ttu-id="56398-181">Konvertiert einen IP-Netzwerkendpunkt (Adresse und Port) als schreibgeschützten Bereich auf eine <see cref="T:System.Net.IPEndPoint" />-Instanz.</span><span class="sxs-lookup"><span data-stu-id="56398-181">Converts an IP network endpoint (address and port) represented as a read-only span to an <see cref="T:System.Net.IPEndPoint" /> instance.</span></span></summary>
        <returns><span data-ttu-id="56398-182">Die Objektdarstellung eines IP-Netzwerkendpunkts.</span><span class="sxs-lookup"><span data-stu-id="56398-182">The object representation of an IP network endpoint.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56398-183"><paramref name="s" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="56398-183"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="56398-184"><paramref name="s" /> ist kein gültiger IP-Endpunkt.</span><span class="sxs-lookup"><span data-stu-id="56398-184"><paramref name="s" /> is not a valid IP endpoint.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Net.IPEndPoint Parse (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPEndPoint Parse(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.IPEndPoint.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String) As IPEndPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPEndPoint ^ Parse(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; System.Net.IPEndPoint" Usage="System.Net.IPEndPoint.Parse s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPEndPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="56398-185">Eine Zeichenfolge, die einen IP-Endpunkt im Punktformat (Dotted-Quad Notation) oder mit Netzwerk-Bytereihenfolge für IPv4 und im durch Doppelpunkt getrennten Hexadezimalformat für IPv6 enthält.</span><span class="sxs-lookup"><span data-stu-id="56398-185">A string that contains an IP endpoint in dotted-quad notation or network byte order for IPv4 and in colon-hexadecimal notation for IPv6.</span></span></param>
        <summary><span data-ttu-id="56398-186">Konvertiert einen IP-Netzwerkendpunkt (Adresse und Port), der als Zeichenfolge dargestellt ist, in eine <see cref="T:System.Net.IPEndPoint" />-Instanz.</span><span class="sxs-lookup"><span data-stu-id="56398-186">Converts an IP network endpoint (address and port) represented as a string to an <see cref="T:System.Net.IPEndPoint" /> instance.</span></span></summary>
        <returns><span data-ttu-id="56398-187">Die Objektdarstellung eines IP-Netzwerkendpunkts.</span><span class="sxs-lookup"><span data-stu-id="56398-187">The object representation of an IP network endpoint.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56398-188"><paramref name="s" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="56398-188"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="56398-189"><paramref name="s" /> ist kein gültiger IP-Endpunkt.</span><span class="sxs-lookup"><span data-stu-id="56398-189"><paramref name="s" /> is not a valid IP endpoint.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Port">
      <MemberSignature Language="C#" Value="public int Port { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Port" />
      <MemberSignature Language="DocId" Value="P:System.Net.IPEndPoint.Port" />
      <MemberSignature Language="VB.NET" Value="Public Property Port As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Port { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Port : int with get, set" Usage="System.Net.IPEndPoint.Port" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56398-190">Ruft die Anschlussnummer des Endpunkts ab oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="56398-190">Gets or sets the port number of the endpoint.</span></span></summary>
        <value><span data-ttu-id="56398-191">Ein ganzzahliger Wert im Bereich von <see cref="F:System.Net.IPEndPoint.MinPort" /> bis <see cref="F:System.Net.IPEndPoint.MaxPort" />, der die Anschlussnummer des Endpunkts angibt.</span><span class="sxs-lookup"><span data-stu-id="56398-191">An integer value in the range <see cref="F:System.Net.IPEndPoint.MinPort" /> to <see cref="F:System.Net.IPEndPoint.MaxPort" /> indicating the port number of the endpoint.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="56398-192">Im folgenden Beispiel wird die- <xref:System.Net.IPEndPoint.Port%2A> Eigenschaft verwendet, um die TCP-Portnummer des festzulegen <xref:System.Net.EndPoint> .</span><span class="sxs-lookup"><span data-stu-id="56398-192">The following example uses the <xref:System.Net.IPEndPoint.Port%2A> property to set TCP port number of the <xref:System.Net.EndPoint>.</span></span>  
  
 [!code-cpp[System.Net.IPEndPoint#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.IPEndPoint/CPP/ipendpoint.cpp#3)]
 [!code-csharp[System.Net.IPEndPoint#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.IPEndPoint/CS/ipendpoint.cs#3)]
 [!code-vb[System.Net.IPEndPoint#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.IPEndPoint/VB/ipendpoint.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="56398-193">Der für einen set-Vorgang angegebene Wert ist kleiner als <see cref="F:System.Net.IPEndPoint.MinPort" /> oder größer als <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span><span class="sxs-lookup"><span data-stu-id="56398-193">The value that was specified for a set operation is less than <see cref="F:System.Net.IPEndPoint.MinPort" /> or greater than <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public override System.Net.SocketAddress Serialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Net.SocketAddress Serialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.IPEndPoint.Serialize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Serialize () As SocketAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Net::SocketAddress ^ Serialize();" />
      <MemberSignature Language="F#" Value="override this.Serialize : unit -&gt; System.Net.SocketAddress" Usage="iPEndPoint.Serialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.SocketAddress</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="56398-194">Serialisiert Endpunktinformationen in eine <see cref="T:System.Net.SocketAddress" />-Instanz.</span><span class="sxs-lookup"><span data-stu-id="56398-194">Serializes endpoint information into a <see cref="T:System.Net.SocketAddress" /> instance.</span></span></summary>
        <returns><span data-ttu-id="56398-195">Eine <see cref="T:System.Net.SocketAddress" />-Instanz mit der Socketadresse für den Endpunkt.</span><span class="sxs-lookup"><span data-stu-id="56398-195">A <see cref="T:System.Net.SocketAddress" /> instance containing the socket address for the endpoint.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="56398-196">Im folgenden Beispiel wird die- <xref:System.Net.IPEndPoint.Serialize%2A> Methode verwendet, um Endpunkt Informationen in eine-Instanz zu serialisieren <xref:System.Net.SocketAddress> .</span><span class="sxs-lookup"><span data-stu-id="56398-196">The following example uses the <xref:System.Net.IPEndPoint.Serialize%2A> method to serialize endpoint information into a <xref:System.Net.SocketAddress> instance.</span></span>  
  
 [!code-cpp[System.Net.IPEndPoint#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.IPEndPoint/CPP/ipendpoint.cpp#4)]
 [!code-csharp[System.Net.IPEndPoint#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.IPEndPoint/CS/ipendpoint.cs#4)]
 [!code-vb[System.Net.IPEndPoint#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.IPEndPoint/VB/ipendpoint.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.EndPoint" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.IPEndPoint.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="iPEndPoint.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="56398-197">Gibt die IP-Adresse und die Anschlussnummer des angegebenen Endpunkts zurück.</span><span class="sxs-lookup"><span data-stu-id="56398-197">Returns the IP address and port number of the specified endpoint.</span></span></summary>
        <returns><span data-ttu-id="56398-198">Eine Zeichenfolge mit der IP-Adresse und der Anschlussnummer des angegebenen Endpunkts (z. B. 192.168.1.2:80).</span><span class="sxs-lookup"><span data-stu-id="56398-198">A string containing the IP address and the port number of the specified endpoint (for example, 192.168.1.2:80).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="56398-199">Das folgende Beispiel gibt eine Zeichen folgen Darstellung der IP-Adresse und der Portnummer des angegebenen zurück <xref:System.Net.IPEndPoint> .</span><span class="sxs-lookup"><span data-stu-id="56398-199">The following example returns a string representation of the IP address and port number of the specified <xref:System.Net.IPEndPoint>.</span></span>  
  
 [!code-cpp[System.Net.IPEndPoint#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.IPEndPoint/CPP/ipendpoint.cpp#3)]
 [!code-csharp[System.Net.IPEndPoint#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.IPEndPoint/CS/ipendpoint.cs#3)]
 [!code-vb[System.Net.IPEndPoint#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.IPEndPoint/VB/ipendpoint.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParse">
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="56398-200">Die Anzahl der Teile (die jeweils durch einen Punkt getrennt sind) in `s` bestimmt, wie die IP-Adresse des Endpunkts erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="56398-200">The number of parts (each part is separated by a period) in `s` determines how the endpoint's IP address is constructed.</span></span> <span data-ttu-id="56398-201">Eine einteilige Adresse wird direkt in der Netzwerkadresse gespeichert.</span><span class="sxs-lookup"><span data-stu-id="56398-201">A one-part address is stored directly in the network address.</span></span> <span data-ttu-id="56398-202">Eine zweiteilige Adresse, die für die Angabe einer Klasse eine Adresse geeignet ist, platziert den führenden Teil im ersten Byte und den nachfolgenden Teil in den rechten drei Bytes der Netzwerkadresse.</span><span class="sxs-lookup"><span data-stu-id="56398-202">A two-part address, convenient for specifying a class A address, puts the leading part in the first byte and the trailing part in the right-most three bytes of the network address.</span></span> <span data-ttu-id="56398-203">Eine dreiteilige Adresse, die für die Angabe einer Class B-Adresse geeignet ist, legt den ersten Teil im ersten Byte, den zweiten Teil des zweiten Bytes und den letzten Teil in den rechten 2 Bytes der Netzwerkadresse ab.</span><span class="sxs-lookup"><span data-stu-id="56398-203">A three-part address, convenient for specifying a class B address, puts the first part in the first byte, the second part in the second byte, and the final part in the right-most two bytes of the network address.</span></span> <span data-ttu-id="56398-204">Beispiel:</span><span class="sxs-lookup"><span data-stu-id="56398-204">For example:</span></span>

|<span data-ttu-id="56398-205">Anzahl von Teilen und Beispiel `s`</span><span class="sxs-lookup"><span data-stu-id="56398-205">Number of parts and example `s`</span></span>|<span data-ttu-id="56398-206">IPv4-Adresse für "ipdpoint. Address"</span><span class="sxs-lookup"><span data-stu-id="56398-206">IPv4 address for IPEndPoint.Address</span></span>|<span data-ttu-id="56398-207">Port</span><span class="sxs-lookup"><span data-stu-id="56398-207">Port</span></span>|
|-------------------------|--------------------------------|-------------------------|  
|<span data-ttu-id="56398-208">1--"1"</span><span class="sxs-lookup"><span data-stu-id="56398-208">1 -- "1"</span></span>|<span data-ttu-id="56398-209">0.0.0.1</span><span class="sxs-lookup"><span data-stu-id="56398-209">0.0.0.1</span></span>|<span data-ttu-id="56398-210">0</span><span class="sxs-lookup"><span data-stu-id="56398-210">0</span></span>|  
|<span data-ttu-id="56398-211">2--"20,2:80"</span><span class="sxs-lookup"><span data-stu-id="56398-211">2 -- "20.2:80"</span></span>|<span data-ttu-id="56398-212">20.0.0.2</span><span class="sxs-lookup"><span data-stu-id="56398-212">20.0.0.2</span></span>|<span data-ttu-id="56398-213">80</span><span class="sxs-lookup"><span data-stu-id="56398-213">80</span></span>|  
|<span data-ttu-id="56398-214">2--"20.65535:23"</span><span class="sxs-lookup"><span data-stu-id="56398-214">2 -- "20.65535:23"</span></span>|<span data-ttu-id="56398-215">20.0.255.255</span><span class="sxs-lookup"><span data-stu-id="56398-215">20.0.255.255</span></span>|<span data-ttu-id="56398-216">23</span><span class="sxs-lookup"><span data-stu-id="56398-216">23</span></span>|  
|<span data-ttu-id="56398-217">3--"128.1.2:443"</span><span class="sxs-lookup"><span data-stu-id="56398-217">3 -- "128.1.2:443"</span></span>|<span data-ttu-id="56398-218">128.1.0.2</span><span class="sxs-lookup"><span data-stu-id="56398-218">128.1.0.2</span></span>|<span data-ttu-id="56398-219">443</span><span class="sxs-lookup"><span data-stu-id="56398-219">443</span></span>|  

> [!IMPORTANT]
> <span data-ttu-id="56398-220">Beachten Sie, dass diese Methode als gültiger Wert akzeptiert, der als analysiert werden kann <xref:System.Int64> , und diesen dann <xref:System.Int64> als langen Wert einer IP-Adresse in der Netzwerk-Byte Reihenfolge behandelt, ähnlich wie der IPAddress-Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="56398-220">Note that this method accepts as valid a value that can be parsed as an <xref:System.Int64>, and then treats that <xref:System.Int64> as the long value of an IP address in network byte order, similar to the way that the IPAddress constructor does.</span></span> <span data-ttu-id="56398-221">Dies bedeutet, dass diese Methode true zurückgibt, wenn das Int64-Element erfolgreich analysiert wird, selbst wenn es sich um eine Adresse handelt, die keine gültige IP-Adresse ist.</span><span class="sxs-lookup"><span data-stu-id="56398-221">This means that this method returns true if the Int64 is parsed successfully, even if it represents an address that's not a valid IP address.</span></span> <span data-ttu-id="56398-222">Wenn s z. b. "1" ist, gibt diese Methode "true" zurück, obwohl "1" (oder 0.0.0.1) keine gültige IP-Adresse ist und Sie möglicherweise davon ausgehen, dass diese Methode false zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="56398-222">For example, if s is "1", this method returns true even though "1" (or 0.0.0.1) is not a valid IP address and you might expect this method to return false.</span></span> <span data-ttu-id="56398-223">Wenn Sie diesen Fehler beheben, werden vorhandene apps nicht geändert, sodass das aktuelle Verhalten nicht geändert wird.</span><span class="sxs-lookup"><span data-stu-id="56398-223">Fixing this bug would break existing apps, so the current behavior will not be changed.</span></span> <span data-ttu-id="56398-224">Der Code kann dieses Verhalten vermeiden, indem er sicherstellt, dass er nur diese Methode verwendet, um IP-Adressen im gepunkteten Dezimal Format zu analysieren.</span><span class="sxs-lookup"><span data-stu-id="56398-224">Your code can avoid this behavior by ensuring that it only uses this method to parse IP addresses in dotted-decimal format.</span></span>
 
<span data-ttu-id="56398-225">Literale IPv6-Adressen müssen bei der Übergabe eines Endpunkts, der eine Portnummer angibt, in eckige Klammern [] eingeschlossen werden. Andernfalls sind eckige Klammern nicht obligatorisch.</span><span class="sxs-lookup"><span data-stu-id="56398-225">Literal IPv6 addresses require to be enclosed in square brackets [] when passing an endpoint that specifies a port number; otherwise, square braces are not mandatory.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, out System.Net.IPEndPoint? result);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, [out] class System.Net.IPEndPoint&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.IPEndPoint.TryParse(System.ReadOnlySpan{System.Char},System.Net.IPEndPoint@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), ByRef result As IPEndPoint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, [Runtime::InteropServices::Out] System::Net::IPEndPoint ^ % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; * IPEndPoint -&gt; bool" Usage="System.Net.IPEndPoint.TryParse (s, result)" />
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, out System.Net.IPEndPoint result);" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="result" Type="System.Net.IPEndPoint" RefType="out" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="56398-226">Der zu überprüfende IP-Endpunkt.</span><span class="sxs-lookup"><span data-stu-id="56398-226">The IP endpoint to validate.</span></span></param>
        <param name="result"><span data-ttu-id="56398-227">Mit dieser Methode wird die <see cref="T:System.Net.IPEndPoint" />-Version von <paramref name="s" /> zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="56398-227">When this method returns, the <see cref="T:System.Net.IPEndPoint" /> version of <paramref name="s" />.</span></span></param>
        <summary><span data-ttu-id="56398-228">Versucht, einen IP-Netzwerkendpunkt (Adresse und Port), der als schreibgeschützter Bereich dargestellt ist, in sein <see cref="T:System.Net.IPEndPoint" />-Äquivalent zu konvertieren. Außerdem wird ein Wert zurückgegeben, mit dem angegeben wird, ob die Konvertierung erfolgreich war.</span><span class="sxs-lookup"><span data-stu-id="56398-228">Tries to convert an IP network endpoint (address and port) represented as a read-only span to its <see cref="T:System.Net.IPEndPoint" /> equivalent, and returns a value that indicates whether the conversion succeeded.</span></span></summary>
        <returns><span data-ttu-id="56398-229"><see langword="true" />, wenn <paramref name="s" /> als IP-Endpunkt analysiert werden kann; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="56398-229"><see langword="true" /> if <paramref name="s" /> can be parsed as an IP endpoint; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, out System.Net.IPEndPoint? result);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, [out] class System.Net.IPEndPoint&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.IPEndPoint.TryParse(System.String,System.Net.IPEndPoint@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, ByRef result As IPEndPoint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, [Runtime::InteropServices::Out] System::Net::IPEndPoint ^ % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * IPEndPoint -&gt; bool" Usage="System.Net.IPEndPoint.TryParse (s, result)" />
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, out System.Net.IPEndPoint result);" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="result" Type="System.Net.IPEndPoint" RefType="out" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="56398-230">Der zu überprüfende IP-Endpunkt.</span><span class="sxs-lookup"><span data-stu-id="56398-230">The IP endpoint to validate.</span></span></param>
        <param name="result"><span data-ttu-id="56398-231">Mit dieser Methode wird die <see cref="T:System.Net.IPEndPoint" />-Version von <paramref name="s" /> zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="56398-231">When this method returns, the <see cref="T:System.Net.IPEndPoint" /> version of <paramref name="s" />.</span></span></param>
        <summary><span data-ttu-id="56398-232">Versucht, einen IP-Netzwerkendpunkt (Adresse und Port), der als Zeichenfolge dargestellt ist, in sein <see cref="T:System.Net.IPEndPoint" />-Äquivalent zu konvertieren. Außerdem wird ein Wert zurückgegeben, mit dem angegeben wird, ob die Konvertierung erfolgreich war.</span><span class="sxs-lookup"><span data-stu-id="56398-232">Tries to convert an IP network endpoint (address and port) represented as a string to its <see cref="T:System.Net.IPEndPoint" /> equivalent, and returns a value that indicates whether the conversion succeeded.</span></span></summary>
        <returns><span data-ttu-id="56398-233"><see langword="true" />, wenn <paramref name="s" /> als IP-Endpunkt analysiert werden kann; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="56398-233"><see langword="true" /> if <paramref name="s" /> can be parsed as an IP endpoint; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
