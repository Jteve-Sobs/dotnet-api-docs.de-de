<Type Name="TreeNode" FullName="System.Web.UI.WebControls.TreeNode">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0e6d6a4aec7ed41efd0c843154c8998bc89885f1" /><Meta Name="ms.sourcegitcommit" Value="a8ff98b48bda124cfcb2605f5da9b21bc6dcd791" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="02/14/2020" /><Meta Name="ms.locfileid" Value="77246409" /></Metadata><TypeSignature Language="C#" Value="public class TreeNode : ICloneable, System.Web.UI.IStateManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TreeNode extends System.Object implements class System.ICloneable, class System.Web.UI.IStateManager" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.TreeNode" />
  <TypeSignature Language="VB.NET" Value="Public Class TreeNode&#xA;Implements ICloneable, IStateManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class TreeNode : ICloneable, System::Web::UI::IStateManager" />
  <TypeSignature Language="F#" Value="type TreeNode = class&#xA;    interface IStateManager&#xA;    interface ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IStateManager</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true, "ChildNodes")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt einen Knoten im <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelement dar.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Web.UI.WebControls.TreeView> Steuerelement besteht aus Knoten. Jeder Eintrag in der Struktur wird als Knoten bezeichnet und wird durch ein <xref:System.Web.UI.WebControls.TreeNode> Objekt dargestellt. Ein Knoten, der andere Knoten enthält, wird als über *geordneter Knoten*bezeichnet. Ein Knoten, der in einem anderen Knoten enthalten ist, wird als untergeordneter *Knoten*bezeichnet. Ein Knoten, der über keine untergeordneten Knoten verfügt, wird als *Blattknoten*bezeichnet. Ein Knoten, der nicht in einem anderen Knoten enthalten ist, sondern der Vorgänger für alle anderen Knoten ist, ist der Stamm *Knoten*. Ein Knoten kann sowohl ein über-als auch ein untergeordneter Knoten sein, aber Stamm Knoten, übergeordnete Knoten und Blattknoten schließen sich gegenseitig aus. Mehrere visuelle und Verhaltenseigenschaften von Knoten werden dadurch bestimmt, ob *es sich bei*einem Knoten um einen Stamm-, über *geordneten*oder *Blatt* Knoten handelt.  
  
 Obwohl eine typische Struktur nur über einen Stamm Knoten verfügt, können Sie mit dem <xref:System.Web.UI.WebControls.TreeView>-Steuerelement ihrer Struktur mehrere Stamm Knoten hinzufügen. Dies ist hilfreich, wenn Sie Element Auflistungen anzeigen möchten, ohne einen einzelnen Hauptstamm Knoten anzuzeigen, wie in einer Liste von Produktkategorien.  
  
 Ein Knoten speichert Primärdaten in zwei Eigenschaften, der <xref:System.Web.UI.WebControls.TreeNode.Text%2A>-Eigenschaft und der <xref:System.Web.UI.WebControls.TreeNode.Value%2A>-Eigenschaft. Der Wert der <xref:System.Web.UI.WebControls.TreeNode.Text%2A>-Eigenschaft wird im <xref:System.Web.UI.WebControls.TreeView>-Steuerelement angezeigt, und die <xref:System.Web.UI.WebControls.TreeNode.Value%2A>-Eigenschaft wird verwendet, um alle zusätzlichen Daten über den Knoten zu speichern, z. b. Daten, die für die Behandlung von Post Back Ereignissen verwendet werden. Ein Knoten speichert auch den Pfad vom Knoten in seinen Stamm Knoten in der <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A>-Eigenschaft. Die <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A>-Eigenschaft gibt die Position des Knotens relativ zum Stamm Knoten an.  
  
> [!NOTE]
>  Knoten auf derselben Ebene müssen jeweils einen eindeutigen Wert für die <xref:System.Web.UI.WebControls.TreeNode.Value%2A>-Eigenschaft aufweisen. Das <xref:System.Web.UI.WebControls.TreeView> Steuerelement kann nicht zwischen verschiedenen Knoten auf derselben Ebene unterscheiden, die denselben Wert aufweisen. Wenn der Benutzer in diesem Szenario auf einen Knoten klickt, der einen doppelten Wert aufweist, wird der Knoten, der zuerst im <xref:System.Web.UI.WebControls.TreeView> Steuerelement angezeigt wird, ausgewählt.  
  
 Ein <xref:System.Web.UI.WebControls.TreeNode>-Objekt besteht aus den folgenden vier Benutzeroberflächen Elementen (UI), die angepasst oder ausgeblendet werden können:  
  
-   Ein Erweiterungs Knoten-Indikator Symbol, mit dem angezeigt wird, ob der Knoten erweitert, reduziert oder nicht erweiterbar ist.  
  
-   Ein optionales Kontrollkästchen, das dem Knoten zugeordnet ist.  
  
-   Ein optionales Knoten Image.  
  
-   Der Knoten Text.  
  
 Sie können ein benutzerdefiniertes Image für die Indikatoren erweiterbar, reduzierbar und nicht erweiterbarer Knoten angeben, indem Sie die Eigenschaften <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>, <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>und <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A> der <xref:System.Web.UI.WebControls.TreeView>-Klasse festlegen. Die Erweiterungs Knoten Indikator Symbole können sogar vollständig ausgeblendet werden, indem Sie die <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>-Eigenschaft der <xref:System.Web.UI.WebControls.TreeView>-Klasse auf `false`festlegen.  
  
 Zum Anzeigen eines Kontrollkästchens neben einem Knoten legen Sie die <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A>-Eigenschaft der <xref:System.Web.UI.WebControls.TreeView>-Klasse fest. Wenn die <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A>-Eigenschaft auf einen anderen Wert als `TreeNodeType.Node`festgelegt ist, werden neben dem angegebenen Knotentyp Kontrollkästchen angezeigt. Sie können das Kontrollkästchen eines einzelnen Knotens selektiv überschreiben, indem Sie die <xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A>-Eigenschaft des Knotens festlegen. Wenn ein Kontrollkästchen angezeigt wird, verwenden Sie die <xref:System.Web.UI.WebControls.TreeNode.Checked%2A>-Eigenschaft, um zu bestimmen, ob das Kontrollkästchen aktiviert ist.  
  
 Sie können ein Bild in einem Knoten anzeigen, indem Sie die <xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>-Eigenschaft festlegen. Dieses Bild wird neben dem Knoten Text angezeigt.  
  
 Der Text eines Knotens im <xref:System.Web.UI.WebControls.TreeView> Steuerelement kann sich in einem von zwei Modi befinden: Auswahlmodus oder Navigationsmodus. Standardmäßig befindet sich ein Knoten im Auswahlmodus. Um einen Knoten in den Navigationsmodus zu versetzen, legen Sie die <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>-Eigenschaft des Knotens auf einen anderen Wert als eine leere Zeichenfolge ("") fest. Um einen Knoten in den Auswahlmodus zu versetzen, legen Sie die <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>-Eigenschaft des Knotens auf eine leere Zeichenfolge fest.  
  
> [!NOTE]
>  Einige Internet Browser haben eine Einschränkung, die sich auf die Leistung des <xref:System.Web.UI.WebControls.TreeView> Steuer Elements auswirken kann. Microsoft Internet Explorer 6,0 hat z. b. eine URL-Zeichen Beschränkung von 2067 Zeichen, die es sendet. Wenn die Anzahl der Zeichen in einer URL eines Knotens größer ist als diese Zahl, schlägt das Erweitern des Knotens fehl, und es wird keine Ausnahme ausgelöst.  
  
 Standardmäßig wird durch Klicken auf einen Knoten im Auswahlmodus die Seite an den Server zurückgesendet, und das <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>-Ereignis wird ausgelöst. Sie können optional ein anderes Ereignis angeben, das durch Festlegen der `SelectAction`-Eigenschaft des Knotens erhöht werden soll. Weitere Informationen finden Sie unter <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>. Um zu ermitteln, auf welchen Knoten im Auswahlmodus geklickt wurde, verwenden Sie die <xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A>-Eigenschaft des <xref:System.Web.UI.WebControls.TreeView> Steuer Elements.  
  
 Wenn sich ein Knoten im Navigationsmodus befindet, werden alle Auswahl Ereignisse für diesen Knoten deaktiviert. Wenn Sie im Navigationsmodus auf den Knoten klicken, wird der Benutzer zur angegebenen URL umgeleitet. Optional können Sie die <xref:System.Web.UI.WebControls.TreeNode.Target%2A>-Eigenschaft festlegen, um das Fenster oder den Frame anzugeben, in dem der verknüpfte Inhalt angezeigt werden soll.  
  
 Die <xref:System.Web.UI.WebControls.TreeNode>-Klasse enthält mehrere Eigenschaften, die zum Speichern des Status des Knotens verwendet werden. Verwenden Sie die <xref:System.Web.UI.WebControls.TreeNode.Selected%2A>-Eigenschaft, um zu bestimmen, ob ein Knoten ausgewählt ist. Verwenden Sie die <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>-Eigenschaft, um zu bestimmen, ob der Knoten erweitert ist. Die <xref:System.Web.UI.WebControls.TreeNode.DataBound%2A>-Eigenschaft wird verwendet, um zu bestimmen, ob ein Knoten an Daten gebunden ist. Wenn ein Knoten an Daten gebunden ist, können Sie auf das zugrunde liegende Datenelement zugreifen, indem Sie die <xref:System.Web.UI.WebControls.TreeNode.DataItem%2A>-Eigenschaft verwenden.  
  
 Die-Klasse stellt mehrere Eigenschaften bereit, mit deren Hilfe die Position eines Knotens relativ zu anderen Knoten in der Struktur bestimmt werden soll. Verwenden Sie die <xref:System.Web.UI.WebControls.TreeNode.Depth%2A>-Eigenschaft, um die Tiefe des Knotens zu ermitteln. Mithilfe der <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A>-Eigenschaft können Sie die durch Trennzeichen getrennte Liste der Knoten vom aktuellen Knoten zum Stamm Knoten abgleichen. Verwenden Sie die <xref:System.Web.UI.WebControls.TreeNode.Parent%2A>-Eigenschaft, um den übergeordneten Knoten des Knotens zu ermitteln. Der Zugriff auf untergeordnete Knoten erfolgt mithilfe der <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> Auflistung.  
  
 In manchen Fällen ist es nicht praktikabel, die Struktur durch die Datengröße oder den benutzerdefinierten Inhalt, der von Benutzereingaben abhängt, statisch vorzudefinieren. Aus diesem Grund unterstützt das <xref:System.Web.UI.WebControls.TreeView>-Steuerelement die dynamische Knoten Auffüllung. Ein Knoten kann zur Laufzeit aufgefüllt werden, wenn er erweitert wird. Beachten Sie, dass Sie unerwartetes Verhalten erhalten können, wenn Sie asynchron erstellte Knoten beibehalten. Wenn Sie z. b. einen Hintergrund Arbeitsthread zum asynchronen Auffüllen von Knoten verwenden, wird die Knoten Struktur möglicherweise nicht sofort aufgefüllt, obwohl das Steuerelement mit dem Rest des Lebenszyklus der Seite fortgesetzt wird. Beim Postback kann die verzögerte Erstellung der Knoten Probleme verursachen, wenn der Ansichts Zustand des Steuer Elements geladen ist, aber die Knoten Struktur nicht vollständig aufgefüllt ist.  Weitere Informationen zur dynamischen Knoten Population finden Sie in der <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>-Eigenschaft.  
  
 Eine Liste der anfänglichen Eigenschaftswerte für eine Instanz von <xref:System.Web.UI.WebControls.TreeNode>finden Sie im <xref:System.Web.UI.WebControls.TreeNode.%23ctor%2A>-Konstruktor.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die Frames für das nächste Codebeispiel eingerichtet werden.  
  
 [!code-aspx-csharp[TreeViewFrameSet#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFrameSet/CS/framecs.aspx#1)]
 [!code-aspx-vb[TreeViewFrameSet#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFrameSet/VB/framevb.aspx#1)]  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie die deklarative Syntax verwendet wird, um <xref:System.Web.UI.WebControls.TreeNode>-Objekte im <xref:System.Web.UI.WebControls.TreeView>-Steuerelement zu erstellen. Dieses Beispiel wird im Frameset des vorherigen Beispiels verwendet, um ein Inhaltsverzeichnis anzuzeigen.  
  
 [!code-aspx-csharp[TreeViewFrameExample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFrameExample/CS/treeviewframecs.aspx#1)]
 [!code-aspx-vb[TreeViewFrameExample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFrameExample/VB/treeviewframevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.TreeView" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNode.ImageUrl" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNode.NavigateUrl" />
    <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNode.Parent" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNode.PopulateOnDemand" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNode.Target" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNode.Text" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNode.Value" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der Klasse <see cref="T:System.Web.UI.WebControls.TreeNode" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNode();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.TreeNode" />-Klasse ohne Text oder einen Wert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diesen Konstruktor, um eine neue Instanz der <xref:System.Web.UI.WebControls.TreeNode>-Klasse mit den Standardwerten zu initialisieren.  
  
> [!NOTE]
>  Wenn dieser Konstruktor verwendet wird, werden alle Eigenschaften im <xref:System.Web.UI.WebControls.TreeNode> Objekt auf ihre Standardwerte festgelegt. Stellen Sie sicher, dass Sie nach dem Erstellen des Objekts die Eigenschaften nach Bedarf festlegen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie dieser Konstruktor verwendet wird, um dem <xref:System.Web.UI.WebControls.TreeView>-Steuerelement dynamisch einen Knoten hinzuzufügen.  
  
 [!code-aspx-csharp[TreeNodeCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCtor/CS/treenodectorcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCtor/VB/treenodectorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNode (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNode(System::String ^ text);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.TreeNode : string -&gt; System.Web.UI.WebControls.TreeNode" Usage="new System.Web.UI.WebControls.TreeNode text" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Der Text, der im <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelement für den Knoten angezeigt wird.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.TreeNode" />-Klasse unter Verwendung des angegebenen Textes.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diesen Konstruktor, um eine neue Instanz der <xref:System.Web.UI.WebControls.TreeNode>-Klasse zu initialisieren, indem Sie den durch den `text`-Parameter angegebenen Text verwenden.  
  
 In der folgenden Tabelle wird der anfängliche Eigenschafts Wert für eine Instanz von <xref:System.Web.UI.WebControls.TreeNode>angezeigt.  
  
|Eigenschaft|Anfangswert|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.TreeNode.Text%2A>|Der Wert des `text`-Parameters.|  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie dieser Konstruktor verwendet wird, um dem <xref:System.Web.UI.WebControls.TreeView>-Steuerelement dynamisch einen Knoten hinzuzufügen.  
  
 [!code-aspx-csharp[TreeNodeCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCtor/CS/treenodectorcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCtor/VB/treenodectorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Text" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNode (string text, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNode(System::String ^ text, System::String ^ value);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.TreeNode : string * string -&gt; System.Web.UI.WebControls.TreeNode" Usage="new System.Web.UI.WebControls.TreeNode (text, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Der Text, der im <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelement für den Knoten angezeigt wird.</param>
        <param name="value">Ergänzende Daten, die dem Knoten zugeordnet sind (z. B. Daten zum Behandeln von Postbackereignissen).</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.TreeNode" />-Klasse unter Verwendung des angegebenen Texts und Werts.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diesen Konstruktor initialisiert eine neue Instanz der dem <xref:System.Web.UI.WebControls.TreeNode> -Klasse mit dem Text und der angegebene Wert der `text` und `value` Parameter bzw.  
  
 In der folgenden Tabelle werden die anfänglichen Eigenschaftswerte für eine Instanz von <xref:System.Web.UI.WebControls.TreeNode>angezeigt.  
  
|Eigenschaft|Anfangswert|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.TreeNode.Text%2A>|Der Wert des `text`-Parameters.|  
|<xref:System.Web.UI.WebControls.TreeNode.Value%2A>|Der Wert des `value`-Parameters.|  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie dieser Konstruktor verwendet wird, um dem <xref:System.Web.UI.WebControls.TreeView>-Steuerelement dynamisch einen Knoten hinzuzufügen.  
  
 [!code-aspx-csharp[TreeNodeCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCtor/CS/treenodectorcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCtor/VB/treenodectorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Text" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Value" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal TreeNode (System.Web.UI.WebControls.TreeView owner, bool isRoot);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.TreeView owner, bool isRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.#ctor(System.Web.UI.WebControls.TreeView,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (owner As TreeView, isRoot As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; TreeNode(System::Web::UI::WebControls::TreeView ^ owner, bool isRoot);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.TreeNode : System.Web.UI.WebControls.TreeView * bool -&gt; System.Web.UI.WebControls.TreeNode" Usage="new System.Web.UI.WebControls.TreeNode (owner, isRoot)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.WebControls.TreeView" />
        <Parameter Name="isRoot" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="owner">Die <see cref="T:System.Web.UI.WebControls.TreeView" />, die den neuen <see cref="T:System.Web.UI.WebControls.TreeNode" /> enthalten wird.</param>
        <param name="isRoot"><see langword="true" />, wenn <see cref="T:System.Web.UI.WebControls.TreeNode" /> ein Stammknoten ist, andernfalls <see langword="false" />.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.TreeNode" />-Klasse unter Verwendung des angegebenen Besitzers.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeTypes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNode (string text, string value, string imageUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, string value, string imageUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, value As String, imageUrl As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNode(System::String ^ text, System::String ^ value, System::String ^ imageUrl);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.TreeNode : string * string * string -&gt; System.Web.UI.WebControls.TreeNode" Usage="new System.Web.UI.WebControls.TreeNode (text, value, imageUrl)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="imageUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Der Text, der im <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelement für den Knoten angezeigt wird.</param>
        <param name="value">Ergänzende Daten, die dem Knoten zugeordnet sind (z. B. Daten zum Behandeln von Postbackereignissen).</param>
        <param name="imageUrl">Die URL zu einem Bild, das neben dem Knoten angezeigt wird.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.TreeNode" />-Klasse unter Verwendung des angegebenen Texts, des angegebenen Werts und der angegebenen Bild-URL.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diesen Konstruktor initialisiert eine neue Instanz der dem <xref:System.Web.UI.WebControls.TreeNode> -Klasse mit dem Text, Wert und Bild-URL, die gemäß der `text`, `value`, und `imageUrl` Parameter bzw.  
  
 In der folgenden Tabelle werden die anfänglichen Eigenschaftswerte für eine Instanz von <xref:System.Web.UI.WebControls.TreeNode>angezeigt.  
  
|Eigenschaft|Anfangswert|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.TreeNode.Text%2A>|Der Wert des `text`-Parameters.|  
|<xref:System.Web.UI.WebControls.TreeNode.Value%2A>|Der Wert des `value`-Parameters.|  
|<xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>|Der Wert des `imageUrl`-Parameters.|  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie dieser Konstruktor verwendet wird, um dem <xref:System.Web.UI.WebControls.TreeView>-Steuerelement dynamisch einen Knoten hinzuzufügen.  
  
 [!code-aspx-csharp[TreeNodeCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCtor/CS/treenodectorcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCtor/VB/treenodectorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Text" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Value" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNode (string text, string value, string imageUrl, string navigateUrl, string target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, string value, string imageUrl, string navigateUrl, string target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.#ctor(System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, value As String, imageUrl As String, navigateUrl As String, target As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNode(System::String ^ text, System::String ^ value, System::String ^ imageUrl, System::String ^ navigateUrl, System::String ^ target);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.TreeNode : string * string * string * string * string -&gt; System.Web.UI.WebControls.TreeNode" Usage="new System.Web.UI.WebControls.TreeNode (text, value, imageUrl, navigateUrl, target)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="imageUrl" Type="System.String" />
        <Parameter Name="navigateUrl" Type="System.String" />
        <Parameter Name="target" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Der Text, der im <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelement für den Knoten angezeigt wird.</param>
        <param name="value">Ergänzende Daten, die dem Knoten zugeordnet sind (z. B. Daten zum Behandeln von Postbackereignissen).</param>
        <param name="imageUrl">Die URL zu einem Bild, das neben dem Knoten angezeigt wird.</param>
        <param name="navigateUrl">Die URL, die geöffnet werden soll, wenn auf den Knoten geklickt wird.</param>
        <param name="target">Das Zielfenster oder der Zielframe, in dem der Inhalt der verknüpften Webseite dargestellt werden soll, wenn auf den Knoten geklickt wird.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.TreeNode" />-Klasse unter Verwendung des angegebenen Texts, des angegebenen Werts, der angegebenen URL zu einem Bild, der URL für die Navigation sowie eines Ziels.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diesen Konstruktor, um eine neue Instanz der <xref:System.Web.UI.WebControls.TreeNode>-Klasse zu initialisieren, indem Sie den Text, den Wert, die Bild-und die Navigations-URLs und das Anzeige Ziel verwenden, die durch die Parameter `text`, `value`, `imageUrl`, `navigateUrl`und `target` angegeben werden.  
  
 In der folgenden Tabelle werden die anfänglichen Eigenschaftswerte für eine Instanz von <xref:System.Web.UI.WebControls.TreeNode>angezeigt.  
  
|Eigenschaft|Anfangswert|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.TreeNode.Text%2A>|Der Wert des `text`-Parameters.|  
|<xref:System.Web.UI.WebControls.TreeNode.Value%2A>|Der Wert des `value`-Parameters.|  
|<xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>|Der Wert des `imageUrl`-Parameters.|  
|<xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>|Der Wert des `navigateUrl`-Parameters.|  
|<xref:System.Web.UI.WebControls.TreeNode.Target%2A>|Der Wert des `target`-Parameters.|  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie dieser Konstruktor verwendet wird, um dem <xref:System.Web.UI.WebControls.TreeView>-Steuerelement dynamisch einen Knoten hinzuzufügen.  
  
 [!code-aspx-csharp[TreeNodeCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCtor/CS/treenodectorcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCtor/VB/treenodectorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Text" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Value" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.NavigateUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Target" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      </Docs>
    </Member>
    <Member MemberName="Checked">
      <MemberSignature Language="C#" Value="public bool Checked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Checked" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.Checked" />
      <MemberSignature Language="VB.NET" Value="Public Property Checked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Checked { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Checked : bool with get, set" Usage="System.Web.UI.WebControls.TreeNode.Checked" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das Kontrollkästchen des Knotens aktiviert ist, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn das Kontrollkästchen des Knotens aktiviert ist, andernfalls <see langword="false" />. Der Standardwert lautet <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn ein Knoten ein Kontrollkästchen anzeigt, wird die <xref:System.Web.UI.WebControls.TreeNode.Checked%2A>-Eigenschaft häufig verwendet, um anzugeben, ob das Kontrollkästchen aktiviert ist. Wenn das einem Knoten zugeordnete Kontrollkästchen ausgewählt ist, wird der Knoten automatisch der <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A>-Auflistung des <xref:System.Web.UI.WebControls.TreeView> Steuer Elements hinzugefügt. Die <xref:System.Web.UI.WebControls.TreeNode.Checked%2A>-Eigenschaft kann auch verwendet werden, um zu bestimmen, ob das Kontrollkästchen aktiviert ist.  
  
> [!NOTE]
>  Es kommt häufiger vor, dass die Kontrollkästchen der Knoten im <xref:System.Web.UI.WebControls.TreeView> Steuerelement durch Durchlaufen der <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A> Auflistung ausgewählt werden.  
  
 Der Wert dieser Eigenschaft wird im Ansichts Zustand gespeichert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeNode.Checked%2A>-Eigenschaft verwendet wird, um anzugeben, ob das Kontrollkästchen eines Knotens aktiviert ist. Die Kontrollkästchen der Knoten mit einer Tiefe von einem ausgewählten Zustand werden initialisiert. Damit dieses Beispiel ordnungsgemäß funktioniert, müssen Sie die folgenden XML-Beispiel Daten in eine Datei mit dem Namen Newsgroup. xml kopieren.  
  
 [!code-aspx-csharp[TreeNodeChecked#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeChecked/CS/treenodecheckedcs.aspx#1)]
 [!code-aspx-vb[TreeNodeChecked#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeChecked/VB/treenodecheckedvb.aspx#1)]  
  
 Der folgende Code ist eine Beispiel-XML-Datei für das vorherige Beispiel.  
  
```  
<category name="news.microsoft.com">  
    <group name="microsoft.public.dotnet.framework.aspnet"/>  
    <group name="microsoft.public.dotnet.framework.aspnet.mobile"/>  
    <group name="microsoft.public.dotnet.framework.aspnet.webservices"/>  
</category>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CheckedNodes" />
      </Docs>
    </Member>
    <Member MemberName="ChildNodes">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeCollection ChildNodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeCollection ChildNodes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChildNodes As TreeNodeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeCollection ^ ChildNodes { System::Web::UI::WebControls::TreeNodeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChildNodes : System.Web.UI.WebControls.TreeNodeCollection" Usage="System.Web.UI.WebControls.TreeNode.ChildNodes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerDefaultProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />-Auflistung ab, die die untergeordneten Knoten der ersten Ebene des aktuellen Knotens enthält.</summary>
        <value>Eine <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />, die die untergeordneten Knoten der ersten Ebene des aktuellen Knotens enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>-Eigenschaft, um eine <xref:System.Web.UI.WebControls.TreeNodeCollection> Auflistung zu erhalten, die die untergeordneten Knoten der ersten Ebene des aktuellen Knotens enthält. Diese Auflistung wird häufig zum Durchlaufen aller untergeordneten Knoten der ersten Ebene oder für den Zugriff auf einen bestimmten untergeordneten Knoten der ersten Ebene des aktuellen Knotens verwendet.  
  
 Die <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>-Eigenschaft kann auch verwendet werden, um die untergeordneten Knoten der ersten Ebene im aktuellen Knotenprogramm gesteuert zu verwalten. Sie können <xref:System.Web.UI.WebControls.TreeNode> Objekte aus der Auflistung hinzufügen, einfügen, entfernen und abrufen. Alle Aktualisierungen der Auflistung werden automatisch im <xref:System.Web.UI.WebControls.TreeView> Steuerelement wiedergegeben, wenn die Seite das nächste Mal aktualisiert wird.  
  
 Wenn Sie in der Struktur auf untergeordnete Knoten zugreifen möchten, verwenden Sie die <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>-Eigenschaft des untergeordneten Knotens der nächsten Ebene, um durch die Knoten Ebenen zu navigieren.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>-Eigenschaft verwendet wird, um die Struktur zu durchlaufen.  
  
 [!code-aspx-csharp[TreeNodeCollectionCount#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionCount/CS/treenodecollectioncountcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionCount#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionCount/VB/treenodecollectioncountvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeCollection" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Parent" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="protected virtual object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.Clone" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="treeNode.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt eine neue Instanz der <see cref="T:System.Web.UI.WebControls.TreeNode" />-Klasse mit den Eigenschaften der aktuellen <see cref="T:System.Web.UI.WebControls.TreeNode" />-Instanz.</summary>
        <returns>Eine neue Instanz von <see cref="T:System.Web.UI.WebControls.TreeNode" /> mit den Eigenschaften der aktuellen <see cref="T:System.Web.UI.WebControls.TreeNode" />-Instanz.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dies ist eine Hilfsmethode, die die von <xref:System.Web.UI.WebControls.TreeNode>implementierte <xref:System.ICloneable>-Schnittstelle unterstützt.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ICloneable" />
      </Docs>
    </Member>
    <Member MemberName="Collapse">
      <MemberSignature Language="C#" Value="public void Collapse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Collapse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.Collapse" />
      <MemberSignature Language="VB.NET" Value="Public Sub Collapse ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Collapse();" />
      <MemberSignature Language="F#" Value="member this.Collapse : unit -&gt; unit" Usage="treeNode.Collapse " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reduziert den aktuellen Strukturknoten.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.Web.UI.WebControls.TreeNode.Collapse%2A>-Methode, um den aktuellen Knoten zu reduzieren.  
  
> [!NOTE]
>  Als Alternative können Sie auch die <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>-Eigenschaft auf `false`festlegen.  
  
 Um den aktuellen Knoten und dessen untergeordnete Knoten zu reduzieren, sollten Sie die <xref:System.Web.UI.WebControls.TreeNode.CollapseAll%2A>-Methode verwenden.  
  
 <xref:System.Web.UI.WebControls.TreeView.CollapseAll%2A> werden alle Knoten in der gesamten Struktur reduziert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeNode.Collapse%2A>-Methode verwendet wird, um einen Knoten im <xref:System.Web.UI.WebControls.TreeView> Steuerelement Programm gesteuert zu reduzieren. Damit dieses Beispiel ordnungsgemäß funktioniert, müssen Sie die folgenden XML-Beispiel Daten in eine Datei mit dem Namen "Book. xml" kopieren.  
  
 [!code-aspx-csharp[TreeNodeExpand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeExpand/CS/treenodeexpandcs.aspx#1)]
 [!code-aspx-vb[TreeNodeExpand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeExpand/VB/treenodeexpandvb.aspx#1)]  
  
 Der folgende Code ist eine Beispiel-XML-Datei für das vorherige Beispiel.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Expanded" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.CollapseAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.Expand" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.ExpandAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.CollapseAll" />
      </Docs>
    </Member>
    <Member MemberName="CollapseAll">
      <MemberSignature Language="C#" Value="public void CollapseAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CollapseAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.CollapseAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub CollapseAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CollapseAll();" />
      <MemberSignature Language="F#" Value="member this.CollapseAll : unit -&gt; unit" Usage="treeNode.CollapseAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reduziert den aktuellen Knoten und alle seine untergeordneten Knoten.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.Web.UI.WebControls.TreeNode.CollapseAll%2A>-Methode, um den aktuellen Knoten und alle ihm untergeordneten Knoten zu reduzieren.  
  
> [!NOTE]
>  Als Alternative können Sie auch die <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>-Eigenschaft des aktuellen Knotens und der einzelnen untergeordneten Knoten auf `false`festlegen.  
  
 Um nur den aktuellen Knoten zu reduzieren, sollten Sie die <xref:System.Web.UI.WebControls.TreeNode.Collapse%2A>-Methode verwenden.  
  
 <xref:System.Web.UI.WebControls.TreeView.CollapseAll%2A> werden alle Knoten in der gesamten Struktur reduziert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeNode.CollapseAll%2A>-Methode verwendet wird, um einen Knoten und alle seine untergeordneten Knoten im <xref:System.Web.UI.WebControls.TreeView>-Steuerelement Programm gesteuert zu reduzieren. Damit dieses Beispiel ordnungsgemäß funktioniert, müssen Sie die folgenden XML-Beispiel Daten in eine Datei mit dem Namen "Book. xml" kopieren.  
  
 [!code-aspx-csharp[TreeNodeExpandAll#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeExpandAll/CS/treenodeexpandallcs.aspx#1)]
 [!code-aspx-vb[TreeNodeExpandAll#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeExpandAll/VB/treenodeexpandallvb.aspx#1)]  
  
 Der folgende Code ist eine Beispiel-XML-Datei für das vorherige Beispiel.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Expanded" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.Collapse" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.Expand" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.ExpandAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.CollapseAll" />
      </Docs>
    </Member>
    <Member MemberName="DataBound">
      <MemberSignature Language="C#" Value="public bool DataBound { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DataBound" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.DataBound" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataBound As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DataBound { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.DataBound : bool" Usage="System.Web.UI.WebControls.TreeNode.DataBound" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Knoten durch Datenbindung erstellt wurde.</summary>
        <value><see langword="true" />, wenn der Knoten durch Datenbindung erstellt wurde, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.TreeNode.DataBound%2A>-Eigenschaft wird verwendet, um Programm gesteuert zu ermitteln, ob der Knoten durch Datenbindung erstellt wurde. Da dynamischer und statischer Inhalt nicht im gleichen Knoten gemischt werden können, wird diese Eigenschaft häufig verwendet, wenn ein <xref:System.Web.UI.WebControls.TreeView>-Steuerelement dynamisch aufgefüllt wird, um zu bestimmen, ob der Knoten statischen Inhalt enthält.  
  
 Der Wert dieser Eigenschaft wird im Ansichts Zustand gespeichert.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
      </Docs>
    </Member>
    <Member MemberName="DataItem">
      <MemberSignature Language="C#" Value="public object DataItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataItem" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.DataItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DataItem { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataItem : obj" Usage="System.Web.UI.WebControls.TreeNode.DataItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Datenelement ab, das an den Knoten gebunden ist.</summary>
        <value>Ein <see cref="T:System.Object" />, das das Datenelement darstellt, das an den Knoten gebunden ist. Der Standardwert ist <see langword="null" />. Dies bedeutet, dass der Knoten nicht an ein Datenelement gebunden ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn das <xref:System.Web.UI.WebControls.TreeView>-Steuerelement an eine Datenquelle gebunden ist (z. b. ein <xref:System.Web.UI.WebControls.XmlDataSource> Objekt), wird diese Eigenschaft auf das Datenelement festgelegt, das an diesen spezifischen Knoten gebunden ist. Diese Eigenschaft wird häufig verwendet, um auf die Werte des Datenelements zuzugreifen.  
  
> [!NOTE]
>  Diese Eigenschaft ist nur verfügbar, nachdem die Datenbindung stattgefunden hat.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.XmlDataSource" />
      </Docs>
    </Member>
    <Member MemberName="DataPath">
      <MemberSignature Language="C#" Value="public string DataPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.DataPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataPath : string" Usage="System.Web.UI.WebControls.TreeNode.DataPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Pfad zu den an den Knoten gebundenen Daten ab.</summary>
        <value>Der Pfad zu den an den Knoten gebundenen Daten. Dieser Wert stammt vom hierarchischen Datenquellen-Steuerelement, an das das <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelement gebunden ist. Der Standardwert ist eine leere Zeichenfolge ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der <xref:System.Web.UI.WebControls.TreeNode.DataPath%2A>-Eigenschafts Wert wird häufig beim Aufrufen der <xref:System.Web.UI.IHierarchicalDataSource.GetHierarchicalView%2A?displayProperty=nameWithType>-Methode verwendet, um den Pfad zu den Daten bereitzustellen, die an den aktuellen Knoten gebunden sind. Diese Methode gibt dann ein <xref:System.Web.UI.HierarchicalDataSourceView?displayProperty=nameWithType> Objekt zurück, das die Daten im angegebenen Pfad enthält.  
  
 Der Wert dieser Eigenschaft wird im Ansichts Zustand gespeichert.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="M:System.Web.UI.HierarchicalDataSourceControl.GetHierarchicalView(System.String)" />
        <altmember cref="T:System.Web.UI.HierarchicalDataSourceControl" />
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.Depth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Depth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Depth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Depth : int" Usage="System.Web.UI.WebControls.TreeNode.Depth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Tiefe des Knotens ab.</summary>
        <value>Die Tiefe des Knotens.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.Web.UI.WebControls.TreeNode.Depth%2A>-Eigenschaft, um die Tiefe des Knotens zu ermitteln. Die Tiefe stellt die Anzahl der Hierarchieebenen zwischen einem Knoten und dem Stamm Knoten dar. Ein Stamm Knoten hat z. b. eine Tiefe von 0 (null). Ein untergeordnetes Element des Stamm Knotens hat eine Tiefe von 1 usw.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeNode.Depth%2A>-Eigenschaft verwendet wird, um die Tiefe eines Knotens zu ermitteln. Alle Knoten mit einer Tiefe von einem ausgewählten Zustand werden initialisiert. Damit dieses Beispiel ordnungsgemäß funktioniert, müssen Sie die folgenden XML-Beispiel Daten in eine Datei mit dem Namen Newsgroup. xml kopieren.  
  
 [!code-aspx-csharp[TreeNodeChecked#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeChecked/CS/treenodecheckedcs.aspx#1)]
 [!code-aspx-vb[TreeNodeChecked#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeChecked/VB/treenodecheckedvb.aspx#1)]  
  
 Der folgende Code ist eine Beispiel-XML-Datei für das vorherige Beispiel.  
  
```  
<category name="news.microsoft.com">  
    <group name="microsoft.public.dotnet.framework.aspnet"/>  
    <group name="microsoft.public.dotnet.framework.aspnet.mobile"/>  
    <group name="microsoft.public.dotnet.framework.aspnet.webservices"/>  
</category>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
      </Docs>
    </Member>
    <Member MemberName="Expand">
      <MemberSignature Language="C#" Value="public void Expand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Expand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.Expand" />
      <MemberSignature Language="VB.NET" Value="Public Sub Expand ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Expand();" />
      <MemberSignature Language="F#" Value="member this.Expand : unit -&gt; unit" Usage="treeNode.Expand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erweitert den aktuellen Strukturknoten.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.Web.UI.WebControls.TreeNode.Expand%2A>-Methode, um den aktuellen Knoten bequem zu erweitern.  
  
> [!NOTE]
>  Als Alternative können Sie auch die <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>-Eigenschaft auf `true`festlegen.  
  
 Um den aktuellen Knoten und alle ihm untergeordneten Knoten zu erweitern, sollten Sie die <xref:System.Web.UI.WebControls.TreeNode.ExpandAll%2A>-Methode verwenden.  
  
 <xref:System.Web.UI.WebControls.TreeView.ExpandAll%2A> werden alle Knoten in der gesamten Struktur erweitert.  
  
 Der Wert dieser Eigenschaft wird im Ansichts Zustand gespeichert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeNode.Expand%2A>-Methode verwendet wird, um einen Knoten im <xref:System.Web.UI.WebControls.TreeView>-Steuerelement Programm gesteuert zu erweitern. Damit dieses Beispiel ordnungsgemäß funktioniert, müssen Sie die folgenden XML-Beispiel Daten in eine Datei mit dem Namen "Book. xml" kopieren.  
  
 [!code-aspx-csharp[TreeNodeExpand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeExpand/CS/treenodeexpandcs.aspx#1)]
 [!code-aspx-vb[TreeNodeExpand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeExpand/VB/treenodeexpandvb.aspx#1)]  
  
 Der folgende Code ist eine Beispiel-XML-Datei für das vorherige Beispiel.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Expanded" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.Collapse" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.CollapseAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.ExpandAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.ExpandAll" />
      </Docs>
    </Member>
    <Member MemberName="ExpandAll">
      <MemberSignature Language="C#" Value="public void ExpandAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExpandAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.ExpandAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExpandAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExpandAll();" />
      <MemberSignature Language="F#" Value="member this.ExpandAll : unit -&gt; unit" Usage="treeNode.ExpandAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erweitert den aktuellen Knoten und all seine untergeordneten Knoten.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.Web.UI.WebControls.TreeNode.ExpandAll%2A>-Methode, um den aktuellen Knoten und alle ihm untergeordneten Knoten zu erweitern.  
  
> [!NOTE]
>  Als Alternative können Sie auch die <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>-Eigenschaft des aktuellen Knotens und der einzelnen untergeordneten Knoten auf `true`festlegen.  
  
 Um nur den aktuellen Knoten zu erweitern, sollten Sie die <xref:System.Web.UI.WebControls.TreeNode.Expand%2A>-Methode verwenden.  
  
 <xref:System.Web.UI.WebControls.TreeView.ExpandAll%2A> werden alle Knoten in der gesamten Struktur erweitert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeNode.ExpandAll%2A>-Methode verwendet wird, um einen Knoten und alle seine untergeordneten Knotenprogramm gesteuert im <xref:System.Web.UI.WebControls.TreeView>-Steuerelement zu erweitern. Damit dieses Beispiel ordnungsgemäß funktioniert, müssen Sie die folgenden XML-Beispiel Daten in eine Datei mit dem Namen "Book. xml" kopieren.  
  
 [!code-aspx-csharp[TreeNodeExpandAll#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeExpandAll/CS/treenodeexpandallcs.aspx#1)]
 [!code-aspx-vb[TreeNodeExpandAll#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeExpandAll/VB/treenodeexpandallvb.aspx#1)]  
  
 Der folgende Code ist eine Beispiel-XML-Datei für das vorherige Beispiel.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Expanded" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.Collapse" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.CollapseAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.Expand" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.ExpandAll" />
      </Docs>
    </Member>
    <Member MemberName="Expanded">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; Expanded { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; Expanded" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.Expanded" />
      <MemberSignature Language="VB.NET" Value="Public Property Expanded As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;bool&gt; Expanded { Nullable&lt;bool&gt; get(); void set(Nullable&lt;bool&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.Expanded : Nullable&lt;bool&gt; with get, set" Usage="System.Web.UI.WebControls.TreeNode.Expanded" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Nullable`1&lt;System.Boolean&gt;), "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Knoten erweitert ist, oder legt diesen Wert fest.</summary>
        <value><see langword="true" />, wenn der Knoten erweitert wird, <see langword="false" />, wenn der Knoten nicht erweitert wird, oder <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>-Eigenschaft, um anzugeben oder zu bestimmen, ob der Knoten erweitert ist.  
  
 Sie können das Erweitern und Reduzieren eines Knotens durch Aufrufen der <xref:System.Web.UI.WebControls.TreeNode.Expand%2A> und <xref:System.Web.UI.WebControls.TreeNode.Collapse%2A> Methoden bzw. Sie können auch erweitern und Reduzieren eines Knotens und aller diesem untergeordneten Knoten durch Aufrufen der <xref:System.Web.UI.WebControls.TreeNode.ExpandAll%2A> und <xref:System.Web.UI.WebControls.TreeNode.CollapseAll%2A> Methoden bzw.  
  
 Da es sich bei der <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>-Eigenschaft um eine Eigenschaft mit drei C# Zuständen handelt, verursacht der folgende Code Ausschnitt einen Kompilierungsfehler:  
  
```  
protected void TreeView1_SelectedNodeChanged(object sender, EventArgs e)  
{  
if (TreeView1.Nodes[0].Expanded)  
{  
// some work here   
}  
}  
```  
  
 Während VB.NET den `Boolean` Wert implizit in eine `NullableBoolean`umwandelt, C# nicht. Daher ist es eine bewährte Vorgehensweise, den Zustand der Eigenschaft explizit zu überprüfen. Beispielsweise werden in den folgenden Codebeispielen in Visual Basic C# und der Wert der <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>-Eigenschaft explizit getestet.  
  
 Im folgenden Visual Basic Codebeispiel wird der Wert der <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>-Eigenschaft explizit getestet. In diesem Beispiel wird getestet, ob die <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>-Eigenschaft auf `True`festgelegt ist. Daher `Nothing` und `False` die `If`-Anweisung durchlaufen.  
  
```  
If TreeView1.Nodes(0).Expanded = True Then 'some work hereEnd IF  
```  
  
 In C# diesem Codebeispiel wird explizit der Wert der <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>-Eigenschaft getestet. In diesem Beispiel wird getestet, ob die <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>-Eigenschaft auf `True`festgelegt ist. Daher `Null` und `False` die `If`-Anweisung durchlaufen.  
  
```  
if( TreeView1.Nodes[0].Expanded == true ) { //some work here}  
```  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie die <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>-Eigenschaft verwenden, um einen Knotenprogramm gesteuert zu erweitern. Es initialisiert alle Knoten mit einer Tiefe von einem in einen erweiterten Zustand. Beachten Sie Folgendes: Wenn der Stamm Knoten erweitert wird, sind seine untergeordneten Knoten bereits erweitert. Damit dieses Beispiel ordnungsgemäß funktioniert, müssen Sie die folgenden XML-Beispiel Daten in eine Datei mit dem Namen "Book. xml" kopieren.  
  
 [!code-aspx-csharp[TreeNodeExpanded#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeExpanded/CS/treenodeexpandedcs.aspx#1)]
 [!code-aspx-vb[TreeNodeExpanded#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeExpanded/VB/treenodeexpandedvb.aspx#1)]  
  
 Der folgende Code ist eine Beispiel-XML-Datei für das vorherige Beispiel.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandDepth" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.Collapse" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.CollapseAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.Expand" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.ExpandAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.ExpandAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.CollapseAll" />
      </Docs>
    </Member>
    <Member MemberName="ImageToolTip">
      <MemberSignature Language="C#" Value="public string ImageToolTip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImageToolTip" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.ImageToolTip" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageToolTip As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ImageToolTip { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ImageToolTip : string with get, set" Usage="System.Web.UI.WebControls.TreeNode.ImageToolTip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den QuickInfo-Text für das neben einem Knoten angezeigte Bild ab oder legt ihn fest.</summary>
        <value>Der QuickInfo-Text für das neben einem Knoten angezeigte Bild. Der Standardwert ist eine leere Zeichenfolge ("") und gibt an, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn ein Bild neben einem Knoten angezeigt wird (wenn die <xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>-Eigenschaft festgelegt ist), geben Sie mit der <xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A>-Eigenschaft die QuickInfo an, die angezeigt wird, wenn der Benutzer den Mauszeiger über dem Bild positioniert. Der von Ihnen angegebene Text bietet Hilfstechnologiegeräte mit einer Beschreibung des Bilds, das verwendet werden kann, um das Steuerelement leichter zugänglich zu machen.  
  
 Der Wert dieser Eigenschaft wird im Ansichts Zustand gespeichert.  
  
 Der Wert dieser Eigenschaft, wenn festgelegt, kann mithilfe eines Designers Tools automatisch zu einer Ressourcendatei gespeichert werden. Weitere Informationen finden Sie unter <xref:System.ComponentModel.LocalizableAttribute> und [Globalisierung und Lokalisierung](https://docs.microsoft.com/previous-versions/aspnet/c6zyy3s9(v=vs.100)).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A>-Eigenschaft verwendet wird, um den QuickInfo-Text für ein Bild anzugeben, das neben einem Knoten angezeigt wird. Damit dieses Beispiel ordnungsgemäß funktioniert, müssen Sie Ihre eigenen Images angeben.  
  
 [!code-aspx-csharp[TreeNodeImageToolTip#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeImageToolTip/CS/treenodeimagetooltipcs.aspx#1)]
 [!code-aspx-vb[TreeNodeImageToolTip#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeImageToolTip/VB/treenodeimagetooltipvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ToolTip" />
      </Docs>
    </Member>
    <Member MemberName="ImageUrl">
      <MemberSignature Language="C#" Value="public string ImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.ImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ImageUrl : string with get, set" Usage="System.Web.UI.WebControls.TreeNode.ImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die URL zu einem Bild ab, das neben dem Knoten angezeigt wird, oder legt diese URL fest.</summary>
        <value>Die URL zu einem benutzerdefinierten Bild, das neben dem Knoten angezeigt wird. Der Standardwert ist eine leere Zeichenfolge (""), die angibt, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>-Eigenschaft, um ein benutzerdefiniertes Image für den aktuellen Knoten im <xref:System.Web.UI.WebControls.TreeView> Steuerelement anzugeben. Dieses Bild wird neben dem Knoten angezeigt und kann ein beliebiges Dateiformat aufweisen (JPG, GIF, BMP usw.), solange der Client Browser dieses Format unterstützt.  
  
 Der Wert dieser Eigenschaft wird im Ansichts Zustand gespeichert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>-Eigenschaft verwendet wird, um ein benutzerdefiniertes Image für einen Knoten bereitzustellen. Damit dieses Beispiel ordnungsgemäß funktioniert, müssen Sie die folgenden XML-Beispiel Daten in eine Datei mit dem Namen "Book. xml" kopieren.  
  
 [!code-aspx-csharp[TreeViewTreeNodeDataBound#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewTreeNodeDataBound/CS/treeviewtreenodedataboundcs.aspx#1)]
 [!code-aspx-vb[TreeViewTreeNodeDataBound#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewTreeNodeDataBound/VB/treeviewtreenodedataboundvb.aspx#1)]  
  
 Der folgende Code ist eine Beispiel-XML-Datei für das vorherige Beispiel.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ImageSet" />
      </Docs>
    </Member>
    <Member MemberName="IsTrackingViewState">
      <MemberSignature Language="C#" Value="protected bool IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsTrackingViewState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsTrackingViewState { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsTrackingViewState : bool" Usage="System.Web.UI.WebControls.TreeNode.IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob Änderungen am Ansichtszustand des Knotens gespeichert werden.</summary>
        <value><see langword="true" />, wenn das Steuerelement für das Speichern seines Zustands markiert ist, andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.IStateManager.IsTrackingViewState" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb386448(v=vs.100)">Übersicht über Ansichts Status</related>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected virtual void LoadViewState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void LoadViewState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub LoadViewState (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void LoadViewState(System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member LoadViewState : obj -&gt; unit&#xA;override this.LoadViewState : obj -&gt; unit" Usage="treeNode.LoadViewState state" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">Ein <see cref="T:System.Object" />, das den Zustand des Knotens darstellt.</param>
        <summary>Lädt den zuvor gespeicherten Ansichtszustand des Knotens.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeNode.LoadViewState%2A> ist eine Hilfsmethode, die verwendet wird, um den zuvor gespeicherten Ansichts Zustand des Knotens zu laden.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IStateManager.LoadViewState(System.Object)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb386448(v=vs.100)">Übersicht über Ansichts Status</related>
      </Docs>
    </Member>
    <Member MemberName="NavigateUrl">
      <MemberSignature Language="C#" Value="public string NavigateUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NavigateUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.NavigateUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property NavigateUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NavigateUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NavigateUrl : string with get, set" Usage="System.Web.UI.WebControls.TreeNode.NavigateUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die URL ab, zu dem beim Klicken auf den Knoten navigiert wird, oder legt diese URL fest.</summary>
        <value>Die URL, zu der navigiert werden soll, wenn auf den Knoten geklickt wird. Der Standardwert ist eine leere Zeichenfolge (""), die angibt, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Text eines Knotens kann sich in einem von zwei Modi befinden: Auswahlmodus oder Navigationsmodus. Standardmäßig befindet sich ein Knoten im Auswahlmodus. Um einen Knoten in den Navigationsmodus zu versetzen, legen Sie die <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>-Eigenschaft des Knotens auf einen anderen Wert als eine leere Zeichenfolge fest.  
  
 Wenn sich ein Knoten im Navigationsmodus befindet, werden alle Auswahl Ereignisse für diesen Knoten deaktiviert. Durch Klicken auf den Knoten im Navigationsmodus wird der Benutzer mit der angegebenen URL verknüpft. Optional können Sie die <xref:System.Web.UI.WebControls.TreeNode.Target%2A>-Eigenschaft festlegen, um das Fenster oder den Frame anzugeben, in dem der verknüpfte Inhalt angezeigt werden soll.  
  
 Der Wert dieser Eigenschaft wird im Ansichts Zustand gespeichert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die Frames für das nächste Codebeispiel eingerichtet werden.  
  
 [!code-aspx-csharp[TreeViewFrameSet#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFrameSet/CS/framecs.aspx#1)]
 [!code-aspx-vb[TreeViewFrameSet#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFrameSet/VB/framevb.aspx#1)]  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>-Eigenschaft verwendet wird, um die URL anzugeben, mit der beim Klicken auf den Knoten eine Verknüpfung hergestellt werden soll. Dieses Beispiel wird im Frameset des vorherigen Beispiels verwendet, um ein Inhaltsverzeichnis anzuzeigen.  
  
 [!code-aspx-csharp[TreeViewFrameExample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFrameExample/CS/treeviewframecs.aspx#1)]
 [!code-aspx-vb[TreeViewFrameExample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFrameExample/VB/treeviewframevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Target" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.SelectAction" />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNode Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNode Parent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNode ^ Parent { System::Web::UI::WebControls::TreeNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Web.UI.WebControls.TreeNode" Usage="System.Web.UI.WebControls.TreeNode.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den übergeordneten Knoten des aktuellen Knotens ab.</summary>
        <value>Ein <see cref="T:System.Web.UI.WebControls.TreeNode" />, der den übergeordneten Knoten des aktuellen Knotens darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.TreeNode.Parent%2A>-Eigenschaft gibt ein <xref:System.Web.UI.WebControls.TreeNode>-Objekt zurück, das den übergeordneten Knoten des aktuellen Knotens darstellt. Sie wird häufig verwendet, um den übergeordneten Knoten zu ermitteln oder auf die Eigenschaften des übergeordneten Knotens zuzugreifen.  
  
> [!NOTE]
>  Ein Stamm Knoten weist keinen übergeordneten Knoten auf.  
  
 Um auf die untergeordneten Knoten des aktuellen Knotens zuzugreifen, verwenden Sie die <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>-Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.UI.WebControls.TreeNode.Parent%2A>-Eigenschaft auf die <xref:System.Web.UI.WebControls.TreeNode.Text%2A>-Eigenschaft des übergeordneten Knotens des aktuellen Knotens zugreifen.  
  
 [!code-aspx-csharp[TreeNodeParent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeParent/CS/treenodeparentcs.aspx#1)]
 [!code-aspx-vb[TreeNodeParent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeParent/VB/treenodeparentvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      </Docs>
    </Member>
    <Member MemberName="PopulateOnDemand">
      <MemberSignature Language="C#" Value="public bool PopulateOnDemand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PopulateOnDemand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.PopulateOnDemand" />
      <MemberSignature Language="VB.NET" Value="Public Property PopulateOnDemand As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PopulateOnDemand { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PopulateOnDemand : bool with get, set" Usage="System.Web.UI.WebControls.TreeNode.PopulateOnDemand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Knoten dynamisch aufgefüllt wird, oder legt diesen Wert fest.</summary>
        <value><see langword="true" />, um den Knoten dynamisch aufzufüllen, andernfalls <see langword="false" />. Der Standardwert lautet <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In manchen Fällen ist es nicht praktikabel, die Struktur durch die Datengröße oder den benutzerdefinierten Inhalt, der von Benutzereingaben abhängt, statisch vorzudefinieren. Aus diesem Grund unterstützt das <xref:System.Web.UI.WebControls.TreeView>-Steuerelement die dynamische Knoten Auffüllung. Wenn die <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>-Eigenschaft eines Knotens auf `true`festgelegt ist, wird dieser Knoten zur Laufzeit über ein Post Back Ereignis aufgefüllt, wenn der Knoten erweitert wird. Um einen Knoten dynamisch aufzufüllen, muss eine Ereignis Behandlungsmethode, die den Knoten füllt, für das <xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate> Ereignis definiert werden.  
  
 Unterstützte Browser können auch die Client seitige Knoten Population nutzen. Wenn diese Option aktiviert ist, kann das <xref:System.Web.UI.WebControls.TreeView>-Steuerelement einen Knoten auf dem Client dynamisch auffüllen, wenn dieser Knoten erweitert wird. Dadurch wird verhindert, dass ein Postback an den Server erfolgt. Weitere Informationen zur Client seitigen Knoten Population finden Sie unter <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>.  
  
 Der Wert dieser Eigenschaft wird im Ansichts Zustand gespeichert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>-Eigenschaft verwendet wird, um anzugeben, dass ein Knoten dynamisch aufgefüllt wird.  
  
 [!code-aspx-csharp[TreeViewPopulateNodesFromClient#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/CS/treeviewpopulatenodesfromclientcs.aspx#1)]
 [!code-aspx-vb[TreeViewPopulateNodesFromClient#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/VB/treeviewpopulatenodesfromclientvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient" />
      </Docs>
    </Member>
    <Member MemberName="RenderPostText">
      <MemberSignature Language="C#" Value="protected virtual void RenderPostText (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RenderPostText(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.RenderPostText(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RenderPostText (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RenderPostText(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member RenderPostText : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.RenderPostText : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="treeNode.RenderPostText writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Das <see cref="T:System.Web.UI.HtmlTextWriter" />-Objekt, das den Ausgabestream darstellt, der zum Schreiben des Inhalts auf eine Webseite verwendet wird.</param>
        <summary>Ermöglicht es Steuerelemententwicklern, zusätzliche Darstellungsmöglichkeiten für den Knoten bereitzustellen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode kann von Steuerelement Entwicklern überschrieben werden, um zusätzliche Rendering hinzuzufügen, nachdem der Knoten gerendert wurde.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.RenderPreText(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderPreText">
      <MemberSignature Language="C#" Value="protected virtual void RenderPreText (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RenderPreText(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.RenderPreText(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RenderPreText (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RenderPreText(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member RenderPreText : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.RenderPreText : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="treeNode.RenderPreText writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Das <see cref="T:System.Web.UI.HtmlTextWriter" />-Objekt, das den Ausgabestream darstellt, der zum Schreiben des Inhalts auf eine Webseite verwendet wird.</param>
        <summary>Ermöglicht es Steuerelemententwicklern, zusätzliche Darstellungsmöglichkeiten für den Knoten bereitzustellen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode kann von Steuerelement Entwicklern überschrieben werden, um zusätzliche Rendering hinzuzufügen, bevor der Knoten gerendert wird.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.RenderPreText(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected virtual object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="abstract member SaveViewState : unit -&gt; obj&#xA;override this.SaveViewState : unit -&gt; obj" Usage="treeNode.SaveViewState " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Speichert den aktuellen Ansichtszustand des Knotens.</summary>
        <returns>Ein <see cref="T:System.Object" />, das den gespeicherten Zustand des Knotens enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.TreeNode.SaveViewState%2A>-Methode ist eine Hilfsmethode, die vom Knoten aufgerufen wird, um seinen Zustand zu speichern.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IStateManager.SaveViewState" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb386448(v=vs.100)">Übersicht über Ansichts Status</related>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Select() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.Select" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Select();" />
      <MemberSignature Language="F#" Value="member this.Select : unit -&gt; unit" Usage="treeNode.Select " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wählt den aktuellen Knoten im <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelement aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.Web.UI.WebControls.TreeNode.Select%2A>-Methode, um den aktuellen Knoten im <xref:System.Web.UI.WebControls.TreeView>-Steuerelement auszuwählen.  
  
 **Hinweis** Als Alternative können Sie auch den aktuellen Knoten auswählen, indem Sie die <xref:System.Web.UI.WebControls.TreeNode.Selected%2A>-Eigenschaft auf `true`festlegen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeNode.Select%2A>-Methode verwendet wird, um einen Knoten im <xref:System.Web.UI.WebControls.TreeView>-Steuerelement auszuwählen.  
  
 [!code-aspx-csharp[TreeNodeSelected2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeSelected2/CS/treenodeselected2cs.aspx#1)]
 [!code-aspx-vb[TreeNodeSelected2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeSelected2/VB/treenodeselected2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Selected" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNode" />
      </Docs>
    </Member>
    <Member MemberName="SelectAction">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeSelectAction SelectAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.TreeNodeSelectAction SelectAction" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.SelectAction" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectAction As TreeNodeSelectAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeSelectAction SelectAction { System::Web::UI::WebControls::TreeNodeSelectAction get(); void set(System::Web::UI::WebControls::TreeNodeSelectAction value); };" />
      <MemberSignature Language="F#" Value="member this.SelectAction : System.Web.UI.WebControls.TreeNodeSelectAction with get, set" Usage="System.Web.UI.WebControls.TreeNode.SelectAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeSelectAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Ereignis oder die Ereignisse ab, die ausgelöst werden sollen, wenn ein Knoten ausgewählt wird, oder legt diese Ereignisse fest.</summary>
        <value>Einer der <see cref="T:System.Web.UI.WebControls.TreeNodeSelectAction" />-Werte. Der Standardwert lautet <see langword="TreeNodeSelectAction.Select" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Text eines Knotens im <xref:System.Web.UI.WebControls.TreeView> Steuerelement kann sich in einem von zwei Modi befinden: Auswahlmodus oder Navigationsmodus. Standardmäßig befindet sich ein Knoten im Auswahlmodus. Um einen Knoten in den Navigationsmodus zu versetzen, legen Sie die <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>-Eigenschaft des Knotens auf einen anderen Wert als eine leere Zeichenfolge ("") fest. Um einen Knoten in den Auswahlmodus zu versetzen, legen Sie die <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>-Eigenschaft des Knotens auf eine leere Zeichenfolge fest.  
  
> [!NOTE]
>  Wenn sich ein Knoten im Navigationsmodus befindet, werden Auswahl Ereignisse für diesen Knoten deaktiviert. Wenn Sie auf einen Knoten klicken, wird der Benutzer an die angegebene URL weitergeleitet, anstatt die Seite zurück an den Server zu senden und ein Ereignis zu erhöhen.  
  
 Wenn sich ein Knoten im Auswahlmodus befindet, geben Sie mit der <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>-Eigenschaft an, welches Ereignis oder welche Ereignisse ausgelöst werden, wenn ein Knoten ausgewählt wird. In der folgenden Tabelle sind die verfügbaren Optionen aufgelistet.  
  
|Auswahl Aktion|BESCHREIBUNG|  
|----------------------|-----------------|  
|`TreeNodeSelectAction.Expand`|Schaltet den Knoten zwischen erweitert und reduziert um. Löst das <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>-Ereignis oder das <xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed>-Ereignis entsprechend aus.|  
|`TreeNodeSelectAction.None`|Löst keine Ereignisse aus, wenn ein Knoten ausgewählt wird.|  
|`TreeNodeSelectAction.Select`|Löst das <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>-Ereignis aus, wenn ein Knoten ausgewählt wird.|  
|`TreeNodeSelectAction.SelectExpand`|Löst die <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> und die <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> Ereignisse aus, wenn ein Knoten ausgewählt wird. Knoten werden nur erweitert und nie reduziert.|  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>-Eigenschaft wird nicht für einen Knoten gerendert, dessen <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>-Eigenschaft auf `TreeNodeSelectAction.None`festgelegt ist.  
  
 Der Wert dieser Eigenschaft wird im Ansichts Zustand gespeichert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>-Eigenschaft verwendet wird, um anzugeben, welches Ereignis ausgelöst wird, wenn auf einen Knoten geklickt wird.  
  
 [!code-aspx-csharp[TreeViewPopulateNodesFromClient#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/CS/treeviewpopulatenodesfromclientcs.aspx#1)]
 [!code-aspx-vb[TreeViewPopulateNodesFromClient#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/VB/treeviewpopulatenodesfromclientvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeSelectAction" />
        <altmember cref="E:System.Web.UI.WebControls.TreeView.SelectedNodeChanged" />
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeExpanded" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.NavigateUrl" />
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public bool Selected { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Selected" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.Selected" />
      <MemberSignature Language="VB.NET" Value="Public Property Selected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Selected { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Selected : bool with get, set" Usage="System.Web.UI.WebControls.TreeNode.Selected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Knoten ausgewählt ist, oder legt diesen Wert fest.</summary>
        <value><see langword="true" />, wenn der Knoten ausgewählt ist, andernfalls <see langword="false" />. Der Standardwert lautet <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.Web.UI.WebControls.TreeNode.Selected%2A>-Eigenschaft, um anzugeben oder zu bestimmen, ob der Knoten ausgewählt ist.  
  
> [!NOTE]
>  Obwohl die-Eigenschaft verwendet werden kann, um zu bestimmen, ob der Knoten ausgewählt ist, wird die <xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A>-Eigenschaft häufiger verwendet.  
  
 Wenn diese Eigenschaft verwendet wird, kann nur jeweils ein Knoten im <xref:System.Web.UI.WebControls.TreeView> Steuerelement ausgewählt werden.  
  
> [!NOTE]
>  Alternativ können Sie den Knoten auch mit der <xref:System.Web.UI.WebControls.TreeNode.Select%2A>-Methode auswählen.  
  
 Der Wert dieser Eigenschaft wird im Ansichts Zustand gespeichert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie die <xref:System.Web.UI.WebControls.TreeNode.Selected%2A>-Eigenschaft verwenden, um einen Knoten im <xref:System.Web.UI.WebControls.TreeView>-Steuerelement auszuwählen.  
  
 [!code-aspx-csharp[TreeNodeSelected2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeSelected2/CS/treenodeselected2cs.aspx#1)]
 [!code-aspx-vb[TreeNodeSelected2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeSelected2/VB/treenodeselected2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.Select" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowCheckBoxes" />
      </Docs>
    </Member>
    <Member MemberName="ShowCheckBox">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; ShowCheckBox { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; ShowCheckBox" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.ShowCheckBox" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowCheckBox As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;bool&gt; ShowCheckBox { Nullable&lt;bool&gt; get(); void set(Nullable&lt;bool&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.ShowCheckBox : Nullable&lt;bool&gt; with get, set" Usage="System.Web.UI.WebControls.TreeNode.ShowCheckBox" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Nullable`1&lt;System.Boolean&gt;), "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob ein Kontrollkästchen neben dem Knoten angezeigt wird, oder legt diesen Wert fest.</summary>
        <value><see langword="true" />, um das Kontrollkästchen anzuzeigen, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit dem <xref:System.Web.UI.WebControls.TreeView>-Steuerelement können Sie ein Kontrollkästchen neben dem Image eines Knotens anzeigen. Verwenden Sie die <xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A>-Eigenschaft, um das Kontrollkästchen für den aktuellen Knoten anzuzeigen oder auszublenden.  
  
 Obwohl die <xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A>-Eigenschaft verwendet werden kann, um Kontrollkästchen anzuzeigen, ist es eher üblich, die <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A?displayProperty=nameWithType>-Eigenschaft des <xref:System.Web.UI.WebControls.TreeView>-Steuer Elements zu verwenden. Die <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A?displayProperty=nameWithType>-Eigenschaft wirkt sich jedoch auf jeden Knotentyp aus, der durch die-Eigenschaft angegeben wird. Daher wird die <xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A?displayProperty=nameWithType>-Eigenschaft häufig verwendet, um diese Einstellung für einen einzelnen Knoten zu überschreiben.  
  
 Da es sich bei der <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A?displayProperty=nameWithType>-Eigenschaft um eine Eigenschaft mit drei C# Zuständen handelt, verursacht der folgende Code Ausschnitt einen Kompilierungsfehler:  
  
```  
protected void TreeView1_SelectedNodeChanged(object sender, EventArgs e)  
{  
if (TreeView1.Nodes[0].Expanded)  
{  
// some work here   
}  
}  
```  
  
 Während VB.NET den `Boolean` Wert implizit in eine `NullableBoolean`umwandelt, C# nicht. Daher ist es eine bewährte Vorgehensweise, den Zustand der Eigenschaft explizit zu überprüfen. Beispielsweise werden in den folgenden Codebeispielen in Visual Basic C# und der Wert der <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>-Eigenschaft explizit getestet.  
  
 Im folgenden Visual Basic Codebeispiel wird der Wert der <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>-Eigenschaft explizit getestet. In diesem Beispiel wird getestet, ob die <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>-Eigenschaft auf `True`festgelegt ist. Daher `Nothing` und `False` die `If`-Anweisung durchlaufen.  
  
```  
If TreeView1.Nodes(0).Expanded = True Then 'some work hereEnd IF  
```  
  
 In C# diesem Codebeispiel wird explizit der Wert der <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>-Eigenschaft getestet. In diesem Beispiel wird getestet, ob die <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>-Eigenschaft auf `True`festgelegt ist. Daher `Null` und `False` die `If`-Anweisung durchlaufen.  
  
```  
if( TreeView1.Nodes[0].Expanded == true ) { //some work here}  
```  
  
 Der Wert dieser Eigenschaft wird im Ansichts Zustand gespeichert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A>-Eigenschaft verwendet wird, um das Kontrollkästchen für einen Knoten im <xref:System.Web.UI.WebControls.TreeView> Steuerelement Programm gesteuert anzuzeigen und auszublenden. Damit dieses Beispiel ordnungsgemäß funktioniert, müssen Sie die folgenden XML-Beispiel Daten in eine Datei mit dem Namen "Book. xml" kopieren.  
  
 [!code-aspx-csharp[TreeNodeShowCheckBox#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeShowCheckBox/CS/treenodeshowcheckboxcs.aspx#1)]
 [!code-aspx-vb[TreeNodeShowCheckBox#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeShowCheckBox/VB/treenodeshowcheckboxvb.aspx#1)]  
  
 Der folgende Code ist eine Beispiel-XML-Datei für das vorherige Beispiel.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowCheckBoxes" />
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt eine Kopie des <see cref="T:System.Web.UI.WebControls.TreeNode" />-Objekts.</summary>
        <returns>Ein <see cref="T:System.Object" />, das eine Kopie des <see cref="T:System.Web.UI.WebControls.TreeNode" />-Objekts darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.TreeNode.System%23ICloneable%23Clone%2A>-Methode wird von der <xref:System.Web.UI.WebControls.TreeNode>-Klasse verwendet, um eine Kopie von sich selbst zu erstellen.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ICloneable.Clone" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.IsTrackingViewState">
      <MemberSignature Language="C#" Value="bool System.Web.UI.IStateManager.IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsTrackingViewState As Boolean Implements IStateManager.IsTrackingViewState" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Web::UI::IStateManager::IsTrackingViewState { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="P:System.Web.UI.IStateManager.IsTrackingViewState" />.</summary>
        <value>Ein Wert, der angibt, ob Änderungen am Ansichtszustand des Knotens gespeichert werden.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Member ist eine explizite Schnittstellen-Memberimplementierung. Sie kann nur verwendet werden, wenn die <xref:System.Web.UI.WebControls.TreeNode> Instanz in die <xref:System.Web.UI.IStateManager>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IStateManager" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.LoadViewState">
      <MemberSignature Language="C#" Value="void IStateManager.LoadViewState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.LoadViewState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub LoadViewState (state As Object) Implements IStateManager.LoadViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.LoadViewState(System::Object ^ state) = System::Web::UI::IStateManager::LoadViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">Ein <see cref="T:System.Object" />, das die gespeicherten Ansichtszustandswerte enthält.</param>
        <summary>Lädt den zuvor gespeicherten Ansichtszustand des Knotens.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="T:System.Web.UI.StateItem" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/75x4ha6s(v=vs.100)">ASP.net State Management (Übersicht)</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.SaveViewState">
      <MemberSignature Language="C#" Value="object IStateManager.SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Web.UI.IStateManager.SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Function SaveViewState () As Object Implements IStateManager.SaveViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Web.UI.IStateManager.SaveViewState() = System::Web::UI::IStateManager::SaveViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Speichert die Änderungen am Ansichtszustand in einem <see cref="T:System.Object" />.</summary>
        <returns>Das <see cref="T:System.Object" />, das die Ansichtszustandsänderungen enthält.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="T:System.Web.UI.StateItem" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/75x4ha6s(v=vs.100)">ASP.net State Management (Übersicht)</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.TrackViewState">
      <MemberSignature Language="C#" Value="void IStateManager.TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Sub TrackViewState () Implements IStateManager.TrackViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.TrackViewState() = System::Web::UI::IStateManager::TrackViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Weist das <see cref="T:System.Web.UI.WebControls.TreeNode" /> -Objekt an, Änderungen am Ansichtszustand nachzuverfolgen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nachdem diese Methode für ein Server Steuerelement aufgerufen wurde, gibt die <xref:System.Web.UI.Control.IsTrackingViewState%2A>-Eigenschaft `true`zurück.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="T:System.Web.UI.StateItem" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/75x4ha6s(v=vs.100)">ASP.net State Management (Übersicht)</related>
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public string Target { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Target" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.Target" />
      <MemberSignature Language="VB.NET" Value="Public Property Target As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Target { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Target : string with get, set" Usage="System.Web.UI.WebControls.TreeNode.Target" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Zielfenster oder den Zielframe ab, in dem die einem Knoten zugeordneten Webseiteninhalte angezeigt werden sollen, oder legt dieses Zielfenster bzw. den Zielframe fest.</summary>
        <value>Das Zielfenster oder der Zielframe, in dem der verknüpfte Webseiteninhalt angezeigt werden soll. Werte müssen mit einem Buchstaben aus dem Bereich von A bis Z (ohne Berücksichtigung der Groß- und Kleinschreibung) beginnen, mit Ausnahme der in folgender Tabelle aufgeführten speziellen Werte, die mit einem Unterstrich beginnen:  
  
 <list type="table"><listheader><term> Zielwert 
 </term><description> BESCHREIBUNG 
 </description></listheader><item><term><see langword="_blank" /></term><description> Stellt den Inhalt in einem neuen Fenster ohne Frames dar.  
  
 </description></item><item><term><see langword="_parent" /></term><description> Stellt den Inhalt im unmittelbar übergeordneten Frameset dar.  
  
 </description></item><item><term><see langword="_search" /></term><description> Gibt den Inhalt im Suchbereich wieder.  
  
 </description></item><item><term><see langword="_self" /></term><description> Stellt den Inhalt in dem Frame dar, der den Fokus besitzt.  
  
 </description></item><item><term><see langword="_top" /></term><description> Stellt den Inhalt im gesamten Fenster ohne Frames dar.  
  
 </description></item></list><block subset="none" type="note"><para>  
 Lesen Sie in der Browserdokumentation nach, ob der <see langword="_search" />-Wert unterstützt wird. Beispielsweise unterstützen Microsoft Internet Explorer 5.0 und höhere Versionen den <see langword="_search" />-Zielwert.  
  
</para></block>  
  
 Der Standardwert ist eine leere Zeichenfolge (""), die das Fenster oder den Frame mit dem Fokus aktualisiert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.Web.UI.WebControls.TreeNode.Target%2A>-Eigenschaft, um das Fenster oder den Frame anzugeben, in dem der mit einem Knoten verknüpfte Webinhalt angezeigt werden soll, wenn auf diesen Knoten geklickt wird.  
  
> [!NOTE]
>  Durch Festlegen dieser Eigenschaft wird die <xref:System.Web.UI.WebControls.TreeView.Target%2A>-Eigenschaft des <xref:System.Web.UI.WebControls.TreeView> Steuer Elements überschrieben.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.TreeNode.Target%2A>-Eigenschaft wird als `target` Attribut gerendert. Das `target`-Attribut in `anchor` Elementen ist in der XHTML 1,1-Dokumenttyp Definition nicht zulässig. Legen Sie die <xref:System.Web.UI.WebControls.TreeNode.Target%2A>-Eigenschaft nicht fest, wenn die gerenderte Ausgabe für das <xref:System.Web.UI.WebControls.TreeNode> Objekt XHTML 1,1-kompatibel sein muss. Weitere Informationen finden Sie unter [XHTML-Standards in Visual Studio und ASP.net](https://docs.microsoft.com/previous-versions/aspnet/exc57y7e(v=vs.100)).  
>   
>  Wenn Sie barrierefreie Webseiten erstellen, wird dringend empfohlen, dass Sie die <xref:System.Web.UI.WebControls.TreeNode.Target%2A>-Eigenschaft nicht verwenden, um ein anderes Fenster als Ziel festzustellen. Weitere Informationen finden Sie unter [ASP.net Accessibility](https://docs.microsoft.com/previous-versions/aspnet/ms228011(v=vs.100)).  
  
 Der Wert dieser Eigenschaft wird im Ansichts Zustand gespeichert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die Frames für das nächste Beispiel eingerichtet werden.  
  
 [!code-aspx-csharp[TreeViewFrameSet#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFrameSet/CS/framecs.aspx#1)]
 [!code-aspx-vb[TreeViewFrameSet#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFrameSet/VB/framevb.aspx#1)]  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeNode.Target%2A>-Eigenschaft verwendet wird, um den Frame anzugeben, in dem der verknüpfte Inhalt angezeigt werden soll. Dieses Beispiel wird im Frameset des vorherigen Beispiels verwendet, um ein Inhaltsverzeichnis anzuzeigen.  
  
 [!code-aspx-csharp[TreeViewFrameExample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFrameExample/CS/treeviewframecs.aspx#1)]
 [!code-aspx-vb[TreeViewFrameExample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFrameExample/VB/treeviewframevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.Target" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.NavigateUrl" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Web.UI.WebControls.TreeNode.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Text ab oder legt den Text fest, der im <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelement für den Knoten angezeigt wird.</summary>
        <value>Der für den Knoten im <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelement angezeigte Text. Der Standardwert ist eine leere Zeichenfolge ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.Web.UI.WebControls.TreeNode.Text%2A>-Eigenschaft, um den Text anzugeben oder zu bestimmen, der für den Knoten im <xref:System.Web.UI.WebControls.TreeView> Steuerelement angezeigt wird.  
  
> [!NOTE]
>  Wenn die <xref:System.Web.UI.WebControls.TreeNode.Text%2A>-Eigenschaft `null`enthält, gibt der `get`-Accessor den Wert der <xref:System.Web.UI.WebControls.TreeNode.Value%2A>-Eigenschaft zurück. Wenn die <xref:System.Web.UI.WebControls.TreeNode.Value%2A>-Eigenschaft wiederum `null`enthält, wird <xref:System.String.Empty> zurückgegeben.  
  
 Der Wert dieser Eigenschaft wird im Ansichts Zustand gespeichert.  
  
 Der Wert dieser Eigenschaft, wenn festgelegt, kann mithilfe eines Designers Tools automatisch zu einer Ressourcendatei gespeichert werden. Weitere Informationen finden Sie unter <xref:System.ComponentModel.LocalizableAttribute> und [Globalisierung und Lokalisierung](https://docs.microsoft.com/previous-versions/aspnet/c6zyy3s9(v=vs.100)).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeNode.Text%2A>-Eigenschaft verwendet wird, um den Text für einen Knoten anzugeben.  
  
 [!code-aspx-csharp[TreeViewFrameExample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFrameExample/CS/treeviewframecs.aspx#1)]
 [!code-aspx-vb[TreeViewFrameExample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFrameExample/VB/treeviewframevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Value" />
      </Docs>
    </Member>
    <Member MemberName="ToggleExpandState">
      <MemberSignature Language="C#" Value="public void ToggleExpandState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ToggleExpandState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.ToggleExpandState" />
      <MemberSignature Language="VB.NET" Value="Public Sub ToggleExpandState ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ToggleExpandState();" />
      <MemberSignature Language="F#" Value="member this.ToggleExpandState : unit -&gt; unit" Usage="treeNode.ToggleExpandState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wechselt zwischen dem erweiterten und dem reduzierten Zustand des Knotens.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.Web.UI.WebControls.TreeNode.ToggleExpandState%2A>-Methode, um zwischen einem erweiterten und einem reduzierten Zustand für den Knoten zu wechseln. Wenn der Knoten z. b. reduziert ist, wird durch den Aufruf der <xref:System.Web.UI.WebControls.TreeNode.ToggleExpandState%2A>-Methode der Knoten erweitert und umgekehrt.  
  
> [!NOTE]
>  Als Alternative können Sie die <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>-Eigenschaft direkt festlegen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeNode.ToggleExpandState%2A>-Methode verwendet wird, um zwischen einem erweiterten und einem reduzierten Zustand für den Stamm Knoten eines <xref:System.Web.UI.WebControls.TreeView> Steuer Elements zu wechseln.  
  
 [!code-aspx-csharp[TreeNodeToggleExpandState#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeToggleExpandState/CS/treenodetoggleexpandstatecs.aspx#1)]
 [!code-aspx-vb[TreeNodeToggleExpandState#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeToggleExpandState/VB/treenodetoggleexpandstatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Expanded" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.Collapse" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.CollapseAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.Expand" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.ExpandAll" />
      </Docs>
    </Member>
    <Member MemberName="ToolTip">
      <MemberSignature Language="C#" Value="public string ToolTip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolTip" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.ToolTip" />
      <MemberSignature Language="VB.NET" Value="Public Property ToolTip As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ToolTip { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ToolTip : string with get, set" Usage="System.Web.UI.WebControls.TreeNode.ToolTip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den QuickInfo-Text für den Knoten ab oder legt diesen fest.</summary>
        <value>Der QuickInfo-Text für den Knoten. Der Standardwert ist eine leere Zeichenfolge ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A>-Eigenschaft, um den QuickInfo-Text für den Knoten anzugeben. Der QuickInfo-Text wird angezeigt, wenn der Mauszeiger über dem Knoten positioniert ist.  
  
 Der Wert dieser Eigenschaft, wenn festgelegt, kann mithilfe eines Designers Tools automatisch zu einer Ressourcendatei gespeichert werden. Weitere Informationen finden Sie unter <xref:System.ComponentModel.LocalizableAttribute> und [Globalisierung und Lokalisierung](https://docs.microsoft.com/previous-versions/aspnet/c6zyy3s9(v=vs.100)).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A>-Eigenschaft verwendet wird, um Quick Infos für die Knoten im <xref:System.Web.UI.WebControls.TreeView> Steuerelement bereitzustellen.  
  
 [!code-aspx-csharp[TreeNodeToolTip#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeToolTip/CS/treenodetooltipcs.aspx#1)]
 [!code-aspx-vb[TreeNodeToolTip#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeToolTip/VB/treenodetooltipvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ImageToolTip" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void TrackViewState();" />
      <MemberSignature Language="F#" Value="member this.TrackViewState : unit -&gt; unit" Usage="treeNode.TrackViewState " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Markiert den Anfangspunkt, an dem begonnen werden soll, Änderungen am Ansichtszustand des Knotens zu verfolgen und zu speichern.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.IStateManager.TrackViewState" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb386448(v=vs.100)">Übersicht über Ansichts Status</related>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : string with get, set" Usage="System.Web.UI.WebControls.TreeNode.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen nicht angezeigten Wert ab, mit dem zusätzliche Daten für den Knoten gespeichert werden (z. B. Daten zum Behandeln eines Postbackereignisses), oder legt diesen Wert fest.</summary>
        <value>Ergänzende Daten zum Knoten, die nicht angezeigt werden. Der Standardwert ist eine leere Zeichenfolge ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.TreeNode.Value%2A>-Eigenschaft wird verwendet, um die <xref:System.Web.UI.WebControls.TreeNode.Text%2A> Eigenschaft zu ergänzen, indem alle zusätzlichen Daten, die dem Knoten zugeordnet sind, gespeichert werden. Dieser Wert wird im-Steuerelement nicht angezeigt und wird häufig zum Speichern von Daten für die Behandlung von Post Back Ereignissen verwendet.  
  
> [!NOTE]
>  Wenn die <xref:System.Web.UI.WebControls.TreeNode.Value%2A>-Eigenschaft `null`enthält, gibt der `get`-Accessor den Wert der <xref:System.Web.UI.WebControls.TreeNode.Text%2A>-Eigenschaft zurück. Wenn die <xref:System.Web.UI.WebControls.TreeNode.Text%2A>-Eigenschaft wiederum `null`enthält, wird <xref:System.String.Empty> zurückgegeben.  
  
> [!NOTE]
>  Knoten auf derselben Ebene müssen jeweils einen eindeutigen Wert für die <xref:System.Web.UI.WebControls.TreeNode.Value%2A>-Eigenschaft aufweisen. Das <xref:System.Web.UI.WebControls.TreeView> Steuerelement kann nicht zwischen verschiedenen Knoten auf derselben Ebene unterscheiden, die denselben Wert aufweisen. Wenn der Benutzer in diesem Szenario auf einen Knoten klickt, der einen doppelten Wert aufweist, wird der Knoten, der zuerst im <xref:System.Web.UI.WebControls.TreeView> Steuerelement angezeigt wird, ausgewählt.  
  
 Der Wert dieser Eigenschaft wird im Ansichts Zustand gespeichert.  
  
 Der Wert dieser Eigenschaft, wenn festgelegt, kann mithilfe eines Designers Tools automatisch zu einer Ressourcendatei gespeichert werden. Weitere Informationen finden Sie unter <xref:System.ComponentModel.LocalizableAttribute> und [Globalisierung und Lokalisierung](https://docs.microsoft.com/previous-versions/aspnet/c6zyy3s9(v=vs.100)).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie die <xref:System.Web.UI.WebControls.TreeNode.Value%2A>-Eigenschaft verwenden, um das Schlüsselfeld zu speichern.  
  
 [!code-aspx-csharp[TreeViewPopulateNodesFromClient#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/CS/treeviewpopulatenodesfromclientcs.aspx#1)]
 [!code-aspx-vb[TreeViewPopulateNodesFromClient#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/VB/treeviewpopulatenodesfromclientvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Text" />
      </Docs>
    </Member>
    <Member MemberName="ValuePath">
      <MemberSignature Language="C#" Value="public string ValuePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValuePath" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.ValuePath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValuePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ValuePath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValuePath : string" Usage="System.Web.UI.WebControls.TreeNode.ValuePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Pfad vom Stammknoten zum aktuellen Knoten ab.</summary>
        <value>Eine durch Trennzeichen getrennte Liste von Knotenwerten, die einen Pfad vom Stammknoten bis zum aktuellen Knoten bilden.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A>-Eigenschaft enthält eine durch Trennzeichen getrennte Liste von Knoten Werten, die einen Pfad vom Stamm Knoten zum aktuellen Knoten bilden. Verwenden Sie die <xref:System.Web.UI.WebControls.TreeView.PathSeparator%2A>-Eigenschaft, um das Trennzeichen anzugeben, das zum Trennen der Knotenwerte verwendet wird. Dieser Wert wird häufig verwendet, wenn die Liste für die einzelnen Werte verarbeitet wird oder wenn ein Argument an die <xref:System.Web.UI.WebControls.TreeView.FindNode%2A>-Methode der <xref:System.Web.UI.WebControls.TreeView> Klasse übergeben werden soll.  
  
 Abhängig von dem im <xref:System.Web.UI.WebControls.TreeView> Steuerelement angezeigten Wert muss das Trennzeichen möglicherweise geändert werden, um Konflikte zu vermeiden. Wenn Sie z. b. das Trennzeichen auf ein Komma setzen, sollte der angezeigte Wert keine Kommas enthalten. Andernfalls können Sie die <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A>-Eigenschaft nicht genau analysieren.  
  
> [!NOTE]
>  Knoten auf derselben Ebene müssen jeweils einen eindeutigen Wert für die <xref:System.Web.UI.WebControls.TreeNode.Value%2A>-Eigenschaft aufweisen. Das <xref:System.Web.UI.WebControls.TreeView> Steuerelement kann nicht zwischen verschiedenen Knoten auf derselben Ebene unterscheiden, die denselben Wert aufweisen. Wenn der Benutzer in diesem Szenario auf einen Knoten klickt, der einen doppelten Wert aufweist, wird der Knoten, der zuerst im <xref:System.Web.UI.WebControls.TreeView> Steuerelement angezeigt wird, ausgewählt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie die <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A>-Eigenschaft analysieren.  
  
 [!code-aspx-csharp[TreeViewPathSeparator2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewPathSeparator2/CS/treeviewpathseparatorcs.aspx#1)]
 [!code-aspx-vb[TreeViewPathSeparator2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewPathSeparator2/VB/treeviewpathseparatorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.PathSeparator" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.FindNode(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>
