<Type Name="ObjectDataSource" FullName="System.Web.UI.WebControls.ObjectDataSource">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a7d5dc7d9209bc454de702e7d77fec188384e2c1" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55352543" /></Metadata><TypeSignature Language="C#" Value="public class ObjectDataSource : System.Web.UI.DataSourceControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ObjectDataSource extends System.Web.UI.DataSourceControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ObjectDataSource" />
  <TypeSignature Language="VB.NET" Value="Public Class ObjectDataSource&#xA;Inherits DataSourceControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectDataSource : System::Web::UI::DataSourceControl" />
  <TypeSignature Language="F#" Value="type ObjectDataSource = class&#xA;    inherit DataSourceControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.DataSourceControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Selecting")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("TypeName")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ObjectDataSourceDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Web.UI.WebControls.ObjectDataSource))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ObjectDataSourceDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt ein Geschäftsobjekt dar, das Daten zu datengebundenen Steuerelementen in Webanwendungsarchitekturen mit mehreren Ebenen bereitstellt.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In diesem Thema:  
  
-   [Introduction (Einführung)](#introduction)  
  
-   [Zweck](#purpose)  
  
-   [Abrufen von Daten](#retrieving_data)  
  
-   [Vorgänge für Daten](#performing_data_operations)  
  
-   [Filtern von Daten](#filtering_data)  
  
-   [Zwischenspeichern](#caching)  
  
-   [Features](#features)  
  
-   [Data Source View](#data_view)  
  
-   [Mit LINQ to SQL](#using_linq_to_sql)  
  
-   [Deklarative Syntax](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Einführung  
 Ein <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement funktioniert mit einer Klasse, die Sie erstellen. Erstellen Sie Methoden zum Abrufen und Aktualisieren von Daten und geben Sie die Namen der diese Methoden, um die <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement im Markup. Beim Rendern oder postback-Verarbeitung die <xref:System.Web.UI.WebControls.ObjectDataSource> Ruft die Methoden, die Sie angegeben haben.  
  
 Es wird nicht visuell dargestellt, der die <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement. Daher die <xref:System.Web.UI.WebControls.ObjectDataSource> unterstützt keine visuellen Features wie z. B. die <xref:System.Web.UI.DataSourceControl.EnableTheming%2A> oder <xref:System.Web.UI.DataSourceControl.SkinID%2A> Eigenschaft.  
  
<a name="purpose"></a>   
## <a name="purpose"></a>Zweck  
 Ein sehr häufiges Anwendungsdesign ist die Darstellungsschicht von Geschäftslogik getrennt und die Geschäftslogik in Geschäftsobjekten kapseln. Diese Geschäftsobjekte bilden eine eigene Schicht zwischen der Darstellungsschicht und die Datenebene, was zu einer Anwendung mit drei Ebenen-Architektur. Die <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement ermöglicht Entwicklern, eine ASP.NET Datenquellen-Steuerelement verwenden, und behalten Sie ihre Anwendung mit drei Ebenen-Architektur.  
  
 Die <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement verwendet Reflektion, um Instanzen von Geschäftsobjekten erstellen und zum Aufrufen von Methoden auf diesen abzurufen, zu aktualisieren, einfügen und Löschen von Daten. Die <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> -Eigenschaft gibt den Namen der Klasse, die die <xref:System.Web.UI.WebControls.ObjectDataSource> arbeitet mit. Die <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement erstellt und zerstört eine Instanz der Klasse für jeden Aufruf einer Methode; sie ist nicht das Objekt im Arbeitsspeicher enthalten, für die Lebensdauer der webanforderung. Dies ist es sich um einen wichtigen Faktor dar, wenn das Geschäftsobjekt, mit denen Sie viele Ressourcen erfordert, oder erstellen und zerstören aufwendig ist. Verwenden ein teures Objekt möglicherweise nicht optimale Entwurfsoption, aber Sie können den Lebenszyklus des Objekts steuern, mit der <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>, <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>, und <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> Ereignisse.  
  
> [!NOTE]
>  Die Methoden, die durch identifiziert die <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>, und <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> Eigenschaften können Instanzmethoden sein oder `static` (`Shared` in Visual Basic) Methoden. Wenn die Methoden sind `static` (`Shared` in Visual Basic), eine Instanz des Geschäftsobjekts wird nicht erstellt werden, und die <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>, <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>, und <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> Ereignisse werden nicht ausgelöst.  
  
<a name="retrieving_data"></a>   
## <a name="retrieving-data"></a>Abrufen von Daten  
 Legen Sie zum Abrufen von Daten aus einem Geschäftsobjekt, das die <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> -Eigenschaft auf den Namen der Methode, die Daten abruft. Wenn die Methode nicht zurückgegeben werden ein <xref:System.Collections.IEnumerable> oder <xref:System.Data.DataSet> Objekt, das Objekt umschlossen wird, von der Laufzeit in eine <xref:System.Collections.IEnumerable> Auflistung. Wenn die Signatur der Methode über Parameter verfügt, können Sie hinzufügen <xref:System.Web.UI.WebControls.Parameter> Objekte die <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> -Auflistung, und binden Sie diese dann an die Werte, die an die Methode übergeben, die angegeben wird die <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> Eigenschaft. In der Reihenfolge für die <xref:System.Web.UI.WebControls.ObjectDataSource> steuern, um die Parameter zu verwenden, die Parameter müssen den Namen und Typen der Parameter in der Signatur der Methode übereinstimmen. Weitere Informationen finden Sie unter [mithilfe von Parametern mit dem ObjectDataSource-Steuerelement](https://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4).  
  
 Die <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement ruft Daten ab. wenn die <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Methode wird aufgerufen. Diese Methode ermöglicht programmgesteuerten Zugriff auf die Methode, die angegebenen <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> Eigenschaft. Die Methode, die angegeben wird die <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> Eigenschaft wird automatisch aufgerufen, Steuerelemente, die an gebunden sind die <xref:System.Web.UI.WebControls.ObjectDataSource> beim ihre `DataBind` Methode wird aufgerufen. Setzen Sie die `DataSourceID` Eigenschaft eines datengebundenen Steuerelements, das Steuerelement automatisch an Daten gebunden aus der Datenquelle nach Bedarf. Festlegen der `DataSourceID` -Eigenschaft ist die empfohlene Methode für die Bindung einer <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement zu einem datengebundenen Steuerelement. Alternativ können Sie festlegen der `DataSource` -Eigenschaft, aber Sie müssen explizit aufrufen, die `DataBind` -Methode des datengebundenen Steuerelements. Rufen Sie die <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Methode programmgesteuert zu einem beliebigen Zeitpunkt zum Abrufen von Daten.  
  
 Weitere Informationen zum Binden von datengebundenen Steuerelementen an Datenquellen-Steuerelemente finden Sie unter [Binden an Daten mithilfe eines Datenquellen-Steuerelements](https://msdn.microsoft.com/library/e41adfff-8fb8-449e-9cd1-9bd49788c5f7).  
  
<a name="performing_data_operations"></a>   
## <a name="performing-data-operations"></a>Vorgänge für Daten  
 Abhängig von den Funktionen des Unternehmens-Objekt, das <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement funktioniert mit, können Sie Datenvorgänge, z. B. Updates, einfügungen und löschungen ausführen. Legen Sie für diese Vorgänge mit der Daten, den entsprechenden Methodennamen und alle zugeordneten Parameter für den Vorgang, den Sie ausführen möchten. Legen Sie für einen Updatevorgang, z. B. die <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> -Eigenschaft auf den Namen von der Geschäftsobjektmethode aus, die führt Updates durch, und alle erforderlichen Parameter, die <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> Auflistung. Wenn die <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement, das mit einem datengebundenen Steuerelement zugeordnet ist, werden die Parameter vom datengebundenen Steuerelement hinzugefügt. In diesem Fall müssen Sie sicherstellen, dass die Namen der Parameter der Methode die Feldnamen in die vom datengebundenen Steuerelement übereinstimmen. Die Aktualisierung wird ausgeführt, wenn die <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> -Methode aufgerufen wird, entweder explizit durch Code oder automatisch von einem datengebundenen Steuerelement. Das gleiche allgemeine Muster folgt für <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> und <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> Vorgänge. Geschäftsobjekte sind davon ausgegangen, dass diese Arten von Vorgängen Datensätze gleichzeitig ausgeführt werden, anstatt in einem Batch verarbeitet.  
  
<a name="filtering_data"></a>   
## <a name="filtering-data"></a>Filtern von Daten  
 Die <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement durch abgerufene Daten können gefiltert werden die <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> -Eigenschaft, wenn die Daten, als zurückgegeben werden eine <xref:System.Data.DataSet> oder <xref:System.Data.DataTable> Objekt. Sie können festlegen, die <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> Eigenschaft, um einen Filterausdruck, indem Sie ein Format Syntax eine Zeichenfolge, und binden Sie die Werte in der Ausdruck, der im angegebenen Parameter die <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> Auflistung.  
  
<a name="caching"></a>   
## <a name="caching"></a>Zwischenspeicherung  
 Obwohl die <xref:System.Web.UI.WebControls.ObjectDataSource> behält keine Instanz von das Geschäftsobjekt, das über mehrere Anforderungen hinweg, können sie das Ergebnis des Aufrufs der Methode identifizierte Zwischenspeichern der <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> Eigenschaft. Während die Daten zwischengespeichert, schlagen nachfolgende Aufrufe der <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Methode zurückgeben die zwischengespeicherten Daten, statt das Geschäftsobjekt, das Erstellen und Aufrufen der <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> mithilfe von Reflektion. Durch das Zwischenspeichern können vermeiden Sie das Objekt erstellen und Aufrufen der Datenmethode auf Kosten der Arbeitsspeicher auf dem Webserver. Die <xref:System.Web.UI.WebControls.ObjectDataSource> enthält Automatisches Caching von Daten bei der <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> -Eigenschaftensatz auf `true`, und die <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> -Eigenschaftensatz auf die Anzahl der Sekunden, die der Cache Daten speichert, bevor der Cache verworfen wird. Sie können auch angeben, ein <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> -Eigenschaft und einem optionalen <xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A> Eigenschaft. Die <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement ermöglicht es Ihnen, alle Arten von Daten zwischenzuspeichern, aber Sie sollten nicht zwischenspeichern, Objekte, die beibehalten werden sollen, Ressourcen oder den Status, die gemeinsam genutzt werden kann, um mehrere Anforderungen zu bedienen (z. B. ein offenes <xref:System.Data.SqlClient.SqlDataReader> Objekt), da dieselbe Instanz des Objekts wird für mehrere Anforderungen verwendet werden.  
  
<a name="features"></a>   
## <a name="features"></a>Features  
 Die folgende Tabelle beschreibt die Funktionen von der <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement.  
  
|Funktion|Anforderungen|  
|----------------|------------------|  
|Auswählen|Legen Sie die <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> -Eigenschaft auf den Namen des Geschäfts-Methode, die Daten ausgewählt, und schließen Sie alle erforderlichen Parameter in der <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> Auflistung entweder programmgesteuert oder mithilfe eines datengebundenen Steuerelements.|  
|Sortieren|Legen Sie die <xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A> -Eigenschaft auf den Namen des Parameters in der <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> -Methode, die den Sortierungskriterien fest.|  
|Filtern|Festlegen der <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> -Eigenschaft auf einen Filterausdruck und optional fügen Sie Parameter aus, um die <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> Sammlung zum Filtern der Daten bei der <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Methode wird aufgerufen. Die Methode angegeben werden, die <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> Eigenschaft zurückgeben muss eine <xref:System.Data.DataSet> oder <xref:System.Data.DataTable>.|  
|Paging|Datenquellen-Paging wird unterstützt, wenn die <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> Methode enthält die Parameter für die maximale Anzahl der abzurufenden Datensätze und den Index des ersten abzurufenden Datensatzes. Die Namen dieser Parameter müssen festgelegt werden, der <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> und <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> Eigenschaften bzw. Ein vom datengebundenen Steuerelement möglicherweise führen Sie die Auslagerungsdatei selbst, auch wenn die <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement Paging nicht direkt in der Methode angegeben werden, unterstützt die <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> Eigenschaft. Die Anforderung für das datengebundene Steuerelement, zu diesem Zweck können ist, dass die Methode, indem angegeben die <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> Eigenschaft ein Objekt zurück, implementiert die <xref:System.Collections.ICollection> Schnittstelle.|  
|Wird aktualisiert|Legen Sie die <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> -Eigenschaft auf den Namen des Geschäfts-Methode, die Daten aktualisiert, und schließen Sie alle erforderlichen Parameter in der <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> Auflistung.|  
|Wird gelöscht|Legen Sie die <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> -Eigenschaft auf den Namen des Geschäfts Methode oder Funktion, die Daten löscht, und schließen Sie alle erforderlichen Parameter in der <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> Auflistung.|  
|Einfügen|Legen Sie die <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> -Eigenschaft auf den Namen des Geschäfts Methode oder Funktion, die Daten einfügt, und schließen Sie alle erforderlichen Parameter in der <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> Auflistung.|  
|Zwischenspeicherung|Legen Sie die <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> Eigenschaft `true`, und die <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> und <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> entsprechend das Verhalten beim Zwischenspeichern für Ihre zwischengespeicherten Daten sollen.|  
  
> [!NOTE]
>  Bei Verwendung der <xref:System.Web.UI.WebControls.ObjectDataSource> Klasse zum Aktualisieren oder Einfügen von Daten, Zeichenfolgen, die auf dem Client eingegeben wurden werden im Server-Format Kultur nicht automatisch aus dem Client Kulturformat konvertiert. Beispielsweise kann die Clientkultur TT/MM/JJJJ angeben, als das Datum das Format, und das Datum das Format auf dem Server möglicherweise MM/TT/JJJJ. In diesem Fall würde 5. Oktober 2009 eingegeben werden, einem <xref:System.Web.UI.WebControls.TextBox> als 5/10/2009 steuern, aber als 10. Mai 2009 interpretiert werden. Am 15. Oktober 2009 wird als 10/15/2009 eingegeben werden, und als ungültiges Datum abgelehnt werden.  
  
<a name="data_view"></a>   
## <a name="data-view"></a>Data Source View  
 Wie bei allen Datenquellen-Steuerelemente, die <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement eine Ansicht der Datenquellenklasse zugeordnet ist. Während der <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement ist die Schnittstelle, die vom Seitenentwickler verwendet wird, zum Arbeiten mit Daten, die <xref:System.Web.UI.WebControls.ObjectDataSourceView> -Klasse ist die Schnittstelle, die von datengebundenen Steuerelementen verwendet. Darüber hinaus die <xref:System.Web.UI.WebControls.ObjectDataSourceView> Klasse beschreibt die Funktionen des Datenquellen-Steuerelement, und führt die eigentliche Arbeit. Die <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement besitzt nur eine zugeordnete <xref:System.Web.UI.WebControls.ObjectDataSourceView>, und es wird stets der Name `DefaultView`. Während der <xref:System.Web.UI.WebControls.ObjectDataSourceView> Objekt verfügbar gemacht wird, durch die <xref:System.Web.UI.WebControls.ObjectDataSource.GetView%2A> -Methode, viele der zugehörigen Eigenschaften und Methoden umschlossen und verfügbar gemacht werden direkt von der <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement. Hinter den Kulissen der <xref:System.Web.UI.WebControls.ObjectDataSourceView> Objekt führt Datenvorgänge für alle, einschließlich abrufen, einfügen, aktualisieren, löschen, Filtern und Sortieren der Daten. Weitere Informationen finden Sie unter <xref:System.Web.UI.WebControls.ObjectDataSourceView>.  
  
<a name="using_linq_to_sql"></a>   
## <a name="using-linq-to-sql"></a>Mit LINQ to SQL  
 Sie können die <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement mit einer LINQ to SQL-Klasse. Zu diesem Zweck legen Sie die <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> Eigenschaft auf den Namen der Datenkontextklasse. Legen Sie Sie auch die <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>, und <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> Methoden zu den Methoden in der Datenkontextklasse, die die entsprechenden Vorgänge ausführen. Sie müssen einen Ereignishandler für erstellen die <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> Ereignis, um abzubrechen, verwirft der Datenkontextklasse. Dieser Schritt ist erforderlich, da LINQ to SQL unterstützt die verzögerten Ausführung, während die <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement versucht, die den Datenkontext nach den ausgewählten Vorgang freizugeben. Weitere Informationen zum Erstellen von LINQ to SQL-Klassen finden Sie unter [Vorgehensweise: Erstellen von LINQ to SQL-Klassen in einem Webprojekt](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081). Ein Beispiel zum Abbrechen der Freigabe für einer neue Datenkontextklasse finden Sie unter den <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> Ereignis.  
  
## <a name="using-the-entity-framework"></a>Mithilfe von Entitätsframework  
 Sie können auch die <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement mit dem Entity Framework. Weitere Informationen finden Sie unter [mithilfe von Entity Framework und das ObjectDataSource-Steuerelement](https://go.microsoft.com/fwlink/?LinkId=209117).  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Deklarative Syntax  
  
```  
<asp:ObjectDataSource  
    CacheDuration="string|Infinite"  
    CacheExpirationPolicy="Absolute|Sliding"  
    CacheKeyDependency="string"  
    ConflictDetection="OverwriteChanges|CompareAllValues"  
    ConvertNullToDBNull="True|False"  
    DataObjectTypeName="string"  
    DeleteMethod="string"  
    EnableCaching="True|False"  
    EnablePaging="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    FilterExpression="string"  
    ID="string"  
    InsertMethod="string"  
    MaximumRowsParameterName="string"  
    OldValuesParameterFormatString="string"  
    OnDataBinding="DataBinding event handler"  
    OnDeleted="Deleted event handler"  
    OnDeleting="Deleting event handler"  
    OnDisposed="Disposed event handler"  
    OnFiltering="Filtering event handler"  
    OnInit="Init event handler"  
    OnInserted="Inserted event handler"  
    OnInserting="Inserting event handler"  
    OnLoad="Load event handler"  
    OnObjectCreated="ObjectCreated event handler"  
    OnObjectCreating="ObjectCreating event handler"  
    OnObjectDisposing="ObjectDisposing event handler"  
    OnPreRender="PreRender event handler"  
    OnSelected="Selected event handler"  
    OnSelecting="Selecting event handler"  
    OnUnload="Unload event handler"  
    OnUpdated="Updated event handler"  
    OnUpdating="Updating event handler"  
    runat="server"  
    SelectCountMethod="string"  
    SelectMethod="string"  
    SkinID="string"  
    SortParameterName="string"  
    SqlCacheDependency="string"  
    StartRowIndexParameterName="string"  
    TypeName="string"  
    UpdateMethod="string"  
    Visible="True|False"  
>  
        <DeleteParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </DeleteParameters>  
        <FilterParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </FilterParameters>  
        <InsertParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </InsertParameters>  
        <SelectParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </SelectParameters>  
        <UpdateParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </UpdateParameters>  
</asp:ObjectDataSource>  
```  
  
   
  
## Examples  
 Ein Visual Studio Web-Websiteprojekt mit Quellcode ist zur Ergänzung dieses Themas verfügbar: [Herunterladen](https://code.msdn.microsoft.com/Project/Download/FileDownload.aspx?ProjectName=aspnetmsdnexamples&DownloadId=14838).  
  
 In diesem Abschnitt wird ein <xref:System.Web.UI.WebControls.ObjectDataSource> im Markup in einer ASPX-Seite, das die Business-Objekte, die Verwendung von anzeigt. Das Beispiel ist die ASPX-Seite. Er enthält eine <xref:System.Web.UI.WebControls.GridView> Steuerelement, gebunden ist, ein <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement. Die <xref:System.Web.UI.WebControls.ObjectDataSource> Markup des Steuerelements angibt, den Namen des Geschäftsobjekts und den Namen von der Geschäftsobjektmethode aufrufen, um Daten abzurufen.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/objds1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/objds1vb.aspx#1)]  
  
 Das folgende Beispiel zeigt dem Geschäftsobjekt, das die <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement in der ASPX-Seite verwendet. (Viele weitere <xref:System.Web.UI.WebControls.ObjectDataSource> Codebeispiele verwenden dieses Geschäftsobjekt, das auch.) Das Beispiel besteht aus den folgenden zwei grundlegenden Klassen:  
  
-   Die `EmployeeLogic` -Klasse ist die Klasse, die der Geschäftslogik der <xref:System.Web.UI.WebControls.ObjectDataSource> verwendet.  
  
-   Die `NorthwindEmployee` -Klasse definiert das Datenobjekt, das von zurückgegebene der `GetAllEmployees` -Methode der der `EmployeeLogic` Klasse.  
  
 Ein zusätzliches `NorthwindDataException` Klasse bereitgestellt wird.  
  
 Dieser Satz von Beispielklassen arbeitet mit der Datenbank Northwind Traders, die mit Microsoft SQL Server und Microsoft Access verfügbar ist. Ein vollständiges Beispiel funktioniert müssen Sie kompilieren und verwenden Sie diese Klassen mit dem Beispiel der ASPX-Seite, das bereitgestellt wird. Weitere Informationen zum Installieren der Datenbank Northwind Traders, finden Sie unter [Vorgehensweise: Installieren von Beispieldatenbanken](https://msdn.microsoft.com/library/ed1291f6-604c-4972-ae22-0345c6dea12e).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/northwindemployee1.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/northwindemployee1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.IDataSource" />
    <altmember cref="T:System.Web.UI.DataSourceControl" />
    <altmember cref="T:System.Web.UI.WebControls.ObjectDataSourceView" />
    <related type="Article" href="https://msdn.microsoft.com/library/a806fa2c-fe6a-405f-869c-74e804a642ea">Exemplarische Vorgehensweise: Datenbindung an ein benutzerdefiniertes Geschäftsobjekt</related>
    <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
    <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Übersicht über das ObjectDataSource-Steuerelement</related>
    <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=214011">Verwenden von Entitätsframework und das ObjectDataSource-Steuerelement</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />-Klasse.</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectDataSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectDataSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />-Klasse.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectDataSource (string typeName, string selectMethod);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName, string selectMethod) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeName As String, selectMethod As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectDataSource(System::String ^ typeName, System::String ^ selectMethod);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.ObjectDataSource : string * string -&gt; System.Web.UI.WebControls.ObjectDataSource" Usage="new System.Web.UI.WebControls.ObjectDataSource (typeName, selectMethod)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="selectMethod" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">Der Name der Klasse, mit der die <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> arbeitet.</param>
        <param name="selectMethod">Der Name der Methode oder Funktion, die die <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> aufruft, um Daten abzurufen.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />-Klasse unter Verwendung des angegebenen Typnamens und des angegebenen Datenabrufmethoden-Namens.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Wert des der `typeName` Parameter kann sein, ein teilweise qualifizierten Typ für Code, der im Verzeichnis "bin" oder "App_Code" befindet oder einen voll gekennzeichneten Typnamen für Code, der im globalen Assemblycache registriert ist. Wenn Sie im globalen Assemblycache verwenden, müssen Sie den entsprechenden Verweis hinzufügen der `assemblies` Abschnitt der Konfigurationsdatei "Machine.config" oder "Web.config".  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="CacheDuration">
      <MemberSignature Language="C#" Value="public virtual int CacheDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CacheDuration" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.CacheDuration" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheDuration As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CacheDuration { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CacheDuration : int with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.CacheDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataSourceCacheDurationConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Zeitspanne in Sekunden ab, die das Datenquellensteuerelement die von der <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />-Eigenschaft abgerufenen Daten zwischenspeichert, oder legt diese fest.</summary>
        <value>Die Anzahl von Sekunden, die die <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> benötigt, um die Ergebnisse eines Aufrufs der <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />-Eigenschaft zwischenzuspeichern. Der Standard ist 0. Der Wert kann nicht negativ sein.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement unterstützt das Zwischenspeichern von Daten. Während Daten zwischengespeichert werden, werden bei Aufrufen der <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Objekt-Methode ruft Daten aus dem Cache und nicht aus dem Unternehmen, die die <xref:System.Web.UI.WebControls.ObjectDataSource> arbeitet mit. Wenn der Cache abgelaufen ist, die <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Methode ruft Daten aus dem Geschäftsobjekt ab und speichert die Daten erneut.  
  
 Die <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement enthält Automatisches Caching von Daten bei der <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> -Eigenschaftensatz auf `true` und <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> -Eigenschaftensatz auf einen Wert größer als 0 (null) und die Anzahl der Sekunden gibt an, dass der Cache speichert die Daten vor dem der Cacheeintrag wird verworfen. Der Wert 0 gibt an, ein unendlich lange Cache.  
  
 Der Cache wird durch eine Kombination der Dauer reguliert und <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> festlegen. Wenn die <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> -Eigenschaftensatz auf die <xref:System.Web.UI.DataSourceCacheExpiry.Absolute> Wert, der <xref:System.Web.UI.WebControls.ObjectDataSource> speichert die Daten auf dem ersten Aufruf der <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Methode und behält diese im Arbeitsspeicher maximal die Zeitspanne, die angegeben wird der <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> Eigenschaft. Die Daten möglicherweise vor der Dauer und freigegeben werden, wenn der Speicher benötigt wird. Der Cache wird dann aktualisiert, während der nächsten Aufruf der <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Methode. Wenn die <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> -Eigenschaftensatz auf <xref:System.Web.UI.DataSourceCacheExpiry.Sliding> Wert das Datenquellen-Steuerelement speichert Daten auf dem ersten Aufruf der <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> -Methode, setzt aber das Zeitfenster für die es den Cache bei jedem nachfolgenden Aufruf der <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Methode. Der Cache läuft ab, wenn es keine Aktivität für einen Zeitraum an, das gleich dem <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> Eigenschaft, die seit dem letzten Aufruf von der <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Methode.  
  
   
  
## Examples  
 Dieser Abschnitt enthält zwei Codebeispiele. Im erste Codebeispiel wird veranschaulicht, wie ein <xref:System.Web.UI.WebControls.ObjectDataSource> Objekt das Zwischenspeichern unterstützt. Im zweiten Codebeispiel wird veranschaulicht, wie eine Wrappermethode implementieren, die zurückgibt eine <xref:System.Data.DataSet> Objekt, das Aktivieren der Zwischenspeicherung mit einem <xref:System.Web.UI.WebControls.ObjectDataSource> Objekt.  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie ein <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement unterstützt das Zwischenspeichern. Um die Zwischenspeicherung zu aktivieren, müssen Sie die Methode, die Daten abruft, der durch identifiziert wird implementieren die <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> Eigenschaft verwenden, um die Daten als Zurückgeben einer <xref:System.Data.DataSet> Objekt. In diesem Beispiel die <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> -Eigenschaftensatz auf `true`, und die <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> und <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> Eigenschaften festgelegt werden. Die <xref:System.Web.UI.WebControls.ObjectDataSource> speichert die Daten, die von zurückgegeben werden das <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> -Eigenschaft für 30 Sekunden.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_6#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_6/CS/objds6cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_6#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_6/VB/objds6vb.aspx#1)]  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie eine Wrappermethode implementieren, die zurückgibt eine <xref:System.Data.DataSet> Objekt, das Aktivieren der Zwischenspeicherung mit einem <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement. In die basisimplementierung für die `EmployeeLogic` -Klasse, die `GetAllEmployees` Methode gibt ein <xref:System.Collections.ArrayList> Objekt. Anstatt das Objekt vollständig zum Arbeiten mit der <xref:System.Web.UI.WebControls.ObjectDataSource> auf einer Web Forms-Seite, eine Wrappermethode mit dem Namen `GetAllEmployeesAsDataSet` wird hinzugefügt, die einen Satz von zurückgibt `NorthwindEmployee` Daten als eine <xref:System.Data.DataSet>.  
  
 Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Web.UI.WebControls.ObjectDataSource> Klasse.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_5#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_5/CS/northwindemployee5.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_5#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_5/VB/northwindemployee5.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.EnableCaching" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="CacheExpirationPolicy">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.DataSourceCacheExpiry CacheExpirationPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataSourceCacheExpiry CacheExpirationPolicy" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheExpirationPolicy As DataSourceCacheExpiry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::DataSourceCacheExpiry CacheExpirationPolicy { System::Web::UI::DataSourceCacheExpiry get(); void set(System::Web::UI::DataSourceCacheExpiry value); };" />
      <MemberSignature Language="F#" Value="member this.CacheExpirationPolicy : System.Web.UI.DataSourceCacheExpiry with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceCacheExpiry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Cacheablaufverhalten ab, das in Kombination mit der Dauer das Verhalten des vom Datenquellen-Steuerelement verwendeten Caches beschreibt.</summary>
        <value>Einer der <see cref="T:System.Web.UI.DataSourceCacheExpiry" />-Werte. Die Standardeinstellung ist <see cref="F:System.Web.UI.DataSourceCacheExpiry.Absolute" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement unterstützt das Zwischenspeichern von Daten. Während Daten zwischengespeichert werden, werden bei Aufrufen der <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Objekt-Methode ruft Daten aus dem Cache und nicht aus dem Unternehmen, die die <xref:System.Web.UI.WebControls.ObjectDataSource> arbeitet mit. Wenn der Cache abgelaufen ist, die <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Methode ruft Daten aus dem Geschäftsobjekt ab und speichert die Daten erneut.  
  
 Die <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement enthält Automatisches Caching von Daten bei der <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> -Eigenschaftensatz auf `true` und <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> -Eigenschaftensatz auf einen Wert größer als 0 (null) und die Anzahl der Sekunden gibt an, dass der Cache speichert die Daten vor dem der Cacheeintrag wird verworfen. Der Wert 0 gibt an, ein unendlich lange Cachedauer.  
  
 Der Cache wird durch eine Kombination der Dauer reguliert und <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> festlegen. Wenn die <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> -Eigenschaftensatz auf die <xref:System.Web.UI.DataSourceCacheExpiry.Absolute> Wert, der <xref:System.Web.UI.WebControls.ObjectDataSource> speichert die Daten auf dem ersten Aufruf der <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Methode und behält diese im Arbeitsspeicher maximal die Zeitspanne, die angegeben wird der <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> Eigenschaft. Die Daten möglicherweise vor der Dauer und freigegeben werden, wenn der Speicher benötigt wird. Der Cache wird dann aktualisiert, während der nächsten Aufruf der <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Methode. Wenn die <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> -Eigenschaftensatz auf die <xref:System.Web.UI.DataSourceCacheExpiry.Sliding> Wert das Datenquellen-Steuerelement speichert Daten auf dem ersten Aufruf der <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> -Methode, setzt aber das Zeitfenster für die es den Cache für jeden nachfolgenden Aufruf von der <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Methode. Der Cache läuft ab, wenn es keine Aktivität für einen Zeitraum an, das gleich dem <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> Eigenschaft, die seit dem letzten Aufruf von der <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Methode.  
  
   
  
## Examples  
 Dieser Abschnitt enthält zwei Codebeispiele. Im erste Codebeispiel wird veranschaulicht, wie ein <xref:System.Web.UI.WebControls.ObjectDataSource> Objekt unterstützt wird, Filtern und Zwischenspeichern. Im zweiten Codebeispiel wird veranschaulicht, wie eine Wrappermethode implementieren, die zurückgibt eine <xref:System.Data.DataSet> Objekt, das Aktivieren von caching und Filtern mit einer <xref:System.Web.UI.WebControls.ObjectDataSource> Objekt.  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie ein <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement unterstützt wird, Filtern und Zwischenspeichern. Zum Filtern und Zwischenspeichern zu aktivieren, müssen Sie die Methode, die Daten abruft, der durch identifiziert wird implementieren die <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> Eigenschaft verwenden, um die Daten als Zurückgeben einer <xref:System.Data.DataSet> Objekt. In diesem Beispiel ist das Zwischenspeichern ist aktiviert, da die `EmployeeLogic` -Objekt zurückgibt, Daten als eine <xref:System.Data.DataSet>, <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> -Eigenschaftensatz auf `true`, und die <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> und <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> Eigenschaften festgelegt werden. Die <xref:System.Web.UI.WebControls.ObjectDataSource> speichert die Daten, die von zurückgegeben werden das <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> -Eigenschaft für 30 Sekunden.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_6#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_6/CS/objds6cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_6#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_6/VB/objds6vb.aspx#1)]  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie eine Wrappermethode implementieren, die zurückgibt eine <xref:System.Data.DataSet> Objekt, das Aktivieren von caching und Filtern mit einer <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement. In die basisimplementierung für die `EmployeeLogic` -Klasse, die `GetAllEmployees` Methode gibt ein <xref:System.Collections.ArrayList>. Anstatt das Objekt vollständig zum Arbeiten mit der <xref:System.Web.UI.WebControls.ObjectDataSource> auf einer Web Forms-Seite, eine Wrappermethode mit dem Namen `GetAllEmployeesAsDataSet` wird hinzugefügt, die einen Satz von zurückgibt `NorthwindEmployee` Daten als eine <xref:System.Data.DataSet>. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Web.UI.WebControls.ObjectDataSource> Klasse.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_5#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_5/CS/northwindemployee5.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_5#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_5/VB/northwindemployee5.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.CacheDuration" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.EnableCaching" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="CacheKeyDependency">
      <MemberSignature Language="C#" Value="public virtual string CacheKeyDependency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CacheKeyDependency" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheKeyDependency As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CacheKeyDependency { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CacheKeyDependency : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine benutzerdefinierte Schlüsselabhängigkeit ab, die mit sämtlichen vom Datenquellen-Steuerelement erstellten Datencacheobjekten verknüpft ist, oder legt diese fest.</summary>
        <value>Ein Schlüssel, der alle von der <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> erstellten Cacheobjekte angibt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> Eigenschaft kann auf einen beliebigen Zeichenfolgenwert festgelegt werden.  
  
 Alle Cacheobjekte laufen explizit ab, wenn der Schlüssel abläuft. Dadurch können Sie die Einträge im Cache ungültig gemacht werden, die vom erstellten der <xref:System.Web.UI.WebControls.ObjectDataSource> aus Ihrem eigenen code programmgesteuert.  
  
 Die <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement unterstützt das Zwischenspeichern von Daten. Während Daten zwischengespeichert werden, werden bei Aufrufen der <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Objekt-Methode ruft Daten aus dem Cache und nicht aus dem Unternehmen, die die <xref:System.Web.UI.WebControls.ObjectDataSource> arbeitet mit. Wenn der Cache abgelaufen ist, die <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Methode ruft Daten aus dem Geschäftsobjekt ab und speichert die Daten erneut.  
  
 Die <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement enthält Automatisches Caching von Daten bei der <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> -Eigenschaftensatz auf `true` und <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> -Eigenschaftensatz auf einen Wert größer als 0 (null) und die Anzahl der Sekunden gibt an, dass der Cache speichert die Daten vor dem der Cacheeintrag wird verworfen. Der Wert 0 gibt an, ein unendlich lange Cache.  
  
 Sie können festlegen, die <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> Eigenschaft, um eine Abhängigkeit zwischen alle Einträge im Cache zu erstellen, die vom erstellten der <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement und dem Schlüssel. Sie können alle Cacheeinträge programmgesteuert zu einem beliebigen Zeitpunkt ablaufen lassen, wenn der Schlüssel abläuft. Den Schlüssel ablaufen, indem die <xref:System.Web.Caching.Cache.Remove%2A?displayProperty=nameWithType> Methode mit dem aktuellen <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> Wert als Parameter.  
  
 Ein eindeutiger Cacheeintragsschlüssel für jede Kombination von erstellt die <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>, und <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> Eigenschaften. Mehrere <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelemente können die gleichen Cacheeinträge in Szenarien, in dem sie Daten mit den gleichen Typ, Methode und Parameter laden.  
  
   
  
## Examples  
 Die folgenden drei Beispiele zeigen eine Webseite, eine Code-Behind-Seite-Klasse und eine Datenzugriff-Klasse, die Datensätze aus der Tabelle "Employees" in der Northwind-Datenbank abzurufen.  
  
 Das erste Beispiel zeigt eine Webseite, die zwei <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelemente, eine <xref:System.Web.UI.WebControls.DropDownList> -Steuerelement, und ein <xref:System.Web.UI.WebControls.DetailsView> Steuerelement. Die erste <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement und die <xref:System.Web.UI.WebControls.DropDownList> Steuerelement abrufen und Anzeigen der Namen der Mitarbeiter aus der Datenbank verwendet werden. Die zweite <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement und die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement werden verwendet, um das Abrufen und Anzeigen des Mitarbeiterdatensatzes, die vom Benutzer ausgewählt ist.  
  
 Das Zwischenspeichern ist aktiviert, für die <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement. Daher wird jeder Datensatz nur ein Mal aus der Datenbank abgerufen. Die <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> Eigenschaft auf "EmployeeDetails" festgelegt ist, aber einen beliebigen Zeichenfolgenwert als Schlüssel arbeiten kann. Die Webseite enthält auch eine <xref:System.Web.UI.WebControls.Button> -Steuerelement, das der Benutzer klicken kann, um die zwischengespeicherten Daten laufen ab.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_18#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default2.aspx#3)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_18#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default2.aspx#3)]  
  
 Das zweite Beispiel zeigt einen Handler für die <xref:System.Web.UI.Control.Load> Ereignis und einen Handler für die <xref:System.Web.UI.WebControls.Button.Click> Ereignis die <xref:System.Web.UI.WebControls.Button> Steuerelement. Die <xref:System.Web.UI.Control.Load> -Ereignishandler erstellt ein Element im Cache mit einem Schlüssel, der zum Festlegen der <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> Wert. Die <xref:System.Web.UI.WebControls.Button.Click> Ereignishandler entfernt das Element im Cache, deren Schlüssel gleich, der <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> Wert. Wenn das Element im Cache entfernt wird, werden alle zwischengespeicherten Daten, die abhängig von der Schlüssel ist abgelaufen.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default2.aspx.cs#4)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default2.aspx.vb#4)]  
  
 Das dritte Beispiel zeigt die Data Access-Klasse, die mit der Northwind-Datenbank interagiert. Die Klasse verwendet LINQ zum Abfragen der Employees-Tabelle. Das Beispiel erfordert eine LINQ to SQL-Klasse, die Northwind-Datenbank und der Employees-Tabelle darstellt. Weitere Informationen finden Sie unter [Vorgehensweise: Erstellen von LINQ to SQL-Klassen in einem Webprojekt](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/App_Code/EmployeeLogic.cs#5)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/App_Code/EmployeeLogic.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.SqlCacheDependency" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="ConflictDetection">
      <MemberSignature Language="C#" Value="public System.Web.UI.ConflictOptions ConflictDetection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ConflictOptions ConflictDetection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection" />
      <MemberSignature Language="VB.NET" Value="Public Property ConflictDetection As ConflictOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ConflictOptions ConflictDetection { System::Web::UI::ConflictOptions get(); void set(System::Web::UI::ConflictOptions value); };" />
      <MemberSignature Language="F#" Value="member this.ConflictDetection : System.Web.UI.ConflictOptions with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.ConflictDetection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ConflictOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der bestimmt, ob nur die neuen Werte an die <see langword="Update" />-Methode oder aber die alten und die neuen Werte an die <see langword="Update" />-Methode übergeben werden, oder legt diesen fest.</summary>
        <value>Einer der <see cref="T:System.Web.UI.ConflictOptions" />-Werte. Die Standardeinstellung ist <see cref="F:System.Web.UI.ConflictOptions.OverwriteChanges" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft bestimmt, ob Parameter für die alten und neuen Werte die Methode angegeben werden, werden die <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> Eigenschaft. Z. B., wenn die Methode, die gemäß der <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> -Eigenschaft gibt eine <xref:System.Data.DataTable> Steuerelement mit den Spalten `Name` und `Number`, und die <xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A> -Eigenschaftensatz auf die <xref:System.Web.UI.ConflictOptions.OverwriteChanges> Feld Parameter werden für erstellt `Name` und `Number` für die `Update` Methode. Wenn die <xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A> -Eigenschaftensatz auf die <xref:System.Web.UI.ConflictOptions.CompareAllValues> Wert Parameter werden für erstellt `Name`, `Number`, `original_Name`, und `original_Number`. (Hängt von der genaue Namen der Parameter für die ursprünglichen Werte der <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> Eigenschaft.) Die <xref:System.Web.UI.WebControls.ObjectDataSource> dann bestimmt, ob die Methode, die im angegebenen die <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> Eigenschaft verfügt über Parameter, die mit übereinstimmen.  
  
 Steuerung der Parallelität ist ein Verfahren, das Verwenden von Datenspeichern zu steuern, wie Daten gelesen und im Speicher geändert werden, wenn mehrere Clients den Zugriff auf und bearbeiten die gleichen Daten. Beispielsweise wird ein Client liest Daten, und stellt sie für einen Benutzer dar, während ein anderer Client die gleichen Daten liest und wird zu einem anderen Benutzer. Wenn beide Benutzer aktualisieren Sie die Daten und des Datenspeichers zu senden, kann ein unerwartetes Ergebnis auftreten, da beide Clients möglicherweise unterschiedliche Werte für die gleichen Daten bereitstellen. Dies wird als Konflikt betrachtet. Durch Festlegen der <xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A> Eigenschaft, um die <xref:System.Web.UI.ConflictOptions.CompareAllValues> Wert, der `Update` Methode können Sie vergleichen die alten und neuen Werte an die ursprüngliche Datenquelle Konflikte erkennen und ggf. zu behandeln.  
  
 Die <xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A> -Eigenschaft delegiert an die <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A> Eigenschaft der <xref:System.Web.UI.WebControls.ObjectDataSourceView> -Objekt, das zugeordnet ist die <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ConflictOptions" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="ConvertNullToDBNull">
      <MemberSignature Language="C#" Value="public bool ConvertNullToDBNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConvertNullToDBNull" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.ConvertNullToDBNull" />
      <MemberSignature Language="VB.NET" Value="Public Property ConvertNullToDBNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ConvertNullToDBNull { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ConvertNullToDBNull : bool with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.ConvertNullToDBNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die an einen Aktualisierungs-, Einfüge- oder Löschvorgang übergebenen <see cref="T:System.Web.UI.WebControls.Parameter" />-Werte vom <see cref="F:System.DBNull.Value" />-Steuerelement automatisch von <see langword="null" /> in den <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />-Wert konvertiert werden, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn an das <see cref="T:System.Web.UI.WebControls.Parameter" />-Steuerelement übergebene <see langword="null" />-Werte in <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />-Objekten automatisch in <see cref="F:System.DBNull.Value" />-Werte konvertiert werden, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn keine Konvertierung von `null` auf die <xref:System.DBNull.Value> Wert kann zur Laufzeit zu Fehlern führen. Verwenden der <xref:System.Web.UI.WebControls.ObjectDataSource.ConvertNullToDBNull%2A> Eigenschaft, um anzugeben, ob <xref:System.Web.UI.WebControls.Parameter> Werte, die ein Update, Insert oder Delete-Vorgang übergeben werden, werden automatisch von konvertiert `null` auf die <xref:System.DBNull.Value> Wert durch die <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.DBNull.Value" />
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="DataObjectTypeName">
      <MemberSignature Language="C#" Value="public string DataObjectTypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataObjectTypeName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property DataObjectTypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataObjectTypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataObjectTypeName : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen einer Klasse ab, die vom <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />-Steuerelement als Parameter bei Datenvorgängen vom Typ Aktualisieren, Einfügen oder Löschen verwendet wird, anstatt einzelne Werte aus dem datengebundenen Steuerelement zu übergeben, oder legt diesen fest.</summary>
        <value>Ein teilweise oder vollqualifizierter Klassenname, der den Typ des Objekts angibt, das die <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> als Parameter für einen der Vorgänge <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />, <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" /> oder <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" /> verwenden kann. Der Standardwert ist eine leere Zeichenfolge ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Anstatt mehrere Parameter, die übergeben werden, die <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A>, und <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> Methoden können Sie ein Objekt, das mehrere Datenfeldwerte aggregiert erstellen. Dieses Objekt wird an die Methoden, statt mehrere Parameter übergeben.  
  
 Das Standardverhalten einer <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement, das zu einem datengebundenen Steuerelement gebunden ist ist, die vom datengebundenen Steuerelement erstellt eine <xref:System.Web.UI.WebControls.Parameter> Objekt für jeden Parameter in der Datenquelle. Wenn das Geschäftsobjekt, das viele Felder verfügt, hat die resultierende Methode auch viele Felder. Die <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> Eigenschaft können Sie einen Typ angeben, die über eine Eigenschaft für jedes Datenfeld verfügt. Anschließend, anstatt mehrere Parameter an die Methode übergeben, die Common Language Runtime erstellt ein Objekt und alle zugehörigen Eigenschaften. Dieses Objekt wird in die Parameterauflistung für den Methodenaufruf hinzugefügt.  
  
 Der Typ, der angegeben wird die <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> Eigenschaft muss einen Standardkonstruktor, der keine Parameter besitzt, haben also die <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement kann eine Instanz des Typs erstellen. Festlegbare Eigenschaften, die ermöglichen, muss auch verfügen die <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement das Objekt mit Werten auffüllen, die vom datengebundenen Steuerelement übergeben werden. Die Eigenschaftennamen für die <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement exakt den Namen der Parameter, der Werte, die vom datengebundenen Steuerelement übergeben werden sollen.  
  
 Wenn die <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> festgelegt wird und die <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement bezieht sich auf einem datengebundenen Steuerelement, die Methoden, die vom angegebenen die <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> und <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> Eigenschaften jedes müssen einen Parameter des Typs, der in der angegebenist<xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> Eigenschaft. Wenn die <xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A> -Eigenschaftensatz auf die <xref:System.Web.UI.ConflictOptions.OverwriteChanges> Wert, der die Methode, die angegeben wird die <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> Eigenschaft muss einen Parameter des Typs, der im angegebenen haben die <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> Eigenschaft. Wenn die <xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A> -Eigenschaftensatz auf die <xref:System.Web.UI.ConflictOptions.CompareAllValues> Wert, der die Methode, die angegeben wird die <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> Eigenschaft muss zwei Parameter des Typs, der im angegebenen haben die <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> Eigenschaft. Der erste Parameter enthält die ursprünglichen Werte; der zweite Parameter enthält die neuen Werte.  
  
 Die <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> -Eigenschaft delegiert an die <xref:System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName%2A> Eigenschaft der <xref:System.Web.UI.WebControls.ObjectDataSourceView> zugeordnete der <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement.  
  
   
  
## Examples  
 Der Abschnitt enthält zwei Codebeispiele. Im ersten Codebeispiel wird veranschaulicht, wie einen Typ implementiert, der alle Parameterwerte in ein Objekt, kombiniert mit der <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> Eigenschaft. Das zweite Codebeispiel zeigt die Webseite, die die beiden Klassen verwendet, die im ersten Codebeispiel verwendet werden.  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie einen Typ implementiert, der alle Parameterwerte in ein Objekt, kombiniert mit der <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> Eigenschaft. Die select-Methode von der `AggregateData` -Klasse zurückgegeben wird ein <xref:System.Data.DataTable> Objekt mit zwei Spalten, die mit dem Namen `Name` und `Number`. Auf ähnliche Weise die `NewData` -Klasse definiert zwei Lese-/Schreibeigenschaften, `Name` und `Number`. Die `Insert` Methode der `AggregateData` Klasse nimmt einen Parameter vom Typ `NewData`. Die `TypeName` Eigenschaft der <xref:System.Web.UI.WebControls.ObjectDataSource> nastaven NA hodnotu `AggregateData` und <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> -Eigenschaftensatz auf `NewData`.  
  
 [!code-csharp[ObjectDataSourceDataObjectTypeName#2](~/samples/snippets/csharp/VS_Snippets_WebNet/ObjectDataSourceDataObjectTypeName/CS/AggregateData.cs#2)]
 [!code-vb[ObjectDataSourceDataObjectTypeName#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ObjectDataSourceDataObjectTypeName/VB/AggregateData.vb#2)]  
  
 Das folgende Codebeispiel zeigt die Webseite, die die beiden Klassen verwendet, die im vorherigen Codebeispiel verwendet werden.  
  
 [!code-aspx-csharp[ObjectDataSourceDataObjectTypeName#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ObjectDataSourceDataObjectTypeName/CS/AggregateDataPageCS.aspx#1)]
 [!code-aspx-vb[ObjectDataSourceDataObjectTypeName#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ObjectDataSourceDataObjectTypeName/VB/AggregateDataPageVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4">Verwenden von Parametern mit dem ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public int Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Function Delete () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Delete();" />
      <MemberSignature Language="F#" Value="member this.Delete : unit -&gt; int" Usage="objectDataSource.Delete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Führt einen Löschvorgang durch Aufrufen der von der <see cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" />-Eigenschaft angegebenen Methode mit sämtlichen Parametern in der <see cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />-Auflistung aus.</summary>
        <returns>Ein Wert, der die Anzahl der aus dem zugrunde liegenden Datenspeicher gelöschten Zeilen darstellt, wenn die <see cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows" />-Eigenschaft der Instanz von <see cref="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" /> im <see cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleted" />-Ereignis festgelegt wurde, andernfalls -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vor der <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> Vorgang ausgeführt wird, die <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting%2A> aufgerufen, um das Auslösen der <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> Ereignis. Können Sie behandeln die <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> Ereignis, um die Werte der Parameter überprüfen und Ausführen der vorverarbeitung vor einem <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> Vorgang. Zum eines Löschvorgangs, der <xref:System.Web.UI.WebControls.ObjectDataSourceView> Objekt verwendet Reflektion, um eine Instanz des Objekts zu erstellen, die durch identifiziert wird die <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> Eigenschaft. Es ruft dann die Methode, die durch identifiziert wird die <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> Eigenschaft unter Verwendung aller zugeordneten <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> Eigenschaften. Wenn der Parameter für das Löschen von einem zugeordneten datengebundenen Steuerelement stammen, wird gemäß der Namen der Parameter erstellt der <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> Eigenschaft. Nach der <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> Vorgang abgeschlossen ist, die <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted%2A> aufgerufen, um das Auslösen der <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> Ereignis. Können Sie behandeln die <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> Ereignis, um Rückgabe von Werten, Ausgabeparameter und Ausnahmen zu untersuchen, und klicken Sie auf die nach der Verarbeitung auszuführen.  
  
 Die <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> Methode delegiert an die <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> -Methode der der <xref:System.Web.UI.WebControls.ObjectDataSourceView> -Objekt, das zugeordnet ist die <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement.  
  
## <a name="data-bound-controls"></a>Datengebundene Steuerelemente  
 Wenn die <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement mit einem datengebundenen Steuerelement verknüpft ist, z. B. die <xref:System.Web.UI.WebControls.GridView> -Steuerelement, es ist nicht erforderlich, rufen Sie die <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> aus Code der Seite. Die <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> Methode wird stattdessen direkt vom datengebundenen Steuerelement aufgerufen.  
  
 Weitere Informationen zum Zusammenführen von Parametern, Lebensdauer und methodenauflösung finden Sie unter <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="Deleted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Deleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Deleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Deleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleted As ObjectDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceStatusEventHandler ^ Deleted;" />
      <MemberSignature Language="F#" Value="member this.Deleted : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " Usage="member this.Deleted : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn ein <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />-Vorgang abgeschlossen wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Behandeln der <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> Ereignis, um die Werte für einen Rückgabewert oder Ausgabeparameter zu überprüfen oder zu bestimmen, ob eine Ausnahme ausgelöst wurde, nach einem <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> Vorgang wurde abgeschlossen. Der Rückgabewert Output-Parameter und Eigenschaften für die Ausnahmebehandlung stehen über die <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> Objekt, das dem Ereignis zugeordnet ist.  
  
 Können Sie die <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A> Eigenschaft der <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> Objekts, das die Anzahl der Zeilen zurückgegeben, die aus gelöscht wurden die <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> Methode. Zu diesem Zweck legen Sie die <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A> Eigenschaft. Wenn die Anzahl der gelöschten Zeilen aus der Methode zurückgegeben, die angegeben wird die <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> -Eigenschaft der Wert steht über den <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A> Eigenschaft der <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> Objekt.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Dieser Abschnitt enthält zwei Codebeispiele. Im ersten Codebeispiel wird veranschaulicht, wie Sie mit einer <xref:System.Web.UI.WebControls.ObjectDataSource> Objekt mit einem Geschäftsobjekt und <xref:System.Web.UI.WebControls.GridView> Steuerelement, um Daten zu löschen. Im zweiten Codebeispiel dargestellt das `EmployeeLogic` -Klasse, die im ersten Codebeispiel verwendet wird.  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit einer <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement mit einem Geschäftsobjekt und <xref:System.Web.UI.WebControls.GridView> Steuerelement, um Daten zu löschen. Zunächst die <xref:System.Web.UI.WebControls.GridView> Steuerelement zeigt einen Satz aller Mitarbeiter, mit der Methode, die angegeben wird, die <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> Eigenschaft zum Abrufen der Daten aus der `EmployeeLogic` Objekt. Da die <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> -Eigenschaftensatz auf `true`, <xref:System.Web.UI.WebControls.GridView> -Steuerelement automatisch zeigt eine **löschen** Schaltfläche.  
  
 Wenn Sie auf die **löschen** Schaltfläche, den Löschvorgang erfolgt mithilfe der Methode, die angegeben wird die <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> -Eigenschaft und die im angegebenen Parameter die <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> Auflistung. In diesem Codebeispiel werden einige Schritte vorverarbeitung und Nachbearbeitung auch ausgeführt werden. Die `NorthwindEmployeeDeleting` Delegat wird aufgerufen, um die Behandlung der <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> Ereignis aus, bevor der Vorgang ausgeführt wird und die `NorthwindEmployeeDeleted` Delegat wird aufgerufen, um die Behandlung der <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> Ereignis aus, nachdem der Vorgang abgeschlossen ist, um die Behandlung von Ausnahmen führen. In diesem Codebeispiel Wenn eine `NorthwindDataException` ist ausgelöst wird, wird es von verarbeitet die `NorthwindEmployeeDeleted` Methode.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 Das folgende Codebeispiel zeigt die `EmployeeLogic` -Klasse, die im vorherigen Codebeispiel verwendet wird.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/northwindemployee10.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/northwindemployee10.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleting" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=214011">Verwenden von Entitätsframework und das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteMethod">
      <MemberSignature Language="C#" Value="public string DeleteMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeleteMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DeleteMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteMethod : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Methode oder Funktion ab, die vom <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />-Steuerelement zum Löschen von Daten aufgerufen wird, oder legt diesen fest.</summary>
        <value>Eine Zeichenfolge, die den Namen der Methode oder der Funktion darstellt, mit deren Hilfe die <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> Daten löscht. Der Standardwert ist eine leere Zeichenfolge ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das Geschäftsobjekt, das wird angenommen, um Datensätze zu einem Zeitpunkt, anstatt in einem Batch zu löschen.  
  
 Die <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> -Eigenschaft delegiert an die <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> Eigenschaft der <xref:System.Web.UI.WebControls.ObjectDataSourceView> -Objekt, das zugeordnet ist die <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement.  
  
 Stellen Sie sicher, dass die Parameternamen für konfiguriert die <xref:System.Web.UI.WebControls.ObjectDataSource> steuern, der <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> Auflistung entsprechen den Namen der Spalten, die von der select-Methode zurückgegeben werden.  
  
## <a name="object-lifetime"></a>Lebensdauer eines Objekts  
 Die Methode, die durch identifiziert wird die <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> Eigenschaft kann eine Instanzmethode sein oder ein `static` (`Shared` in Visual Basic) Methode. Wenn sie eine Instanzmethode ist, das Geschäftsobjekt, das erstellt und zerstört wird jedes Mal die <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> -Eigenschaft aufgerufen wird. Können Sie behandeln die <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> und <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> Ereignisse mit das Geschäftsobjekt, das vor der <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> -Eigenschaft aufgerufen wird. Sie können auch behandeln die <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> -Ereignis, das ausgelöst wird, nachdem die <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> -Eigenschaft aufgerufen wird. Wenn das Geschäftsobjekt, das implementiert die <xref:System.IDisposable> -Schnittstelle, die <xref:System.IDisposable.Dispose%2A> Methode wird aufgerufen, bevor das Objekt zerstört wird. Wenn die Methode ist eine `static` (`Shared` in Visual Basic) Methode, das Geschäftsobjekt, das nie erstellt, und Sie nicht behandeln die <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>, <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>, und <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> Ereignisse.  
  
## <a name="parameter-merging"></a>Zusammenführen von Parametern  
 Parameter werden hinzugefügt, um die <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> Auflistung aus drei Quellen:  
  
-   Aus dem datengebundenen Steuerelement, zur Laufzeit.  
  
-   Von der `DeleteParameters` -Element deklarativ.  
  
-   Von der `Deleting` -Methode, deklarativ.  
  
 Zuerst werden alle Parameter, die von datengebundenen Steuerelementen generiert werden hinzugefügt, um die <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> Auflistung. Z. B. wenn die <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement gebunden ist, eine <xref:System.Web.UI.WebControls.GridView> Steuerelement, das die Spalten `Name` und `Number`, Parameter für `Name` und `Number` der Auflistung hinzugefügt werden. Der genaue Name des Parameters hängt von der <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> Eigenschaft. Der Datentyp dieser Parameter ist `string`. Anschließend wird die Parameter, die in aufgeführt sind die `DeleteParameters` Element hinzugefügt werden. Wenn ein Parameter in der `DeleteParameters` Element gefunden wird, mit dem gleichen Namen wie ein Parameter, der bereits vorhanden ist die <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> vorhandenen Parameters-Auflistung wird geändert, um mit dem Parameter überein, die im angegebenen die `DeleteParameters` Element. In der Regel wird dies verwendet, um den Typ der Daten in den Parameter zu ändern. Schließlich können Sie programmgesteuert hinzufügen und entfernen Sie die Parameter in der <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> -Ereignis, das vor der <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> -Methode ausgeführt wird. Die Methode wird aufgelöst, nachdem die Parameter zusammengeführt werden. Methodenauflösung wird im nächsten Abschnitt erläutert.  
  
## <a name="method-resolution"></a>Methodenauflösung  
 Wenn die <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> -Methode aufgerufen wird, werden die Datenfelder aus dem datengebundenen Steuerelement, die Parameter, die deklarativ bei erstellt wurden die `DeleteParameters` Element, und die Parameter, die in hinzugefügt wurden die <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> -Ereignishandler werden zusammengeführt. (Weitere Informationen finden Sie im vorherigen Abschnitt.) Die <xref:System.Web.UI.WebControls.ObjectDataSource> -Objekt versucht dann, eine aufzurufende Methode zu suchen. Es sucht zuerst für eine oder mehrere Methoden mit dem angegebenen Namen, in der <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> Eigenschaft. Wenn keine Übereinstimmung gefunden wird, eine <xref:System.InvalidOperationException> Ausnahme ausgelöst. Wenn eine Übereinstimmung gefunden wird, sucht es nach übereinstimmende Parameternamen. Nehmen wir beispielsweise an der vom angegebenen Typ der <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> Eigenschaft verfügt über zwei Methoden namens `DeleteARecord`. Eine `DeleteARecord` verfügt über einen Parameter `ID`, und die andere `DeleteARecord` verfügt über zwei Parameter, `Name` und `Number`. Wenn die <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> Auflistung hat nur einen Parameter mit dem Namen `ID`, die `DeleteARecord` -Methode mit lediglich die `ID` Parameter aufgerufen wird. Der Typ des Parameters wird nicht beim Auflösen der Methoden überprüft. Die Reihenfolge der Parameter spielt keine Rolle.  
  
 Wenn die <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> Eigenschaft festgelegt ist, wird die Methode auf andere Weise aufgelöst. Die <xref:System.Web.UI.WebControls.ObjectDataSource> sucht nach einer Methode mit dem angegebenen Namen, in der <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> -Eigenschaft, die einen Parameter des Typs, der verwendet wird angegeben, der <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> Eigenschaft. In diesem Fall spielt der Namen des Parameters keine Rolle.  
  
   
  
## Examples  
 Dieser Abschnitt enthält zwei Codebeispiele. Im ersten Codebeispiel wird veranschaulicht, wie Sie mit einer <xref:System.Web.UI.WebControls.ObjectDataSource> Objekt mit einem Geschäftsobjekt und <xref:System.Web.UI.WebControls.GridView> Steuerelement, um Daten zu löschen. Im zweiten Codebeispiel dargestellt das `EmployeeLogic` -Klasse, die im ersten Codebeispiel verwendet wird.  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit einer <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement mit einem Geschäftsobjekt und <xref:System.Web.UI.WebControls.GridView> Steuerelement, um Daten zu löschen. Zunächst die <xref:System.Web.UI.WebControls.GridView> Steuerelement zeigt einen Satz aller Mitarbeiter, mit der Methode, die angegeben wird, die <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> Eigenschaft zum Abrufen der Daten aus der `EmployeeLogic` Objekt. Da die <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> -Eigenschaftensatz auf `true`, <xref:System.Web.UI.WebControls.GridView> -Steuerelement automatisch zeigt eine **löschen** Schaltfläche.  
  
 Wenn Sie auf die **löschen** Schaltfläche, den Löschvorgang erfolgt mithilfe der Methode, die angegeben wird die <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> -Eigenschaft und die im angegebenen Parameter die <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> Auflistung. In diesem Codebeispiel werden einige Schritte vorverarbeitung und Nachbearbeitung auch ausgeführt werden. Die `NorthwindEmployeeDeleting` Delegat wird aufgerufen, um die Behandlung der <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> Ereignis aus, bevor der Vorgang ausgeführt wird, und die `NorthwindEmployeeDeleted` Delegat wird aufgerufen, um die Behandlung der <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> Ereignis aus, nachdem der Vorgang abgeschlossen ist, um die Behandlung von Ausnahmen führen. In diesem Beispiel wenn eine `NorthwindDataException` wird ausgelöst, es erfolgt durch die `NorthwindDataException` delegieren.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 Das folgende Codebeispiel zeigt die `EmployeeLogic` -Klasse, die im vorherigen Codebeispiel verwendet wird.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/northwindemployee10.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/northwindemployee10.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=214011">Verwenden von Entitätsframework und das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection DeleteParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeleteParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ DeleteParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeleteParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Parameterauflistung ab, die die von der <see cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" />-Methode verwendeten Parameter enthält.</summary>
        <value>Eine <see cref="T:System.Web.UI.WebControls.ParameterCollection" />, die die von der <see cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" />-Methode verwendeten Parameter enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Namen und Typen der Parameter, die in befinden die <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> Sammlung muss übereinstimmen, den Namen und Typen der Parameter in der <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> Methodensignatur. Die Parameternamen betroffen sind der <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> -Eigenschaft und die Groß-/Kleinschreibung beachtet werden. Die Parameter in der Auflistung richten sich nach den Daten, die das datengebundene Steuerelement, die Parameter, die deklarativ angegeben werden und die Parameter, die programmgesteuert hinzugefügt werden. Weitere Informationen finden Sie unter "Zusammenführen von Parametern" in <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> und [mithilfe von Parametern mit dem ObjectDataSource-Steuerelement](https://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4).  
  
 Die <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> -Eigenschaft ruft die <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> -Eigenschaft, die enthalten sind die <xref:System.Web.UI.WebControls.ObjectDataSourceView> -Objekt, das zugeordnet ist die <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement.  
  
 Weitere Informationen zum Zusammenführen von Parametern, Lebensdauer und methodenauflösung finden Sie unter <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>.  
  
   
  
## Examples  
 Dieser Abschnitt enthält zwei Codebeispiele. Im ersten Codebeispiel wird veranschaulicht, wie Sie mit einer <xref:System.Web.UI.WebControls.ObjectDataSource> Objekt mit einem Geschäftsobjekt und <xref:System.Web.UI.WebControls.GridView> Steuerelement, um Daten zu löschen. Im zweiten Codebeispiel dargestellt das `EmployeeLogic` -Klasse, die im ersten Codebeispiel verwendet wird.  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> Eigenschaft der <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement mit einem Geschäftsobjekt und ein <xref:System.Web.UI.WebControls.GridView> Steuerelement, um Daten zu löschen. Zunächst die <xref:System.Web.UI.WebControls.GridView> Steuerelement zeigt einen Satz aller Mitarbeiter, mit der Methode, die angegeben wird, die <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> Eigenschaft zum Abrufen der Daten aus der `EmployeeLogic` Objekt. Da die <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> -Eigenschaftensatz auf `true`, <xref:System.Web.UI.WebControls.GridView> -Steuerelement automatisch zeigt eine **löschen** Schaltfläche.  
  
 Wenn Sie auf die **löschen** Schaltfläche der <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> Ereignis wird mit zwei Parametern aufgerufen. Ein Parameter `EmpID`, stammt aus der <xref:System.Web.UI.WebControls.DataGrid> steuern und basiert auf der <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> Eigenschaft. Der andere Parameter stammt aus der deklarativen <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> Eigenschaft. Die `EmployeeLogic` -Klasse überlädt die `DeleteEmployee` Methode. Eine Überladung nimmt eine `NorthwindEmployee` -Parameter und die andere akzeptiert einen <xref:System.Int32> Parameter mit dem Namen `anID`. In der <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> Ereignis, das die Einträge in der <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> Eigenschaft werden angepasst, um nur einen Parameter mit dem Namen `anID` mit dem Wert von `original_EmpID`. Wenn der Ereignishandler vorhanden ist, den entsprechenden `DeleteEmployee` Methode wird aufgerufen.  
  
 Das folgende Codebeispiel zeigt die Webseite, die anzeigt der <xref:System.Web.UI.WebControls.DataGrid> -Steuerelement und behandelt die <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> Ereignis.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_11#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_11/CS/objds11cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_11#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_11/VB/objds11vb.aspx#1)]  
  
 Das folgende Codebeispiel zeigt die `EmployeeLogic` -Klasse, die im vorherigen Codebeispiel verwendet wird.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_11#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_11/CS/northwindemployee11.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_11#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_11/VB/northwindemployee11.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="Deleting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Deleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Deleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Deleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleting As ObjectDataSourceMethodEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceMethodEventHandler ^ Deleting;" />
      <MemberSignature Language="F#" Value="member this.Deleting : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " Usage="member this.Deleting : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt vor einem <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />-Vorgang auf.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Behandeln der <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> Ereignis, um zusätzliche Initialisierung auszuführen, die spezifisch für Ihre Anwendung, die zum Überprüfen der Werte der Parameter oder die Werte der Parameter vor dem Ändern der <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement den Löschvorgang ausführt. Die Parameter sind verfügbar, als ein <xref:System.Collections.IDictionary> -Auflistung, die von erfolgt der <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> -Eigenschaft, die verfügbar gemacht werden die <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> Objekt.  
  
 Sie können den Löschvorgang abbrechen, indem Sie die Einstellung der <xref:Microsoft.Win32.SessionEndingEventArgs.Cancel%2A> Eigenschaft der <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> zu `true`.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Dieser Abschnitt enthält zwei Codebeispiele. Im ersten Codebeispiel wird veranschaulicht, wie Sie mit einer <xref:System.Web.UI.WebControls.ObjectDataSource> Objekt mit einem Geschäftsobjekt und <xref:System.Web.UI.WebControls.GridView> Steuerelement, um Daten zu löschen. Im zweiten Codebeispiel dargestellt das `EmployeeLogic` -Klasse, die im ersten Codebeispiel verwendet wird.  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit einer <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement mit einem Geschäftsobjekt und <xref:System.Web.UI.WebControls.GridView> Steuerelement, um Daten zu löschen. Zunächst die <xref:System.Web.UI.WebControls.GridView> Steuerelement zeigt einen Satz aller Mitarbeiter, mit der Methode, die angegeben wird, die <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> Eigenschaft zum Abrufen der Daten aus der `EmployeeLogic` Objekt. Da die <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> -Eigenschaftensatz auf `true`, <xref:System.Web.UI.WebControls.GridView> -Steuerelement automatisch zeigt eine **löschen** Schaltfläche.  
  
 Wenn Sie auf die **löschen** Schaltfläche, den Löschvorgang erfolgt mithilfe der Methode, die angegeben wird die <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> -Eigenschaft und die im angegebenen Parameter die <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> Auflistung. In diesem Codebeispiel werden einige Schritte vorverarbeitung und Nachbearbeitung auch ausgeführt werden. Die `NorthwindEmployeeDeleting` Delegat wird aufgerufen, um die Behandlung der <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> Ereignis aus, bevor der Vorgang ausgeführt wird, und die `NorthwindEmployeeDeleted` Delegat wird aufgerufen, um die Behandlung der <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> Ereignis aus, nachdem der Vorgang abgeschlossen ist, um die Behandlung von Ausnahmen führen. In diesem Codebeispiel Wenn eine `NorthwindDataException` ist ausgelöst wird, wird es von verarbeitet die `NorthwindEmployeeDeleted` Methode.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 Das folgende Codebeispiel zeigt die `EmployeeLogic` -Klasse, die im vorherigen Codebeispiel verwendet wird.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/northwindemployee10.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/northwindemployee10.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleted" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="EnableCaching">
      <MemberSignature Language="C#" Value="public virtual bool EnableCaching { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableCaching" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.EnableCaching" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EnableCaching As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableCaching { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableCaching : bool with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.EnableCaching" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob für das <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />-Steuerelement die Zwischenspeicherung von Daten aktiviert ist, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn die Zwischenspeicherung von Daten für das Datenquellen-Steuerelement aktiviert ist, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement unterstützt das Zwischenspeichern von Daten. Während Daten zwischengespeichert werden, werden bei Aufrufen der <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Methode abrufen von Daten aus dem Cache statt der <xref:System.Web.UI.WebControls.ObjectDataSource> Erstellen einer Instanz des Geschäftsobjekts und Aufrufen der-Methode Daten. Wenn der Cache abgelaufen ist, die <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Methode ruft Daten aus dem Geschäftsobjekt ab und speichert die Daten erneut.  
  
 Die <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement enthält Automatisches Caching von Daten bei der <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> -Eigenschaftensatz auf `true` und <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> -Eigenschaftensatz auf einen Wert größer als 0 (null) und die Anzahl der Sekunden gibt an, dass der Cache speichert die Daten vor dem der Cacheeintrag wird verworfen. Der Wert 0 gibt an, ein unendlich lange Cache.  
  
   
  
## Examples  
 Die folgenden drei Beispiele zeigen eine Webseite, eine Code-Behind-Seite-Klasse und eine Datenzugriff-Klasse, die Datensätze aus der Tabelle "Employees" in der Northwind-Datenbank abzurufen.  
  
 Das erste Beispiel zeigt eine Webseite, die zwei <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelemente, eine <xref:System.Web.UI.WebControls.DropDownList> -Steuerelement, und ein <xref:System.Web.UI.WebControls.DetailsView> Steuerelement. Die erste <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement und die <xref:System.Web.UI.WebControls.DropDownList> Steuerelement abrufen und Anzeigen der Namen der Mitarbeiter aus der Datenbank verwendet werden. Die zweite <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement und die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement werden verwendet, um das Abrufen und Anzeigen des Mitarbeiterdatensatzes, die vom Benutzer ausgewählt ist.  
  
 Das Zwischenspeichern ist aktiviert, für die <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement. Daher wird jeder Datensatz nur ein Mal aus der Datenbank abgerufen. Die <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> Eigenschaft auf "EmployeeDetails" festgelegt ist, aber einen beliebigen Zeichenfolgenwert als Schlüssel arbeiten kann. Die Webseite enthält auch eine <xref:System.Web.UI.WebControls.Button> -Steuerelement, das der Benutzer klicken kann, um die zwischengespeicherten Daten laufen ab.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_18#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default2.aspx#3)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_18#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default2.aspx#3)]  
  
 Das zweite Beispiel zeigt einen Handler für die <xref:System.Web.UI.Control.Load> Ereignis und einen Handler für die <xref:System.Web.UI.WebControls.Button.Click> Ereignis die <xref:System.Web.UI.WebControls.Button> Steuerelement. Die <xref:System.Web.UI.Control.Load> -Ereignishandler erstellt ein Element im Cache mit einem Schlüssel, der zum Festlegen der <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> Wert. Die <xref:System.Web.UI.WebControls.Button.Click> Ereignishandler entfernt das Element im Cache, deren Schlüssel gleich, der <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> Wert. Wenn das Element im Cache entfernt wird, werden alle zwischengespeicherten Daten, die abhängig von der Schlüssel ist abgelaufen.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default2.aspx.cs#4)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default2.aspx.vb#4)]  
  
 Das dritte Beispiel zeigt die Data Access-Klasse, die mit der Northwind-Datenbank interagiert. Die Klasse verwendet LINQ zum Abfragen der Employees-Tabelle. Das Beispiel erfordert eine LINQ to SQL-Klasse, die Northwind-Datenbank und der Employees-Tabelle darstellt. Weitere Informationen finden Sie unter [Vorgehensweise: Erstellen von LINQ to SQL-Klassen in einem Webprojekt](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/App_Code/EmployeeLogic.cs#5)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/App_Code/EmployeeLogic.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Die <see cref="P:System.Web.UI.WebControls.ObjectDataSource.EnableCaching" />-Eigenschaft wird auf <see langword="true" /> festgelegt, wenn die durch die <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />-Eigenschaft angegebene Methode einen <see cref="T:System.Data.Common.DbDataReader" /> zurückgibt.</exception>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.CacheDuration" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="EnablePaging">
      <MemberSignature Language="C#" Value="public bool EnablePaging { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePaging" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging" />
      <MemberSignature Language="VB.NET" Value="Public Property EnablePaging As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnablePaging { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnablePaging : bool with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.EnablePaging" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das Datenquellensteuerelement Paging für den von ihm abgerufenen Datensatz unterstützt, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn das Datenquellen-Steuerelement Paging für die von ihm abgerufenen Daten unterstützt, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Paging durch die <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement behandelt, indem die <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A>, und <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> Eigenschaften der <xref:System.Web.UI.WebControls.ObjectDataSource> und definieren eine select-Methode in das Geschäftsobjekt, das mit den entsprechenden Parametern. Wenn die <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> -Eigenschaftensatz auf `true`, <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> Sammlung umfasst zwei zusätzliche Parameter für die erste Zeile, die angefordert wird und die Anzahl der Zeilen, die angefordert werden. Diese beiden Parameter sind mit dem Namen, gemäß der <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> und <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> Eigenschaften. Die `Select` Methode sollte die angeforderte Anzahl von Zeilen, die beginnend am angegebenen Index zurück. Da die Daten an die Seitengröße nicht gleichmäßig unterteilt sein kann, kann die letzte Seite weniger Zeilen enthalten. Daher ist die Anzahl der Zeilen, die angefordert werden auch der maximalen Anzahl von Zeilen, die zurückgegeben werden.  
  
 Wenn auf das zugeordnete datengebundene Steuerelement Paging aktiviert ist, ruft das datengebundene Steuerelement die `Select` Methode mit den startIndex und die Anzahl der Zeilen, die erforderlich sind. Darüber hinaus, wenn die <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> -Eigenschaft festgelegt ist, die vom datengebundenen Steuerelement ruft die Methode vor dem Rendern der Pager-Steuerelemente. Z. B. wenn ein <xref:System.Web.UI.WebControls.GridView> Steuerelement Paging mit einer Seitengröße von 5 und die Methode, die angegebenen aktiviert wurde die <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> Eigenschaft zurückgibt, 20, nur 4 Seiten werden in der Pager angezeigt.  
  
 Die <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> -Eigenschaft delegiert an die <xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A> Eigenschaft der <xref:System.Web.UI.WebControls.ObjectDataSourceView> Objekt.  
  
   
  
## Examples  
 Die folgenden drei Beispiele zeigen eine Webseite, eine Code-Behind-Seite-Klasse und eine Datenzugriffs-Klasse, mit denen Benutzer auswählen, wie viele Datensätze auf der Seite angezeigt werden.  
  
 Die Webseite enthält ein <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement, dessen <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> -Eigenschaftensatz auf `true`. Die <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> -Eigenschaftensatz auf den Namen einer Methode, die die Gesamtzahl der Datensätze in der Abfrage zurückgibt. Die <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> Eigenschaft und die <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> Eigenschaft festgelegt werden, den Namen der Parameter, die in der Select-Methode verwendet werden. Die Seite enthält außerdem eine <xref:System.Web.UI.WebControls.DropDownList> Steuerelement.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx#1)]  
  
 Das zweite Beispiel zeigt einen Handler für die <xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged?displayProperty=nameWithType> Ereignis die <xref:System.Web.UI.WebControls.DropDownList> Steuerelement. Der Code in den Handler für die <xref:System.Web.UI.WebControls.GridView.PageSize%2A> Eigenschaft, um die Auswahl des Benutzers.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx.vb#2)]  
  
 Das dritte Beispiel zeigt die Data Access-Klasse, die Daten aus der Customers-Tabelle abruft. Es enthält eine Methode mit dem Namen `GetSubsetOfEmployees`, zugewiesen die <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> Eigenschaft der <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement. Das Beispiel enthält auch eine Methode namens `GetEmployeeCount`, zugewiesen die <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> Eigenschaft der <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement. Die Klasse verwendet LINQ zum Abfragen der Customers-Tabelle. Das Beispiel erfordert eine LINQ to SQL-Klasse, die Northwind-Datenbank und Tabelle "Customers" darstellt. Weitere Informationen finden Sie unter [Vorgehensweise: Erstellen von LINQ to SQL-Klassen in einem Webprojekt](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/App_Code/CustomerLogic.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/App_Code/CustomerLogic.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanPage" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="FilterExpression">
      <MemberSignature Language="C#" Value="public string FilterExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilterExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FilterExpression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FilterExpression : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.FilterExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Filterausdruck ab, der beim Aufruf der von der <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />-Eigenschaft angegebenen Methode angewendet wird, oder legt diesen fest.</summary>
        <value>Eine Zeichenfolge, die einen Filterausdruck darstellt, der beim Abrufen von Daten mit der von der <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />-Eigenschaft angegebenen Methode oder Funktion angewendet wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement unterstützt das Filtern von Daten nur dann, wenn die <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Methode gibt eine <xref:System.Data.DataSet> oder <xref:System.Data.DataTable> Objekt.  
  
 Die Syntax, die verwendet wird, für die <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> -Eigenschaft ist eine Formatzeichenfolge-Ausdruck. Die Syntax der Filter-Ausdruck wird die gleiche Syntax, die vom akzeptiert wird die <xref:System.Data.DataColumn.Expression%2A> Eigenschaft. Wenn Sie Parameter zum Hinzufügen der <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> -Auflistung, Sie können auch Platzhalter für Formatzeichenfolgen einschließen. Beispielsweise enthalten `"{0}"` im Ausdruck als Ersatz für die Parameterwerte. Die Platzhalter werden entsprechend dem Index des Parameters im ersetzt die <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> Auflistung.  
  
 Sie können Parameter einschließen, die <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> Eigenschaft. Wenn der Typ des Parameters einen Zeichenfolgen- oder Zeichenarray-Typ ist, muss er in einfache Anführungszeichen ein. Anführungszeichen sind nicht erforderlich, wenn der Parameter ein numerischer Typ ist.  
  
 Die <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> -Auflistung enthält die Parameter, die für die Platzhalter ausgewertet werden, die in befinden die <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> Eigenschaft.  
  
 Die <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> -Eigenschaft delegiert an die <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A> Eigenschaft der <xref:System.Web.UI.WebControls.ObjectDataSourceView> -Objekt, das zugeordnet ist die <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement.  
  
> [!NOTE]
>  Sie sollten alle Filterwert für den Parameter überprüfen, die Sie vom Client empfangen. Die Runtime einfach ersetzt den Wert des Parameters im Filterausdruck und wendet ihn auf die <xref:System.Data.DataSet> oder <xref:System.Data.DataTable> von zurückgegebene Objekt der <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Methode. Bei Verwendung der <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> -Eigenschaft, wie eine Sicherheitsmaßnahme, um die Anzahl der Elemente, die zurückgegeben werden, Sie müssen die Werte der Parameter überprüfen, bevor die Filterung erfolgt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Anzeigen von gefilterter Daten, die mit einer <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement zum Abrufen von Daten aus einem Geschäftsobjekt der mittleren Ebene und einem <xref:System.Web.UI.WebControls.GridView> Steuerelement zum Anzeigen der Ergebnisse. Die <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement kann die Daten filtern, nur, wenn die Methode, die Daten abruft, die als Ruft ab eine <xref:System.Data.DataSet> oder <xref:System.Data.DataTable> Objekt. Aus diesem Grund die <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> identifiziert eine Geschäftsobjektmethode aus, die Daten als abruft eine <xref:System.Data.DataSet>.  
  
 Im Codebeispiel besteht aus einer <xref:System.Web.UI.WebControls.TextBox> -Steuerelement, ein <xref:System.Web.UI.WebControls.GridView> -Steuerelement die <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement, und ein **senden** Schaltfläche. In der Standardeinstellung die <xref:System.Web.UI.WebControls.TextBox> wird mit den Namen einer der Mitarbeiter Northwind Traders aufgefüllt. Die <xref:System.Web.UI.WebControls.GridView> zeigt Informationen über die Mitarbeiter, die durch den Namen in identifiziert wird die <xref:System.Web.UI.WebControls.TextBox>. Geben Sie zum Abrufen von Daten auf einem anderen Mitarbeiter den vollständigen Namen des Mitarbeiters in der <xref:System.Web.UI.WebControls.TextBox>, und klicken Sie dann auf die **senden** Schaltfläche.  
  
 Die <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> Eigenschaft gibt an, ein Ausdruck, der verwendet wird, um Daten zu filtern, die von der Methode abgerufen werden, die angegeben wird die <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> Eigenschaft. Platzhalter für Parameter, die an die Parameter, die ausgewertet werden in enthaltenen verwendet die <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> Auflistung. In diesem Beispiel wird die Parameterplatzhalter durch einfache Anführungszeichen begrenzt, da der Typ des Parameters ein Zeichenfolgentyp ist, der Leerzeichen enthalten kann. Wenn der Typ des Parameters einen Typ numerisch oder Datum ist, sind die umgebenden Anführungszeichen nicht erforderlich.  
  
> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/objds9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/objds9vb.aspx#1)]  
  
 Das folgende Codebeispiel enthält ein Beispiel für ein Geschäftsobjekt mit mittlerer Ebene, die im vorherigen Codebeispiel verwendet. Im Codebeispiel besteht aus zwei einfachen Klassen:  
  
-   Die `EmployeeLogic` -Klasse, die eine Klasse ist, die Geschäftslogik kapselt.  
  
-   Die `NorthwindEmployee` Klasse, die eine Modellklasse, die nur die grundlegende Funktionen enthält, die zum Laden und Beibehalten von Daten aus der Datenebene erforderlich ist.  
  
 Der Einfachheit halber die `EmployeeLogic` Klasse erstellt einen statischen Satz von Daten, anstatt zum Abrufen der Daten aus der Datenebene. Es ist auch in diesem Beispiel hilfreich, da Sie den vollständigen Namen eines Mitarbeiters Northwind Traders Filtern veranschaulicht Bereitstellen des Beispiels verwendet. Ein vollständiges Beispiel funktioniert müssen Sie kompilieren und diese Klassen verwenden, die Web Forms-Codebeispiele, die bereitgestellt werden.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/northwindemployee9.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/northwindemployee9.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Die <see cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" />-Eigenschaft wurde festgelegt, und die <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />-Methode gibt nicht <see cref="T:System.Data.DataSet" /> oder <see cref="T:System.Data.DataTable" /> zurück.</exception>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Filtering" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="Filtering">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler Filtering;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler Filtering" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Filtering" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Filtering As ObjectDataSourceFilteringEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceFilteringEventHandler ^ Filtering;" />
      <MemberSignature Language="F#" Value="member this.Filtering : System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler " Usage="member this.Filtering : System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt vor einem Filtervorgang auf.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Behandeln der <xref:System.Web.UI.WebControls.ObjectDataSource.Filtering> Ereignis, um die Überprüfung von Parameterwerten filtern, bevor Sie Vorgänge der <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement führt eine Filter-Operation. Sie können den ausgewählten Vorgang abbrechen, indem Sie die Einstellung der <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> Eigenschaft der <xref:System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs> zu `true`. Das Ereignis wird ausgelöst, wenn nur die <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> festgelegt wird.  
  
 Die <xref:System.Web.UI.WebControls.ObjectDataSource.Filtering?displayProperty=nameWithType> Ereignis delegiert an die <xref:System.Web.UI.WebControls.ObjectDataSourceView.Filtering?displayProperty=nameWithType> Ereignis die <xref:System.Web.UI.WebControls.ObjectDataSourceView> zugeordnete der <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement.  
  
> [!IMPORTANT]
>  Sie sollten alle Filterwert für den Parameter überprüfen, die Sie vom Client empfangen. Die Runtime einfach ersetzt den Wert des Parameters im Filterausdruck und wendet ihn auf die <xref:System.Data.DataSet> oder <xref:System.Data.DataTable> von zurückgegebene Objekt der <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Methode. Bei Verwendung der <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> -Eigenschaft, wie eine Sicherheitsmaßnahme, um die Anzahl der Elemente, die zurückgegeben werden, Sie müssen die Werte der Parameter überprüfen, bevor die Filterung erfolgt.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="FilterParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection FilterParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection FilterParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilterParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ FilterParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FilterParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.ObjectDataSource.FilterParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Auflistung von Parametern ab, die beliebigen Parameterplatzhaltern in der <see cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" />-Zeichenfolge zugeordnet sind.</summary>
        <value>Eine <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> mit einer Reihe von Parametern, die beliebigen Parameterplatzhaltern in der <see cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" />-Eigenschaft zugeordnet sind.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement unterstützt das Filtern von Daten nur dann, wenn die <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Methode gibt eine <xref:System.Data.DataSet> oder <xref:System.Data.DataTable> Objekt.  
  
 Die Syntax, die verwendet wird, für die <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> ist ein Formatzeichenfolge-Ausdruck. Die Syntax der Filter-Ausdruck wird die gleiche Syntax, die vom akzeptiert wird die <xref:System.Data.DataColumn.Expression%2A> Eigenschaft. Wenn Sie Parameter zum Hinzufügen der <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> -Auflistung, Sie können auch Platzhalter für Formatzeichenfolgen einschließen. Beispielsweise enthalten `"{0}"` im Ausdruck als Ersatz für die Parameterwerte. Die Platzhalter werden entsprechend dem Index des Parameters im ersetzt die <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> Auflistung.  
  
 Sie können Parameter einschließen, die <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> Eigenschaft. Wenn der Parameter ein Zeichenfolgen- oder Zeichenarray, muss er in einfache Anführungszeichen ein. Anführungszeichen sind nicht erforderlich, wenn der Parameter ein numerischer Typ ist.  
  
 Die <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> -Eigenschaft ruft die <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A> -Eigenschaft, die enthalten sind die <xref:System.Web.UI.WebControls.ObjectDataSourceView> -Objekt, das zugeordnet ist die <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement.  
  
   
  
## Examples  
 Dieser Abschnitt enthält zwei Codebeispiele. Im ersten Codebeispiel wird veranschaulicht, wie zum Anzeigen von gefilterter Daten, die mit einer <xref:System.Web.UI.WebControls.ObjectDataSource> Objekt zum Abrufen von Daten aus einem Geschäftsobjekt der mittleren Ebene und einem <xref:System.Web.UI.WebControls.GridView> Steuerelement zum Anzeigen der Ergebnisse. Das zweite Codebeispiel enthält ein Beispiel für ein Geschäftsobjekt mit mittlerer Ebene, die im ersten Codebeispiel verwendet wird.  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Anzeigen von gefilterter Daten, die mit einer <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement zum Abrufen von Daten aus einem Geschäftsobjekt der mittleren Ebene und einem <xref:System.Web.UI.WebControls.GridView> Steuerelement zum Anzeigen der Ergebnisse. Die <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement kann die Daten filtern, nur, wenn die Methode, die Daten abruft, die als Ruft ab eine <xref:System.Data.DataSet> oder <xref:System.Data.DataTable> Objekt. Aus diesem Grund die <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> identifiziert eine Geschäftsobjektmethode aus, die Daten als abruft eine <xref:System.Data.DataSet>.  
  
 Im Codebeispiel besteht aus einer <xref:System.Web.UI.WebControls.TextBox> -Steuerelement, ein <xref:System.Web.UI.WebControls.GridView> -Steuerelement die <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement, und ein **senden** Schaltfläche. In der Standardeinstellung die <xref:System.Web.UI.WebControls.TextBox> wird mit den Namen einer der Mitarbeiter Northwind Traders aufgefüllt. Die <xref:System.Web.UI.WebControls.GridView> zeigt Informationen über die Mitarbeiter, die durch den Namen in identifiziert wird die <xref:System.Web.UI.WebControls.TextBox>. Zum Abrufen von Daten auf einem anderen Mitarbeiter in der <xref:System.Web.UI.WebControls.TextBox>, geben Sie den vollständigen Namen des Mitarbeiters, und klicken Sie dann auf die **senden** Schaltfläche.  
  
 Die <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> Eigenschaft gibt an, ein Ausdruck, der verwendet wird, um Daten zu filtern, die von abgerufen wird die <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> Eigenschaft. Platzhalter für Parameter, die an die Parameter, die ausgewertet werden in enthaltenen verwendet die <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> Auflistung. In diesem Beispiel wird die Parameterplatzhalter durch einfache Anführungszeichen begrenzt, da der Typ des Parameters ein Zeichenfolgentyp ist, der Leerzeichen enthalten kann. Wenn der Typ des Parameters einen Typ numerisch oder Datum ist, sind die umgebenden Anführungszeichen nicht erforderlich. Die <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> Auflistung enthält einen Parameter, eine <xref:System.Web.UI.WebControls.FormParameter> -Objekt, das gebunden ist die <xref:System.Web.UI.WebControls.TextBox> Steuerelement.  
  
> [!IMPORTANT]
>  Sie sollten alle Filterwert für den Parameter überprüfen, die Sie vom Client empfangen. Die Runtime einfach ersetzt den Wert des Parameters im Filterausdruck und wendet ihn auf die <xref:System.Data.DataView> von zurückgegebene Objekt der <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Methode. Bei Verwendung der <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> -Eigenschaft, wie eine Sicherheitsmaßnahme, um die Anzahl der Elemente, die zurückgegeben werden, Sie müssen die Werte der Parameter überprüfen, bevor die Filterung erfolgt.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/objds9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/objds9vb.aspx#1)]  
  
 Das folgende Codebeispiel enthält ein Beispiel für ein Geschäftsobjekt mit mittlerer Ebene, die im vorherigen Codebeispiel verwendet. Im Codebeispiel besteht aus zwei einfachen Klassen:  
  
-   Die `EmployeeLogic` -Klasse, die eine Klasse ist, die Geschäftslogik kapselt.  
  
-   Die `NorthwindEmployee` Klasse, die eine Modellklasse, die nur die grundlegende Funktionen enthält, die zum Laden und Beibehalten von Daten aus der Datenebene erforderlich ist.  
  
 Der Einfachheit halber die `EmployeeLogic` Klasse erstellt einen statischen Satz von Daten, anstatt zum Abrufen der Daten aus der Datenebene. Es ist auch in diesem Beispiel hilfreich, da Sie den vollständigen Namen eines Mitarbeiters Northwind Traders Filtern veranschaulicht Bereitstellen des Beispiels verwendet. Ein vollständiges Beispiel funktioniert müssen Sie kompilieren und diese Klassen verwenden, die Web Forms-Codebeispiele, die bereitgestellt werden.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/northwindemployee9.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/northwindemployee9.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Sie können die <see cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" />-Eigenschaft festlegen, sodass die <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />-Methode nicht <see cref="T:System.Data.DataSet" /> oder <see cref="T:System.Data.DataTable" /> zurückgibt.</exception>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Filtering" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="GetView">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.DataSourceView GetView (string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.DataSourceView GetView(string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.GetView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetView (viewName As String) As DataSourceView" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::DataSourceView ^ GetView(System::String ^ viewName);" />
      <MemberSignature Language="F#" Value="override this.GetView : string -&gt; System.Web.UI.DataSourceView" Usage="objectDataSource.GetView viewName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewName">Der Name der abzurufenden Ansicht. Da die <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> nur eine Ansicht unterstützt, wird <paramref name="viewName" /> ignoriert.</param>
        <summary>Ruft die benannte Datenquellenansicht ab, die dem Datenquellen-Steuerelement zugeordnet ist.</summary>
        <returns>Die <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> mit dem Namen <see langword="DefaultView" />, die der <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> zugeordnet ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement unterstützt nur eine Datenquellensicht an. Wie bei allen Datenquellensicht-Objekte, die <xref:System.Web.UI.WebControls.ObjectDataSourceView> verknüpft mit den Daten-Datenquellen-Steuerelement definiert die Fähigkeiten, führt die Aufgaben, die zum Abrufen von Daten aus dem zugrunde liegenden Datenspeicher und führt Vorgänge wie Sortieren ausführen, Einfügen, löschen und aktualisieren.  
  
 Die <xref:System.Web.UI.WebControls.ObjectDataSource.GetView%2A> Methode soll von datengebundenen Steuerelementen, aufgerufen werden nicht durch den Code der Seite.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Der angegebene <paramref name="viewName" /> ist <see langword="null" /> oder weicht von <see langword="DefaultView" /> ab.</exception>
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSourceView" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.GetViewNames" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="GetViewNames">
      <MemberSignature Language="C#" Value="protected override System.Collections.ICollection GetViewNames ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.ICollection GetViewNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.GetViewNames" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetViewNames () As ICollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::ICollection ^ GetViewNames();" />
      <MemberSignature Language="F#" Value="override this.GetViewNames : unit -&gt; System.Collections.ICollection" Usage="objectDataSource.GetViewNames " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft eine Auflistung von Namen ab, die die Liste der dem <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />-Objekt zugeordneten Ansichtsobjekte darstellt.</summary>
        <returns>Eine <see cref="T:System.Collections.ICollection" />, die die Namen der Ansichten enthält, die der <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> zugeordnet sind.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement unterstützt nur eine Ansicht, mit dem Namen `DefaultView`, auf die zugrunde liegenden Daten. Die <xref:System.Web.UI.WebControls.ObjectDataSource.GetViewNames%2A> -Methode gibt eine Auflistung der einem Element mit diesem Namen einer Ansicht.  
  
 Die <xref:System.Web.UI.WebControls.ObjectDataSource.GetViewNames%2A> Methode soll von datengebundenen Steuerelementen, aufgerufen werden nicht durch den Code der Seite.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.GetView(System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public int Insert ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Insert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Insert();" />
      <MemberSignature Language="F#" Value="member this.Insert : unit -&gt; int" Usage="objectDataSource.Insert " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Führt einen Einfügevorgang durch Aufrufen der von der <see cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" />-Eigenschaft angegebenen Methode mit sämtlichen Parametern in der <see cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />-Auflistung aus.</summary>
        <returns>Ein Wert, der die Anzahl der im zugrunde liegenden Datenspeicher eingefügten Zeilen darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vor der <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> Vorgang ausgeführt wird, die <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting%2A> aufgerufen, um das Auslösen der <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> Ereignis. Können Sie behandeln die <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> Ereignis, um die Werte der Parameter überprüfen und Ausführen der vorverarbeitung vor einem <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> Vorgang. Zum Ausführen eines Insert-Vorgangs, der <xref:System.Web.UI.WebControls.ObjectDataSourceView> Objekt verwendet Reflektion, um eine Instanz des Objekts zu erstellen, die durch identifiziert wird die <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> Eigenschaft. Es ruft dann die Methode, die durch identifiziert wird die <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> Eigenschaft unter Verwendung aller zugeordneten <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> Eigenschaften. Nach der <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> Vorgang abgeschlossen ist, die <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted%2A> aufgerufen, um das Auslösen der <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted> Ereignis. Können Sie behandeln die <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted> Ereignis, um Rückgabe von Werten, Ausgabeparameter und Ausnahmen zu untersuchen, und klicken Sie auf die nach der Verarbeitung auszuführen.  
  
 Die <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> Methode delegiert an die <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> -Methode der der <xref:System.Web.UI.WebControls.ObjectDataSourceView> zugeordnete der <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement.  
  
 Weitere Informationen zum Zusammenführen von Parametern, Lebensdauer und methodenauflösung finden Sie unter <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>.  
  
## <a name="data-bound-controls"></a>Datengebundene Steuerelemente  
 Wenn die <xref:System.Web.UI.WebControls.ObjectDataSource> -Objekt mit einem datengebundenen Steuerelement verknüpft ist, z. B. die <xref:System.Web.UI.WebControls.GridView> -Steuerelement, es ist nicht erforderlich, rufen Sie die <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> aus Code der Seite. Die <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> Methode wird stattdessen direkt vom datengebundenen Steuerelement aufgerufen.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/a806fa2c-fe6a-405f-869c-74e804a642ea">Exemplarische Vorgehensweise: Datenbindung an ein benutzerdefiniertes Geschäftsobjekt</related>
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="Inserted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Inserted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Inserted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Inserted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserted As ObjectDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceStatusEventHandler ^ Inserted;" />
      <MemberSignature Language="F#" Value="member this.Inserted : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " Usage="member this.Inserted : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn ein <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />-Vorgang abgeschlossen wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Behandeln der <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted> Ereignis, um die Werte für einen Rückgabewert oder Ausgabeparameter zu überprüfen oder um festzustellen, ob eine Ausnahme ausgelöst wurde, nachdem ein <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> Vorgang wurde abgeschlossen. Der Rückgabewert Output-Parameter und Eigenschaften für die Ausnahmebehandlung stehen über die <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> Objekt, das dem Ereignis zugeordnet ist.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Inserting" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="Inserting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Inserting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Inserting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Inserting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserting As ObjectDataSourceMethodEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceMethodEventHandler ^ Inserting;" />
      <MemberSignature Language="F#" Value="member this.Inserting : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " Usage="member this.Inserting : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt vor einem <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />-Vorgang ein.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Behandeln der <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> Ereignis, um zusätzliche Initialisierung auszuführen, die spezifisch für Ihre Anwendung, die zum Überprüfen der Werte der Parameter oder die Werte der Parameter vor dem Ändern der <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement den Einfügevorgang ausführt. Die Parameter sind verfügbar, als ein <xref:System.Collections.IDictionary> -Auflistung, die von erfolgt der <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> -Eigenschaft, die verfügbar gemacht werden die <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> Objekt.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Dieser Abschnitt enthält zwei Codebeispiele. Im ersten Codebeispiel wird veranschaulicht, wie Sie mit einer <xref:System.Web.UI.WebControls.ObjectDataSource> Objekt mit einem Geschäftsobjekt und <xref:System.Web.UI.WebControls.DetailsView> Steuerelement zum Einfügen von Daten. Das zweite Codebeispiel enthält ein Beispiel für das Geschäftsobjekt mit mittlerer Ebene, das im ersten Codebeispiel verwendet wird.  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit einem <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement mit einem Geschäftsobjekt und <xref:System.Web.UI.WebControls.DetailsView> Steuerelement zum Einfügen von Daten. Zunächst die <xref:System.Web.UI.WebControls.DetailsView> zeigt ein neues `NorthwindEmployee` aufzeichnen, zusammen mit einer automatisch generierten **einfügen** Schaltfläche. Nach der Eingabe von Daten in die Felder der <xref:System.Web.UI.WebControls.DetailsView> steuern, klicken Sie auf die **einfügen** Schaltfläche. Die <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> Eigenschaft identifiziert, welche Methode den Einfügevorgang ausführt.  
  
 In diesem Beispiel die `UpdateEmployeeInfo` Methode wird verwendet, um einen Insert auszuführen; sie erfordert jedoch eine `NorthwindEmployee` Parameter zum Einfügen der Daten. Aus diesem Grund die Auflistung von Zeichenfolgen, die die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement übergibt automatisch reicht nicht aus. Die `NorthwindEmployeeInserting` Delegat ist ein <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler> Objekt, das behandelt die <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> Ereignis und ermöglicht es Ihnen, die Eingabeparameter vor dem Bearbeiten der <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> ausgeführt wird. Da die `UpdateEmployeeInfo` Methode erfordert eine `NorthwindEmployee` -Objekt als Parameter eine wird mit die Auflistung von Zeichenfolgen erstellt und hinzugefügt wird die <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> Sammlung mit einem Parameternamen (`ne`), die von die Methode erwartet. Sie können die obigen Schritte ausführen, bei Verwendung ein vorhandenes Objekts der mittleren Ebene als eine Datenquelle mit Typen und Methoden, die keine speziell zur Verwendung mit der <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement.  
  
 Wenn die <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> Vorgang ausgeführt wird, die Methode, die durch identifiziert wird die <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> -Eigenschaft aufgerufen wird. Wenn die `Insert` -Methode des Objekts wurde die Signatur einer Methode, die Parameter enthält die <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> Auflistung muss einen Parameter mit Namen, die die Methodenparameter für die Signatur für entsprechen enthalten die <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> Methode erfolgreich abgeschlossen.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/objds4cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/objds4vb.aspx#1)]  
  
 Das folgende Codebeispiel enthält ein Beispiel für ein Geschäftsobjekt mit mittlerer Ebene, die im vorherigen Codebeispiel verwendet. Im Codebeispiel besteht aus zwei einfachen Klassen:  
  
-   Die `EmployeeLogic` Klasse, die einen zustandsfreie-Klasse, die Geschäftslogik kapselt.  
  
-   Die `NorthwindEmployee` Klasse, die eine Modellklasse, die nur die grundlegende Funktionen enthält, die zum Laden und Beibehalten von Daten aus der Datenebene erforderlich ist.  
  
 Ein zusätzliches `NorthwindDataException` Klasse bereitgestellt wird. Ein vollständiges Beispiel funktioniert müssen Sie kompilieren und diese Klassen verwenden. Die `UpdateEmployeeInfo` Methode ist nicht vollständig implementiert, sodass keine Daten in der Datenbank Northwind Traders eingefügt werden, wenn Sie in diesem Beispiel experimentieren.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/northwindemployee4.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/northwindemployee4.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Inserted" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="InsertMethod">
      <MemberSignature Language="C#" Value="public string InsertMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InsertMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InsertMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertMethod : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.InsertMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Methode oder Funktion ab, die vom <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />-Steuerelement zum Einfügen von Daten aufgerufen wird, oder legt diese fest.</summary>
        <value>Eine Zeichenfolge, die den Namen der Methode oder der Funktion darstellt, mit deren Hilfe die <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> Daten einfügt. Der Standardwert ist eine leere Zeichenfolge ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das Geschäftsobjekt, das wird davon ausgegangen, dass Datensätze zu einem Zeitpunkt, anstatt in einem Batch eingefügt.  
  
 Die <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> -Eigenschaft delegiert an die <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> Eigenschaft der <xref:System.Web.UI.WebControls.ObjectDataSourceView> -Objekt, das zugeordnet ist die <xref:System.Web.UI.WebControls.ObjectDataSource> Objekt.  
  
## <a name="object-lifetime"></a>Lebensdauer eines Objekts  
 Die Methode, die durch identifiziert wird die <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> Eigenschaft kann eine Instanzmethode sein oder ein `static` (`Shared` in Visual Basic) Methode. Wenn sie eine Instanzmethode ist, wird erstellt und zerstört wird jedes Mal die Methode angegeben werden, das Geschäftsobjekt, das die <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> -Eigenschaft aufgerufen wird. Können Sie behandeln die <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> und <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> Ereignisse mit das Geschäftsobjekt, das vor der <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> -Eigenschaft aufgerufen wird. Sie können auch behandeln die <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> Ereignis, nach der Methode ausgelöst wird, die angegeben wird, die <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> -Eigenschaft aufgerufen wird. Wenn das Geschäftsobjekt, das implementiert die <xref:System.IDisposable> -Schnittstelle, die <xref:System.IDisposable.Dispose%2A> Methode wird aufgerufen, bevor das Objekt zerstört wird. Wenn die Methode `static` (`Shared` in Visual Basic), das Geschäftsobjekt, das nie erstellt, und Sie nicht behandeln die <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>, <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>, und <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> Ereignisse.  
  
## <a name="parameter-merging"></a>Zusammenführen von Parametern  
 Parameter werden hinzugefügt, um die <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> Auflistung aus drei Quellen:  
  
-   Aus dem datengebundenen Steuerelement, zur Laufzeit.  
  
-   Von der `InsertParameters` -Element deklarativ.  
  
-   Von der `Inserting` Methode programmgesteuert.  
  
 Zuerst werden alle Parameter, die von datengebundenen Steuerelementen generiert werden hinzugefügt, um die <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> Auflistung. Z. B. wenn die <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement gebunden ist, eine <xref:System.Web.UI.WebControls.GridView> Steuerelement, das die Spalten `Name` und `Number`, die Parameter für `Name` und `Number` der Auflistung hinzugefügt werden. Der Datentyp dieser Parameter ist `string`. Anschließend wird die Parameter, die in aufgeführt sind die `InsertParameters` Element hinzugefügt werden. Wenn ein Parameter in der `InsertParameters` Element gefunden wird, mit dem gleichen Namen wie ein Parameter, der bereits vorhanden ist die <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> vorhandenen Parameters-Auflistung wird geändert, um mit dem Parameter überein, die im angegebenen die `InsertParameters` Element. In der Regel wird dies verwendet, um den Typ der Daten in den Parameter zu ändern. Schließlich können Sie programmgesteuert hinzufügen und entfernen Sie die Parameter in der <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> -Ereignis, das vor der <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> -Methode ausgeführt wird. Die Methode wird aufgelöst, nachdem die Parameter zusammengeführt werden. Methodenauflösung wird im nächsten Abschnitt erläutert.  
  
> [!IMPORTANT]
>  Sie sollten alle Parameterwert überprüfen, die Sie vom Client empfangen. Die Laufzeit einfach ersetzt den Wert des Parameters in der <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> Eigenschaft.  
  
## <a name="method-resolution"></a>Methodenauflösung  
 Wenn die <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> -Methode aufgerufen wird, werden die Datenfelder aus dem datengebundenen Steuerelement, die Parameter, die deklarativ bei erstellt wurden die `InsertParameters` Element, und die Parameter, die in hinzugefügt wurden die <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> -Ereignishandler werden zusammengeführt. (Weitere Informationen finden Sie im vorherigen Abschnitt.) Die <xref:System.Web.UI.WebControls.ObjectDataSource> -Objekt versucht dann, eine aufzurufende Methode zu suchen. Es sucht zuerst für eine oder mehrere Methoden mit dem angegebenen Namen, in der <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> Eigenschaft. Wenn keine Übereinstimmung gefunden wird, eine <xref:System.InvalidOperationException> Ausnahme ausgelöst. Wenn eine Übereinstimmung gefunden wird, sucht es nach übereinstimmende Parameternamen. Nehmen wir beispielsweise an einen Typ, der angegeben wird die <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> Eigenschaft verfügt über zwei Methoden namens `InsertARecord`. Eine `InsertARecord` verfügt über einen Parameter `ID`, und die andere `InsertARecord` verfügt über zwei Parameter, `Name` und `Number`. Wenn die <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> Auflistung hat nur einen Parameter mit dem Namen `ID`, die `InsertARecord` -Methode mit lediglich die `ID` Parameter aufgerufen wird. Der Typ des Parameters wird nicht beim Auflösen der Methoden überprüft. Die Reihenfolge der Parameter spielt keine Rolle.  
  
 Wenn die <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> Eigenschaft festgelegt ist, wird die Methode auf andere Weise aufgelöst. Die <xref:System.Web.UI.WebControls.ObjectDataSource> sucht nach einer Methode mit dem angegebenen Namen, in der <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> -Eigenschaft, die einen Parameter des Typs, der verwendet wird angegeben, der <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> Eigenschaft. In diesem Fall spielt der Namen des Parameters keine Rolle.  
  
   
  
## Examples  
 Dieser Abschnitt enthält zwei Codebeispiele. Im ersten Codebeispiel wird veranschaulicht, wie Sie mit einer <xref:System.Web.UI.WebControls.ObjectDataSource> Objekt mit einem Geschäftsobjekt und <xref:System.Web.UI.WebControls.DetailsView> Steuerelement zum Einfügen von Daten. Das zweite Codebeispiel enthält ein Beispiel für das Geschäftsobjekt mit mittlerer Ebene, das im ersten Codebeispiel verwendet wird.  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit einem <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement mit einem Geschäftsobjekt und <xref:System.Web.UI.WebControls.DetailsView> Steuerelement zum Einfügen von Daten. Zunächst die <xref:System.Web.UI.WebControls.DetailsView> zeigt ein neues `NorthwindEmployee` aufzeichnen, zusammen mit einer automatisch generierten **einfügen** Schaltfläche. Nach der Eingabe von Daten in die Felder der <xref:System.Web.UI.WebControls.DetailsView> steuern, klicken Sie auf die **einfügen** Schaltfläche. Die <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> Eigenschaft identifiziert, welche Methode den Einfügevorgang ausführt.  
  
 In diesem Beispiel die `UpdateEmployeeInfo` Methode wird verwendet, um einen Insert auszuführen; sie erfordert jedoch eine `NorthwindEmployee` Parameter zum Einfügen der Daten. Aus diesem Grund die Auflistung von Zeichenfolgen, die die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement übergibt automatisch reicht nicht aus. Die `NorthwindEmployeeInserting` Delegat ist ein <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler> Objekt, das behandelt die <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> Ereignis und ermöglicht es Ihnen, die Eingabeparameter vor dem Bearbeiten der <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> ausgeführt wird. Da die `UpdateEmployeeInfo` Methode erfordert eine `NorthwindEmployee` -Objekt als Parameter eine wird mit die Auflistung von Zeichenfolgen erstellt und hinzugefügt wird die <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> Sammlung mit einem Parameternamen (`ne`), die von die Methode erwartet. Sie können die obigen Schritte ausführen, bei Verwendung ein vorhandenes Objekts der mittleren Ebene als eine Datenquelle mit Typen und Methoden, die keine speziell zur Verwendung mit der <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement.  
  
 Wenn die <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> Vorgang ausgeführt wird, die Methode, die durch identifiziert wird die <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> -Eigenschaft aufgerufen wird. Wenn die `Insert` -Methode des Objekts wurde die Signatur einer Methode, die Parameter enthält die <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> Auflistung muss einen Parameter mit Namen, die die Methodenparameter für die Signatur für entsprechen enthalten die <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> Methode erfolgreich abgeschlossen.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/objds4cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/objds4vb.aspx#1)]  
  
 Das folgende Codebeispiel enthält ein Beispiel für ein Geschäftsobjekt mit mittlerer Ebene, die im vorherigen Codebeispiel verwendet. Im Codebeispiel besteht aus zwei einfachen Klassen:  
  
-   Die `EmployeeLogic` Klasse, die einen zustandsfreie-Klasse, die Geschäftslogik kapselt.  
  
-   Die `NorthwindEmployee` Klasse, die eine Modellklasse, die nur die grundlegende Funktionen enthält, die zum Laden und Beibehalten von Daten aus der Datenebene erforderlich ist.  
  
 Ein zusätzliches `NorthwindDataException` Klasse bereitgestellt wird. Ein vollständiges Beispiel funktioniert müssen Sie kompilieren und diese Klassen verwenden. Die `UpdateEmployeeInfo` Methode ist nicht vollständig implementiert, sodass keine Daten in der Datenbank Northwind Traders eingefügt werden, wenn Sie in diesem Beispiel experimentieren.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/northwindemployee4.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/northwindemployee4.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=214011">Verwenden von Entitätsframework und das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="InsertParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection InsertParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection InsertParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InsertParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ InsertParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InsertParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Parameterauflistung ab, die die von der <see cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" />-Eigenschaft verwendeten Parameter enthält.</summary>
        <value>Eine <see cref="T:System.Web.UI.WebControls.ParameterCollection" />, die die Parameter enthält, die von der durch die <see cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" />-Eigenschaft angegebenen Methode verwendet werden.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Namen und Typen der Parameter, die in befinden die <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> Sammlung muss übereinstimmen, den Namen und Typen der Parameter, die in der <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> Signatur der Eigenschaft. Die Parameternamen werden Groß-/Kleinschreibung beachtet. Bei der Verwendung von datengebundenen Steuerelementen, die Parameter, wie z. B. Angeben der <xref:System.Web.UI.WebControls.GridView> und <xref:System.Web.UI.WebControls.DetailsView> -Steuerelemente, die <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement führt automatisch alle Parameter, die explizit in der Auflistung mit den Parametern angegeben werden, sind durch die vom datengebundenen Steuerelement bereitgestellt. Dies ist wichtig, da von datengebundenen Steuerelementen immer ihre Parameter wie den <xref:System.String> eingibt, und wenn die Methodensignatur numerische enthält oder Date-Typen, Sie explizit müssen enthalten einen Parameter in der <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> Auflistung mit den richtigen Typ. Andernfalls die <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement versucht, die Parameter entsprechend dem Typ umgewandelt werden, die von den Parametern in der Auflistung definiert ist. Weitere Informationen finden Sie unter [mithilfe von Parametern mit dem ObjectDataSource-Steuerelement](https://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4).  
  
 Die <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> -Eigenschaft ruft die <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A> -Eigenschaft, die enthalten sind die <xref:System.Web.UI.WebControls.ObjectDataSourceView> zugeordnete der <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement.  
  
 Weitere Informationen zum Zusammenführen von Parametern, Lebensdauer und methodenauflösung finden Sie unter <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>.  
  
   
  
## Examples  
 Dieser Abschnitt enthält zwei Codebeispiele. Im ersten Codebeispiel wird veranschaulicht, wie Sie mit einer <xref:System.Web.UI.WebControls.ObjectDataSource> Objekt mit einem Geschäftsobjekt und <xref:System.Web.UI.WebControls.DetailsView> Steuerelement zum Einfügen von Daten. Das zweite Codebeispiel stellt eine beispielimplementierung der `Insert` -Methode, die im ersten Codebeispiel verwendet wird.  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit einem <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement mit einem Geschäftsobjekt und <xref:System.Web.UI.WebControls.DetailsView> Steuerelement zum Einfügen von Daten. Zunächst die <xref:System.Web.UI.WebControls.DetailsView> zeigt Textfelder, die bei der Sie Daten für einen neuen eingeben können `NorthwindEmployee` aufzeichnen, zusammen mit einer automatisch generierten **einfügen** Schaltfläche. Nach der Eingabe von Daten in die Felder der <xref:System.Web.UI.WebControls.DetailsView> steuern, klicken Sie auf die **einfügen** Schaltfläche. Die <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> Eigenschaft identifiziert, welche Methode den Einfügevorgang ausführt.  
  
 Wenn Sie auf die **einfügen** Schaltfläche, der Vorgang erfolgt mithilfe der Methode, die angegeben wird die <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> -Eigenschaft und die im angegebenen Parameter die <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> Auflistung. In diesem Codebeispiel wird ein Parameter angegeben ist, der <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> -Auflistung, die der Supervisor ID entspricht. Dies ist da, obwohl die ID in angezeigt wird der <xref:System.Web.UI.WebControls.GridView.Rows%2A> Sammlung für die <xref:System.Web.UI.WebControls.DetailsView> steuern, wie eine <xref:System.Web.UI.WebControls.BoundField> Objekt ist, wird es als eine Zeichenfolge, die übergeben die <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement. Indem Sie ihn explizit auf Hinzufügen der <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> Sammlung mit eine <xref:System.Web.UI.WebControls.Parameter.Type%2A> -Eigenschaft auf festgelegt der <xref:System.TypeCode.Int32> Wert es übergeben ordnungsgemäß durch die <xref:System.Web.UI.WebControls.ObjectDataSource> als an die Methode ein <xref:System.Int32>und nicht als Zeichenfolge.  
  
 Wenn die <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> Vorgang ausgeführt wird, die Methode, die durch identifiziert wird die <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> -Eigenschaft aufgerufen wird. Wenn die <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> -Methode des Objekts wurde die Signatur einer Methode, die Parameter enthält die <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> Auflistung muss enthalten Parameter, deren Namen, die die Methodenparameter für die Signatur für entsprechen den <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> Methode erfolgreich abgeschlossen.  
  
> [!IMPORTANT]
>  Sie sollten alle Parameterwert überprüfen, die Sie vom Client empfangen. Die Laufzeit einfach ersetzt den Wert des Parameters in der <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> Eigenschaft.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_8#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_8/CS/objds8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_8#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_8/VB/objds8vb.aspx#1)]  
  
 Das folgende Codebeispiel stellt eine beispielimplementierung der `Insert` Methode, die im vorherigen Codebeispiel verwendet. Die `InsertNewEmployeeWrapper` -Methode wurde der `EmployeeLogic` Middle-Tier-Objekt, das bereitgestellt wird die <xref:System.Web.UI.WebControls.ObjectDataSource> Übersicht über die Klasse so aktivieren Sie das Objekt, das Arbeiten mit der <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement-Szenarien, ohne erhebliche Neuschreiben des tatsächlichen Geschäftslogik.  
  
 Um das Beispiel auszuführen, benötigen Sie die `NorthwindEmployee` -Klasse, die bereitgestellt wird die <xref:System.Web.UI.WebControls.ObjectDataSource> Übersicht über die Klasse. Dieses Beispiel veranschaulicht nur die Verbindung der <xref:System.Web.UI.WebControls.ObjectDataSource> auf eine Business-Objekt-Methode, die Daten für einen neuen Datenbankdatensatz abruft, indem Sie Parameter. Im Beispiel werden Einträge nicht in der Datenbank hinzugefügt werden, da die `Save` Methode der `NorthwindEmployee` Klasse enthält keinen Code aus, um die Datenbank zu aktualisieren.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_8#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_8/CS/northwindemployee8.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_8#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_8/VB/northwindemployee8.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="objectDataSource.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Ein Objekt, das die gespeicherten Ansichtszustandswerte für das Steuerelement enthält.</param>
        <summary>Lädt den zuvor gespeicherten Ansichtszustand des <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />-Steuerelements.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird in erster Linie durch die .NET Framework-Infrastruktur verwendet und nicht direkt aus Ihrem Code verwendet werden soll. Allerdings können Entwickler von Steuerelementen außer Kraft setzen diese Methode, um anzugeben, wie ein benutzerdefiniertes Serversteuerelement seinen Ansichtszustand wiederherstellt. Weitere Informationen finden Sie unter [ASP.NET State Management Overview](https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)).  
  
 Die <xref:System.Web.UI.WebControls.ObjectDataSource.LoadViewState%2A> Methode wird verwendet, um den zuvor gespeicherten Ansichtszustand des laden die <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Die <see cref="M:System.Web.UI.WebControls.ObjectDataSource.LoadViewState(System.Object)" /> Methode wird hauptsächlich von Steuerelemententwicklern verwendet, wenn die Erweiterung der <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> Steuerelement.</para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="MaximumRowsParameterName">
      <MemberSignature Language="C#" Value="public string MaximumRowsParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MaximumRowsParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumRowsParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MaximumRowsParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumRowsParameterName : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("maximumRows")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen des Datenabruf-Methodenparameters für Geschäftsobjekte ab, mit dem die Anzahl der Datensätze angegeben wird, die für die Unterstützung des Datenquellen-Paging abgerufen werden, oder legt diesen fest.</summary>
        <value>Der Name des <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />-Parameters, mit dem die Anzahl der abzurufenden Datensätze angegeben wird. Der Standardwert ist <c>"MaximumRows"</c>.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> Eigenschaft wird verwendet, um die Datenquellen-Paging unterstützt. Informationen über die Unterstützung von Paging durch die <xref:System.Web.UI.WebControls.ObjectDataSource> steuern, finden Sie unter <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>.  
  
 Die <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> -Eigenschaft delegiert an die <xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName%2A> Eigenschaft der <xref:System.Web.UI.WebControls.ObjectDataSourceView> -Objekt, das zugeordnet ist die <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement.  
  
   
  
## Examples  
 Die folgenden drei Beispiele zeigen eine Webseite, eine Code-Behind-Seite-Klasse und eine Datenzugriffs-Klasse, mit denen Benutzer auswählen, wie viele Datensätze auf der Seite angezeigt werden.  
  
 Die Webseite enthält ein <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement, dessen <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> -Eigenschaftensatz auf `true`. Die <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> -Eigenschaftensatz auf den Namen einer Methode, die die Gesamtzahl der Datensätze in der Abfrage zurückgibt. Die <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> Eigenschaft und die <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> Eigenschaft festgelegt werden, den Namen der Parameter, die in der Select-Methode verwendet werden. Die Seite enthält außerdem eine <xref:System.Web.UI.WebControls.DropDownList> Steuerelement.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx#1)]  
  
 Das zweite Beispiel zeigt einen Handler für die <xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged?displayProperty=nameWithType> Ereignis die <xref:System.Web.UI.WebControls.DropDownList> Steuerelement. Der Code in den Handler für die <xref:System.Web.UI.WebControls.GridView.PageSize%2A> Eigenschaft, um die Auswahl des Benutzers.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx.vb#2)]  
  
 Das dritte Beispiel zeigt die Data Access-Klasse, die Daten aus der Customers-Tabelle abruft. Es enthält eine Methode mit dem Namen `GetSubsetOfEmployees`, zugewiesen die <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> Eigenschaft der <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement. Das Beispiel enthält auch eine Methode namens `GetEmployeeCount`, zugewiesen die <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> Eigenschaft der <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement. Die Klasse verwendet LINQ zum Abfragen der Customers-Tabelle. Das Beispiel erfordert eine LINQ to SQL-Klasse, die Northwind-Datenbank und Tabelle "Customers" darstellt. Weitere Informationen finden Sie unter [Vorgehensweise: Erstellen von LINQ to SQL-Klassen in einem Webprojekt](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/App_Code/CustomerLogic.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/App_Code/CustomerLogic.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanPage" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="ObjectCreated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ObjectCreated As ObjectDataSourceObjectEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceObjectEventHandler ^ ObjectCreated;" />
      <MemberSignature Language="F#" Value="member this.ObjectCreated : System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler " Usage="member this.ObjectCreated : System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, nachdem das von der <see cref="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" />-Eigenschaft angegebene Objekt erstellt wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Behandeln der <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> Ereignis aufrufen, andere Methoden für ein Geschäftsobjekt, legen Sie Eigenschaften oder andere Initialisierungen, die für das Geschäftsobjekt, das vor dem Ausführen der <xref:System.Web.UI.WebControls.ObjectDataSource> -Objekt, ruft die Geschäftsobjektmethode Daten zum Ausführen eines Datenvorgangs . Ein Verweis auf das Objekt erfolgt durch die <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> -Eigenschaft, die verfügbar gemacht werden die <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> Objekt.  
  
 Wenn die Methode, die zum Ausführen von Datenvorgängen angegebene `static` (`Shared` in Visual Basic), die <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> und <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> Ereignisse werden nie ausgelöst.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="ObjectCreating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ObjectCreating As ObjectDataSourceObjectEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceObjectEventHandler ^ ObjectCreating;" />
      <MemberSignature Language="F#" Value="member this.ObjectCreating : System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler " Usage="member this.ObjectCreating : System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, bevor das von der <see cref="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" />-Eigenschaft angegebene Objekt erstellt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die Methode, die zum Ausführen von Datenvorgängen angegebene `static` (`Shared` in Visual Basic), die <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> und <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> Ereignisse werden nie ausgelöst.  
  
 Die <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement ruft automatisch den Standardkonstruktor eines Geschäftsobjekts zum Erstellen einer Instanz unter Verwendung der Reflektion. Behandeln der <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> Ereignis, um explizit einen anderen Konstruktor aufrufen, und legen Sie die Instanz des Objekts, das so die <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> Eigenschaft des zugeordneten <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> Objekt.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Dieser Abschnitt enthält zwei Codebeispiele. Im ersten Codebeispiel wird veranschaulicht, wie Sie mit einer <xref:System.Web.UI.WebControls.ObjectDataSource> Objekt mit einem Geschäftsobjekt und <xref:System.Web.UI.WebControls.GridView> -Steuerelement zum Anzeigen von Informationen. Das zweite Codebeispiel enthält das Geschäftsobjekt mit mittlerer Ebene, das im ersten Codebeispiel verwendet wird.  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit einer <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement mit einem Geschäftsobjekt und <xref:System.Web.UI.WebControls.GridView> -Steuerelement zum Anzeigen von Informationen. Möglicherweise arbeiten Sie mit einem Geschäftsobjekt, die ist sehr teuer (als Zeit oder Ressourcen) für jeden Datenvorgang zu erstellen, die Ihre Webseite ausführt. Eine Möglichkeit zum Arbeiten mit der ein teures Objekt ist möglicherweise eine Instanz davon einmal erstellen, und klicken Sie dann für nachfolgende Vorgänge, anstatt zu erstellen und zerstören für jeden Datenvorgang zwischengespeichert.  
  
> [!NOTE]
>  In einer produktionsanwendung möglicherweise mehrere Anforderungen gleichzeitig mithilfe der gleichen Instanz enden. Aus diesem Grund muss das Objekt in einer threadsicheren Weise implementiert werden.  
  
 Dieses Codebeispiel veranschaulicht dieses Muster. Können Sie behandeln die <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> Ereignis, überprüfen Sie zunächst den Cache für ein Objekt, und nur eine Instanz des Objekts, zu erstellen, wenn nicht bereits zwischengespeichert wurde. Behandeln Sie dann die <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> Ereignis Zwischenspeichern das Geschäftsobjekt, das für die zukünftige Verwendung, anstatt es zu löschen. In diesem Codebeispiel wird die <xref:System.ComponentModel.CancelEventArgs.Cancel?displayProperty=nameWithType> Eigenschaft der <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs> Objekt nastaven NA hodnotu `true` leiten die <xref:System.Web.UI.WebControls.ObjectDataSource> nicht aufrufen, <xref:System.IDisposable.Dispose%2A> Methode für das Objekt.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/CS/objds16cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/VB/objds16vb.aspx#1)]  
  
 Im folgenden Codebeispiel enthält das Beispiel-Geschäftsobjekt mittleren Ebene, das im vorherigen Codebeispiel verwendet. Im Codebeispiel wird ein grundlegender geschäftlicher-Objekt, das definiert, indem Sie besteht aus den `EmployeeLogic` -Klasse, die eine zustandsbehaftete Klasse ist, die Geschäftslogik kapselt. Ein vollständiges Beispiel für die Arbeit müssen Sie diesen Code als Bibliothek kompilieren und verwenden Sie diese Klassen von einer ASP.NET-Seite (.aspx-Datei) aus.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_16#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/CS/northwindemployee16.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_16#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/VB/northwindemployee16.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating(System.Web.UI.WebControls.ObjectDataSourceEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="ObjectDisposing">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler ObjectDisposing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler ObjectDisposing" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ObjectDisposing As ObjectDataSourceDisposingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceDisposingEventHandler ^ ObjectDisposing;" />
      <MemberSignature Language="F#" Value="member this.ObjectDisposing : System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler " Usage="member this.ObjectDisposing : System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, bevor das von der <see cref="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" />-Eigenschaft angegebene Objekt verworfen wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> Ereignis wird immer ausgelöst, bevor die Instanz des Geschäftsobjekts verworfen wird. Wenn das Geschäftsobjekt, das implementiert die <xref:System.IDisposable> -Schnittstelle, die <xref:System.IDisposable.Dispose%2A> Methode wird aufgerufen, nachdem dieses Ereignis ausgelöst wurde.  
  
 Behandeln der <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> Ereignis, um andere Methoden für das Objekt aufrufen Eigenschaften festlegen, oder führen Sie die Bereinigung, die spezifisch für das Objekt ist, bevor das Objekt zerstört wird. Ein Verweis auf das Objekt erfolgt durch die <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> -Eigenschaft, die verfügbar gemacht werden die <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> Objekt.  
  
 Bei Verwendung einer <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement mit einer LINQ to SQL-Klasse, müssen Sie Abbrechen, das Entfernen der Datenkontext Klasse in einem Ereignishandler für die <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> Ereignis. Dieser Schritt ist erforderlich, da LINQ to SQL unterstützt die verzögerten Ausführung, während die <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement versucht, die den Datenkontext nach den ausgewählten Vorgang freizugeben.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Dieser Abschnitt enthält zwei Codebeispiele. Im ersten Codebeispiel wird veranschaulicht, wie Sie mit einer <xref:System.Web.UI.WebControls.ObjectDataSource> Objekt mit einem Geschäftsobjekt und <xref:System.Web.UI.WebControls.GridView> -Steuerelement zum Anzeigen von Informationen. Das zweite Codebeispiel enthält das Geschäftsobjekt mit mittlerer Ebene, das im ersten Codebeispiel verwendet wird.  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit einer <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement mit einem Geschäftsobjekt und <xref:System.Web.UI.WebControls.GridView> -Steuerelement zum Anzeigen von Informationen. Möglicherweise arbeiten Sie mit einem Geschäftsobjekt, die ist sehr teuer (als Zeit oder Ressourcen) für jeden Datenvorgang zu erstellen, die Ihre Webseite ausführt. Eine Möglichkeit zum Arbeiten mit der ein teures Objekt ist möglicherweise eine Instanz davon einmal erstellen, und klicken Sie dann für nachfolgende Vorgänge, anstatt zu erstellen und zerstören für jeden Datenvorgang zwischengespeichert. Dieses Beispiel veranschaulicht dieses Muster. Können Sie behandeln die <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> Ereignis, überprüfen Sie zunächst den Cache für ein Objekt, und nur eine Instanz davon erstellen, wenn nicht bereits zwischengespeichert wurde. Behandeln Sie dann die <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> Ereignis Zwischenspeichern das Geschäftsobjekt, das für die zukünftige Verwendung, anstatt es zu löschen. In diesem Codebeispiel wird die <xref:System.ComponentModel.CancelEventArgs.Cancel?displayProperty=nameWithType> Eigenschaft der <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs> Objekt nastaven NA hodnotu `true` leiten die <xref:System.Web.UI.WebControls.ObjectDataSource> nicht aufrufen, die <xref:System.IDisposable.Dispose%2A> Methode für das Objekt.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/CS/objds16cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/VB/objds16vb.aspx#1)]  
  
 Im folgenden Codebeispiel enthält das Beispiel-Geschäftsobjekt mittleren Ebene, das im vorherigen Codebeispiel verwendet. Im Codebeispiel wird ein grundlegender geschäftlicher-Objekt, das definiert, indem Sie besteht aus den `EmployeeLogic` -Klasse, die eine zustandsbehaftete Klasse ist, die Geschäftslogik kapselt. Ein vollständiges Beispiel für die Arbeit müssen Sie diesen Code als Bibliothek kompilieren und verwenden Sie diese Klassen von einer ASP.NET-Seite (.aspx-Datei) aus.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_16#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/CS/northwindemployee16.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_16#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/VB/northwindemployee16.vb#2)]  
  
 Das folgende Beispiel zeigt, wie Sie behandelt die <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> Ereignis aus, wenn mit einer <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement mit einer LINQ to SQL-Klasse.  
  
```vb  
Public Sub ExampleObjectDisposing(ByVal sender As Object, _   
        ByVal e As ObjectDataSourceDisposingEventArgs)  
    e.Cancel = True  
End Sub  
```  
  
```csharp  
public void ExampleObjectDisposing(object sender,   
        ObjectDataSourceDisposingEventArgs e)  
{  
    e.Cancel = true;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="OldValuesParameterFormatString">
      <MemberSignature Language="C#" Value="public string OldValuesParameterFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OldValuesParameterFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property OldValuesParameterFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OldValuesParameterFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OldValuesParameterFormatString : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("{0}")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Formatzeichenfolge ab, die auf die Namen der Parameter für ursprüngliche Werte angewendet wird, die an die <see langword="Delete" />-Methode oder an die <see langword="Update" />-Methode übergeben werden, oder legt diese fest.</summary>
        <value>Eine Zeichenfolge, die eine Formatzeichenfolge darstellt, die auf die Namen beliebiger, an die <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />-Methode oder die <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />-Methode übergebener <paramref name="oldValues" />-Parameter oder Schlüsselparameter angewendet werden. Der Standardwert ist <c>"{0}"</c>, was bedeutet, dass der Parametername der Feldname ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Den Wert des der <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> Eigenschaft auf den primären Schlüssel nur angewendet wird, wie z. B. solche, die mit angegeben werden die `DataKeyNames` -Eigenschaft eines datengebundenen Steuerelements, oder klicken Sie in DELETE- und aktualisieren Sie die Szenarien, in dem die <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A> -Eigenschaftensatz auf die <xref:System.Web.UI.ConflictOptions.CompareAllValues> Wert und den Satz der ursprünglichen Werte werden an die entsprechende Datenmethode übergeben.  
  
 Im folgenden sind zwei häufige Szenarios, in dem Sie ändern, die <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> Eigenschaft:  
  
-   Möglicherweise möchten die Eigenschaft zum unterscheiden zwischen alten und neuen Werte in den Updates zu ändern. Wenn die <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A> -Eigenschaftensatz auf die <xref:System.Web.UI.ConflictOptions.CompareAllValues> -Wertparameter, für die ursprünglichen und neuen Werte hinzugefügt werden die <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> Auflistung. Ohne die Formatierungszeichenfolge würde die zwei Parameter mit dem gleichen Namen für jedes Datenfeld erstellt werden. Ändern Sie den Namen des ursprünglichen Value-Parameters, können Sie vergleichen, die Daten in der ursprünglichen Datenquelle Konflikte erkennen und Schlüsselwerte verglichen werden soll.  
  
-   Einige visuelle Designer zu einem bestimmten Benennungsschema für ursprüngliche Werte und Schlüssel implementieren.  
  
 Die <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> -Eigenschaft delegiert an die <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> Eigenschaft der <xref:System.Web.UI.WebControls.ObjectDataSourceView> -Objekt, das zugeordnet ist die <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="objectDataSource.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das Ereignisdaten enthält.</param>
        <summary>Fügt der Seite mit dem <see cref="E:System.Web.UI.Page.LoadComplete" />-Steuerelement einen <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />-Ereignishandler hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Web.UI.WebControls.ObjectDataSource.OnInit%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Beim Überschreiben der <see cref="M:System.Web.UI.WebControls.ObjectDataSource.OnInit(System.EventArgs)" /> -Methode in einer abgeleiteten Klasse werden möchten, rufen Sie die <see cref="M:System.Web.UI.Control.OnInit(System.EventArgs)" /> Methode für die Basisklasse, damit Delegaten registrierte das Ereignis empfangen.</para></block>
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
        <altmember cref="M:System.Web.UI.Control.OnInit(System.EventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="ParsingCulture">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParsingCulture ParsingCulture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ParsingCulture ParsingCulture" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.ParsingCulture" />
      <MemberSignature Language="VB.NET" Value="Public Property ParsingCulture As ParsingCulture" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParsingCulture ParsingCulture { System::Web::UI::WebControls::ParsingCulture get(); void set(System::Web::UI::WebControls::ParsingCulture value); };" />
      <MemberSignature Language="F#" Value="member this.ParsingCulture : System.Web.UI.WebControls.ParsingCulture with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.ParsingCulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParsingCulture</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab oder legt einen Wert fest, der angibt, welche Kulturinformationen verwendet werden, wenn Zeichenfolgenwerte in tatsächliche Eigenschaftentypen konvertiert werden, um ein Objekt des Typs zu erstellen, der von <see cref="P:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName" /> angegeben wird.</summary>
        <value>Die Kulturinformationen. Der Standardwert ist <see cref="F:System.Web.UI.WebControls.ParsingCulture.Invariant" />sein.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="objectDataSource.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Speichert den Zustand des <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />-Steuerelements.</summary>
        <returns>Gibt den aktuellen Ansichtszustand des Serversteuerelements zurück, andernfalls wird <see langword="null" /> zurückgegeben, wenn dem Steuerelement kein Ansichtszustand zugeordnet ist.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.IStateManager.SaveViewState" />
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable Select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerable Select() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
      <MemberSignature Language="VB.NET" Value="Public Function Select () As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerable ^ Select();" />
      <MemberSignature Language="F#" Value="member this.Select : unit -&gt; System.Collections.IEnumerable" Usage="objectDataSource.Select " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft Daten aus dem zugrunde liegenden Datenspeicher ab, indem die von der <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />-Eigenschaft angegebene Methode mit den Parametern in der <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />-Auflistung aufgerufen wird.</summary>
        <returns>Eine <see cref="T:System.Collections.IEnumerable" />-Liste mit Datenzeilen.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die angegebene Methode handelt es sich möglicherweise um eine beliebige Methodensignatur, jedoch zurückgibt oder von einer der in der folgenden Tabelle aufgeführten Typen abgeleitet werden die <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement erfolgreich aufgerufen werden.  
  
|Rückgabetyp|Aktion|  
|-----------------|------------|  
|<xref:System.Collections.IEnumerable>|Die <xref:System.Collections.IEnumerable> wird zurückgegeben, durch die <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Methode.|  
|<xref:System.Data.DataTable>|Ein <xref:System.Data.DataView> wird erstellt, indem Sie mit der <xref:System.Data.DataTable> und zurückgegeben, indem die <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Methode.|  
|<xref:System.Data.DataView>|Die <xref:System.Data.DataView> wird zurückgegeben, durch die <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Methode.|  
|<xref:System.Data.DataSet>|Die erste <xref:System.Data.DataTable> von der <xref:System.Data.DataSet> extrahiert und ein <xref:System.Data.DataView> erstellt und zurückgegeben werden, indem die <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Methode.|  
|<xref:System.Object>|Das Objekt wird in einem Element umschlossen <xref:System.Collections.IEnumerable> Auflistung und zurückgegeben, indem die <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Methode.|  
  
 Die Methode, die durch identifiziert wird die <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> Eigenschaft kann eine Instanzmethode sein oder ein `static` (`Shared` in Visual Basic) Methode. Wenn es sich um eine Instanzmethode ist, wird das Geschäftsobjekt, das wird erstellt und zerstört wird jedes Mal die Methode, die angegeben wird die <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> Eigenschaft aufgerufen wird, mit dem Unterschied, dass dieselbe Instanz verwendet wird, zum Aufrufen der Methode, die angegeben wird die <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> Eigenschaft und die Methode, die angegeben wird die <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> Eigenschaft. Die <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Methode gibt ein <xref:System.Collections.IEnumerable> Schnittstelle. Allerdings um Zwischenspeichern und Filtern von Szenarien zu aktivieren, der Rückgabewert muss eine <xref:System.Data.DataSet> Objekt. Während der <xref:System.Data.DataSet> -Klasse implementiert nicht die <xref:System.Collections.IEnumerable> -Schnittstelle, die <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement extrahiert automatisch der Standardwert <xref:System.Data.DataView> zu steuern, welche implementiert die <xref:System.Collections.IEnumerable>.  
  
 Vor der <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Vorgang ausgeführt wird, die <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting%2A> aufgerufen, um das Auslösen der <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> Ereignis. Können Sie behandeln die <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> Ereignis, um die Werte der Parameter überprüfen und Ausführen der vorverarbeitung vor einem <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Vorgang. Zum Ausführen von eines Datenabrufvorgangs die <xref:System.Web.UI.WebControls.ObjectDataSourceView> Objekt verwendet Reflektion, um eine Instanz des Objekts zu erstellen, die durch identifiziert wird die <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> Eigenschaft. Es ruft dann die Methode, die durch identifiziert wird die <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> Eigenschaft unter Verwendung aller zugeordneten <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> Eigenschaften. Nach der <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Vorgang abgeschlossen ist, die <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected%2A> aufgerufen, um das Auslösen der <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> Ereignis. Können Sie behandeln die <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> Ereignis, um Rückgabe von Werten, Ausgabeparameter und Ausnahmen zu untersuchen, und klicken Sie auf die nach der Verarbeitung auszuführen.  
  
 Wenn die <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> -Eigenschaft gibt eine <xref:System.Data.DataSet>, <xref:System.Data.DataTable>, oder <xref:System.Data.DataView> -Objekt und das Zwischenspeichern aktiviert ist, die <xref:System.Web.UI.WebControls.ObjectDataSource> Ruft Daten aus und speichert Daten im Cache während der <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Vorgang. Der Cache wird erstellt, verworfen oder aktualisiert basierend auf das Verhalten beim Zwischenspeichern, die durch die Kombination von angegeben, wird die <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> und <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> Eigenschaften.  
  
 Wenn die <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> -Eigenschaft gibt eine <xref:System.Data.DataSet> oder <xref:System.Data.DataTable> Objekt und ein <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> Eigenschaft angegeben wurde, wird Sie mit allen bereitgestellten ausgewertet <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> Eigenschaften und der resultierende Filter wird angewendet, um die Liste der Daten während der die <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Vorgang.  
  
 Die <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Methode delegiert an die <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> -Methode der der <xref:System.Web.UI.WebControls.ObjectDataSourceView> zugeordnete der <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement.  
  
 Weitere Informationen zum Zusammenführen von Parametern, Lebensdauer und methodenauflösung finden Sie unter <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>.  
  
## <a name="data-bound-controls"></a>Datengebundene Steuerelemente  
 Wenn die <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement mit einem datengebundenen Steuerelement verknüpft ist, z. B. die <xref:System.Web.UI.WebControls.GridView> -Steuerelement, es ist nicht erforderlich, rufen Sie die <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> aus Code der Seite. Die <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Methode wird stattdessen direkt vom datengebundenen Steuerelement aufgerufen.  
  
   
  
## Examples  
 Ein Codebeispiel finden Sie unter <xref:System.Web.UI.WebControls.ObjectDataSource>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="SelectCountMethod">
      <MemberSignature Language="C#" Value="public string SelectCountMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectCountMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCountMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectCountMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCountMethod : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Methode oder der Funktion auf, die vom <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />-Steuerelement zum Abrufen der Zeilenanzahl aufgerufen wird, oder legt diesen fest.</summary>
        <value>Eine Zeichenfolge, die den Namen der Methode oder der Funktion darstellt, mit deren Hilfe die <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> die Zeilenanzahl abruft. Die Methode muss eine ganze Zahl (<see cref="T:System.Int32" />) zurückgeben. Der Standardwert ist eine leere Zeichenfolge ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> Eigenschaft kennzeichnet eine Methode der Business-Objekt, das zum Abrufen der Gesamtzeilenanzahl, zur Unterstützung von Paging von Datenquellen verwendet wird. Die <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> Eigenschaft wird nur ausgewertet, wenn die <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> -Eigenschaftensatz auf `true`.  
  
 Die <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> -Eigenschaft delegiert an die <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A> Eigenschaft der <xref:System.Web.UI.WebControls.ObjectDataSourceView> -Objekt, das zugeordnet ist die <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement. Informationen über die Unterstützung von Paging durch die <xref:System.Web.UI.WebControls.ObjectDataSource> steuern, finden Sie unter <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>.  
  
   
  
## Examples  
 Die folgenden drei Beispiele zeigen eine Webseite, eine Code-Behind-Seite-Klasse und eine Datenzugriffs-Klasse, mit denen Benutzer auswählen, wie viele Datensätze auf der Seite angezeigt werden.  
  
 Die Webseite enthält ein <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement, dessen <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> -Eigenschaftensatz auf `true`. Die <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> -Eigenschaftensatz auf den Namen einer Methode, die die Gesamtzahl der Datensätze in der Abfrage zurückgibt. Die <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> Eigenschaft und die <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> Eigenschaft festgelegt werden, den Namen der Parameter, die in der Select-Methode verwendet werden. Die Seite enthält außerdem eine <xref:System.Web.UI.WebControls.DropDownList> Steuerelement.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx#1)]  
  
 Das zweite Beispiel zeigt einen Handler für die <xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged?displayProperty=nameWithType> Ereignis die <xref:System.Web.UI.WebControls.DropDownList> Steuerelement. Der Code in den Handler für die <xref:System.Web.UI.WebControls.GridView.PageSize%2A> Eigenschaft, um die Auswahl des Benutzers.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx.vb#2)]  
  
 Das dritte Beispiel zeigt die Data Access-Klasse, die Daten aus der Customers-Tabelle abruft. Es enthält eine Methode mit dem Namen `GetSubsetOfEmployees`, zugewiesen die <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> Eigenschaft der <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement. Das Beispiel enthält auch eine Methode namens `GetEmployeeCount`, zugewiesen die <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> Eigenschaft der <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement. Die Klasse verwendet LINQ zum Abfragen der Customers-Tabelle. Das Beispiel erfordert eine LINQ to SQL-Klasse, die Northwind-Datenbank und Tabelle "Customers" darstellt. Weitere Informationen finden Sie unter [Vorgehensweise: Erstellen von LINQ to SQL-Klassen in einem Webprojekt](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/App_Code/CustomerLogic.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/App_Code/CustomerLogic.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Selected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Selected" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Selected" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selected As ObjectDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceStatusEventHandler ^ Selected;" />
      <MemberSignature Language="F#" Value="member this.Selected : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " Usage="member this.Selected : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn ein <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />-Vorgang abgeschlossen wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Behandeln der <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> Ereignis, um die Werte für einen Rückgabewert oder Ausgabeparameter zu überprüfen oder zu bestimmen, ob eine Ausnahme ausgelöst wurde, nach einem <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Vorgang wurde abgeschlossen. Der Rückgabewert Output-Parameter und Eigenschaften für die Ausnahmebehandlung stehen über die <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> Objekt, das dem Ereignis zugeordnet ist.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Die folgenden drei Beispiele zeigen eine Webseite, eine Code-Behind-Seite-Klasse und eine Datenzugriffs-Klasse, mit denen Benutzer abrufen und Aktualisieren von Datensätzen in der Employees-Tabelle in der Datenbank Northwind.  
  
 Das erste Beispiel zeigt eine Webseite, die zwei <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelemente, eine <xref:System.Web.UI.WebControls.DropDownList> -Steuerelement, und ein <xref:System.Web.UI.WebControls.DetailsView> Steuerelement. Die erste <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement und die <xref:System.Web.UI.WebControls.DropDownList> Steuerelement abrufen und Anzeigen der Namen der Mitarbeiter aus der Datenbank verwendet werden. Die zweite <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement und die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement werden verwendet, um abrufen, anzeigen und ändern Sie die Daten aus dem Mitarbeiterdatensatz, der vom Benutzer ausgewählt ist.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_18#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_18#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default.aspx#1)]  
  
 Das zweite Beispiel zeigt den Handler für die <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> und <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> Ereignisse. Die <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> Ereignishandler serialisiert das Objekt, das Daten enthält, die aus der Employee-Tabelle abgerufen wurde. Das serialisierte Objekt wird im Ansichtszustand gespeichert. Die <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> Ereignishandler deserialisiert das Objekt im Ansichtszustand, der die ursprünglichen Daten für den Datensatz enthält, die aktualisiert wird. Das Objekt, das die ursprünglichen Daten enthält, wird als Parameter an die Update-Methode übergeben. Die ursprünglichen Daten müssen mit der Datenbank übergeben werden, damit sie verwendet werden kann, um zu überprüfen, ob die Daten von einem anderen Prozess geändert wurde.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default.aspx.vb#2)]  
  
 Das dritte Beispiel zeigt die Data Access-Klasse, die mit der Northwind-Datenbank interagiert. Die Klasse verwendet LINQ zum Abfragen und Aktualisieren der Employees-Tabelle. Das Beispiel erfordert eine LINQ to SQL-Klasse, die Northwind-Datenbank und Tabelle "Employees" darstellt. Weitere Informationen finden Sie unter [Vorgehensweise: Erstellen von LINQ to SQL-Klassen in einem Webprojekt](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/App_Code/EmployeeLogic.cs#5)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/App_Code/EmployeeLogic.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Selecting" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="Selecting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler Selecting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler Selecting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Selecting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selecting As ObjectDataSourceSelectingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceSelectingEventHandler ^ Selecting;" />
      <MemberSignature Language="F#" Value="member this.Selecting : System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler " Usage="member this.Selecting : System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt vor einem <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />-Vorgang auf.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Behandeln der <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> Ereignis, um zusätzliche Initialisierung auszuführen, die spezifisch für Ihre Anwendung, die zum Überprüfen der Werte der Parameter oder die Werte der Parameter vor dem Ändern der <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement den Datenabrufvorgang ausführt. Die Parameter sind verfügbar, als ein <xref:System.Collections.IDictionary> -Auflistung, die von erfolgt der <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> -Eigenschaft, die verfügbar gemacht werden die <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> Objekt.  
  
 Dieses Ereignis kann ausgelöst werden, für ein einzelner Aufruf zweimal die <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> -Methode, wenn die <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> festgelegt wird. Die <xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs.ExecutingSelectCount%2A> Eigenschaft der <xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs> Objekt wird verwendet, um zu bestimmen, ob Select zum Abrufen von Daten oder zum Abrufen der Anzahl aufgerufen wurde.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Selected" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="SelectMethod">
      <MemberSignature Language="C#" Value="public string SelectMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectMethod : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Methode oder der Funktion auf, die vom <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />-Steuerelement zum Abrufen von Daten aufgerufen wird, oder legt diesen fest.</summary>
        <value>Eine Zeichenfolge, die den Namen der Methode oder der Funktion darstellt, mit deren Hilfe die <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> Daten abruft. Der Standardwert ist eine leere Zeichenfolge ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die angegebene Methode kann eine beliebige Methodensignatur besitzen, aber sie muss einen der in der folgenden Tabelle dargestellten Typen zurückgeben der <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement erfolgreich aufgerufen werden.  
  
|Rückgabetyp|Aktion|  
|-----------------|------------|  
|<xref:System.Collections.IEnumerable>|Die <xref:System.Collections.IEnumerable> wird zurückgegeben, durch die <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Methode.|  
|<xref:System.Data.DataTable>|Ein <xref:System.Data.DataView> wurde mit der <xref:System.Data.DataTable> und zurückgegeben, indem die <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Methode.|  
|<xref:System.Data.DataView>|Ein <xref:System.Data.DataView> wird zurückgegeben, durch die <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Methode.|  
|<xref:System.Data.DataSet>|Die erste <xref:System.Data.DataTable> von der <xref:System.Data.DataSet> extrahiert wird, und ein <xref:System.Data.DataView> erstellt und zurückgegeben werden, indem die <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Methode.|  
|<xref:System.Object>|Das Objekt wird in einem Element umschlossen <xref:System.Collections.IEnumerable> Auflistung und zurückgegeben, indem die <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Methode.|  
  
 Die <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> -Eigenschaft delegiert an die <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> Eigenschaft der <xref:System.Web.UI.WebControls.ObjectDataSourceView> -Objekt, das zugeordnet ist die <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement.  
  
 Bei Verwendung der <xref:System.Web.UI.WebControls.ObjectDataSource> Klasse zu löschen oder Aktualisieren von Daten, stellen Sie sicher, dass die Parameternamen für konfiguriert die <xref:System.Web.UI.WebControls.ObjectDataSource> steuern, der <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> Auflistung oder <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> Auflistung entsprechen den Namen der Spalten, die von der select-Methode zurückgegeben werden .  
  
## <a name="object-lifetime"></a>Lebensdauer eines Objekts  
 Die Methode, die durch identifiziert wird die <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> Eigenschaft kann eine Instanzmethode sein oder ein `static` (`Shared` in Visual Basic) Methode. Wenn es sich um eine Instanzmethode ist, wird erstellt und zerstört wird jedes Mal die Methode, die angegeben wird das Geschäftsobjekt, das die <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> -Eigenschaft aufgerufen wird. Können Sie behandeln die <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> und <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> Ereignisse zum Arbeiten mit das Geschäftsobjekt, das vor der Methode, die angegeben wird die <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> -Eigenschaft aufgerufen wird. Sie können auch behandeln die <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> Ereignis, nach der Methode ausgelöst wird, die angegeben wird, die <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> -Eigenschaft aufgerufen wird. Wenn das Geschäftsobjekt, das implementiert die <xref:System.IDisposable> -Schnittstelle, die <xref:System.IDisposable.Dispose%2A> Methode wird aufgerufen, bevor das Objekt zerstört wird. Wenn die Methode `static` (`Shared` in Visual Basic), das Geschäftsobjekt, das nie erstellt, und Sie nicht behandeln die <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>, <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>, und <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> Ereignisse.  
  
## <a name="parameter-merging"></a>Zusammenführen von Parametern  
 Parameter werden hinzugefügt, um die <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> Auflistung aus diesen Quellen:  
  
-   Deklarativ über die `SelectParameters` Element.  
  
-   Programmgesteuert über die `Selecting` Methode.  
  
 Zuerst die Parameter aufgeführt, der `SelectParameters` Element hinzugefügt werden. Zweitens sind Parameter programmgesteuert hinzugefügt und entfernt die <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> -Ereignis, das vor der <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> -Methode ausgeführt wird. Die Methode wird aufgelöst, nachdem die Parameter zusammengeführt werden. Methodenauflösung wird im nächsten Abschnitt erläutert.  
  
> [!IMPORTANT]
>  Sie sollten alle Parameterwert überprüfen, die Sie vom Client empfangen. Die Laufzeit einfach ersetzt den Wert des Parameters in der <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> Eigenschaft.  
  
## <a name="method-resolution"></a>Methodenauflösung  
 Wenn die <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> -Methode aufgerufen wird, werden die Datenfelder aus dem datengebundenen Steuerelement, die Parameter, die deklarativ bei erstellt wurden die `SelectParameters` Element, und die Parameter, die in hinzugefügt wurden die <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> -Ereignishandler werden zusammengeführt. (Weitere Informationen finden Sie im vorherigen Abschnitt.) Die <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement versucht dann, eine aufzurufende Methode zu suchen. Es sucht zuerst für eine oder mehrere Methoden mit dem angegebenen Namen, in der <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> Eigenschaft. Wenn keine Übereinstimmung gefunden wird, eine <xref:System.InvalidOperationException> Ausnahme ausgelöst. Wenn eine Übereinstimmung gefunden wird, sucht es nach übereinstimmende Parameternamen. Nehmen wir beispielsweise an einen Typ, der angegeben wird die <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> Eigenschaft verfügt über zwei Methoden namens `SelectARecord`. Eine `SelectARecord` verfügt über einen Parameter `ID`, und die andere `SelectARecord` verfügt über zwei Parameter, `Name` und `Number`. Wenn die <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> Auflistung hat nur einen Parameter mit dem Namen `ID`, die `SelectARecord` -Methode mit lediglich die `ID` Parameter aufgerufen wird. Der Typ des Parameters wird nicht beim Auflösen der Methoden überprüft. Die Reihenfolge der Parameter spielt keine Rolle.  
  
 Wenn die <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> Eigenschaft festgelegt ist, wird die Methode auf andere Weise aufgelöst. Die <xref:System.Web.UI.WebControls.ObjectDataSource> sucht nach einer Methode mit dem angegebenen Namen, in der <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> -Eigenschaft, die einen Parameter des Typs, der verwendet wird angegeben, der <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> Eigenschaft. In diesem Fall spielt der Namen des Parameters keine Rolle.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie eine <xref:System.Web.UI.WebControls.GridView> Steuerelement kann Daten mit Anzeigen einer <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement auf einer Web Forms-Seite. Die <xref:System.Web.UI.WebControls.ObjectDataSource> identifiziert einen Teil- oder vollqualifizierter Klassenname, mit dessen <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> Eigenschaft und eine Methode, die aufgerufen wird, zum Abrufen von Daten mit der <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> Eigenschaft. Zur Laufzeit das Objekt erstellt wird, und die Methode mithilfe von Reflektion aufgerufen. Die <xref:System.Web.UI.WebControls.GridView> -Steuerelement durchläuft die <xref:System.Collections.IEnumerable> -Auflistung, die von der Methode zurückgegeben wird, die angegeben wird die <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> -Eigenschaft, und die Daten angezeigt.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/objds1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/objds1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=214011">Verwenden von Entitätsframework und das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="SelectParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection SelectParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection SelectParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ SelectParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Auflistung mit den Parametern ab, die von der mit der <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />-Eigenschaft angegebenen Methode verwendet werden.</summary>
        <value>Eine Auflistung mit den Parametern, die von der mit der <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />-Eigenschaft angegebenen Methode verwendet werden.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> -Eigenschaft ruft die <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A> Eigenschaft der <xref:System.Web.UI.WebControls.ObjectDataSourceView> -Objekt, das zugeordnet ist die <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement.  
  
 Sie Parameter zum Hinzufügen der <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> Sammlung deklarativ mithilfe der `SelectParameters` Element oder programmgesteuert in den Handler für die <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> Ereignis. Zur Laufzeit Parameter aufgeführt, der `SelectParameters` Element zuerst der Auflistung hinzugefügt werden. Klicken Sie dann die Parameter in der Auflistung hinzugefügt oder entfernt werden durch den Handler für die <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> Ereignis. Die <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> Ereignis wird ausgelöst, bevor die <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> -Methode ausgeführt wird.  
  
 Vor der <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Methode ausgeführt wird, den Namen und Typen der Parameter, die in enthaltenen der <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> Sammlung muss die Signatur der Methode, die angegebenen entsprechen der <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> Eigenschaft. Angenommen, eine select-Methode mit dem Namen `GetEmployeesByStateAndAge` nimmt eine `string` und eine ganze Zahl als Parameter der <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> Auflistung muss zwei Parameter enthalten. Der erste Parameter muss in eine Zeichenfolge aufgelöst, und der zweite Parameter muss in eine ganze Zahl aufgelöst. Beide Parameter angegeben werden können, im Markup in der `SelectParameters` Element. Alternativ können sie sein können hinzugefügt werden, der <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> -Ereignishandler oder einen Parameter im Markup hinzugefügt werden, und der andere Controller programmgesteuert hinzugefügt werden.  
  
 Weitere Informationen finden Sie unter [mithilfe von Parametern mit dem ObjectDataSource-Steuerelement](https://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4) und <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod> Eigenschaft.  
  
> [!IMPORTANT]
>  Im Code für die <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> -Ereignishandler oder in der Methode, die angegeben wird die <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> -Eigenschaft, stellen Sie sicher, dass Sie jeder Parameterwert überprüfen, die vom Client empfangen wird.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Abrufen eines einzelnen Eintrags mithilfe einer <xref:System.Web.UI.WebControls.ObjectDataSource> steuern und Anzeigen der Daten in eine <xref:System.Web.UI.WebControls.DetailsView> Steuerelement. Die <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement ruft einen bestimmten Mitarbeiterdatensatz ab, durch den Aufruf der `GetEmployee` Methode der `EmployeeLogic` Klasse. Die `GetEmployee` Methode erfordert einen Mitarbeiter-ID-Parameter. Die <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement verwendet eine `QueryStringParameter` Element im Markup zum Erstellen einer <xref:System.Web.UI.WebControls.QueryStringParameter> -Objekt, das den Wert der angegebenen Abfragezeichenfolgen-Parameter aus der URL auf und übergeben Sie sie an der `GetEmployee` Methode.  
  
 Andere Parameterklassen können verwendet werden, um Werte aus anderen Quellen, z.B. Steuerelementeigenschaften, Formularfelder, Cookies, die Profildaten werden ASP.NET oder Sitzungszustand abzurufen. Sie können auch ein Parameterobjekt, das im Markup definiert ist, um einen hartcodierten Wert an die select-Methode übergeben. Weitere Informationen zu den Parameter-Klassen, die verfügbar sind, finden Sie unter [mithilfe von Parametern, Datenquellen-Steuerelemente für die Filterung](https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)).  
  
 Um dieses Beispiel auszuführen, benötigen Sie Folgendes:  
  
-   Eine Website, die eine Verbindungszeichenfolge, die mit dem Namen `NorthwindConnection` , mit der Datenbank Northwind Traders verbunden wird. Weitere Informationen finden Sie unter den <xref:System.Web.UI.WebControls.ObjectDataSource> Übersicht über die Klasse.  
  
-   Die `EmployeeLogic` -Klasse, die als eines der Codebeispiele für die angezeigt wird der <xref:System.Web.UI.WebControls.ObjectDataSource> Übersicht über die Klasse. Die Klassendatei muss sich im Ordner "App_Code" befinden.  
  
-   Der Beispielcode kann als eine ASPX-Seite ausgeführt werden. Wenn Sie die Seite ohne einen Abfragezeichenfolgen-Parameter anfordern, wird eine Fehlermeldung angezeigt. Wenn Sie die Seite mit einer Abfragezeichenfolge wie anfordern `?empid=1` nach den Namen der ASPX-Datei, sehen Sie die Details für den angeforderten Mitarbeiter.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_3/CS/objds3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_3/VB/objds3vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="SortParameterName">
      <MemberSignature Language="C#" Value="public string SortParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SortParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.SortParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property SortParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SortParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SortParameterName : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.SortParameterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen des Geschäftsobjekts ab, mit dem der <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />-Parameter einen Sortierausdruck für die Unterstützung der Datenquellensortierung angegeben hat, oder legt diesen fest.</summary>
        <value>Der Name des Methodenparameters, mit dem der Parameter zum Sortieren der Daten angegeben wird. Der Standardwert ist eine leere Zeichenfolge.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A> Eigenschaft wird verwendet, um die Quelle Sortieren von Daten zu unterstützen. Bei der eine <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A> -Eigenschaftensatz auf der <xref:System.Web.UI.DataSourceSelectArguments> -Objekt und übergeben der <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> -Methode, die <xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A> Wert gibt den Parameternamen von der <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> Geschäftsobjektmethode, nach denen die Daten sortiert.  
  
 Wenn die <xref:System.Web.UI.WebControls.ObjectDataSource> bezieht sich auf einem datengebundenen Steuerelement, die Werte, die an dieses Prüfungsprofil Parameter übergeben werden, gefolgt von der Form von durch Trennzeichen getrennte Werte `"ASC"` oder `"DESC"`. Z. B. den Wert für eine aufsteigende Sortierung von `Name` wäre `"Name ASC"`.  
  
 Die <xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A> -Eigenschaft delegiert an die <xref:System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName%2A> Eigenschaft der <xref:System.Web.UI.WebControls.ObjectDataSourceView> -Objekt, das zugeordnet ist die <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement.  
  
   
  
## Examples  
 Dieser Abschnitt enthält zwei Codebeispiele. Im ersten Codebeispiel wird veranschaulicht, wie einen Typ implementiert, der Sortieren unterstützt wird. Im zweiten Codebeispiel wird veranschaulicht, wie einen Sortierungsausdruck implementiert wird.  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie einen Typ implementiert, der Sortieren unterstützt wird. Die `SelectMethod` von der `SortingData` Klasse nimmt einen Parameter, `sortExpression`. Die Zeichenfolge, die an `SelectMethod` wird verwendet, für die <xref:System.Data.DataView.Sort%2A> Eigenschaft der <xref:System.Data.DataView> -Objekt, das von zurückgegeben wird `SelectMethod`.  
  
 [!code-csharp[ObjectDataSourceSorting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ObjectDataSourceSorting/CS/SortingData.cs#1)]
 [!code-vb[ObjectDataSourceSorting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ObjectDataSourceSorting/VB/SortingData.vb#1)]  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie einen Sortierungsausdruck implementiert wird. Der Code auf der Webseite erstellt eine Instanz von der <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement. Die <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> -Eigenschaftensatz auf `SortingData` und <xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A> -Eigenschaftensatz auf `sortExpression`. Die <xref:System.Web.UI.WebControls.GridView.AllowSorting%2A> Eigenschaft der <xref:System.Web.UI.WebControls.GridView> -Steuerelement so eingestellt ist, dass `true`. Klickt der Benutzer die **Sortierreihenfolge** Schaltfläche, dem Namen des Felds `Name` oder `Number`, übergeben wird `SelectMethod` im Parameter "Sort".  
  
 [!code-aspx-csharp[ObjectDataSourceSorting#2](~/samples/snippets/csharp/VS_Snippets_WebNet/ObjectDataSourceSorting/CS/SortingDataExample.aspx#2)]
 [!code-aspx-vb[ObjectDataSourceSorting#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ObjectDataSourceSorting/VB/SortingDataExampleVB.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanSort" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="SqlCacheDependency">
      <MemberSignature Language="C#" Value="public virtual string SqlCacheDependency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SqlCacheDependency" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SqlCacheDependency As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SqlCacheDependency { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SqlCacheDependency : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine durch Semikolons getrennte Zeichenfolge ab, die die für die Microsoft SQL Server-Cacheabhängigkeit zu verwendenden Datenbanken und Tabellen angibt, oder legt diese fest.</summary>
        <value>Eine Zeichenfolge, die die für die SQL Server-Cacheabhängigkeit zu verwendenden Datenbanken und Tabellen angibt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement unterstützt eine optionale Ablaufrichtlinie auf der Grundlage der <xref:System.Web.Caching.SqlCacheDependency> -Objekt für den Datencache (der Dienst muss für den Datenbankserver konfiguriert werden).  
  
 SQL Server unterstützt zwei Mechanismen für die cacheinvalidierung: Abrufen und eine Benachrichtigung. Jeder Mechanismus hat eine andere Syntax für die <xref:System.Web.Caching.SqlCacheDependency> Objekt.  
  
 Die <xref:System.Web.UI.WebControls.ObjectDataSource> unterstützt nur den Abruf. Die <xref:System.Web.Caching.SqlCacheDependency> Zeichenfolge dient zum Erstellen einer <xref:System.Data.SqlClient.SqlDependency> -Objekt, das an die <xref:System.Data.Common.DbCommand> Konstruktor vor dem die <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Methode ausgeführt wird. Die <xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A> Zeichenfolge identifiziert, Datenbanken und Tabellen im gleichen Format, mit dem die `@ Page` -Direktive, in dem der erste Teil der Zeichenfolge eine Verbindungszeichenfolge für SQL Server-Datenbank ist, gefolgt von einem Doppelpunkt als Trennzeichen und schließlich auf den Namen der Datenbanktabelle (z. B. `"connectionstring1:table1"`). Wenn die <xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A> Eigenschaft hängt von mehr als eine Tabelle, die Zeichenfolge "und" Tabelle Paare werden durch Semikolons getrennt (z. B. `"connectionstring1:table1";connectionstring2:table2"`).  
  
 Um Benachrichtigungen zu unterstützen, müssen Sie die Cachelogik schreiben, in der Implementierung von Ihrer <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> Eigenschaft und die Erstellung des behandeln die <xref:System.Web.Caching.SqlCacheDependency> Objekts in Ihrem Code.  
  
   
  
## Examples  
 Dieser Abschnitt enthält zwei Codebeispiele. Im ersten Codebeispiel wird veranschaulicht, wie eine SQL Server-Cacheabhängigkeit zu erstellen und Festlegen der <xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A> Eigenschaft eine <xref:System.Web.UI.WebControls.ObjectDataSource> Objekt. Im zweiten Codebeispiel wird veranschaulicht, wie eine Wrappermethode implementieren, die zurückgibt eine <xref:System.Data.DataSet> Objekt, das Aktivieren von caching und Filtern mit einer <xref:System.Web.UI.WebControls.ObjectDataSource> Objekt.  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie eine SQL Server-Cacheabhängigkeit zu erstellen und Festlegen der <xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A> Eigenschaft eine <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement. In diesem Beispiel wird die Datenbank alle 120 Sekunden abgerufen. Wenn die Daten in der Northwind Traders Employees Änderungen während dieser Tabelle-Zeit ist, werden alle Daten, die von zwischengespeichert werden die <xref:System.Web.UI.WebControls.ObjectDataSource> steuern und angezeigt wird der <xref:System.Web.UI.WebControls.GridView> Steuerelement abgelaufen ist, und ein neuer Satz von Daten bei der nächsten Anforderung für die Seite abgerufen wird.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_7#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_7/CS/objds7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_7#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_7/VB/objds7vb.aspx#1)]  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie eine Wrappermethode implementieren, die zurückgibt eine <xref:System.Data.DataSet> Objekt, das Aktivieren von caching und Filtern mit einer <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement. In die basisimplementierung für die `EmployeeLogic` -Klasse, die `GetAllEmployees` Methode gibt ein <xref:System.Collections.ArrayList> Objekt. Anstatt das Objekt vollständig zum Arbeiten mit der <xref:System.Web.UI.WebControls.ObjectDataSource> auf einer Web Forms-Seite, eine Wrappermethode mit dem Namen `GetAllEmployeesAsDataSet` wird hinzugefügt, die einen Satz von zurückgibt `NorthwindEmployee` Daten als eine <xref:System.Data.DataSet>.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_5#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_5/CS/northwindemployee5.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_5#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_5/VB/northwindemployee5.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.SqlCacheDependency" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="StartRowIndexParameterName">
      <MemberSignature Language="C#" Value="public string StartRowIndexParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StartRowIndexParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property StartRowIndexParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StartRowIndexParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StartRowIndexParameterName : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("startRowIndex")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen des Parameters der Datenabrufmethode ab, mit dem der Wert des Bezeichners des ersten Datensatzes angegeben wird, der für die Unterstützung des Datenquellen-Paging abgerufen wird, oder legt diesen fest.</summary>
        <value>Der Name des Geschäftsobjekt-Methodenparameters, mit dem der erste abzurufende Datensatz angegeben wird. Der Parameter muss einen Ganzzahlwert zurückgeben. Der Standardwert ist <c>"StartRowIndex"</c>.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> Eigenschaft wird verwendet, um die Datenquellen-Paging unterstützt. Informationen über die Unterstützung von Paging durch die <xref:System.Web.UI.WebControls.ObjectDataSource> steuern, finden Sie unter <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>.  
  
 Die <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> -Eigenschaft delegiert an die <xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName%2A> Eigenschaft der <xref:System.Web.UI.WebControls.ObjectDataSourceView> -Objekt, das zugeordnet ist die <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement.  
  
   
  
## Examples  
 Die folgenden drei Beispiele zeigen eine Webseite, eine Code-Behind-Seite-Klasse und eine Datenzugriffs-Klasse, mit denen Benutzer auswählen, wie viele Datensätze auf der Seite angezeigt werden.  
  
 Die Webseite enthält ein <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement, dessen <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> -Eigenschaftensatz auf `true`. Die <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> -Eigenschaftensatz auf den Namen einer Methode, die die Gesamtzahl der Datensätze in der Abfrage zurückgibt. Die <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> Eigenschaft und die <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> Eigenschaft festgelegt werden, den Namen der Parameter, die in der Select-Methode verwendet werden. Die Seite enthält außerdem eine <xref:System.Web.UI.WebControls.DropDownList> Steuerelement.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx#1)]  
  
 Das zweite Beispiel zeigt einen Handler für die <xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged?displayProperty=nameWithType> Ereignis die <xref:System.Web.UI.WebControls.DropDownList> Steuerelement. Der Code in den Handler für die <xref:System.Web.UI.WebControls.GridView.PageSize%2A> Eigenschaft, um die Auswahl des Benutzers.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx.vb#2)]  
  
 Das dritte Beispiel zeigt die Data Access-Klasse, die Daten aus der Customers-Tabelle abruft. Es enthält eine Methode mit dem Namen `GetSubsetOfEmployees`, zugewiesen die <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> Eigenschaft der <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement. Das Beispiel enthält auch eine Methode namens `GetEmployeeCount`, zugewiesen die <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> Eigenschaft der <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement. Die Klasse verwendet LINQ zum Abfragen der Customers-Tabelle. Das Beispiel erfordert eine LINQ to SQL-Klasse, die Northwind-Datenbank und Tabelle "Customers" darstellt. Weitere Informationen finden Sie unter [Vorgehensweise: Erstellen von LINQ to SQL-Klassen in einem Webprojekt](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/App_Code/CustomerLogic.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/App_Code/CustomerLogic.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanPage" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="objectDataSource.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Verfolgt die am Ansichtszustand des <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />-Steuerelements vorgenommenen Änderungen und speichert diese im <see cref="T:System.Web.UI.StateBag" />-Objekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ObjectDataSource.TrackViewState%2A> Methode wird überschrieben, um den Anfangspunkt beginnen nachzuverfolgen und zu speichern von Änderungen auf das Steuerelement im Rahmen des Ansichtszustands für das Objekt zu markieren.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IStateManager.TrackViewState" />
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public string TypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TypeName : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.TypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der vom <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />-Objekt dargestellten Klasse ab, oder legt diesen fest.</summary>
        <value>Ein teil- oder vollqualifizierter Klassenname, der den Objekttyp angibt, der von der <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> dargestellt wird. Der Standardwert ist eine leere Zeichenfolge ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zum Erstellen Sie eine Instanz des Objekts, das die <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement gebunden ist, das Steuerelement verwendet Reflektion, um den Typ zu laden, die durch den Typnamen, die zur Laufzeit identifiziert wird. Deshalb ist der Wert von der <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> Eigenschaft kann sein, ein teilweise qualifizierten Typ für Code, der in den Verzeichnissen "bin" oder "App_Code" befindet oder einen voll gekennzeichneten Typnamen für Code, der im globalen Assemblycache registriert ist. Wenn Sie im globalen Assemblycache verwenden, müssen Sie den entsprechenden Verweis hinzufügen der `assemblies` -Abschnitt der Datei "Machine.config" oder "Web.config".  
  
 Der Typ muss einen Standardkonstruktor aufweisen, es sei denn, Sie behandeln die <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> Ereignis, um selbst eine Instanz davon erstellen. Eine Instanz des Typs wird bei jedem Aufruf erstellt die <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A>, und <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> Methoden, wenn die Methoden des Typs Membermethoden sind. Eine Instanz wird nicht erstellt werden, wenn die Methoden sind `static` (`Shared` in Visual Basic). Wenn der Typ implementiert die <xref:System.IDisposable> -Schnittstelle, die <xref:System.IDisposable.Dispose%2A> Methode wird aufgerufen, bevor das Objekt zerstört wird.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie eine <xref:System.Web.UI.WebControls.GridView> Steuerelement kann Daten anzeigen, indem Sie mit einer <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement auf einer Web Forms-Seite. Die <xref:System.Web.UI.WebControls.ObjectDataSource> identifiziert einen Teil- oder vollqualifizierter Klassenname, mit dessen <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> Eigenschaft und eine Methode, die aufgerufen wird, zum Abrufen von Daten mit der <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> Eigenschaft. Zur Laufzeit das Objekt erstellt wird, und die Methode mithilfe von Reflektion aufgerufen. Die <xref:System.Web.UI.WebControls.GridView> -Steuerelement durchläuft die <xref:System.Collections.IEnumerable> -Auflistung, die von zurückgegeben wird das <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> -Eigenschaft, und die Daten angezeigt.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/objds1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/objds1vb.aspx#1)]  
  
 Das folgende Beispiel zeigt der Klasse, die die <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> Eigenschaftswert bezieht sich auf.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/northwindemployee1.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/northwindemployee1.vb#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.Update" />
      <MemberSignature Language="VB.NET" Value="Public Function Update () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update();" />
      <MemberSignature Language="F#" Value="member this.Update : unit -&gt; int" Usage="objectDataSource.Update " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Führt einen Aktualisierungsvorgang durch Aufrufen der von der <see cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" />-Eigenschaft angegebenen Methode mit sämtlichen Parametern in der <see cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />-Auflistung aus.</summary>
        <returns>Ein Wert, der die Anzahl der im zugrunde liegenden Datenspeicher aktualisierten Zeilen darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das Geschäftsobjekt, das wird angenommen, um Datensätze zu einem Zeitpunkt, anstatt in einem Batch zu aktualisieren.  
  
 Vor der <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> Vorgang ausgeführt wird, die <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating%2A> aufgerufen, um das Auslösen der <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> Ereignis. Können Sie behandeln die <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> Ereignis, um die Werte der Parameter überprüfen und Ausführen der vorverarbeitung vor einem <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> Vorgang. Zum Durchführen eines Aktualisierungsvorgangs das <xref:System.Web.UI.WebControls.ObjectDataSourceView> Objekt verwendet Reflektion, um eine Instanz des Objekts zu erstellen, die durch identifiziert wird die <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> Eigenschaft. Es ruft dann die Methode, die durch identifiziert wird die <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> Eigenschaft unter Verwendung aller zugeordneten <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> Eigenschaften. Nach der <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> Vorgang abgeschlossen ist, die <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated%2A> aufgerufen, um das Auslösen der <xref:System.Web.UI.WebControls.ObjectDataSource.Updated> Ereignis. Können Sie behandeln die <xref:System.Web.UI.WebControls.ObjectDataSource.Updated> Ereignis, um Rückgabe von Werten, Ausgabeparameter und Ausnahmen zu untersuchen, und klicken Sie auf die nach der Verarbeitung auszuführen.  
  
 Die <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> Methode delegiert an die <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> -Methode der der <xref:System.Web.UI.WebControls.ObjectDataSourceView> zugeordnete der <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement.  
  
 Weitere Informationen zum Zusammenführen von Parametern, Lebensdauer und methodenauflösung finden Sie unter <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>.  
  
> [!IMPORTANT]
>  Sie sollten alle Parameterwert überprüfen, die Sie vom Client empfangen. Die Laufzeit einfach ersetzt den Wert des Parameters in der <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> Eigenschaft.  
  
## <a name="data-bound-controls"></a>Datengebundene Steuerelemente  
 Wenn die <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement mit einem datengebundenen Steuerelement verknüpft ist, z. B. die <xref:System.Web.UI.WebControls.GridView> -Steuerelement, es ist nicht erforderlich, rufen Sie die <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> aus Code der Seite. Die <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> Methode wird stattdessen direkt vom datengebundenen Steuerelement aufgerufen.  
  
   
  
## Examples  
 Dieser Abschnitt enthält zwei Codebeispiele. Im ersten Codebeispiel wird veranschaulicht, wie Sie mit einem <xref:System.Web.UI.WebControls.DropDownList> Steuerelement <xref:System.Web.UI.WebControls.TextBox> -Steuerelemente und einige <xref:System.Web.UI.WebControls.ObjectDataSource> Objekte zum Aktualisieren von Daten. Im zweiten Codebeispiel dargestellt das `EmployeeLogic` -Klasse, die im ersten Codebeispiel verwendet wird.  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit einem <xref:System.Web.UI.WebControls.DropDownList> Steuerelement <xref:System.Web.UI.WebControls.TextBox> -Steuerelemente und einige <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelemente zum Aktualisieren von Daten. Die <xref:System.Web.UI.WebControls.DropDownList> zeigt den Namen eines Mitarbeiters Northwind während der <xref:System.Web.UI.WebControls.TextBox> Steuerelemente werden zum eingeben und Aktualisieren der Adressinformationen. Da die <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> Auflistung enthält ein <xref:System.Web.UI.WebControls.ControlParameter> -Objekt, das an den ausgewählten Wert der gebunden ist die <xref:System.Web.UI.WebControls.DropDownList>, die Schaltfläche, auslöst der <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> Operation wird erst aktiviert, nachdem ein Mitarbeiter ausgewählt wird.  
  
> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_12#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/CS/objds12cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_12#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/VB/objds12vb.aspx#1)]  
  
 Das folgende Codebeispiel zeigt die `EmployeeLogic` -Klasse, die im vorherigen Codebeispiel verwendet wird.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_12#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/CS/northwindemployee12.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_12#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/VB/northwindemployee12.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=214011">Verwenden von Entitätsframework und das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="Updated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Updated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Updated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Updated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updated As ObjectDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceStatusEventHandler ^ Updated;" />
      <MemberSignature Language="F#" Value="member this.Updated : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " Usage="member this.Updated : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn ein <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />-Vorgang abgeschlossen wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Behandeln der <xref:System.Web.UI.WebControls.ObjectDataSource.Updated> Ereignis, um die Werte für einen Rückgabewert oder Ausgabeparameter zu überprüfen oder um festzustellen, ob eine Ausnahme ausgelöst wurde, nachdem ein <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> Vorgang wurde abgeschlossen. Der Rückgabewert Output-Parameter und Eigenschaften für die Ausnahmebehandlung stehen über die <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> Objekt, das dem Ereignis zugeordnet ist.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Updating" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=214011">Verwenden von Entitätsframework und das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateMethod">
      <MemberSignature Language="C#" Value="public string UpdateMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdateMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UpdateMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateMethod : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Methode oder der Funktion ab, die vom <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />-Steuerelement zum Aktualisieren von Daten aufgerufen wird, oder legt diesen fest.</summary>
        <value>Eine Zeichenfolge, die den Namen der Methode oder der Funktion darstellt, mit deren Hilfe die <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> Daten aktualisiert. Der Standardwert ist eine leere Zeichenfolge.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement setzt voraus, dass die Methode, die durch identifiziert wird die <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> -Eigenschaft liefert Updates 1 zu einem Zeitpunkt, anstatt in einem Batch.  
  
 Die <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> -Eigenschaft delegiert an die <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> Eigenschaft der <xref:System.Web.UI.WebControls.ObjectDataSourceView> -Objekt, das zugeordnet ist die <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement.  
  
 Stellen Sie sicher, dass die Parameternamen für konfiguriert die <xref:System.Web.UI.WebControls.ObjectDataSource> steuern, der <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> Auflistung entsprechen den Namen der Spalten, die von der select-Methode zurückgegeben werden.  
  
## <a name="object-lifetime"></a>Lebensdauer eines Objekts  
 Die Methode, die durch identifiziert wird die <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> Eigenschaft kann eine Instanzmethode sein oder ein `static` (`Shared` in Visual Basic) Methode. Wenn es sich um eine Instanzmethode ist, wird erstellt und zerstört wird jedes Mal die Methode, die angegeben wird das Geschäftsobjekt, das die <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> -Eigenschaft aufgerufen wird. Können Sie behandeln die <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> und <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> Ereignisse zum Arbeiten mit das Geschäftsobjekt, das vor der Methode, die angegeben wird die <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> -Eigenschaft aufgerufen wird. Sie können auch behandeln die <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> Ereignis, nach der Methode ausgelöst wird, die angegeben wird, die <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> -Eigenschaft aufgerufen wird. Wenn das Geschäftsobjekt, das implementiert die <xref:System.IDisposable> -Schnittstelle, die <xref:System.IDisposable.Dispose%2A> Methode wird aufgerufen, bevor das Objekt zerstört wird. Wenn die Methode `static` (`Shared` in Visual Basic), das Geschäftsobjekt, das nie erstellt, und Sie nicht behandeln die <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>, <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>, und <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> Ereignisse.  
  
## <a name="parameter-merging"></a>Zusammenführen von Parametern  
 Parameter werden hinzugefügt, um die <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> Auflistung aus drei Quellen:  
  
-   Aus dem datengebundenen Steuerelement, zur Laufzeit.  
  
-   Von der `UpdateParameters` -Element deklarativ.  
  
-   Von der <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> -Ereignishandler programmgesteuert.  
  
 Zuerst werden alle Parameter, die von datengebundenen Steuerelementen generiert werden hinzugefügt, um die <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> Auflistung. Z. B. wenn die <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement gebunden ist, eine <xref:System.Web.UI.WebControls.GridView> Steuerelement, das die Spalten `Name` und `Number`, die Parameter für `Name` und `Number` der Auflistung hinzugefügt werden. Der genaue Name des Parameters hängt von der <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> Eigenschaft. Der Datentyp dieser Parameter ist `string`. Anschließend wird die Parameter, die in aufgeführt sind die `UpdateParameters` Element hinzugefügt werden. Wenn ein Parameter in der `UpdateParameters` Element gefunden wird, mit dem gleichen Namen wie ein Parameter, der bereits vorhanden ist die <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> vorhandenen Parameters-Auflistung wird geändert, um mit dem Parameter überein, die im angegebenen die `UpdateParameters` Element. In der Regel wird dies verwendet, um den Typ der Daten in den Parameter zu ändern. Schließlich können Sie programmgesteuert hinzufügen und entfernen Sie die Parameter in der <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> -Ereignis, das vor der <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> -Methode ausgeführt wird. Die Methode wird aufgelöst, nachdem die Parameter zusammengeführt werden. Methodenauflösung wird im nächsten Abschnitt erläutert.  
  
> [!IMPORTANT]
>  Sie sollten alle Parameterwert überprüfen, die Sie vom Client empfangen. Die Laufzeit einfach ersetzt den Wert des Parameters in der <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> Eigenschaft.  
  
## <a name="method-resolution"></a>Methodenauflösung  
 Wenn die <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> -Methode aufgerufen wird, werden die Datenfelder aus dem datengebundenen Steuerelement, die Parameter, die deklarativ bei erstellt wurden die `UpdateParameters` Element, und die Parameter, die in hinzugefügt wurden die <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> -Ereignishandler werden zusammengeführt. (Weitere Informationen finden Sie im vorherigen Abschnitt.) Die <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement versucht dann, eine aufzurufende Methode zu suchen. Es sucht zuerst für eine oder mehrere Methoden mit dem angegebenen Namen, in der <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> Eigenschaft. Wenn keine Übereinstimmung gefunden wird, eine <xref:System.InvalidOperationException> Ausnahme ausgelöst. Wenn eine Übereinstimmung gefunden wird, sucht es nach übereinstimmende Parameternamen. Nehmen wir beispielsweise an einen Typ, der angegeben wird die <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> Eigenschaft verfügt über zwei Methoden namens `UpdateARecord`. Eine `UpdateARecord` verfügt über einen Parameter `ID`, und die andere `UpdateARecord` verfügt über zwei Parameter, `Name` und `Number`. Wenn die <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> Auflistung hat nur einen Parameter mit dem Namen `ID`, die `UpdateARecord` -Methode mit lediglich die `ID` Parameter aufgerufen wird. Der Typ des Parameters wird nicht beim Auflösen der Methoden überprüft. Die Reihenfolge der Parameter spielt keine Rolle.  
  
 Wenn die <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> Eigenschaft festgelegt ist, wird die Methode auf andere Weise aufgelöst. Die <xref:System.Web.UI.WebControls.ObjectDataSource> sucht nach einer Methode mit dem angegebenen Namen, in der <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> -Eigenschaft, die einen Parameter des Typs, der verwendet wird angegeben, der <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> Eigenschaft. In diesem Fall spielt der Namen des Parameters keine Rolle.  
  
   
  
## Examples  
 Die folgenden drei Beispiele zeigen eine Webseite, eine Code-Behind-Seite-Klasse und eine Datenzugriffs-Klasse, mit denen Benutzer abrufen und Aktualisieren von Datensätzen in der Employees-Tabelle in der Datenbank Northwind.  
  
 Das erste Beispiel zeigt eine Webseite, die zwei <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelemente, eine <xref:System.Web.UI.WebControls.DropDownList> -Steuerelement, und ein <xref:System.Web.UI.WebControls.DetailsView> Steuerelement. Die erste <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement und die <xref:System.Web.UI.WebControls.DropDownList> Steuerelement abrufen und Anzeigen der Namen der Mitarbeiter aus der Datenbank verwendet werden. Die zweite <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement und die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement werden verwendet, um abrufen, anzeigen und ändern Sie die Daten aus dem Mitarbeiterdatensatz, der vom Benutzer ausgewählt ist.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_18#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_18#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default.aspx#1)]  
  
 Das zweite Beispiel zeigt den Handler für die <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> und <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> Ereignisse. Die <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> Ereignishandler serialisiert das Objekt, das Daten enthält, die aus der Employee-Tabelle abgerufen wurde. Das serialisierte Objekt wird im Ansichtszustand gespeichert. Die <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> Ereignishandler deserialisiert das Objekt im Ansichtszustand, der die ursprünglichen Daten für den Datensatz enthält, die aktualisiert wird. Das Objekt, das die ursprünglichen Daten enthält, wird als Parameter an die Update-Methode übergeben. Die ursprünglichen Daten müssen mit der Datenbank übergeben werden, damit sie verwendet werden kann, um zu überprüfen, ob die Daten von einem anderen Prozess geändert wurde.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default.aspx.vb#2)]  
  
 Das dritte Beispiel zeigt die Data Access-Klasse, die mit der Northwind-Datenbank interagiert. Die Klasse verwendet LINQ zum Abfragen und Aktualisieren der Employees-Tabelle. Das Beispiel erfordert eine LINQ to SQL-Klasse, die Northwind-Datenbank und Tabelle "Employees" darstellt. Weitere Informationen finden Sie unter [Vorgehensweise: Erstellen von LINQ to SQL-Klassen in einem Webprojekt](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/App_Code/EmployeeLogic.cs#5)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/App_Code/EmployeeLogic.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=214011">Verwenden von Entitätsframework und das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection UpdateParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdateParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ UpdateParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UpdateParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Parameterauflistung mit den Parametern ab, die von der durch die <see cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" />-Eigenschaft angegebenen Methode verwendet werden.</summary>
        <value>Eine <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> mit den Parametern, die von der durch die <see cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" />-Eigenschaft angegebenen Methode verwendet werden.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Namen und Typen der Parameter, die in befinden die <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> Sammlung muss übereinstimmen, den Namen und Typen der Parameter in der <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> Methodensignatur. Die Parameternamen betroffen sind der <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> -Eigenschaft und die Groß-/Kleinschreibung beachtet werden. Die Parameter in der Auflistung hängen von den Daten in das datengebundene Steuerelement, die Parameter, die deklarativ angegeben werden und die Parameter, die programmgesteuert hinzugefügt werden. Weitere Informationen finden Sie im Abschnitt "Parameter" Mergevorgang"in <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> und [mithilfe von Parametern mit dem ObjectDataSource-Steuerelement](https://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4).  
  
 Die <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> -Eigenschaft ruft die <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> -Eigenschaft, die enthalten sind die <xref:System.Web.UI.WebControls.ObjectDataSourceView> -Objekt, das zugeordnet ist die <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement.  
  
 Weitere Informationen zum Zusammenführen von Parametern, Lebensdauer und methodenauflösung finden Sie unter <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>.  
  
> [!IMPORTANT]
>  Sie sollten alle Parameterwert überprüfen, die Sie vom Client empfangen. Die Laufzeit einfach ersetzt den Wert des Parameters in der <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> Eigenschaft.  
  
   
  
## Examples  
 Dieser Abschnitt enthält zwei Codebeispiele. Im ersten Codebeispiel wird veranschaulicht, wie Sie mit einem <xref:System.Web.UI.WebControls.DropDownList> Steuerelement <xref:System.Web.UI.WebControls.TextBox> -Steuerelemente und einige <xref:System.Web.UI.WebControls.ObjectDataSource> Objekte zum Aktualisieren von Daten. Im zweiten Codebeispiel dargestellt das `EmployeeLogic` -Klasse, die im ersten Codebeispiel verwendet wird.  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit einem <xref:System.Web.UI.WebControls.DropDownList> Steuerelement <xref:System.Web.UI.WebControls.TextBox> -Steuerelemente und einige <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelemente zum Aktualisieren von Daten. Die <xref:System.Web.UI.WebControls.DropDownList> zeigt den Namen eines Mitarbeiters Northwind während der <xref:System.Web.UI.WebControls.TextBox> Steuerelemente werden zum eingeben und Aktualisieren der Adressinformationen. Da die <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> Auflistung enthält ein <xref:System.Web.UI.WebControls.ControlParameter> , gebunden ist, auf den ausgewählten Wert der die <xref:System.Web.UI.WebControls.DropDownList>, die Schaltfläche, auslöst der <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> Operation wird erst aktiviert, nachdem ein Mitarbeiter ausgewählt wird.  
  
> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_12#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/CS/objds12cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_12#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/VB/objds12vb.aspx#1)]  
  
 Das folgende Codebeispiel zeigt die `EmployeeLogic` -Klasse, die im vorherigen Codebeispiel verwendet wird.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_12#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/CS/northwindemployee12.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_12#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/VB/northwindemployee12.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="Updating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Updating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Updating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Updating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updating As ObjectDataSourceMethodEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceMethodEventHandler ^ Updating;" />
      <MemberSignature Language="F#" Value="member this.Updating : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " Usage="member this.Updating : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt vor einem <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />-Vorgang ein.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Behandeln der <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> Ereignis, um zusätzliche Initialisierung auszuführen, die spezifisch für Ihre Anwendung, die zum Überprüfen der Werte der Parameter oder die Werte der Parameter vor dem Ändern der <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement den Aktualisierungsvorgang ausführt. Die Parameter sind verfügbar, als ein <xref:System.Collections.IDictionary> -Auflistung, die von erfolgt der <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> -Eigenschaft, die verfügbar gemacht werden die <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> Objekt.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Die folgenden drei Beispiele zeigen eine Webseite, eine Code-Behind-Seite-Klasse und eine Datenzugriffs-Klasse, mit denen Benutzer abrufen und Aktualisieren von Datensätzen in der Employees-Tabelle in der Datenbank Northwind.  
  
 Das erste Beispiel zeigt eine Webseite, die zwei <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelemente, eine <xref:System.Web.UI.WebControls.DropDownList> -Steuerelement, und ein <xref:System.Web.UI.WebControls.DetailsView> Steuerelement. Die erste <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement und die <xref:System.Web.UI.WebControls.DropDownList> Steuerelement abrufen und Anzeigen der Namen der Mitarbeiter aus der Datenbank verwendet werden. Die zweite <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement und die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement werden verwendet, um abrufen, anzeigen und ändern Sie die Daten aus dem Mitarbeiterdatensatz, der vom Benutzer ausgewählt ist.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_18#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_18#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default.aspx#1)]  
  
 Das zweite Beispiel zeigt den Handler für die <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> und <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> Ereignisse. Die <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> Ereignishandler serialisiert das Objekt, das Daten enthält, die aus der Employee-Tabelle abgerufen wurde. Das serialisierte Objekt wird im Ansichtszustand gespeichert. Die <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> Ereignishandler deserialisiert das Objekt im Ansichtszustand, der die ursprünglichen Daten für den Datensatz enthält, die aktualisiert wird. Das Objekt, das die ursprünglichen Daten enthält, wird als Parameter an die Update-Methode übergeben. Die ursprünglichen Daten müssen mit der Datenbank übergeben werden, damit sie verwendet werden kann, um zu überprüfen, ob die Daten von einem anderen Prozess geändert wurde.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default.aspx.vb#2)]  
  
 Das dritte Beispiel zeigt die Data Access-Klasse, die mit der Northwind-Datenbank interagiert. Die Klasse verwendet LINQ zum Abfragen und Aktualisieren der Employees-Tabelle. Das Beispiel erfordert eine LINQ to SQL-Klasse, die Northwind-Datenbank und Tabelle "Employees" darstellt. Weitere Informationen finden Sie unter [Vorgehensweise: Erstellen von LINQ to SQL-Klassen in einem Webprojekt](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/App_Code/EmployeeLogic.cs#5)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/App_Code/EmployeeLogic.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Updated" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
  </Members>
</Type>