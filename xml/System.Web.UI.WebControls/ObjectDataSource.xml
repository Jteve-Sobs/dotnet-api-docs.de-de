<Type Name="ObjectDataSource" FullName="System.Web.UI.WebControls.ObjectDataSource">
  <Metadata><Meta Name="ms.openlocfilehash" Value="167224cc3a8b87e45d736c1da6ad3045a36b8b6e" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86625913" /></Metadata><TypeSignature Language="C#" Value="public class ObjectDataSource : System.Web.UI.DataSourceControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ObjectDataSource extends System.Web.UI.DataSourceControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ObjectDataSource" />
  <TypeSignature Language="VB.NET" Value="Public Class ObjectDataSource&#xA;Inherits DataSourceControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectDataSource : System::Web::UI::DataSourceControl" />
  <TypeSignature Language="F#" Value="type ObjectDataSource = class&#xA;    inherit DataSourceControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.DataSourceControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.DefaultEvent("Selecting")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultEvent("Selecting")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.DefaultProperty("TypeName")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultProperty("TypeName")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName Language="C#">[System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ObjectDataSourceDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ObjectDataSourceDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Drawing.ToolboxBitmap(typeof(System.Web.UI.WebControls.ObjectDataSource))]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Drawing.ToolboxBitmap(typeof(System.Web.UI.WebControls.ObjectDataSource))&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Web.UI.ParseChildren(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Web.UI.ParseChildren(true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Web.UI.PersistChildren(false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Web.UI.PersistChildren(false)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ObjectDataSourceDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ObjectDataSourceDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt ein Geschäftsobjekt dar, das Daten zu datengebundenen Steuerelementen in Webanwendungsarchitekturen mit mehreren Ebenen bereitstellt.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 Inhalte dieses Themas:

-   [Introduction (Einführung)](#introduction)

-   [Zweck](#purpose)

-   [Abrufen von Daten](#retrieving_data)

-   [Ausführen von Daten Vorgängen](#performing_data_operations)

-   [Filtern von Daten](#filtering_data)

-   [Zwischenspeichern](#caching)

-   [Funktionen](#features)

-   [Datenansicht](#data_view)

-   [Verwenden von LINQ to SQL](#using_linq_to_sql)

-   [Deklarative Syntax](#declarative_syntax)

<a name="introduction"></a>
## <a name="introduction"></a>Einführung
 Ein- <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement funktioniert mit einer Klasse, die Sie erstellen. Sie erstellen Methoden, mit denen Daten abgerufen und aktualisiert werden, und geben dem Steuerelement im Markup die Namen dieser Methoden <xref:System.Web.UI.WebControls.ObjectDataSource> . Während der Rendering-oder Postback Verarbeitung Ruft die Methoden auf, die <xref:System.Web.UI.WebControls.ObjectDataSource> Sie angegeben haben.

 Es gibt kein visuelles Rendering des <xref:System.Web.UI.WebControls.ObjectDataSource> Steuer Elements. Daher <xref:System.Web.UI.WebControls.ObjectDataSource> unterstützt das keine visuellen Funktionen, wie z. b. die- <xref:System.Web.UI.DataSourceControl.EnableTheming%2A> Eigenschaft oder die- <xref:System.Web.UI.DataSourceControl.SkinID%2A> Eigenschaft.

<a name="purpose"></a>
## <a name="purpose"></a>Zweck
 Ein gängiges Anwendungs Entwurfsverfahren besteht darin, die Darstellungs Schicht von der Geschäftslogik zu trennen und die Geschäftslogik in Geschäftsobjekten zu kapseln. Diese Geschäftsobjekte bilden eine eindeutige Ebene zwischen der Darstellungs Schicht und der Datenebene, was zu einer dreistufigen Anwendungsarchitektur führt. Das- <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement ermöglicht es Entwicklern, ein ASP.NET-Datenquellen Steuerelement zu verwenden, während die dreistufige Anwendungsarchitektur beibehalten wird.

 Das- <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement verwendet Reflektion, um Instanzen von Geschäftsobjekten zu erstellen und Methoden zum Abrufen, aktualisieren, einfügen und Löschen von Daten aufzurufen. Die- <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> Eigenschaft identifiziert den Namen der Klasse, mit der der <xref:System.Web.UI.WebControls.ObjectDataSource> arbeitet. Das <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement erstellt und zerstört eine Instanz der-Klasse für jeden Methoden aufzurufen. das-Objekt ist für die Lebensdauer der Webanforderung nicht im Arbeitsspeicher enthalten. Dies ist ein schwerwiegender Aspekt, wenn das Geschäftsobjekt, das Sie verwenden, viele Ressourcen erfordert oder anderweitig kostenaufwendig erstellt und zerstört werden. Die Verwendung eines teuren Objekts ist möglicherweise nicht optimal, aber Sie können den Lebenszyklus des Objekts steuern, indem Sie die <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> Ereignisse, <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> und verwenden <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> .

> [!NOTE]
>  Die Methoden, die durch die <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> Eigenschaften, <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> , und identifiziert werden, <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> können Instanzmethoden oder `static` ( `Shared` in Visual Basic)-Methoden sein. Wenn die Methoden `static` ( `Shared` in Visual Basic) sind, wird keine Instanz des Geschäftsobjekts erstellt, und die- <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> , <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> -und- <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> Ereignisse werden nicht ausgelöst.

<a name="retrieving_data"></a>
## <a name="retrieving-data"></a>Abrufen von Daten
 Um Daten aus einem Geschäftsobjekt abzurufen, legen Sie die- <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> Eigenschaft auf den Namen der Methode fest, mit der Daten abgerufen werden. Wenn die Methode kein- <xref:System.Collections.IEnumerable> Objekt oder- <xref:System.Data.DataSet> Objekt zurückgibt, wird das-Objekt von der Common Language Runtime in einer-Auflistung umschließt <xref:System.Collections.IEnumerable> . Wenn die Methoden Signatur über Parameter verfügt, können Sie <xref:System.Web.UI.WebControls.Parameter> der Auflistung Objekte hinzufügen <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> und diese dann an die Werte binden, die an die von der-Eigenschaft angegebene Methode übergeben werden sollen <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> . Damit das Steuerelement <xref:System.Web.UI.WebControls.ObjectDataSource> die Parameter verwenden kann, müssen die Parameter mit den Namen und Typen der Parameter in der Methoden Signatur identisch sein. Weitere Informationen finden Sie unter [Verwenden von Parametern mit dem ObjectDataSource-Steuer](https://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4)Element.

 <xref:System.Web.UI.WebControls.ObjectDataSource>Wenn die-Methode aufgerufen wird, ruft das-Steuerelement Daten ab <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> . Diese Methode ermöglicht programmgesteuerten Zugriff auf die Methode, die durch die-Eigenschaft angegeben wird <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> . Die Methode, die von der-Eigenschaft angegeben wird, <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> wird automatisch von Steuerelementen aufgerufen, die an gebunden sind, <xref:System.Web.UI.WebControls.ObjectDataSource> Wenn Ihre- `DataBind` Methode aufgerufen wird. Wenn Sie die- `DataSourceID` Eigenschaft eines Daten gebundenen Steuer Elements festlegen, wird das-Steuerelement bei Bedarf automatisch an Daten aus der Datenquelle gebunden. Das Festlegen der- `DataSourceID` Eigenschaft ist die empfohlene Methode zum Binden eines- <xref:System.Web.UI.WebControls.ObjectDataSource> Steuer Elements an ein Daten gebundenes Steuerelement. Alternativ können Sie die- `DataSource` Eigenschaft festlegen, aber dann müssen Sie die- `DataBind` Methode des Daten gebundenen Steuer Elements explizit aufzurufen. Sie können die- <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Methode jederzeit Programm gesteuert aufrufen, um Daten abzurufen.

 Weitere Informationen zum Binden von Daten gebundenen Steuerelementen an Datenquellen-Steuerelemente finden [Sie unterbinden an Daten mithilfe eines Datenquellen-Steuer](https://msdn.microsoft.com/library/e41adfff-8fb8-449e-9cd1-9bd49788c5f7)Elements.

<a name="performing_data_operations"></a>
## <a name="performing-data-operations"></a>Ausführen von Daten Vorgängen
 Abhängig von den Funktionen des Geschäftsobjekts, mit dem das <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement arbeitet, können Sie Daten Vorgänge ausführen, z. b. Aktualisierungen, Einfügungen und Löschungen. Um diese Daten Vorgänge auszuführen, legen Sie den entsprechenden Methodennamen und alle zugehörigen Parameter für den Vorgang fest, den Sie ausführen möchten. Legen Sie für einen Aktualisierungs Vorgang z. b. die <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> -Eigenschaft auf den Namen der Geschäftsobjekt Methode fest, die Updates ausführt, und fügen Sie der Auflistung alle erforderlichen Parameter hinzu <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> . Wenn das <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement einem Daten gebundenen Steuerelement zugeordnet ist, werden die Parameter durch das Daten gebundene Steuerelement hinzugefügt. In diesem Fall müssen Sie sicherstellen, dass die Parameternamen der Methode den Feldnamen im Daten gebundenen Steuerelement entsprechen. Das Update wird ausgeführt, wenn die- <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> Methode aufgerufen wird, entweder explizit durch Ihren Code oder automatisch durch ein Daten gebundenes Steuerelement. Das gleiche allgemeine Muster wird für <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> -und- <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> Vorgänge befolgt. Geschäftsobjekte werden davon ausgegangen, dass diese Daten Satz Typen jeweils nacheinander und nicht als Batch verarbeitet werden.

<a name="filtering_data"></a>
## <a name="filtering-data"></a>Filtern von Daten
 Das- <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement kann Daten filtern, die von der- <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> Eigenschaft abgerufen werden, wenn die Daten als-Objekt oder-Objekt zurückgegeben werden <xref:System.Data.DataSet> <xref:System.Data.DataTable> . Sie können die- <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> Eigenschaft auf einen Filter Ausdruck festlegen, indem Sie eine Syntax der Format Zeichenfolge verwenden und Werte im Ausdruck an Parameter binden, die in der-Auflistung angegeben sind <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> .

<a name="caching"></a>
## <a name="caching"></a>Caching
 Obwohl die <xref:System.Web.UI.WebControls.ObjectDataSource> Instanz des Geschäftsobjekts nicht über mehrere Anforderungen hinweg beibehält, kann Sie das Ergebnis des Aufrufs der-Methode Zwischenspeichern, die durch die-Eigenschaft identifiziert wird <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> . Während die Daten zwischengespeichert werden, geben nachfolgende Aufrufe der- <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Methode die zwischengespeicherten Daten zurück, anstatt das Geschäftsobjekt zu erstellen und <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> mit Reflektion aufzurufen. Durch die Zwischenspeicherung können Sie das Erstellen des Objekts und das Aufrufen seiner Daten Methode auf Kosten des Arbeitsspeichers auf dem Webserver vermeiden. <xref:System.Web.UI.WebControls.ObjectDataSource>Speichert Daten automatisch zwischen, wenn die- <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> Eigenschaft auf festgelegt ist `true` , und die- <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> Eigenschaft wird auf die Anzahl der Sekunden festgelegt, in denen der Cache Daten speichert, bevor der Cache verworfen wird. Sie können auch eine <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> -Eigenschaft und eine optionale- <xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A> Eigenschaft angeben. Das- <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement ermöglicht es Ihnen, alle Datentypen zwischenzuspeichern, aber Sie sollten keine Objekte zwischenspeichern, die Ressourcen oder einen Zustand beibehalten, die nicht für die Verwendung mehrerer Anforderungen freigegeben werden können (z. b. ein offenes <xref:System.Data.SqlClient.SqlDataReader> Objekt), da dieselbe Instanz des Objekts für den Dienst mehrerer Anforderungen verwendet wird.

<a name="features"></a>
## <a name="features"></a>Features
 In der folgenden Tabelle werden die Funktionen des-Steuer Elements beschrieben <xref:System.Web.UI.WebControls.ObjectDataSource> .

|Funktion|Anforderungen|
|----------------|------------------|
|Wählen Sie Folgendes aus:|Legen <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> Sie die-Eigenschaft auf den Namen der Geschäftsobjekt Methode fest, mit der Daten ausgewählt werden, und fügen Sie alle erforderlichen Parameter in der Auflistung <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> entweder Programm gesteuert oder mit einem Daten gebundenen Steuerelement ein.|
|Sortieren|Legen Sie die- <xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A> Eigenschaft auf den Namen des Parameters in der- <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> Methode fest, die die Sortierkriterien enthält.|
|Filterung|Legen Sie die <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> -Eigenschaft auf einen Filter Ausdruck fest, und fügen Sie der Auflistung optional Parameter hinzu <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> , um die Daten zu filtern, wenn die- <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Methode aufgerufen wird. Die von der-Eigenschaft angegebene Methode <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> muss ein-oder-Objekt zurückgeben <xref:System.Data.DataSet> <xref:System.Data.DataTable> .|
|Paging|Das Paging von Datenquellen wird unterstützt, wenn die <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> -Methode Parameter für die maximale Anzahl der abzurufenden Datensätze und den Index des ersten abzurufenden Datensatzes enthält. Die Namen dieser Parameter müssen festgelegt werden, der <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> und <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> Eigenschaften bzw. Ein Daten gebundenes Steuerelement kann Paging selbst ausführen, auch wenn das Steuerelement das <xref:System.Web.UI.WebControls.ObjectDataSource> Paging nicht direkt in der durch die-Eigenschaft angegebenen Methode unterstützt <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> . Das Daten gebundene Steuerelement muss dies tun, da die von der-Eigenschaft angegebene Methode <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> ein Objekt zurückgibt, das die- <xref:System.Collections.ICollection> Schnittstelle implementiert.|
|Wird aktualisiert|Legen <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> Sie die-Eigenschaft auf den Namen der Geschäftsobjekt Methode fest, mit der Daten aktualisiert werden, und fügen Sie alle erforderlichen Parameter in die Auflistung ein <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> .|
|Wird gelöscht|Legen <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> Sie die-Eigenschaft auf den Namen der Geschäftsobjekt Methode oder-Funktion fest, mit der Daten gelöscht werden, und fügen Sie alle erforderlichen Parameter in die Auflistung ein <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> .|
|Einfügen|Legen <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> Sie die-Eigenschaft auf den Namen der Geschäftsobjekt Methode oder-Funktion fest, mit der Daten eingefügt werden, und fügen Sie alle erforderlichen Parameter in die Auflistung ein <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> .|
|Caching|Legen <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> Sie die-Eigenschaft auf `true` und die <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> -Eigenschaft und die-Eigenschaft <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> entsprechend dem zwischen Speicherungs Verhalten für die zwischengespeicherten Daten fest.|

> [!NOTE]
>  Wenn Sie die- <xref:System.Web.UI.WebControls.ObjectDataSource> Klasse zum Aktualisieren oder Einfügen von Daten verwenden, werden Zeichen folgen, die auf dem Client eingegeben werden, nicht automatisch aus dem Client Kultur Format in das Server Kultur Format konvertiert. Die Client Kultur könnte z. b. dd/mm/yyyy als Datumsformat angeben, und das Datumsformat auf dem Server ist möglicherweise mm/dd/yyyy. In diesem Fall würde der 5. Oktober 2009 in einem-Steuerelement als 5/10/2009 eingegeben werden, <xref:System.Web.UI.WebControls.TextBox> wird aber als 10. Mai 2009 interpretiert. Der 15. Oktober 2009 wird als 15/10/2009 eingegeben und als ungültiges Datum abgelehnt.

<a name="data_view"></a>
## <a name="data-view"></a>Datensicht
 Wie bei allen Datenquellen-Steuerelementen <xref:System.Web.UI.WebControls.ObjectDataSource> ist das Steuerelement einer Datenquellen Sicht-Klasse zugeordnet. Das- <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement ist zwar die Schnittstelle, die der Seiten Entwickler zum Arbeiten mit Daten verwendet, aber die- <xref:System.Web.UI.WebControls.ObjectDataSourceView> Klasse ist die Schnittstelle, mit der Daten gebundene Steuerelemente funktionieren. Außerdem beschreibt die <xref:System.Web.UI.WebControls.ObjectDataSourceView> -Klasse die Funktionen des Datenquellen-Steuer Elements und führt die eigentliche Arbeit aus. Dem <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement ist nur ein zugeordnet <xref:System.Web.UI.WebControls.ObjectDataSourceView> , und es wird immer benannt `DefaultView` . Während das- <xref:System.Web.UI.WebControls.ObjectDataSourceView> Objekt von der-Methode verfügbar gemacht wird <xref:System.Web.UI.WebControls.ObjectDataSource.GetView%2A> , werden viele seiner Eigenschaften und Methoden umschließt und direkt vom-Steuerelement bereitgestellt <xref:System.Web.UI.WebControls.ObjectDataSource> . Im Hintergrund führt das- <xref:System.Web.UI.WebControls.ObjectDataSourceView> Objekt alle Daten Vorgänge aus, einschließlich abrufen, einfügen, aktualisieren, löschen, Filtern und Sortieren der Daten. Weitere Informationen finden Sie unter <xref:System.Web.UI.WebControls.ObjectDataSourceView>.

<a name="using_linq_to_sql"></a>
## <a name="using-linq-to-sql"></a>Verwenden von LINQ to SQL
 Sie können das- <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement mit einer LINQ to SQL-Klasse verwenden. Legen Sie hierzu die <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> -Eigenschaft auf den Namen der Datenkontext Klasse fest. Außerdem legen Sie die <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> Methoden,, <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> und <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> auf die Methoden in der Datenkontext Klasse fest, mit denen die entsprechenden Vorgänge durchgeführt werden. Sie müssen einen Ereignishandler für das- <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> Ereignis erstellen, um die Freigabe der Datenkontext Klasse abzubrechen. Dieser Schritt ist erforderlich, da LINQ to SQL verzögerte Ausführung unterstützt, während das- <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement versucht, den Datenkontext nach dem Select-Vorgang zu verwerfen. Weitere Informationen zum Erstellen von LINQ to SQL Klassen finden Sie unter Gewusst [wie: Erstellen von LINQ to SQL Klassen in einem Webprojekt](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081). Ein Beispiel für das Abbrechen der Freigabe einer Datenkontext Klasse finden Sie unter dem- <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> Ereignis.

## <a name="using-the-entity-framework"></a>Verwenden des Entity Framework
 Sie können das-Steuerelement auch <xref:System.Web.UI.WebControls.ObjectDataSource> mit dem-Entity Framework verwenden. Weitere Informationen finden Sie unter [Verwenden der Entity Framework und des ObjectDataSource-Steuer](https://go.microsoft.com/fwlink/?LinkId=209117)Elements.

<a name="declarative_syntax"></a>
## <a name="declarative-syntax"></a>Deklarative Syntax

```
<asp:ObjectDataSource
    CacheDuration="string|Infinite"
    CacheExpirationPolicy="Absolute|Sliding"
    CacheKeyDependency="string"
    ConflictDetection="OverwriteChanges|CompareAllValues"
    ConvertNullToDBNull="True|False"
    DataObjectTypeName="string"
    DeleteMethod="string"
    EnableCaching="True|False"
    EnablePaging="True|False"
    EnableTheming="True|False"
    EnableViewState="True|False"
    FilterExpression="string"
    ID="string"
    InsertMethod="string"
    MaximumRowsParameterName="string"
    OldValuesParameterFormatString="string"
    OnDataBinding="DataBinding event handler"
    OnDeleted="Deleted event handler"
    OnDeleting="Deleting event handler"
    OnDisposed="Disposed event handler"
    OnFiltering="Filtering event handler"
    OnInit="Init event handler"
    OnInserted="Inserted event handler"
    OnInserting="Inserting event handler"
    OnLoad="Load event handler"
    OnObjectCreated="ObjectCreated event handler"
    OnObjectCreating="ObjectCreating event handler"
    OnObjectDisposing="ObjectDisposing event handler"
    OnPreRender="PreRender event handler"
    OnSelected="Selected event handler"
    OnSelecting="Selecting event handler"
    OnUnload="Unload event handler"
    OnUpdated="Updated event handler"
    OnUpdating="Updating event handler"
    runat="server"
    SelectCountMethod="string"
    SelectMethod="string"
    SkinID="string"
    SortParameterName="string"
    SqlCacheDependency="string"
    StartRowIndexParameterName="string"
    TypeName="string"
    UpdateMethod="string"
    Visible="True|False"
>
        <DeleteParameters>
                <asp:ControlParameter
                    ControlID="string"
                    ConvertEmptyStringToNull="True|False"
                    DefaultValue="string"
                    Direction="Input|Output|InputOutput|ReturnValue"
                    Name="string"
                    PropertyName="string"
                    Size="integer"
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|
                        Single|Double|Decimal|DateTime|String"
                />
                <asp:CookieParameter
                    ConvertEmptyStringToNull="True|False"
                    CookieName="string"
                    DefaultValue="string"
                    Direction="Input|Output|InputOutput|ReturnValue"
                    Name="string"
                    Size="integer"
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|
                        Single|Double|Decimal|DateTime|String"
                />
                <asp:FormParameter
                    ConvertEmptyStringToNull="True|False"
                    DefaultValue="string"
                    Direction="Input|Output|InputOutput|ReturnValue"
                    FormField="string"
                    Name="string"
                    Size="integer"
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|
                        Single|Double|Decimal|DateTime|String"
                />
                <asp:Parameter
                    ConvertEmptyStringToNull="True|False"
                    DefaultValue="string"
                    Direction="Input|Output|InputOutput|ReturnValue"
                    Name="string"
                    Size="integer"
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|
                        Single|Double|Decimal|DateTime|String"
                />
                <asp:ProfileParameter
                    ConvertEmptyStringToNull="True|False"
                    DefaultValue="string"
                    Direction="Input|Output|InputOutput|ReturnValue"
                    Name="string"
                    PropertyName="string"
                    Size="integer"
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|
                        Single|Double|Decimal|DateTime|String"
                />
                <asp:QueryStringParameter
                    ConvertEmptyStringToNull="True|False"
                    DefaultValue="string"
                    Direction="Input|Output|InputOutput|ReturnValue"
                    Name="string"
                    QueryStringField="string"
                    Size="integer"
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|
                        Single|Double|Decimal|DateTime|String"
                />
                <asp:SessionParameter
                    ConvertEmptyStringToNull="True|False"
                    DefaultValue="string"
                    Direction="Input|Output|InputOutput|ReturnValue"
                    Name="string"
                    SessionField="string"
                    Size="integer"
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|
                        Single|Double|Decimal|DateTime|String"
                />
        </DeleteParameters>
        <FilterParameters>
                <asp:ControlParameter
                    ControlID="string"
                    ConvertEmptyStringToNull="True|False"
                    DefaultValue="string"
                    Direction="Input|Output|InputOutput|ReturnValue"
                    Name="string"
                    PropertyName="string"
                    Size="integer"
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|
                        Single|Double|Decimal|DateTime|String"
                />
                <asp:CookieParameter
                    ConvertEmptyStringToNull="True|False"
                    CookieName="string"
                    DefaultValue="string"
                    Direction="Input|Output|InputOutput|ReturnValue"
                    Name="string"
                    Size="integer"
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|
                        Single|Double|Decimal|DateTime|String"
                />
                <asp:FormParameter
                    ConvertEmptyStringToNull="True|False"
                    DefaultValue="string"
                    Direction="Input|Output|InputOutput|ReturnValue"
                    FormField="string"
                    Name="string"
                    Size="integer"
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|
                        Single|Double|Decimal|DateTime|String"
                />
                <asp:Parameter
                    ConvertEmptyStringToNull="True|False"
                    DefaultValue="string"
                    Direction="Input|Output|InputOutput|ReturnValue"
                    Name="string"
                    Size="integer"
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|
                        Single|Double|Decimal|DateTime|String"
                />
                <asp:ProfileParameter
                    ConvertEmptyStringToNull="True|False"
                    DefaultValue="string"
                    Direction="Input|Output|InputOutput|ReturnValue"
                    Name="string"
                    PropertyName="string"
                    Size="integer"
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|
                        Single|Double|Decimal|DateTime|String"
                />
                <asp:QueryStringParameter
                    ConvertEmptyStringToNull="True|False"
                    DefaultValue="string"
                    Direction="Input|Output|InputOutput|ReturnValue"
                    Name="string"
                    QueryStringField="string"
                    Size="integer"
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|
                        Single|Double|Decimal|DateTime|String"
                />
                <asp:SessionParameter
                    ConvertEmptyStringToNull="True|False"
                    DefaultValue="string"
                    Direction="Input|Output|InputOutput|ReturnValue"
                    Name="string"
                    SessionField="string"
                    Size="integer"
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|
                        Single|Double|Decimal|DateTime|String"
                />
        </FilterParameters>
        <InsertParameters>
                <asp:ControlParameter
                    ControlID="string"
                    ConvertEmptyStringToNull="True|False"
                    DefaultValue="string"
                    Direction="Input|Output|InputOutput|ReturnValue"
                    Name="string"
                    PropertyName="string"
                    Size="integer"
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|
                        Single|Double|Decimal|DateTime|String"
                />
                <asp:CookieParameter
                    ConvertEmptyStringToNull="True|False"
                    CookieName="string"
                    DefaultValue="string"
                    Direction="Input|Output|InputOutput|ReturnValue"
                    Name="string"
                    Size="integer"
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|
                        Single|Double|Decimal|DateTime|String"
                />
                <asp:FormParameter
                    ConvertEmptyStringToNull="True|False"
                    DefaultValue="string"
                    Direction="Input|Output|InputOutput|ReturnValue"
                    FormField="string"
                    Name="string"
                    Size="integer"
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|
                        Single|Double|Decimal|DateTime|String"
                />
                <asp:Parameter
                    ConvertEmptyStringToNull="True|False"
                    DefaultValue="string"
                    Direction="Input|Output|InputOutput|ReturnValue"
                    Name="string"
                    Size="integer"
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|
                        Single|Double|Decimal|DateTime|String"
                />
                <asp:ProfileParameter
                    ConvertEmptyStringToNull="True|False"
                    DefaultValue="string"
                    Direction="Input|Output|InputOutput|ReturnValue"
                    Name="string"
                    PropertyName="string"
                    Size="integer"
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|
                        Single|Double|Decimal|DateTime|String"
                />
                <asp:QueryStringParameter
                    ConvertEmptyStringToNull="True|False"
                    DefaultValue="string"
                    Direction="Input|Output|InputOutput|ReturnValue"
                    Name="string"
                    QueryStringField="string"
                    Size="integer"
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|
                        Single|Double|Decimal|DateTime|String"
                />
                <asp:SessionParameter
                    ConvertEmptyStringToNull="True|False"
                    DefaultValue="string"
                    Direction="Input|Output|InputOutput|ReturnValue"
                    Name="string"
                    SessionField="string"
                    Size="integer"
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|
                        Single|Double|Decimal|DateTime|String"
                />
        </InsertParameters>
        <SelectParameters>
                <asp:ControlParameter
                    ControlID="string"
                    ConvertEmptyStringToNull="True|False"
                    DefaultValue="string"
                    Direction="Input|Output|InputOutput|ReturnValue"
                    Name="string"
                    PropertyName="string"
                    Size="integer"
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|
                        Single|Double|Decimal|DateTime|String"
                />
                <asp:CookieParameter
                    ConvertEmptyStringToNull="True|False"
                    CookieName="string"
                    DefaultValue="string"
                    Direction="Input|Output|InputOutput|ReturnValue"
                    Name="string"
                    Size="integer"
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|
                        Single|Double|Decimal|DateTime|String"
                />
                <asp:FormParameter
                    ConvertEmptyStringToNull="True|False"
                    DefaultValue="string"
                    Direction="Input|Output|InputOutput|ReturnValue"
                    FormField="string"
                    Name="string"
                    Size="integer"
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|
                        Single|Double|Decimal|DateTime|String"
                />
                <asp:Parameter
                    ConvertEmptyStringToNull="True|False"
                    DefaultValue="string"
                    Direction="Input|Output|InputOutput|ReturnValue"
                    Name="string"
                    Size="integer"
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|
                        Single|Double|Decimal|DateTime|String"
                />
                <asp:ProfileParameter
                    ConvertEmptyStringToNull="True|False"
                    DefaultValue="string"
                    Direction="Input|Output|InputOutput|ReturnValue"
                    Name="string"
                    PropertyName="string"
                    Size="integer"
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|
                        Single|Double|Decimal|DateTime|String"
                />
                <asp:QueryStringParameter
                    ConvertEmptyStringToNull="True|False"
                    DefaultValue="string"
                    Direction="Input|Output|InputOutput|ReturnValue"
                    Name="string"
                    QueryStringField="string"
                    Size="integer"
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|
                        Single|Double|Decimal|DateTime|String"
                />
                <asp:SessionParameter
                    ConvertEmptyStringToNull="True|False"
                    DefaultValue="string"
                    Direction="Input|Output|InputOutput|ReturnValue"
                    Name="string"
                    SessionField="string"
                    Size="integer"
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|
                        Single|Double|Decimal|DateTime|String"
                />
        </SelectParameters>
        <UpdateParameters>
                <asp:ControlParameter
                    ControlID="string"
                    ConvertEmptyStringToNull="True|False"
                    DefaultValue="string"
                    Direction="Input|Output|InputOutput|ReturnValue"
                    Name="string"
                    PropertyName="string"
                    Size="integer"
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|
                        Single|Double|Decimal|DateTime|String"
                />
                <asp:CookieParameter
                    ConvertEmptyStringToNull="True|False"
                    CookieName="string"
                    DefaultValue="string"
                    Direction="Input|Output|InputOutput|ReturnValue"
                    Name="string"
                    Size="integer"
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|
                        Single|Double|Decimal|DateTime|String"
                />
                <asp:FormParameter
                    ConvertEmptyStringToNull="True|False"
                    DefaultValue="string"
                    Direction="Input|Output|InputOutput|ReturnValue"
                    FormField="string"
                    Name="string"
                    Size="integer"
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|
                        Single|Double|Decimal|DateTime|String"
                />
                <asp:Parameter
                    ConvertEmptyStringToNull="True|False"
                    DefaultValue="string"
                    Direction="Input|Output|InputOutput|ReturnValue"
                    Name="string"
                    Size="integer"
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|
                        Single|Double|Decimal|DateTime|String"
                />
                <asp:ProfileParameter
                    ConvertEmptyStringToNull="True|False"
                    DefaultValue="string"
                    Direction="Input|Output|InputOutput|ReturnValue"
                    Name="string"
                    PropertyName="string"
                    Size="integer"
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|
                        Single|Double|Decimal|DateTime|String"
                />
                <asp:QueryStringParameter
                    ConvertEmptyStringToNull="True|False"
                    DefaultValue="string"
                    Direction="Input|Output|InputOutput|ReturnValue"
                    Name="string"
                    QueryStringField="string"
                    Size="integer"
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|
                        Single|Double|Decimal|DateTime|String"
                />
                <asp:SessionParameter
                    ConvertEmptyStringToNull="True|False"
                    DefaultValue="string"
                    Direction="Input|Output|InputOutput|ReturnValue"
                    Name="string"
                    SessionField="string"
                    Size="integer"
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|
                        Single|Double|Decimal|DateTime|String"
                />
        </UpdateParameters>
</asp:ObjectDataSource>
```



## Examples
 Für dieses Thema steht ein Visual Studio-Website Projekt mit Quellcode zur Verfügung: [herunterladen](https://code.msdn.microsoft.com/Project/Download/FileDownload.aspx?ProjectName=aspnetmsdnexamples&DownloadId=14838).

 In diesem Abschnitt wird ein <xref:System.Web.UI.WebControls.ObjectDataSource> in Markup auf einer ASPX-Seite angezeigt, und es werden die Geschäftsobjekte angezeigt, mit denen es arbeitet. Das Beispiel ist die ASPX-Seite. Sie enthält ein <xref:System.Web.UI.WebControls.GridView> Steuerelement, das an ein-Steuerelement gebunden ist <xref:System.Web.UI.WebControls.ObjectDataSource> . Das <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement Markup gibt den Namen des Geschäftsobjekts und den Namen der aufzurufenden Geschäftsobjekt Methode an, um Daten abzurufen.

 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/objds1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/objds1vb.aspx#1)]

 Das folgende Beispiel zeigt das Geschäftsobjekt, das das- <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement in der ASPX-Seite verwendet. (In vielen anderen <xref:System.Web.UI.WebControls.ObjectDataSource> Codebeispielen wird auch dieses Geschäftsobjekt verwendet.) Das Beispiel besteht aus den folgenden beiden grundlegenden Klassen:

-   Die- `EmployeeLogic` Klasse ist die Geschäftslogik Klasse, die von <xref:System.Web.UI.WebControls.ObjectDataSource> verwendet wird.

-   Die- `NorthwindEmployee` Klasse definiert das Datenobjekt, das von der-Methode der-Klasse zurückgegeben wird `GetAllEmployees` `EmployeeLogic` .

 Eine zusätzliche `NorthwindDataException` Klasse wird zur einfacheren Bereitstellung bereitgestellt.

 Diese Gruppe von Beispiel Klassen funktioniert mit der Northwind Traders-Datenbank, die mit Microsoft SQL Server und Microsoft Access verfügbar ist. Ein umfassendes, funktionierendes Beispiel ist die Kompilierung und Verwendung dieser Klassen mit dem bereitgestellten ASPX-Seiten Beispiel.

 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/northwindemployee1.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/northwindemployee1.vb#2)]

 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.IDataSource" />
    <altmember cref="T:System.Web.UI.DataSourceControl" />
    <altmember cref="T:System.Web.UI.WebControls.ObjectDataSourceView" />
    <related type="Article" href="https://msdn.microsoft.com/library/a806fa2c-fe6a-405f-869c-74e804a642ea">Exemplarische Vorgehensweise: Datenbindung an ein benutzerdefiniertes Geschäftsobjekt</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">Datengebundene Webserversteuerelemente</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">Übersicht über das ObjectDataSource-Steuerelement</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=214011">Verwenden des Entity Framework und des ObjectDataSource-Steuer Elements</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />-Klasse.</summary>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectDataSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectDataSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />-Klasse.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectDataSource (string typeName, string selectMethod);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName, string selectMethod) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeName As String, selectMethod As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectDataSource(System::String ^ typeName, System::String ^ selectMethod);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.ObjectDataSource : string * string -&gt; System.Web.UI.WebControls.ObjectDataSource" Usage="new System.Web.UI.WebControls.ObjectDataSource (typeName, selectMethod)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="selectMethod" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">Der Name der Klasse, mit der die <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> arbeitet.</param>
        <param name="selectMethod">Der Name der Methode oder Funktion, die die <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> aufruft, um Daten abzurufen.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />-Klasse unter Verwendung des angegebenen Typnamens und des angegebenen Datenabrufmethoden-Namens.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Der Wert des- `typeName` Parameters kann ein teilweise qualifizierter Typ für Code sein, der sich im bin-oder App_Code Verzeichnis befindet, oder ein voll qualifizierter Typname für Code, der im globalen Assemblycache registriert ist. Wenn Sie den globalen Assemblycache verwenden, müssen Sie den entsprechenden Verweis auf den `assemblies` Abschnitt der Machine.config-oder Web.config Konfigurationsdatei hinzufügen.

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="CacheDuration">
      <MemberSignature Language="C#" Value="public virtual int CacheDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CacheDuration" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.CacheDuration" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheDuration As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CacheDuration { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CacheDuration : int with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.CacheDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(0)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(0)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataSourceCacheDurationConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataSourceCacheDurationConverter))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Zeitspanne in Sekunden ab, die das Datenquellensteuerelement die von der <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />-Eigenschaft abgerufenen Daten zwischenspeichert, oder legt diese fest.</summary>
        <value>Die Anzahl von Sekunden, die die <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> benötigt, um die Ergebnisse eines Aufrufs der <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />-Eigenschaft zwischenzuspeichern. Die Standardeinstellung ist 0. Der Wert kann nicht negativ sein.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Das <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement unterstützt das Zwischenspeichern von Daten Während die Daten zwischengespeichert werden, rufen Aufrufe der- <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Methode Daten aus dem Cache und nicht aus dem Geschäftsobjekt ab, mit dem der <xref:System.Web.UI.WebControls.ObjectDataSource> arbeitet. Wenn der Cache abläuft, <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Ruft die-Methode Daten aus dem Geschäftsobjekt ab und speichert die Daten dann erneut.

 Das <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement speichert Daten automatisch zwischen, wenn die <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> -Eigenschaft auf festgelegt ist `true` und die- <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> Eigenschaft auf einen Wert größer als 0 festgelegt ist. damit wird angegeben, wie viele Sekunden der Cache Daten speichert, bevor der Cache Eintrag verworfen wird. Der Wert 0 gibt einen unendlich langen Cache an.

 Der Cache wird durch eine Kombination aus Dauer und Einstellung reguliert <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> . Wenn die- <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> Eigenschaft auf den-Wert festgelegt ist <xref:System.Web.UI.DataSourceCacheExpiry.Absolute> , <xref:System.Web.UI.WebControls.ObjectDataSource> speichert die Daten beim ersten Aufruf der <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> -Methode zwischen und speichert Sie im Arbeitsspeicher, für den die-Eigenschaft höchstens die von der-Eigenschaft angegebene Zeitspanne enthält <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> . Die Daten werden möglicherweise vor der Dauer freigegeben, wenn der Arbeitsspeicher benötigt wird. Der Cache wird dann beim nächsten Aufrufen der-Methode aktualisiert <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> . Wenn die- <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> Eigenschaft auf Value festgelegt ist <xref:System.Web.UI.DataSourceCacheExpiry.Sliding> , speichert das Datenquellen-Steuerelement Daten beim ersten Aufruf der- <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Methode zwischen und setzt das Zeitfenster, für das es den Cache enthält, bei jedem nachfolgenden Aufruf der- <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Methode zurück. Der Cache läuft ab, wenn keine Aktivität für eine Zeit vorhanden ist, die <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> seit dem letzten Aufruf der-Methode gleich der-Eigenschaft ist <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> .



## Examples
 Dieser Abschnitt enthält zwei Codebeispiele. Im ersten Codebeispiel wird veranschaulicht, wie ein- <xref:System.Web.UI.WebControls.ObjectDataSource> Objekt Caching unterstützt. Im zweiten Codebeispiel wird die Implementierung einer Wrapper Methode veranschaulicht, die ein-Objekt zurückgibt, um das zwischen <xref:System.Data.DataSet> Speichern mit einem-Objekt zu ermöglichen <xref:System.Web.UI.WebControls.ObjectDataSource> .

 Im folgenden Codebeispiel wird veranschaulicht, wie ein- <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement Caching unterstützt. Um das Zwischenspeichern zu aktivieren, müssen Sie die-Methode implementieren, die Daten abruft, die durch die- <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> Eigenschaft identifiziert werden, um die Daten als-Objekt zurückzugeben <xref:System.Data.DataSet> . In diesem Beispiel ist die- <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> Eigenschaft auf festgelegt `true` , und die <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> -Eigenschaft und die-Eigenschaft <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> werden festgelegt. Der <xref:System.Web.UI.WebControls.ObjectDataSource> speichert Daten, die von der- <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> Eigenschaft für 30 Sekunden zurückgegeben werden.

 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_6#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_6/CS/objds6cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_6#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_6/VB/objds6vb.aspx#1)]

 Im folgenden Codebeispiel wird veranschaulicht, wie eine Wrapper Methode implementiert wird, die ein- <xref:System.Data.DataSet> Objekt zum Aktivieren der Zwischenspeicherung mit einem-Steuerelement zurückgibt <xref:System.Web.UI.WebControls.ObjectDataSource> In der Basis Implementierung der- `EmployeeLogic` Klasse gibt die- `GetAllEmployees` Methode ein- <xref:System.Collections.ArrayList> Objekt zurück. Anstatt das-Objekt vollständig zu Refactoring, damit <xref:System.Web.UI.WebControls.ObjectDataSource> es mit dem auf einer Web Forms Seite funktioniert, wird eine Wrapper Methode namens `GetAllEmployeesAsDataSet` hinzugefügt, die eine Gruppe von `NorthwindEmployee` Daten als zurückgibt <xref:System.Data.DataSet> .

 Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die-Klasse bereitgestellt wird <xref:System.Web.UI.WebControls.ObjectDataSource> .

 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_5#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_5/CS/northwindemployee5.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_5#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_5/VB/northwindemployee5.vb#3)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.EnableCaching" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="CacheExpirationPolicy">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.DataSourceCacheExpiry CacheExpirationPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataSourceCacheExpiry CacheExpirationPolicy" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheExpirationPolicy As DataSourceCacheExpiry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::DataSourceCacheExpiry CacheExpirationPolicy { System::Web::UI::DataSourceCacheExpiry get(); void set(System::Web::UI::DataSourceCacheExpiry value); };" />
      <MemberSignature Language="F#" Value="member this.CacheExpirationPolicy : System.Web.UI.DataSourceCacheExpiry with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceCacheExpiry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Cacheablaufverhalten ab, das in Kombination mit der Dauer das Verhalten des vom Datenquellen-Steuerelement verwendeten Caches beschreibt.</summary>
        <value>Einer der <see cref="T:System.Web.UI.DataSourceCacheExpiry" />-Werte. Der Standardwert ist <see cref="F:System.Web.UI.DataSourceCacheExpiry.Absolute" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Das <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement unterstützt das Zwischenspeichern von Daten Während die Daten zwischengespeichert werden, rufen Aufrufe der- <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Methode Daten aus dem Cache und nicht aus dem Geschäftsobjekt ab, mit dem der <xref:System.Web.UI.WebControls.ObjectDataSource> arbeitet. Wenn der Cache abläuft, <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Ruft die-Methode Daten aus dem Geschäftsobjekt ab und speichert die Daten dann erneut.

 Das <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement speichert Daten automatisch zwischen, wenn die <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> -Eigenschaft auf festgelegt ist `true` und die- <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> Eigenschaft auf einen Wert größer als 0 festgelegt ist. damit wird angegeben, wie viele Sekunden der Cache Daten speichert, bevor der Cache Eintrag verworfen wird. Der Wert 0 gibt einen unendlich langen Cache Zeitraum an.

 Der Cache wird durch eine Kombination aus Dauer und Einstellung reguliert <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> . Wenn die- <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> Eigenschaft auf den-Wert festgelegt ist <xref:System.Web.UI.DataSourceCacheExpiry.Absolute> , <xref:System.Web.UI.WebControls.ObjectDataSource> speichert die Daten beim ersten Aufruf der <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> -Methode zwischen und speichert Sie im Arbeitsspeicher, für den die-Eigenschaft höchstens die von der-Eigenschaft angegebene Zeitspanne enthält <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> . Die Daten werden möglicherweise vor der Dauer freigegeben, wenn der Arbeitsspeicher benötigt wird. Der Cache wird dann beim nächsten Aufrufen der-Methode aktualisiert <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> . Wenn die- <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> Eigenschaft auf den-Wert festgelegt ist <xref:System.Web.UI.DataSourceCacheExpiry.Sliding> , speichert das Datenquellen-Steuerelement Daten beim ersten Aufruf der- <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Methode zwischen und setzt das Zeitfenster, für das es den Cache enthält, für jeden nachfolgenden Aufruf der- <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Methode zurück. Der Cache läuft ab, wenn keine Aktivität für eine Zeit vorhanden ist, die <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> seit dem letzten Aufruf der-Methode gleich der-Eigenschaft ist <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> .



## Examples
 Dieser Abschnitt enthält zwei Codebeispiele. Im ersten Codebeispiel wird veranschaulicht, wie ein <xref:System.Web.UI.WebControls.ObjectDataSource> Objekt das Filtern und Zwischenspeichern unterstützt. Im zweiten Codebeispiel wird veranschaulicht, wie eine Wrapper Methode implementiert wird, die ein-Objekt zurückgibt, um das zwischen <xref:System.Data.DataSet> Speichern und Filtern mit einem Objekt zu ermöglichen <xref:System.Web.UI.WebControls.ObjectDataSource> .

 Im folgenden Codebeispiel wird veranschaulicht, wie ein <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement Filter und Caching unterstützt. Um das Filtern und Zwischenspeichern zu aktivieren, müssen Sie die-Methode implementieren, die Daten abruft, die durch die- <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> Eigenschaft identifiziert werden, um die Daten als-Objekt zurückzugeben <xref:System.Data.DataSet> . In diesem Beispiel ist das Caching aktiviert, da das `EmployeeLogic` -Objektdaten als zurückgibt <xref:System.Data.DataSet> , die <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> -Eigenschaft auf festgelegt ist `true` und die <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> -Eigenschaft und die-Eigenschaft <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> festgelegt werden. Der <xref:System.Web.UI.WebControls.ObjectDataSource> speichert Daten, die von der- <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> Eigenschaft für 30 Sekunden zurückgegeben werden.

 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_6#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_6/CS/objds6cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_6#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_6/VB/objds6vb.aspx#1)]

 Im folgenden Codebeispiel wird die Implementierung einer Wrapper Methode veranschaulicht, die ein-Objekt zurückgibt, um das zwischen <xref:System.Data.DataSet> Speichern und Filtern mit einem-Steuerelement zu ermöglichen <xref:System.Web.UI.WebControls.ObjectDataSource> . In der Basis Implementierung der- `EmployeeLogic` Klasse gibt die `GetAllEmployees` Methode einen zurück <xref:System.Collections.ArrayList> . Anstatt das-Objekt vollständig zu Refactoring, damit <xref:System.Web.UI.WebControls.ObjectDataSource> es mit dem auf einer Web Forms Seite funktioniert, wird eine Wrapper Methode namens `GetAllEmployeesAsDataSet` hinzugefügt, die eine Gruppe von `NorthwindEmployee` Daten als zurückgibt <xref:System.Data.DataSet> . Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die-Klasse bereitgestellt wird <xref:System.Web.UI.WebControls.ObjectDataSource> .

 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_5#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_5/CS/northwindemployee5.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_5#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_5/VB/northwindemployee5.vb#3)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.CacheDuration" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.EnableCaching" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="CacheKeyDependency">
      <MemberSignature Language="C#" Value="public virtual string CacheKeyDependency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CacheKeyDependency" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheKeyDependency As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CacheKeyDependency { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CacheKeyDependency : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine benutzerdefinierte Schlüsselabhängigkeit ab, die mit sämtlichen vom Datenquellen-Steuerelement erstellten Datencacheobjekten verknüpft ist, oder legt diese fest.</summary>
        <value>Ein Schlüssel, der alle von der <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> erstellten Cacheobjekte angibt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die- <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> Eigenschaft kann auf einen beliebigen Zeichen folgen Wert festgelegt werden.

 Alle Cacheobjekte laufen explizit ab, wenn der Schlüssel abläuft. Dies ermöglicht es Ihnen, Cache Einträge, die vom Programm gesteuert aus dem eigenen Code erstellt werden, ungültig zu machen <xref:System.Web.UI.WebControls.ObjectDataSource> .

 Das <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement unterstützt das Zwischenspeichern von Daten Während die Daten zwischengespeichert werden, rufen Aufrufe der- <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Methode Daten aus dem Cache und nicht aus dem Geschäftsobjekt ab, mit dem der <xref:System.Web.UI.WebControls.ObjectDataSource> arbeitet. Wenn der Cache abläuft, <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Ruft die-Methode Daten aus dem Geschäftsobjekt ab und speichert die Daten dann erneut.

 Das <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement speichert Daten automatisch zwischen, wenn die <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> -Eigenschaft auf festgelegt ist `true` und die- <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> Eigenschaft auf einen Wert größer als 0 festgelegt ist. damit wird angegeben, wie viele Sekunden der Cache Daten speichert, bevor der Cache Eintrag verworfen wird. Der Wert 0 gibt einen unendlich langen Cache an.

 Sie können die <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> -Eigenschaft festlegen, um eine Abhängigkeit zwischen allen Cache Einträgen zu erstellen, die vom <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement und dem-Schlüssel erstellt werden. Alle Cache Einträge können jederzeit Programm gesteuert ablaufen, wenn der Schlüssel abläuft. Laufen Sie den Schlüssel ab, indem Sie die- <xref:System.Web.Caching.Cache.Remove%2A?displayProperty=nameWithType> Methode mit dem aktuellen <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> Wert als-Parameter verwenden.

 Für jede Kombination der <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> Eigenschaften,, <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> , <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> und wird ein eindeutiger Cache Eintrag erstellt <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> . Mehrere Steuer <xref:System.Web.UI.WebControls.ObjectDataSource> Elemente können dieselben Cache Einträge in Szenarios verwenden, in denen Sie Daten mit demselben Typ, derselben Methode und denselben Parametern laden.



## Examples
 Die folgenden drei Beispiele zeigen eine Webseite, eine Code-Behind-Seiten Klasse und eine Datenzugriffs Klasse, die Datensätze aus der Employees-Tabelle in der Northwind-Datenbank abruft.

 Das erste Beispiel zeigt eine Webseite, die zwei <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelemente enthält, ein <xref:System.Web.UI.WebControls.DropDownList> -Steuerelement und ein- <xref:System.Web.UI.WebControls.DetailsView> Steuerelement. Das erste <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement und das- <xref:System.Web.UI.WebControls.DropDownList> Steuerelement werden zum Abrufen und Anzeigen von Mitarbeiter Namen aus der Datenbank verwendet. Mit dem zweiten <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement und dem-Steuerelement wird <xref:System.Web.UI.WebControls.DetailsView> der vom Benutzer ausgewählte Datensatz abgerufen und angezeigt.

 Caching ist für das- <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement aktiviert. Daher wird jeder Datensatz nur einmal aus der Datenbank abgerufen. Die- <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> Eigenschaft wird auf "Mitarbeiter Details" festgelegt, aber jeder Zeichen folgen Wert kann als Schlüssel verwendet werden. Die Webseite enthält auch ein <xref:System.Web.UI.WebControls.Button> Steuerelement, auf das der Benutzer klicken kann, um die zwischengespeicherten Daten zu ablaufen.

 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_18#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default2.aspx#3)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_18#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default2.aspx#3)]

 Das zweite Beispiel zeigt einen Handler für das <xref:System.Web.UI.Control.Load> -Ereignis und einen Handler für das- <xref:System.Web.UI.WebControls.Button.Click> Ereignis des- <xref:System.Web.UI.WebControls.Button> Steuer Elements. Der <xref:System.Web.UI.Control.Load> Ereignishandler erstellt ein Cache Element mit einem Schlüssel, der auf den Wert festgelegt ist <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> . Der <xref:System.Web.UI.WebControls.Button.Click> Ereignishandler entfernt das Cache Element, dessen Schlüssel gleich dem <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> Wert ist. Wenn das Cache Element entfernt wird, sind alle zwischengespeicherten Daten, die vom Schlüssel abhängen, abgelaufen.

 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default2.aspx.cs#4)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default2.aspx.vb#4)]

 Das dritte Beispiel zeigt die Datenzugriffs Klasse, die mit der Northwind-Datenbank interagiert. Die-Klasse verwendet LINQ, um die Employees-Tabelle abzufragen. Das Beispiel erfordert eine LINQ to SQL-Klasse, die die Datenbank Northwind und die Employees-Tabelle darstellt. Weitere Informationen finden Sie unter Vorgehens [Weise: Erstellen von LINQ to SQL Klassen in einem Webprojekt](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).

 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/App_Code/EmployeeLogic.cs#5)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/App_Code/EmployeeLogic.vb#5)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.SqlCacheDependency" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="ConflictDetection">
      <MemberSignature Language="C#" Value="public System.Web.UI.ConflictOptions ConflictDetection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ConflictOptions ConflictDetection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection" />
      <MemberSignature Language="VB.NET" Value="Public Property ConflictDetection As ConflictOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ConflictOptions ConflictDetection { System::Web::UI::ConflictOptions get(); void set(System::Web::UI::ConflictOptions value); };" />
      <MemberSignature Language="F#" Value="member this.ConflictDetection : System.Web.UI.ConflictOptions with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.ConflictDetection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ConflictOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der bestimmt, ob nur die neuen Werte an die <see langword="Update" />-Methode oder aber die alten und die neuen Werte an die <see langword="Update" />-Methode übergeben werden, oder legt diesen fest.</summary>
        <value>Einer der <see cref="T:System.Web.UI.ConflictOptions" />-Werte. Der Standardwert ist <see cref="F:System.Web.UI.ConflictOptions.OverwriteChanges" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Diese Eigenschaft bestimmt, ob Parameter für alte und neue Werte auf die von der-Eigenschaft angegebene Methode angewendet werden <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> . Wenn die von der-Eigenschaft angegebene Methode z. b. <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> ein <xref:System.Data.DataTable> -Steuerelement mit den Spalten und zurückgibt `Name` `Number` und die- <xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A> Eigenschaft auf das-Feld festgelegt ist <xref:System.Web.UI.ConflictOptions.OverwriteChanges> , werden Parameter für `Name` und `Number` für die-Methode erstellt `Update` . Wenn die- <xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A> Eigenschaft auf den-Wert festgelegt ist <xref:System.Web.UI.ConflictOptions.CompareAllValues> , werden Parameter für `Name` , `Number` , `original_Name` und erstellt `original_Number` . (Der genaue Name der Parameter für die ursprünglichen Werte hängt von der- <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> Eigenschaft ab.) Der <xref:System.Web.UI.WebControls.ObjectDataSource> bestimmt dann, ob die in der-Eigenschaft angegebene Methode <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> über Parameter verfügt, die mit identisch sind.

 Die Parallelitäts Steuerung ist ein Verfahren, mit dem Datenspeicher steuern, wie Daten im Speicher gelesen und geändert werden, wenn mehrere Clients auf dieselben Daten zugreifen und diese bearbeiten. Beispielsweise liest ein Client Daten und zeigt Sie einem Benutzer an, während ein anderer Client dieselben Daten liest und Sie einem anderen Benutzer präsentiert. Wenn beide Benutzer die Daten aktualisieren und Sie an den Datenspeicher senden, kann ein unerwartetes Ergebnis auftreten, weil beide Clients möglicherweise unterschiedliche Werte für die gleichen Daten bereitstellen. Dies gilt als Konflikt. Indem die <xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A> -Eigenschaft auf den <xref:System.Web.UI.ConflictOptions.CompareAllValues> -Wert festgelegt wird, `Update` kann die-Methode die alten und neuen Werte mit der ursprünglichen Datenquelle vergleichen, um Konflikte zu erkennen und ggf. zu behandeln.

 Die- <xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A> Eigenschaft delegiert an die- <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A> Eigenschaft des- <xref:System.Web.UI.WebControls.ObjectDataSourceView> Objekts, das dem-Steuerelement zugeordnet ist <xref:System.Web.UI.WebControls.ObjectDataSource> .

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ConflictOptions" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="ConvertNullToDBNull">
      <MemberSignature Language="C#" Value="public bool ConvertNullToDBNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConvertNullToDBNull" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.ConvertNullToDBNull" />
      <MemberSignature Language="VB.NET" Value="Public Property ConvertNullToDBNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ConvertNullToDBNull { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ConvertNullToDBNull : bool with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.ConvertNullToDBNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die an einen Aktualisierungs-, Einfüge- oder Löschvorgang übergebenen <see cref="T:System.Web.UI.WebControls.Parameter" />-Werte vom <see cref="F:System.DBNull.Value" />-Steuerelement automatisch von <see langword="null" /> in den <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />-Wert konvertiert werden, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn an das <see cref="T:System.Web.UI.WebControls.Parameter" />-Steuerelement übergebene <see langword="null" />-Werte in <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />-Objekten automatisch in <see cref="F:System.DBNull.Value" />-Werte konvertiert werden, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 `null`Wenn Sie nicht in den-Wert wechseln, <xref:System.DBNull.Value> kann dies zur Laufzeit zu Fehlern führen. Verwenden Sie die- <xref:System.Web.UI.WebControls.ObjectDataSource.ConvertNullToDBNull%2A> Eigenschaft, um anzugeben, ob Werte, die <xref:System.Web.UI.WebControls.Parameter> an einen Aktualisierungs-, Einfüge-oder Löschvorgang übermittelt werden, automatisch von `null` in den-Wert konvertiert werden <xref:System.DBNull.Value> <xref:System.Web.UI.WebControls.ObjectDataSource> .

 ]]></format>
        </remarks>
        <altmember cref="F:System.DBNull.Value" />
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="DataObjectTypeName">
      <MemberSignature Language="C#" Value="public string DataObjectTypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataObjectTypeName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property DataObjectTypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataObjectTypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataObjectTypeName : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen einer Klasse ab, die vom <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />-Steuerelement als Parameter bei Datenvorgängen vom Typ Aktualisieren, Einfügen oder Löschen verwendet wird, anstatt einzelne Werte aus dem datengebundenen Steuerelement zu übergeben, oder legt diesen fest.</summary>
        <value>Ein teilweise oder vollqualifizierter Klassenname, der den Typ des Objekts angibt, das die <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> als Parameter für einen der Vorgänge <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />, <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" /> oder <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" /> verwenden kann. Der Standardwert ist eine leere Zeichenfolge ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Anstatt mehrere Parameter anzugeben, die an die <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> Methoden, und übermittelt werden <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> , können Sie ein Objekt erstellen, das mehrere Daten Feldwerte aggregiert. Dieses Objekt wird anstelle von mehreren Parametern an die-Methoden übermittelt.

 Das Standardverhalten eines <xref:System.Web.UI.WebControls.ObjectDataSource> Steuer Elements, das an ein Daten gebundenes Steuerelement gebunden ist, besteht darin, dass das Daten gebundene Steuerelement ein- <xref:System.Web.UI.WebControls.Parameter> Objekt für jeden Parameter in der Datenquelle erstellt. Wenn das Geschäftsobjekt viele Felder enthält, verfügt die resultierende Methode auch über viele Felder. Mit der- <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> Eigenschaft können Sie einen Typ angeben, der über eine-Eigenschaft für jedes Datenfeld verfügt. Anstatt mehrere Parameter an die Methode zu übergeben, erstellt die Laufzeit ein Objekt und legt alle seine Eigenschaften fest. Dieses ein Objekt wird der Parameter Auflistung für den Methoden aufzurufen.

 Der Typ, der von der-Eigenschaft angegeben wird, <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> muss über einen Parameter losen Konstruktor verfügen, der keine Parameter aufweist, sodass das <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement eine Instanz des Typs erstellen kann. Der Typ muss auch festleg bare Eigenschaften aufweisen, die es dem Steuerelement ermöglichen, <xref:System.Web.UI.WebControls.ObjectDataSource> das Objekt mit Werten zu füllen, die vom Daten gebundenen Steuerelement übermittelt werden. <xref:System.Web.UI.WebControls.ObjectDataSource>Es wird erwartet, dass die Eigenschaftsnamen des Steuer Elements exakt mit den Parameternamen von Werten übereinstimmen, die vom Daten gebundenen Steuerelement übergeben werden.

 Wenn die <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> -Eigenschaft festgelegt wird und das- <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement einem Daten gebundenen Steuerelement zugeordnet ist, müssen die Methoden, die von der <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> -Eigenschaft und der-Eigenschaft angegeben werden, <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> jeweils einen Parameter des Typs aufweisen, der in der-Eigenschaft angegeben ist <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> . Wenn die- <xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A> Eigenschaft auf den-Wert festgelegt ist <xref:System.Web.UI.ConflictOptions.OverwriteChanges> , muss die-Methode, die von der-Eigenschaft angegeben wird, über <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> einen Parameter des Typs verfügen, der in der-Eigenschaft angegeben ist <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> . Wenn die- <xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A> Eigenschaft auf den-Wert festgelegt ist <xref:System.Web.UI.ConflictOptions.CompareAllValues> , muss die-Methode, die von der-Eigenschaft angegeben wird, über <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> zwei Parameter des Typs verfügen, der in der-Eigenschaft angegeben ist <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> . Der erste Parameter enthält die ursprünglichen Werte. der zweite Parameter enthält die neuen Werte.

 Die- <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> Eigenschaft delegiert an die- <xref:System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName%2A> Eigenschaft des <xref:System.Web.UI.WebControls.ObjectDataSourceView> , das dem-Steuerelement zugeordnet ist <xref:System.Web.UI.WebControls.ObjectDataSource> .



## Examples
 Der-Abschnitt enthält zwei Codebeispiele. Im ersten Codebeispiel wird veranschaulicht, wie ein Typ implementiert wird, der alle Parameterwerte mithilfe der-Eigenschaft in einem-Objekt kombiniert <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> . Das zweite Codebeispiel zeigt die Webseite, die die beiden Klassen verwendet, die im ersten Codebeispiel verwendet werden.

 Im folgenden Codebeispiel wird veranschaulicht, wie ein Typ implementiert wird, der alle Parameterwerte mit der-Eigenschaft in einem-Objekt kombiniert <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> . Die Select-Methode der `AggregateData` -Klasse gibt ein <xref:System.Data.DataTable> -Objekt mit zwei Spalten mit dem Namen `Name` und zurück `Number` . Ebenso definiert die- `NewData` Klasse zwei Lese-/Schreibeigenschaften, `Name` und `Number` . Die- `Insert` Methode der- `AggregateData` Klasse nimmt einen Parameter vom Typ an `NewData` . Die `TypeName` -Eigenschaft der <xref:System.Web.UI.WebControls.ObjectDataSource> ist auf festgelegt, `AggregateData` und die- <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> Eigenschaft ist auf festgelegt `NewData` .

 [!code-csharp[ObjectDataSourceDataObjectTypeName#2](~/samples/snippets/csharp/VS_Snippets_WebNet/ObjectDataSourceDataObjectTypeName/CS/AggregateData.cs#2)]
 [!code-vb[ObjectDataSourceDataObjectTypeName#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ObjectDataSourceDataObjectTypeName/VB/AggregateData.vb#2)]

 Das folgende Codebeispiel zeigt die Webseite, die die beiden Klassen verwendet, die im vorangehenden Codebeispiel verwendet werden.

 [!code-aspx-csharp[ObjectDataSourceDataObjectTypeName#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ObjectDataSourceDataObjectTypeName/CS/AggregateDataPageCS.aspx#1)]
 [!code-aspx-vb[ObjectDataSourceDataObjectTypeName#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ObjectDataSourceDataObjectTypeName/VB/AggregateDataPageVB.aspx#1)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4">Verwenden von Parametern mit dem ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public int Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Function Delete () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Delete();" />
      <MemberSignature Language="F#" Value="member this.Delete : unit -&gt; int" Usage="objectDataSource.Delete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Führt einen Löschvorgang durch Aufrufen der von der <see cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" />-Eigenschaft angegebenen Methode mit sämtlichen Parametern in der <see cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />-Auflistung aus.</summary>
        <returns>Ein Wert, der die Anzahl der aus dem zugrunde liegenden Datenspeicher gelöschten Zeilen darstellt, wenn die <see cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows" />-Eigenschaft der Instanz von <see cref="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" /> im <see cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleted" />-Ereignis festgelegt wurde, andernfalls -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Bevor der- <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> Vorgang ausgeführt wird, <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting%2A> wird die-Methode aufgerufen, um das-Ereignis zu erhöhen <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> . Sie können das <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> -Ereignis behandeln, um die Werte der Parameter zu überprüfen und vor einem-Vorgang eine Vorverarbeitung auszuführen <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> . Zum Ausführen eines Löschvorgangs verwendet das- <xref:System.Web.UI.WebControls.ObjectDataSourceView> Objekt Reflektion, um eine Instanz des-Objekts zu erstellen, das durch die-Eigenschaft identifiziert wird <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> . Anschließend wird die-Methode aufgerufen, die durch die-Eigenschaft identifiziert wird <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> , wobei alle zugehörigen Eigenschaften verwendet werden <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> . Wenn die Lösch Parameter von einem zugeordneten Daten gebundenen Steuerelement stammen, wird der Name der Parameter entsprechend der- <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> Eigenschaft erstellt. Nachdem der <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> Vorgang abgeschlossen wurde, <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted%2A> wird die-Methode aufgerufen, um das-Ereignis zu erhöhen <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> . Sie können das <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> -Ereignis behandeln, um alle Rückgabewerte, Ausgabeparameter und Ausnahmen zu überprüfen und Nachbearbeitung auszuführen.

 Die- <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> Methode delegiert an die- <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> Methode des- <xref:System.Web.UI.WebControls.ObjectDataSourceView> Objekts, das dem-Steuerelement zugeordnet ist <xref:System.Web.UI.WebControls.ObjectDataSource> .

## <a name="data-bound-controls"></a>Datengebundene Steuerelemente
 Wenn das <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement einem Daten gebundenen Steuerelement zugeordnet ist, z. b <xref:System.Web.UI.WebControls.GridView> . dem-Steuerelement, ist es nicht erforderlich, die- <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> Methode aus dem Seitencode aufzurufen. <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A>Stattdessen wird die-Methode direkt durch das Daten gebundene Steuerelement aufgerufen.

 Weitere Informationen zum Zusammenführen von Parametern, zur Objekt Lebensdauer und zur Methoden Auflösung finden Sie unter <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> .

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="Deleted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Deleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Deleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Deleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleted As ObjectDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceStatusEventHandler ^ Deleted;" />
      <MemberSignature Language="F#" Value="member this.Deleted : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " Usage="member this.Deleted : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn ein <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />-Vorgang abgeschlossen wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Behandeln Sie das- <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> Ereignis, um die Werte eines Rückgabewerts oder der Ausgabeparameter zu überprüfen, oder, um zu bestimmen, ob eine Ausnahme ausgelöst wurde, nachdem ein- <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> Vorgang abgeschlossen wurde. Die Eigenschaften Rückgabewert, Ausgabeparameter und Ausnahmebehandlung sind für das-Objekt verfügbar, <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> das dem Ereignis zugeordnet ist.

 Sie können die- <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A> Eigenschaft des- <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> Objekts verwenden, um die Anzahl der Zeilen zurückzugeben, die aus der-Methode gelöscht wurden <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> . Legen Sie hierzu die- <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A> Eigenschaft fest. Wenn Sie die Anzahl der gelöschten Zeilen aus der Methode zurückgeben, die von der-Eigenschaft angegeben wird <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> , ist der-Wert in der- <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A> Eigenschaft des- <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> Objekts verfügbar.

 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).



## Examples
 Dieser Abschnitt enthält zwei Codebeispiele. Im ersten Codebeispiel wird veranschaulicht, wie ein <xref:System.Web.UI.WebControls.ObjectDataSource> -Objekt mit einem Geschäftsobjekt und einem-Steuerelement verwendet wird <xref:System.Web.UI.WebControls.GridView> , um Daten zu löschen. Das zweite Codebeispiel zeigt die- `EmployeeLogic` Klasse, die im ersten Codebeispiel verwendet wird.

 Im folgenden Codebeispiel wird veranschaulicht, wie ein <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement mit einem Geschäftsobjekt und einem-Steuerelement verwendet wird <xref:System.Web.UI.WebControls.GridView> , um Daten zu löschen. Anfänglich <xref:System.Web.UI.WebControls.GridView> zeigt das Steuerelement eine Menge aller Mitarbeiter an, wobei die von der-Eigenschaft angegebene Methode <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> zum Abrufen der Daten aus dem-Objekt verwendet wird `EmployeeLogic` . Da die- <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> Eigenschaft auf festgelegt ist `true` , zeigt das- <xref:System.Web.UI.WebControls.GridView> Steuerelement automatisch eine **Lösch** Schaltfläche an.

 Wenn Sie auf die Schaltfläche " **Löschen** " klicken, wird der Löschvorgang mit der von der- <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> Eigenschaft angegebenen Methode und allen in der-Auflistung angegebenen Parametern ausgeführt <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> . In diesem Codebeispiel werden auch einige Schritte zur Vorverarbeitung und Nachbearbeitung ausgeführt. Der Delegat `NorthwindEmployeeDeleting` wird aufgerufen, um das-Ereignis zu behandeln, <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> bevor der-Vorgang ausgeführt wird, und der Delegat `NorthwindEmployeeDeleted` wird aufgerufen, um das Ereignis zu behandeln, <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> nachdem der Vorgang abgeschlossen wurde, um die Ausnahmebehandlung In diesem Codebeispiel `NorthwindDataException` wird die-Methode von der-Methode behandelt, wenn eine ausgelöst wird `NorthwindEmployeeDeleted` .

 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]

 Das folgende Codebeispiel zeigt die- `EmployeeLogic` Klasse, die im vorangehenden Codebeispiel verwendet wird.

 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/northwindemployee10.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/northwindemployee10.vb#2)]

 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleting" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=214011">Verwenden des Entity Framework und des ObjectDataSource-Steuer Elements</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteMethod">
      <MemberSignature Language="C#" Value="public string DeleteMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeleteMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DeleteMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteMethod : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Methode oder Funktion ab, die vom <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />-Steuerelement zum Löschen von Daten aufgerufen wird, oder legt diesen fest.</summary>
        <value>Eine Zeichenfolge, die den Namen der Methode oder der Funktion darstellt, mit deren Hilfe die <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> Daten löscht. Der Standardwert ist eine leere Zeichenfolge ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Es wird davon ausgegangen, dass das Geschäftsobjekt Datensätze zu einem Zeitpunkt und nicht in einem Batch löscht.

 Die- <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> Eigenschaft delegiert an die- <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> Eigenschaft des- <xref:System.Web.UI.WebControls.ObjectDataSourceView> Objekts, das dem-Steuerelement zugeordnet ist <xref:System.Web.UI.WebControls.ObjectDataSource> .

 Stellen Sie sicher, dass die für das-Steuerelement in der-Auflistung konfigurierten Parameternamen <xref:System.Web.UI.WebControls.ObjectDataSource> <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> mit den Spaltennamen, die von der Select-Methode zurückgegeben werden

## <a name="object-lifetime"></a>Lebensdauer eines Objekts
 Die Methode, die von der-Eigenschaft identifiziert wird, <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> kann eine Instanzmethode oder eine `static` ( `Shared` in Visual Basic)-Methode sein. Wenn es sich um eine Instanzmethode handelt, wird das Geschäftsobjekt jedes Mal erstellt und zerstört, wenn die- <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> Eigenschaft aufgerufen wird. Sie können das <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> -Ereignis und das- <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> Ereignis behandeln, um das Geschäftsobjekt zu bearbeiten, bevor die- <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> Eigenschaft aufgerufen wird. Sie können auch das- <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> Ereignis behandeln, das ausgelöst wird, nachdem die- <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> Eigenschaft aufgerufen wurde. Wenn das Geschäftsobjekt die- <xref:System.IDisposable> Schnittstelle implementiert, wird die- <xref:System.IDisposable.Dispose%2A> Methode aufgerufen, bevor das-Objekt zerstört wird. Wenn es sich bei der Methode um eine- `static` `Shared` Methode (in Visual Basic) handelt, wird das Geschäftsobjekt nie erstellt, und Sie können die <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> Ereignisse, und nicht verarbeiten <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> .

## <a name="parameter-merging"></a>Parameter Zusammenführung
 Der Auflistung werden die Parameter <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> aus drei Quellen hinzugefügt:

-   Aus dem Daten gebundenen Steuerelement zur Laufzeit.

-   Aus dem- `DeleteParameters` Element, deklarativ.

-   Von der- `Deleting` Methode deklarativ.

 Zuerst werden alle Parameter, die von Daten gebundenen Steuerelementen generiert werden, der-Auflistung hinzugefügt <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> . Wenn das Steuerelement z. b. <xref:System.Web.UI.WebControls.ObjectDataSource> an ein Steuerelement gebunden ist, <xref:System.Web.UI.WebControls.GridView> das über die Spalten `Name` und verfügt `Number` , `Name` werden die Parameter für und der Auflistung `Number` hinzugefügt. Der genaue Name des Parameters hängt von der <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> Eigenschaft ab. Der Datentyp dieser Parameter ist `string` . Im nächsten Schritt werden die Parameter hinzugefügt, die im-Element aufgelistet sind `DeleteParameters` . Wenn ein Parameter im- `DeleteParameters` Element mit dem gleichen Namen wie ein Parameter gefunden wird, der bereits in der Auflistung <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> vorhanden ist, wird der vorhandene Parameter so geändert, dass er mit dem im-Element angegebenen Parameter übereinstimmt `DeleteParameters` . In der Regel wird dies verwendet, um den Typ der Daten im-Parameter zu ändern. Schließlich können Sie Parameter im-Ereignis Programm gesteuert hinzufügen und entfernen <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> , was vor dem Ausführen der- <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> Methode auftritt. Die-Methode wird nach der Zusammenführung der Parameter aufgelöst. Die Methoden Auflösung wird im nächsten Abschnitt erläutert.

## <a name="method-resolution"></a>Methoden Auflösung
 Wenn die- <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> Methode aufgerufen wird, werden die Datenfelder aus dem Daten gebundenen Steuerelement, die Parameter, die deklarativ im-Element erstellt wurden `DeleteParameters` , und die Parameter, die im-Ereignishandler hinzugefügt wurden, <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> zusammengeführt. (Weitere Informationen finden Sie im vorherigen Abschnitt.) Das- <xref:System.Web.UI.WebControls.ObjectDataSource> Objekt versucht dann, eine aufzurufende Methode zu finden. Zuerst sucht Sie nach einer oder mehreren Methoden mit dem Namen, der in der-Eigenschaft angegeben ist <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> . Wenn keine Entsprechung gefunden wird, <xref:System.InvalidOperationException> wird eine Ausnahme ausgelöst. Wenn eine Übereinstimmung gefunden wird, sucht Sie nach übereinstimmenden Parameternamen. Angenommen, der Typ, der von der-Eigenschaft angegeben wird, <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> verfügt über zwei Methoden mit dem Namen `DeleteARecord` . Eine `DeleteARecord` verfügt über einen Parameter, `ID` , und der andere `DeleteARecord` verfügt über zwei Parameter: `Name` und `Number` . Wenn die Auflistung <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> nur einen Parameter mit dem Namen aufweist `ID` , wird die- `DeleteARecord` Methode mit nur dem- `ID` Parameter aufgerufen. Der Typ des Parameters wird beim Auflösen der Methoden nicht geprüft. Die Reihenfolge der Parameter spielt keine Rolle.

 Wenn die- <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> Eigenschaft festgelegt ist, wird die-Methode auf andere Weise aufgelöst. Der <xref:System.Web.UI.WebControls.ObjectDataSource> sucht nach einer Methode mit dem Namen, der in der- <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> Eigenschaft angegeben ist, die einen Parameter des Typs annimmt, der in der-Eigenschaft angegeben ist <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> . In diesem Fall spielt der Name des Parameters keine Rolle.



## Examples
 Dieser Abschnitt enthält zwei Codebeispiele. Im ersten Codebeispiel wird veranschaulicht, wie ein <xref:System.Web.UI.WebControls.ObjectDataSource> -Objekt mit einem Geschäftsobjekt und einem-Steuerelement verwendet wird <xref:System.Web.UI.WebControls.GridView> , um Daten zu löschen. Das zweite Codebeispiel zeigt die- `EmployeeLogic` Klasse, die im ersten Codebeispiel verwendet wird.

 Im folgenden Codebeispiel wird veranschaulicht, wie ein <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement mit einem Geschäftsobjekt und einem-Steuerelement verwendet wird <xref:System.Web.UI.WebControls.GridView> , um Daten zu löschen. Anfänglich <xref:System.Web.UI.WebControls.GridView> zeigt das Steuerelement eine Menge aller Mitarbeiter an, wobei die von der-Eigenschaft angegebene Methode <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> zum Abrufen der Daten aus dem-Objekt verwendet wird `EmployeeLogic` . Da die- <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> Eigenschaft auf festgelegt ist `true` , zeigt das- <xref:System.Web.UI.WebControls.GridView> Steuerelement automatisch eine **Lösch** Schaltfläche an.

 Wenn Sie auf die Schaltfläche " **Löschen** " klicken, wird der Löschvorgang mit der von der- <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> Eigenschaft angegebenen Methode und allen in der-Auflistung angegebenen Parametern ausgeführt <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> . In diesem Codebeispiel werden auch einige Schritte zur Vorverarbeitung und Nachbearbeitung ausgeführt. Der Delegat `NorthwindEmployeeDeleting` wird aufgerufen, um das-Ereignis zu behandeln <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> , bevor der-Vorgang ausgeführt wird, und der Delegat `NorthwindEmployeeDeleted` wird aufgerufen, um das-Ereignis zu behandeln, <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> nachdem der Vorgang abgeschlossen wurde, um die Ausnahmebehandlung Wenn in diesem Beispiel eine ausgelöst `NorthwindDataException` wird, wird Sie vom-Delegaten behandelt `NorthwindDataException` .

 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]

 Das folgende Codebeispiel zeigt die- `EmployeeLogic` Klasse, die im vorangehenden Codebeispiel verwendet wird.

 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/northwindemployee10.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/northwindemployee10.vb#2)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=214011">Verwenden des Entity Framework und des ObjectDataSource-Steuer Elements</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection DeleteParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeleteParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ DeleteParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeleteParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.MergableProperty(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.MergableProperty(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Parameterauflistung ab, die die von der <see cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" />-Methode verwendeten Parameter enthält.</summary>
        <value>Eine <see cref="T:System.Web.UI.WebControls.ParameterCollection" />, die die von der <see cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" />-Methode verwendeten Parameter enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die Namen und Typen der Parameter, die in der Auflistung enthalten sind, <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> müssen mit den Namen und Typen der Parameter in der <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> Methoden Signatur identisch sein. Die Parameternamen werden von der <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> -Eigenschaft beeinflusst, und die Groß-/Kleinschreibung wird beachtet. Die Parameter in der Auflistung hängen von den Daten in dem Daten gebundenen Steuerelement, den Parametern, die deklarativ angegeben werden, und den Parametern ab, die Programm gesteuert hinzugefügt werden. Weitere Informationen finden Sie unter "Parameter Zusammenführung" in <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> und [Verwenden von Parametern mit dem ObjectDataSource-Steuer](https://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4)Element.

 Die- <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> Eigenschaft ruft die-Eigenschaft ab, die im- <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> Objekt enthalten ist <xref:System.Web.UI.WebControls.ObjectDataSourceView> , das dem-Steuerelement zugeordnet ist <xref:System.Web.UI.WebControls.ObjectDataSource> .

 Weitere Informationen zum Zusammenführen von Parametern, zur Objekt Lebensdauer und zur Methoden Auflösung finden Sie unter <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> .



## Examples
 Dieser Abschnitt enthält zwei Codebeispiele. Im ersten Codebeispiel wird veranschaulicht, wie ein <xref:System.Web.UI.WebControls.ObjectDataSource> -Objekt mit einem Geschäftsobjekt und einem-Steuerelement verwendet wird <xref:System.Web.UI.WebControls.GridView> , um Daten zu löschen. Das zweite Codebeispiel zeigt die- `EmployeeLogic` Klasse, die im ersten Codebeispiel verwendet wird.

 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> -Eigenschaft des <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuer Elements mit einem Geschäftsobjekt und einem-Steuerelement verwendet wird <xref:System.Web.UI.WebControls.GridView> , um Daten zu löschen. Anfänglich <xref:System.Web.UI.WebControls.GridView> zeigt das Steuerelement eine Menge aller Mitarbeiter an, wobei die von der-Eigenschaft angegebene Methode <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> zum Abrufen der Daten aus dem-Objekt verwendet wird `EmployeeLogic` . Da die- <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> Eigenschaft auf festgelegt ist `true` , zeigt das- <xref:System.Web.UI.WebControls.GridView> Steuerelement automatisch eine **Lösch** Schaltfläche an.

 Wenn Sie auf die Schaltfläche " **Löschen** " klicken, <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> wird das Ereignis mit zwei Parametern aufgerufen. Ein Parameter, `EmpID` , stammt aus dem <xref:System.Web.UI.WebControls.DataGrid> -Steuerelement und basiert auf der- <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> Eigenschaft. Der andere Parameter stammt aus der deklarativen- <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> Eigenschaft. Die- `EmployeeLogic` Klasse überlädt die- `DeleteEmployee` Methode. Eine Überladung nimmt einen `NorthwindEmployee` -Parameter an, und die andere übernimmt einen-Parameter mit dem <xref:System.Int32> Namen `anID` . Im- <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> Ereignis werden die Einträge in der-Eigenschaft so angepasst, dass <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> Sie nur einen Parameter `anID` mit dem Namen mit dem Wert aus einschließt `original_EmpID` . Wenn der-Ereignishandler vorhanden ist, wird die entsprechende- `DeleteEmployee` Methode aufgerufen.

 Das folgende Codebeispiel zeigt die Webseite, die das <xref:System.Web.UI.WebControls.DataGrid> -Steuerelement anzeigt und das- <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> Ereignis behandelt.

 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_11#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_11/CS/objds11cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_11#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_11/VB/objds11vb.aspx#1)]

 Das folgende Codebeispiel zeigt die- `EmployeeLogic` Klasse, die im vorangehenden Codebeispiel verwendet wird.

 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_11#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_11/CS/northwindemployee11.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_11#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_11/VB/northwindemployee11.vb#2)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="Deleting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Deleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Deleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Deleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleting As ObjectDataSourceMethodEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceMethodEventHandler ^ Deleting;" />
      <MemberSignature Language="F#" Value="member this.Deleting : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " Usage="member this.Deleting : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt vor einem <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />-Vorgang auf.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Behandeln Sie das- <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> Ereignis, um zusätzliche Initialisierungen auszuführen, die für Ihre Anwendung spezifisch sind, um die Werte von Parametern zu überprüfen oder um die Parameterwerte zu ändern, bevor das- <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement den Löschvorgang ausführt. Die Parameter sind als eine Auflistung verfügbar <xref:System.Collections.IDictionary> , auf die von der-Eigenschaft zugegriffen wird <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> , die durch das-Objekt verfügbar gemacht wird <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> .

 Sie können den Löschvorgang abbrechen, indem Sie die- <xref:Microsoft.Win32.SessionEndingEventArgs.Cancel%2A> Eigenschaft von <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> auf festlegen `true` .

 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).



## Examples
 Dieser Abschnitt enthält zwei Codebeispiele. Im ersten Codebeispiel wird veranschaulicht, wie ein <xref:System.Web.UI.WebControls.ObjectDataSource> -Objekt mit einem Geschäftsobjekt und einem-Steuerelement verwendet wird <xref:System.Web.UI.WebControls.GridView> , um Daten zu löschen. Das zweite Codebeispiel zeigt die- `EmployeeLogic` Klasse, die im ersten Codebeispiel verwendet wird.

 Im folgenden Codebeispiel wird veranschaulicht, wie ein <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement mit einem Geschäftsobjekt und einem-Steuerelement verwendet wird <xref:System.Web.UI.WebControls.GridView> , um Daten zu löschen. Anfänglich <xref:System.Web.UI.WebControls.GridView> zeigt das Steuerelement eine Menge aller Mitarbeiter an, wobei die von der-Eigenschaft angegebene Methode <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> zum Abrufen der Daten aus dem-Objekt verwendet wird `EmployeeLogic` . Da die- <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> Eigenschaft auf festgelegt ist `true` , zeigt das- <xref:System.Web.UI.WebControls.GridView> Steuerelement automatisch eine **Lösch** Schaltfläche an.

 Wenn Sie auf die Schaltfläche " **Löschen** " klicken, wird der Löschvorgang mit der von der- <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> Eigenschaft angegebenen Methode und allen in der-Auflistung angegebenen Parametern ausgeführt <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> . In diesem Codebeispiel werden auch einige Schritte zur Vorverarbeitung und Nachbearbeitung ausgeführt. Der Delegat `NorthwindEmployeeDeleting` wird aufgerufen, um das-Ereignis zu behandeln <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> , bevor der-Vorgang ausgeführt wird, und der Delegat `NorthwindEmployeeDeleted` wird aufgerufen, um das-Ereignis zu behandeln, <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> nachdem der Vorgang abgeschlossen wurde, um die Ausnahmebehandlung In diesem Codebeispiel `NorthwindDataException` wird die-Methode von der-Methode behandelt, wenn eine ausgelöst wird `NorthwindEmployeeDeleted` .

 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]

 Das folgende Codebeispiel zeigt die- `EmployeeLogic` Klasse, die im vorangehenden Codebeispiel verwendet wird.

 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/northwindemployee10.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/northwindemployee10.vb#2)]

 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleted" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="EnableCaching">
      <MemberSignature Language="C#" Value="public virtual bool EnableCaching { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableCaching" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.EnableCaching" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EnableCaching As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableCaching { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableCaching : bool with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.EnableCaching" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob für das <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />-Steuerelement die Zwischenspeicherung von Daten aktiviert ist, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn die Zwischenspeicherung von Daten für das Datenquellen-Steuerelement aktiviert ist, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Das <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement unterstützt das Zwischenspeichern von Daten Während die Daten zwischengespeichert werden, rufen Aufrufe der- <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Methode Daten aus dem Cache ab, anstatt <xref:System.Web.UI.WebControls.ObjectDataSource> eine Instanz des Geschäftsobjekts zu erstellen und Ihre Daten Methode aufzurufen. Wenn der Cache abläuft, <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Ruft die-Methode Daten aus dem Geschäftsobjekt ab und speichert die Daten dann erneut.

 Das <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement speichert Daten automatisch zwischen, wenn die <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> -Eigenschaft auf festgelegt ist `true` und die- <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> Eigenschaft auf einen Wert größer als 0 festgelegt ist. damit wird angegeben, wie viele Sekunden der Cache Daten speichert, bevor der Cache Eintrag verworfen wird. Der Wert 0 gibt einen unendlich langen Cache an.



## Examples
 Die folgenden drei Beispiele zeigen eine Webseite, eine Code-Behind-Seiten Klasse und eine Datenzugriffs Klasse, die Datensätze aus der Employees-Tabelle in der Northwind-Datenbank abruft.

 Das erste Beispiel zeigt eine Webseite, die zwei <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelemente enthält, ein <xref:System.Web.UI.WebControls.DropDownList> -Steuerelement und ein- <xref:System.Web.UI.WebControls.DetailsView> Steuerelement. Das erste <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement und das- <xref:System.Web.UI.WebControls.DropDownList> Steuerelement werden zum Abrufen und Anzeigen von Mitarbeiter Namen aus der Datenbank verwendet. Mit dem zweiten <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement und dem-Steuerelement wird <xref:System.Web.UI.WebControls.DetailsView> der vom Benutzer ausgewählte Datensatz abgerufen und angezeigt.

 Caching ist für das- <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement aktiviert. Daher wird jeder Datensatz nur einmal aus der Datenbank abgerufen. Die- <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> Eigenschaft wird auf "Mitarbeiter Details" festgelegt, aber jeder Zeichen folgen Wert kann als Schlüssel verwendet werden. Die Webseite enthält auch ein <xref:System.Web.UI.WebControls.Button> Steuerelement, auf das der Benutzer klicken kann, um die zwischengespeicherten Daten zu ablaufen.

 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_18#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default2.aspx#3)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_18#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default2.aspx#3)]

 Das zweite Beispiel zeigt einen Handler für das <xref:System.Web.UI.Control.Load> -Ereignis und einen Handler für das- <xref:System.Web.UI.WebControls.Button.Click> Ereignis des- <xref:System.Web.UI.WebControls.Button> Steuer Elements. Der <xref:System.Web.UI.Control.Load> Ereignishandler erstellt ein Cache Element mit einem Schlüssel, der auf den Wert festgelegt ist <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> . Der <xref:System.Web.UI.WebControls.Button.Click> Ereignishandler entfernt das Cache Element, dessen Schlüssel gleich dem <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> Wert ist. Wenn das Cache Element entfernt wird, sind alle zwischengespeicherten Daten, die vom Schlüssel abhängen, abgelaufen.

 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default2.aspx.cs#4)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default2.aspx.vb#4)]

 Das dritte Beispiel zeigt die Datenzugriffs Klasse, die mit der Northwind-Datenbank interagiert. Die-Klasse verwendet LINQ, um die Employees-Tabelle abzufragen. Das Beispiel erfordert eine LINQ to SQL-Klasse, die die Datenbank Northwind und die Employees-Tabelle darstellt. Weitere Informationen finden Sie unter Vorgehens [Weise: Erstellen von LINQ to SQL Klassen in einem Webprojekt](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).

 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/App_Code/EmployeeLogic.cs#5)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/App_Code/EmployeeLogic.vb#5)]

 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Die <see cref="P:System.Web.UI.WebControls.ObjectDataSource.EnableCaching" />-Eigenschaft wird auf <see langword="true" /> festgelegt, wenn die durch die <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />-Eigenschaft angegebene Methode einen <see cref="T:System.Data.Common.DbDataReader" /> zurückgibt.</exception>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.CacheDuration" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="EnablePaging">
      <MemberSignature Language="C#" Value="public bool EnablePaging { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePaging" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging" />
      <MemberSignature Language="VB.NET" Value="Public Property EnablePaging As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnablePaging { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnablePaging : bool with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.EnablePaging" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das Datenquellensteuerelement Paging für den von ihm abgerufenen Datensatz unterstützt, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn das Datenquellen-Steuerelement Paging für die von ihm abgerufenen Daten unterstützt, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Das Paging durch das <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement erfolgt durch Festlegen der <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> Eigenschaften,, <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> und <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> des <xref:System.Web.UI.WebControls.ObjectDataSource> und Definieren einer Select-Methode im Geschäftsobjekt mit den entsprechenden Parametern. Wenn die- <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> Eigenschaft auf festgelegt ist `true` , enthält die Auflistung <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> zwei zusätzliche Parameter für die erste angeforderte Zeile und die Anzahl der angeforderten Zeilen. Diese beiden Parameter werden entsprechend der Definition der-Eigenschaft und der-Eigenschaft benannt <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> . Die- `Select` Methode sollte die angeforderte Anzahl von Zeilen zurückgeben, beginnend am angegebenen Index. Da die Daten möglicherweise nicht gleichmäßig durch die Seitengröße dividiert werden, kann die letzte Seite weniger Zeilen enthalten. Daher ist die Anzahl der angeforderten Zeilen tatsächlich die maximale Anzahl von Zeilen, die zurückgegeben werden.

 Wenn Paging auf dem zugeordneten Daten gebundenen Steuerelement aktiviert ist, ruft das Daten gebundene Steuerelement die `Select` Methode mit dem Start Index und der Anzahl der erforderlichen Zeilen auf. Wenn die- <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> Eigenschaft festgelegt ist, ruft das Daten gebundene Steuerelement außerdem die-Methode auf, bevor die Pager-Steuerelemente gerendert werden. Wenn z. b. für ein <xref:System.Web.UI.WebControls.GridView> Steuerelement Paging mit einer Seitengröße von 5 aktiviert ist und die von der-Eigenschaft angegebene Methode <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> 20 zurückgibt, werden im Pager nur 4 Seiten angezeigt.

 Die- <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> Eigenschaft delegiert an die- <xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A> Eigenschaft des- <xref:System.Web.UI.WebControls.ObjectDataSourceView> Objekts.



## Examples
 Die folgenden drei Beispiele zeigen eine Webseite, eine Code-Behind-Seiten Klasse und eine Datenzugriffs Klasse, mit der der Benutzer die Anzahl der Datensätze auswählen kann, die auf der Seite angezeigt werden.

 Die Webseite enthält ein- <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> , dessen-Eigenschaft auf festgelegt ist `true` . Die- <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> Eigenschaft wird auf den Namen einer Methode festgelegt, die die Gesamtanzahl der Datensätze in der Abfrage zurückgibt. Die <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> -Eigenschaft und die- <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> Eigenschaft werden auf die Namen der Parameter festgelegt, die in der Select-Methode verwendet werden. Die Seite enthält auch ein- <xref:System.Web.UI.WebControls.DropDownList> Steuerelement.

 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx#1)]

 Das zweite Beispiel zeigt einen Handler für das- <xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged?displayProperty=nameWithType> Ereignis des- <xref:System.Web.UI.WebControls.DropDownList> Steuer Elements. Der Code im-Handler legt die <xref:System.Web.UI.WebControls.GridView.PageSize%2A> -Eigenschaft auf die Benutzer Auswahl fest.

 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx.vb#2)]

 Das dritte Beispiel zeigt die Datenzugriffs Klasse, mit der Daten aus der Customers-Tabelle abgerufen werden. Sie enthält eine Methode mit dem Namen `GetSubsetOfEmployees` , die der- <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> Eigenschaft des-Steuer Elements zugewiesen wird <xref:System.Web.UI.WebControls.ObjectDataSource> . Das Beispiel enthält auch eine Methode mit dem Namen `GetEmployeeCount` , die der- <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> Eigenschaft des-Steuer Elements zugewiesen wird <xref:System.Web.UI.WebControls.ObjectDataSource> . Die-Klasse verwendet LINQ zum Abfragen der Customers-Tabelle. Für das Beispiel ist eine LINQ to SQL Klasse erforderlich, die die Northwind-Datenbank und die Customers-Tabelle darstellt. Weitere Informationen finden Sie unter Vorgehens [Weise: Erstellen von LINQ to SQL Klassen in einem Webprojekt](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).

 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/App_Code/CustomerLogic.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/App_Code/CustomerLogic.vb#3)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanPage" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="FilterExpression">
      <MemberSignature Language="C#" Value="public string FilterExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilterExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FilterExpression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FilterExpression : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.FilterExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Filterausdruck ab, der beim Aufruf der von der <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />-Eigenschaft angegebenen Methode angewendet wird, oder legt diesen fest.</summary>
        <value>Eine Zeichenfolge, die einen Filterausdruck darstellt, der beim Abrufen von Daten mit der von der <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />-Eigenschaft angegebenen Methode oder Funktion angewendet wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Das- <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement unterstützt das Filtern von Daten nur, wenn die <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Methode ein-oder- <xref:System.Data.DataSet> <xref:System.Data.DataTable> Objekt

 Die Syntax, die für die-Eigenschaft verwendet wird, <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> ist ein Ausdruck im Formatzeichen folgen Stil. Die Filter Ausdruckssyntax ist die gleiche Syntax, die von der- <xref:System.Data.DataColumn.Expression%2A> Eigenschaft akzeptiert wird. Wenn Sie der Auflistung Parameter hinzufügen <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> , können Sie auch Format Zeichenfolgen-Platzhalter einschließen. Fügen `"{0}"` Sie z. b. in den Ausdruck ein, um Parameterwerte zu ersetzen. Die Platzhalter werden nach dem Index des-Parameters in der-Auflistung ersetzt <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> .

 Sie können Parameter in die- <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> Eigenschaft einschließen. Wenn der Typ des Parameters eine Zeichenfolge oder ein Zeichentyp ist, müssen Sie den Parameter in einfache Anführungszeichen einschließen. Anführungszeichen sind nicht erforderlich, wenn es sich bei dem Parameter um einen numerischen Typ handelt.

 Die-Auflistung <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> enthält die Parameter, die für die Platzhalter ausgewertet werden, die in der-Eigenschaft gefunden werden <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> .

 Die- <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> Eigenschaft delegiert an die- <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A> Eigenschaft des- <xref:System.Web.UI.WebControls.ObjectDataSourceView> Objekts, das dem-Steuerelement zugeordnet ist <xref:System.Web.UI.WebControls.ObjectDataSource> .

> [!NOTE]
>  Sie sollten jeden Filter Parameterwert validieren, den Sie vom Client erhalten. Die Runtime ersetzt einfach den Parameterwert in den Filter Ausdruck und wendet ihn auf das- <xref:System.Data.DataSet> Objekt oder das- <xref:System.Data.DataTable> Objekt an, das von der-Methode zurückgegeben wird <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> . Wenn Sie die- <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> Eigenschaft als Sicherheitsmaßnahme verwenden, um die Anzahl der zurückgegebenen Elemente einzuschränken, müssen Sie die Parameterwerte vor dem Filtern überprüfen.



## Examples
 Im folgenden Codebeispiel wird veranschaulicht, wie gefilterte Daten mit einem <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement zum Abrufen von Daten aus einem Geschäftsobjekt der mittleren Ebene und einem- <xref:System.Web.UI.WebControls.GridView> Steuerelement zum Anzeigen der Ergebnisse angezeigt werden. Das- <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement kann Daten nur filtern, wenn die Methode, die die Daten abruft, es als-oder-Objekt abruft <xref:System.Data.DataSet> <xref:System.Data.DataTable> . Aus diesem Grund identifiziert die- <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> Eigenschaft eine Geschäftsobjekt Methode, die Daten als abruft <xref:System.Data.DataSet> .

 Das Codebeispiel besteht aus einem- <xref:System.Web.UI.WebControls.TextBox> Steuerelement, einem-Steuerelement, <xref:System.Web.UI.WebControls.GridView> dem <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement und der Schaltfläche " **senden** ". Standardmäßig wird der <xref:System.Web.UI.WebControls.TextBox> mit dem Namen eines der Northwind Traders-Mitarbeiter aufgefüllt. Das <xref:System.Web.UI.WebControls.GridView> zeigt Informationen zum Mitarbeiter an, der durch den Namen in der identifiziert wird <xref:System.Web.UI.WebControls.TextBox> . Geben Sie zum Abrufen von Daten auf einem anderen Mitarbeiter den vollständigen Namen des Mitarbeiters in der ein <xref:System.Web.UI.WebControls.TextBox> , und klicken Sie dann auf die Schaltfläche **senden** .

 Die- <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> Eigenschaft gibt einen Ausdruck an, der verwendet wird, um die Daten zu filtern, die von der Methode abgerufen werden, die von der-Eigenschaft angegeben wird <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> . Dabei werden Parameter Platzhalter verwendet, die für die in der Auflistung enthaltenen Parameter ausgewertet werden <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> . In diesem Beispiel wird der Parameter Platzhalter in einfache Anführungszeichen begrenzt, da der Typ des Parameters ein Zeichen Folgentyp ist, der Leerzeichen enthalten kann. Wenn der Typ des Parameters ein numerischer oder Date-Typ ist, sind keine Begrenzungs Anführungszeichen erforderlich.

> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).

 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/objds9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/objds9vb.aspx#1)]

 Das folgende Codebeispiel enthält ein Beispiel für ein Geschäftsobjekt der mittleren Ebene, das im vorangehenden Codebeispiel verwendet wird. Das Codebeispiel besteht aus zwei grundlegenden Klassen:

-   Die- `EmployeeLogic` Klasse, die eine Klasse ist, die Geschäftslogik kapselt.

-   Die- `NorthwindEmployee` Klasse, bei der es sich um eine Modell Klasse handelt, die nur die grundlegenden Funktionen enthält, die zum Laden und Speichern von Daten aus der Datenebene erforderlich sind.

 Der Einfachheit halber erstellt die- `EmployeeLogic` Klasse einen statischen Satz von Daten, anstatt die Daten von einer Datenebene abzurufen. Dies ist auch für dieses Beispiel hilfreich, da Sie sich beim Beispiel darauf verlassen, den vollständigen Namen eines Northwind Traders-Mitarbeiters anzugeben, um die Filterung zu veranschaulichen. Ein umfassendes, funktionierendes Beispiel ist die Kompilierung und Verwendung dieser Klassen mit den Web Forms Codebeispielen, die bereitgestellt werden.

 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/northwindemployee9.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/northwindemployee9.vb#2)]

 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Die <see cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" />-Eigenschaft wurde festgelegt, und die <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />-Methode gibt nicht <see cref="T:System.Data.DataSet" /> oder <see cref="T:System.Data.DataTable" /> zurück.</exception>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Filtering" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="Filtering">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler Filtering;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler Filtering" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Filtering" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Filtering As ObjectDataSourceFilteringEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceFilteringEventHandler ^ Filtering;" />
      <MemberSignature Language="F#" Value="member this.Filtering : System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler " Usage="member this.Filtering : System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt vor einem Filtervorgang auf.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Behandeln Sie das- <xref:System.Web.UI.WebControls.ObjectDataSource.Filtering> Ereignis, um Validierungs Vorgänge für Filter Parameterwerte auszuführen, bevor das- <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement einen Filter Vorgang ausführt. Sie können den ausgewählten Vorgang abbrechen, indem Sie die- <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> Eigenschaft von <xref:System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs> auf festlegen `true` . Das-Ereignis wird nur ausgelöst, wenn die- <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> Eigenschaft festgelegt ist.

 Das- <xref:System.Web.UI.WebControls.ObjectDataSource.Filtering?displayProperty=nameWithType> Ereignis delegiert an das- <xref:System.Web.UI.WebControls.ObjectDataSourceView.Filtering?displayProperty=nameWithType> Ereignis des <xref:System.Web.UI.WebControls.ObjectDataSourceView> , das dem-Steuerelement zugeordnet ist <xref:System.Web.UI.WebControls.ObjectDataSource> .

> [!IMPORTANT]
>  Sie sollten jeden Filter Parameterwert validieren, den Sie vom Client erhalten. Die Runtime ersetzt einfach den Parameterwert in den Filter Ausdruck und wendet ihn auf das- <xref:System.Data.DataSet> Objekt oder das- <xref:System.Data.DataTable> Objekt an, das von der-Methode zurückgegeben wird <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> . Wenn Sie die- <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> Eigenschaft als Sicherheitsmaßnahme verwenden, um die Anzahl der zurückgegebenen Elemente einzuschränken, müssen Sie die Parameterwerte vor dem Filtern überprüfen.

 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="FilterParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection FilterParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection FilterParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilterParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ FilterParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FilterParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.ObjectDataSource.FilterParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.MergableProperty(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.MergableProperty(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Auflistung von Parametern ab, die beliebigen Parameterplatzhaltern in der <see cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" />-Zeichenfolge zugeordnet sind.</summary>
        <value>Eine <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> mit einer Reihe von Parametern, die beliebigen Parameterplatzhaltern in der <see cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" />-Eigenschaft zugeordnet sind.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Das- <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement unterstützt das Filtern von Daten nur, wenn die <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Methode ein-oder- <xref:System.Data.DataSet> <xref:System.Data.DataTable> Objekt

 Die Syntax, die für das verwendet wird, <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> ist ein Ausdruck im Formatstring-Stil. Die Filter Ausdruckssyntax ist die gleiche Syntax, die von der- <xref:System.Data.DataColumn.Expression%2A> Eigenschaft akzeptiert wird. Wenn Sie der Auflistung Parameter hinzufügen <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> , können Sie auch Format Zeichenfolgen-Platzhalter einschließen. Fügen `"{0}"` Sie z. b. in den Ausdruck ein, um Parameterwerte zu ersetzen. Die Platzhalter werden nach dem Index des-Parameters in der-Auflistung ersetzt <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> .

 Sie können Parameter in die- <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> Eigenschaft einschließen. Wenn der-Parameter eine Zeichenfolge oder ein Zeichentyp ist, müssen Sie den-Parameter in einfache Anführungszeichen einschließen. Anführungszeichen sind nicht erforderlich, wenn es sich bei dem Parameter um einen numerischen Typ handelt.

 Die- <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> Eigenschaft ruft die-Eigenschaft ab, die im- <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A> Objekt enthalten ist <xref:System.Web.UI.WebControls.ObjectDataSourceView> , das dem-Steuerelement zugeordnet ist <xref:System.Web.UI.WebControls.ObjectDataSource> .



## Examples
 Dieser Abschnitt enthält zwei Codebeispiele. Im ersten Codebeispiel wird veranschaulicht, wie gefilterte Daten mithilfe eines <xref:System.Web.UI.WebControls.ObjectDataSource> -Objekts angezeigt werden, um Daten aus einem Geschäftsobjekt der mittleren Ebene abzurufen, und ein- <xref:System.Web.UI.WebControls.GridView> Steuerelement, um die Ergebnisse anzuzeigen. Das zweite Codebeispiel enthält ein Beispiel für ein Geschäftsobjekt der mittleren Ebene, das im ersten Codebeispiel verwendet wird.

 Im folgenden Codebeispiel wird veranschaulicht, wie gefilterte Daten mit einem <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement zum Abrufen von Daten aus einem Geschäftsobjekt der mittleren Ebene und einem- <xref:System.Web.UI.WebControls.GridView> Steuerelement zum Anzeigen der Ergebnisse angezeigt werden. Das- <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement kann Daten nur filtern, wenn die Methode, die die Daten abruft, es als-oder-Objekt abruft <xref:System.Data.DataSet> <xref:System.Data.DataTable> . Aus diesem Grund identifiziert die- <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> Eigenschaft eine Geschäftsobjekt Methode, die Daten als abruft <xref:System.Data.DataSet> .

 Das Codebeispiel besteht aus einem- <xref:System.Web.UI.WebControls.TextBox> Steuerelement, einem-Steuerelement, <xref:System.Web.UI.WebControls.GridView> dem <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement und der Schaltfläche " **senden** ". Standardmäßig wird der <xref:System.Web.UI.WebControls.TextBox> mit dem Namen eines der Northwind Traders-Mitarbeiter aufgefüllt. Das <xref:System.Web.UI.WebControls.GridView> zeigt Informationen zum Mitarbeiter an, der durch den Namen in der identifiziert wird <xref:System.Web.UI.WebControls.TextBox> . Wenn Sie Daten auf einem anderen Mitarbeiter abrufen möchten, <xref:System.Web.UI.WebControls.TextBox> Geben Sie in der den vollständigen Namen des Mitarbeiters ein, und klicken Sie dann auf die Schaltfläche **senden** .

 Die- <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> Eigenschaft gibt einen Ausdruck an, der zum Filtern der Daten verwendet wird, die von der-Eigenschaft abgerufen werden <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> . Dabei werden Parameter Platzhalter verwendet, die für die in der Auflistung enthaltenen Parameter ausgewertet werden <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> . In diesem Beispiel wird der Parameter Platzhalter in einfache Anführungszeichen begrenzt, da der Typ des Parameters ein Zeichen Folgentyp ist, der Leerzeichen enthalten kann. Wenn der Typ des Parameters ein numerischer oder Date-Typ ist, sind keine Begrenzungs Anführungszeichen erforderlich. Die-Auflistung <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> enthält einen Parameter, ein- <xref:System.Web.UI.WebControls.FormParameter> Objekt, das an das-Steuerelement gebunden ist <xref:System.Web.UI.WebControls.TextBox> .

> [!IMPORTANT]
>  Sie sollten jeden Filter Parameterwert validieren, den Sie vom Client erhalten. Die Runtime ersetzt einfach den Parameterwert in den Filter Ausdruck und wendet Sie auf das <xref:System.Data.DataView> Objekt an, das von der-Methode zurückgegeben wird <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> . Wenn Sie die- <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> Eigenschaft als Sicherheitsmaßnahme verwenden, um die Anzahl der zurückgegebenen Elemente einzuschränken, müssen Sie die Parameterwerte vor dem Filtern überprüfen.

 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/objds9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/objds9vb.aspx#1)]

 Das folgende Codebeispiel enthält ein Beispiel für ein Geschäftsobjekt der mittleren Ebene, das im vorangehenden Codebeispiel verwendet wird. Das Codebeispiel besteht aus zwei grundlegenden Klassen:

-   Die- `EmployeeLogic` Klasse, die eine Klasse ist, die Geschäftslogik kapselt.

-   Die- `NorthwindEmployee` Klasse, bei der es sich um eine Modell Klasse handelt, die nur die grundlegenden Funktionen enthält, die zum Laden und Speichern von Daten aus der Datenebene erforderlich sind.

 Der Einfachheit halber erstellt die- `EmployeeLogic` Klasse einen statischen Satz von Daten, anstatt die Daten von einer Datenebene abzurufen. Dies ist auch für dieses Beispiel hilfreich, da Sie sich beim Beispiel darauf verlassen, den vollständigen Namen eines Northwind Traders-Mitarbeiters anzugeben, um die Filterung zu veranschaulichen. Ein umfassendes, funktionierendes Beispiel ist die Kompilierung und Verwendung dieser Klassen mit den Web Forms Codebeispielen, die bereitgestellt werden.

 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/northwindemployee9.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/northwindemployee9.vb#2)]

 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Sie können die <see cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" />-Eigenschaft festlegen, sodass die <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />-Methode nicht <see cref="T:System.Data.DataSet" /> oder <see cref="T:System.Data.DataTable" /> zurückgibt.</exception>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Filtering" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="GetView">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.DataSourceView GetView (string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.DataSourceView GetView(string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.GetView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetView (viewName As String) As DataSourceView" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::DataSourceView ^ GetView(System::String ^ viewName);" />
      <MemberSignature Language="F#" Value="override this.GetView : string -&gt; System.Web.UI.DataSourceView" Usage="objectDataSource.GetView viewName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewName">Der Name der abzurufenden Ansicht. Da die <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> nur eine Ansicht unterstützt, wird <paramref name="viewName" /> ignoriert.</param>
        <summary>Ruft die benannte Datenquellenansicht ab, die dem Datenquellen-Steuerelement zugeordnet ist.</summary>
        <returns>Die <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> mit dem Namen <see langword="DefaultView" />, die der <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> zugeordnet ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Das- <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement unterstützt nur eine Datenquellen Sicht. Wie bei allen Datenquellen Sicht-Objekten definiert das, das <xref:System.Web.UI.WebControls.ObjectDataSourceView> dem Datenquellen-Steuerelement zugeordnet ist, seine Funktionen, führt alle Aufgaben aus, die zum Abrufen von Daten aus dem zugrunde liegenden Datenspeicher erforderlich sind, und führt Vorgänge wie Sortieren, einfügen, löschen und aktualisieren aus.

 Die- <xref:System.Web.UI.WebControls.ObjectDataSource.GetView%2A> Methode ist für das Aufrufen durch Daten gebundene Steuerelemente und nicht für den Seitencode vorgesehen.

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Der angegebene <paramref name="viewName" /> ist <see langword="null" /> oder weicht von <see langword="DefaultView" /> ab.</exception>
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSourceView" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.GetViewNames" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="GetViewNames">
      <MemberSignature Language="C#" Value="protected override System.Collections.ICollection GetViewNames ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.ICollection GetViewNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.GetViewNames" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetViewNames () As ICollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::ICollection ^ GetViewNames();" />
      <MemberSignature Language="F#" Value="override this.GetViewNames : unit -&gt; System.Collections.ICollection" Usage="objectDataSource.GetViewNames " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft eine Auflistung von Namen ab, die die Liste der dem <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />-Objekt zugeordneten Ansichtsobjekte darstellt.</summary>
        <returns>Eine <see cref="T:System.Collections.ICollection" />, die die Namen der Ansichten enthält, die der <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> zugeordnet sind.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Das- <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement unterstützt nur eine Sicht mit dem Namen `DefaultView` auf den zugrunde liegenden Daten. Die- <xref:System.Web.UI.WebControls.ObjectDataSource.GetViewNames%2A> Methode gibt eine Auflistung mit einem einzelnen Element dieses Einsichts namens zurück.

 Die- <xref:System.Web.UI.WebControls.ObjectDataSource.GetViewNames%2A> Methode ist für das Aufrufen durch Daten gebundene Steuerelemente und nicht für den Seitencode vorgesehen.

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.GetView(System.String)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public int Insert ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Insert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Insert();" />
      <MemberSignature Language="F#" Value="member this.Insert : unit -&gt; int" Usage="objectDataSource.Insert " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Führt einen Einfügevorgang durch Aufrufen der von der <see cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" />-Eigenschaft angegebenen Methode mit sämtlichen Parametern in der <see cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />-Auflistung aus.</summary>
        <returns>Ein Wert, der die Anzahl der im zugrunde liegenden Datenspeicher eingefügten Zeilen darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Bevor der- <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> Vorgang ausgeführt wird, <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting%2A> wird die-Methode aufgerufen, um das-Ereignis zu erhöhen <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> . Sie können das <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> -Ereignis behandeln, um die Werte der Parameter zu überprüfen und vor einem Vorgang eine Vorverarbeitung auszuführen <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> . Zum Ausführen eines Einfügevorgangs <xref:System.Web.UI.WebControls.ObjectDataSourceView> verwendet das-Objekt Reflektion, um eine Instanz des-Objekts zu erstellen, das durch die-Eigenschaft identifiziert wird <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> . Anschließend wird die-Methode aufgerufen, die durch die-Eigenschaft identifiziert wird <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> , wobei alle zugehörigen Eigenschaften verwendet werden <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> . Nachdem der <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> Vorgang abgeschlossen wurde, <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted%2A> wird die-Methode aufgerufen, um das-Ereignis zu erhöhen <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted> . Sie können das <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted> -Ereignis behandeln, um alle Rückgabewerte, Ausgabeparameter und Ausnahmen zu überprüfen und Nachbearbeitung auszuführen.

 Die- <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> Methode delegiert an die- <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> Methode des <xref:System.Web.UI.WebControls.ObjectDataSourceView> , das dem-Steuerelement zugeordnet ist <xref:System.Web.UI.WebControls.ObjectDataSource> .

 Weitere Informationen zum Zusammenführen von Parametern, zur Objekt Lebensdauer und zur Methoden Auflösung finden Sie unter <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> .

## <a name="data-bound-controls"></a>Datengebundene Steuerelemente
 Wenn das <xref:System.Web.UI.WebControls.ObjectDataSource> -Objekt einem Daten gebundenen Steuerelement zugeordnet ist, z. b <xref:System.Web.UI.WebControls.GridView> . dem-Steuerelement, ist es nicht erforderlich, die- <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> Methode aus dem Seitencode aufzurufen. <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A>Stattdessen wird die-Methode direkt durch das Daten gebundene Steuerelement aufgerufen.

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/a806fa2c-fe6a-405f-869c-74e804a642ea">Exemplarische Vorgehensweise: Datenbindung an ein benutzerdefiniertes Geschäftsobjekt</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="Inserted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Inserted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Inserted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Inserted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserted As ObjectDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceStatusEventHandler ^ Inserted;" />
      <MemberSignature Language="F#" Value="member this.Inserted : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " Usage="member this.Inserted : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn ein <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />-Vorgang abgeschlossen wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Behandeln Sie das- <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted> Ereignis, um die Werte eines Rückgabewerts oder der Ausgabeparameter zu überprüfen, oder, um zu bestimmen, ob eine Ausnahme ausgelöst wurde, nachdem ein <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> Vorgang abgeschlossen wurde. Die Eigenschaften Rückgabewert, Ausgabeparameter und Ausnahmebehandlung sind für das-Objekt verfügbar, <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> das dem Ereignis zugeordnet ist.

 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).

 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Inserting" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="Inserting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Inserting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Inserting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Inserting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserting As ObjectDataSourceMethodEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceMethodEventHandler ^ Inserting;" />
      <MemberSignature Language="F#" Value="member this.Inserting : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " Usage="member this.Inserting : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt vor einem <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />-Vorgang ein.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Behandeln Sie das- <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> Ereignis, um zusätzliche Initialisierungen auszuführen, die für Ihre Anwendung spezifisch sind, um die Werte von Parametern zu überprüfen oder um die Parameterwerte zu ändern, bevor das- <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement den Einfügevorgang ausführt Die Parameter sind als eine Auflistung verfügbar <xref:System.Collections.IDictionary> , auf die von der-Eigenschaft zugegriffen wird <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> , die durch das-Objekt verfügbar gemacht wird <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> .

 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).



## Examples
 Dieser Abschnitt enthält zwei Codebeispiele. Im ersten Codebeispiel wird veranschaulicht, wie ein <xref:System.Web.UI.WebControls.ObjectDataSource> -Objekt mit einem Geschäftsobjekt und ein- <xref:System.Web.UI.WebControls.DetailsView> Steuerelement zum Einfügen von Daten verwendet wird. Das zweite Codebeispiel enthält ein Beispiel für das Geschäftsobjekt der mittleren Ebene, das im ersten Codebeispiel verwendet wird.

 Im folgenden Codebeispiel wird veranschaulicht, wie ein <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement mit einem Geschäftsobjekt und einem- <xref:System.Web.UI.WebControls.DetailsView> Steuerelement zum Einfügen von Daten verwendet wird. Zuerst wird <xref:System.Web.UI.WebControls.DetailsView> ein neuer Datensatz angezeigt `NorthwindEmployee` , zusammen mit einer automatisch generierten Schaltfläche **Einfügen** . Nachdem Sie Daten in die Felder des-Steuer Elements eingegeben <xref:System.Web.UI.WebControls.DetailsView> haben, klicken Sie auf die Schaltfläche **Einfügen** . Die- <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> Eigenschaft identifiziert, welche Methode den Einfügevorgang ausführt.

 In diesem Beispiel wird die- `UpdateEmployeeInfo` Methode verwendet, um eine Einfügung auszuführen, erfordert jedoch einen- `NorthwindEmployee` Parameter, um die Daten einzufügen. Aus diesem Grund ist die Auflistung von Zeichen folgen, die das <xref:System.Web.UI.WebControls.DetailsView> Steuerelement automatisch übergibt, nicht ausreichend. Der Delegat `NorthwindEmployeeInserting` ist ein <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler> Objekt, das das <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> -Ereignis behandelt und es Ihnen ermöglicht, die Eingabeparameter zu bearbeiten, bevor der Vorgang fortgesetzt wird <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> . Da die `UpdateEmployeeInfo` Methode ein- `NorthwindEmployee` Objekt als Parameter erfordert, wird eine mithilfe der Auflistung von Zeichen folgen erstellt und der-Auflistung <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> mithilfe eines Parameter namens () hinzugefügt, `ne` der von der-Methode erwartet wird. Sie können wie folgt Verfahren ausführen, wenn Sie ein vorhandenes Objekt der mittleren Ebene als Datenquelle mit Typen und Methoden verwenden, die nicht speziell für die Verwendung mit dem Steuerelement entworfen wurden <xref:System.Web.UI.WebControls.ObjectDataSource> .

 Wenn der <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> Vorgang ausgeführt wird, wird die durch die-Eigenschaft identifizierte Methode <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> aufgerufen. Wenn die- `Insert` Methode des-Objekts über eine Methoden Signatur verfügt, die Parameter enthält, muss die Auflistung <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> einen Parameter mit Namen enthalten, die den Methoden Signatur Parametern entsprechen, damit die <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> Methode erfolgreich abgeschlossen werden kann.

 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/objds4cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/objds4vb.aspx#1)]

 Das folgende Codebeispiel enthält ein Beispiel für ein Geschäftsobjekt der mittleren Ebene, das im vorangehenden Codebeispiel verwendet wird. Das Codebeispiel besteht aus zwei grundlegenden Klassen:

-   Die- `EmployeeLogic` Klasse, die eine Zustands lose Klasse ist, die Geschäftslogik kapselt.

-   Die- `NorthwindEmployee` Klasse, bei der es sich um eine Modell Klasse handelt, die nur die grundlegenden Funktionen enthält, die zum Laden und Speichern von Daten aus der Datenebene erforderlich sind.

 Eine zusätzliche `NorthwindDataException` Klasse wird zur einfacheren Bereitstellung bereitgestellt. Ein umfassendes, funktionierendes Beispiel ist die Kompilierung und Verwendung dieser Klassen. Die- `UpdateEmployeeInfo` Methode ist nicht vollständig implementiert, sodass Sie keine Daten in die Northwind Traders-Datenbank einfügen, wenn Sie mit diesem Beispiel experimentieren.

 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/northwindemployee4.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/northwindemployee4.vb#2)]

 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Inserted" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="InsertMethod">
      <MemberSignature Language="C#" Value="public string InsertMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InsertMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InsertMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertMethod : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.InsertMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Methode oder Funktion ab, die vom <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />-Steuerelement zum Einfügen von Daten aufgerufen wird, oder legt diese fest.</summary>
        <value>Eine Zeichenfolge, die den Namen der Methode oder der Funktion darstellt, mit deren Hilfe die <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> Daten einfügt. Der Standardwert ist eine leere Zeichenfolge ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Es wird davon ausgegangen, dass das Geschäftsobjekt jeweils einen Datensatz und nicht in einen Batch einfügt.

 Die- <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> Eigenschaft delegiert an die- <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> Eigenschaft des- <xref:System.Web.UI.WebControls.ObjectDataSourceView> Objekts, das dem-Objekt zugeordnet ist <xref:System.Web.UI.WebControls.ObjectDataSource> .

## <a name="object-lifetime"></a>Lebensdauer eines Objekts
 Die Methode, die von der-Eigenschaft identifiziert wird, <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> kann eine Instanzmethode oder eine `static` ( `Shared` in Visual Basic)-Methode sein. Wenn es sich um eine Instanzmethode handelt, wird das Geschäftsobjekt jedes Mal erstellt und zerstört, wenn die durch die-Eigenschaft angegebene Methode <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> aufgerufen wird. Sie können das <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> -Ereignis und das- <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> Ereignis behandeln, um das Geschäftsobjekt zu bearbeiten, bevor die- <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> Eigenschaft aufgerufen wird. Sie können auch das- <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> Ereignis behandeln, das ausgelöst wird, nachdem die durch die- <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> Eigenschaft angegebene Methode aufgerufen wird. Wenn das Geschäftsobjekt die- <xref:System.IDisposable> Schnittstelle implementiert, wird die- <xref:System.IDisposable.Dispose%2A> Methode aufgerufen, bevor das-Objekt zerstört wird. Wenn die-Methode `static` ( `Shared` in Visual Basic) ist, wird das Geschäftsobjekt nie erstellt, und Sie können <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> die <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> Ereignisse, und nicht verarbeiten <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> .

## <a name="parameter-merging"></a>Parameter Zusammenführung
 Der Auflistung werden die Parameter <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> aus drei Quellen hinzugefügt:

-   Aus dem Daten gebundenen Steuerelement zur Laufzeit.

-   Aus dem- `InsertParameters` Element, deklarativ.

-   Von der- `Inserting` Methode Programm gesteuert.

 Zuerst werden alle Parameter, die von Daten gebundenen Steuerelementen generiert werden, der-Auflistung hinzugefügt <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> . Wenn das Steuerelement z. b. <xref:System.Web.UI.WebControls.ObjectDataSource> an ein Steuerelement gebunden ist, <xref:System.Web.UI.WebControls.GridView> das über die Spalten `Name` und verfügt `Number` , werden die Parameter für `Name` und `Number` der Auflistung hinzugefügt. Der Datentyp dieser Parameter ist `string` . Im nächsten Schritt werden die Parameter hinzugefügt, die im-Element aufgelistet sind `InsertParameters` . Wenn ein Parameter im- `InsertParameters` Element mit dem gleichen Namen wie ein Parameter gefunden wird, der bereits in der Auflistung <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> vorhanden ist, wird der vorhandene Parameter so geändert, dass er mit dem im-Element angegebenen Parameter übereinstimmt `InsertParameters` . In der Regel wird dies verwendet, um den Typ der Daten im-Parameter zu ändern. Schließlich können Sie Parameter im-Ereignis Programm gesteuert hinzufügen und entfernen <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> , was vor dem Ausführen der- <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> Methode auftritt. Die-Methode wird nach der Zusammenführung der Parameter aufgelöst. Die Methoden Auflösung wird im nächsten Abschnitt erläutert.

> [!IMPORTANT]
>  Sie sollten jeden Parameterwert validieren, den Sie vom Client erhalten. Die Runtime ersetzt einfach den Parameterwert in der- <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> Eigenschaft.

## <a name="method-resolution"></a>Methoden Auflösung
 Wenn die- <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> Methode aufgerufen wird, werden die Datenfelder aus dem Daten gebundenen Steuerelement, die Parameter, die deklarativ im-Element erstellt wurden `InsertParameters` , und die Parameter, die im-Ereignishandler hinzugefügt wurden, <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> zusammengeführt. (Weitere Informationen finden Sie im vorherigen Abschnitt.) Das- <xref:System.Web.UI.WebControls.ObjectDataSource> Objekt versucht dann, eine aufzurufende Methode zu finden. Zuerst sucht Sie nach einer oder mehreren Methoden mit dem Namen, der in der-Eigenschaft angegeben ist <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> . Wenn keine Entsprechung gefunden wird, <xref:System.InvalidOperationException> wird eine Ausnahme ausgelöst. Wenn eine Übereinstimmung gefunden wird, sucht Sie nach übereinstimmenden Parameternamen. Angenommen, ein Typ, der von der-Eigenschaft angegeben wird, <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> verfügt über zwei Methoden mit dem Namen `InsertARecord` . Eine `InsertARecord` verfügt über einen Parameter, `ID` , und der andere `InsertARecord` verfügt über zwei Parameter: `Name` und `Number` . Wenn die Auflistung <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> nur einen Parameter mit dem Namen aufweist `ID` , wird die- `InsertARecord` Methode mit nur dem- `ID` Parameter aufgerufen. Der Typ des Parameters wird beim Auflösen der Methoden nicht geprüft. Die Reihenfolge der Parameter spielt keine Rolle.

 Wenn die- <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> Eigenschaft festgelegt ist, wird die-Methode auf andere Weise aufgelöst. Der <xref:System.Web.UI.WebControls.ObjectDataSource> sucht nach einer Methode mit dem Namen, der in der- <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> Eigenschaft angegeben ist, die einen Parameter des Typs annimmt, der in der-Eigenschaft angegeben ist <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> . In diesem Fall spielt der Name des Parameters keine Rolle.



## Examples
 Dieser Abschnitt enthält zwei Codebeispiele. Im ersten Codebeispiel wird veranschaulicht, wie ein <xref:System.Web.UI.WebControls.ObjectDataSource> -Objekt mit einem Geschäftsobjekt und ein- <xref:System.Web.UI.WebControls.DetailsView> Steuerelement zum Einfügen von Daten verwendet wird. Das zweite Codebeispiel enthält ein Beispiel für das Geschäftsobjekt der mittleren Ebene, das im ersten Codebeispiel verwendet wird.

 Im folgenden Codebeispiel wird veranschaulicht, wie ein <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement mit einem Geschäftsobjekt und einem- <xref:System.Web.UI.WebControls.DetailsView> Steuerelement zum Einfügen von Daten verwendet wird. Zuerst wird <xref:System.Web.UI.WebControls.DetailsView> ein neuer Datensatz angezeigt `NorthwindEmployee` , zusammen mit einer automatisch generierten Schaltfläche **Einfügen** . Nachdem Sie Daten in die Felder des-Steuer Elements eingegeben <xref:System.Web.UI.WebControls.DetailsView> haben, klicken Sie auf die Schaltfläche **Einfügen** . Die- <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> Eigenschaft identifiziert, welche Methode den Einfügevorgang ausführt.

 In diesem Beispiel wird die- `UpdateEmployeeInfo` Methode verwendet, um eine Einfügung auszuführen, erfordert jedoch einen- `NorthwindEmployee` Parameter, um die Daten einzufügen. Aus diesem Grund ist die Auflistung von Zeichen folgen, die das <xref:System.Web.UI.WebControls.DetailsView> Steuerelement automatisch übergibt, nicht ausreichend. Der Delegat `NorthwindEmployeeInserting` ist ein <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler> Objekt, das das <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> -Ereignis behandelt und es Ihnen ermöglicht, die Eingabeparameter zu bearbeiten, bevor der Vorgang fortgesetzt wird <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> . Da die `UpdateEmployeeInfo` Methode ein- `NorthwindEmployee` Objekt als Parameter erfordert, wird eine mithilfe der Auflistung von Zeichen folgen erstellt und der-Auflistung <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> mithilfe eines Parameter namens () hinzugefügt, `ne` der von der-Methode erwartet wird. Sie können wie folgt Verfahren ausführen, wenn Sie ein vorhandenes Objekt der mittleren Ebene als Datenquelle mit Typen und Methoden verwenden, die nicht speziell für die Verwendung mit dem Steuerelement entworfen wurden <xref:System.Web.UI.WebControls.ObjectDataSource> .

 Wenn der <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> Vorgang ausgeführt wird, wird die durch die-Eigenschaft identifizierte Methode <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> aufgerufen. Wenn die- `Insert` Methode des-Objekts über eine Methoden Signatur verfügt, die Parameter enthält, muss die Auflistung <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> einen Parameter mit Namen enthalten, die den Methoden Signatur Parametern entsprechen, damit die <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> Methode erfolgreich abgeschlossen werden kann.

 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/objds4cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/objds4vb.aspx#1)]

 Das folgende Codebeispiel enthält ein Beispiel für ein Geschäftsobjekt der mittleren Ebene, das im vorangehenden Codebeispiel verwendet wird. Das Codebeispiel besteht aus zwei grundlegenden Klassen:

-   Die- `EmployeeLogic` Klasse, die eine Zustands lose Klasse ist, die Geschäftslogik kapselt.

-   Die- `NorthwindEmployee` Klasse, bei der es sich um eine Modell Klasse handelt, die nur die grundlegenden Funktionen enthält, die zum Laden und Speichern von Daten aus der Datenebene erforderlich sind.

 Eine zusätzliche `NorthwindDataException` Klasse wird zur einfacheren Bereitstellung bereitgestellt. Ein umfassendes, funktionierendes Beispiel ist die Kompilierung und Verwendung dieser Klassen. Die- `UpdateEmployeeInfo` Methode ist nicht vollständig implementiert, sodass Sie keine Daten in die Northwind Traders-Datenbank einfügen, wenn Sie mit diesem Beispiel experimentieren.

 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/northwindemployee4.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/northwindemployee4.vb#2)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=214011">Verwenden des Entity Framework und des ObjectDataSource-Steuer Elements</related>
      </Docs>
    </Member>
    <Member MemberName="InsertParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection InsertParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection InsertParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InsertParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ InsertParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InsertParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.MergableProperty(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.MergableProperty(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Parameterauflistung ab, die die von der <see cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" />-Eigenschaft verwendeten Parameter enthält.</summary>
        <value>Eine <see cref="T:System.Web.UI.WebControls.ParameterCollection" />, die die Parameter enthält, die von der durch die <see cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" />-Eigenschaft angegebenen Methode verwendet werden.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die Namen und Typen der Parameter, die in der Auflistung enthalten sind, <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> müssen mit den Namen und Typen der Parameter in der <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> Eigenschaften Signatur identisch sein. Bei den Parameternamen wird Groß-/Kleinschreibung beachtet. Beim Arbeiten mit Daten gebundenen Steuerelementen, die Parameter bereitstellen, z. b. das <xref:System.Web.UI.WebControls.GridView> -Steuerelement und das-Steuerelement, führt <xref:System.Web.UI.WebControls.DetailsView> das-Steuerelement <xref:System.Web.UI.WebControls.ObjectDataSource> automatisch alle Parameter, die in der Auflistung explizit angegeben sind, mit den vom Daten gebundenen Steuerelement bereitgestellten Parametern zusammen Dies ist wichtig, da Daten gebundene Steuerelemente ihre Parameter immer als <xref:System.String> -Typen angeben und wenn die Methoden Signatur numerische oder Datums Typen enthält, müssen Sie explizit einen Parameter in der Auflistung <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> mit dem richtigen Typ einschließen. Andernfalls versucht das-Steuerelement, <xref:System.Web.UI.WebControls.ObjectDataSource> die Parameter entsprechend dem Typ umzuwandeln, der von den Parametern in der-Auflistung definiert wird. Weitere Informationen finden Sie unter [Verwenden von Parametern mit dem ObjectDataSource-Steuer](https://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4)Element.

 Die- <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> Eigenschaft ruft die- <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A> Eigenschaft ab, die in der enthalten ist, die dem-Steuerelement <xref:System.Web.UI.WebControls.ObjectDataSourceView> zugeordnet ist <xref:System.Web.UI.WebControls.ObjectDataSource> .

 Weitere Informationen zum Zusammenführen von Parametern, zur Objekt Lebensdauer und zur Methoden Auflösung finden Sie unter <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> .



## Examples
 Dieser Abschnitt enthält zwei Codebeispiele. Im ersten Codebeispiel wird veranschaulicht, wie ein <xref:System.Web.UI.WebControls.ObjectDataSource> -Objekt mit einem Geschäftsobjekt und ein- <xref:System.Web.UI.WebControls.DetailsView> Steuerelement zum Einfügen von Daten verwendet wird. Im zweiten Codebeispiel wird eine Beispiel Implementierung der- `Insert` Methode bereitgestellt, die im ersten Codebeispiel verwendet wird.

 Im folgenden Codebeispiel wird veranschaulicht, wie ein <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement mit einem Geschäftsobjekt und einem- <xref:System.Web.UI.WebControls.DetailsView> Steuerelement zum Einfügen von Daten verwendet wird. Anfänglich <xref:System.Web.UI.WebControls.DetailsView> zeigt die Textfelder an, in denen Sie Daten für einen neuen `NorthwindEmployee` Datensatz und eine automatisch generierte Schaltfläche **Einfügen** eingeben können. Nachdem Sie Daten in die Felder des-Steuer Elements eingegeben <xref:System.Web.UI.WebControls.DetailsView> haben, klicken Sie auf die Schaltfläche **Einfügen** . Die- <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> Eigenschaft identifiziert, welche Methode den Einfügevorgang ausführt.

 Wenn Sie auf die Schaltfläche **Einfügen** klicken, wird der Vorgang mit der von der <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> -Eigenschaft angegebenen Methode und den in der-Auflistung angegebenen Parametern ausgeführt <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> . In diesem Codebeispiel wird ein Parameter in der-Auflistung angegeben, <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> der der ID des Vorgesetzten entspricht. Dies liegt daran, dass auch dann, wenn die ID in der-Auflistung <xref:System.Web.UI.WebControls.GridView.Rows%2A> für das-Steuerelement als-Objekt angezeigt wird <xref:System.Web.UI.WebControls.DetailsView> <xref:System.Web.UI.WebControls.BoundField> , eine Zeichenfolge an das-Steuerelement weitergeleitet wird <xref:System.Web.UI.WebControls.ObjectDataSource> . Durch das explizite hinzufügen zur-Auflistung <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> mit einer-Eigenschaft, die <xref:System.Web.UI.WebControls.Parameter.Type%2A> auf den-Wert festgelegt <xref:System.TypeCode.Int32> ist, wird Sie von ordnungsgemäß <xref:System.Web.UI.WebControls.ObjectDataSource> an die-Methode als <xref:System.Int32> und nicht als Zeichenfolge an die-Methode übermittelt.

 Wenn der <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> Vorgang ausgeführt wird, wird die durch die-Eigenschaft identifizierte Methode <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> aufgerufen. Wenn die- <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> Methode des-Objekts über eine Methoden Signatur verfügt, die Parameter enthält, muss die-Auflistung <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> Parameter enthalten, deren Namen mit den Methoden Signatur Parametern identisch sind, damit die <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> Methode erfolgreich abgeschlossen werden kann.

> [!IMPORTANT]
>  Sie sollten jeden Parameterwert validieren, den Sie vom Client erhalten. Die Runtime ersetzt einfach den Parameterwert in der- <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> Eigenschaft.

 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_8#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_8/CS/objds8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_8#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_8/VB/objds8vb.aspx#1)]

 Das folgende Codebeispiel stellt eine Beispiel Implementierung der- `Insert` Methode bereit, die im vorangehenden Codebeispiel verwendet wird. Die- `InsertNewEmployeeWrapper` Methode wird dem `EmployeeLogic` Objekt der mittleren Ebene hinzugefügt, das in der Klassen Übersicht bereitgestellt wird, <xref:System.Web.UI.WebControls.ObjectDataSource> damit das-Objekt leichter mit dem- <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement in Webanwendungen arbeiten kann, ohne dass die tatsächliche Geschäftslogik beträchtlich umgeschrieben wird.

 Um das Beispiel auszuführen, müssen Sie über die-Klasse verfügen, die `NorthwindEmployee` in der-Klassen Übersicht bereitgestellt wird <xref:System.Web.UI.WebControls.ObjectDataSource> . In diesem Beispiel wird nur veranschaulicht, wie die mit <xref:System.Web.UI.WebControls.ObjectDataSource> einer Geschäftsobjekt Methode verbunden wird, die mithilfe von Parametern Daten für einen neuen Datenbankdaten Satz abruft. Im Beispiel werden der-Datenbank keine Datensätze hinzugefügt, da die- `Save` Methode der- `NorthwindEmployee` Klasse keinen Code zum Aktualisieren der Datenbank enthält.

 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_8#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_8/CS/northwindemployee8.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_8#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_8/VB/northwindemployee8.vb#3)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="objectDataSource.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Ein Objekt, das die gespeicherten Ansichtszustandswerte für das Steuerelement enthält.</param>
        <summary>Lädt den zuvor gespeicherten Ansichtszustand des <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />-Steuerelements.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Diese Methode wird hauptsächlich von der .NET Framework-Infrastruktur verwendet und ist nicht für die direkte Verwendung im Code vorgesehen. Steuerungs Entwickler können diese Methode jedoch außer Kraft setzen, um anzugeben, wie ein benutzerdefiniertes Server Steuerelement seinen Ansichts Zustand wiederherstellt. Weitere Informationen finden Sie unter [ASP.net State Management Overview](https://docs.microsoft.com/previous-versions/aspnet/75x4ha6s(v=vs.100)).

 Die- <xref:System.Web.UI.WebControls.ObjectDataSource.LoadViewState%2A> Methode wird verwendet, um den zuvor gespeicherten Ansichts Zustand des-Steuer Elements zu laden <xref:System.Web.UI.WebControls.ObjectDataSource> .

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Die- <see cref="M:System.Web.UI.WebControls.ObjectDataSource.LoadViewState(System.Object)" /> Methode wird hauptsächlich von Steuerelement Entwicklern verwendet, wenn das Steuerelement erweitert wird <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> .</para></block>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="MaximumRowsParameterName">
      <MemberSignature Language="C#" Value="public string MaximumRowsParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MaximumRowsParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumRowsParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MaximumRowsParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumRowsParameterName : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("maximumRows")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("maximumRows")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen des Datenabruf-Methodenparameters für Geschäftsobjekte ab, mit dem die Anzahl der Datensätze angegeben wird, die für die Unterstützung des Datenquellen-Paging abgerufen werden, oder legt diesen fest.</summary>
        <value>Der Name des <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />-Parameters, mit dem die Anzahl der abzurufenden Datensätze angegeben wird. Der Standardwert ist <c>"MaximumRows"</c>.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die- <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> Eigenschaft wird zur Unterstützung von Datenquellen Paging verwendet. Informationen dazu, wie Paging vom-Steuerelement unterstützt wird <xref:System.Web.UI.WebControls.ObjectDataSource> , finden Sie unter <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> .

 Die- <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> Eigenschaft delegiert an die- <xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName%2A> Eigenschaft des- <xref:System.Web.UI.WebControls.ObjectDataSourceView> Objekts, das dem-Steuerelement zugeordnet ist <xref:System.Web.UI.WebControls.ObjectDataSource> .



## Examples
 Die folgenden drei Beispiele zeigen eine Webseite, eine Code-Behind-Seiten Klasse und eine Datenzugriffs Klasse, mit der der Benutzer die Anzahl der Datensätze auswählen kann, die auf der Seite angezeigt werden.

 Die Webseite enthält ein- <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> , dessen-Eigenschaft auf festgelegt ist `true` . Die- <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> Eigenschaft wird auf den Namen einer Methode festgelegt, die die Gesamtanzahl der Datensätze in der Abfrage zurückgibt. Die <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> -Eigenschaft und die- <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> Eigenschaft werden auf die Namen der Parameter festgelegt, die in der Select-Methode verwendet werden. Die Seite enthält auch ein- <xref:System.Web.UI.WebControls.DropDownList> Steuerelement.

 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx#1)]

 Das zweite Beispiel zeigt einen Handler für das- <xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged?displayProperty=nameWithType> Ereignis des- <xref:System.Web.UI.WebControls.DropDownList> Steuer Elements. Der Code im-Handler legt die <xref:System.Web.UI.WebControls.GridView.PageSize%2A> -Eigenschaft auf die Benutzer Auswahl fest.

 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx.vb#2)]

 Das dritte Beispiel zeigt die Datenzugriffs Klasse, mit der Daten aus der Customers-Tabelle abgerufen werden. Sie enthält eine Methode mit dem Namen `GetSubsetOfEmployees` , die der- <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> Eigenschaft des-Steuer Elements zugewiesen wird <xref:System.Web.UI.WebControls.ObjectDataSource> . Das Beispiel enthält auch eine Methode mit dem Namen `GetEmployeeCount` , die der- <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> Eigenschaft des-Steuer Elements zugewiesen wird <xref:System.Web.UI.WebControls.ObjectDataSource> . Die-Klasse verwendet LINQ zum Abfragen der Customers-Tabelle. Für das Beispiel ist eine LINQ to SQL Klasse erforderlich, die die Northwind-Datenbank und die Customers-Tabelle darstellt. Weitere Informationen finden Sie unter Vorgehens [Weise: Erstellen von LINQ to SQL Klassen in einem Webprojekt](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).

 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/App_Code/CustomerLogic.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/App_Code/CustomerLogic.vb#3)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanPage" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="ObjectCreated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ObjectCreated As ObjectDataSourceObjectEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceObjectEventHandler ^ ObjectCreated;" />
      <MemberSignature Language="F#" Value="member this.ObjectCreated : System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler " Usage="member this.ObjectCreated : System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, nachdem das von der <see cref="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" />-Eigenschaft angegebene Objekt erstellt wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Behandeln Sie das- <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> Ereignis, um andere Methoden für das Geschäftsobjekt aufzurufen, Eigenschaften festzulegen oder eine andere Initialisierung durchzuführen, die für das Geschäftsobjekt spezifisch ist, bevor das <xref:System.Web.UI.WebControls.ObjectDataSource> Objekt die Geschäftsobjekt Daten-Methode aufruft, um einen Daten Vorgang auszuführen. Auf einen Verweis auf das-Objekt wird von der- <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> Eigenschaft zugegriffen, die vom-Objekt verfügbar gemacht wird <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> .

 Wenn die Methode, die zum Ausführen des Daten Vorgangs identifiziert wird `static` `Shared` , (in Visual Basic) ist, <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> werden das-Ereignis und das- <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> Ereignis nie ausgelöst.

 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).

 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="ObjectCreating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ObjectCreating As ObjectDataSourceObjectEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceObjectEventHandler ^ ObjectCreating;" />
      <MemberSignature Language="F#" Value="member this.ObjectCreating : System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler " Usage="member this.ObjectCreating : System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, bevor das von der <see cref="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" />-Eigenschaft angegebene Objekt erstellt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Wenn die Methode, die zum Ausführen des Daten Vorgangs identifiziert wird `static` `Shared` , (in Visual Basic) ist, <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> werden das-Ereignis und das- <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> Ereignis nie ausgelöst.

 Das- <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement ruft automatisch den Parameter losen Konstruktor eines Geschäftsobjekts auf, um mithilfe der Reflektion eine Instanz davon zu erstellen. Behandeln <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> Sie das-Ereignis, um einen anderen Konstruktor explizit aufzurufen, und legen Sie die Instanz des Objekts, das sich ergibt, auf die- <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> Eigenschaft des zugeordneten- <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> Objekts

 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).



## Examples
 Dieser Abschnitt enthält zwei Codebeispiele. Im ersten Codebeispiel wird veranschaulicht, wie ein <xref:System.Web.UI.WebControls.ObjectDataSource> -Objekt mit einem Geschäftsobjekt und einem-Steuerelement verwendet wird <xref:System.Web.UI.WebControls.GridView> , um Informationen anzuzeigen. Im zweiten Codebeispiel wird das Geschäftsobjekt der mittleren Ebene bereitgestellt, das im ersten Codebeispiel verwendet wird.

 Im folgenden Codebeispiel wird veranschaulicht, wie ein <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement mit einem Geschäftsobjekt und einem-Steuerelement verwendet wird <xref:System.Web.UI.WebControls.GridView> , um Informationen anzuzeigen. Sie können mit einem Geschäftsobjekt arbeiten, das für jeden von der Webseite ausgeführten Daten Vorgang sehr teuer zu erstellen ist (in Bezug auf die Zeit oder die Ressourcen). Eine Möglichkeit, mit einem teuren Objekt zu arbeiten, besteht darin, eine Instanz davon einmalig zu erstellen und dann für nachfolgende Vorgänge zwischenzuspeichern, anstatt Sie für jeden Daten Vorgang zu erstellen und zu zerstören.

> [!NOTE]
>  In einer Produktionsanwendung können mehrere Anforderungen gleichzeitig mit derselben Instanz verwendet werden. Daher muss das-Objekt Thread sicher implementiert werden.

 In diesem Codebeispiel wird dieses Muster veranschaulicht. Sie können das- <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> Ereignis behandeln, um zuerst den Cache für ein Objekt zu überprüfen und nur eine Instanz des Objekts zu erstellen, sofern nicht bereits ein Cache vorhanden ist. Behandeln Sie dann das- <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> Ereignis, um das Geschäftsobjekt zur zukünftigen Verwendung zwischenzuspeichern, anstatt es zu zerstören. In diesem Codebeispiel wird die- <xref:System.ComponentModel.CancelEventArgs.Cancel?displayProperty=nameWithType> Eigenschaft des- <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs> Objekts auf festgelegt, `true` um die <xref:System.Web.UI.WebControls.ObjectDataSource> an die nicht aufzurufende-Methode für das-Objekt zu leiten <xref:System.IDisposable.Dispose%2A> .

 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/CS/objds16cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/VB/objds16vb.aspx#1)]

 Im folgenden Codebeispiel wird ein Beispiel für ein Geschäftsobjekt der mittleren Ebene bereitstellt, das im vorangehenden Codebeispiel verwendet wird. Das Codebeispiel besteht aus einem grundlegenden Geschäftsobjekt, das von der-Klasse definiert wird `EmployeeLogic` , die eine Zustands behaftete Klasse ist, die Geschäftslogik kapselt. Für ein umfassendes Beispiel müssen Sie diesen Code als Bibliothek kompilieren und diese Klassen aus einer ASP.net page (ASPX-Datei) verwenden.

 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_16#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/CS/northwindemployee16.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_16#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/VB/northwindemployee16.vb#2)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating(System.Web.UI.WebControls.ObjectDataSourceEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="ObjectDisposing">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler ObjectDisposing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler ObjectDisposing" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ObjectDisposing As ObjectDataSourceDisposingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceDisposingEventHandler ^ ObjectDisposing;" />
      <MemberSignature Language="F#" Value="member this.ObjectDisposing : System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler " Usage="member this.ObjectDisposing : System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, bevor das von der <see cref="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" />-Eigenschaft angegebene Objekt verworfen wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Das- <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> Ereignis wird immer ausgelöst, bevor die Instanz des Geschäftsobjekts verworfen wird. Wenn das Geschäftsobjekt die- <xref:System.IDisposable> Schnittstelle implementiert, wird die- <xref:System.IDisposable.Dispose%2A> Methode aufgerufen, nachdem dieses Ereignis ausgelöst wurde.

 Behandeln Sie das- <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> Ereignis, um andere Methoden für das Objekt aufzurufen, legen Sie Eigenschaften fest, oder führen Sie eine Bereinigung durch, die für das Objekt spezifisch ist, bevor das Objekt zerstört wird. Auf einen Verweis auf das-Objekt wird von der- <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> Eigenschaft zugegriffen, die vom-Objekt verfügbar gemacht wird <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> .

 Wenn Sie ein- <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement mit einer LINQ to SQL-Klasse verwenden, müssen Sie die Freigabe der Datenkontext Klasse in einem Handler für das- <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> Ereignis abbrechen. Dieser Schritt ist erforderlich, da LINQ to SQL verzögerte Ausführung unterstützt, während das- <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement versucht, den Datenkontext nach dem Select-Vorgang zu verwerfen.

 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).



## Examples
 Dieser Abschnitt enthält zwei Codebeispiele. Im ersten Codebeispiel wird veranschaulicht, wie ein <xref:System.Web.UI.WebControls.ObjectDataSource> -Objekt mit einem Geschäftsobjekt und einem-Steuerelement verwendet wird <xref:System.Web.UI.WebControls.GridView> , um Informationen anzuzeigen. Im zweiten Codebeispiel wird das Geschäftsobjekt der mittleren Ebene bereitgestellt, das im ersten Codebeispiel verwendet wird.

 Im folgenden Codebeispiel wird veranschaulicht, wie ein <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement mit einem Geschäftsobjekt und einem-Steuerelement verwendet wird <xref:System.Web.UI.WebControls.GridView> , um Informationen anzuzeigen. Sie können mit einem Geschäftsobjekt arbeiten, das für jeden von der Webseite ausgeführten Daten Vorgang sehr teuer zu erstellen ist (in Bezug auf die Zeit oder die Ressourcen). Eine Möglichkeit, mit einem teuren Objekt zu arbeiten, besteht darin, eine Instanz davon einmalig zu erstellen und dann für nachfolgende Vorgänge zwischenzuspeichern, anstatt Sie für jeden Daten Vorgang zu erstellen und zu zerstören. Dieses Muster wird in diesem Beispiel veranschaulicht. Sie können das- <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> Ereignis behandeln, um zuerst den Cache für ein Objekt zu überprüfen und nur eine Instanz davon zu erstellen, sofern nicht bereits eine Instanz von vorhanden ist. Behandeln Sie dann das- <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> Ereignis, um das Geschäftsobjekt zur zukünftigen Verwendung zwischenzuspeichern, anstatt es zu zerstören. In diesem Codebeispiel wird die- <xref:System.ComponentModel.CancelEventArgs.Cancel?displayProperty=nameWithType> Eigenschaft des- <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs> Objekts auf festgelegt, um `true` die so zu leiten, dass die- <xref:System.Web.UI.WebControls.ObjectDataSource> <xref:System.IDisposable.Dispose%2A> Methode für das-Objekt nicht aufgerufen wird.

 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/CS/objds16cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/VB/objds16vb.aspx#1)]

 Im folgenden Codebeispiel wird ein Beispiel für ein Geschäftsobjekt der mittleren Ebene bereitstellt, das im vorangehenden Codebeispiel verwendet wird. Das Codebeispiel besteht aus einem grundlegenden Geschäftsobjekt, das von der-Klasse definiert wird `EmployeeLogic` , die eine Zustands behaftete Klasse ist, die Geschäftslogik kapselt. Für ein umfassendes Beispiel müssen Sie diesen Code als Bibliothek kompilieren und diese Klassen aus einer ASP.net page (ASPX-Datei) verwenden.

 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_16#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/CS/northwindemployee16.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_16#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/VB/northwindemployee16.vb#2)]

 Das folgende Beispiel zeigt, wie das-Ereignis behandelt wird, <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> Wenn ein- <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement mit einer LINQ to SQL-Klasse verwendet wird.

```vb
Public Sub ExampleObjectDisposing(ByVal sender As Object, _
        ByVal e As ObjectDataSourceDisposingEventArgs)
    e.Cancel = True
End Sub
```

```csharp
public void ExampleObjectDisposing(object sender,
        ObjectDataSourceDisposingEventArgs e)
{
    e.Cancel = true;
}
```

 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="OldValuesParameterFormatString">
      <MemberSignature Language="C#" Value="public string OldValuesParameterFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OldValuesParameterFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property OldValuesParameterFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OldValuesParameterFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OldValuesParameterFormatString : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("{0}")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("{0}")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Formatzeichenfolge ab, die auf die Namen der Parameter für ursprüngliche Werte angewendet wird, die an die <see langword="Delete" />-Methode oder an die <see langword="Update" />-Methode übergeben werden, oder legt diese fest.</summary>
        <value>Eine Zeichenfolge, die eine Formatzeichenfolge darstellt, die auf die Namen beliebiger, an die <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />-Methode oder die <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />-Methode übergebener <paramref name="oldValues" />-Parameter oder Schlüsselparameter angewendet werden. Der Standardwert ist <c>" {0} "</c>. Dies bedeutet, dass der Parameter Name der Feldname ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Der Wert der- <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> Eigenschaft wird nur auf Primärschlüssel angewendet, z. b. auf solche, die mit der- `DataKeyNames` Eigenschaft eines Daten gebundenen Steuer Elements identifiziert werden, oder in DELETE-und Update-Szenarien, in denen die <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A> -Eigenschaft auf den Wert festgelegt ist <xref:System.Web.UI.ConflictOptions.CompareAllValues> , und der Satz ursprünglicher Werte an die entsprechende Daten Methode übermittelt wird.

 Im folgenden finden Sie zwei häufige Szenarien, in denen Sie die-Eigenschaft ändern können <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> :

-   Möglicherweise möchten Sie die-Eigenschaft ändern, um bei Updates zwischen alten und neuen Werten zu unterscheiden. Wenn die <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A> -Eigenschaft auf den-Wert festgelegt ist <xref:System.Web.UI.ConflictOptions.CompareAllValues> , werden die Parameter für die ursprünglichen und die neuen Werte der Auflistung hinzugefügt <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> . Ohne die Formatierungs Zeichenfolge werden für jedes Datenfeld zwei Parameter mit demselben Namen erstellt. Durch Ändern des Namens des ursprünglichen value-Parameters können Sie die Daten mit der ursprünglichen Datenquelle vergleichen, um Konflikte zu erkennen und Schlüsselwerte zu vergleichen.

-   Einige visuelle Designer implementieren ein bestimmtes Benennungs Schema für die ursprünglichen Werte und Schlüssel.

 Die- <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> Eigenschaft delegiert an die- <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> Eigenschaft des- <xref:System.Web.UI.WebControls.ObjectDataSourceView> Objekts, das dem-Steuerelement zugeordnet ist <xref:System.Web.UI.WebControls.ObjectDataSource> .

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="objectDataSource.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das Ereignisdaten enthält.</param>
        <summary>Fügt der Seite mit dem <see cref="E:System.Web.UI.Page.LoadComplete" />-Steuerelement einen <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />-Ereignishandler hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).

 Mit der <xref:System.Web.UI.WebControls.ObjectDataSource.OnInit%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie die <see cref="M:System.Web.UI.WebControls.ObjectDataSource.OnInit(System.EventArgs)" /> Methode in einer abgeleiteten Klasse überschreiben, stellen Sie sicher, dass die- <see cref="M:System.Web.UI.Control.OnInit(System.EventArgs)" /> Methode für die Basisklasse aufgerufen wird, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
        <altmember cref="M:System.Web.UI.Control.OnInit(System.EventArgs)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="ParsingCulture">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParsingCulture ParsingCulture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ParsingCulture ParsingCulture" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.ParsingCulture" />
      <MemberSignature Language="VB.NET" Value="Public Property ParsingCulture As ParsingCulture" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParsingCulture ParsingCulture { System::Web::UI::WebControls::ParsingCulture get(); void set(System::Web::UI::WebControls::ParsingCulture value); };" />
      <MemberSignature Language="F#" Value="member this.ParsingCulture : System.Web.UI.WebControls.ParsingCulture with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.ParsingCulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParsingCulture</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab oder legt einen Wert fest, der angibt, welche Kulturinformationen verwendet werden, wenn Zeichenfolgenwerte in tatsächliche Eigenschaftentypen konvertiert werden, um ein Objekt des Typs zu erstellen, der von <see cref="P:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName" /> angegeben wird.</summary>
        <value>Die Kulturinformationen. Der Standardwert ist <see cref="F:System.Web.UI.WebControls.ParsingCulture.Invariant" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="objectDataSource.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Speichert den Zustand des <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />-Steuerelements.</summary>
        <returns>Gibt den aktuellen Ansichtszustand des Serversteuerelements zurück, andernfalls wird <see langword="null" /> zurückgegeben, wenn dem Steuerelement kein Ansichtszustand zugeordnet ist.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.IStateManager.SaveViewState" />
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable Select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerable Select() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
      <MemberSignature Language="VB.NET" Value="Public Function Select () As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerable ^ Select();" />
      <MemberSignature Language="F#" Value="member this.Select : unit -&gt; System.Collections.IEnumerable" Usage="objectDataSource.Select " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft Daten aus dem zugrunde liegenden Datenspeicher ab, indem die von der <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />-Eigenschaft angegebene Methode mit den Parametern in der <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />-Auflistung aufgerufen wird.</summary>
        <returns>Eine <see cref="T:System.Collections.IEnumerable" />-Liste mit Datenzeilen.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die angegebene Methode kann über eine beliebige Methoden Signatur verfügen, muss aber von einem der in der folgenden Tabelle aufgeführten Typen abgeleitet werden, damit das <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement Sie erfolgreich aufruft.

|Rückgabetyp|Aktion|
|-----------------|------------|
|<xref:System.Collections.IEnumerable>|Der <xref:System.Collections.IEnumerable> wird von der- <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Methode zurückgegeben.|
|<xref:System.Data.DataTable>|Eine <xref:System.Data.DataView> wird mit dem erstellt <xref:System.Data.DataTable> und von der-Methode zurückgegeben <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> .|
|<xref:System.Data.DataView>|Der <xref:System.Data.DataView> wird von der- <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Methode zurückgegeben.|
|<xref:System.Data.DataSet>|Der erste <xref:System.Data.DataTable> von <xref:System.Data.DataSet> wird extrahiert, und ein <xref:System.Data.DataView> wird von der-Methode erstellt und zurückgegeben <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> .|
|<xref:System.Object>|Das-Objekt ist in einer Auflistung mit einem Element umschließt <xref:System.Collections.IEnumerable> und wird von der-Methode zurückgegeben <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> .|

 Die Methode, die von der-Eigenschaft identifiziert wird, <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> kann eine Instanzmethode oder eine `static` ( `Shared` in Visual Basic)-Methode sein. Wenn es sich um eine Instanzmethode handelt, wird das Geschäftsobjekt jedes Mal erstellt und zerstört, wenn die durch die-Eigenschaft angegebene Methode <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> aufgerufen wird, mit der Ausnahme, dass dieselbe-Instanz verwendet wird, um die von der <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> -Eigenschaft angegebene Methode und die-Methode aufzurufen, die durch die-Eigenschaft angegeben wird <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> . Die- <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Methode gibt eine- <xref:System.Collections.IEnumerable> Schnittstelle zurück. Um zwischen Speicherungs-und Filter Szenarios zu aktivieren, muss der Rückgabewert jedoch ein- <xref:System.Data.DataSet> Objekt sein. Obwohl die- <xref:System.Data.DataSet> Klasse die- <xref:System.Collections.IEnumerable> Schnittstelle nicht implementiert, extrahiert das-Steuerelement <xref:System.Web.UI.WebControls.ObjectDataSource> automatisch das Standard <xref:System.Data.DataView> Steuerelement, das implementiert <xref:System.Collections.IEnumerable> .

 Bevor der- <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Vorgang ausgeführt wird, <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting%2A> wird die-Methode aufgerufen, um das-Ereignis zu erhöhen <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> . Sie können das <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> -Ereignis behandeln, um die Werte der Parameter zu überprüfen und vor einem-Vorgang eine Vorverarbeitung auszuführen <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> . Zum Ausführen eines Datenabruf Vorgangs verwendet das- <xref:System.Web.UI.WebControls.ObjectDataSourceView> Objekt Reflektion, um eine Instanz des-Objekts zu erstellen, das durch die-Eigenschaft identifiziert wird <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> . Anschließend wird die-Methode aufgerufen, die durch die-Eigenschaft identifiziert wird <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> , wobei alle zugehörigen Eigenschaften verwendet werden <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> . Nachdem der <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Vorgang abgeschlossen wurde, <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected%2A> wird die-Methode aufgerufen, um das-Ereignis zu erhöhen <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> . Sie können das <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> -Ereignis behandeln, um alle Rückgabewerte, Ausgabeparameter und Ausnahmen zu überprüfen und Nachbearbeitung auszuführen.

 Wenn die <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> -Eigenschaft ein <xref:System.Data.DataSet> <xref:System.Data.DataTable> <xref:System.Data.DataView> -,-oder-Objekt zurückgibt und Caching aktiviert ist, <xref:System.Web.UI.WebControls.ObjectDataSource> Ruft die Daten von ab und speichert Daten im Cache während des <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Vorgangs. Der Cache wird basierend auf dem zwischen Speicherungs Verhalten, das durch die Kombination der-Eigenschaft und der-Eigenschaft angegeben wird, erstellt, verworfen oder aktualisiert <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> .

 Wenn die <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> Eigenschaft ein <xref:System.Data.DataSet> -oder <xref:System.Data.DataTable> -Objekt zurückgibt und eine- <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> Eigenschaft angegeben wurde, wird Sie mit allen angegebenen Eigenschaften ausgewertet, <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> und der resultierende Filter wird auf die Datenliste während des <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Vorgangs angewendet.

 Die- <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Methode delegiert an die- <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> Methode des <xref:System.Web.UI.WebControls.ObjectDataSourceView> , das dem-Steuerelement zugeordnet ist <xref:System.Web.UI.WebControls.ObjectDataSource> .

 Weitere Informationen zum Zusammenführen von Parametern, zur Objekt Lebensdauer und zur Methoden Auflösung finden Sie unter <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> .

## <a name="data-bound-controls"></a>Datengebundene Steuerelemente
 Wenn das <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement einem Daten gebundenen Steuerelement zugeordnet ist, z. b <xref:System.Web.UI.WebControls.GridView> . dem-Steuerelement, ist es nicht erforderlich, die- <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Methode aus dem Seitencode aufzurufen. <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>Stattdessen wird die-Methode direkt durch das Daten gebundene Steuerelement aufgerufen.



## Examples
 Ein Codebeispiel finden Sie unter <xref:System.Web.UI.WebControls.ObjectDataSource>.

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="SelectCountMethod">
      <MemberSignature Language="C#" Value="public string SelectCountMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectCountMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCountMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectCountMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCountMethod : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Methode oder der Funktion auf, die vom <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />-Steuerelement zum Abrufen der Zeilenanzahl aufgerufen wird, oder legt diesen fest.</summary>
        <value>Eine Zeichenfolge, die den Namen der Methode oder der Funktion darstellt, mit deren Hilfe die <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> die Zeilenanzahl abruft. Die Methode muss eine ganze Zahl (<see cref="T:System.Int32" />) zurückgeben. Der Standardwert ist eine leere Zeichenfolge ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die- <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> Eigenschaft identifiziert eine Geschäftsobjekt Methode, die zum Abrufen der Gesamtanzahl der Zeilen verwendet wird, um das Paging von Datenquellen zu unterstützen. Die- <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> Eigenschaft wird nur ausgewertet, wenn die- <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> Eigenschaft auf festgelegt ist `true` .

 Die- <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> Eigenschaft delegiert an die- <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A> Eigenschaft des- <xref:System.Web.UI.WebControls.ObjectDataSourceView> Objekts, das dem-Steuerelement zugeordnet ist <xref:System.Web.UI.WebControls.ObjectDataSource> . Informationen dazu, wie Paging vom-Steuerelement unterstützt wird <xref:System.Web.UI.WebControls.ObjectDataSource> , finden Sie unter <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> .



## Examples
 Die folgenden drei Beispiele zeigen eine Webseite, eine Code-Behind-Seiten Klasse und eine Datenzugriffs Klasse, mit der der Benutzer die Anzahl der Datensätze auswählen kann, die auf der Seite angezeigt werden.

 Die Webseite enthält ein- <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> , dessen-Eigenschaft auf festgelegt ist `true` . Die- <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> Eigenschaft wird auf den Namen einer Methode festgelegt, die die Gesamtanzahl der Datensätze in der Abfrage zurückgibt. Die <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> -Eigenschaft und die- <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> Eigenschaft werden auf die Namen der Parameter festgelegt, die in der Select-Methode verwendet werden. Die Seite enthält auch ein- <xref:System.Web.UI.WebControls.DropDownList> Steuerelement.

 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx#1)]

 Das zweite Beispiel zeigt einen Handler für das- <xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged?displayProperty=nameWithType> Ereignis des- <xref:System.Web.UI.WebControls.DropDownList> Steuer Elements. Der Code im-Handler legt die <xref:System.Web.UI.WebControls.GridView.PageSize%2A> -Eigenschaft auf die Benutzer Auswahl fest.

 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx.vb#2)]

 Das dritte Beispiel zeigt die Datenzugriffs Klasse, mit der Daten aus der Customers-Tabelle abgerufen werden. Sie enthält eine Methode mit dem Namen `GetSubsetOfEmployees` , die der- <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> Eigenschaft des-Steuer Elements zugewiesen wird <xref:System.Web.UI.WebControls.ObjectDataSource> . Das Beispiel enthält auch eine Methode mit dem Namen `GetEmployeeCount` , die der- <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> Eigenschaft des-Steuer Elements zugewiesen wird <xref:System.Web.UI.WebControls.ObjectDataSource> . Die-Klasse verwendet LINQ zum Abfragen der Customers-Tabelle. Für das Beispiel ist eine LINQ to SQL Klasse erforderlich, die die Northwind-Datenbank und die Customers-Tabelle darstellt. Weitere Informationen finden Sie unter Vorgehens [Weise: Erstellen von LINQ to SQL Klassen in einem Webprojekt](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).

 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/App_Code/CustomerLogic.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/App_Code/CustomerLogic.vb#3)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Selected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Selected" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Selected" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selected As ObjectDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceStatusEventHandler ^ Selected;" />
      <MemberSignature Language="F#" Value="member this.Selected : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " Usage="member this.Selected : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn ein <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />-Vorgang abgeschlossen wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Behandeln Sie das- <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> Ereignis, um die Werte eines Rückgabewerts oder der Ausgabeparameter zu überprüfen, oder, um zu bestimmen, ob eine Ausnahme ausgelöst wurde, nachdem ein- <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Vorgang abgeschlossen wurde. Die Eigenschaften Rückgabewert, Ausgabeparameter und Ausnahmebehandlung sind für das-Objekt verfügbar, <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> das dem Ereignis zugeordnet ist.

 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).



## Examples
 Die folgenden drei Beispiele zeigen eine Webseite, eine Code-Behind-Seiten Klasse und eine Datenzugriffs Klasse, mit der ein Benutzerdaten Sätze in der Tabelle "Employees" in der Datenbank "Northwind" abrufen und aktualisieren kann.

 Das erste Beispiel zeigt eine Webseite, die zwei <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelemente enthält, ein <xref:System.Web.UI.WebControls.DropDownList> -Steuerelement und ein- <xref:System.Web.UI.WebControls.DetailsView> Steuerelement. Das erste <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement und das- <xref:System.Web.UI.WebControls.DropDownList> Steuerelement werden zum Abrufen und Anzeigen von Mitarbeiter Namen aus der Datenbank verwendet. Das zweite <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement und das- <xref:System.Web.UI.WebControls.DetailsView> Steuerelement werden verwendet, um die Daten aus dem Mitarbeiterdaten Satz abzurufen, anzuzeigen und zu ändern, der vom Benutzer ausgewählt wurde.

 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_18#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_18#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default.aspx#1)]

 Das zweite Beispiel zeigt Handler für das <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> -Ereignis und das- <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> Ereignis. Der- <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> Ereignishandler serialisiert das-Objekt, das Daten enthält, die aus der Employee-Tabelle abgerufen wurden. Das serialisierte Objekt wird im Ansichts Zustand gespeichert. Der <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> Ereignishandler deserialisiert das Objekt im Ansichts Zustand, das die ursprünglichen Daten für den Daten Satz enthält, der aktualisiert wird. Das-Objekt, das die ursprünglichen Daten enthält, wird als Parameter an die Update-Methode übergeben. Die ursprünglichen Daten müssen an die Datenbank übermittelt werden, damit Sie verwendet werden können, um zu überprüfen, ob die Daten von einem anderen Prozess geändert wurden.

 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default.aspx.vb#2)]

 Das dritte Beispiel zeigt die Datenzugriffs Klasse, die mit der Northwind-Datenbank interagiert. Die-Klasse verwendet LINQ zum Abfragen und Aktualisieren der Employees-Tabelle. Das Beispiel erfordert eine LINQ to SQL-Klasse, die die Datenbank Northwind database und Employees darstellt. Weitere Informationen finden Sie unter Vorgehens [Weise: Erstellen von LINQ to SQL Klassen in einem Webprojekt](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).

 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/App_Code/EmployeeLogic.cs#5)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/App_Code/EmployeeLogic.vb#5)]

 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Selecting" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="Selecting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler Selecting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler Selecting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Selecting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selecting As ObjectDataSourceSelectingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceSelectingEventHandler ^ Selecting;" />
      <MemberSignature Language="F#" Value="member this.Selecting : System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler " Usage="member this.Selecting : System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt vor einem <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />-Vorgang auf.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Behandeln Sie das- <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> Ereignis, um eine zusätzliche Initialisierung durchzuführen, die für Ihre Anwendung spezifisch ist, um die Werte von Parametern zu überprüfen oder um die Parameterwerte zu ändern, bevor das- <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement den Datenabruf Vorgang ausführt. Die Parameter sind als eine Auflistung verfügbar <xref:System.Collections.IDictionary> , auf die von der-Eigenschaft zugegriffen wird <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> , die durch das-Objekt verfügbar gemacht wird <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> .

 Dieses Ereignis kann zweimal für einen einzelnen Methoden aufzurufen werden <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> , wenn die- <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> Eigenschaft festgelegt ist. Die- <xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs.ExecutingSelectCount%2A> Eigenschaft des- <xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs> Objekts wird verwendet, um zu bestimmen, ob SELECT zum Abrufen von Daten oder Abrufen der Anzahl aufgerufen wurde.

 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).

 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Selected" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="SelectMethod">
      <MemberSignature Language="C#" Value="public string SelectMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectMethod : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Methode oder der Funktion auf, die vom <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />-Steuerelement zum Abrufen von Daten aufgerufen wird, oder legt diesen fest.</summary>
        <value>Eine Zeichenfolge, die den Namen der Methode oder der Funktion darstellt, mit deren Hilfe die <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> Daten abruft. Der Standardwert ist eine leere Zeichenfolge ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die angegebene Methode kann über eine beliebige Methoden Signatur verfügen, aber Sie muss einen der in der folgenden Tabelle dargestellten Typen zurückgeben, damit das <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement Sie erfolgreich aufruft.

|Rückgabetyp|Aktion|
|-----------------|------------|
|<xref:System.Collections.IEnumerable>|Der <xref:System.Collections.IEnumerable> wird von der- <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Methode zurückgegeben.|
|<xref:System.Data.DataTable>|Eine <xref:System.Data.DataView> wird mit dem erstellt <xref:System.Data.DataTable> und von der- <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Methode zurückgegeben.|
|<xref:System.Data.DataView>|Eine <xref:System.Data.DataView> wird von der- <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Methode zurückgegeben.|
|<xref:System.Data.DataSet>|Der erste <xref:System.Data.DataTable> von <xref:System.Data.DataSet> wird extrahiert, und ein <xref:System.Data.DataView> wird von der-Methode erstellt und zurückgegeben <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> .|
|<xref:System.Object>|Das-Objekt ist in einer Auflistung mit einem Element umschließt <xref:System.Collections.IEnumerable> und wird von der-Methode zurückgegeben <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> .|

 Die- <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> Eigenschaft delegiert an die- <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> Eigenschaft des- <xref:System.Web.UI.WebControls.ObjectDataSourceView> Objekts, das dem-Steuerelement zugeordnet ist <xref:System.Web.UI.WebControls.ObjectDataSource> .

 Wenn Sie die- <xref:System.Web.UI.WebControls.ObjectDataSource> Klasse zum Löschen oder Aktualisieren von Daten verwenden, stellen Sie sicher, dass die Parameternamen, die für das-Steuerelement in der Auflistung oder Auflistung konfiguriert wurden, <xref:System.Web.UI.WebControls.ObjectDataSource> <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> mit den von der Select-Methode zurückgegebenen Spaltennamen identisch sind.

## <a name="object-lifetime"></a>Lebensdauer eines Objekts
 Die Methode, die von der-Eigenschaft identifiziert wird, <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> kann eine Instanzmethode oder eine `static` ( `Shared` in Visual Basic)-Methode sein. Wenn es sich um eine Instanzmethode handelt, wird das Geschäftsobjekt jedes Mal erstellt und zerstört, wenn die durch die-Eigenschaft angegebene Methode <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> aufgerufen wird. Sie können das <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> -Ereignis und das- <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> Ereignis behandeln, um mit dem Geschäftsobjekt zu arbeiten, bevor die durch die-Eigenschaft angegebene Methode <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> aufgerufen wird. Sie können auch das- <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> Ereignis behandeln, das ausgelöst wird, nachdem die durch die- <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> Eigenschaft angegebene Methode aufgerufen wird. Wenn das Geschäftsobjekt die- <xref:System.IDisposable> Schnittstelle implementiert, wird die- <xref:System.IDisposable.Dispose%2A> Methode aufgerufen, bevor das-Objekt zerstört wird. Wenn die-Methode `static` ( `Shared` in Visual Basic) ist, wird das Geschäftsobjekt nie erstellt, und Sie können <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> die <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> Ereignisse, und nicht verarbeiten <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> .

## <a name="parameter-merging"></a>Parameter Zusammenführung
 Der Auflistung werden die Parameter aus den folgenden Quellen hinzugefügt <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> :

-   Deklarativ aus dem `SelectParameters` Element.

-   Programm gesteuert über die- `Selecting` Methode.

 Zuerst werden die Parameter hinzugefügt, die im- `SelectParameters` Element aufgelistet sind. Zweitens werden Parameter im-Ereignis Programm gesteuert hinzugefügt und entfernt <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> , was vor dem Ausführen der- <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Methode auftritt. Die-Methode wird nach der Zusammenführung der Parameter aufgelöst. Die Methoden Auflösung wird im nächsten Abschnitt erläutert.

> [!IMPORTANT]
>  Sie sollten jeden Parameterwert validieren, den Sie vom Client erhalten. Die Runtime ersetzt einfach den Parameterwert in der- <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> Eigenschaft.

## <a name="method-resolution"></a>Methoden Auflösung
 Wenn die- <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Methode aufgerufen wird, werden die Datenfelder aus dem Daten gebundenen Steuerelement, die Parameter, die deklarativ im-Element erstellt wurden `SelectParameters` , und die Parameter, die im-Ereignishandler hinzugefügt wurden, <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> zusammengeführt. (Weitere Informationen finden Sie im vorherigen Abschnitt.) Das- <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement versucht dann, eine aufzurufende Methode zu finden. Zuerst sucht Sie nach einer oder mehreren Methoden mit dem Namen, der in der-Eigenschaft angegeben ist <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> . Wenn keine Entsprechung gefunden wird, <xref:System.InvalidOperationException> wird eine Ausnahme ausgelöst. Wenn eine Übereinstimmung gefunden wird, sucht Sie nach übereinstimmenden Parameternamen. Angenommen, ein Typ, der von der-Eigenschaft angegeben wird, <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> verfügt über zwei Methoden mit dem Namen `SelectARecord` . Eine `SelectARecord` verfügt über einen Parameter, `ID` , und der andere `SelectARecord` verfügt über zwei Parameter: `Name` und `Number` . Wenn die Auflistung <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> nur einen Parameter mit dem Namen aufweist `ID` , wird die- `SelectARecord` Methode mit nur dem- `ID` Parameter aufgerufen. Der Typ des Parameters wird beim Auflösen der Methoden nicht geprüft. Die Reihenfolge der Parameter spielt keine Rolle.

 Wenn die- <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> Eigenschaft festgelegt ist, wird die-Methode auf andere Weise aufgelöst. Der <xref:System.Web.UI.WebControls.ObjectDataSource> sucht nach einer Methode mit dem Namen, der in der- <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> Eigenschaft angegeben ist, die einen Parameter des Typs annimmt, der in der-Eigenschaft angegeben ist <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> . In diesem Fall spielt der Name des Parameters keine Rolle.



## Examples
 Im folgenden Codebeispiel wird veranschaulicht, wie ein <xref:System.Web.UI.WebControls.GridView> Steuerelement mithilfe eines- <xref:System.Web.UI.WebControls.ObjectDataSource> Steuer Elements auf einer Web Forms Seite Daten anzeigen kann. Der <xref:System.Web.UI.WebControls.ObjectDataSource> identifiziert einen teilweise oder voll qualifizierten Klassennamen mit seiner <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> -Eigenschaft und einer-Methode, die aufgerufen wird, um Daten mit der- <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> Eigenschaft abzurufen. Zur Laufzeit wird das-Objekt erstellt, und die-Methode wird mithilfe von Reflektion aufgerufen. Das <xref:System.Web.UI.WebControls.GridView> -Steuerelement listet die-Auflistung auf, die <xref:System.Collections.IEnumerable> von der-Methode zurückgegeben wird, die von der <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> -Eigenschaft angegeben wird, und zeigt die Daten an.

 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/objds1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/objds1vb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=214011">Verwenden des Entity Framework und des ObjectDataSource-Steuer Elements</related>
      </Docs>
    </Member>
    <Member MemberName="SelectParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection SelectParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection SelectParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ SelectParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.MergableProperty(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.MergableProperty(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Auflistung mit den Parametern ab, die von der mit der <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />-Eigenschaft angegebenen Methode verwendet werden.</summary>
        <value>Eine Auflistung mit den Parametern, die von der mit der <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />-Eigenschaft angegebenen Methode verwendet werden.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die- <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> Eigenschaft ruft die- <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A> Eigenschaft des-Objekts ab <xref:System.Web.UI.WebControls.ObjectDataSourceView> , das dem-Steuerelement zugeordnet ist <xref:System.Web.UI.WebControls.ObjectDataSource> .

 Sie fügen Parameter der Auflistung <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> deklarativ hinzu, indem Sie das- `SelectParameters` Element oder Programm gesteuert im-Handler für das- <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> Ereignis verwenden. Zur Laufzeit werden die im-Element aufgelisteten Parameter `SelectParameters` zuerst der-Auflistung hinzugefügt. Parameter in der Auflistung werden dann vom Handler für das-Ereignis hinzugefügt oder entfernt <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> . Das- <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> Ereignis wird ausgelöst, bevor die- <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Methode ausgeführt wird.

 Bevor die- <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Methode ausgeführt wird, müssen die Namen und Typen der Parameter, die in der Auflistung enthalten sind, <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> mit der Signatur der Methode, die von der-Eigenschaft angegeben wird, identisch sein <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> . Wenn z. b. eine Select-Methode mit `GetEmployeesByStateAndAge` dem Namen a `string` und eine ganze Zahl als Parameter annimmt, muss die Auflistung <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> zwei Parameter enthalten. Der erste Parameter muss in eine Zeichenfolge aufgelöst werden, und der zweite Parameter muss in eine ganze Zahl aufgelöst werden. Beide Parameter können im-Element im Markup angegeben werden `SelectParameters` . Alternativ können Sie auch im-Ereignishandler hinzugefügt werden <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> , oder es kann ein Parameter im Markup hinzugefügt werden, und der andere kann Programm gesteuert hinzugefügt werden.

 Weitere Informationen finden Sie unter [Verwenden von Parametern mit dem ObjectDataSource-Steuer](https://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4) Element und der- <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod> Eigenschaft.

> [!IMPORTANT]
>  Vergewissern Sie sich im Code für den <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> Ereignishandler oder in der durch die-Eigenschaft angegebenen Methode, <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> dass Sie jeden Parameterwert validieren, der vom Client empfangen wird.



## Examples
 Im folgenden Codebeispiel wird veranschaulicht, wie ein einzelner Datensatz mit einem <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement abgerufen und in einem-Steuerelement angezeigt wird <xref:System.Web.UI.WebControls.DetailsView> . Das- <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement ruft einen bestimmten Mitarbeiterdaten Satz durch Aufrufen der- `GetEmployee` Methode der-Klasse ab `EmployeeLogic` . Die- `GetEmployee` Methode erfordert einen Employee ID-Parameter. Das- <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement verwendet ein- `QueryStringParameter` Element im Markup, um ein <xref:System.Web.UI.WebControls.QueryStringParameter> -Objekt zu erstellen, das den Wert eines angegebenen Abfrage Zeichenfolgen-Parameters aus der URL abruft und an die- `GetEmployee` Methode übergibt.

 Andere Parameter Klassen können verwendet werden, um Werte aus anderen Quellen abzurufen, z. b. Steuerelement Eigenschaften, Formularfelder, Cookies, ASP.net-Profildaten oder Sitzungszustand. Sie können auch ein Parameter Objekt verwenden, das im Markup definiert ist, um einen hart codierten Wert an die Select-Methode zu übergeben. Weitere Informationen zu verfügbaren Parameter Klassen finden [Sie unter Verwenden von Parametern mit Datenquellen-Steuerelementen zum Filtern](https://docs.microsoft.com/previous-versions/aspnet/xt50s8kz(v=vs.100)).

 Um dieses Beispiel ausführen zu können, benötigen Sie Folgendes:

-   Eine Website mit einer Verbindungs Zeichenfolge `NorthwindConnection` mit dem Namen, die eine Verbindung mit der Northwind Traders-Datenbank herstellt. Weitere Informationen finden Sie in der <xref:System.Web.UI.WebControls.ObjectDataSource> Übersicht über die-Klasse.

-   Die `EmployeeLogic` Klasse, die als eines der Codebeispiele für die <xref:System.Web.UI.WebControls.ObjectDataSource> Klassen Übersicht angezeigt wird. Die Klassendatei muss sich im Ordner App_Code befinden.

-   Der Beispielcode kann als ASPX-Seite ausgeführt werden. Wenn Sie die Seite ohne einen Abfrage Zeichen folgen Parameter anfordern, wird eine Fehlermeldung angezeigt. Wenn Sie die Seite mithilfe einer Abfrage Zeichenfolge, z. b. `?empid=1` nach dem Namen der ASPX-Datei, anfordern, werden die Details für den angeforderten Mitarbeiter angezeigt.

 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_3/CS/objds3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_3/VB/objds3vb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="SortParameterName">
      <MemberSignature Language="C#" Value="public string SortParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SortParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.SortParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property SortParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SortParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SortParameterName : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.SortParameterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen des Geschäftsobjekts ab, mit dem der <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />-Parameter einen Sortierausdruck für die Unterstützung der Datenquellensortierung angegeben hat, oder legt diesen fest.</summary>
        <value>Der Name des Methodenparameters, mit dem der Parameter zum Sortieren der Daten angegeben wird. Der Standardwert ist eine leere Zeichenfolge.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die- <xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A> Eigenschaft wird zur Unterstützung der Datenquellen Sortierung verwendet. Wenn eine <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A> Eigenschaft für das <xref:System.Web.UI.DataSourceSelectArguments> -Objekt festgelegt und an die-Methode übergeben wird <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> , <xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A> identifiziert der Wert den Parameternamen der <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> Geschäftsobjekt Methode entsprechend der Sortierung der Daten.

 Wenn <xref:System.Web.UI.WebControls.ObjectDataSource> einem Daten gebundenen Steuerelement zugeordnet ist, werden die Werte, die an diesen Parameter übergeben werden, in Form von durch Trennzeichen getrennten Feldwerten, gefolgt von oder, übernommen `"ASC"` `"DESC"` . Der Wert für eine aufsteigende Sortierung ist beispielsweise `Name` `"Name ASC"` .

 Die- <xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A> Eigenschaft delegiert an die- <xref:System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName%2A> Eigenschaft des- <xref:System.Web.UI.WebControls.ObjectDataSourceView> Objekts, das dem-Steuerelement zugeordnet ist <xref:System.Web.UI.WebControls.ObjectDataSource> .



## Examples
 Dieser Abschnitt enthält zwei Codebeispiele. Im ersten Codebeispiel wird veranschaulicht, wie ein Typ implementiert wird, der das Sortieren unterstützt. Im zweiten Codebeispiel wird die Implementierung eines Sortier Ausdrucks veranschaulicht.

 Im folgenden Codebeispiel wird veranschaulicht, wie ein Typ implementiert wird, der das Sortieren unterstützt. Der `SelectMethod` der- `SortingData` Klasse übernimmt den-Parameter `sortExpression` . Die Zeichenfolge, die an das-Objekt übermittelt wird, `SelectMethod` wird für die- <xref:System.Data.DataView.Sort%2A> Eigenschaft des von <xref:System.Data.DataView> zurückgegebenen-Objekts verwendet `SelectMethod` .

 [!code-csharp[ObjectDataSourceSorting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ObjectDataSourceSorting/CS/SortingData.cs#1)]
 [!code-vb[ObjectDataSourceSorting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ObjectDataSourceSorting/VB/SortingData.vb#1)]

 Im folgenden Codebeispiel wird die Implementierung eines Sortier Ausdrucks veranschaulicht. Der Code auf der Webseite erstellt eine Instanz des Steuer Elements <xref:System.Web.UI.WebControls.ObjectDataSource> . Die <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> -Eigenschaft ist auf festgelegt, `SortingData` und die- <xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A> Eigenschaft ist auf festgelegt `sortExpression` . Die- <xref:System.Web.UI.WebControls.GridView.AllowSorting%2A> Eigenschaft des- <xref:System.Web.UI.WebControls.GridView> Steuer Elements ist auf festgelegt `true` . Wenn der Benutzer auf die **Sortier** Schaltfläche klickt, wird der Feldname `Name` oder `Number` `SelectMethod` im Sortierparameter an übergeben.

 [!code-aspx-csharp[ObjectDataSourceSorting#2](~/samples/snippets/csharp/VS_Snippets_WebNet/ObjectDataSourceSorting/CS/SortingDataExample.aspx#2)]
 [!code-aspx-vb[ObjectDataSourceSorting#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ObjectDataSourceSorting/VB/SortingDataExampleVB.aspx#2)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanSort" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="SqlCacheDependency">
      <MemberSignature Language="C#" Value="public virtual string SqlCacheDependency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SqlCacheDependency" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SqlCacheDependency As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SqlCacheDependency { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SqlCacheDependency : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine durch Semikolons getrennte Zeichenfolge ab, die die für die Microsoft SQL Server-Cacheabhängigkeit zu verwendenden Datenbanken und Tabellen angibt, oder legt diese fest.</summary>
        <value>Eine Zeichenfolge, die die für die SQL Server-Cacheabhängigkeit zu verwendenden Datenbanken und Tabellen angibt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Das- <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement unterstützt eine optionale Ablauf Richtlinie, die auf dem- <xref:System.Web.Caching.SqlCacheDependency> Objekt für den Daten Cache basiert (der Dienst muss für den Datenbankserver konfiguriert werden).

 SQL Server unterstützt zwei Mechanismen für die Cache Invalidierung: Abruf und Benachrichtigung. Jeder Mechanismus hat eine andere Syntax für das- <xref:System.Web.Caching.SqlCacheDependency> Objekt.

 Der <xref:System.Web.UI.WebControls.ObjectDataSource> unterstützt nur Abruf Vorgänge. Die <xref:System.Web.Caching.SqlCacheDependency> Zeichenfolge wird verwendet, um ein- <xref:System.Data.SqlClient.SqlDependency> Objekt zu erstellen, das an den-Konstruktor übergeben wird, <xref:System.Data.Common.DbCommand> bevor die- <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Methode ausgeführt wird. Die <xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A> Zeichenfolge identifiziert Datenbanken und Tabellen entsprechend dem Format, das von der `@ Page` Direktive verwendet wird, wobei der erste Teil der Zeichenfolge eine Verbindungs Zeichenfolge zu einer SQL Server Datenbank ist, gefolgt von einem Doppelpunkt Trennzeichen und schließlich dem Namen der Datenbanktabelle (z `"connectionstring1:table1"` . b.). Wenn die <xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A> Eigenschaft von mehr als einer Tabelle abhängt, werden die Verbindungs Zeichenfolge-und Tabellennamen Paare durch Semikolons (z `"connectionstring1:table1";connectionstring2:table2"` . b.) getrennt.

 Um Benachrichtigungen zu unterstützen, müssen Sie die Cache Logik in die Implementierung der <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> -Eigenschaft schreiben und die Konstruktion des- <xref:System.Web.Caching.SqlCacheDependency> Objekts im Code verarbeiten.



## Examples
 Dieser Abschnitt enthält zwei Codebeispiele. Im ersten Codebeispiel wird veranschaulicht, wie eine SQL Server Cache Abhängigkeit erstellt und die-Eigenschaft eines-Objekts festgelegt wird <xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A> <xref:System.Web.UI.WebControls.ObjectDataSource> . Im zweiten Codebeispiel wird veranschaulicht, wie eine Wrapper Methode implementiert wird, die ein-Objekt zurückgibt, um das zwischen <xref:System.Data.DataSet> Speichern und Filtern mit einem Objekt zu ermöglichen <xref:System.Web.UI.WebControls.ObjectDataSource> .

 Im folgenden Codebeispiel wird veranschaulicht, wie eine SQL Server Cache Abhängigkeit erstellt und die-Eigenschaft eines-Steuer Elements festgelegt wird <xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A> <xref:System.Web.UI.WebControls.ObjectDataSource> . In diesem Beispiel wird die Datenbank alle 120 Sekunden abgerufen. Wenn sich die Daten in der Tabelle Northwind Traders Employees während dieser Zeit ändern, sind alle Daten, die vom Steuerelement zwischengespeichert <xref:System.Web.UI.WebControls.ObjectDataSource> und vom Steuerelement angezeigt werden, <xref:System.Web.UI.WebControls.GridView> abgelaufen, und bei der nächsten Anforderung für die Seite wird ein neuer Datensatz abgerufen.

 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_7#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_7/CS/objds7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_7#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_7/VB/objds7vb.aspx#1)]

 Im folgenden Codebeispiel wird die Implementierung einer Wrapper Methode veranschaulicht, die ein-Objekt zurückgibt, um das zwischen <xref:System.Data.DataSet> Speichern und Filtern mit einem-Steuerelement zu ermöglichen <xref:System.Web.UI.WebControls.ObjectDataSource> . In der Basis Implementierung der- `EmployeeLogic` Klasse gibt die- `GetAllEmployees` Methode ein- <xref:System.Collections.ArrayList> Objekt zurück. Anstatt das-Objekt vollständig zu Refactoring, damit <xref:System.Web.UI.WebControls.ObjectDataSource> es mit dem auf einer Web Forms Seite funktioniert, wird eine Wrapper Methode namens `GetAllEmployeesAsDataSet` hinzugefügt, die eine Gruppe von `NorthwindEmployee` Daten als zurückgibt <xref:System.Data.DataSet> .

 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_5#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_5/CS/northwindemployee5.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_5#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_5/VB/northwindemployee5.vb#2)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.SqlCacheDependency" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="StartRowIndexParameterName">
      <MemberSignature Language="C#" Value="public string StartRowIndexParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StartRowIndexParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property StartRowIndexParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StartRowIndexParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StartRowIndexParameterName : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("startRowIndex")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("startRowIndex")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen des Parameters der Datenabrufmethode ab, mit dem der Wert des Bezeichners des ersten Datensatzes angegeben wird, der für die Unterstützung des Datenquellen-Paging abgerufen wird, oder legt diesen fest.</summary>
        <value>Der Name des Geschäftsobjekt-Methodenparameters, mit dem der erste abzurufende Datensatz angegeben wird. Der Parameter muss einen Ganzzahlwert zurückgeben. Der Standardwert ist <c>"StartRowIndex"</c>.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die- <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> Eigenschaft wird zur Unterstützung von Datenquellen Paging verwendet. Informationen dazu, wie Paging vom-Steuerelement unterstützt wird <xref:System.Web.UI.WebControls.ObjectDataSource> , finden Sie unter <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> .

 Die- <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> Eigenschaft delegiert an die- <xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName%2A> Eigenschaft des- <xref:System.Web.UI.WebControls.ObjectDataSourceView> Objekts, das dem-Steuerelement zugeordnet ist <xref:System.Web.UI.WebControls.ObjectDataSource> .



## Examples
 Die folgenden drei Beispiele zeigen eine Webseite, eine Code-Behind-Seiten Klasse und eine Datenzugriffs Klasse, mit der der Benutzer die Anzahl der Datensätze auswählen kann, die auf der Seite angezeigt werden.

 Die Webseite enthält ein- <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> , dessen-Eigenschaft auf festgelegt ist `true` . Die- <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> Eigenschaft wird auf den Namen einer Methode festgelegt, die die Gesamtanzahl der Datensätze in der Abfrage zurückgibt. Die <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> -Eigenschaft und die- <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> Eigenschaft werden auf die Namen der Parameter festgelegt, die in der Select-Methode verwendet werden. Die Seite enthält auch ein- <xref:System.Web.UI.WebControls.DropDownList> Steuerelement.

 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx#1)]

 Das zweite Beispiel zeigt einen Handler für das- <xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged?displayProperty=nameWithType> Ereignis des- <xref:System.Web.UI.WebControls.DropDownList> Steuer Elements. Der Code im-Handler legt die <xref:System.Web.UI.WebControls.GridView.PageSize%2A> -Eigenschaft auf die Benutzer Auswahl fest.

 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx.vb#2)]

 Das dritte Beispiel zeigt die Datenzugriffs Klasse, mit der Daten aus der Customers-Tabelle abgerufen werden. Sie enthält eine Methode mit dem Namen `GetSubsetOfEmployees` , die der- <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> Eigenschaft des-Steuer Elements zugewiesen wird <xref:System.Web.UI.WebControls.ObjectDataSource> . Das Beispiel enthält auch eine Methode mit dem Namen `GetEmployeeCount` , die der- <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> Eigenschaft des-Steuer Elements zugewiesen wird <xref:System.Web.UI.WebControls.ObjectDataSource> . Die-Klasse verwendet LINQ zum Abfragen der Customers-Tabelle. Für das Beispiel ist eine LINQ to SQL Klasse erforderlich, die die Northwind-Datenbank und die Customers-Tabelle darstellt. Weitere Informationen finden Sie unter Vorgehens [Weise: Erstellen von LINQ to SQL Klassen in einem Webprojekt](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).

 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/App_Code/CustomerLogic.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/App_Code/CustomerLogic.vb#3)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanPage" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="objectDataSource.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Verfolgt die am Ansichtszustand des <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />-Steuerelements vorgenommenen Änderungen und speichert diese im <see cref="T:System.Web.UI.StateBag" />-Objekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die- <xref:System.Web.UI.WebControls.ObjectDataSource.TrackViewState%2A> Methode wird überschrieben, um den Startpunkt zu markieren, um die Nachverfolgung und Speicherung von Änderungen am-Steuerelement als Teil des Ansichts Zustands für das-Objekt zu starten.

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IStateManager.TrackViewState" />
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public string TypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TypeName : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.TypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der vom <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />-Objekt dargestellten Klasse ab, oder legt diesen fest.</summary>
        <value>Ein teil- oder vollqualifizierter Klassenname, der den Objekttyp angibt, der von der <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> dargestellt wird. Der Standardwert ist eine leere Zeichenfolge ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Zum Erstellen einer Instanz des-Objekts, an das das- <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement gebunden wird, verwendet das-Steuerelement Reflektion, um den Typ zu laden, der durch den Typnamen zur Laufzeit identifiziert wird. Daher kann der Wert der- <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> Eigenschaft ein teilweise qualifizierter Typ für Code sein, der sich im bin-oder App_Code-Verzeichnis befindet, oder ein voll qualifizierter Typname für Code, der im globalen Assemblycache registriert ist. Wenn Sie den globalen Assemblycache verwenden, müssen Sie den entsprechenden Verweis auf den- `assemblies` Abschnitt der Machine.config-oder Web.config-Datei hinzufügen.

 Der Typ muss über einen Parameter losen Konstruktor verfügen, es sei denn, Sie behandeln das <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> Ereignis, um selbst eine Instanz davon zu erstellen. Eine Instanz des-Typs wird für jeden aufzurufenden <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> -, <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> -,-und- <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> Methoden erstellt, wenn die Methoden des Typs Member-Methoden sind. Eine-Instanz wird nicht erstellt, wenn es sich bei den Methoden um `static` ( `Shared` in Visual Basic) handelt. Wenn der Typ die- <xref:System.IDisposable> Schnittstelle implementiert, wird die- <xref:System.IDisposable.Dispose%2A> Methode aufgerufen, bevor das-Objekt zerstört wird.



## Examples
 Im folgenden Codebeispiel wird veranschaulicht, wie ein- <xref:System.Web.UI.WebControls.GridView> Steuerelement Daten mithilfe eines- <xref:System.Web.UI.WebControls.ObjectDataSource> Steuer Elements auf einer Web Forms Seite anzeigen kann. Der <xref:System.Web.UI.WebControls.ObjectDataSource> identifiziert einen teilweise oder voll qualifizierten Klassennamen mit seiner <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> -Eigenschaft und einer-Methode, die aufgerufen wird, um Daten mit der- <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> Eigenschaft abzurufen. Zur Laufzeit wird das-Objekt erstellt, und die-Methode wird mithilfe von Reflektion aufgerufen. Das <xref:System.Web.UI.WebControls.GridView> -Steuerelement listet die <xref:System.Collections.IEnumerable> -Auflistung auf, die von der <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> -Eigenschaft zurückgegeben wird, und zeigt die Daten an.

 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/objds1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/objds1vb.aspx#1)]

 Das folgende Beispiel zeigt die-Klasse, <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> auf die sich der-Eigenschafts Wert bezieht.

 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/northwindemployee1.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/northwindemployee1.vb#2)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.Update" />
      <MemberSignature Language="VB.NET" Value="Public Function Update () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update();" />
      <MemberSignature Language="F#" Value="member this.Update : unit -&gt; int" Usage="objectDataSource.Update " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Führt einen Aktualisierungsvorgang durch Aufrufen der von der <see cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" />-Eigenschaft angegebenen Methode mit sämtlichen Parametern in der <see cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />-Auflistung aus.</summary>
        <returns>Ein Wert, der die Anzahl der im zugrunde liegenden Datenspeicher aktualisierten Zeilen darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Es wird davon ausgegangen, dass das Geschäftsobjekt einen Datensatz zu einem Zeitpunkt und nicht in einem Batch aktualisiert.

 Bevor der- <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> Vorgang ausgeführt wird, <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating%2A> wird die-Methode aufgerufen, um das-Ereignis zu erhöhen <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> . Sie können das <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> -Ereignis behandeln, um die Werte der Parameter zu überprüfen und vor einem Vorgang eine Vorverarbeitung auszuführen <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> . Zum Ausführen eines Aktualisierungs Vorgangs verwendet das- <xref:System.Web.UI.WebControls.ObjectDataSourceView> Objekt Reflektion, um eine Instanz des-Objekts zu erstellen, das durch die-Eigenschaft identifiziert wird <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> . Anschließend wird die-Methode aufgerufen, die durch die-Eigenschaft identifiziert wird <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> , wobei alle zugehörigen Eigenschaften verwendet werden <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> . Nachdem der <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> Vorgang abgeschlossen wurde, <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated%2A> wird die-Methode aufgerufen, um das-Ereignis zu erhöhen <xref:System.Web.UI.WebControls.ObjectDataSource.Updated> . Sie können das <xref:System.Web.UI.WebControls.ObjectDataSource.Updated> -Ereignis behandeln, um alle Rückgabewerte, Ausgabeparameter und Ausnahmen zu überprüfen und Nachbearbeitung auszuführen.

 Die- <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> Methode delegiert an die- <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> Methode des <xref:System.Web.UI.WebControls.ObjectDataSourceView> , das dem-Steuerelement zugeordnet ist <xref:System.Web.UI.WebControls.ObjectDataSource> .

 Weitere Informationen zum Zusammenführen von Parametern, zur Objekt Lebensdauer und zur Methoden Auflösung finden Sie unter <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> .

> [!IMPORTANT]
>  Sie sollten jeden Parameterwert validieren, den Sie vom Client erhalten. Die Runtime ersetzt einfach den Parameterwert in der- <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> Eigenschaft.

## <a name="data-bound-controls"></a>Datengebundene Steuerelemente
 Wenn das <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement einem Daten gebundenen Steuerelement zugeordnet ist, z. b <xref:System.Web.UI.WebControls.GridView> . dem-Steuerelement, ist es nicht erforderlich, die- <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> Methode aus dem Seitencode aufzurufen. <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A>Stattdessen wird die-Methode direkt durch das Daten gebundene Steuerelement aufgerufen.



## Examples
 Dieser Abschnitt enthält zwei Codebeispiele. Im ersten Codebeispiel wird veranschaulicht, wie ein <xref:System.Web.UI.WebControls.DropDownList> Steuerelement, Steuer <xref:System.Web.UI.WebControls.TextBox> Elemente und mehrere <xref:System.Web.UI.WebControls.ObjectDataSource> Objekte zum Aktualisieren von Daten verwendet werden. Das zweite Codebeispiel zeigt die- `EmployeeLogic` Klasse, die im ersten Codebeispiel verwendet wird.

 Im folgenden Codebeispiel wird veranschaulicht, wie ein <xref:System.Web.UI.WebControls.DropDownList> Steuerelement, Steuer <xref:System.Web.UI.WebControls.TextBox> Elemente und mehrere Steuer <xref:System.Web.UI.WebControls.ObjectDataSource> Elemente zum Aktualisieren von Daten verwendet werden. Das <xref:System.Web.UI.WebControls.DropDownList> zeigt den Namen eines Northwind-Mitarbeiters an, während die Steuer <xref:System.Web.UI.WebControls.TextBox> Elemente verwendet werden, um Adressinformationen einzugeben und zu aktualisieren. Da die Auflistung <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> ein- <xref:System.Web.UI.WebControls.ControlParameter> Objekt enthält, das an den ausgewählten Wert von gebunden ist <xref:System.Web.UI.WebControls.DropDownList> , wird die Schaltfläche, die den Vorgang auslöst, <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> erst aktiviert, nachdem ein Mitarbeiter ausgewählt wurde.

> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).

 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_12#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/CS/objds12cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_12#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/VB/objds12vb.aspx#1)]

 Das folgende Codebeispiel zeigt die- `EmployeeLogic` Klasse, die im vorangehenden Codebeispiel verwendet wird.

 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_12#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/CS/northwindemployee12.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_12#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/VB/northwindemployee12.vb#2)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=214011">Verwenden des Entity Framework und des ObjectDataSource-Steuer Elements</related>
      </Docs>
    </Member>
    <Member MemberName="Updated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Updated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Updated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Updated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updated As ObjectDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceStatusEventHandler ^ Updated;" />
      <MemberSignature Language="F#" Value="member this.Updated : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " Usage="member this.Updated : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn ein <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />-Vorgang abgeschlossen wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Behandeln Sie das- <xref:System.Web.UI.WebControls.ObjectDataSource.Updated> Ereignis, um die Werte eines Rückgabewerts oder der Ausgabeparameter zu überprüfen, oder, um zu bestimmen, ob eine Ausnahme ausgelöst wurde, nachdem ein <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> Vorgang abgeschlossen wurde. Die Eigenschaften Rückgabewert, Ausgabeparameter und Ausnahmebehandlung sind für das-Objekt verfügbar, <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> das dem Ereignis zugeordnet ist.

 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).

 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Updating" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=214011">Verwenden des Entity Framework und des ObjectDataSource-Steuer Elements</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateMethod">
      <MemberSignature Language="C#" Value="public string UpdateMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdateMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UpdateMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateMethod : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Methode oder der Funktion ab, die vom <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />-Steuerelement zum Aktualisieren von Daten aufgerufen wird, oder legt diesen fest.</summary>
        <value>Eine Zeichenfolge, die den Namen der Methode oder der Funktion darstellt, mit deren Hilfe die <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> Daten aktualisiert. Der Standardwert ist eine leere Zeichenfolge.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Das- <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement geht davon aus, dass die von der-Eigenschaft identifizierte Methode <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> jeweils einzeln und nicht in einem Batch ausführt.

 Die- <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> Eigenschaft delegiert an die- <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> Eigenschaft des- <xref:System.Web.UI.WebControls.ObjectDataSourceView> Objekts, das dem-Steuerelement zugeordnet ist <xref:System.Web.UI.WebControls.ObjectDataSource> .

 Stellen Sie sicher, dass die für das-Steuerelement in der-Auflistung konfigurierten Parameternamen <xref:System.Web.UI.WebControls.ObjectDataSource> <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> mit den Spaltennamen, die von der Select-Methode zurückgegeben werden

## <a name="object-lifetime"></a>Lebensdauer eines Objekts
 Die Methode, die von der-Eigenschaft identifiziert wird, <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> kann eine Instanzmethode oder eine `static` ( `Shared` in Visual Basic)-Methode sein. Wenn es sich um eine Instanzmethode handelt, wird das Geschäftsobjekt jedes Mal erstellt und zerstört, wenn die durch die-Eigenschaft angegebene Methode <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> aufgerufen wird. Sie können das <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> -Ereignis und das- <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> Ereignis behandeln, um mit dem Geschäftsobjekt zu arbeiten, bevor die durch die-Eigenschaft angegebene Methode <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> aufgerufen wird. Sie können auch das- <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> Ereignis behandeln, das ausgelöst wird, nachdem die durch die- <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> Eigenschaft angegebene Methode aufgerufen wird. Wenn das Geschäftsobjekt die- <xref:System.IDisposable> Schnittstelle implementiert, wird die- <xref:System.IDisposable.Dispose%2A> Methode aufgerufen, bevor das-Objekt zerstört wird. Wenn die-Methode `static` ( `Shared` in Visual Basic) ist, wird das Geschäftsobjekt nie erstellt, und Sie können <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> die <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> Ereignisse, und nicht verarbeiten <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> .

## <a name="parameter-merging"></a>Parameter Zusammenführung
 Der Auflistung werden die Parameter <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> aus drei Quellen hinzugefügt:

-   Aus dem Daten gebundenen Steuerelement zur Laufzeit.

-   Aus dem- `UpdateParameters` Element, deklarativ.

-   Programm gesteuert aus dem- <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> Ereignishandler.

 Zuerst werden alle Parameter, die von Daten gebundenen Steuerelementen generiert werden, der-Auflistung hinzugefügt <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> . Wenn das Steuerelement z. b. <xref:System.Web.UI.WebControls.ObjectDataSource> an ein Steuerelement gebunden ist, <xref:System.Web.UI.WebControls.GridView> das über die Spalten `Name` und verfügt `Number` , werden die Parameter für `Name` und `Number` der Auflistung hinzugefügt. Der genaue Name des Parameters hängt von der <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> Eigenschaft ab. Der Datentyp dieser Parameter ist `string` . Im nächsten Schritt werden die Parameter hinzugefügt, die im-Element aufgelistet sind `UpdateParameters` . Wenn ein Parameter im- `UpdateParameters` Element mit dem gleichen Namen wie ein Parameter gefunden wird, der bereits in der Auflistung <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> vorhanden ist, wird der vorhandene Parameter so geändert, dass er mit dem im-Element angegebenen Parameter übereinstimmt `UpdateParameters` . In der Regel wird dies verwendet, um den Typ der Daten im-Parameter zu ändern. Schließlich können Sie Parameter im-Ereignis Programm gesteuert hinzufügen und entfernen <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> , was vor dem Ausführen der- <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> Methode auftritt. Die-Methode wird nach der Zusammenführung der Parameter aufgelöst. Die Methoden Auflösung wird im nächsten Abschnitt erläutert.

> [!IMPORTANT]
>  Sie sollten jeden Parameterwert validieren, den Sie vom Client erhalten. Die Runtime ersetzt einfach den Parameterwert in der- <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> Eigenschaft.

## <a name="method-resolution"></a>Methoden Auflösung
 Wenn die- <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> Methode aufgerufen wird, werden die Datenfelder aus dem Daten gebundenen Steuerelement, die Parameter, die deklarativ im-Element erstellt wurden `UpdateParameters` , und die Parameter, die im-Ereignishandler hinzugefügt wurden, <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> zusammengeführt. (Weitere Informationen finden Sie im vorherigen Abschnitt.) Das- <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement versucht dann, eine aufzurufende Methode zu finden. Zuerst sucht Sie nach einer oder mehreren Methoden mit dem Namen, der in der-Eigenschaft angegeben ist <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> . Wenn keine Entsprechung gefunden wird, <xref:System.InvalidOperationException> wird eine Ausnahme ausgelöst. Wenn eine Übereinstimmung gefunden wird, sucht Sie nach übereinstimmenden Parameternamen. Angenommen, ein Typ, der von der-Eigenschaft angegeben wird, <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> verfügt über zwei Methoden mit dem Namen `UpdateARecord` . Eine `UpdateARecord` verfügt über einen Parameter, `ID` , und der andere `UpdateARecord` verfügt über zwei Parameter: `Name` und `Number` . Wenn die Auflistung <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> nur einen Parameter mit dem Namen aufweist `ID` , wird die- `UpdateARecord` Methode mit nur dem- `ID` Parameter aufgerufen. Der Typ des Parameters wird beim Auflösen der Methoden nicht geprüft. Die Reihenfolge der Parameter spielt keine Rolle.

 Wenn die- <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> Eigenschaft festgelegt ist, wird die-Methode auf andere Weise aufgelöst. Der <xref:System.Web.UI.WebControls.ObjectDataSource> sucht nach einer Methode mit dem Namen, der in der- <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> Eigenschaft angegeben ist, die einen Parameter des Typs annimmt, der in der-Eigenschaft angegeben ist <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> . In diesem Fall spielt der Name des Parameters keine Rolle.



## Examples
 Die folgenden drei Beispiele zeigen eine Webseite, eine Code-Behind-Seiten Klasse und eine Datenzugriffs Klasse, mit der ein Benutzerdaten Sätze in der Tabelle "Employees" in der Datenbank "Northwind" abrufen und aktualisieren kann.

 Das erste Beispiel zeigt eine Webseite, die zwei <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelemente enthält, ein <xref:System.Web.UI.WebControls.DropDownList> -Steuerelement und ein- <xref:System.Web.UI.WebControls.DetailsView> Steuerelement. Das erste <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement und das- <xref:System.Web.UI.WebControls.DropDownList> Steuerelement werden zum Abrufen und Anzeigen von Mitarbeiter Namen aus der Datenbank verwendet. Das zweite <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement und das- <xref:System.Web.UI.WebControls.DetailsView> Steuerelement werden verwendet, um die Daten aus dem Mitarbeiterdaten Satz abzurufen, anzuzeigen und zu ändern, der vom Benutzer ausgewählt wurde.

 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_18#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_18#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default.aspx#1)]

 Das zweite Beispiel zeigt Handler für das <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> -Ereignis und das- <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> Ereignis. Der- <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> Ereignishandler serialisiert das-Objekt, das Daten enthält, die aus der Employee-Tabelle abgerufen wurden. Das serialisierte Objekt wird im Ansichts Zustand gespeichert. Der <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> Ereignishandler deserialisiert das Objekt im Ansichts Zustand, das die ursprünglichen Daten für den Daten Satz enthält, der aktualisiert wird. Das-Objekt, das die ursprünglichen Daten enthält, wird als Parameter an die Update-Methode übergeben. Die ursprünglichen Daten müssen an die Datenbank übermittelt werden, damit Sie verwendet werden können, um zu überprüfen, ob die Daten von einem anderen Prozess geändert wurden.

 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default.aspx.vb#2)]

 Das dritte Beispiel zeigt die Datenzugriffs Klasse, die mit der Northwind-Datenbank interagiert. Die-Klasse verwendet LINQ zum Abfragen und Aktualisieren der Employees-Tabelle. Das Beispiel erfordert eine LINQ to SQL-Klasse, die die Datenbank Northwind database und Employees darstellt. Weitere Informationen finden Sie unter Vorgehens [Weise: Erstellen von LINQ to SQL Klassen in einem Webprojekt](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).

 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/App_Code/EmployeeLogic.cs#5)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/App_Code/EmployeeLogic.vb#5)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=214011">Verwenden des Entity Framework und des ObjectDataSource-Steuer Elements</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection UpdateParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdateParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ UpdateParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UpdateParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.MergableProperty(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.MergableProperty(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Parameterauflistung mit den Parametern ab, die von der durch die <see cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" />-Eigenschaft angegebenen Methode verwendet werden.</summary>
        <value>Eine <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> mit den Parametern, die von der durch die <see cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" />-Eigenschaft angegebenen Methode verwendet werden.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die Namen und Typen der Parameter, die in der Auflistung enthalten sind, <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> müssen mit den Namen und Typen der Parameter in der <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> Methoden Signatur identisch sein. Die Parameternamen werden von der <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> -Eigenschaft beeinflusst, und die Groß-/Kleinschreibung wird beachtet. Die Parameter in der Auflistung hängen von den Daten im Daten gebundenen Steuerelement, den Parametern, die deklarativ angegeben werden, und den Parametern ab, die Programm gesteuert hinzugefügt werden. Weitere Informationen finden Sie im Abschnitt "Parameter Zusammenführung" in <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> und [Verwenden von Parametern mit dem ObjectDataSource-Steuer](https://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4)Element.

 Die- <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> Eigenschaft ruft die-Eigenschaft ab, die im- <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> Objekt enthalten ist <xref:System.Web.UI.WebControls.ObjectDataSourceView> , das dem-Steuerelement zugeordnet ist <xref:System.Web.UI.WebControls.ObjectDataSource> .

 Weitere Informationen zum Zusammenführen von Parametern, zur Objekt Lebensdauer und zur Methoden Auflösung finden Sie unter <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> .

> [!IMPORTANT]
>  Sie sollten jeden Parameterwert validieren, den Sie vom Client erhalten. Die Runtime ersetzt einfach den Parameterwert in der- <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> Eigenschaft.



## Examples
 Dieser Abschnitt enthält zwei Codebeispiele. Im ersten Codebeispiel wird veranschaulicht, wie ein <xref:System.Web.UI.WebControls.DropDownList> Steuerelement, Steuer <xref:System.Web.UI.WebControls.TextBox> Elemente und mehrere <xref:System.Web.UI.WebControls.ObjectDataSource> Objekte zum Aktualisieren von Daten verwendet werden. Das zweite Codebeispiel zeigt die- `EmployeeLogic` Klasse, die im ersten Codebeispiel verwendet wird.

 Im folgenden Codebeispiel wird veranschaulicht, wie ein <xref:System.Web.UI.WebControls.DropDownList> Steuerelement, Steuer <xref:System.Web.UI.WebControls.TextBox> Elemente und mehrere Steuer <xref:System.Web.UI.WebControls.ObjectDataSource> Elemente zum Aktualisieren von Daten verwendet werden. Das <xref:System.Web.UI.WebControls.DropDownList> zeigt den Namen eines Northwind-Mitarbeiters an, während die Steuer <xref:System.Web.UI.WebControls.TextBox> Elemente verwendet werden, um Adressinformationen einzugeben und zu aktualisieren. Da die-Auflistung <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> eine enthält, die <xref:System.Web.UI.WebControls.ControlParameter> an den ausgewählten Wert von gebunden ist <xref:System.Web.UI.WebControls.DropDownList> , wird die Schaltfläche, die den Vorgang auslöst, <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> erst aktiviert, nachdem ein Mitarbeiter ausgewählt wurde.

> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).

 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_12#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/CS/objds12cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_12#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/VB/objds12vb.aspx#1)]

 Das folgende Codebeispiel zeigt die- `EmployeeLogic` Klasse, die im vorangehenden Codebeispiel verwendet wird.

 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_12#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/CS/northwindemployee12.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_12#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/VB/northwindemployee12.vb#2)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="Updating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Updating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Updating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Updating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updating As ObjectDataSourceMethodEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceMethodEventHandler ^ Updating;" />
      <MemberSignature Language="F#" Value="member this.Updating : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " Usage="member this.Updating : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt vor einem <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />-Vorgang ein.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Behandeln Sie das- <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> Ereignis, um eine zusätzliche Initialisierung durchzuführen, die für Ihre Anwendung spezifisch ist, um die Parameterwerte zu überprüfen oder um die Parameterwerte zu ändern, bevor das- <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement den Aktualisierungs Vorgang ausführt. Die Parameter sind als eine Auflistung verfügbar <xref:System.Collections.IDictionary> , auf die von der-Eigenschaft zugegriffen wird <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> , die durch das-Objekt verfügbar gemacht wird <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> .

 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).



## Examples
 Die folgenden drei Beispiele zeigen eine Webseite, eine Code-Behind-Seiten Klasse und eine Datenzugriffs Klasse, mit der ein Benutzerdaten Sätze in der Tabelle "Employees" in der Datenbank "Northwind" abrufen und aktualisieren kann.

 Das erste Beispiel zeigt eine Webseite, die zwei <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelemente enthält, ein <xref:System.Web.UI.WebControls.DropDownList> -Steuerelement und ein- <xref:System.Web.UI.WebControls.DetailsView> Steuerelement. Das erste <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement und das- <xref:System.Web.UI.WebControls.DropDownList> Steuerelement werden zum Abrufen und Anzeigen von Mitarbeiter Namen aus der Datenbank verwendet. Das zweite <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement und das- <xref:System.Web.UI.WebControls.DetailsView> Steuerelement werden verwendet, um die Daten aus dem Mitarbeiterdaten Satz abzurufen, anzuzeigen und zu ändern, der vom Benutzer ausgewählt wurde.

 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_18#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_18#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default.aspx#1)]

 Das zweite Beispiel zeigt Handler für das <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> -Ereignis und das- <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> Ereignis. Der- <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> Ereignishandler serialisiert das-Objekt, das Daten enthält, die aus der Employee-Tabelle abgerufen wurden. Das serialisierte Objekt wird im Ansichts Zustand gespeichert. Der <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> Ereignishandler deserialisiert das Objekt im Ansichts Zustand, das die ursprünglichen Daten für den Daten Satz enthält, der aktualisiert wird. Das-Objekt, das die ursprünglichen Daten enthält, wird als Parameter an die Update-Methode übergeben. Die ursprünglichen Daten müssen an die Datenbank übermittelt werden, damit Sie verwendet werden können, um zu überprüfen, ob die Daten von einem anderen Prozess geändert wurden.

 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default.aspx.vb#2)]

 Das dritte Beispiel zeigt die Datenzugriffs Klasse, die mit der Northwind-Datenbank interagiert. Die-Klasse verwendet LINQ zum Abfragen und Aktualisieren der Employees-Tabelle. Das Beispiel erfordert eine LINQ to SQL-Klasse, die die Datenbank Northwind database und Employees darstellt. Weitere Informationen finden Sie unter Vorgehens [Weise: Erstellen von LINQ to SQL Klassen in einem Webprojekt](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).

 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/App_Code/EmployeeLogic.cs#5)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/App_Code/EmployeeLogic.vb#5)]

 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Updated" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">Übersicht über das ObjectDataSource-Steuerelement</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">Erstellen eines Quellobjekts für das ObjectDataSource-Steuerelement</related>
      </Docs>
    </Member>
  </Members>
</Type>
