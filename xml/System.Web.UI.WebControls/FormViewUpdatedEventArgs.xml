<Type Name="FormViewUpdatedEventArgs" FullName="System.Web.UI.WebControls.FormViewUpdatedEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4bd71c9b972fd53c7e786c0e9ecdfb35ac466f18" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69391760" /></Metadata><TypeSignature Language="C#" Value="public class FormViewUpdatedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FormViewUpdatedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.FormViewUpdatedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class FormViewUpdatedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class FormViewUpdatedEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type FormViewUpdatedEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt Daten für das <see cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />-Ereignis bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Web.UI.WebControls.FormView> -Steuerelement <xref:System.Web.UI.WebControls.FormView.ItemUpdated> löst das-Ereignis aus, <xref:System.Web.UI.WebControls.FormView> wenn auf eine Aktualisierungs Schaltfläche (eine Schaltfläche, deren `CommandName` -Eigenschaft auf "Update" festgelegt ist) im-Steuerelement geklickt wird Dies ermöglicht es Ihnen, eine Ereignis Behandlungsmethode bereitzustellen, die eine benutzerdefinierte Routine ausführt, z. b. das Überprüfen der Ergebnisse eines Update Vorgangs, wenn dieses Ereignis auftritt.  
  
 Ein <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs> -Objekt wird an die Ereignis Behandlungsmethode übermittelt, mit der Sie die Anzahl der betroffenen Datensätze und ggf. aufgetretenen Ausnahmen ermitteln können. Verwenden Sie die <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows%2A> -Eigenschaft, um die Anzahl der vom Aktualisierungs Vorgang betroffenen Datensätze zu bestimmen. Verwenden Sie <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A> die-Eigenschaft, um zu bestimmen, ob Ausnahmen aufgetreten sind. Sie können auch angeben, ob die Ausnahme in der Ereignis Behandlungsmethode behandelt wurde, indem Sie <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A> die-Eigenschaft festlegen. Wenn Sie auf die ursprünglichen Schlüssel Feldwerte für den aktualisierten Datensatz zugreifen müssen, verwenden Sie <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A> die-Eigenschaft. Auf die ursprünglichen nicht-Schlüssel Feldwerte kann mithilfe der <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues%2A> -Eigenschaft zugegriffen werden. Aktualisierte Werte (die aktualisierte Schlüssel Feldwerte einschließen, wenn Sie dem Benutzer das Bearbeiten von Schlüsselfeldern gestatten) werden über die <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A> -Eigenschaft aufgerufen.  
  
 Standardmäßig wird das <xref:System.Web.UI.WebControls.FormView> -Steuerelement nach einem Aktualisierungs Vorgang <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> in den von der-Eigenschaft angegebenen Modus zurückgegeben. Bei der Behandlung einer Ausnahme, die während des Aktualisierungs Vorgangs aufgetreten ist, <xref:System.Web.UI.WebControls.FormView> können Sie das Steuerelement im Bearbeitungs <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode%2A> Modus belassen `true`, indem Sie die-Eigenschaft auf festlegen.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Eine Liste der anfänglichen Eigenschaftenwerte für eine Instanz der <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs>-Klasse finden Sie im <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.%23ctor%2A>-Konstruktor.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie das <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs> -Objekt verwendet wird, das an die Ereignis Behandlungs <xref:System.Web.UI.WebControls.FormView.ItemUpdated> Methode für das-Ereignis übermittelt wird, um zu bestimmen, ob während eines Update Vorgangs eine Ausnahme aufgetreten ist  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.FormView" />
    <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventHandler" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormViewUpdatedEventArgs (int affectedRows, Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 affectedRows, class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormViewUpdatedEventArgs.#ctor(System.Int32,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (affectedRows As Integer, e As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormViewUpdatedEventArgs(int affectedRows, Exception ^ e);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.FormViewUpdatedEventArgs : int * Exception -&gt; System.Web.UI.WebControls.FormViewUpdatedEventArgs" Usage="new System.Web.UI.WebControls.FormViewUpdatedEventArgs (affectedRows, e)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="affectedRows" Type="System.Int32" />
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="affectedRows">Die Anzahl der vom Aktualisierungsvorgang betroffenen Zeilen.</param>
        <param name="e">Eine <see cref="T:System.Exception" />, die die Ausnahme darstellt, die beim Ausführen eines Aktualisierungsvorgangs ausgelöst wurde. Wenn keine Ausnahme ausgelöst wird, verwenden Sie <see langword="null" /> für diesen Parameter.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.FormViewUpdatedEventArgs" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diesen Konstruktor, um eine neue Instanz der <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs> -Klasse zu initialisieren.  
  
 In der folgenden Tabelle werden anfängliche Eigenschaftswerte für eine Instanz der <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs>-Klasse aufgeführt.  
  
|Eigenschaft|Anfangswert|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows%2A>|Der Wert des `affectedRows`-Parameters.|  
|<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A>|<xref:System.Exception?displayProperty=nameWithType> Das`e` im-Parameter enthaltene-Objekt.|  
|<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A>|Initialisiert mit `false`.|  
|<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode%2A>|Initialisiert mit `false`.|  
  
> [!NOTE]
>  Dieser Konstruktor wird hauptsächlich von Steuerelement Entwicklern verwendet, wenn Ereignisse erhoben werden.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode" />
      </Docs>
    </Member>
    <Member MemberName="AffectedRows">
      <MemberSignature Language="C#" Value="public int AffectedRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AffectedRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AffectedRows As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AffectedRows { int get(); };" />
      <MemberSignature Language="F#" Value="member this.AffectedRows : int" Usage="System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der vom Aktualisierungsvorgang betroffenen Zeilen ab.</summary>
        <value>Die Anzahl der vom Aktualisierungsvorgang betroffenen Zeilen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows%2A> die-Eigenschaft, um die Anzahl der vom Aktualisierungs Vorgang betroffenen Datensätze zu bestimmen. Diese Eigenschaft wird häufig verwendet, um zu überprüfen, ob die richtige Anzahl von Datensätzen in den folgenden Situationen aktualisiert wurde:  
  
-   Vergewissern Sie sich, dass nur ein einzelner Datensatz aktualisiert wurde. Manchmal kann eine nicht ordnungsgemäß geschriebene Update-Anweisung mehrere Datensätze aktualisieren.  
  
-   Überprüfen Sie, ob ein Datensatz aktualisiert wurde, wenn während des Aktualisierungs Vorgangs ein Fehler auftritt, der keine Ausnahme auslöst.  
  
-   Überprüfen Sie <xref:System.Web.UI.WebControls.SqlDataSource> <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> <xref:System.Web.UI.WebControls.ObjectDataSource> ,obeinDatensatzaktualisiertwurde,wenneinDatenquellenSteuerelement,dasdieKonflikterkennungunterstützt(ÜberprüfungdervollständigenParallelität),z.b.dieSteuerelementeund`ConflictOptions.CompareAllValues` . Bei dieser Einstellung wird ein Datensatz, der von einem anderen Benutzer gleichzeitig geändert wurde, möglicherweise nicht aktualisiert.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows%2A> -Eigenschaft verwendet wird, um zu überprüfen, ob ein Datensatz aktualisiert wurde.  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled" />
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Ausnahme (sofern vorhanden) ab, die während des Aktualisierungsvorgangs ausgelöst wurde.</summary>
        <value>Ein <see cref="T:System.Exception" />-Objekt, das die Ausnahme darstellt, die während des Aktualisierungsvorgangs ausgelöst wurde.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A> die-Eigenschaft, um die Ausnahme (sofern vorhanden) zu bestimmen, die während des Aktualisierungs Vorgangs ausgelöst wurde. Wenn keine Ausnahmen ausgelöst wurden, gibt diese Eigenschaft `null` zurück.  
  
> [!NOTE]
>  Wenn eine Ausnahme ausgelöst wurde und Sie die Ausnahme im-Ereignishandler behandeln möchten, achten Sie darauf, dass die <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A> -Eigenschaft `true`auf festgelegt wird. andernfalls <xref:System.Web.UI.WebControls.FormView> wird die Ausnahme vom-Steuerelement erneut ausgelöst.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A> -Eigenschaft verwendet wird, um zu bestimmen, ob während eines Aktualisierungs Vorgangs eine Ausnahme aufgetreten ist.  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled" />
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled" />
      <MemberSignature Language="VB.NET" Value="Public Property ExceptionHandled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExceptionHandled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExceptionHandled : bool with get, set" Usage="System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob während der Behandlung des Aktualisierungsvorgangs im Ereignishandler eine Ausnahme ausgelöst wurde, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn die Ausnahme im Ereignishandler behandelt wurde, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn während des Aktualisierungs Vorgangs eine Ausnahme ausgelöst wird, verwenden <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A> Sie die-Eigenschaft, um anzugeben, ob die Ausnahme im Ereignishandler behandelt wurde. Wenn diese Eigenschaft auf `true`festgelegt ist, gilt die Ausnahme als behandelt und wird <xref:System.Web.UI.WebControls.FormView> vom-Steuerelement nicht erneut ausgelöst. Wenn diese Eigenschaft auf `false`festgelegt ist, wird die Ausnahme erneut ausgelöst. Verwenden Sie die <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A> -Eigenschaft, um zu bestimmen, welche Ausnahme ausgelöst wurde.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A> -Eigenschaft verwendet wird, um anzugeben, dass die Ausnahme im Ereignishandler behandelt wurde.  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception" />
      </Docs>
    </Member>
    <Member MemberName="KeepInEditMode">
      <MemberSignature Language="C#" Value="public bool KeepInEditMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepInEditMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode" />
      <MemberSignature Language="VB.NET" Value="Public Property KeepInEditMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeepInEditMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.KeepInEditMode : bool with get, set" Usage="System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der anzeigt, ob das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement nach einem Aktualisierungsvorgang im Bearbeitungsmodus belassen werden soll, oder legt diesen Wert fest.</summary>
        <value><see langword="true" />, um nach einem Aktualisierungsvorgang im Bearbeitungsmodus zu bleiben; andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Standardmäßig wird das <xref:System.Web.UI.WebControls.FormView> -Steuerelement nach einem Aktualisierungs Vorgang <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> in den von der-Eigenschaft angegebenen Modus zurückgegeben. Verwenden Sie <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode%2A> die-Eigenschaft, um <xref:System.Web.UI.WebControls.FormView> anzugeben, ob das Steuerelement im Bearbeitungsmodus bleiben soll. Wenn Sie das <xref:System.Web.UI.WebControls.FormView> Steuerelement im Bearbeitungsmodus belassen möchten, legen `true`Sie diese Eigenschaft auf fest.  
  
> [!NOTE]
>  Diese Eigenschaft sollte nur verwendet werden, wenn eine Situation auftritt (z. b. eine Ausnahme, die ausgelöst wird), die erfordert, dass sich das Steuerelement anders verhält als in der Regel. Wenn das <xref:System.Web.UI.WebControls.FormView> Steuerelement standardmäßig im Bearbeitungsmodus bleiben muss, legen Sie <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> die-Eigenschaft stattdessen fest.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode%2A> -Eigenschaft verwendet wird <xref:System.Web.UI.WebControls.FormView> , um ein-Steuerelement im Bearbeitungsmodus beizubehalten, wenn eine Ausnahme auftritt.  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DefaultMode" />
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary Keys" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::IOrderedDictionary ^ Keys { System::Collections::Specialized::IOrderedDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Keys : System.Collections.Specialized.IOrderedDictionary" Usage="System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Wörterbuch ab, das die ursprünglichen Name-Wert-Paare von Schlüsselfeldern für den aktualisierten Datensatz enthält.</summary>
        <value>Ein <see cref="T:System.Collections.Specialized.IOrderedDictionary" />, das ein Wörterbuch der ursprünglichen Name-Wert-Paare der Schlüsselfelder für den aktualisierten Datensatz enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A> -Eigenschaft enthält die ursprünglichen Werte der Schlüsselfelder, die in <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> der-Eigenschaft <xref:System.Web.UI.WebControls.FormView> eines-Steuer Elements aufgeführt sind. Verwenden Sie <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A> die-Eigenschaft, um auf die Werte des Schlüssel Felds für einen aktualisierten Datensatz zuzugreifen. Beispielsweise können Sie diese Werte verwenden, um ein Protokoll mit aktualisierten Datensätzen zu speichern.  
  
> [!NOTE]
>  Wenn Sie es dem Benutzer ermöglichen, die Werte der Schlüsselfelder zu aktualisieren, <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> enthält die-Eigenschaft die ursprünglichen Schlüssel Feldwerte. Die aktualisierten Werte werden in der <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> -Eigenschaft gespeichert.  
  
 Die <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A> -Eigenschaft gibt <xref:System.Collections.Specialized.OrderedDictionary> ein Objekt zurück, <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=nameWithType> das die-Schnittstelle implementiert. Das <xref:System.Collections.Specialized.OrderedDictionary> -Objekt <xref:System.Collections.DictionaryEntry?displayProperty=nameWithType> enthält-Objekte, die die Felder des aktualisierten Datensatzes darstellen. Um auf die Feldnamen zuzugreifen, verwenden <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> Sie die- <xref:System.Collections.Specialized.OrderedDictionary> Eigenschaft des-Objekts. Auf ähnliche Weise können Sie auf die Feldwerte zugreifen, <xref:System.Collections.Specialized.OrderedDictionary.Values%2A> indem Sie die-Eigenschaft verwenden.  
  
> [!NOTE]
>  Als Verknüpfung können Sie auch den Indexer des <xref:System.Collections.Specialized.OrderedDictionary> -Objekts verwenden, um direkt auf die Feldwerte zuzugreifen. Datenquellen Steuerelemente, die auf der Feld Reihenfolge <xref:System.Web.UI.WebControls.AccessDataSource>basieren (z. b.), können nur nach Index auf Feldwerte zugreifen.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A> -Eigenschaft verwendet wird, um auf die Werte des Schlüssel Felds für einen aktualisierten Datensatz zuzugreifen.  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventHandler" />
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="T:System.Collections.Specialized.OrderedDictionary" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Keys" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Values" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
      </Docs>
    </Member>
    <Member MemberName="NewValues">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary NewValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary NewValues" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NewValues As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::IOrderedDictionary ^ NewValues { System::Collections::Specialized::IOrderedDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NewValues : System.Collections.Specialized.IOrderedDictionary" Usage="System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Wörterbuch ab, das die neuen Name-Wert-Paare der Felder für den aktualisierten Datensatz enthält.</summary>
        <value>Ein <see cref="T:System.Collections.Specialized.IOrderedDictionary" />, das ein Wörterbuch der neuen Name-Wert-Paare der Felder für den aktualisierten Datensatz enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A> die-Eigenschaft, um auf die neuen Feldwerte für den aktualisierten Datensatz zuzugreifen. Beispielsweise können Sie diese Werte verwenden, um ein Protokoll mit aktualisierten Datensätzen zu speichern.  
  
> [!NOTE]
>  Wenn Sie es dem Benutzer ermöglichen, die Werte der Schlüsselfelder zu aktualisieren, <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> enthält die-Eigenschaft die ursprünglichen Schlüssel Feldwerte. Die aktualisierten Werte werden in der <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> -Eigenschaft gespeichert.  
  
 Die <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A> -Eigenschaft gibt <xref:System.Collections.Specialized.OrderedDictionary> ein Objekt zurück, <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=nameWithType> das die-Schnittstelle implementiert. Das <xref:System.Collections.Specialized.OrderedDictionary> -Objekt <xref:System.Collections.DictionaryEntry?displayProperty=nameWithType> enthält-Objekte, die die Felder des aktualisierten Datensatzes darstellen. Um auf die Feldnamen zuzugreifen, verwenden <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> Sie die- <xref:System.Collections.Specialized.OrderedDictionary> Eigenschaft des-Objekts. Auf ähnliche Weise können Sie auf die Feldwerte zugreifen, <xref:System.Collections.Specialized.OrderedDictionary.Values%2A> indem Sie die-Eigenschaft verwenden.  
  
> [!NOTE]
>  Als Verknüpfung können Sie auch den Indexer des <xref:System.Collections.Specialized.OrderedDictionary> -Objekts verwenden, um direkt auf die Feldwerte zuzugreifen. Datenquellen Steuerelemente, die auf der Feld Reihenfolge <xref:System.Web.UI.WebControls.AccessDataSource>basieren (z. b.), können nur nach Index auf Feldwerte zugreifen.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A> -Eigenschaft für den Zugriff auf die neuen Werte verwendet wird, die vom Benutzer für die nicht Schlüsselfelder des aktualisierten Datensatzes eingegeben wurden.  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventHandler" />
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="T:System.Collections.Specialized.OrderedDictionary" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Keys" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Values" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
      </Docs>
    </Member>
    <Member MemberName="OldValues">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary OldValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary OldValues" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OldValues As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::IOrderedDictionary ^ OldValues { System::Collections::Specialized::IOrderedDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OldValues : System.Collections.Specialized.IOrderedDictionary" Usage="System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Wörterbuch ab, das die ursprünglichen Name-Wert-Paare von Nicht-Schlüsselfeldern für den aktualisierten Datensatz enthält.</summary>
        <value>Ein <see cref="T:System.Collections.Specialized.IOrderedDictionary" />, das ein Wörterbuch der ursprünglichen Name-Wert-Paare der Felder für den aktualisierten Datensatz enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues%2A> die-Eigenschaft, um auf die ursprünglichen nicht-Schlüssel Feldwerte für den aktualisierten Datensatz zuzugreifen. Beispielsweise können Sie diese Werte verwenden, um ein Protokoll mit aktualisierten Datensätzen zu speichern. Ein Datenquellen Steuerelement, das die Konflikterkennung (vollständige Parallelitäts Überprüfung) unter <xref:System.Web.UI.WebControls.SqlDataSource> stützt, z. b <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> . die-und `ConflictOptions.CompareAllValues` -Steuerelemente, bei denen die- <xref:System.Web.UI.WebControls.ObjectDataSource> Eigenschaft auf festgelegt ist, vergleicht diese ursprünglichen Werte Datensatz in der Datenbank, bevor ein Aktualisierungs Vorgang ausgeführt wird. Wenn ein Datensatz von einem anderen Benutzer gleichzeitig geändert wurde, wird der Datensatz nicht aktualisiert.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues%2A> -Eigenschaft enthält keine Schlüsselfelder. Wenn Sie es dem Benutzer ermöglichen, die Werte der Schlüsselfelder zu aktualisieren, werden die ursprünglichen Schlüssel Feldwerte in der <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> -Eigenschaft gespeichert. Die aktualisierten Werte werden in der <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> -Eigenschaft gespeichert.  
  
 Die <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A> -Eigenschaft gibt <xref:System.Collections.Specialized.OrderedDictionary> ein Objekt zurück, <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=nameWithType> das die-Schnittstelle implementiert. Das <xref:System.Collections.Specialized.OrderedDictionary> -Objekt <xref:System.Collections.DictionaryEntry?displayProperty=nameWithType> enthält-Objekte, die die Felder des aktualisierten Datensatzes darstellen. Um auf die Feldnamen zuzugreifen, verwenden <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> Sie die- <xref:System.Collections.Specialized.OrderedDictionary> Eigenschaft des-Objekts. Auf ähnliche Weise können Sie auf die Feldwerte zugreifen, <xref:System.Collections.Specialized.OrderedDictionary.Values%2A> indem Sie die-Eigenschaft verwenden.  
  
> [!NOTE]
>  Als Verknüpfung können Sie auch den Indexer des <xref:System.Collections.Specialized.OrderedDictionary> -Objekts verwenden, um direkt auf die Feldwerte zuzugreifen. Datenquellen Steuerelemente, die auf der Feld Reihenfolge <xref:System.Web.UI.WebControls.AccessDataSource>basieren (z. b.), können nur nach Index auf Feldwerte zugreifen.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues%2A> -Eigenschaft verwendet wird, um auf die ursprünglichen Werte der nicht Schlüsselfelder für den aktualisierten Datensatz zuzugreifen.  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventHandler" />
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="T:System.Collections.Specialized.OrderedDictionary" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Keys" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Values" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
      </Docs>
    </Member>
  </Members>
</Type>
