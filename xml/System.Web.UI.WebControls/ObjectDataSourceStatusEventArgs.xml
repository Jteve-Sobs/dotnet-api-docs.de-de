<Type Name="ObjectDataSourceStatusEventArgs" FullName="System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6be5f9df6974b7b3fb5bbba8760a9bf8bd7106ac" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37591705" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ObjectDataSourceStatusEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ObjectDataSourceStatusEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ObjectDataSourceStatusEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectDataSourceStatusEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type ObjectDataSourceStatusEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt Daten für die Ereignisse <see cref="E:System.Web.UI.WebControls.ObjectDataSource.Selected" />, <see cref="E:System.Web.UI.WebControls.ObjectDataSource.Inserted" />, <see cref="E:System.Web.UI.WebControls.ObjectDataSource.Updated" /> und <see cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleted" /> des <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />-Steuerelements bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> Klasse wird verwendet, der <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected%2A>, <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated%2A>, <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted%2A>, und <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted%2A> Methoden ermöglichen den Zugriff auf die Output-Parameter, Rückgabewerte und Ausnahmen, die von der Methode ausgelöst werden, die aufgerufen wird, werden die <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement. Diese werden aufgerufen, indem die <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters%2A>, <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A>, und <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception%2A> Eigenschaften bzw. Durch Hinzufügen eines Delegaten behandeln die <xref:System.Web.UI.WebControls.ObjectDataSource.Selected>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updated>, <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>, oder <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> Ereignisse können Sie diese Daten überprüfen und verarbeiten Sie die zusätzlichen Beitrag, der erforderlich ist.  
  
 Die <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement stellt viele Ereignisse, die Sie behandeln können, um mit den zugrunde liegenden Geschäftsobjekten zu verschiedenen Zeitpunkten im Lebenszyklus zu arbeiten. Die folgende Tabelle enthält die Ereignisse und den zugehörigen <xref:System.EventArgs> Klassen und Ereignishandlerdelegaten.  
  
|event|EventArgs|EventHandler|  
|-----------|---------------|------------------|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating><br /><br /> Tritt auf, unmittelbar bevor die Instanz das Geschäftsobjekt, das erstellt wird.|<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated><br /><br /> Tritt unmittelbar nach der Instanz das Geschäftsobjekt, das erstellt wird.|<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Selecting><br /><br /> Tritt auf, bevor die Daten abgerufen werden.|<xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Inserting>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> und <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting>.<br /><br /> Erfolgen Sie, bevor eine Insert, Update oder Delete-Vorgang ausgeführt wird.|<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Selected><br /><br /> Tritt auf, nachdem die Daten abgerufen werden.|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updated> und <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>.<br /><br /> Treten Sie auf, nachdem die INSERT-, Update- oder Delete-Vorgang abgeschlossen ist.|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing><br /><br /> Tritt auf, bevor ein Geschäftsobjekt zerstört wird.|<xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler>|  
  
   
  
## Examples  
 Dieser Abschnitt enthält zwei Codebeispiele. Im ersten Codebeispiel wird veranschaulicht, wie Sie mit einer <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement mit einem Geschäftsobjekt und <xref:System.Web.UI.WebControls.GridView> Steuerelement, um Daten zu löschen. Das zweite Codebeispiel enthält ein Beispiel-Middle-Tier-Business-Objekt, das im ersten Codebeispiel wird verwendet.  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit einer <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement mit einem Geschäftsobjekt und <xref:System.Web.UI.WebControls.GridView> Steuerelement, um Daten zu löschen. Die <xref:System.Web.UI.WebControls.GridView> zeigt zu Beginn eine Reihe von allen Mitarbeitern, mithilfe der Methode, die angegeben wird die <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> Eigenschaft zum Abrufen der Daten aus der `EmployeeLogic` Objekt. Da die <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> -Eigenschaftensatz auf `true`, <xref:System.Web.UI.WebControls.GridView> -Steuerelement automatisch zeigt eine **löschen** Schaltfläche.  
  
 Wenn Sie auf der **löschen** Schaltfläche der <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> Aktion erfolgt mithilfe der Methode, die angegeben wird die <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> -Eigenschaft und die im angegebenen Parameter die <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> Auflistung. In diesem Codebeispiel wird ein Parameter angegeben ist, der <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> -Auflistung, die die Mitarbeiter-ID entspricht. Grund hierfür ist die ID ist zwar in enthalten die <xref:System.Windows.Forms.DataGridView.Columns%2A> Auflistung als ein <xref:System.Web.UI.WebControls.BoundField> Objekt ist, wird es als eine Zeichenfolge, die übergeben der <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement. Indem Sie ihn explizit auf Hinzufügen der <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> Sammlung mit eine <xref:System.Web.UI.WebControls.Parameter.Type%2A> -Eigenschaft auf festgelegt die <xref:System.TypeCode.Int32> Wert, es wird übergeben ordnungsgemäß durch die <xref:System.Web.UI.WebControls.ObjectDataSource> an die Methode als eine ganze Zahl und nicht als Zeichenfolge.  
  
 In diesem Codebeispiel werden einige Schritte vorverarbeitung und Nachbearbeitung auch ausgeführt werden. Die `NorthwindEmployeeDeleting` Delegat wird aufgerufen, um die Behandlung der <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> -Ereignis vor der <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> Aktion ausgeführt wird, und die `NorthwindEmployeeDeleted` Delegat wird aufgerufen, um die Behandlung der <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> -Ereignis aus, nachdem die <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> Aktion abgeschlossen wurde, um eine zu behandeln Ausnahmen, die aufgetreten sind. Die `NorthwindEmployeeDeleted` -Delegat greift auf möglichen Ausnahmen, die vom Geschäftsobjekt ausgelöst werden, die verwendet wird, wird die <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> Objekt. In diesem Beispiel wenn eine `NorthwindDataException` wird ausgelöst, wird er von diesem Delegaten behandelt.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 Das folgende Codebeispiel enthält ein Beispiel-Middle-Tier-Business-Objekt, das im vorherigen Codebeispiel verwendet. Die folgende Liste beschreibt die zwei wichtigsten Klassen, die im Codebeispiel definiert sind:  
  
-   Die `EmployeeLogic` -Klasse ist eine Klasse, die keinen Zustand beibehält und die Geschäftslogik kapselt.  
  
-   Die `NorthwindEmployee` -Klasse ist eine Modellklasse, die nur die grundlegende Funktionen enthält, die zum Laden und Beibehalten von Daten aus der Datenebene erforderlich ist.  
  
 Darüber hinaus eine `NorthwindDataException` Klasse bereitgestellt wird.  
  
 Dieser Satz von Beispielklassen verwendet, die Datenbank Northwind Traders, wird eine Beispieldatenbank, die mit Microsoft SQL Server und Microsoft Access verfügbar ist. Ein vollständiges Arbeitsbeispiel müssen diesen Code als Bibliothek kompiliert, und klicken Sie dann verwenden Sie diese Klassen aus einer ASP-Seite. Die ASP-Seite, die im vorherigen Beispiel bereitgestellt wird ist für die Arbeit mit dieser Klassenbibliothek konfiguriert.  Die `UpdateEmployeeInfo` Methode ist nicht vollständig implementiert, sodass keine Daten in der Datenbank Northwind Traders eingefügt werden, wenn Sie in diesem Beispiel experimentieren.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/northwindemployee10.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/northwindemployee10.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectDataSourceStatusEventArgs (object returnValue, System.Collections.IDictionary outputParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object returnValue, class System.Collections.IDictionary outputParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.#ctor(System.Object,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (returnValue As Object, outputParameters As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectDataSourceStatusEventArgs(System::Object ^ returnValue, System::Collections::IDictionary ^ outputParameters);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs : obj * System.Collections.IDictionary -&gt; System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" Usage="new System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs (returnValue, outputParameters)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="returnValue" Type="System.Object" />
        <Parameter Name="outputParameters" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="returnValue">Ein Objekt, das einen Rückgabewert für den abgeschlossenen Datenbankvorgang darstellt.</param>
        <param name="outputParameters">Ein <see cref="T:System.Collections.IDictionary" /> von Name-Wert-Paaren von Parameterobjekten.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" />-Klasse unter Verwendung der angegebenen Ausgabeparameter und des angegebenen Rückgabewerts.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `returnValue` Parameter kann jedes Objekt, das durch einen Aufruf von der Geschäftsobjektmethode für die Daten zurückgegeben wird. Die `outputParameters` -Parameter ist ein <xref:System.Collections.IDictionary> Auflistung von Name/Wert-Paaren, mit denen in der Signatur der Methode übereinstimmen und als Verweis übergeben werden.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectDataSourceStatusEventArgs (object returnValue, System.Collections.IDictionary outputParameters, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object returnValue, class System.Collections.IDictionary outputParameters, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.#ctor(System.Object,System.Collections.IDictionary,System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectDataSourceStatusEventArgs(System::Object ^ returnValue, System::Collections::IDictionary ^ outputParameters, Exception ^ exception);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs : obj * System.Collections.IDictionary * Exception -&gt; System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" Usage="new System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs (returnValue, outputParameters, exception)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="returnValue" Type="System.Object" />
        <Parameter Name="outputParameters" Type="System.Collections.IDictionary" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="returnValue">Ein Objekt, das einen Rückgabewert für den abgeschlossenen Datenbankvorgang darstellt.</param>
        <param name="outputParameters">Ein <see cref="T:System.Collections.IDictionary" /> von Name-Wert-Paaren von Parameterobjekten.</param>
        <param name="exception">Eine <see cref="T:System.Exception" />, die alle internen, während des Methodenaufrufs ausgelösten Ausnahmen umschließt.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" />-Klasse unter Verwendung der angegebenen Ausgabeparameter, des angegebenen Rückgabewerts und der angegebenen Ausnahme.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `returnValue` Parameter kann jedes Objekt, das durch einen Aufruf von der Geschäftsobjektmethode für die Daten zurückgegeben wird. Die `outputParameters` -Parameter ist ein <xref:System.Collections.IDictionary> Auflistung von Name/Wert-Paaren, mit denen in der Signatur der Methode übereinstimmen und als Verweis übergeben werden. Die `exception` -Parameter ist ein <xref:System.Exception> Ausnahme, die alle Ausnahmen, die von der Methode ausgelöst werden, die aufgerufen wird umschließt, werden die <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement während eines Datenvorgangs. Wenn die Ausnahme nicht, durch behandelt wird eine <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected%2A>, <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated%2A>, <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted%2A>, oder <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted%2A> -Methode, die sie ausgelöst wird, durch die <xref:System.Web.UI.WebControls.ObjectDataSource> steuern, nachdem der Datenvorgang zurückgibt.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ExceptionHandled" />
      </Docs>
    </Member>
    <Member MemberName="AffectedRows">
      <MemberSignature Language="C#" Value="public int AffectedRows { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AffectedRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows" />
      <MemberSignature Language="VB.NET" Value="Public Property AffectedRows As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AffectedRows { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.AffectedRows : int with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der Zeilen ab, die vom Datenvorgang betroffen sind, oder legt diese fest.</summary>
        <value>Die Anzahl der vom Datenvorgang betroffenen Zeilen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A> Wert, um sicherzustellen, dass die erwartete Anzahl von Zeilen betroffen war.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Selected" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Inserted" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Updated" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleted" />
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wrapper für alle Ausnahmen auf, die von der Methode ausgelöst werden, die vom <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />-Steuerelement während eines Datenvorgangs aufgerufen wird.</summary>
        <value>Eine <see cref="T:System.Exception" />, die alle vom Geschäftsobjekt in seiner <see cref="P:System.Exception.InnerException" /> ausgelösten Ausnahmen umschließt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Exception> -Ausnahme stellt nicht die tatsächliche Ausnahme, die ausgelöst wird, von der Geschäftsobjektmethode für die Daten dar. Sie können die <xref:System.Exception.InnerException%2A> Eigenschaft auf die ausgelöste Ausnahme.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit einer <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement mit einem Geschäftsobjekt und <xref:System.Web.UI.WebControls.GridView> Steuerelement, um Daten zu löschen. Die <xref:System.Web.UI.WebControls.GridView> zeigt zu Beginn eine Reihe von allen Mitarbeitern, mithilfe der Methode, die angegeben wird die <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> Eigenschaft zum Abrufen der Daten aus der `EmployeeLogic` Objekt. Da die <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> -Eigenschaftensatz auf `true`, <xref:System.Web.UI.WebControls.GridView> -Steuerelement automatisch zeigt eine **löschen** Schaltfläche.  
  
 Wenn Sie auf der **löschen** Schaltfläche der <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> Aktion erfolgt mithilfe der Methode, die angegeben wird die <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> -Eigenschaft und die im angegebenen Parameter die <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> Auflistung.  
  
 In diesem Codebeispiel werden einige Schritte vorverarbeitung und Nachbearbeitung auch ausgeführt werden. Die `NorthwindEmployeeDeleting` Delegat wird aufgerufen, um die Behandlung der <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> -Ereignis vor der <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> Aktion ausgeführt wird, und die `NorthwindEmployeeDeleted` Delegat wird aufgerufen, um die Behandlung der <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> -Ereignis aus, nachdem die <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> Aktion abgeschlossen wurde, zum Ausführen Ausnahmebehandlung. In diesem Beispiel wenn eine `NorthwindDataException` wird ausgelöst, es erfolgt durch die `NorthwindEmployeeDeleted` delegieren.  
  
 Zum Überprüfen der Implementierung von der `EmployeeLogic` Middle-Tier-Business-Objekt, das in diesem Codebeispiel wird verwendet, finden Sie unter der Übersicht über die Klasse in <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ExceptionHandled" />
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ExceptionHandled" />
      <MemberSignature Language="VB.NET" Value="Public Property ExceptionHandled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExceptionHandled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExceptionHandled : bool with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ExceptionHandled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob eine vom Geschäftsobjekt ausgelöste Ausnahme behandelt wurde, oder legt diesen fest.</summary>
        <value>
          <see langword="true" />, wenn eine vom Geschäftsobjekt ausgelöste Ausnahme behandelt wurde und nicht von <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> ausgelöst werden soll, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn das Geschäftsobjekt, das eine Ausnahme auslöst, die <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ExceptionHandled%2A> -Eigenschaftensatz auf `false` und die Ausnahme umschlossen ist die <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception%2A> Eigenschaft. Bei Verwendung einer <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler> Objekt ist, sehen Sie sich die <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception%2A> -Eigenschaft und die Ausnahme behandeln. Wenn Sie die Ausnahme behandeln, legen Sie die <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ExceptionHandled%2A> Eigenschaft `true` oder <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement wird eine Ausnahme ausgelöst.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit einer <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement mit einem Geschäftsobjekt und <xref:System.Web.UI.WebControls.GridView> Steuerelement, um Daten zu löschen. Die <xref:System.Web.UI.WebControls.GridView> zeigt zu Beginn eine Reihe von allen Mitarbeitern, mithilfe der Methode, die angegeben wird die <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> Eigenschaft zum Abrufen der Daten aus der `EmployeeLogic` Objekt. Da die <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> -Eigenschaftensatz auf `true`, <xref:System.Web.UI.WebControls.GridView> -Steuerelement automatisch zeigt eine **löschen** Schaltfläche.  
  
 Wenn Sie auf der **löschen** Schaltfläche der <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> Aktion erfolgt mithilfe der Methode, die angegeben wird die <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> -Eigenschaft und die im angegebenen Parameter die <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> Auflistung. In diesem Codebeispiel werden einige Schritte vorverarbeitung und Nachbearbeitung auch ausgeführt werden. Die `NorthwindEmployeeDeleting` Delegat wird aufgerufen, um die Behandlung der <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> -Ereignis vor der <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> Aktion ausgeführt wird, und die `NorthwindEmployeeDeleted` Delegat wird aufgerufen, um die Behandlung der <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> -Ereignis aus, nachdem die <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> Aktion abgeschlossen wurde, um eine zu behandeln Ausnahmen, die aufgetreten sind. In diesem Beispiel wenn eine `NorthwindDataException` wird ausgelöst, es erfolgt durch die `NorthwindEmployeeDeleted` delegieren.  
  
 Zum Überprüfen der Implementierung von der `EmployeeLogic` Middle-Tier-Business-Objekt, das in diesem Codebeispiel wird verwendet, finden Sie unter der Übersicht über die Klasse in <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception" />
      </Docs>
    </Member>
    <Member MemberName="OutputParameters">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionary OutputParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary OutputParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutputParameters As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IDictionary ^ OutputParameters { System::Collections::IDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OutputParameters : System.Collections.IDictionary" Usage="System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Auflistung ab, die Parameter der Geschäftsobjektmethode und ihre Werte enthält.</summary>
        <value>Ein <see cref="T:System.Collections.IDictionary" /> von Name-Wert-Paaren, die die Parameter der Geschäftsobjektmethode und ihre entsprechenden Werte darstellen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die an der Geschäftsobjektmethode als Verweis übergebenen Parameter werden zurückgegeben, der <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters%2A> Auflistung.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReturnValue">
      <MemberSignature Language="C#" Value="public object ReturnValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ReturnValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReturnValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ReturnValue { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReturnValue : obj" Usage="System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Rückgabewert ab, der von der Geschäftsobjektmethode ggf. als Objekt zurückgegeben wird.</summary>
        <value>Ein Objekt, das den von der Geschäftsobjektmethode zurückgegebenen Wert darstellt, andernfalls <see langword="null" />, falls von der Geschäftsobjektmethode kein Wert zurückgegeben wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A> -Eigenschaft wird festgelegt, die <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> Konstruktor. Der Wert wird auf den Rückgabewert des Methodenaufrufs Business Objekt festgelegt, die mithilfe von Reflektion aufgerufen wird. Wenn die Methode keinen Wert zurückgibt (z. B. wenn die Geschäftsobjektmethode zurückgegeben `void`), wird die <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A> Eigenschaft ausgewertet wird, um `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>