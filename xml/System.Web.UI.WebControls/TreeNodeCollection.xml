<Type Name="TreeNodeCollection" FullName="System.Web.UI.WebControls.TreeNodeCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5cce4966301477a078a6b2fa8a110793caadbfd5" /><Meta Name="ms.sourcegitcommit" Value="723b8a6d92667ba86fcda96190bad3b4a03283b3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="11/09/2018" /><Meta Name="ms.locfileid" Value="51303849" /></Metadata><TypeSignature Language="C#" Value="public sealed class TreeNodeCollection : System.Collections.ICollection, System.Web.UI.IStateManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TreeNodeCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Web.UI.IStateManager" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.TreeNodeCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TreeNodeCollection&#xA;Implements ICollection, IStateManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class TreeNodeCollection sealed : System::Collections::ICollection, System::Web::UI::IStateManager" />
  <TypeSignature Language="F#" Value="type TreeNodeCollection = class&#xA;    interface ICollection&#xA;    interface IEnumerable&#xA;    interface IStateManager" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IStateManager</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Stellt eine Auflistung von <see cref="T:System.Web.UI.WebControls.TreeNode" />-Objekten im <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelement dar. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.TreeNodeCollection> Klasse dient zum Speichern und verwalten eine Auflistung von <xref:System.Web.UI.WebControls.TreeNode> Objekte in der <xref:System.Web.UI.WebControls.TreeView> Steuerelement. Die <xref:System.Web.UI.WebControls.TreeView> -Steuerelement verwendet die <xref:System.Web.UI.WebControls.TreeNodeCollection> Klasse in zwei seiner Eigenschaften. Es speichert die Stammknoten in der <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> -Eigenschaft und die ausgewählten Knoten in der <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A> Eigenschaft. Die <xref:System.Web.UI.WebControls.TreeNodeCollection> Auflistung wird auch verwendet, für die <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> Eigenschaft zum Speichern von untergeordneten Knoten (sofern vorhanden).  
  
 Die <xref:System.Web.UI.WebControls.TreeNodeCollection> Klasse unterstützt mehrere Möglichkeiten, die Elemente in der Auflistung zuzugreifen:  
  
-   Verwenden der <xref:System.Web.UI.WebControls.TreeNodeCollection.Item%2A> Indexer zum Abrufen einer <xref:System.Web.UI.WebControls.TreeNode> Objekt direkt am angegebenen nullbasierten Index.  
  
-   Verwenden der <xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A> Methode zum Erstellen eines Enumerators, der zum Durchlaufen der Auflistung verwendet werden kann.  
  
-   Verwendung `foreach` (c#) oder `For Each` (Visual Basic) zum Durchlaufen der Auflistung.  
  
-   Verwenden der <xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A> Methode zum Kopieren der Inhalte der Auflistung in ein <xref:System.Array> Objekt.  
  
 Sie können programmgesteuert verwalten die <xref:System.Web.UI.WebControls.TreeNodeCollection> durch Hinzufügen und Entfernen von <xref:System.Web.UI.WebControls.TreeNode> Objekte. Verwenden Sie zum Hinzufügen von Knoten auf die Auflistung der <xref:System.Web.UI.WebControls.TreeNodeCollection.Add%2A> oder <xref:System.Web.UI.WebControls.TreeNodeCollection.AddAt%2A> Methode. Verwenden Sie zum Entfernen von Knoten aus der Auflistung der <xref:System.Web.UI.WebControls.TreeNodeCollection.Remove%2A>, <xref:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt%2A>, oder <xref:System.Web.UI.WebControls.TreeNodeCollection.Clear%2A> Methode.  
  
> [!NOTE]
>  Wenn die <xref:System.Web.UI.WebControls.TreeView> -Steuerelement an eine Datenquelle gebunden ist die <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> und <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> Sammlungen werden automatisch bei jedem Auftreten einer Bindung aufgefüllt. Alle Änderungen an Sammlungen zwischen Bindungen gehen verloren. Um diese Änderungen beizubehalten, können Sie entweder aktualisieren Sie die Datenquelle oder manuell neu erstellen Sie, die jedes Mal, wenn Sie eine Bindung-Auflistung.  
  
 Die <xref:System.Web.UI.WebControls.TreeNodeCollection> enthält Eigenschaften und Methoden, mit denen Sie zum Abrufen von Informationen über die Auflistung selbst. Um herauszufinden, wie viele Elemente in der Auflistung befinden, verwenden Sie die <xref:System.Web.UI.WebControls.TreeNodeCollection.Count%2A> Eigenschaft. Sollten Sie bestimmen, ob die Auflistung ein bestimmtes <xref:System.Web.UI.WebControls.TreeNode> -Objekts die <xref:System.Web.UI.WebControls.TreeNodeCollection.Contains%2A> Methode. Den Index des abzurufenden eine <xref:System.Web.UI.WebControls.TreeNode> Objekt in der Auflistung, die Verwendung der <xref:System.Web.UI.WebControls.TreeNodeCollection.IndexOf%2A> Methode.  
  
   
  
## Examples  
 Im folgende Beispiel wird veranschaulicht, wie Sie programmgesteuert hinzufügen und Entfernen von einem <xref:System.Web.UI.WebControls.TreeNodeCollection>. Beachten Sie, dass die <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> und <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> Eigenschaften zurückgeben einer <xref:System.Web.UI.WebControls.TreeNodeCollection> Objekt.  
  
 [!code-aspx-csharp[TreeNodeCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionAdd/CS/treenodecollectionaddcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionAdd/VB/treenodecollectionaddvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.TreeView" />
    <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
    <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
    <altmember cref="P:System.Web.UI.WebControls.TreeView.CheckedNodes" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNodeCollection.Item(System.Int32)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.CopyTo(System.Web.UI.WebControls.TreeNode[],System.Int32)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Add(System.Web.UI.WebControls.TreeNode)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.AddAt(System.Int32,System.Web.UI.WebControls.TreeNode)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Remove(System.Web.UI.WebControls.TreeNode)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(System.Int32)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Clear" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNodeCollection.Count" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Contains(System.Web.UI.WebControls.TreeNode)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.IndexOf(System.Web.UI.WebControls.TreeNode)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNodeCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNodeCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />-Klasse mit Standardwerten.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diesen Konstruktor initialisiert eine neue Instanz der dem <xref:System.Web.UI.WebControls.TreeNodeCollection> Klasse unter Verwendung der Standardwerte. Dieser Konstruktor wird häufig verwendet beim Erstellen einer Auflistung von Stammknoten, in dem keines übergeordneten Knotens (oder Besitzers) erforderlich.  
  
> [!NOTE]
>  Wenn Sie eine Auflistung von nicht-Wurzel-Knoten zu erstellen, sollten Sie verwenden den überladenen Konstruktor, der verwendet die `owner` Parameter, anstatt diesen Konstruktor, um den übergeordneten Knoten anzugeben.  
  
 Dieser Konstruktor wird hauptsächlich von Steuerelemententwicklern verwendet.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CheckedNodes" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNodeCollection (System.Web.UI.WebControls.TreeNode owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.TreeNode owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.#ctor(System.Web.UI.WebControls.TreeNode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As TreeNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNodeCollection(System::Web::UI::WebControls::TreeNode ^ owner);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.TreeNodeCollection : System.Web.UI.WebControls.TreeNode -&gt; System.Web.UI.WebControls.TreeNodeCollection" Usage="new System.Web.UI.WebControls.TreeNodeCollection owner" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.WebControls.TreeNode" />
      </Parameters>
      <Docs>
        <param name="owner">Das <see cref="T:System.Web.UI.WebControls.TreeNode" />-Objekt, das den übergeordneten Knoten der Auflistung darstellt.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />-Klasse unter Verwendung des angegebenen übergeordneten Knotens (oder Besitzers).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diesen Konstruktor initialisiert eine neue Instanz der dem <xref:System.Web.UI.WebControls.TreeNodeCollection> -Klasse unter Verwendung der angegebenen übergeordneten Knotens (oder Besitzers). Dieser Konstruktor wird häufig verwendet, wenn eine Auflistung von nicht-Stammknoten erstellen, müssen Sie den übergeordneten Knoten angeben.  
  
> [!NOTE]
>  Wenn Sie eine Auflistung von Stammknoten zu erstellen, sollten Sie mit dem Standardkonstruktor, da Stammknoten nicht mit einen übergeordneten Knoten verfügen.  
  
 Dieser Konstruktor wird hauptsächlich von Steuerelemententwicklern verwendet.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CheckedNodes" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Web.UI.WebControls.TreeNode child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Web.UI.WebControls.TreeNode child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.Add(System.Web.UI.WebControls.TreeNode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (child As TreeNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Web::UI::WebControls::TreeNode ^ child);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Web.UI.WebControls.TreeNode -&gt; unit" Usage="treeNodeCollection.Add child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Web.UI.WebControls.TreeNode" />
      </Parameters>
      <Docs>
        <param name="child">Das anzufügende <see cref="T:System.Web.UI.WebControls.TreeNode" />-Objekt.</param>
        <summary>Fügt das angegebene <see cref="T:System.Web.UI.WebControls.TreeNode" />-Objekt an das Ende des <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />-Objekts an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.TreeNodeCollection.Add%2A> -Methode, um den angegebenen <xref:System.Web.UI.WebControls.TreeNode> Objekt an das Ende der <xref:System.Web.UI.WebControls.TreeNodeCollection>.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.TreeNodeCollection> ermöglicht Ihnen das Hinzufügen von null-Verweis (Nothing in Visual Basic), sowie doppelte <xref:System.Web.UI.WebControls.TreeNode> Objekte.  
  
 Als Alternative können Sie Einfügen einer <xref:System.Web.UI.WebControls.TreeNode> -Objekt in der <xref:System.Web.UI.WebControls.TreeNodeCollection> an einem bestimmten Index mithilfe der <xref:System.Web.UI.WebControls.TreeNodeCollection.AddAt%2A> Methode.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeNodeCollection.Add%2A> Methode, um programmgesteuert auf einen Knoten hinzufügen der <xref:System.Web.UI.WebControls.TreeNodeCollection>. Beachten Sie, dass die <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> und <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> Eigenschaften jedes Zurückgeben einer <xref:System.Web.UI.WebControls.TreeNodeCollection> Objekt.  
  
 [!code-aspx-csharp[TreeNodeCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionAdd/CS/treenodecollectionaddcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionAdd/VB/treenodecollectionaddvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="M:System.Collections.ArrayList.Add(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.AddAt(System.Int32,System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Clear" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Contains(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Remove(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="AddAt">
      <MemberSignature Language="C#" Value="public void AddAt (int index, System.Web.UI.WebControls.TreeNode child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAt(int32 index, class System.Web.UI.WebControls.TreeNode child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.AddAt(System.Int32,System.Web.UI.WebControls.TreeNode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAt (index As Integer, child As TreeNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAt(int index, System::Web::UI::WebControls::TreeNode ^ child);" />
      <MemberSignature Language="F#" Value="member this.AddAt : int * System.Web.UI.WebControls.TreeNode -&gt; unit" Usage="treeNodeCollection.AddAt (index, child)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="child" Type="System.Web.UI.WebControls.TreeNode" />
      </Parameters>
      <Docs>
        <param name="index">Die Position des nullbasierten Indexes, an dem das <see cref="T:System.Web.UI.WebControls.TreeNode" />-Objekt eingefügt werden soll.</param>
        <param name="child">Das hinzuzufügende <see cref="T:System.Web.UI.WebControls.TreeNode" />-Objekt.</param>
        <summary>Fügt das angegebene <see cref="T:System.Web.UI.WebControls.TreeNode" />-Objekt an der angegebenen Indexposition in einem <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />-Objekt ein.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.TreeNodeCollection.AddAt%2A> Methode, um den angegebenen einfügen <xref:System.Web.UI.WebControls.TreeNode> -Objekt in der <xref:System.Web.UI.WebControls.TreeNodeCollection> am angegebenen nullbasierten Index.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.TreeNodeCollection> ermöglicht das Einfügen von null-Verweis (Nothing in Visual Basic), sowie doppelte <xref:System.Web.UI.WebControls.TreeNode> Objekte.  
  
 Als Alternative können Sie Anfügen einer <xref:System.Web.UI.WebControls.TreeNode> Objekt an das Ende der <xref:System.Web.UI.WebControls.TreeNodeCollection> mithilfe der <xref:System.Web.UI.WebControls.TreeNodeCollection.Add%2A> Methode.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeNodeCollection.AddAt%2A> Methode, um programmgesteuert auf einen Knoten hinzufügen der <xref:System.Web.UI.WebControls.TreeNodeCollection>. Beachten Sie, dass die <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> und <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> Eigenschaften jedes Zurückgeben einer <xref:System.Web.UI.WebControls.TreeNodeCollection> Objekt.  
  
 [!code-aspx-csharp[TreeNodeCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionAdd/CS/treenodecollectionaddcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionAdd/VB/treenodecollectionaddvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="child" /> ist <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Add(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Clear" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Contains(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Remove(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="treeNodeCollection.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Leert das <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />-Objekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.TreeNodeCollection.Clear%2A> Methode so entfernen Sie alle <xref:System.Web.UI.WebControls.TreeNode> -Objekt aus der <xref:System.Web.UI.WebControls.TreeNodeCollection>.  
  
> [!NOTE]
>  Um einen einzelnen Knoten aus der Auflistung zu entfernen, verwenden die <xref:System.Web.UI.WebControls.TreeNodeCollection.Remove%2A> oder <xref:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt%2A> Methode.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeNodeCollection.Clear%2A> Methode, um programmgesteuert leere eine <xref:System.Web.UI.WebControls.TreeNodeCollection>. Beachten Sie, dass die <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> und <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> Eigenschaften zurückgeben einer <xref:System.Web.UI.WebControls.TreeNodeCollection> Objekt.  
  
 [!code-aspx-csharp[TreeNodeCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionAdd/CS/treenodecollectionaddcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionAdd/VB/treenodecollectionaddvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Add(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.AddAt(System.Int32,System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Contains(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Remove(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Web.UI.WebControls.TreeNode c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Web.UI.WebControls.TreeNode c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.Contains(System.Web.UI.WebControls.TreeNode)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (c As TreeNode) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Web::UI::WebControls::TreeNode ^ c);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Web.UI.WebControls.TreeNode -&gt; bool" Usage="treeNodeCollection.Contains c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Web.UI.WebControls.TreeNode" />
      </Parameters>
      <Docs>
        <param name="c">Das zu suchende <see cref="T:System.Web.UI.WebControls.TreeNode" />-Objekt.</param>
        <summary>Bestimmt, ob das angegebene <see cref="T:System.Web.UI.WebControls.TreeNode" />-Objekt in der Auflistung vorhanden ist.</summary>
        <returns><see langword="true" />, wenn das angegebene <see cref="T:System.Web.UI.WebControls.TreeNode" />-Objekt in der Auflistung enthalten ist, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.TreeNodeCollection.Contains%2A> Methode, um zu bestimmen, ob eine <xref:System.Web.UI.WebControls.TreeNode> Objekt befindet sich der <xref:System.Web.UI.WebControls.TreeNodeCollection>. Diese Methode wird häufig verwendet, um das Vorhandensein Testen einer <xref:System.Web.UI.WebControls.TreeNode> Objekt vor dem Ausführen einer Aufgabe, wie das Hinzufügen oder entfernen den Knoten aus der Auflistung.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeNodeCollection.Contains%2A> Methode, um zu bestimmen, ob der ausgewählte Knoten ist der <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> Auflistung. Beachten Sie, dass die <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> -Eigenschaft gibt eine <xref:System.Web.UI.WebControls.TreeNodeCollection> Objekt.  
  
 [!code-aspx-csharp[TreeNodeCollectionIndexOf#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionIndexOf/CS/treenodecollectionindexofcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionIndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionIndexOf/VB/treenodecollectionindexofvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Add(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.AddAt(System.Int32,System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Clear" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.IndexOf(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Remove(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Web.UI.WebControls.TreeNode[] nodeArray, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Web.UI.WebControls.TreeNode[] nodeArray, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.CopyTo(System.Web.UI.WebControls.TreeNode[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (nodeArray As TreeNode(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Web::UI::WebControls::TreeNode ^&gt; ^ nodeArray, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.Web.UI.WebControls.TreeNode[] * int -&gt; unit" Usage="treeNodeCollection.CopyTo (nodeArray, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeArray" Type="System.Web.UI.WebControls.TreeNode[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="nodeArray">Ein nullbasiertes Array von <see cref="T:System.Web.UI.WebControls.TreeNode" />-Objekten, das die kopierten Elemente aus der <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> aufnimmt.</param>
        <param name="index">Die Position im Zielarray, bei der mit dem Empfang des kopierten Inhalts begonnen werden soll.</param>
        <summary>Kopiert alle Elemente aus dem <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />-Objekt in ein kompatibles eindimensionales Array von <see cref="T:System.Web.UI.WebControls.TreeNode" />-Objekten, wobei am angegebenen Index des Zielarrays begonnen wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A> Methode zum Kopieren der Inhalte der <xref:System.Web.UI.WebControls.TreeNodeCollection> in das angegebene nullbasierte <xref:System.Array?displayProperty=nameWithType> Objekt. Elemente werden kopiert, beginnend am angegebenen Index des Zielarrays. Mit der <xref:System.Array?displayProperty=nameWithType> Objekt ist, können Sie dann die Arraysyntax verwenden, den Zugriff auf die Elemente in der <xref:System.Web.UI.WebControls.TreeNodeCollection>.  
  
 Als Alternative können Sie auch die <xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A> Methode, um einen Enumerator zu erstellen, die Zugriff auf die Elemente in der Auflistung verwendet werden können.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A> Methode, um die Werte der Kopieren einer <xref:System.Web.UI.WebControls.TreeNodeCollection> in ein Array. Beachten Sie, dass die <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> -Eigenschaft gibt eine <xref:System.Web.UI.WebControls.TreeNodeCollection> Objekt.  
  
 [!code-aspx-csharp[TreeNodeCollectionCopyTo#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionCopyTo/CS/treenodecollectioncopytocs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionCopyTo#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionCopyTo/VB/treenodecollectioncopytovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="T:System.Array" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeCollection.Item(System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.CopyTo(System.Array)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNodeCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Web.UI.WebControls.TreeNodeCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der Elemente im <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />-Objekt ab.</summary>
        <value>Die Anzahl der Elemente in der <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.TreeNodeCollection.Count%2A> Eigenschaft, um zu bestimmen, die Anzahl der Elemente in einem <xref:System.Web.UI.WebControls.TreeNodeCollection>. Diese Eigenschaft wird häufig beim Durchlaufen einer Auflistung verwendet, um zu bestimmen, die obere Grenze der Auflistung. Die <xref:System.Web.UI.WebControls.TreeNodeCollection.Count%2A> Eigenschaft wird häufig auch verwendet, um zu bestimmen, ob eine Auflistung leer ist.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeNodeCollection.Count%2A> Eigenschaft, um zu bestimmen, die Anzahl der Elemente in der <xref:System.Web.UI.WebControls.TreeNodeCollection>. Anschließend wird einen Durchlauf der <xref:System.Web.UI.WebControls.TreeView> -Steuerelement den Text jedes Knotens angezeigt.  
  
 [!code-aspx-csharp[TreeNodeCollectionCount#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionCount/CS/treenodecollectioncountcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionCount#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionCount/VB/treenodecollectioncountvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Collections.ArrayList.Count" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CheckedNodes" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="treeNodeCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen Enumerator zurück, mit dem ein <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />-Objekt durchlaufen werden kann.</summary>
        <returns>Ein Enumerator, mit dem die <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> durchlaufen werden kann.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A> Methode, um einen Enumerator zu erstellen, die schnell durchlaufen werden kann, um jedes Element zu erhalten, der <xref:System.Web.UI.WebControls.TreeNodeCollection>. Rufen Sie das Element im Enumerator gerade gezeigt mit dem <xref:System.Collections.IEnumerator.Current%2A?displayProperty=nameWithType> Eigenschaft. Verwenden der <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=nameWithType> -Methode mit dem nächsten Element zu verschieben. Wenn Sie den Enumerator zurück zum Anfang der Auflistung verschieben möchten, verwenden Sie die <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=nameWithType> Methode.  
  
> [!NOTE]
>  Nachdem Sie einen Enumerator erstellt, oder verwenden Sie die <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=nameWithType> -Methode, die Sie aufrufen müssen die <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=nameWithType> Methode. Andernfalls das Element dargestellt, durch die <xref:System.Collections.IEnumerator.Current%2A?displayProperty=nameWithType> Eigenschaft ist nicht definiert.  
  
 Als Alternative können Sie auch die <xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A> Methode zum Erstellen einer <xref:System.Array?displayProperty=nameWithType> -Objekt, das Zugriff auf die Elemente in der Auflistung verwendet werden kann. Eine weitere Alternative ist die Verwendung einer `foreach` oder `For Each` Struktur zum Durchlaufen der Auflistung.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A> Methode zum Erstellen eines Enumerators, der Stammknoten des enthält die <xref:System.Web.UI.WebControls.TreeView> Steuerelement.  
  
 [!code-aspx-csharp[TreeNodeCollectionGetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionGetEnumerator/CS/treenodecollectiongetenumeratorcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionGetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionGetEnumerator/VB/treenodecollectiongetenumeratorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeCollection.Item(System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.GetEnumerator" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.CopyTo(System.Web.UI.WebControls.TreeNode[],System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Web.UI.WebControls.TreeNode value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Web.UI.WebControls.TreeNode value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.IndexOf(System.Web.UI.WebControls.TreeNode)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As TreeNode) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Web::UI::WebControls::TreeNode ^ value);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Web.UI.WebControls.TreeNode -&gt; int" Usage="treeNodeCollection.IndexOf value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.UI.WebControls.TreeNode" />
      </Parameters>
      <Docs>
        <param name="value">Das zu suchende <see cref="T:System.Web.UI.WebControls.TreeNode" />-Objekt.</param>
        <summary>Ruft den Index des angegebenen <see cref="T:System.Web.UI.WebControls.TreeNode" />-Objekts ab.</summary>
        <returns>Der nullbasierte Index des ersten Vorkommens von <paramref name="value" /> in der <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />, sofern gefunden, andernfalls -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.TreeNodeCollection.IndexOf%2A> Methode, um zu bestimmen, den nullbasierten Index des angegebenen <xref:System.Web.UI.WebControls.TreeNode> -Objekt in der <xref:System.Web.UI.WebControls.TreeNodeCollection> Objekt. Wenn der Knoten nicht in der Auflistung vorhanden ist, gibt die Methode-1 zurück.  
  
> [!NOTE]
>  Wenn der angegebene Knoten mehrmals in der Auflistung enthalten ist, wird der Index des ersten Vorkommens zurückgegeben.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeNodeCollection.IndexOf%2A> Methode, um den Index eines Stammknotens zu bestimmen. Beachten Sie, dass die <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> -Eigenschaft gibt eine <xref:System.Web.UI.WebControls.TreeNodeCollection> Objekt.  
  
 [!code-aspx-csharp[TreeNodeCollectionIndexOf#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionIndexOf/CS/treenodecollectionindexofcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionIndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionIndexOf/VB/treenodecollectionindexofvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="M:System.Collections.ArrayList.IndexOf(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Contains(System.Web.UI.WebControls.TreeNode)" />
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Zugriff auf die <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> synchronisiert (threadsicher) ist.</summary>
        <value><see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized%2A> Eigenschaft wird verwendet, um anzugeben, ob der Zugriff auf die <xref:System.Web.UI.WebControls.TreeNodeCollection> ist synchronisiert (threadsicher). Diese Eigenschaft stammt aus dem <xref:System.Collections.ICollection?displayProperty=nameWithType> Klasse und wird überschrieben, sodass Sie jederzeit `false`.  
  
 Weitere Informationen zu den <xref:System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized%2A> -Eigenschaft finden Sie unter der <xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=nameWithType> Eigenschaft der <xref:System.Collections.ICollection?displayProperty=nameWithType> Schnittstelle.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNode this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNode Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNodeCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNode ^ default[int] { System::Web::UI::WebControls::TreeNode ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Web.UI.WebControls.TreeNode" Usage="System.Web.UI.WebControls.TreeNodeCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Der nullbasierte Index des abzurufenden <see cref="T:System.Web.UI.WebControls.TreeNode" />-Objekts.</param>
        <summary>Ruft das <see cref="T:System.Web.UI.WebControls.TreeNode" />-Objekt am angegebenen Index im <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />-Objekt ab.</summary>
        <value>Das <see cref="T:System.Web.UI.WebControls.TreeNode" />-Objekt am angegebenen Index in der <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie den Zugriff auf diesen Indexer eine <xref:System.Web.UI.WebControls.TreeNode> -Objekt aus der <xref:System.Web.UI.WebControls.TreeNodeCollection> am angegebenen Index mithilfe der Arraynotation. Indexer können Sie zum Ändern oder Ersetzen einer <xref:System.Web.UI.WebControls.TreeNode> Objekt in der Auflistung direkt. Die Auflistung ist nullbasiert.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie den Indexer auf ein Element in der <xref:System.Web.UI.WebControls.TreeNodeCollection>. Beachten Sie, dass die <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> und <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> Eigenschaften zurückgeben einer <xref:System.Web.UI.WebControls.TreeNodeCollection> Objekt.  
  
 [!code-aspx-csharp[TreeNodeCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionAdd/CS/treenodecollectionaddcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionAdd/VB/treenodecollectionaddvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.CopyTo(System.Web.UI.WebControls.TreeNode[],System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Web.UI.WebControls.TreeNode value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Web.UI.WebControls.TreeNode value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.Remove(System.Web.UI.WebControls.TreeNode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (value As TreeNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Web::UI::WebControls::TreeNode ^ value);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Web.UI.WebControls.TreeNode -&gt; unit" Usage="treeNodeCollection.Remove value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.UI.WebControls.TreeNode" />
      </Parameters>
      <Docs>
        <param name="value">Das zu entfernende <see cref="T:System.Web.UI.WebControls.TreeNode" />-Objekt.</param>
        <summary>Entfernt das angegebene <see cref="T:System.Web.UI.WebControls.TreeNode" />-Objekt aus dem <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />-Objekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.TreeNodeCollection.Remove%2A> Methode, um den angegebenen Knoten aus der Auflistung zu entfernen. Alle Elemente, die diesem Knoten ausführen, werden dann nach oben verschoben, füllen Sie die leere Position. Die Indizes der verschobenen Elemente werden ebenfalls aktualisiert.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.TreeNodeCollection> können null-Verweis (Nothing in Visual Basic) enthalten, als auch doppelte <xref:System.Web.UI.WebControls.TreeNode> Objekte.  
  
 Als Alternative können Sie einen Knoten an einem bestimmten Index entfernen, mit der <xref:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt%2A> Methode. Sie können auch jeden Knoten in der Auflistung entfernen, mit der <xref:System.Web.UI.WebControls.TreeNodeCollection.Clear%2A> Methode.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeNodeCollection.Remove%2A> Methode, um programmgesteuert zu entfernen ein Knotens aus dem <xref:System.Web.UI.WebControls.TreeNodeCollection>. Beachten Sie, dass die <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> und <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> Eigenschaften jedes Zurückgeben einer <xref:System.Web.UI.WebControls.TreeNodeCollection> Objekt.  
  
 [!code-aspx-csharp[TreeNodeCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionAdd/CS/treenodecollectionaddcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionAdd/VB/treenodecollectionaddvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" /> ist <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Add(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.AddAt(System.Int32,System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Clear" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Contains(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Collections.ArrayList.Remove(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int -&gt; unit" Usage="treeNodeCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Die nullbasierte Indexposition des zu entfernenden Knotens.</param>
        <summary>Entfernt das <see cref="T:System.Web.UI.WebControls.TreeNode" />-Objekt an der angegebenen Indexposition aus dem <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />-Objekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt%2A> -Methode zum Entfernen der <xref:System.Web.UI.WebControls.TreeNode> Objekt am angegebenen nullbasierten Index Standort aus einer <xref:System.Web.UI.WebControls.TreeNodeCollection>. Alle Elemente, die diesem Knoten ausführen, werden dann nach oben verschoben, füllen Sie die leere Position. Die Indizes der verschobenen Elemente werden ebenfalls aktualisiert.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.TreeNodeCollection> können null-Verweis (Nothing in Visual Basic) enthalten, als auch doppelte <xref:System.Web.UI.WebControls.TreeNode> Objekte.  
  
 Als Alternative können Sie eine bestimmte entfernen <xref:System.Web.UI.WebControls.TreeNode> -Objekt unter Verwendung der <xref:System.Web.UI.WebControls.TreeNodeCollection.Remove%2A> Methode. Sie können auch jeden Knoten in der Auflistung entfernen, mit der <xref:System.Web.UI.WebControls.TreeNodeCollection.Clear%2A> Methode.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt%2A> Methode, um programmgesteuert zu entfernen ein Knotens aus dem <xref:System.Web.UI.WebControls.TreeNodeCollection>. Beachten Sie, dass die <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> und <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> Eigenschaften jedes Zurückgeben einer <xref:System.Web.UI.WebControls.TreeNodeCollection> Objekt.  
  
 [!code-aspx-csharp[TreeNodeCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionAdd/CS/treenodecollectionaddcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionAdd/VB/treenodecollectionaddvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Add(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.AddAt(System.Int32,System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Clear" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Contains(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Remove(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Collections.ArrayList.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNodeCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Web.UI.WebControls.TreeNodeCollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Objekt ab, mit dem der Zugriff auf das <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />-Objekt synchronisiert werden kann.</summary>
        <value>Ein <see cref="T:System.Object" />, mit dem der Zugriff auf die <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> synchronisiert werden kann.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.TreeNodeCollection.SyncRoot%2A> Eigenschaft stellt eine synchronisierte Version des der <xref:System.Web.UI.WebControls.TreeNodeCollection> , der beim Synchronisieren (Threads) Code verwendet werden kann.  
  
> [!CAUTION]
>  Die <xref:System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized%2A> -Eigenschaft dieser Klasse immer gibt `false`, die angibt, dass die <xref:System.Web.UI.WebControls.TreeNodeCollection> Klasse ist nicht synchronisiert (nicht threadsicher).  
  
 Muss Synchronisierungscode dürfen Vorgänge auf den <xref:System.Web.UI.WebControls.TreeNodeCollection.SyncRoot%2A> Objekt die <xref:System.Web.UI.WebControls.TreeNodeCollection>, nicht direkt auf die <xref:System.Web.UI.WebControls.TreeNodeCollection> selbst. Dies gewährleistet die einwandfreie Funktion von Auflistungen, die von anderen Objekten abgeleitet sind. Insbesondere verwaltet ordnungsgemäße Synchronisierung mit anderen Threads, die möglicherweise gleichzeitig ändern können die <xref:System.Web.UI.WebControls.TreeNodeCollection> Objekt.  
  
> [!NOTE]
>  Das zurückgegebene Objekt in dieser Implementierung die <xref:System.Collections.ArrayList?displayProperty=nameWithType> Objekt zum Speichern der <xref:System.Web.UI.WebControls.TreeNode> Objekte in der Auflistung.  
  
 Die Enumeration einer Auflistung ist systemintern keine threadsichere Prozedur. Auch wenn eine Auflistung synchronisiert ist, können andere Threads weiterhin die Auflistung ändern, die wodurch den Enumerator eine Ausnahme ausgelöst. Um während der Enumeration Threadsicherheit zu gewährleisten, können Sie entweder die Auflistung während der gesamten Enumeration sperren oder die Ausnahmen, die aus von anderen Threads stammenden Änderungen resultieren, abfangen.  
  
 Weitere Informationen zu den <xref:System.Web.UI.WebControls.DataGridColumnCollection.SyncRoot%2A> -Eigenschaft finden Sie unter der <xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=nameWithType> Eigenschaft der <xref:System.Collections.ICollection?displayProperty=nameWithType> Schnittstelle.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Collections.ArrayList.SyncRoot" />
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">Ein nullbasiertes <see cref="T:System.Array" />-Objekt, in das Elemente aus <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> kopiert werden.</param>
        <param name="index">Die Position im Zielarray, bei der mit dem Empfang des kopierten Inhalts begonnen werden soll.</param>
        <summary>Kopiert alle Elemente aus dem <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />-Objekt in ein kompatibles eindimensionales <see cref="T:System.Array" />, wobei bei dem angegebenen Index des Zielarrays begonnen wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A> Methode zum Kopieren der Inhalte der <xref:System.Web.UI.WebControls.TreeNodeCollection> in das angegebene nullbasierte <xref:System.Array?displayProperty=nameWithType> Objekt. Elemente werden kopiert, beginnend am angegebenen Index des Zielarrays. Mit der <xref:System.Array?displayProperty=nameWithType> Objekt ist, können Sie dann die Arraysyntax verwenden, den Zugriff auf die Elemente in der <xref:System.Web.UI.WebControls.TreeNodeCollection>.  
  
 Als Alternative können Sie auch die <xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A> Methode, um einen Enumerator zu erstellen, die Zugriff auf die Elemente in der Auflistung verwendet werden können.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A> Methode, um die Werte der Kopieren einer <xref:System.Web.UI.WebControls.TreeNodeCollection> in ein Array. Beachten Sie, dass die <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> -Eigenschaft gibt eine <xref:System.Web.UI.WebControls.TreeNodeCollection> Objekt.  
  
 [!code-aspx-csharp[TreeNodeCollectionCopyTo#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionCopyTo/CS/treenodecollectioncopytocs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionCopyTo#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionCopyTo/VB/treenodecollectioncopytovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="array" /> ist kein Array von <see cref="T:System.Web.UI.WebControls.TreeNode" />-Objekten.</exception>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="T:System.Array" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeCollection.Item(System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.CopyTo(System.Array)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.IsTrackingViewState">
      <MemberSignature Language="C#" Value="bool System.Web.UI.IStateManager.IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsTrackingViewState As Boolean Implements IStateManager.IsTrackingViewState" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Web::UI::IStateManager::IsTrackingViewState { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />-Objekt Änderungen des Ansichtszustands speichert.</summary>
        <value><see langword="true" />, wenn das Steuerelement für das Speichern seines Zustands markiert ist, andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Control.ViewState" />
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.Control.SaveViewState" />
        <related type="Article" href="https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)">Übersicht über ASP.NET-Status</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.LoadViewState">
      <MemberSignature Language="C#" Value="void IStateManager.LoadViewState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.LoadViewState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub LoadViewState (state As Object) Implements IStateManager.LoadViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.LoadViewState(System::Object ^ state) = System::Web::UI::IStateManager::LoadViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">Ein <see cref="T:System.Object" />, das die gespeicherten Ansichtszustandswerte enthält.</param>
        <summary>Lädt den zuvor gespeicherten Ansichtszustand des <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />-Objekts.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="T:System.Web.UI.StateItem" />
        <related type="Article" href="https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)">Übersicht über ASP.NET-Status</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.SaveViewState">
      <MemberSignature Language="C#" Value="object IStateManager.SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Web.UI.IStateManager.SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Function SaveViewState () As Object Implements IStateManager.SaveViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Web.UI.IStateManager.SaveViewState() = System::Web::UI::IStateManager::SaveViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Speichert die Änderungen am Ansichtszustand in einem <see cref="T:System.Object" />.</summary>
        <returns>Das <see cref="T:System.Object" />, das die Ansichtszustandsänderungen enthält.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="T:System.Web.UI.StateItem" />
        <related type="Article" href="https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)">Übersicht über ASP.NET-Status</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.TrackViewState">
      <MemberSignature Language="C#" Value="void IStateManager.TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Sub TrackViewState () Implements IStateManager.TrackViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.TrackViewState() = System::Web::UI::IStateManager::TrackViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Weist die <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> an, Änderungen am Ansichtszustand nachzuverfolgen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nachdem diese Methode für ein Serversteuerelement aufgerufen wurde, das <xref:System.Web.UI.Control.IsTrackingViewState%2A> -Eigenschaft zurück `true`.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="T:System.Web.UI.StateItem" />
        <related type="Article" href="https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)">Übersicht über ASP.NET-Status</related>
      </Docs>
    </Member>
  </Members>
</Type>