<Type Name="TreeNodeCollection" FullName="System.Web.UI.WebControls.TreeNodeCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="79542c4b25b631281f79eaa1d06a22eebf673ef8" /><Meta Name="ms.sourcegitcommit" Value="e7974886b08aa83a8fb461e8550f31a7d4331ee3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/23/2019" /><Meta Name="ms.locfileid" Value="68392970" /></Metadata><TypeSignature Language="C#" Value="public sealed class TreeNodeCollection : System.Collections.ICollection, System.Web.UI.IStateManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TreeNodeCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Web.UI.IStateManager" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.TreeNodeCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TreeNodeCollection&#xA;Implements ICollection, IStateManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class TreeNodeCollection sealed : System::Collections::ICollection, System::Web::UI::IStateManager" />
  <TypeSignature Language="F#" Value="type TreeNodeCollection = class&#xA;    interface ICollection&#xA;    interface IEnumerable&#xA;    interface IStateManager" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IStateManager</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Stellt eine Auflistung von <see cref="T:System.Web.UI.WebControls.TreeNode" /> -Objekten im <see cref="T:System.Web.UI.WebControls.TreeView" /> -Steuerelement dar. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.TreeNodeCollection> -Klasse wird verwendet, um eine Auflistung von <xref:System.Web.UI.WebControls.TreeNode> -Objekten im <xref:System.Web.UI.WebControls.TreeView> -Steuerelement zu speichern und zu verwalten. Das <xref:System.Web.UI.WebControls.TreeView> -Steuerelement <xref:System.Web.UI.WebControls.TreeNodeCollection> verwendet die-Klasse in zwei seiner Eigenschaften. Die Stamm Knoten werden in der <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> -Eigenschaft und den ausgewählten Knoten in der <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A> -Eigenschaft gespeichert. Die <xref:System.Web.UI.WebControls.TreeNodeCollection> -Auflistung wird auch für die <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> -Eigenschaft verwendet, um untergeordnete Knoten zu speichern (sofern vorhanden).  
  
 Die <xref:System.Web.UI.WebControls.TreeNodeCollection> -Klasse unterstützt mehrere Möglichkeiten für den Zugriff auf die Elemente in der Auflistung:  
  
-   Verwenden Sie <xref:System.Web.UI.WebControls.TreeNodeCollection.Item%2A> den Indexer, um <xref:System.Web.UI.WebControls.TreeNode> ein-Objekt direkt an einem bestimmten Null basierten Index abzurufen.  
  
-   Verwenden Sie <xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A> die-Methode, um einen Enumerator zu erstellen, der zum Durchlaufen der Auflistung verwendet werden kann.  
  
-   Verwenden `foreach` SieC#() `For Each` oder (Visual Basic), um die Auflistung zu durchlaufen.  
  
-   Verwenden Sie <xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A> die-Methode, um den Inhalt der Auflistung in <xref:System.Array> ein-Objekt zu kopieren.  
  
 Sie können den <xref:System.Web.UI.WebControls.TreeNodeCollection> Programm gesteuert verwalten, indem Sie- <xref:System.Web.UI.WebControls.TreeNode> Objekte hinzufügen und entfernen. Um der Auflistung Knoten hinzuzufügen, verwenden Sie <xref:System.Web.UI.WebControls.TreeNodeCollection.Add%2A> die <xref:System.Web.UI.WebControls.TreeNodeCollection.AddAt%2A> -Methode oder die-Methode. Verwenden Sie die <xref:System.Web.UI.WebControls.TreeNodeCollection.Remove%2A>Methode, <xref:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt%2A>oder <xref:System.Web.UI.WebControls.TreeNodeCollection.Clear%2A> , um Knoten aus der Auflistung zu entfernen.  
  
> [!NOTE]
>  Wenn das <xref:System.Web.UI.WebControls.TreeView> -Steuerelement an eine Datenquelle gebunden ist <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> , <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> werden die-Auflistung und die-Auflistung bei jedem Auftreten der Bindung automatisch aufgefüllt. Alle Änderungen an den Sammlungen zwischen Bindungen gehen verloren. Um diese Änderungen beizubehalten, aktualisieren Sie entweder die Datenquelle, oder erstellen Sie die Sammlung bei jedem binden manuell neu.  
  
 Die <xref:System.Web.UI.WebControls.TreeNodeCollection> enthält Eigenschaften und Methoden, mit denen Sie Informationen über die Auflistung selbst abrufen können. Verwenden Sie die <xref:System.Web.UI.WebControls.TreeNodeCollection.Count%2A> -Eigenschaft, um herauszufinden, wie viele Elemente in der Auflistung sind. Wenn Sie bestimmen möchten, ob die Auflistung ein bestimmtes <xref:System.Web.UI.WebControls.TreeNode> Objekt enthält, verwenden Sie die <xref:System.Web.UI.WebControls.TreeNodeCollection.Contains%2A> -Methode. Um den Index eines <xref:System.Web.UI.WebControls.TreeNode> -Objekts in der Auflistung zu erhalten, verwenden Sie die <xref:System.Web.UI.WebControls.TreeNodeCollection.IndexOf%2A> -Methode.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie Sie Knotenprogramm gesteuert hinzufügen und aus einer <xref:System.Web.UI.WebControls.TreeNodeCollection>entfernen. Beachten Sie, <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> dass <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> die Eigenschaften und <xref:System.Web.UI.WebControls.TreeNodeCollection> ein-Objekt zurückgeben.  
  
 [!code-aspx-csharp[TreeNodeCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionAdd/CS/treenodecollectionaddcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionAdd/VB/treenodecollectionaddvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.TreeView" />
    <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
    <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
    <altmember cref="P:System.Web.UI.WebControls.TreeView.CheckedNodes" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNodeCollection.Item(System.Int32)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.CopyTo(System.Web.UI.WebControls.TreeNode[],System.Int32)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Add(System.Web.UI.WebControls.TreeNode)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.AddAt(System.Int32,System.Web.UI.WebControls.TreeNode)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Remove(System.Web.UI.WebControls.TreeNode)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(System.Int32)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Clear" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNodeCollection.Count" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Contains(System.Web.UI.WebControls.TreeNode)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.IndexOf(System.Web.UI.WebControls.TreeNode)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNodeCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNodeCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />-Klasse mit Standardwerten.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diesen Konstruktor, um eine neue Instanz der <xref:System.Web.UI.WebControls.TreeNodeCollection> -Klasse mit den Standardwerten zu initialisieren. Dieser Konstruktor wird häufig verwendet, wenn eine Auflistung von Stamm Knoten erstellt wird, in denen ein übergeordneter Knoten (oder Besitzer) nicht erforderlich ist.  
  
> [!NOTE]
>  Wenn Sie eine Auflistung von nicht-Stamm Knoten erstellen, sollten Sie den überladenen Konstruktor verwenden `owner` , der den-Parameter anstelle dieses Konstruktors annimmt, um den übergeordneten Knoten anzugeben.  
  
 Dieser Konstruktor wird hauptsächlich von Steuerelement Entwicklern verwendet.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CheckedNodes" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNodeCollection (System.Web.UI.WebControls.TreeNode owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.TreeNode owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.#ctor(System.Web.UI.WebControls.TreeNode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As TreeNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNodeCollection(System::Web::UI::WebControls::TreeNode ^ owner);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.TreeNodeCollection : System.Web.UI.WebControls.TreeNode -&gt; System.Web.UI.WebControls.TreeNodeCollection" Usage="new System.Web.UI.WebControls.TreeNodeCollection owner" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.WebControls.TreeNode" />
      </Parameters>
      <Docs>
        <param name="owner">Das <see cref="T:System.Web.UI.WebControls.TreeNode" />-Objekt, das den übergeordneten Knoten der Auflistung darstellt.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />-Klasse unter Verwendung des angegebenen übergeordneten Knotens (oder Besitzers).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diesen Konstruktor, um eine neue Instanz der <xref:System.Web.UI.WebControls.TreeNodeCollection> -Klasse mit dem angegebenen übergeordneten Knoten (oder Besitzer) zu initialisieren. Dieser Konstruktor wird häufig verwendet, wenn eine Auflistung von nicht-Stamm Knoten erstellt wird, in der Sie den übergeordneten Knoten angeben müssen.  
  
> [!NOTE]
>  Wenn Sie eine Auflistung von Stamm Knoten erstellen, sollten Sie den Parameter losen Konstruktor verwenden, da Stamm Knoten über keinen übergeordneten Knoten verfügen.  
  
 Dieser Konstruktor wird hauptsächlich von Steuerelement Entwicklern verwendet.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CheckedNodes" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Web.UI.WebControls.TreeNode child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Web.UI.WebControls.TreeNode child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.Add(System.Web.UI.WebControls.TreeNode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (child As TreeNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Web::UI::WebControls::TreeNode ^ child);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Web.UI.WebControls.TreeNode -&gt; unit" Usage="treeNodeCollection.Add child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Web.UI.WebControls.TreeNode" />
      </Parameters>
      <Docs>
        <param name="child">Das anzufügende <see cref="T:System.Web.UI.WebControls.TreeNode" />-Objekt.</param>
        <summary>Fügt das angegebene <see cref="T:System.Web.UI.WebControls.TreeNode" />-Objekt an das Ende des <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />-Objekts an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.TreeNodeCollection.Add%2A> die-Methode, um das <xref:System.Web.UI.WebControls.TreeNode> angegebene Objekt <xref:System.Web.UI.WebControls.TreeNodeCollection>an das Ende der anzufügen.  
  
> [!NOTE]
>  Mit können Sie NULL-Verweise (Nothing in Visual Basic) sowie doppelte <xref:System.Web.UI.WebControls.TreeNode> Objekte hinzufügen. <xref:System.Web.UI.WebControls.TreeNodeCollection>  
  
 Als Alternative können Sie ein <xref:System.Web.UI.WebControls.TreeNode> -Objekt <xref:System.Web.UI.WebControls.TreeNodeCollection> in einem bestimmten Index mit der <xref:System.Web.UI.WebControls.TreeNodeCollection.AddAt%2A> -Methode einfügen.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeNodeCollection.Add%2A> -Methode verwendet wird, um einen Knotenprogramm <xref:System.Web.UI.WebControls.TreeNodeCollection>gesteuert dem hinzuzufügen. Beachten Sie, <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> dass <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> die Eigenschaften und jeweils <xref:System.Web.UI.WebControls.TreeNodeCollection> ein-Objekt zurückgeben.  
  
 [!code-aspx-csharp[TreeNodeCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionAdd/CS/treenodecollectionaddcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionAdd/VB/treenodecollectionaddvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="M:System.Collections.ArrayList.Add(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.AddAt(System.Int32,System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Clear" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Contains(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Remove(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="AddAt">
      <MemberSignature Language="C#" Value="public void AddAt (int index, System.Web.UI.WebControls.TreeNode child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAt(int32 index, class System.Web.UI.WebControls.TreeNode child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.AddAt(System.Int32,System.Web.UI.WebControls.TreeNode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAt (index As Integer, child As TreeNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAt(int index, System::Web::UI::WebControls::TreeNode ^ child);" />
      <MemberSignature Language="F#" Value="member this.AddAt : int * System.Web.UI.WebControls.TreeNode -&gt; unit" Usage="treeNodeCollection.AddAt (index, child)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="child" Type="System.Web.UI.WebControls.TreeNode" />
      </Parameters>
      <Docs>
        <param name="index">Die Position des nullbasierten Indexes, an dem das <see cref="T:System.Web.UI.WebControls.TreeNode" />-Objekt eingefügt werden soll.</param>
        <param name="child">Das hinzuzufügende <see cref="T:System.Web.UI.WebControls.TreeNode" />-Objekt.</param>
        <summary>Fügt das angegebene <see cref="T:System.Web.UI.WebControls.TreeNode" />-Objekt an der angegebenen Indexposition in einem <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />-Objekt ein.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.TreeNodeCollection.AddAt%2A> die-Methode, um <xref:System.Web.UI.WebControls.TreeNode> das angegebene Objekt <xref:System.Web.UI.WebControls.TreeNodeCollection> am angegebenen Null basierten Index in den einzufügen.  
  
> [!NOTE]
>  Mit können Sie NULL-Verweise (Nothing in Visual Basic) sowie doppelte <xref:System.Web.UI.WebControls.TreeNode> Objekte einfügen. <xref:System.Web.UI.WebControls.TreeNodeCollection>  
  
 Als Alternative können Sie ein <xref:System.Web.UI.WebControls.TreeNode> -Objekt an das Ende <xref:System.Web.UI.WebControls.TreeNodeCollection> von anfügen, indem Sie die <xref:System.Web.UI.WebControls.TreeNodeCollection.Add%2A> -Methode verwenden.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeNodeCollection.AddAt%2A> -Methode verwendet wird, um einen Knotenprogramm <xref:System.Web.UI.WebControls.TreeNodeCollection>gesteuert dem hinzuzufügen. Beachten Sie, <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> dass <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> die Eigenschaften und jeweils <xref:System.Web.UI.WebControls.TreeNodeCollection> ein-Objekt zurückgeben.  
  
 [!code-aspx-csharp[TreeNodeCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionAdd/CS/treenodecollectionaddcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionAdd/VB/treenodecollectionaddvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="child" /> ist <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Add(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Clear" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Contains(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Remove(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="treeNodeCollection.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Leert das <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />-Objekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.TreeNodeCollection.Clear%2A> die-Methode, <xref:System.Web.UI.WebControls.TreeNode> um jedes- <xref:System.Web.UI.WebControls.TreeNodeCollection>Objekt aus der zu entfernen.  
  
> [!NOTE]
>  Um einen einzelnen Knoten aus der Auflistung zu entfernen, verwenden <xref:System.Web.UI.WebControls.TreeNodeCollection.Remove%2A> Sie <xref:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt%2A> die-Methode oder die-Methode.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeNodeCollection.Clear%2A> -Methode verwendet wird, um <xref:System.Web.UI.WebControls.TreeNodeCollection>eine Programm gesteuert zu leeren. Beachten Sie, <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> dass <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> die Eigenschaften und <xref:System.Web.UI.WebControls.TreeNodeCollection> ein-Objekt zurückgeben.  
  
 [!code-aspx-csharp[TreeNodeCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionAdd/CS/treenodecollectionaddcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionAdd/VB/treenodecollectionaddvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Add(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.AddAt(System.Int32,System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Contains(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Remove(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Web.UI.WebControls.TreeNode c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Web.UI.WebControls.TreeNode c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.Contains(System.Web.UI.WebControls.TreeNode)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (c As TreeNode) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Web::UI::WebControls::TreeNode ^ c);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Web.UI.WebControls.TreeNode -&gt; bool" Usage="treeNodeCollection.Contains c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Web.UI.WebControls.TreeNode" />
      </Parameters>
      <Docs>
        <param name="c">Das zu suchende <see cref="T:System.Web.UI.WebControls.TreeNode" />-Objekt.</param>
        <summary>Bestimmt, ob das angegebene <see cref="T:System.Web.UI.WebControls.TreeNode" />-Objekt in der Auflistung vorhanden ist.</summary>
        <returns><see langword="true" />, wenn das angegebene <see cref="T:System.Web.UI.WebControls.TreeNode" />-Objekt in der Auflistung enthalten ist, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.TreeNodeCollection.Contains%2A> die-Methode, um <xref:System.Web.UI.WebControls.TreeNode> zu bestimmen, ob ein <xref:System.Web.UI.WebControls.TreeNodeCollection>-Objekt in enthalten ist. Diese Methode wird häufig verwendet, um zu testen, ob ein <xref:System.Web.UI.WebControls.TreeNode> -Objekt vorhanden ist, bevor eine Aufgabe durchgeführt wird, z. b. das Hinzufügen oder Entfernen des Knotens aus der Auflistung  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeNodeCollection.Contains%2A> -Methode verwendet wird, um zu bestimmen, ob <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> der ausgewählte Knoten in der Auflistung ist. Beachten Sie, <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> dass die Eigenschaft <xref:System.Web.UI.WebControls.TreeNodeCollection> ein-Objekt zurückgibt.  
  
 [!code-aspx-csharp[TreeNodeCollectionIndexOf#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionIndexOf/CS/treenodecollectionindexofcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionIndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionIndexOf/VB/treenodecollectionindexofvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Add(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.AddAt(System.Int32,System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Clear" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.IndexOf(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Remove(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Web.UI.WebControls.TreeNode[] nodeArray, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Web.UI.WebControls.TreeNode[] nodeArray, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.CopyTo(System.Web.UI.WebControls.TreeNode[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (nodeArray As TreeNode(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Web::UI::WebControls::TreeNode ^&gt; ^ nodeArray, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.Web.UI.WebControls.TreeNode[] * int -&gt; unit" Usage="treeNodeCollection.CopyTo (nodeArray, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeArray" Type="System.Web.UI.WebControls.TreeNode[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="nodeArray">Ein nullbasiertes Array von <see cref="T:System.Web.UI.WebControls.TreeNode" />-Objekten, das die kopierten Elemente aus der <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> aufnimmt.</param>
        <param name="index">Die Position im Zielarray, bei der mit dem Empfang des kopierten Inhalts begonnen werden soll.</param>
        <summary>Kopiert alle Elemente aus dem <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />-Objekt in ein kompatibles eindimensionales Array von <see cref="T:System.Web.UI.WebControls.TreeNode" />-Objekten, wobei am angegebenen Index des Zielarrays begonnen wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A> die-Methode, um den Inhalt <xref:System.Web.UI.WebControls.TreeNodeCollection> von in das angegebene null basierte <xref:System.Array?displayProperty=nameWithType> Objekt zu kopieren. Elemente werden beginnend am angegebenen Index des Ziel Arrays kopiert. Mit dem <xref:System.Array?displayProperty=nameWithType> -Objekt können Sie dann die Array Syntax verwenden, um auf die Elemente <xref:System.Web.UI.WebControls.TreeNodeCollection>im zuzugreifen.  
  
 Als Alternative können Sie auch die <xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A> -Methode verwenden, um einen Enumerator zu erstellen, der für den Zugriff auf die Elemente in der Auflistung verwendet werden kann.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A> -Methode verwendet wird, um die <xref:System.Web.UI.WebControls.TreeNodeCollection> Werte einer in ein Array zu kopieren. Beachten Sie, <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> dass die Eigenschaft <xref:System.Web.UI.WebControls.TreeNodeCollection> ein-Objekt zurückgibt.  
  
 [!code-aspx-csharp[TreeNodeCollectionCopyTo#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionCopyTo/CS/treenodecollectioncopytocs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionCopyTo#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionCopyTo/VB/treenodecollectioncopytovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="T:System.Array" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeCollection.Item(System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.CopyTo(System.Array)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNodeCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Web.UI.WebControls.TreeNodeCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der Elemente im <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />-Objekt ab.</summary>
        <value>Die Anzahl der Elemente in der <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.TreeNodeCollection.Count%2A> die-Eigenschaft, um die Anzahl der Elemente <xref:System.Web.UI.WebControls.TreeNodeCollection>in einer zu bestimmen. Diese Eigenschaft wird häufig beim Durchlaufen einer Auflistung verwendet, um die obere Grenze der Auflistung zu bestimmen. Die <xref:System.Web.UI.WebControls.TreeNodeCollection.Count%2A> -Eigenschaft wird auch häufig verwendet, um zu bestimmen, ob eine Auflistung leer ist.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeNodeCollection.Count%2A> -Eigenschaft verwendet wird, um die Anzahl der <xref:System.Web.UI.WebControls.TreeNodeCollection>Elemente in der zu bestimmen. Anschließend führt er einen Preorder-Durchlauf des <xref:System.Web.UI.WebControls.TreeView> Steuer Elements aus, um den Text jedes Knotens anzuzeigen.  
  
 [!code-aspx-csharp[TreeNodeCollectionCount#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionCount/CS/treenodecollectioncountcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionCount#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionCount/VB/treenodecollectioncountvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Collections.ArrayList.Count" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CheckedNodes" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="treeNodeCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen Enumerator zurück, mit dem ein <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />-Objekt durchlaufen werden kann.</summary>
        <returns>Ein Enumerator, mit dem die <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> durchlaufen werden kann.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A> die-Methode, um einen Enumerator zu erstellen, der problemlos durchlaufen werden kann, um <xref:System.Web.UI.WebControls.TreeNodeCollection>jedes Element in der zu erhalten. Verwenden Sie die <xref:System.Collections.IEnumerator.Current%2A?displayProperty=nameWithType> -Eigenschaft, um das Element zu erhalten, auf das derzeit im Enumerator verwiesen wird. Verwenden Sie <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=nameWithType> die-Methode, um zum nächsten Element zu wechseln. Wenn Sie den Enumerator zurück an den Anfang der Auflistung verschieben müssen, verwenden Sie die <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=nameWithType> -Methode.  
  
> [!NOTE]
>  Nachdem Sie einen Enumerator erstellt oder die <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=nameWithType> -Methode verwendet haben, müssen Sie die <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=nameWithType> -Methode aufzurufen. Andernfalls ist das durch die <xref:System.Collections.IEnumerator.Current%2A?displayProperty=nameWithType> -Eigenschaft dargestellte Element nicht definiert.  
  
 Als Alternative können Sie auch die <xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A> -Methode verwenden, um ein <xref:System.Array?displayProperty=nameWithType> Objekt zu erstellen, das für den Zugriff auf die Elemente in der Auflistung verwendet werden kann. Eine weitere Alternative ist die Verwendung `foreach` einer `For Each` -oder-Struktur, um die Auflistung zu durchlaufen.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A> -Methode verwendet wird, um einen Enumerator zu erstellen, <xref:System.Web.UI.WebControls.TreeView> der Stamm Knoten des-Steuer Elements enthält.  
  
 [!code-aspx-csharp[TreeNodeCollectionGetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionGetEnumerator/CS/treenodecollectiongetenumeratorcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionGetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionGetEnumerator/VB/treenodecollectiongetenumeratorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeCollection.Item(System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.GetEnumerator" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.CopyTo(System.Web.UI.WebControls.TreeNode[],System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Web.UI.WebControls.TreeNode value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Web.UI.WebControls.TreeNode value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.IndexOf(System.Web.UI.WebControls.TreeNode)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As TreeNode) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Web::UI::WebControls::TreeNode ^ value);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Web.UI.WebControls.TreeNode -&gt; int" Usage="treeNodeCollection.IndexOf value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.UI.WebControls.TreeNode" />
      </Parameters>
      <Docs>
        <param name="value">Das zu suchende <see cref="T:System.Web.UI.WebControls.TreeNode" />-Objekt.</param>
        <summary>Ruft den Index des angegebenen <see cref="T:System.Web.UI.WebControls.TreeNode" />-Objekts ab.</summary>
        <returns>Der nullbasierte Index des ersten Vorkommens von <paramref name="value" /> in der <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />, sofern gefunden, andernfalls -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.TreeNodeCollection.IndexOf%2A> die-Methode, um den NULL basierten Index des angegebenen <xref:System.Web.UI.WebControls.TreeNode> Objekts im <xref:System.Web.UI.WebControls.TreeNodeCollection> -Objekt zu ermitteln. Wenn sich der Knoten nicht in der Auflistung befindet, gibt die Methode-1 zurück.  
  
> [!NOTE]
>  Wenn der angegebene Knoten mehrmals in der Auflistung angezeigt wird, wird der Index des ersten Vorkommens zurückgegeben.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeNodeCollection.IndexOf%2A> -Methode verwendet wird, um den Index eines Stamm Knotens zu ermitteln. Beachten Sie, <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> dass die Eigenschaft <xref:System.Web.UI.WebControls.TreeNodeCollection> ein-Objekt zurückgibt.  
  
 [!code-aspx-csharp[TreeNodeCollectionIndexOf#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionIndexOf/CS/treenodecollectionindexofcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionIndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionIndexOf/VB/treenodecollectionindexofvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="M:System.Collections.ArrayList.IndexOf(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Contains(System.Web.UI.WebControls.TreeNode)" />
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Zugriff auf die <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> synchronisiert (threadsicher) ist.</summary>
        <value><see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized%2A> -Eigenschaft wird verwendet, um anzugeben, ob <xref:System.Web.UI.WebControls.TreeNodeCollection> der Zugriff auf synchronisiert (Thread sicher) ist. Diese Eigenschaft wird von der <xref:System.Collections.ICollection?displayProperty=nameWithType> -Klasse abgeleitet und wird überschrieben, sodass immer zurückgegeben `false`wird.  
  
 Weitere Informationen zur <xref:System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized%2A> -Eigenschaft finden Sie unter der <xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=nameWithType> -Eigenschaft der <xref:System.Collections.ICollection?displayProperty=nameWithType> -Schnittstelle.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNode this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNode Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNodeCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNode ^ default[int] { System::Web::UI::WebControls::TreeNode ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Web.UI.WebControls.TreeNode" Usage="System.Web.UI.WebControls.TreeNodeCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Der nullbasierte Index des abzurufenden <see cref="T:System.Web.UI.WebControls.TreeNode" />-Objekts.</param>
        <summary>Ruft das <see cref="T:System.Web.UI.WebControls.TreeNode" />-Objekt am angegebenen Index im <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />-Objekt ab.</summary>
        <value>Das <see cref="T:System.Web.UI.WebControls.TreeNode" />-Objekt am angegebenen Index in der <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diesen Indexer, um <xref:System.Web.UI.WebControls.TreeNode> mithilfe der <xref:System.Web.UI.WebControls.TreeNodeCollection> Array Notation auf ein-Objekt vom angegebenen Index aus zuzugreifen. Der Indexer ermöglicht es Ihnen, ein <xref:System.Web.UI.WebControls.TreeNode> -Objekt in der Auflistung direkt zu ändern oder zu ersetzen. Die Auflistung ist NULL basiert.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie der Indexer verwendet wird, um auf ein <xref:System.Web.UI.WebControls.TreeNodeCollection>Element im zuzugreifen. Beachten Sie, <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> dass <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> die Eigenschaften und <xref:System.Web.UI.WebControls.TreeNodeCollection> ein-Objekt zurückgeben.  
  
 [!code-aspx-csharp[TreeNodeCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionAdd/CS/treenodecollectionaddcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionAdd/VB/treenodecollectionaddvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.CopyTo(System.Web.UI.WebControls.TreeNode[],System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Web.UI.WebControls.TreeNode value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Web.UI.WebControls.TreeNode value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.Remove(System.Web.UI.WebControls.TreeNode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (value As TreeNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Web::UI::WebControls::TreeNode ^ value);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Web.UI.WebControls.TreeNode -&gt; unit" Usage="treeNodeCollection.Remove value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.UI.WebControls.TreeNode" />
      </Parameters>
      <Docs>
        <param name="value">Das zu entfernende <see cref="T:System.Web.UI.WebControls.TreeNode" />-Objekt.</param>
        <summary>Entfernt das angegebene <see cref="T:System.Web.UI.WebControls.TreeNode" />-Objekt aus dem <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />-Objekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.TreeNodeCollection.Remove%2A> die-Methode, um den angegebenen Knoten aus der Auflistung zu entfernen. Alle Elemente, die diesem Knoten folgen, werden dann nach oben verschoben, um die freie Position auszufüllen. Die Indizes der verschoanderen Elemente werden ebenfalls aktualisiert.  
  
> [!NOTE]
>  Der <xref:System.Web.UI.WebControls.TreeNodeCollection> kann NULL-Verweise (Nothing in Visual Basic) sowie doppelte <xref:System.Web.UI.WebControls.TreeNode> Objekte enthalten.  
  
 Als Alternative können Sie einen Knoten an einem bestimmten Index entfernen, indem Sie die <xref:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt%2A> -Methode verwenden. Sie können auch jeden Knoten in der Auflistung entfernen, indem Sie <xref:System.Web.UI.WebControls.TreeNodeCollection.Clear%2A> die-Methode verwenden.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeNodeCollection.Remove%2A> -Methode verwendet wird, um einen Knotenprogramm <xref:System.Web.UI.WebControls.TreeNodeCollection>gesteuert aus dem zu entfernen. Beachten Sie, <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> dass <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> die Eigenschaften und jeweils <xref:System.Web.UI.WebControls.TreeNodeCollection> ein-Objekt zurückgeben.  
  
 [!code-aspx-csharp[TreeNodeCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionAdd/CS/treenodecollectionaddcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionAdd/VB/treenodecollectionaddvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" /> ist <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Add(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.AddAt(System.Int32,System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Clear" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Contains(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Collections.ArrayList.Remove(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int -&gt; unit" Usage="treeNodeCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Die nullbasierte Indexposition des zu entfernenden Knotens.</param>
        <summary>Entfernt das <see cref="T:System.Web.UI.WebControls.TreeNode" />-Objekt an der angegebenen Indexposition aus dem <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />-Objekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt%2A> die-Methode, <xref:System.Web.UI.WebControls.TreeNode> um das Objekt an der angegebenen Null basierten Indexposition aus <xref:System.Web.UI.WebControls.TreeNodeCollection>einer zu entfernen. Alle Elemente, die diesem Knoten folgen, werden dann nach oben verschoben, um die freie Position auszufüllen. Die Indizes der verschoanderen Elemente werden ebenfalls aktualisiert.  
  
> [!NOTE]
>  Der <xref:System.Web.UI.WebControls.TreeNodeCollection> kann NULL-Verweise (Nothing in Visual Basic) sowie doppelte <xref:System.Web.UI.WebControls.TreeNode> Objekte enthalten.  
  
 Als Alternative können Sie ein bestimmtes <xref:System.Web.UI.WebControls.TreeNode> Objekt mithilfe der <xref:System.Web.UI.WebControls.TreeNodeCollection.Remove%2A> -Methode entfernen. Sie können auch jeden Knoten in der Auflistung entfernen, indem Sie <xref:System.Web.UI.WebControls.TreeNodeCollection.Clear%2A> die-Methode verwenden.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt%2A> -Methode verwendet wird, um einen Knotenprogramm <xref:System.Web.UI.WebControls.TreeNodeCollection>gesteuert aus dem zu entfernen. Beachten Sie, <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> dass <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> die Eigenschaften und jeweils <xref:System.Web.UI.WebControls.TreeNodeCollection> ein-Objekt zurückgeben.  
  
 [!code-aspx-csharp[TreeNodeCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionAdd/CS/treenodecollectionaddcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionAdd/VB/treenodecollectionaddvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Add(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.AddAt(System.Int32,System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Clear" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Contains(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Remove(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Collections.ArrayList.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNodeCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Web.UI.WebControls.TreeNodeCollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Objekt ab, mit dem der Zugriff auf das <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />-Objekt synchronisiert werden kann.</summary>
        <value>Ein <see cref="T:System.Object" />, mit dem der Zugriff auf die <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> synchronisiert werden kann.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.TreeNodeCollection.SyncRoot%2A> -Eigenschaft stellt eine synchronisierte Version <xref:System.Web.UI.WebControls.TreeNodeCollection> von bereit, die mit dem Synchronisierungs Code (Threading) verwendet werden kann.  
  
> [!CAUTION]
>  Die <xref:System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized%2A> -Eigenschaft dieser Klasse gibt immer `false`zurück, was darauf hinweist <xref:System.Web.UI.WebControls.TreeNodeCollection> , dass die Klasse nicht synchronisiert (nicht Thread sicher) ist.  
  
 Beim Synchronisieren <xref:System.Web.UI.WebControls.TreeNodeCollection.SyncRoot%2A> <xref:System.Web.UI.WebControls.TreeNodeCollection> von Code müssen Vorgänge für das-Objekt von ,nichtdirektaufdemselbstdurchgeführtwerden.<xref:System.Web.UI.WebControls.TreeNodeCollection> Dies gewährleistet die einwandfreie Funktion von Auflistungen, die von anderen Objekten abgeleitet sind. Insbesondere wird die ordnungsgemäße Synchronisierung mit anderen Threads verwaltet, die das <xref:System.Web.UI.WebControls.TreeNodeCollection> Objekt möglicherweise gleichzeitig ändern.  
  
> [!NOTE]
>  Das in dieser Implementierung zurückgegebene Objekt ist <xref:System.Collections.ArrayList?displayProperty=nameWithType> das Objekt, das zum <xref:System.Web.UI.WebControls.TreeNode> Speichern der Objekte in der Auflistung verwendet wird.  
  
 Die Enumeration einer Auflistung ist systemintern keine threadsichere Prozedur. Auch wenn eine Sammlung synchronisiert wird, können andere Threads die Auflistung weiterhin ändern, was bewirkt, dass der Enumerator eine Ausnahme auslöst. Um während der Enumeration Threadsicherheit zu gewährleisten, können Sie entweder die Auflistung während der gesamten Enumeration sperren oder die Ausnahmen, die aus von anderen Threads stammenden Änderungen resultieren, abfangen.  
  
 Weitere Informationen zur <xref:System.Web.UI.WebControls.DataGridColumnCollection.SyncRoot%2A> -Eigenschaft finden Sie unter der <xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=nameWithType> -Eigenschaft der <xref:System.Collections.ICollection?displayProperty=nameWithType> -Schnittstelle.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Collections.ArrayList.SyncRoot" />
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">Ein nullbasiertes <see cref="T:System.Array" />-Objekt, in das Elemente aus <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> kopiert werden.</param>
        <param name="index">Die Position im Zielarray, bei der mit dem Empfang des kopierten Inhalts begonnen werden soll.</param>
        <summary>Kopiert alle Elemente aus dem <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />-Objekt in ein kompatibles eindimensionales <see cref="T:System.Array" />, wobei bei dem angegebenen Index des Zielarrays begonnen wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A> die-Methode, um den Inhalt <xref:System.Web.UI.WebControls.TreeNodeCollection> von in das angegebene null basierte <xref:System.Array?displayProperty=nameWithType> Objekt zu kopieren. Elemente werden beginnend am angegebenen Index des Ziel Arrays kopiert. Mit dem <xref:System.Array?displayProperty=nameWithType> -Objekt können Sie dann die Array Syntax verwenden, um auf die Elemente <xref:System.Web.UI.WebControls.TreeNodeCollection>im zuzugreifen.  
  
 Als Alternative können Sie auch die <xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A> -Methode verwenden, um einen Enumerator zu erstellen, der für den Zugriff auf die Elemente in der Auflistung verwendet werden kann.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A> -Methode verwendet wird, um die <xref:System.Web.UI.WebControls.TreeNodeCollection> Werte einer in ein Array zu kopieren. Beachten Sie, <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> dass die Eigenschaft <xref:System.Web.UI.WebControls.TreeNodeCollection> ein-Objekt zurückgibt.  
  
 [!code-aspx-csharp[TreeNodeCollectionCopyTo#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionCopyTo/CS/treenodecollectioncopytocs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionCopyTo#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionCopyTo/VB/treenodecollectioncopytovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="array" /> ist kein Array von <see cref="T:System.Web.UI.WebControls.TreeNode" />-Objekten.</exception>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="T:System.Array" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeCollection.Item(System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.CopyTo(System.Array)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.IsTrackingViewState">
      <MemberSignature Language="C#" Value="bool System.Web.UI.IStateManager.IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsTrackingViewState As Boolean Implements IStateManager.IsTrackingViewState" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Web::UI::IStateManager::IsTrackingViewState { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />-Objekt Änderungen des Ansichtszustands speichert.</summary>
        <value><see langword="true" />, wenn das Steuerelement für das Speichern seines Zustands markiert ist, andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Control.ViewState" />
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.Control.SaveViewState" />
        <related type="Article" href="https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)">ASP.net State Management (Übersicht)</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.LoadViewState">
      <MemberSignature Language="C#" Value="void IStateManager.LoadViewState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.LoadViewState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub LoadViewState (state As Object) Implements IStateManager.LoadViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.LoadViewState(System::Object ^ state) = System::Web::UI::IStateManager::LoadViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">Ein <see cref="T:System.Object" />, das die gespeicherten Ansichtszustandswerte enthält.</param>
        <summary>Lädt den zuvor gespeicherten Ansichtszustand des <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />-Objekts.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="T:System.Web.UI.StateItem" />
        <related type="Article" href="https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)">ASP.net State Management (Übersicht)</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.SaveViewState">
      <MemberSignature Language="C#" Value="object IStateManager.SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Web.UI.IStateManager.SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Function SaveViewState () As Object Implements IStateManager.SaveViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Web.UI.IStateManager.SaveViewState() = System::Web::UI::IStateManager::SaveViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Speichert die Änderungen am Ansichtszustand in einem <see cref="T:System.Object" />.</summary>
        <returns>Das <see cref="T:System.Object" />, das die Ansichtszustandsänderungen enthält.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="T:System.Web.UI.StateItem" />
        <related type="Article" href="https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)">ASP.net State Management (Übersicht)</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.TrackViewState">
      <MemberSignature Language="C#" Value="void IStateManager.TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Sub TrackViewState () Implements IStateManager.TrackViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.TrackViewState() = System::Web::UI::IStateManager::TrackViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Weist die <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> an, Änderungen am Ansichtszustand nachzuverfolgen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nachdem diese Methode für ein Server Steuerelement aufgerufen wurde, gibt <xref:System.Web.UI.Control.IsTrackingViewState%2A> die-Eigenschaft `true`zurück.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="T:System.Web.UI.StateItem" />
        <related type="Article" href="https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)">ASP.net State Management (Übersicht)</related>
      </Docs>
    </Member>
  </Members>
</Type>