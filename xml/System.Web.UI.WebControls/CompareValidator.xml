<Type Name="CompareValidator" FullName="System.Web.UI.WebControls.CompareValidator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="274e4d70964b9a1ee127c545331c76e64c0c95d8" /><Meta Name="ms.sourcegitcommit" Value="f9576bf8c61e3d46834aeeff50f858359f2a99ba" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="02/09/2020" /><Meta Name="ms.locfileid" Value="77107277" /></Metadata><TypeSignature Language="C#" Value="public class CompareValidator : System.Web.UI.WebControls.BaseCompareValidator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CompareValidator extends System.Web.UI.WebControls.BaseCompareValidator" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.CompareValidator" />
  <TypeSignature Language="VB.NET" Value="Public Class CompareValidator&#xA;Inherits BaseCompareValidator" />
  <TypeSignature Language="C++ CLI" Value="public ref class CompareValidator : System::Web::UI::WebControls::BaseCompareValidator" />
  <TypeSignature Language="F#" Value="type CompareValidator = class&#xA;    inherit BaseCompareValidator" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.BaseCompareValidator</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.ToolboxData("&lt;{0}:CompareValidator runat="server" ErrorMessage="CompareValidator"&gt;&lt;/{0}:CompareValidator&gt;")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.Web.UI.ToolboxData("&lt;{0}:CompareValidator runat=server ErrorMessage="CompareValidator"&gt;&lt;/{0}:CompareValidator&gt;")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Vergleicht den Wert, der vom Benutzer in ein Eingabesteuerelement eingegeben wurde, mit dem in ein anderes Eingabesteuerelement eingegebenen Wert oder mit einem konstanten Wert.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 Verwenden Sie das <xref:System.Web.UI.WebControls.CompareValidator>-Steuerelement, um den Wert, der vom Benutzer in ein Eingabe Steuerelement eingegeben wurde, wie z. b. ein <xref:System.Web.UI.WebControls.TextBox> Steuerelement, mit dem in ein anderes Eingabe Steuerelement eingegebenen Wert oder einen konstanten Wert Das <xref:System.Web.UI.WebControls.CompareValidator> Steuerelement übergibt die Validierung, wenn der Wert des Eingabe Steuer Elements mit den Kriterien übereinstimmt, die durch die Eigenschaften <xref:System.Web.UI.WebControls.CompareValidator.Operator%2A>, <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A>und/oder <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> angegeben werden.

 Sie können auch das <xref:System.Web.UI.WebControls.CompareValidator>-Steuerelement verwenden, um anzugeben, ob der in ein Eingabe Steuerelement eingegebene Wert in den Datentyp konvertiert werden kann, der von der <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=nameWithType>-Eigenschaft angegeben wird.

 Geben Sie das zu überprüfende Eingabe Steuerelement durch Festlegen der <xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A>-Eigenschaft an. Wenn Sie ein bestimmtes Eingabe Steuerelement mit einem anderen Eingabe Steuerelement vergleichen möchten, legen Sie die <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A>-Eigenschaft fest, um das Steuerelement anzugeben, mit dem verglichen wird.

> [!NOTE]
>  Wenn der Wert, der in das Eingabe Steuerelement eingegeben wurde, das von der <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A>-Eigenschaft angegeben wurde, nicht in den Datentyp konvertiert werden kann, der von der <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=nameWithType>-Eigenschaft angegeben wird, aber der Wert, der in das von der <xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A>-Eigenschaft angegebene Eingabe Steuerelement eingegeben wurde, kann konvertiert werden Daher sollten Sie auch eine <xref:System.Web.UI.WebControls.CompareValidator> oder <xref:System.Web.UI.WebControls.RangeValidator>-Steuerelement auf dem Eingabe Steuerelement platzieren, das von der <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A>-Eigenschaft angegeben wird.

 Anstatt den Wert eines Eingabe Steuer Elements mit einem anderen Eingabe Steuerelement zu vergleichen, können Sie den Wert eines Eingabe Steuer Elements mit einem konstanten Wert vergleichen. Geben Sie den konstanten Wert an, mit dem verglichen werden soll, indem Sie die <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A>-Eigenschaft

> [!NOTE]
>  Wenn der durch die <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A>-Eigenschaft angegebene Wert nicht in den Datentyp konvertiert werden kann, der von der <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=nameWithType>-Eigenschaft angegeben wird, wird eine Ausnahme ausgelöst. Stellen Sie sicher, dass Sie den Datentyp eines Werts überprüfen, bevor Sie ihn Programm gesteuert der <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A>-Eigenschaft zuweisen.

> [!NOTE]
>  Legen Sie die <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A>-Eigenschaft und die <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A>-Eigenschaft nicht gleichzeitig fest. Sie können entweder den Wert eines Eingabe Steuer Elements mit einem anderen Eingabe Steuerelement oder mit einem konstanten Wert vergleichen. Wenn beide Eigenschaften festgelegt sind, hat die <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A>-Eigenschaft Vorrang.

 Verwenden Sie die <xref:System.Web.UI.WebControls.CompareValidator.Operator%2A>-Eigenschaft, um den Typ des auszuführenden Vergleichs anzugeben, z. b. größer als, gleich usw. Wenn Sie die <xref:System.Web.UI.WebControls.CompareValidator.Operator%2A>-Eigenschaft auf `ValidationCompareOperator.DataTypeCheck`festlegen, ignoriert das <xref:System.Web.UI.WebControls.CompareValidator>-Steuerelement die Eigenschaften <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> und <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> und gibt einfach an, ob der in das Eingabe Steuerelement eingegebene Wert in den Datentyp konvertiert werden kann, der durch die <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=nameWithType>-Eigenschaft angegeben wird.

 Die <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=nameWithType>-Eigenschaft wird verwendet, um den Datentyp beider Vergleichswerte anzugeben. Beide Werte werden automatisch in diesen Datentyp konvertiert, bevor die Vergleichsoperation ausgeführt wird.

> [!IMPORTANT]
>  Wenn die <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A>-Eigenschaft auf <xref:System.Web.UI.WebControls.ValidationDataType.Date> festgelegt ist und der aktuelle Kalendertyp nicht Gregorianisch ist, führt das Validierungs Steuerelement nur eine serverseitige Validierung aus. Das Validierungs Steuerelement-Client Skript unterstützt nur gregorianische Kalender.

 In der folgenden Tabelle werden die verschiedenen Datentypen aufgelistet, die verglichen werden können.

|Datentyp|Beschreibung|
|---------------|-----------------|
|`String`|Ein String-Datentyp.|
|`Integer`|Ein ganzzahliger 32-Bit-Datentyp mit Vorzeichen.|
|`Double`|Ein Datentyp für Gleit Komma Zahlen mit doppelter Genauigkeit.|
|`Date`|Ein Date-Datentyp.|
|`Currency`|Ein Decimal-Datentyp. Er darf keine Währungssymbole enthalten.|

> [!NOTE]
>  Wenn das Eingabe Steuerelement leer ist, werden keine Validierungs Funktionen aufgerufen und die Überprüfung ist erfolgreich. Verwenden Sie ein <xref:System.Web.UI.WebControls.RequiredFieldValidator>-Steuerelement, um den Benutzer zur Eingabe von Daten in das Eingabe Steuerelement aufzufordern.

> [!NOTE]
>  Wenn Sie das <xref:System.Web.UI.WebControls.CompareValidator>-Steuerelement in einem <xref:System.Web.UI.UpdatePanel>-Steuerelement verwenden, stellen Sie sicher, dass sich das Validierungs Steuerelement und das Steuerelement, dem es zugeordnet ist, im gleichen Bereich befinden. Weitere Informationen zur Verwendung des <xref:System.Web.UI.UpdatePanel>-Steuer Elements für Teil Aktualisierungen von Seiten finden Sie unter [Übersicht über das Teil Rendering von Seiten](https://docs.microsoft.com/previous-versions/aspnet/bb386573(v=vs.100)).

 Weitere Informationen zu Validierungs Steuerelementen finden Sie unter <xref:System.Web.UI.WebControls.BaseValidator>.

## <a name="accessibility"></a>Zugriff
 Weitere Informationen zur Verwendung dieses Steuerelement so konfigurieren, dass sie Markup generiert, das Accessibility Standards entspricht, finden Sie unter [Barrierefreiheit in Visual Studio und ASP.NET](https://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13) und [ASP.NET-Steuerelemente und Barrierefreiheit](https://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).



## Examples
 Im folgenden Codebeispiel wird veranschaulicht, wie ein <xref:System.Web.UI.WebControls.CompareValidator>-Steuerelement verwendet wird, um die Werte in zwei <xref:System.Web.UI.WebControls.TextBox>-Steuerelementen zu vergleichen.

> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).

 [!code-aspx-csharp[Classic CompareValidator Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CompareValidator Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic CompareValidator Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CompareValidator Example/VB/sourcevb.aspx#1)]

 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.BaseValidator" />
    <altmember cref="T:System.Web.UI.WebControls.BaseCompareValidator" />
    <altmember cref="T:System.Web.UI.WebControls.TextBox" />
    <altmember cref="P:System.Web.UI.WebControls.BaseValidator.ControlToValidate" />
    <altmember cref="P:System.Web.UI.WebControls.CompareValidator.ControlToCompare" />
    <altmember cref="P:System.Web.UI.WebControls.CompareValidator.ValueToCompare" />
    <altmember cref="P:System.Web.UI.WebControls.CompareValidator.Operator" />
    <altmember cref="P:System.Web.UI.WebControls.BaseCompareValidator.Type" />
    <altmember cref="T:System.Web.UI.WebControls.RequiredFieldValidator" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompareValidator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.CompareValidator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CompareValidator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.CompareValidator" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Der Parameter lose Konstruktor initialisiert alle Felder mit ihren Standardwerten.

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.BaseCompareValidator" />
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.CompareValidator.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.AddAttributesToRender : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="compareValidator.AddAttributesToRender writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Ein <see cref="T:System.Web.UI.HtmlTextWriter" />, der den Ausgabestream für das Rendering auf dem Client enthält.</param>
        <summary>Fügt die Attribute dieses Steuerelements dem Ausgabestream für das Rendern auf dem Client hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie die <xref:System.Web.UI.WebControls.CompareValidator.AddAttributesToRender%2A>-Methode in einem benutzerdefinierten Server Steuerelement überschreiben, sodass die <xref:System.Web.UI.WebControls.CompareValidator> Fehlermeldung immer fett angezeigt wird.

> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).

 [!code-aspx-csharp[CustomCompareValidatorAddAttributesToRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomCompareValidatorAddAttributesToRender/CS/custom_comparevalidator_addattributestorendercs.aspx#1)]
 [!code-aspx-vb[CustomCompareValidatorAddAttributesToRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomCompareValidatorAddAttributesToRender/VB/custom_comparevalidator_addattributestorendervb.aspx#1)]
[!code-csharp[CustomCompareValidatorAddAttributesToRender#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomCompareValidatorAddAttributesToRender/CS/custom_comparevalidator_addattributestorender.cs#2)]
[!code-vb[CustomCompareValidatorAddAttributesToRender#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomCompareValidatorAddAttributesToRender/VB/custom_comparevalidator_addattributestorender.vb#2)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlPropertiesValid">
      <MemberSignature Language="C#" Value="protected override bool ControlPropertiesValid ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ControlPropertiesValid() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.CompareValidator.ControlPropertiesValid" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ControlPropertiesValid () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ControlPropertiesValid();" />
      <MemberSignature Language="F#" Value="override this.ControlPropertiesValid : unit -&gt; bool" Usage="compareValidator.ControlPropertiesValid " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Überprüft die Eigenschaften des Steuerelements auf gültige Werte.</summary>
        <returns><see langword="true" />, wenn die Steuerelementeigenschaften gültig sind, anderenfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie die <xref:System.Web.UI.WebControls.CompareValidator.ControlPropertiesValid%2A>-Methode in einem benutzerdefinierten Server Steuerelement überschreiben, sodass Sie immer den Wert der Visible-Eigenschaft zurückgibt, sofern sich die <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A>-Eigenschaft des <xref:System.Web.UI.WebControls.CompareValidator>-Steuer Elements auf der Seite befindet und Validierungs Eigenschaften enthält.

> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).

 [!code-aspx-csharp[CustomCompareValidatorControlPropertiesValid#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomCompareValidatorControlPropertiesValid/CS/custom_comparevalidator_controlpropertiesvalidcs.aspx#1)]
 [!code-aspx-vb[CustomCompareValidatorControlPropertiesValid#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomCompareValidatorControlPropertiesValid/VB/custom_comparevalidator_controlpropertiesvalidvb.aspx#1)]
[!code-csharp[CustomCompareValidatorControlPropertiesValid#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomCompareValidatorControlPropertiesValid/CS/custom_comparevalidator_controlpropertiesvalid.cs#2)]
[!code-vb[CustomCompareValidatorControlPropertiesValid#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomCompareValidatorControlPropertiesValid/VB/custom_comparevalidator_controlpropertiesvalid.vb#2)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><see cref="P:System.Web.UI.WebControls.BaseValidator.ControlToValidate" /> und <see cref="P:System.Web.UI.WebControls.CompareValidator.ControlToCompare" /> verfügen über dasselbe <see cref="P:System.Web.UI.Control.ID" />.

- oder -

Der Wert einer Zieleigenschaft kann nicht in das erwartete <see cref="T:System.Type" /> konvertiert werden.</exception>
      </Docs>
    </Member>
    <Member MemberName="ControlToCompare">
      <MemberSignature Language="C#" Value="public string ControlToCompare { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ControlToCompare" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CompareValidator.ControlToCompare" />
      <MemberSignature Language="VB.NET" Value="Public Property ControlToCompare As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ControlToCompare { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ControlToCompare : string with get, set" Usage="System.Web.UI.WebControls.CompareValidator.ControlToCompare" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.ValidatedControlConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Eingabesteuerelement ab, das mit dem validierten Eingabesteuerelement verglichen werden soll, oder legt dieses fest.</summary>
        <value>Das Eingabesteuerelement, das mit dem validierten Eingabesteuerelement verglichen werden soll. Der Standardwert ist <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Verwenden Sie die <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A>-Eigenschaft, um ein Eingabe Steuerelement anzugeben, z. b. ein <xref:System.Web.UI.WebControls.TextBox> Steuerelement, das mit dem überprüften Eingabe Steuerelement verglichen werden soll Wenn das von dieser Eigenschaft angegebene Eingabe Steuerelement kein Steuerelement auf der Seite ist, wird eine Ausnahme ausgelöst.

> [!NOTE]
>  Legen Sie die <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A>-Eigenschaft und die <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A>-Eigenschaft nicht gleichzeitig fest. Sie können entweder den Wert eines Eingabe Steuer Elements mit einem anderen Eingabe Steuerelement oder mit einem konstanten Wert vergleichen. Wenn beide Eigenschaften festgelegt sind, hat die <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A>-Eigenschaft Vorrang.

 Weitere Informationen finden Sie unter <xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A?displayProperty=nameWithType>.

> [!IMPORTANT]
>  Wenn das zu vergleichende Steuerelement ausgeblendet ist oder sich in einem Container befindet (z. b. ein <xref:System.Web.UI.WebControls.Panel> Steuerelement), das nicht sichtbar ist, führt das Validierungs Steuerelement nur eine serverseitige Validierung aus. Das Validierungs Steuerelement-Client Skript unterstützt nur sichtbare Steuerelemente.

 Diese Eigenschaft kann nicht durch Designs oder Stylesheetdesigns festgelegt werden. Weitere Informationen finden Sie unter <xref:System.Web.UI.ThemeableAttribute> und [ASP.NET-Designs und Skins](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).



## Examples
 Im folgenden Codebeispiel wird veranschaulicht, wie mit der <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A>-Eigenschaft das Steuerelement angegeben wird, das mit dem zu validierenden Steuerelement verglichen werden soll.

> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).

 [!code-aspx-csharp[Classic CompareValidator Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CompareValidator Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic CompareValidator Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CompareValidator Example/VB/sourcevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.ControlToValidate" />
        <altmember cref="P:System.Web.UI.WebControls.CompareValidator.ValueToCompare" />
        <altmember cref="T:System.Web.UI.WebControls.TextBox" />
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.IsValid" />
        <altmember cref="F:System.String.Empty" />
      </Docs>
    </Member>
    <Member MemberName="EvaluateIsValid">
      <MemberSignature Language="C#" Value="protected override bool EvaluateIsValid ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool EvaluateIsValid() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.CompareValidator.EvaluateIsValid" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function EvaluateIsValid () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool EvaluateIsValid();" />
      <MemberSignature Language="F#" Value="override this.EvaluateIsValid : unit -&gt; bool" Usage="compareValidator.EvaluateIsValid " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Beim Überschreiben in einer abgeleiteten Klasse enthält diese Methode den Code, um zu bestimmen, ob der Wert im Eingabesteuerelement gültig ist.</summary>
        <returns><see langword="true" />, wenn der Wert im Eingabesteuerelement gültig ist, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie die <xref:System.Web.UI.WebControls.CompareValidator.EvaluateIsValid%2A>-Methode in einem benutzerdefinierten Server Steuerelement überschreiben, sodass Sie immer `true` zurückgibt, wenn die Werte der beiden angegebenen Steuerelemente identisch sind und andernfalls `false`.

> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).

 [!code-aspx-csharp[CustomCompareValidatorEvaluateIsValid#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomCompareValidatorEvaluateIsValid/CS/custom_comparevalidator_evaluateisvalidcs.aspx#1)]
 [!code-aspx-vb[CustomCompareValidatorEvaluateIsValid#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomCompareValidatorEvaluateIsValid/VB/custom_comparevalidator_evaluateisvalidvb.aspx#1)]
[!code-csharp[CustomCompareValidatorEvaluateIsValid#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomCompareValidatorEvaluateIsValid/CS/custom_comparevalidator_evaluateisvalid.cs#2)]
[!code-vb[CustomCompareValidatorEvaluateIsValid#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomCompareValidatorEvaluateIsValid/VB/custom_comparevalidator_evaluateisvalid.vb#2)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Operator">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ValidationCompareOperator Operator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ValidationCompareOperator Operator" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CompareValidator.Operator" />
      <MemberSignature Language="VB.NET" Value="Public Property Operator As ValidationCompareOperator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ValidationCompareOperator Operator { System::Web::UI::WebControls::ValidationCompareOperator get(); void set(System::Web::UI::WebControls::ValidationCompareOperator value); };" />
      <MemberSignature Language="F#" Value="member this.Operator : System.Web.UI.WebControls.ValidationCompareOperator with get, set" Usage="System.Web.UI.WebControls.CompareValidator.Operator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ValidationCompareOperator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den auszuführenden Vergleichsvorgang ab oder legt ihn fest.</summary>
        <value>Einer der <see cref="T:System.Web.UI.WebControls.ValidationCompareOperator" />-Werte. Der Standardwert ist <see langword="Equal" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Verwenden Sie die <xref:System.Web.UI.WebControls.CompareValidator.Operator%2A>-Eigenschaft, um die auszuführende Vergleichsoperation anzugeben. In der folgenden Tabelle werden die möglichen Vergleichs Vorgänge aufgelistet.

|Vorgang|Beschreibung|
|---------------|-----------------|
|`Equal`|Ein Vergleich für die Gleichheit zwischen den Werten des validierten Eingabe Steuer Elements und eines anderen Steuer Elements oder eines konstanten Werts.|
|`NotEqual`|Ein Vergleich für die Ungleichheit zwischen den Werten des validierten Eingabe Steuer Elements und eines anderen Steuer Elements oder eines konstanten Werts.|
|`GreaterThan`|Ein Vergleich für größer als zwischen den Werten des validierten Eingabe Steuer Elements und einem anderen Steuerelement oder einem konstanten Wert.|
|`GreaterThanEqual`|Ein Vergleich für größer oder gleich zwischen den Werten des zu validierenden Eingabe Steuer Elements und einem anderen Steuerelement oder einem konstanten Wert.|
|`LessThan`|Ein Vergleich für einen geringeren Wert als zwischen den Werten des validierten Eingabe Steuer Elements und einem anderen Steuerelement oder einem konstanten Wert.|
|`LessThanEqual`|Ein Vergleich von kleiner oder gleich zwischen den Werten des validierten Eingabe Steuer Elements und einem anderen Steuerelement oder einem konstanten Wert.|
|`DataTypeCheck`|Ein Datentyp Vergleich des Werts, der in das zu validierende Eingabe Steuerelement eingegeben wurde, und der Datentyp, der durch die <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=nameWithType>-Eigenschaft angegeben wird Die Validierung schlägt fehl, wenn der Wert nicht in den angegebenen Datentyp konvertiert werden kann. **Hinweis:**  Die Eigenschaften <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> und <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> werden ignoriert, wenn dieser Operator verwendet wird.|

 Diese Eigenschaft kann nicht durch Designs oder Stylesheetdesigns festgelegt werden. Weitere Informationen finden Sie unter <xref:System.Web.UI.ThemeableAttribute> und [ASP.NET-Designs und Skins](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).



## Examples
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.CompareValidator.Operator%2A>-Eigenschaft verwendet wird, um die Vergleichsoperation anzugeben.

> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).

 [!code-aspx-csharp[Classic CompareValidator Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CompareValidator Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic CompareValidator Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CompareValidator Example/VB/sourcevb.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der angegebene Vergleichsoperator ist keiner der <see cref="T:System.Web.UI.WebControls.ValidationCompareOperator" />-Werte.</exception>
        <altmember cref="T:System.Web.UI.WebControls.ValidationCompareOperator" />
      </Docs>
    </Member>
    <Member MemberName="ValueToCompare">
      <MemberSignature Language="C#" Value="public string ValueToCompare { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValueToCompare" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CompareValidator.ValueToCompare" />
      <MemberSignature Language="VB.NET" Value="Public Property ValueToCompare As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ValueToCompare { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ValueToCompare : string with get, set" Usage="System.Web.UI.WebControls.CompareValidator.ValueToCompare" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen konstanten Wert ab, der mit dem Wert verglichen werden soll, den der Benutzer in das Eingabesteuerelement eingegeben hat, das überprüft wird, oder legt diesen konstanten Wert fest.</summary>
        <value>Der konstante Wert, der mit dem Wert verglichen werden soll, den der Benutzer in das Eingabesteuerelement eingegeben hat, das überprüft wird. Der Standardwert ist <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Verwenden Sie die <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A>-Eigenschaft, um einen konstanten Wert anzugeben, der mit dem Wert verglichen werden soll, der vom Benutzer im überprüften Eingabe Steuerelement eingegeben wurde. Wenn der von dieser Eigenschaft angegebene Konstante Wert nicht in den Datentyp konvertiert werden kann, der durch die <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=nameWithType>-Eigenschaft angegeben wird, wird eine Ausnahme ausgelöst.

> [!NOTE]
>  Legen Sie die <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A>-Eigenschaft und die <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A>-Eigenschaft nicht gleichzeitig fest. Sie können entweder den Wert eines Eingabe Steuer Elements mit einem anderen Eingabe Steuerelement oder mit einem konstanten Wert vergleichen. Wenn beide Eigenschaften festgelegt sind, hat die <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A>-Eigenschaft Vorrang.

 Diese Eigenschaft kann nicht durch Designs oder Stylesheetdesigns festgelegt werden. Weitere Informationen finden Sie unter <xref:System.Web.UI.ThemeableAttribute> und [ASP.NET-Designs und Skins](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).



## Examples
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A>-Eigenschaft verwendet wird, um den Wert, der vom Benutzer in einem <xref:System.Web.UI.WebControls.TextBox>-Steuerelement eingegeben wurde, mit einem konstanten Wert zu vergleichen.

> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).

 [!code-aspx-csharp[Classic CompareValidator.ValueToCompare Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CompareValidator.ValueToCompare Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic CompareValidator.ValueToCompare Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CompareValidator.ValueToCompare Example/VB/sourcevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.CompareValidator.ControlToCompare" />
        <altmember cref="P:System.Web.UI.WebControls.BaseCompareValidator.Type" />
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.IsValid" />
        <altmember cref="F:System.String.Empty" />
      </Docs>
    </Member>
  </Members>
</Type>
