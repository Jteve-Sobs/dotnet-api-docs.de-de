<Type Name="EmbeddedMailObject" FullName="System.Web.UI.WebControls.EmbeddedMailObject">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1f2b04024d746b3766e3609fb101f96a42bb3f5c" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70462736" /></Metadata><TypeSignature Language="C#" Value="public sealed class EmbeddedMailObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EmbeddedMailObject extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.EmbeddedMailObject" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EmbeddedMailObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class EmbeddedMailObject sealed" />
  <TypeSignature Language="F#" Value="type EmbeddedMailObject = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.EmbeddedMailObject/EmbeddedMailObjectTypeConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt ein Element dar, das in eine E-Mail eingebettet werden soll, die mit der <see cref="T:System.Web.UI.WebControls.MailDefinition" />-Klasse erstellt wurde.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stellt <xref:System.Web.UI.WebControls.EmbeddedMailObject> ein Element dar, das in eine e-Mail-Nachricht eingebettet wird. Diese eingebetteten Elemente können Bilddateien sein, z. b. Firmenlogos. Jedes eingebettete Element wird durch einen Bezeichner und einen Pfad angegeben.  
  
 Um sicherzustellen, dass ein eingebettetes Objekt in der e-Mail-Datei ordnungsgemäß angezeigt wird, müssen die folgenden Bedingungen erfüllt sein:  
  
-   Die e-Mail-Nachricht ist im HTML-Format.  
  
-   Das Element ist eine Bilddatei (JPG, GIF, BMP usw.).  
  
-   Die HTML-formatierte Textdatei, die <xref:System.Web.UI.WebControls.MailDefinition.BodyFileName%2A> in der-Eigenschaft angegeben ist, enthält einen Verweis auf die Bilddatei mit der folgenden Syntax:  
  
    ```  
    <img src="cid:identifier" alt="Alternate Text" />.  
    ```  
  
 Wenn eine <xref:System.Web.UI.WebControls.EmbeddedMailObject> einer e-Mail-Nachricht hinzugefügt wird und nicht alle zuvor angegebenen Anforderungen erfüllt, wird diese höchstwahrscheinlich als Anlage in der e-Mail-Nachricht angezeigt. Wenn von einem Bezeichner in der e-Mail-Nachricht auf ein Element verwiesen wird, das jedoch nicht als eingebettetes Element eingeschlossen ist, wird es als fehlerhafte Anlage angezeigt, wenn die e-Mail angezeigt wird.  
  
 Speichert eine Auflistung von <xref:System.Web.UI.WebControls.EmbeddedMailObject> -Objekten für eine einzelne e-Mail-Nachricht. <xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection> Wird von der <xref:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects%2A> -Eigenschaft des <xref:System.Web.UI.WebControls.MailDefinition> -Objekts zum Erstellen der e-Mail-Nachricht verwendet. <xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection>  
  
 E-Mail-Nachrichten, die eingebettete Objekte zulassen, können in den <xref:System.Web.UI.WebControls.MailDefinition> folgenden websteuer Elementen konfiguriert werden, indem ihre Eigenschaften deklarativ  
  
-   <xref:System.Web.UI.WebControls.CreateUserWizard>  
  
-   <xref:System.Web.UI.WebControls.ChangePassword>  
  
-   <xref:System.Web.UI.WebControls.PasswordRecovery>  
  
> [!NOTE]
>  Die Werte im <xref:System.Web.UI.WebControls.EmbeddedMailObject> -Objekt <xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection> und im-Objekt werden nicht im Ansichts Zustand gespeichert. Dies schützt vor böswilligen Benutzern, die Pfadinformationen für Ihren Server ermitteln.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine ASP.NET-Seite veranschaulicht, <xref:System.Web.UI.WebControls.ChangePassword> die ein websteuer Element verwendet und einen Ereignishandler <xref:System.Web.UI.WebControls.ChangePassword.SendingMail> für das `SendingMail`-Ereignis mit dem Namen enthält. Im Codebeispiel wird davon ausgegangen, dass die ASP.NET-Website für die Verwendung der ASP.NET-Mitgliedschaft und Formular Authentifizierung konfiguriert wurde und dass ein Benutzer erstellt wurde, dessen Name und Kennwort Ihnen bekannt sind. Weitere Informationen finden Sie unter Gewusst [wie: Implementieren einer einfachen Formular Authentifizierung](https://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e).  
  
 Wenn die Kenn Wort Änderung erfolgreich ist, versucht der `SendingMail` Code im-Ereignishandler, eine e-Mail-Nachricht an den Benutzer zu senden, um die Änderung zu bestätigen. SMTP muss bereits auf dem Server konfiguriert sein, damit dieses Codebeispiel funktioniert. Informationen zum Konfigurieren eines SMTP-Servers finden Sie unter [NIB: Gewusst wie: Installieren und Konfigurieren virtueller SMTP-Server in IIS 6,0](https://msdn.microsoft.com/library/ed204b58-24af-47d0-9687-60e5df5f17f8). Im Rahmen dieses Beispiels ist es nicht erforderlich, einen SMTP-Server zu konfigurieren. Das Beispiel wird erstellt, um zu testen, dass ein Fehler beim Senden einer e-Mail-Nachricht vorliegt.  
  
 Wenn ein Mailserver nicht ordnungsgemäß konfiguriert ist oder ein anderer Fehler auftritt und die e-Mail-Nachricht nicht `SendMailError` gesendet werden kann, wird die-Funktion aufgerufen. Dem Benutzer wird eine Meldung angezeigt. Außerdem wird ein Ereignis im Windows-Anwendungs Ereignisprotokoll mit der Annahme protokolliert, dass eine Ereignis Quelle mit dem Namen MySamplesSite bereits vorhanden ist. Weitere Informationen finden Sie im folgenden Codebeispiel, um die angegebene Ereignis Quelle zu erstellen. Weitere Informationen zum Erstellen einer Ereignis Quelle finden Sie unter [Server Ereignis Behandlung auf ASP.net-Web Forms Seiten](https://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9). Die <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> -Eigenschaft <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> des-Objekts wird auf `true` festgelegt, um anzugeben, dass der Fehler behandelt wurde.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 Verwenden Sie das folgende Codebeispiel, wenn Sie die Ereignis Quelle namens MySamplesSite Programm gesteuert dem Anwendungsprotokoll hinzufügen müssen. Diese Ereignis Quelle muss vorhanden sein, damit das erste Codebeispiel ordnungsgemäß funktioniert. Für das folgende Codebeispiel sind Administrator Rechte erforderlich.  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 Der folgende Beispielcode kann als ChangePasswordMail. htm-Datei für den vorangehenden Beispielcode verwendet werden.  
  
> [!IMPORTANT]
>  Das Senden von Benutzerkonto Namen oder Kenn Wörtern in einer e-Mail ist eine potenzielle Sicherheitsbedrohung. E-Mail-Nachrichten werden in der Regel als Klartext gesendet und können von speziellen Netzwerkanwendungen gelesen werden.  Um die Sicherheit zu verbessern, verwenden Sie die entschärfungen, die unter [Sichern von Anmelde Steuerelementen](https://msdn.microsoft.com/library/d85075bc-9c1a-4453-8a0c-539b10853c9c)beschrieben werden.  
  
```  
<html>  
<head><title></title></head>  
<body>  
<form>  
  
  <h1>Your password for the account named &quot;<%Username%>&quot; has changed.</h1>  
  
  <p>  
  If you did not initiate this change, please call 1-206-555-0100.  
  </p>  
  
  <p>  
  <a href="http://www.contoso.com/login.aspx">  
    <img src="cid:LoginGif" alt="Log In" />  
  </a>   
  </p>  
  
  <p>  
  Please read our attached Privacy Notice.  
  </p>  
  
</form>  
</body>  
</html>  
  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects" />
    <altmember cref="T:System.Web.UI.WebControls.CreateUserWizard" />
    <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.MailDefinition" />
    <altmember cref="E:System.Web.UI.WebControls.CreateUserWizard.SendingMail" />
    <altmember cref="T:System.Web.UI.WebControls.ChangePassword" />
    <altmember cref="P:System.Web.UI.WebControls.ChangePassword.MailDefinition" />
    <altmember cref="E:System.Web.UI.WebControls.ChangePassword.SendingMail" />
    <altmember cref="T:System.Web.UI.WebControls.PasswordRecovery" />
    <altmember cref="P:System.Web.UI.WebControls.PasswordRecovery.MailDefinition" />
    <altmember cref="E:System.Web.UI.WebControls.PasswordRecovery.SendingMail" />
    <altmember cref="T:System.Net.Mail.MailMessage" />
    <related type="Article" href="https://msdn.microsoft.com/library/448f7802-0aa8-4304-abf7-82e138877dc8">Registerkarte "Websiteverwaltungs-Tool Anwendung"</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.EmbeddedMailObject" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EmbeddedMailObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EmbeddedMailObject.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EmbeddedMailObject();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.EmbeddedMailObject" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um den Bezeichner des eingebetteten Elements zu erhalten oder festzulegen, <xref:System.Web.UI.WebControls.EmbeddedMailObject.Name%2A> verwenden Sie die-Eigenschaft. Verwenden Sie die <xref:System.Web.UI.WebControls.EmbeddedMailObject.Path%2A> -Eigenschaft, um den Pfad zum eingebetteten Element zu erhalten oder festzulegen. Beide Eigenschaften müssen so festgelegt werden, dass das Element in der e-Mail-Nachricht erfolgreich eingebettet wird.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects" />
        <related type="Article" href="https://msdn.microsoft.com/library/448f7802-0aa8-4304-abf7-82e138877dc8">Registerkarte "Websiteverwaltungs-Tool Anwendung"</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EmbeddedMailObject (string name, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EmbeddedMailObject.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EmbeddedMailObject(System::String ^ name, System::String ^ path);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.EmbeddedMailObject : string * string -&gt; System.Web.UI.WebControls.EmbeddedMailObject" Usage="new System.Web.UI.WebControls.EmbeddedMailObject (name, path)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Der als Bezeichner verwendete Name des Elements, das in die E-Mail-Nachricht eingebettet werden soll. Weitere Informationen finden Sie unter <see cref="P:System.Web.UI.WebControls.EmbeddedMailObject.Name" />.</param>
        <param name="path">Der Pfad zum Abrufen eines Elements, das in die E-Mail-Nachricht eingebettet werden soll. Weitere Informationen finden Sie unter <see cref="P:System.Web.UI.WebControls.EmbeddedMailObject.Path" />.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.EmbeddedMailObject" />-Klasse unter Verwendung des angegebenen Bezeichnernamens und des angegeben Pfads, um das Objekt aufzufüllen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Codebeispiel zeigt ein Code Behind-Beispiel für eine ASP.NET-Seite, die <xref:System.Web.UI.WebControls.ChangePassword> ein-Steuerelement verwendet und einen Ereignishandler <xref:System.Web.UI.WebControls.ChangePassword.SendingMail> für das `SendingMail`-Ereignis mit dem Namen enthält. In diesem Codebeispiel wird davon ausgegangen, dass die ASP.NET-Website für die Verwendung der ASP.NET-Mitgliedschaft und Formular Authentifizierung konfiguriert wurde und dass ein Benutzer erstellt wurde, dessen Name und Kennwort Ihnen bekannt sind. Weitere Informationen finden Sie unter Gewusst [wie: Implementieren einer einfachen Formular Authentifizierung](https://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e).  
  
 Wenn die Kenn Wort Änderung erfolgreich ist, versucht der `SendingMail` Code im-Ereignishandler, eine e-Mail-Nachricht an den Benutzer zu senden, um die Änderung zu bestätigen. SMTP muss bereits auf dem Server konfiguriert sein, damit dieses Codebeispiel funktioniert. Informationen zum Konfigurieren eines SMTP-Servers finden Sie unter [NIB: Gewusst wie: Installieren und Konfigurieren virtueller SMTP-Server in IIS 6,0](https://msdn.microsoft.com/library/ed204b58-24af-47d0-9687-60e5df5f17f8). Im Rahmen dieses Beispiels ist es nicht erforderlich, einen SMTP-Server zu konfigurieren. Das Beispiel wird erstellt, um zu testen, dass ein Fehler beim Senden einer e-Mail-Nachricht vorliegt.  
  
 Wenn ein Mailserver nicht ordnungsgemäß konfiguriert ist oder ein anderer Fehler auftritt und die e-Mail-Nachricht nicht `SendMailError` gesendet werden kann, wird die-Funktion aufgerufen. Dem Benutzer wird eine Meldung angezeigt. Außerdem wird ein Ereignis im Windows-Anwendungs Ereignisprotokoll mit der Annahme protokolliert, dass eine Ereignis Quelle mit dem Namen MySamplesSite bereits vorhanden ist. Weitere Informationen finden Sie im folgenden Codebeispiel, um die angegebene Ereignis Quelle zu erstellen. Weitere Informationen zum Erstellen einer Ereignis Quelle finden Sie unter [Server Ereignis Behandlung auf ASP.net-Web Forms Seiten](https://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9). Die <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> -Eigenschaft <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> des-Objekts wird auf `true` festgelegt, um anzugeben, dass der Fehler behandelt wurde.  
  
 Im folgenden Codebeispiel wird die Verwendung einer ASPX-Seite veranschaulicht.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ChangePassword#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ChangePassword/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ChangePassword#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ChangePassword/VB/changepassword_vb.aspx#1)]  
  
 Im folgenden Codebeispiel wird die Verwendung einer Code Behind-Datei veranschaulicht.  
  
 [!code-csharp[System.Web.UI.WebControls.ChangePassword#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ChangePassword/CS/changepassword.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ChangePassword#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ChangePassword/VB/changepassword.vb#2)]  
  
 Verwenden Sie das folgende Codebeispiel, wenn Sie die Ereignis Quelle namens MySamplesSite Programm gesteuert dem Anwendungsprotokoll hinzufügen müssen. Diese Ereignis Quelle muss vorhanden sein, damit das erste Codebeispiel ordnungsgemäß funktioniert. Für das folgende Codebeispiel sind Administrator Rechte erforderlich.  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 Der folgende Beispielcode kann als ChangePasswordMail. htm-Datei für den vorangehenden Beispielcode verwendet werden.  
  
> [!IMPORTANT]
>  Das Senden von Benutzerkonto Namen oder Kenn Wörtern in einer e-Mail-Nachricht stellt eine potenzielle Sicherheitsbedrohung dar. E-Mail-Nachrichten werden in der Regel als Klartext gesendet und können von speziellen Netzwerkanwendungen gelesen werden.  Um die Sicherheit zu verbessern, verwenden Sie die entschärfungen, die unter [Sichern von Anmelde Steuerelementen](https://msdn.microsoft.com/library/d85075bc-9c1a-4453-8a0c-539b10853c9c)beschrieben werden.  
  
```  
<html>  
<head><title></title></head>  
<body>  
<form>  
  
  <h1>Your password for the account named &quot;<%Username%>&quot; has changed.</h1>  
  
  <p>  
  If you did not initiate this change, please call 1-206-555-0100.  
  </p>  
  
  <p>  
  <a href="http://www.contoso.com/login.aspx">  
    <img src="cid:LoginGif" alt="Log In" />  
  </a>   
  </p>  
  
  <p>  
  Please read our attached Privacy Notice.  
  </p>  
  
</form>  
</body>  
</html>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects" />
        <altmember cref="T:System.Web.Mail.SmtpMail" />
        <related type="Article" href="https://msdn.microsoft.com/library/448f7802-0aa8-4304-abf7-82e138877dc8">Registerkarte "Websiteverwaltungs-Tool Anwendung"</related>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EmbeddedMailObject.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Web.UI.WebControls.EmbeddedMailObject.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den als Bezeichner verwendeten Namen des Elements ab, das in die mit der <see cref="T:System.Web.UI.WebControls.MailDefinition" />-Klasse konstruierte E-Mail-Nachricht eingebettet werden soll, oder legt diesen fest.</summary>
        <value>Gibt den Bezeichner des Elements zurück, das in die E-Mail-Nachricht eingebettet werden soll.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.EmbeddedMailObject.Name%2A> -Eigenschaft gibt einen Bezeichner für ein Element an, das in eine per deklarativ mit <xref:System.Web.UI.WebControls.MailDefinition> der-Klasse erstellte e-Mail-Nachricht eingebettet Der Bezeichner wird verwendet, um das in der <xref:System.Web.UI.WebControls.EmbeddedMailObject.Path%2A> -Eigenschaft enthaltene Element der entsprechenden Position im Text der <xref:System.Web.UI.WebControls.MailDefinition.BodyFileName%2A> in der-Eigenschaft angegebenen Datei zuzuordnen. dabei wird die folgende Syntax verwendet:  
  
```  
<img src="cid:identifier" alt="Alternate Text" />  
```  
  
 In der Regel handelt es sich bei dem Element um eine Bilddatei. Der Standardwert für <xref:System.Web.UI.WebControls.EmbeddedMailObject.Name%2A> die-Eigenschaft ist eine leere Zeichenfolge.  
  
 Es wird empfohlen, den Barrierefreiheits Entwurf für die Festlegung der alternativen Text-Eigenschaft in der e-Mail-Nachricht für eingebettete Bilder festzulegen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine ASP.NET-Seite veranschaulicht, <xref:System.Web.UI.WebControls.ChangePassword> die ein websteuer Element verwendet und einen Ereignishandler <xref:System.Web.UI.WebControls.ChangePassword.SendingMail> für das `SendingMail`-Ereignis mit dem Namen enthält. Im Codebeispiel wird davon ausgegangen, dass die ASP.NET-Website für die Verwendung der ASP.NET-Mitgliedschaft und Formular Authentifizierung konfiguriert wurde und dass ein Benutzer erstellt wurde, dessen Name und Kennwort Ihnen bekannt sind. Weitere Informationen finden Sie unter Gewusst [wie: Implementieren einer einfachen Formular Authentifizierung](https://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e).  
  
 Wenn die Kenn Wort Änderung erfolgreich ist, versucht der `SendingMail` Code im-Ereignishandler, eine e-Mail-Nachricht an den Benutzer zu senden, um die Änderung zu bestätigen. SMTP muss bereits auf dem Server konfiguriert sein, damit dieses Codebeispiel funktioniert. Informationen zum Konfigurieren eines SMTP-Servers finden Sie unter [NIB: Gewusst wie: Installieren und Konfigurieren virtueller SMTP-Server in IIS 6,0](https://msdn.microsoft.com/library/ed204b58-24af-47d0-9687-60e5df5f17f8). Im Rahmen dieses Beispiels ist es nicht erforderlich, einen SMTP-Server zu konfigurieren. Das Beispiel wird erstellt, um zu testen, dass ein Fehler beim Senden einer e-Mail-Nachricht vorliegt.  
  
 Wenn ein Mailserver nicht ordnungsgemäß konfiguriert ist oder ein anderer Fehler auftritt und die e-Mail-Nachricht nicht `SendMailError` gesendet werden kann, wird die-Funktion aufgerufen. Dem Benutzer wird eine Meldung angezeigt. Außerdem wird ein Ereignis im Windows-Anwendungs Ereignisprotokoll mit der Annahme protokolliert, dass eine Ereignis Quelle mit dem Namen MySamplesSite bereits vorhanden ist. Weitere Informationen finden Sie im folgenden Codebeispiel, um die angegebene Ereignis Quelle zu erstellen. Weitere Informationen zum Erstellen einer Ereignis Quelle finden Sie unter [Server Ereignis Behandlung auf ASP.net-Web Forms Seiten](https://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9). Die <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> -Eigenschaft <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> des-Objekts wird auf `true` festgelegt, um anzugeben, dass der Fehler behandelt wurde.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 Verwenden Sie das folgende Codebeispiel, wenn Sie die Ereignis Quelle namens MySamplesSite Programm gesteuert dem Anwendungsprotokoll hinzufügen müssen. Diese Ereignis Quelle muss vorhanden sein, damit das erste Codebeispiel ordnungsgemäß funktioniert. Für das folgende Codebeispiel sind Administrator Rechte erforderlich.  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 Der folgende Beispielcode kann als ChangePasswordMail. htm-Datei für den vorangehenden Beispielcode verwendet werden.  
  
> [!IMPORTANT]
>  Das Senden von Benutzerkonto Namen oder Kenn Wörtern in einer e-Mail-Nachricht stellt eine potenzielle Sicherheitsbedrohung dar. E-Mail-Nachrichten werden als Klartext gesendet und können von speziellen Netzwerkanwendungen gelesen werden.  Um die Sicherheit zu verbessern, verwenden Sie die entschärfungen, die unter [Sichern von Anmelde Steuerelementen](https://msdn.microsoft.com/library/d85075bc-9c1a-4453-8a0c-539b10853c9c)beschrieben werden.  
  
```  
<html>  
<head><title></title></head>  
<body>  
<form>  
  
  <h1>Your password for the account named &quot;<%Username%>&quot; has changed.</h1>  
  
  <p>  
  If you did not initiate this change, please call 1-206-555-0100.  
  </p>  
  
  <p>  
  <a href="http://www.contoso.com/login.aspx">  
    <img src="cid:LoginGif" alt="Log In" />  
  </a>   
  </p>  
  
  <p>  
  Please read our attached Privacy Notice.  
  </p>  
  
</form>  
</body>  
</html>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects" />
        <related type="Article" href="https://msdn.microsoft.com/library/448f7802-0aa8-4304-abf7-82e138877dc8">Registerkarte "Websiteverwaltungs-Tool Anwendung"</related>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EmbeddedMailObject.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="System.Web.UI.WebControls.EmbeddedMailObject.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.MailFileEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.MailFileEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Pfad zum Abrufen eines Elements ab, das in eine mit der <see cref="T:System.Web.UI.WebControls.MailDefinition" />-Klasse konstruierte E-Mail-Nachricht eingebettet werden soll, oder legt diesen fest.</summary>
        <value>Gibt den Pfad des Elements zurück, das in die E-Mail-Nachricht eingebettet werden soll.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.EmbeddedMailObject.Path%2A> -Eigenschaft gibt den Pfad zu dem Element an, das Sie in die per deklarativ mit dem <xref:System.Web.UI.WebControls.MailDefinition> -Objekt erstellte e-Mail-Nachricht einbetten möchten. Der Dateipfad <xref:System.Web.UI.WebControls.EmbeddedMailObject.Path%2A> in muss ein Pfad wie z. b. c:\myserver\banner.gif sein. In der Regel handelt es sich bei dem eingebetteten Element um eine Bilddatei. Wenn auf eine Bilddatei durch ihren Bezeichner in der e-Mail-Nachricht verwiesen wird, die jedoch nicht in der Nachricht enthalten ist, wird das Bild beim Anzeigen der e-Mail-Nachricht als fehlerhafte Anlage angezeigt.  
  
 Es wird empfohlen, den Barrierefreiheits Entwurf für die Festlegung der alternativen Text-Eigenschaft in der e-Mail-Nachricht für eingebettete Bilder festzulegen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine ASP.NET-Seite veranschaulicht, <xref:System.Web.UI.WebControls.ChangePassword> die ein websteuer Element verwendet und einen Ereignishandler <xref:System.Web.UI.WebControls.ChangePassword.SendingMail> für das `SendingMail`-Ereignis mit dem Namen enthält. Im Codebeispiel wird davon ausgegangen, dass die ASP.NET-Website für die Verwendung der ASP.NET-Mitgliedschaft und Formular Authentifizierung konfiguriert wurde und dass ein Benutzer erstellt wurde, dessen Name und Kennwort Ihnen bekannt sind. Weitere Informationen finden Sie unter Gewusst [wie: Implementieren einer einfachen Formular Authentifizierung](https://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e).  
  
 Wenn die Kenn Wort Änderung erfolgreich ist, versucht der `SendingMail` Code im-Ereignishandler, eine e-Mail-Nachricht an den Benutzer zu senden, um die Änderung zu bestätigen. SMTP muss bereits auf dem Server konfiguriert sein, damit dieses Codebeispiel funktioniert. Informationen zum Konfigurieren eines SMTP-Servers finden Sie unter [NIB: Gewusst wie: Installieren und Konfigurieren virtueller SMTP-Server in IIS 6,0](https://msdn.microsoft.com/library/ed204b58-24af-47d0-9687-60e5df5f17f8). Im Rahmen dieses Beispiels ist es nicht erforderlich, einen SMTP-Server zu konfigurieren. Das Beispiel wird erstellt, um zu testen, dass ein Fehler beim Senden einer e-Mail-Nachricht vorliegt.  
  
 Wenn ein Mailserver nicht ordnungsgemäß konfiguriert ist oder ein anderer Fehler auftritt und die e-Mail-Nachricht nicht `SendMailError` gesendet werden kann, wird die-Funktion aufgerufen. Dem Benutzer wird eine Meldung angezeigt. Außerdem wird ein Ereignis im Windows-Anwendungs Ereignisprotokoll mit der Annahme protokolliert, dass eine Ereignis Quelle mit dem Namen MySamplesSite bereits vorhanden ist. Weitere Informationen finden Sie im folgenden Codebeispiel, um die angegebene Ereignis Quelle zu erstellen. Weitere Informationen zum Erstellen einer Ereignis Quelle finden Sie unter [Server Ereignis Behandlung auf ASP.net-Web Forms Seiten](https://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9). Die <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> -Eigenschaft <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> des-Objekts wird auf `true` festgelegt, um anzugeben, dass der Fehler behandelt wurde.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 Verwenden Sie das folgende Codebeispiel, wenn Sie die Ereignis Quelle namens MySamplesSite Programm gesteuert dem Anwendungsprotokoll hinzufügen müssen. Diese Ereignis Quelle muss vorhanden sein, damit das erste Codebeispiel ordnungsgemäß funktioniert. Für das folgende Codebeispiel sind Administrator Rechte erforderlich.  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 Der folgende Beispielcode kann als ChangePasswordMail. htm-Datei für den vorangehenden Beispielcode verwendet werden.  
  
> [!IMPORTANT]
>  Das Senden von Benutzerkonto Namen oder Kenn Wörtern in einer e-Mail-Nachricht stellt eine potenzielle Sicherheitsbedrohung dar. E-Mail-Nachrichten werden in der Regel als Klartext gesendet und können von speziellen Netzwerkanwendungen gelesen werden.  Um die Sicherheit zu verbessern, verwenden Sie die entschärfungen, die unter [Sichern von Anmelde Steuerelementen](https://msdn.microsoft.com/library/d85075bc-9c1a-4453-8a0c-539b10853c9c)beschrieben werden.  
  
```  
<html>  
<head><title></title></head>  
<body>  
<form>  
  
  <h1>Your password for the account named &quot;<%Username%>&quot; has changed.</h1>  
  
  <p>  
  If you did not initiate this change, please call 1-206-555-0100.  
  </p>  
  
  <p>  
  <a href="http://www.contoso.com/login.aspx">  
    <img src="cid:LoginGif" alt="Log In" />  
  </a>   
  </p>  
  
  <p>  
  Please read our attached Privacy Notice.  
  </p>  
  
</form>  
</body>  
</html>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects" />
        <related type="Article" href="https://msdn.microsoft.com/library/448f7802-0aa8-4304-abf7-82e138877dc8">Registerkarte "Websiteverwaltungs-Tool Anwendung"</related>
      </Docs>
    </Member>
  </Members>
</Type>
