<Type Name="ObjectDataSourceEventArgs" FullName="System.Web.UI.WebControls.ObjectDataSourceEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b0c0067bd1e1fd1edb1d21bfde1618d77078d7d7" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64066432" /></Metadata><TypeSignature Language="C#" Value="public class ObjectDataSourceEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ObjectDataSourceEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ObjectDataSourceEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ObjectDataSourceEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectDataSourceEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type ObjectDataSourceEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt Daten für das <see cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating" />-Ereignis und das <see cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated" />-Ereignis des <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />-Steuerelements bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> Klasse wird verwendet, der <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating%2A> und <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated%2A> Methoden zur Bereitstellung von Zugriff auf die Instanz vor dem Datenvorgänge-Objekt, das Verwenden der <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement und Business Objekt ausgeführt werden. Das Geschäftsobjekt, das festgelegt ist und Zugriff auf die Verwendung der <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> Eigenschaft. Durch das Hinzufügen eines Ereignishandlerdelegaten, behandeln die <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating> Ereignis können Sie eine Instanz des Geschäftsobjekts erstellen, in benutzerdefiniertem Code anstelle von der <xref:System.Web.UI.WebControls.ObjectDataSource> die Instanziierung ausführen. Dies ist nützlich, wenn Sie eine nicht standardmäßigen Instanz zum Aufrufen eines nicht standardmäßigen Konstruktors zum Erstellen der Instanz oder das Geschäftsobjekt möchten. die <xref:System.Web.UI.WebControls.ObjectDataSource> ruft immer die Standard-Konstruktor zum Erstellen einer Instanz des Geschäftsobjekts, es funktioniert mit. Sie können auch hinzufügen ein Ereignishandlerdelegaten, behandeln die <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> -Ereignis, das Ihnen ermöglicht, den Zugriff auf öffentlich verfügbar gemacht, das Geschäftsobjekt, das Mitglied, um eine zusätzliche Initialisierung oder die Arbeit auszuführen.  
  
 Die <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating%2A> und <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated%2A> Methoden werden nicht aufgerufen, indem die <xref:System.Web.UI.WebControls.ObjectDataSource> zu steuern, ist die Geschäftsobjektmethode aus, die die Datenvorgänge ausführt `static`.  
  
 Die <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement stellt viele Ereignisse, die Sie behandeln können, um mit den zugrunde liegenden Geschäftsobjekten zu verschiedenen Zeitpunkten im Lebenszyklus zu arbeiten. Die folgende Tabelle enthält die Ereignisse und den zugehörigen <xref:System.EventArgs> Klassen und Ereignishandlerdelegaten.  
  
|event|EventArgs|EventHandler|  
|-----------|---------------|------------------|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>.<br /><br /> Tritt auf, unmittelbar bevor die Instanz das Geschäftsobjekt, das erstellt wird.|<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>.<br /><br /> Tritt unmittelbar nach der Instanz das Geschäftsobjekt, das erstellt wird.|<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>.<br /><br /> Tritt auf, bevor die Daten abgerufen werden.|<xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Inserting>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> und <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting>.<br /><br /> Erfolgen Sie, bevor eine Insert, Update oder Delete-Vorgang ausgeführt wird.|<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Selected>.<br /><br /> Tritt auf, nachdem die Daten abgerufen werden.|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updated>, <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>.<br /><br /> Treten Sie auf, nachdem die INSERT-, Update- oder Delete-Vorgang abgeschlossen ist.|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing>.<br /><br /> Tritt auf, bevor ein Geschäftsobjekt zerstört wird.|<xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler>|  
  
   
  
## Examples  
 Dieser Abschnitt enthält zwei Codebeispiele. Im ersten Codebeispiel wird veranschaulicht, wie Sie mit einem <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement mit einem Geschäftsobjekt und <xref:System.Web.UI.WebControls.GridView> -Steuerelement zum Abrufen und Anzeigen von Informationen. Im zweite Codebeispiel enthält die Beispiel-grundlegender geschäftlicher-Objekt, das im ersten Codebeispiel wird verwendet.  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit einem <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement mit einem Geschäftsobjekt und <xref:System.Web.UI.WebControls.GridView> -Steuerelement zum Abrufen und Anzeigen von Informationen. In diesem Beispiel, wie in vielen realen Szenarien möglicherweise nicht möglich, noch wird eine Standardinstanz von Geschäftsobjekt mit Verwendung der <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement. In diesem Beispiel die <xref:System.Web.UI.WebControls.ObjectDataSource> den Standardkonstruktor kann nicht erfolgreich aufgerufen werden, da eine Ausnahme ausgelöst wird. In einigen Fällen der Standardkonstruktor kann geschützt werden, und in anderen Fällen möglicherweise nicht das Geschäftsobjekt, das auf einen gewünschten Status initialisiert. Unabhängig von den Gründen, können Sie eine Instanz des Geschäftsobjekts selbst erstellen und legen die Instanz auf der <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> Eigenschaft der <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> -Objekt, das an den Handler übergeben wird. Dies ist das Geschäftsobjekt, das Instanz, die <xref:System.Web.UI.WebControls.ObjectDataSource> verwendet, um die Ausführung seiner Arbeit.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_15#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_15/CS/objds15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_15#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_15/VB/objds15vb.aspx#1)]  
  
 Im folgenden Codebeispiel wird veranschaulicht, das Beispiel grundlegender geschäftlicher-Objekt, das im vorherigen Codebeispiel verwendet wird.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_15#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_15/CS/northwindemployee15.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_15#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_15/VB/northwindemployee15.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectDataSourceEventArgs (object objectInstance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object objectInstance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceEventArgs.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (objectInstance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectDataSourceEventArgs(System::Object ^ objectInstance);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.ObjectDataSourceEventArgs : obj -&gt; System.Web.UI.WebControls.ObjectDataSourceEventArgs" Usage="new System.Web.UI.WebControls.ObjectDataSourceEventArgs objectInstance" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="objectInstance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="objectInstance">Das Geschäftsobjekt, mit dem die <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> interagiert, um Datenoperationen auszuführen.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.ObjectDataSourceEventArgs" />-Klasse unter Verwendung des angegebenen Objekts.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSourceEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="ObjectInstance">
      <MemberSignature Language="C#" Value="public object ObjectInstance { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ObjectInstance" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance" />
      <MemberSignature Language="VB.NET" Value="Public Property ObjectInstance As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ObjectInstance { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ObjectInstance : obj with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Objekt ab, das das Geschäftsobjekt darstellt, mit dem das <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />-Steuerelement Datenoperationen ausführt, oder legt dieses fest.</summary>
        <value>Das Geschäftsobjekt, das die <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> zum Ausführen von Datenoperationen verwendet, andernfalls <see langword="null" />, wenn <see langword="null" /> an <see cref="T:System.Web.UI.WebControls.ObjectDataSourceEventArgs" /> übergeben wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Dieser Abschnitt enthält zwei Codebeispiele. Im ersten Codebeispiel wird veranschaulicht, wie Sie mit einem <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement mit einem Geschäftsobjekt und <xref:System.Web.UI.WebControls.GridView> -Steuerelement zum Abrufen und Anzeigen von Informationen. Im zweite Codebeispiel enthält die Beispiel-grundlegender geschäftlicher-Objekt, das im ersten Codebeispiel wird verwendet.  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit einem <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement mit einem Geschäftsobjekt und <xref:System.Web.UI.WebControls.GridView> -Steuerelement zum Abrufen und Anzeigen von Informationen. In diesem Beispiel, wie in vielen realen Szenarien möglicherweise nicht möglich, noch wird eine Standardinstanz von Geschäftsobjekt mit Verwendung der <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement. In diesem Beispiel die <xref:System.Web.UI.WebControls.ObjectDataSource> den Standardkonstruktor kann nicht erfolgreich aufgerufen werden, da eine Ausnahme ausgelöst wird. In einigen Fällen der Standardkonstruktor kann geschützt werden, und in anderen Fällen möglicherweise nicht das Geschäftsobjekt, das auf einen gewünschten Status initialisiert. Unabhängig von den Gründen, können Sie eine Instanz des Geschäftsobjekts selbst erstellen und legen die Instanz auf der <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> Eigenschaft der <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> -Objekt, das an den Handler übergeben wird. Dies ist das Geschäftsobjekt, das Instanz, die <xref:System.Web.UI.WebControls.ObjectDataSource> verwendet, um die Ausführung seiner Arbeit.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_15#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_15/CS/objds15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_15#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_15/VB/objds15vb.aspx#1)]  
  
 Im folgenden Codebeispiel wird veranschaulicht, das Beispiel grundlegender geschäftlicher-Objekt, das im vorherigen Codebeispiel verwendet wird.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_15#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_15/CS/northwindemployee15.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_15#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_15/VB/northwindemployee15.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating" />
      </Docs>
    </Member>
  </Members>
</Type>