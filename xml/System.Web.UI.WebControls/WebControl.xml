<Type Name="WebControl" FullName="System.Web.UI.WebControls.WebControl">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0947e9ccddd8d42130ca0108791eb8d80d50eca6" /><Meta Name="ms.sourcegitcommit" Value="a22d0855bbf24d893f43605f8b7e3a44bd9551a5" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70317696" /></Metadata><TypeSignature Language="C#" Value="public class WebControl : System.Web.UI.Control, System.Web.UI.IAttributeAccessor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebControl extends System.Web.UI.Control implements class System.Web.UI.IAttributeAccessor" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebControl" />
  <TypeSignature Language="VB.NET" Value="Public Class WebControl&#xA;Inherits Control&#xA;Implements IAttributeAccessor" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebControl : System::Web::UI::Control, System::Web::UI::IAttributeAccessor" />
  <TypeSignature Language="F#" Value="type WebControl = class&#xA;    inherit Control&#xA;    interface IAttributeAccessor" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IAttributeAccessor</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.Themeable(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Dient als Basisklasse, die die Methoden, Eigenschaften und Ereignisse definiert, die üblicherweise für alle Steuerelemente im <see cref="N:System.Web.UI.WebControls" />-Namespace verwendet werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebControl> -Klasse stellt die Eigenschaften, Methoden und Ereignisse bereit, die allen Webserver-Steuerelementen gemeinsam sind. Sie können das Erscheinungsbild und das Verhalten eines Webserver Steuer Elements steuern, indem Sie in dieser Klasse definierte Eigenschaften festlegen. Z. B. die Hintergrundfarbe und Schriftfarbe eines Steuerelements mithilfe von gesteuert werden die <xref:System.Web.UI.WebControls.WebControl.BackColor%2A> und <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A> Eigenschaften bzw. Bei Steuerelementen, die einen Rahmen anzeigen können, können Sie die Rahmenbreite, die Rahmenart und die Rahmenfarbe steuern, indem <xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A>Sie <xref:System.Web.UI.WebControls.WebControl.BorderStyle%2A>die Eigenschaften <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A> , und festlegen. Die Größe eines Webserver Steuer Elements kann mithilfe der <xref:System.Web.UI.WebControls.WebControl.Height%2A> -Eigenschaft und der- <xref:System.Web.UI.WebControls.WebControl.Width%2A> Eigenschaft angegeben werden.  
  
 Das Verhalten des Steuer Elements kann durch Festlegen bestimmter Eigenschaften angegeben werden. Sie können ein Steuerelement aktivieren und deaktivieren, indem <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> Sie die-Eigenschaft festlegen. Die Position des Steuer Elements in der Aktivier Reihenfolge wird durch <xref:System.Web.UI.WebControls.WebControl.TabIndex%2A> Festlegen der-Eigenschaft gesteuert. Sie können eine QuickInfo für das Steuerelement angeben, <xref:System.Web.UI.WebControls.WebControl.ToolTip%2A> indem Sie die-Eigenschaft festlegen.  
  
> [!NOTE]
>  Nicht alle Steuerelemente unterstützen jede Eigenschaft, die in dieser Klasse definiert ist. Spezifische Informationen dazu, ob eine Eigenschaft unterstützt wird, finden Sie in der Dokumentation für das jeweilige Steuerelement.  
  
> [!NOTE]
>  Einige Eigenschaften in dieser Klasse werden je nach Browser unterschiedlich gerencht. Einige Eigenschaften werden überhaupt nicht angezeigt, andere hingegen nicht, aber Sie haben keine Auswirkungen. Die <xref:System.Web.Configuration.HttpCapabilitiesBase.TagWriter%2A> -Eigenschaft <xref:System.Web.HttpBrowserCapabilities> des-Objekts bestimmt die Art und Weise, in der ein Webserver Steuerelement gerendert wird. Bei Browsern, die HTML 4,0 unterstützen <xref:System.Web.Configuration.HttpCapabilitiesBase.TagWriter%2A> , enthält die Eigenschaft ein <xref:System.Web.HttpBrowserCapabilities> reguläres Objekt, und die meisten Eigenschaften werden mit HTML 4,0-Format Attributen gerendert. Browser, die nicht bekanntermaßen HTML 4,0 unterstützen, verwenden das <xref:System.Web.UI.Html32TextWriter> -Objekt. Dadurch werden die Stil Attribute automatisch allen relevanten HTML 3,2-Tagattributen zugeordnet. In einigen Fällen, wie z. b <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A> . mit der-Eigenschaft, werden die Stil Attribute in zusätzliche Tags, `<font>` z. b. Tags, konvertiert. In einigen Fällen wird keine Zuordnung durchgeführt. Spezifische Informationen darüber, wie eine Eigenschaft in verschiedenen Browsern gerendert wird, finden Sie in der Dokumentation für die jeweilige Eigenschaft.  
  
 Eine Liste der anfänglichen Eigenschaftswerte für eine Instanz von <xref:System.Web.UI.WebControls.WebControl>finden Sie im <xref:System.Web.UI.WebControls.WebControl.%23ctor%2A> -Konstruktor.  
  
   
  
## Examples  
 [!code-csharp[WebControlAddAttributesToRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebControlAddAttributesToRender/CS/addattrib.cs#1)]
 [!code-vb[WebControlAddAttributesToRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebControlAddAttributesToRender/VB/addattrib.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.WebControls.WebControl.BackColor" />
    <altmember cref="P:System.Web.UI.WebControls.WebControl.ForeColor" />
    <altmember cref="P:System.Web.UI.WebControls.WebControl.BorderWidth" />
    <altmember cref="P:System.Web.UI.WebControls.WebControl.BorderStyle" />
    <altmember cref="P:System.Web.UI.WebControls.WebControl.BorderColor" />
    <altmember cref="P:System.Web.UI.WebControls.WebControl.Height" />
    <altmember cref="P:System.Web.UI.WebControls.WebControl.Width" />
    <altmember cref="P:System.Web.UI.WebControls.WebControl.Enabled" />
    <altmember cref="P:System.Web.UI.WebControls.WebControl.TabIndex" />
    <altmember cref="P:System.Web.UI.WebControls.WebControl.ToolTip" />
    <related type="Article" href="https://msdn.microsoft.com/library/143d14d6-9d12-4d4b-ae60-f00e0eb6938f">ASP.NET-Server Steuerelemente und Browser Funktionen</related>
    <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Entwickeln benutzerdefinierter ASP.NET-Server Steuerelemente</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.WebControl" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebControl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WebControl();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.WebControl" />-Klasse, die ein <see langword="Span" />-HTML-Tag darstellt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor wird verwendet, um eine neue Instanz der <xref:System.Web.UI.WebControls.WebControl> -Klasse zu initialisieren, die ein `Span` HTML-Element darstellt.  
  
 In der folgenden Tabelle wird der anfängliche Eigenschafts Wert für eine <xref:System.Web.UI.WebControls.WebControl>Instanz von angezeigt.  
  
|Eigenschaft|Anfangswert|  
|--------------|-------------------|  
|`TagKey`|Der <xref:System.Web.UI.HtmlTextWriterTag.Span>-Enumerationswert.|  
  
> [!NOTE]
>  Dieser Konstruktor wird nicht direkt aufgerufen. Stattdessen wird Sie häufig vom Konstruktor einer abgeleiteten Klasse aufgerufen, um die <xref:System.Web.UI.WebControls.WebControl.TagKey%2A> -Eigenschaft mit dem <xref:System.Web.UI.HtmlTextWriterTag.Span> -Enumerationswert zu initialisieren.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.TagKey" />
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Entwickeln benutzerdefinierter ASP.NET-Server Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebControl (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (tag As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WebControl(System::String ^ tag);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.WebControl : string -&gt; System.Web.UI.WebControls.WebControl" Usage="new System.Web.UI.WebControls.WebControl tag" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag">Ein HTML-Tag.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.WebControl" />-Klasse unter Verwendung des angegebenen HTML-Tags.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diesen Konstruktor, um eine neue Instanz der <xref:System.Web.UI.WebControls.WebControl> -Klasse mithilfe des angegebenen HTML-Tags zu erstellen und zu initialisieren.  
  
 In der folgenden Tabelle werden die anfänglichen Eigenschaftswerte für <xref:System.Web.UI.WebControls.WebControl>eine Instanz von angezeigt.  
  
|Eigenschaft|Anfangswert|  
|--------------|-------------------|  
|`TagKey`|Der <xref:System.Web.UI.HtmlTextWriterTag.Unknown>-Enumerationswert.|  
|`TagName`|Der Wert des `tag`-Parameters.|  
  
> [!NOTE]
>  Dieser Konstruktor wird nicht direkt aufgerufen. Stattdessen wird Sie häufig vom Konstruktor einer abgeleiteten Klasse aufgerufen, um die-Eigenschaft und <xref:System.Web.UI.WebControls.WebControl.TagKey%2A> die <xref:System.Web.UI.WebControls.WebControl.TagName%2A> -Eigenschaft zu initialisieren.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.TagKey" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.TagName" />
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Entwickeln benutzerdefinierter ASP.NET-Server Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebControl (System.Web.UI.HtmlTextWriterTag tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Web.UI.HtmlTextWriterTag tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.#ctor(System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tag As HtmlTextWriterTag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebControl(System::Web::UI::HtmlTextWriterTag tag);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.WebControl : System.Web.UI.HtmlTextWriterTag -&gt; System.Web.UI.WebControls.WebControl" Usage="new System.Web.UI.WebControls.WebControl tag" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="tag" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="tag">Einer der <see cref="T:System.Web.UI.HtmlTextWriterTag" />-Werte.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.WebControl" />-Klasse unter Verwendung des angegebenen HTML-Tags.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diesen Konstruktor, um mithilfe des angegebenen <xref:System.Web.UI.WebControls.WebControl> <xref:System.Web.UI.HtmlTextWriterTag?displayProperty=nameWithType> -Werts eine neue Instanz der-Klasse zu erstellen und zu initialisieren.  
  
 In der folgenden Tabelle wird der anfängliche Eigenschafts Wert für eine <xref:System.Web.UI.WebControls.WebControl>Instanz von angezeigt.  
  
|Eigenschaft|Anfangswert|  
|--------------|-------------------|  
|`TagKey`|Der <xref:System.Web.UI.HtmlTextWriterTag> durch den `tag` -Parameter angegebene Enumerationswert.|  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie der-Konstruktor für <xref:System.Web.UI.WebControls.WebControl> die-Klasse verwendet `TextArea` wird, um ein HTML-Element zu erstellen und auf der Web Forms Seite anzuzeigen.  
  
> [!NOTE]
>  Im folgenden Codebeispiel wird das Einzel Datei-Code Modell verwendet und funktioniert möglicherweise nicht ordnungsgemäß, wenn es direkt in eine Code-Behind-Datei kopiert wird. Dieses Codebeispiel muss in eine leere Textdatei mit der Dateinamenerweiterung ". aspx" kopiert werden. Weitere Informationen zum Web Forms-Code Modell finden Sie unter [ASP.net Web Forms Page Code Model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[Classic WebControl.WebControl Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.WebControl Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.WebControl Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.WebControl Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.TagKey" />
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Entwickeln benutzerdefinierter ASP.NET-Server Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="AccessKey">
      <MemberSignature Language="C#" Value="public virtual string AccessKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AccessKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.AccessKey" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AccessKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ AccessKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AccessKey : string with get, set" Usage="System.Web.UI.WebControls.WebControl.AccessKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Zugriffstaste ab, mit der Sie schnell zum Webserversteuerelement navigieren können, oder legt diese fest.</summary>
        <value>Die Zugriffstaste für schnelles Navigieren zum Webserversteuerelement. Der Standardwert ist <see cref="F:System.String.Empty" /> und gibt an, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.WebControl.AccessKey%2A> die-Eigenschaft, um die Tastenkombination für das Webserver Steuerelement anzugeben. Dadurch können Sie schnell zum Steuerelement navigieren, indem Sie die Alt-Taste und die Taste für das angegebene Zeichen auf der Tastatur drücken. Wenn beispielsweise der Zugriffsschlüssel eines Steuer Elements auf die Zeichenfolge `"D"` festgelegt wird, wird angegeben, dass der Benutzer durch Drücken von Alt + D zum Steuerelement navigieren kann.  
  
 Nur eine Zeichenfolge mit einem einzelnen Zeichen ist <xref:System.Web.UI.WebControls.WebControl.AccessKey%2A> für die Eigenschaft zulässig. Wenn Sie versuchen, diese Eigenschaft auf einen Wert festzulegen, der `null`weder <xref:System.String.Empty>, noch eine einzelne Zeichenfolge ist, wird eine Ausnahme ausgelöst.  
  
> [!NOTE]
>  Diese Eigenschaft wird nur in Internet Explorer 4,0 und höher unterstützt.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.WebControl.AccessKey%2A> -Eigenschaft <xref:System.Web.UI.WebControls.TextBox> eines-Steuer Elements festgelegt und verwendet wird.  
  
> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[Classic WebControl.AccessKey Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.AccessKey Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.AccessKey Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.AccessKey Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Die angegebene Zugriffstaste ist weder <see langword="null" />, noch <see cref="F:System.String.Empty" />, noch eine Zeichenfolge mit einem einzigen Zeichen.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/143d14d6-9d12-4d4b-ae60-f00e0eb6938f">ASP.NET-Server Steuerelemente und Browser Funktionen</related>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Entwickeln benutzerdefinierter ASP.NET-Server Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected virtual void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member AddAttributesToRender : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.AddAttributesToRender : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="webControl.AddAttributesToRender writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Ein <see cref="T:System.Web.UI.HtmlTextWriter" />, der den Ausgabestream zum Rendern des HTML-Inhalts auf dem Client darstellt.</param>
        <summary>Fügt dem angegebenen <see cref="T:System.Web.UI.HtmlTextWriterTag" /> die darzustellenden HTML-Attribute und -Stile hinzu. Diese Methode wird hauptsächlich von Steuerelemententwicklern verwendet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um Attribute und Stile für ein Webserver Steuerelement auf dem Client zu rendern, werden in <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> der <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A?displayProperty=nameWithType> Regel die-Methode und die-Methode aufgerufen, <xref:System.Web.UI.HtmlTextWriter> um die einzelnen Attribute und Stile einzeln in den Ausgabestream einzufügen Um den Prozess zu vereinfachen, kapselt diese Methode alle Aufrufe der <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A?displayProperty=nameWithType> - <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A?displayProperty=nameWithType> Methode und der-Methode für jedes Attribut und jeden Stil, die dem Webserver Steuerelement zugeordnet sind. Alle Attribute und Stile werden in einem einzelnen <xref:System.Web.UI.HtmlTextWriter> Methoden aufrufin den Ausgabestream eingefügt. Diese Methode wird in der Regel von Steuerelement Entwicklern in abgeleiteten Klassen überschrieben, um die entsprechenden Attribute <xref:System.Web.UI.HtmlTextWriter> und Stile in den Ausgabestream für die-Klasse einzufügen.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.WebControl.AddAttributesToRender%2A> -Methode kann nicht zum Einfügen von Client Skripts verwendet werden. Informationen zur Verwendung von Client Skripts <xref:System.Web.UI.ClientScriptManager> finden Sie in der-Klasse.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie eine Klasse erstellt wird, die <xref:System.Web.UI.WebControls.WebControl> von der-Klasse abgeleitet wird. Die Basis Implementierung der <xref:System.Web.UI.WebControls.WebControl.AddAttributesToRender%2A> -Methode wird überschrieben, um der abgeleiteten Klasse <xref:System.Web.UI.HtmlTextWriter> im Ausgabestream geeignete Attribute hinzuzufügen.  
  
 [!code-csharp[WebControlAddAttributesToRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebControlAddAttributesToRender/CS/addattrib.cs#1)]
 [!code-vb[WebControlAddAttributesToRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebControlAddAttributesToRender/VB/addattrib.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddAttribute" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddStyleAttribute" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Entwickeln benutzerdefinierter ASP.NET-Server Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="ApplyStyle">
      <MemberSignature Language="C#" Value="public void ApplyStyle (System.Web.UI.WebControls.Style s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ApplyStyle(class System.Web.UI.WebControls.Style s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.ApplyStyle(System.Web.UI.WebControls.Style)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyStyle (s As Style)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyStyle(System::Web::UI::WebControls::Style ^ s);" />
      <MemberSignature Language="F#" Value="member this.ApplyStyle : System.Web.UI.WebControls.Style -&gt; unit" Usage="webControl.ApplyStyle s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Web.UI.WebControls.Style" />
      </Parameters>
      <Docs>
        <param name="s">Ein <see cref="T:System.Web.UI.WebControls.Style" />, der die zu kopierende Formatvorlage darstellt.</param>
        <summary>Kopiert alle nicht leeren Elemente der angegebenen Formatvorlage in das Websteuerelement und überschreibt hierbei alle vorhandenen Formatvorlagenelemente des Steuerelements. Diese Methode wird hauptsächlich von Steuerelemententwicklern verwendet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.WebControl.ApplyStyle%2A> -Methode verwendet wird, um einen <xref:System.Web.UI.WebControls.DataGrid> Stil auf ein-Steuerelement anzuwenden.  
  
> [!NOTE]
>  Im folgenden Codebeispiel wird das Einzel Datei-Code Modell verwendet und funktioniert möglicherweise nicht ordnungsgemäß, wenn es direkt in eine Code-Behind-Datei kopiert wird. Dieses Codebeispiel muss in eine leere Textdatei mit der Erweiterung ASPX kopiert werden. Weitere Informationen zum Web Forms-Code Modell finden Sie unter [ASP.net Web Forms Page Code Model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[WebControlApplyStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebControlApplyStyle/CS/webcontrolapplystylecs.aspx#1)]
 [!code-aspx-vb[WebControlApplyStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebControlApplyStyle/VB/webcontrolapplystylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Entwickeln benutzerdefinierter ASP.NET-Server Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Web.UI.AttributeCollection Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.AttributeCollection Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::AttributeCollection ^ Attributes { System::Web::UI::AttributeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Web.UI.AttributeCollection" Usage="System.Web.UI.WebControls.WebControl.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.AttributeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Auflistung von beliebigen Attributen (nur für die Darstellung) ab, die keinen Eigenschaften des Steuerelements entsprechen.</summary>
        <value>Eine <see cref="T:System.Web.UI.AttributeCollection" /> von Name-Wert-Paaren.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebControl.Attributes%2A> -Auflistung enthält eine Auflistung aller Attribute, die im öffnenden Tag eines Webserver Steuer Elements deklariert wurden. Dies ermöglicht es Ihnen, die einem Webserver Steuerelement zugeordneten Attribute Programm gesteuert zu steuern. Sie können der Sammlung Attribute hinzufügen oder Attribute aus der Auflistung entfernen.  
  
> [!NOTE]
>  Diese Eigenschaft wird unabhängig von den Browsereinstellungen mit allen Attributen in der Auflistung im öffnenden Tag des Steuer Elements gerendert. Nicht alle Browser unterstützen jedes Attribut, das gerendert wird. Die nicht unterstützten Attribute werden normalerweise vom Browser ignoriert.  
  
> [!NOTE]
>  Mithilfe der <xref:System.Web.UI.WebControls.WebControl> <xref:System.Web.UI.WebControls.WebControl.Attributes%2A> -Auflistung können Sie keine Client seitigen Skripts zu einer-Instanz hinzufügen. Um ein Client seitiges Skript hinzuzufügen, verwenden <xref:System.Web.UI.Page.ClientScript%2A> Sie die- <xref:System.Web.UI.Page> Eigenschaft für das-Steuerelement.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, <xref:System.Web.UI.WebControls.WebControl.Attributes%2A> wie die- <xref:System.Web.UI.WebControls.WebControl> Eigenschaft eines verwendet werden kann, um einen JavaScript- <xref:System.Web.UI.WebControls.TextBox> Befehl auszuführen, wenn das Steuerelement den Fokus verliert.  
  
> [!NOTE]
>  Im folgenden Codebeispiel wird das Einzel Datei-Code Modell verwendet und funktioniert möglicherweise nicht ordnungsgemäß, wenn es direkt in eine Code-Behind-Datei kopiert wird. Dieses Codebeispiel muss in eine leere Textdatei mit der Erweiterung ASPX kopiert werden. Weitere Informationen zum Web Forms-Code Modell finden Sie unter [ASP.net Web Forms Page Code Model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[Classic WebControl.Attributes Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.Attributes Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.Attributes Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.Attributes Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.AttributeCollection" />
        <altmember cref="T:System.Web.UI.ClientScriptManager" />
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Entwickeln benutzerdefinierter ASP.NET-Server Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackColor : System.Drawing.Color with get, set" Usage="System.Web.UI.WebControls.WebControl.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.WebColorConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Hintergrundfarbe des Webserversteuerelements ab oder legt diese fest.</summary>
        <value>Eine <see cref="T:System.Drawing.Color" />, die die Hintergrundfarbe des Steuerelements darstellt. Der Standardwert ist <see cref="F:System.Drawing.Color.Empty" /> und gibt an, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.WebControl.BackColor%2A> die-Eigenschaft, um die Hintergrundfarbe des Webserver Steuer Elements anzugeben. Diese Eigenschaft wird mithilfe eines <xref:System.Drawing.Color?displayProperty=nameWithType> -Objekts festgelegt.  
  
> [!NOTE]
>  Diese Eigenschaft wird nur für bestimmte Steuerelemente angezeigt. Beispielsweise <xref:System.Web.UI.WebControls.Table>wird diese <xref:System.Web.UI.WebControls.Panel>Eigenschaft <xref:System.Web.UI.WebControls.DataGrid>von <xref:System.Web.UI.WebControls.Calendar>,, <xref:System.Web.UI.WebControls.ValidationSummary> , und angezeigt. Es funktioniert <xref:System.Web.UI.WebControls.CheckBoxList>auch für und, <xref:System.Web.UI.WebControls.RadioButtonList> wenn die `RepeatLayout` - <xref:System.Web.UI.WebControls.DataList> Eigenschaft ist `RepeatLayout.Table`, nicht `RepeatLayout.Flow`.  
  
 Im Allgemeinen können nur Steuerelemente, die als `<table>` Tag dargestellt werden, eine Hintergrundfarbe in HTML 3,2 anzeigen, wohingegen fast jedes Steuerelement in HTML 4,0 ist.  
  
 Für Steuerelemente, die als `<span>` Tag (einschließlich <xref:System.Web.UI.WebControls.Label>, alle Validierungs Steuerelemente und Listen Steuerelemente, `RepeatLayout` deren-Eigenschaft `RepeatLayout.Flow`auf festgelegt ist), funktioniert diese Eigenschaft in Microsoft Internet Explorer Version 5 und höher, aber nicht in Microsoft Internet Explorer Version 4.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.WebControl.BackColor%2A> -Eigenschaft <xref:System.Web.UI.WebControls.Table> des-Steuer Elements festgelegt wird, <xref:System.Web.UI.WebControls.WebControl> die von der-Basisklasse geerbt wird.  
  
 [!code-aspx-csharp[Classic WebControl.BackColor Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.BackColor Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.BackColor Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.BackColor Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="T:System.Web.UI.WebControls.Table" />
        <altmember cref="T:System.Web.UI.WebControls.Panel" />
        <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
        <altmember cref="T:System.Web.UI.WebControls.Calendar" />
        <altmember cref="T:System.Web.UI.WebControls.ValidationSummary" />
        <altmember cref="T:System.Web.UI.WebControls.CheckBoxList" />
        <altmember cref="T:System.Web.UI.WebControls.RadioButtonList" />
        <altmember cref="T:System.Web.UI.WebControls.DataList" />
        <altmember cref="T:System.Web.UI.WebControls.RepeatLayout" />
        <related type="Article" href="https://msdn.microsoft.com/library/143d14d6-9d12-4d4b-ae60-f00e0eb6938f">ASP.NET-Server Steuerelemente und Browser Funktionen</related>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Entwickeln benutzerdefinierter ASP.NET-Server Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="BorderColor">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Color BorderColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BorderColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.BorderColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BorderColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BorderColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BorderColor : System.Drawing.Color with get, set" Usage="System.Web.UI.WebControls.WebControl.BorderColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.WebColorConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Rahmenfarbe des Websteuerelements ab oder legt diese fest.</summary>
        <value>Eine <see cref="T:System.Drawing.Color" />, die die Rahmenfarbe des Steuerelements darstellt. Der Standardwert ist <see cref="F:System.Drawing.Color.Empty" /> und gibt an, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A> die-Eigenschaft, um die Rahmenfarbe des Webserver Steuer Elements anzugeben. Diese Eigenschaft wird mithilfe eines <xref:System.Drawing.Color> -Objekts festgelegt.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A> -Eigenschaft wird nur für bestimmte Steuerelemente angezeigt. Beispielsweise wird diese <xref:System.Web.UI.WebControls.Table>Eigenschaft <xref:System.Web.UI.WebControls.Panel>durch die Steuerelemente <xref:System.Web.UI.WebControls.ValidationSummary> ,, <xref:System.Web.UI.WebControls.DataGrid>, <xref:System.Web.UI.WebControls.Calendar>und angezeigt. Es funktioniert auch <xref:System.Web.UI.WebControls.CheckBoxList>für die Steuerelemente, <xref:System.Web.UI.WebControls.RadioButtonList> `RepeatLayout` und <xref:System.Web.UI.WebControls.DataList> , wenn die-Eigenschaft auf `RepeatLayout.Table`festgelegt ist, `RepeatLayout.Flow`nicht. Es wird jedoch als `bordercolor` -Attribut gerendert, das nicht Teil des HTML 3,2-Standards ist. Das `bordercolor` Attribut funktioniert für Microsoft Internet Explorer Version 3,0 oder höher, aber nicht für die meisten anderen Browser.  
  
 Wenn die <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A> Eigenschaft nicht festgelegt wird, verwendet der Browser seine Standardrahmen Farbe. Verwenden Sie Ihren Browser, um das Standardfarbschema zu ermitteln.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A> -Eigenschaft <xref:System.Web.UI.WebControls.Table> des-Steuer Elements festgelegt wird, <xref:System.Web.UI.WebControls.WebControl> die von der-Basisklasse geerbt wird.  
  
 [!code-aspx-csharp[Classic WebControl.BorderColor Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.BorderColor Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.BorderColor Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.BorderColor Example/VB/sourcevb.aspx#1)]  
  
> [!NOTE]
>  Im folgenden Codebeispiel wird das Einzel Datei-Code Modell verwendet und funktioniert möglicherweise nicht ordnungsgemäß, wenn es direkt in eine Code-Behind-Datei kopiert wird. Dieses Codebeispiel muss in eine leere Textdatei mit der Erweiterung ASPX kopiert werden. Weitere Informationen zum Web Forms-Code Modell finden Sie unter [ASP.net Web Forms Page Code Model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[System.Web.UI.WebControl.BorderProperties#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/CS/borderpropertiescs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControl.BorderProperties#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/VB/borderpropertiesvb.aspx#1)]  
[!code-aspx-csharp[System.Web.UI.WebControl.BorderProperties#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/CS/borderpropertiescs.aspx#3)]
[!code-aspx-vb[System.Web.UI.WebControl.BorderProperties#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/VB/borderpropertiesvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="T:System.Web.UI.WebControls.Table" />
        <altmember cref="T:System.Web.UI.WebControls.Panel" />
        <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
        <altmember cref="T:System.Web.UI.WebControls.Calendar" />
        <altmember cref="T:System.Web.UI.WebControls.ValidationSummary" />
        <altmember cref="T:System.Web.UI.WebControls.CheckBoxList" />
        <altmember cref="T:System.Web.UI.WebControls.RadioButtonList" />
        <altmember cref="T:System.Web.UI.WebControls.DataList" />
        <altmember cref="T:System.Web.UI.WebControls.RepeatLayout" />
        <related type="Article" href="https://msdn.microsoft.com/library/143d14d6-9d12-4d4b-ae60-f00e0eb6938f">ASP.NET-Server Steuerelemente und Browser Funktionen</related>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Entwickeln benutzerdefinierter ASP.NET-Server Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="BorderStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.BorderStyle BorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.BorderStyle BorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.BorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BorderStyle As BorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::BorderStyle BorderStyle { System::Web::UI::WebControls::BorderStyle get(); void set(System::Web::UI::WebControls::BorderStyle value); };" />
      <MemberSignature Language="F#" Value="member this.BorderStyle : System.Web.UI.WebControls.BorderStyle with get, set" Usage="System.Web.UI.WebControls.WebControl.BorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.BorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Rahmenart des Webserversteuerelements ab oder legt diese fest.</summary>
        <value>Einer der <see cref="T:System.Web.UI.WebControls.BorderStyle" />-Enumerationswerte. Die Standardeinstellung ist <see langword="NotSet" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.WebControl.BorderStyle%2A> die-Eigenschaft, um die Rahmenart für das Webserver Steuerelement anzugeben. Diese Eigenschaft wird mit einem der <xref:System.Web.UI.WebControls.BorderStyle> -Enumerationswerte festgelegt. In der folgenden Tabelle sind die möglichen Werte aufgeführt.  
  
|Rahmenstil|Beschreibung|  
|------------------|-----------------|  
|`NotSet`|Die Rahmenart ist nicht festgelegt.|  
|`None`|Kein Rahmen|  
|`Dotted`|Ein Rahmen mit punktierter Linie.|  
|`Dashed`|Ein Rahmen mit gestrichelter Linie.|  
|`Solid`|Ein Rahmen mit durchgehender Linie.|  
|`Double`|Ein solider Rahmen mit doppelter Linie.|  
|`Groove`|Ein vertiefter Rahmen für die Darstellung eines abgesenkten Rahmens.|  
|`Ridge`|Ein erhöhter Rahmen für die Darstellung eines angehobenen Rahmens.|  
|`Inset`|Ein abgesenkter Rahmen für die Darstellung eines abgesenkten Steuerelements.|  
|`Outset`|Ein erhöhter Rahmen für die Darstellung eines angehobenen Steuerelements.|  
  
> [!NOTE]
>  Diese Eigenschaft wird in Browsern, die älter sind als Microsoft Internet Explorer 4, für ein beliebiges Webserver Steuerelement nicht angezeigt. In HTML 3,2 gibt es keine Entsprechung.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.WebControl.BorderStyle%2A> -Eigenschaft <xref:System.Web.UI.WebControls.Table> des-Steuer Elements festgelegt wird, <xref:System.Web.UI.WebControls.WebControl> die von der-Basisklasse geerbt wird.  
  
 [!code-aspx-csharp[Classic WebControl.BorderStyle Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.BorderStyle Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.BorderStyle Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.BorderStyle Example/VB/sourcevb.aspx#1)]  
  
> [!NOTE]
>  Im folgenden Codebeispiel wird das Einzel Datei-Code Modell verwendet und funktioniert möglicherweise nicht ordnungsgemäß, wenn es direkt in eine Code-Behind-Datei kopiert wird. Dieses Codebeispiel muss in eine leere Textdatei mit der Erweiterung ASPX kopiert werden. Weitere Informationen zum Web Forms-Code Modell finden Sie unter [ASP.net Web Forms Page Code Model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[System.Web.UI.WebControl.BorderProperties#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/CS/borderpropertiescs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControl.BorderProperties#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/VB/borderpropertiesvb.aspx#1)]  
[!code-aspx-csharp[System.Web.UI.WebControl.BorderProperties#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/CS/borderpropertiescs.aspx#3)]
[!code-aspx-vb[System.Web.UI.WebControl.BorderProperties#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/VB/borderpropertiesvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="T:System.Web.UI.WebControls.BorderStyle" />
        <related type="Article" href="https://msdn.microsoft.com/library/143d14d6-9d12-4d4b-ae60-f00e0eb6938f">ASP.NET-Server Steuerelemente und Browser Funktionen</related>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Entwickeln benutzerdefinierter ASP.NET-Server Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="BorderWidth">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.Unit BorderWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit BorderWidth" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.BorderWidth" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BorderWidth As Unit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::Unit BorderWidth { System::Web::UI::WebControls::Unit get(); void set(System::Web::UI::WebControls::Unit value); };" />
      <MemberSignature Language="F#" Value="member this.BorderWidth : System.Web.UI.WebControls.Unit with get, set" Usage="System.Web.UI.WebControls.WebControl.BorderWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.WebControls.Unit), "")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Rahmenbreite des Webserversteuerelements ab oder legt diese fest.</summary>
        <value>Eine <see cref="T:System.Web.UI.WebControls.Unit" />, die die Rahmenbreite eines Webserversteuerelements darstellt. Der Standardwert ist <see cref="F:System.Web.UI.WebControls.Unit.Empty" /> und gibt an, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A> die-Eigenschaft, um eine Rahmenbreite für ein Steuerelement anzugeben.  
  
> [!NOTE]
>  Diese Eigenschaft funktioniert nicht mit allen Webserver-Steuerelementen. Dies gilt nur für Steuerelemente, die als Tabelle angezeigt werden, <xref:System.Web.UI.WebControls.Table> z <xref:System.Web.UI.WebControls.DataGrid>. b. und.  
  
 Diese Eigenschaft wird mit einem <xref:System.Web.UI.WebControls.Unit> -Objekt festgelegt. Wenn die <xref:System.Web.UI.WebControls.Unit.Value%2A> -Eigenschaft <xref:System.Web.UI.WebControls.Unit> des eine negative Zahl enthält, wird eine-Ausnahme ausgelöst.  
  
> [!NOTE]
>  Die Rahmenbreite kann nur in Pixel für Browser vor Microsoft Internet Explorer Version 5 ausgedrückt werden. Alle Einheits Typen werden in Microsoft Internet Explorer Version 5 und höher unterstützt. Weitere Informationen finden Sie unter dem jeweiligen Steuerelement.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A> -Eigenschaft <xref:System.Web.UI.WebControls.Table> des-Steuer Elements festgelegt <xref:System.Web.UI.WebControls.WebControl> wird, die von der-Basisklasse geerbt wurde.  
  
 [!code-aspx-csharp[Classic WebControl.BorderWidth Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.BorderWidth Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.BorderWidth Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.BorderWidth Example/VB/sourcevb.aspx#1)]  
  
> [!NOTE]
>  Im folgenden Codebeispiel wird das Einzel Datei-Code Modell verwendet und funktioniert möglicherweise nicht ordnungsgemäß, wenn es direkt in eine Code-Behind-Datei kopiert wird. Dieses Codebeispiel muss in eine leere Textdatei mit der Erweiterung ASPX kopiert werden. Weitere Informationen zum Web Forms-Code Modell finden Sie unter [ASP.net Web Forms Page Code Model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[System.Web.UI.WebControl.BorderProperties#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/CS/borderpropertiescs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControl.BorderProperties#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/VB/borderpropertiesvb.aspx#1)]  
[!code-aspx-csharp[System.Web.UI.WebControl.BorderProperties#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/CS/borderpropertiescs.aspx#3)]
[!code-aspx-vb[System.Web.UI.WebControl.BorderProperties#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/VB/borderpropertiesvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die angegebene Rahmenbreite ist ein negativer Wert.</exception>
        <altmember cref="T:System.Web.UI.WebControls.Unit" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <related type="Article" href="https://msdn.microsoft.com/library/143d14d6-9d12-4d4b-ae60-f00e0eb6938f">ASP.NET-Server Steuerelemente und Browser Funktionen</related>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Entwickeln benutzerdefinierter ASP.NET-Server Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="ControlStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style ControlStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style ControlStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.ControlStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ControlStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ ControlStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ControlStyle : System.Web.UI.WebControls.Style" Usage="System.Web.UI.WebControls.WebControl.ControlStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Stil des Webserversteuerelements ab. Diese Eigenschaft wird hauptsächlich von Steuerelemententwicklern verwendet.</summary>
        <value>Ein <see cref="T:System.Web.UI.WebControls.Style" />, der die Darstellungseigenschaften des Webserversteuerelements kapselt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> -Eigenschaft kapselt alle Eigenschaften <xref:System.Web.UI.WebControls.WebControl> der <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A> -Klasse, die die Darstellung des Steuer Elements angeben, z <xref:System.Web.UI.WebControls.WebControl.Font%2A>. b. und.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.ControlStyleCreated" />
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Entwickeln benutzerdefinierter ASP.NET-Server Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="ControlStyleCreated">
      <MemberSignature Language="C#" Value="public bool ControlStyleCreated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ControlStyleCreated" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.ControlStyleCreated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ControlStyleCreated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ControlStyleCreated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ControlStyleCreated : bool" Usage="System.Web.UI.WebControls.WebControl.ControlStyleCreated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob ein <see cref="T:System.Web.UI.WebControls.Style" />-Objekt für die <see cref="P:System.Web.UI.WebControls.WebControl.ControlStyle" />-Eigenschaft erstellt wurde. Diese Eigenschaft wird hauptsächlich von Steuerelemententwicklern verwendet.</summary>
        <value><see langword="true" />, wenn für die <see cref="T:System.Web.UI.WebControls.Style" />-Eigenschaft ein <see cref="P:System.Web.UI.WebControls.WebControl.ControlStyle" />-Objekt erstellt wurde, andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.ControlStyle" />
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Entwickeln benutzerdefinierter ASP.NET-Server Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="CopyBaseAttributes">
      <MemberSignature Language="C#" Value="public void CopyBaseAttributes (System.Web.UI.WebControls.WebControl controlSrc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyBaseAttributes(class System.Web.UI.WebControls.WebControl controlSrc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.CopyBaseAttributes(System.Web.UI.WebControls.WebControl)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyBaseAttributes (controlSrc As WebControl)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyBaseAttributes(System::Web::UI::WebControls::WebControl ^ controlSrc);" />
      <MemberSignature Language="F#" Value="member this.CopyBaseAttributes : System.Web.UI.WebControls.WebControl -&gt; unit" Usage="webControl.CopyBaseAttributes controlSrc" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controlSrc" Type="System.Web.UI.WebControls.WebControl" />
      </Parameters>
      <Docs>
        <param name="controlSrc">Ein <see cref="T:System.Web.UI.WebControls.WebControl" />, das das Quellsteuerelement darstellt, dessen Eigenschaften in das Webserversteuerelement zu kopieren sind, von dem aus diese Methode aufgerufen wird.</param>
        <summary>Kopiert die nicht vom <see cref="P:System.Web.UI.WebControls.WebControl.Style" />-Objekt gekapselten Eigenschaften aus dem angegebenen Webserversteuerelement in das Webserversteuerelement, von dem aus diese Methode aufgerufen wird. Diese Methode wird hauptsächlich von Steuerelemententwicklern verwendet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebControl.CopyBaseAttributes%2A> -Methode kopiert <xref:System.Web.UI.WebControls.WebControl.AccessKey%2A>die <xref:System.Web.UI.WebControls.WebControl.Enabled%2A>Eigenschaften <xref:System.Web.UI.WebControls.WebControl.ToolTip%2A>, <xref:System.Web.UI.WebControls.WebControl.TabIndex%2A>,, <xref:System.Web.UI.WebControls.WebControl.Attributes%2A> und aus dem angegebenen Webserver-Steuerelement in das Webserver Steuerelement, von dem aus diese Methode aufgerufen wird. Dies wird häufig in Fällen verwendet, in denen ein Webserver Steuerelement funktioniert, indem neue Steuerelemente dynamisch erstellt werden, während es die Steuerelemente rendert und verwendet. Diese Methode ist in dieser Situation nützlich, da Sie alle Eigenschaften von Webserver-Steuerelementen kopiert, die <xref:System.Web.UI.WebControls.Style> nicht durch das-Objekt gekapselt sind, sodass Sie auf der äußersten Kontrolle eines geenderten Tags platziert werden können.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="controlSrc" /> ist <see langword="null" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Style" />
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Entwickeln benutzerdefinierter ASP.NET-Server Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="CreateControlStyle">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.Style CreateControlStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.Style CreateControlStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.CreateControlStyle" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateControlStyle () As Style" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::Style ^ CreateControlStyle();" />
      <MemberSignature Language="F#" Value="abstract member CreateControlStyle : unit -&gt; System.Web.UI.WebControls.Style&#xA;override this.CreateControlStyle : unit -&gt; System.Web.UI.WebControls.Style" Usage="webControl.CreateControlStyle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt das Formatvorlagenobjekt, das von der <see cref="T:System.Web.UI.WebControls.WebControl" />-Klasse intern zum Implementieren aller auf Formatvorlagen bezogenen Eigenschaften verwendet wird. Diese Methode wird hauptsächlich von Steuerelemententwicklern verwendet.</summary>
        <returns>Ein <see cref="T:System.Web.UI.WebControls.Style" />, der zum Implementieren aller auf Formatvorlagen bezogenen Steuerelementeigenschaften verwendet wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebControl.CreateControlStyle%2A> -Methode wird verwendet, um das Style-Objekt zu erstellen, das intern zum Implementieren aller Stil bezogenen Eigenschaften verwendet wird. Abgeleitete Klassen können diese Methode überschreiben, um einen Stil zu erstellen, der für die-Klasse geeignet ist. Diese Methode wird hauptsächlich von Steuerelemententwicklern verwendet.  
  
 **Hinweis** Steuerelement Entwickler sollten eine <xref:System.Web.UI.WebControls.Style> zurückgeben, die <xref:System.Web.UI.WebControls.Style> von abgeleitet wird, das vom Basis Steuerelement zurückgegeben wird. Es kann nicht davon ausgegangen werden <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> , dass ein bestimmter Stiltyp ist, da ein abgeleitetes Steuerelement einen anderen Typ zurückgeben kann.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.ControlStyle" />
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Entwickeln benutzerdefinierter ASP.NET-Server Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="CssClass">
      <MemberSignature Language="C#" Value="public virtual string CssClass { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CssClass" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.CssClass" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CssClass As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CssClass { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CssClass : string with get, set" Usage="System.Web.UI.WebControls.WebControl.CssClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.CssClassProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die vom Webserversteuerelement auf dem Client gerenderte CSS-Klasse (Cascading Style Sheet) ab oder legt diese fest.</summary>
        <value>Die vom Webserversteuerelement auf dem Client gerenderte CSS-Klasse. Die Standardeinstellung ist <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.WebControl.CssClass%2A> die-Eigenschaft, um die CSS-Klasse anzugeben, die auf dem Client für das Webserver Steuerelement zu Rendering ist. Diese Eigenschaft wird in Browsern für alle Steuerelemente angezeigt. Sie wird unabhängig vom Browser immer als Klassen Attribut gerendert.  
  
> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 Angenommen, Sie haben die folgende Webserver-Steuerelement Deklaration:  
  
```  
<asp:TextBox id="TextBox1" ForeColor="Red" CssClass="class1" />  
```  
  
 Der folgende HTML-Code wird auf dem Client für die vorherige Deklaration des Webserver-Steuer Elements gerendert:  
  
```  
<input type=text class="class1" style="ForeColor:red">  
```  
  
 Wenn Sie Cascading Stylesheets (CSS) verwenden, um die Darstellung eines Steuer Elements anzupassen, verwenden Sie entweder Inline Stile oder eine separate CSS-Datei, aber nicht beides. Die Verwendung von Inline Formaten und einer separaten CSS-Datei kann zu unerwarteten Ergebnissen führen.  
  
> [!NOTE]
>  In Browsern, die CSS nicht unterstützen, hat <xref:System.Web.UI.WebControls.WebControl.CssClass%2A> das Festlegen der-Eigenschaft keine Auswirkung.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.WebControl.CssClass%2A> -Eigenschaft verwendet wird, um den <xref:System.Web.UI.WebControls.HyperLink> Stil eines-Steuer Elements zu ändern.  
  
> [!NOTE]
>  Im folgenden Codebeispiel wird das Einzel Datei-Code Modell verwendet und funktioniert möglicherweise nicht ordnungsgemäß, wenn es direkt in eine Code-Behind-Datei kopiert wird. Dieses Codebeispiel muss in eine leere Textdatei mit der Erweiterung ASPX kopiert werden. Weitere Informationen zum Web Forms-Code Modell finden Sie unter [ASP.net Web Forms Page Code Model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[Classic WebControl.CssClass Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.CssClass Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.CssClass Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.CssClass Example/VB/sourcevb.aspx#1)]
 [!code-xml[Classic WebControl.CssClass Example#1](~/samples/snippets/common/VS_Snippets_WebNet/Classic WebControl.CssClass Example/Common/source.xml#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/143d14d6-9d12-4d4b-ae60-f00e0eb6938f">ASP.NET-Server Steuerelemente und Browser Funktionen</related>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Entwickeln benutzerdefinierter ASP.NET-Server Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="DisabledCssClass">
      <MemberSignature Language="C#" Value="public static string DisabledCssClass { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string DisabledCssClass" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.DisabledCssClass" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DisabledCssClass As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ DisabledCssClass { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DisabledCssClass : string with get, set" Usage="System.Web.UI.WebControls.WebControl.DisabledCssClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die CSS-Klasse ab, die auf das gerenderte HTML-Element angewendet werden soll, wenn das Steuerelement deaktiviert wird, oder legt sie fest.</summary>
        <value>Die CSS-Klasse, die auf das gerenderte HTML-Element angewendet werden soll, wenn das Steuerelement deaktiviert wird. Der Standardwert ist "aspNetDisabled".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft kann verwendet werden, um den Namen zu ändern, der für <xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A> die-Eigenschaft einzelner websteuer Elemente gerendert wird. Standardmäßig gibt diese Eigenschaft "aspnetdeaktiviert" zurück.  
  
 Wenn <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> in einer abgeleiteten Klasse überschrieben wird <xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A> , `false`um zurückzugeben, wird der Wert der- `class` Eigenschaft als Wert des-Attributs des HTML--Elements für das-Steuerelement gerendert. Wenn in diesem Fall ein Wert in der <xref:System.Web.UI.WebControls.WebControl.CssClass%2A> -Eigenschaft vorhanden ist, werden beide CSS-Klassen auf das gerenderte HTML-Element angewendet. Das `class` -Attribut besteht aus dem Wert <xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A> der-Eigenschaft, gefolgt <xref:System.Web.UI.WebControls.WebControl.CssClass%2A> vom Wert der-Eigenschaft, getrennt durch ein Leerzeichen.  
  
 Diese Eigenschaft ist statisch. Dies bedeutet, dass Sie Sie nur für die <xref:System.Web.UI.WebControls.WebControl> -Klasse festlegen können. Jeder Wert, auf den Sie festgelegt haben, wird für alle Steuerelemente in einer Webanwendung verwendet. Für einzelne Steuerelemente können keine unterschiedlichen Werte angegeben werden.  
  
 Wenn Sie einen Klassennamen verwenden möchten, der sich vom Standardwert "aspnetdeaktiviert" unterscheidet, legen Sie in der Regel den Code in der `Application_Start` -Methode der Global. asax-Datei ab, wie im folgenden Beispiel gezeigt:  
  
```vb  
Private Sub Application_Start(  
    ByVal sender As Object, ByVal e As EventArgs)  
    WebControl.DisabledCssClass = "customDisabledClassName"  
End Sub  
```  
  
```csharp  
void Application_Start(object sender, EventArgs e)  
{  
    WebControl.DisabledCssClass = "customDisabledClassName";  
}  
```  
  
   
  
## Examples  
 Das folgende Beispiel zeigt gerendertes HTML für <xref:System.Web.UI.WebControls.Label> ein deaktiviertes Steuer `false`Element, <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> Wenn <xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A> die-Eigenschaft ist, wenn die-Eigenschaft <xref:System.Web.UI.WebControls.WebControl.CssClass%2A> den Standardwert aufweist und wenn die-Eigenschaft leer ist.  
  
 `<span id="Label1" class="aspNetDisabled">Test</span>`  
  
 Im folgenden Beispiel wird gerendertes HTML unter den gleichen Bedingungen gezeigt <xref:System.Web.UI.WebControls.WebControl.CssClass%2A> , außer dass die-Eigenschaft den Wert "Sample Style" hat.`:`  
  
 `<span id="Label1" class="aspNetDisabled SampleStyle">Test</span>`  
  
 Weitere Informationen finden Sie in den Ausführungen zur <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A>-Eigenschaft.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.RenderingCompatibility" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Enabled" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.IsEnabled" />
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public virtual bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Web.UI.WebControls.WebControl.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das Webserversteuerelement aktiviert ist, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn das Steuerelement aktiviert ist, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> -Eigenschaft eines-Steuer Elements auf `false`festgelegt ist, wird das-Steuerelement normalerweise abgeblendet angezeigt. Wenn es sich bei dem Steuerelement um ein Eingabe Element handelt, hindert der Browser den Benutzer daran, darauf zu klicken oder einzugeben. HTML-Elemente, die für ein Server Steuerelement gerendert werden, werden `disabled` durch Festlegen Ihres Attributs oder Ihres CSS `class` -Attributs als deaktiviert markiert Weitere Informationen finden Sie unter <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> und <xref:System.Web.Configuration.PagesSection.ControlRenderingCompatibilityVersion%2A>.  
  
 Diese Eigenschaft gibt die Steuerelement Hierarchie nach unten weiter. Wenn Sie ein Container Steuerelement deaktivieren, werden die untergeordneten Steuerelemente in diesem Container ebenfalls deaktiviert. Weitere Informationen finden Sie in den Ausführungen zur <xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A>-Eigenschaft.  
  
> [!NOTE]
>  In einem benutzerdefinierten zusammengesetzten Steuerelement gilt dieses Vererbungs Verhalten nicht für Steuerelemente, die die untergeordneten Steuerelemente noch nicht erstellt haben. Sie müssen entweder den aktivierten Zustand der untergeordneten Steuerelemente festlegen, wenn Sie erstellt werden, <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> oder die-Eigenschaft <xref:System.Web.UI.Control.EnsureChildControls%2A> überschreiben, um die-Methode aufzurufen.  
  
> [!NOTE]
>  Durch das Deaktivieren eines Steuer Elements wird nur die Interaktion mit dem Steuerelement durch den Benutzer über die Benutzeroberfläche des Browsers verhindert. Ein Benutzer kann eine Anforderung erstellen, die ein Postback übermittelt, das von der Seite verarbeitet wird, auch wenn Steuerelemente auf der Seite deaktiviert sind. Vergewissern Sie sich vor dem Verarbeiten einer Post Back Anforderung, dass das Steuerelement aktiviert und sichtbar ist.  
  
 Diese Eigenschaft wird nicht von allen Steuerelementen unterstützt. Weitere Informationen finden Sie in den einzelnen Steuerelementen.  
  
 Diese Eigenschaft kann nicht durch Designs oder Stylesheetdesigns festgelegt werden. Weitere Informationen finden Sie unter <xref:System.Web.UI.ThemeableAttribute> und [ASP.NET-Designs und Skins](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie Sie ein <xref:System.Web.UI.WebControls.TextBox> Steuerelement, das von der <xref:System.Web.UI.WebControls.WebControl> Basisklasse geerbt wurde, aktivieren und deaktivieren, indem Sie die <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> -Eigenschaft Programm gesteuert festlegen.  
  
> [!NOTE]
>  Im folgenden Codebeispiel wird das Einzel Datei-Code Modell verwendet und funktioniert möglicherweise nicht ordnungsgemäß, wenn es direkt in eine Code-Behind-Datei kopiert wird. Dieses Codebeispiel muss in eine leere Textdatei mit der Erweiterung ASPX kopiert werden. Weitere Informationen zum Web Forms-Code Modell finden Sie unter [ASP.net Web Forms Page Code Model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[Classic WebControl.Enabled Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.Enabled Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.Enabled Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.Enabled Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.EnsureChildControls" />
        <altmember cref="P:System.Web.UI.Control.RenderingCompatibility" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Enabled" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.IsEnabled" />
        <related type="Article" href="https://msdn.microsoft.com/library/143d14d6-9d12-4d4b-ae60-f00e0eb6938f">ASP.NET-Server Steuerelemente und Browser Funktionen</related>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Entwickeln benutzerdefinierter ASP.NET-Server Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="EnableTheming">
      <MemberSignature Language="C#" Value="public override bool EnableTheming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableTheming" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.EnableTheming" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property EnableTheming As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableTheming { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableTheming : bool with get, set" Usage="System.Web.UI.WebControls.WebControl.EnableTheming" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob für dieses Steuerelement Designs gelten, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn Designs verwendet werden sollen, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebControl.EnableTheming%2A> -Eigenschaft gibt an, ob Designs für ein angegebenes Steuerelement aktiviert sind. Wenn die <xref:System.Web.UI.WebControls.WebControl.EnableTheming%2A> -Eigenschaft `true`ist, wird das Design Verzeichnis für die Anwendung nach den anzuwendenden Steuerelement Skins durchsucht. Wenn keine Skin für das jeweilige Steuerelement im Design Verzeichnis vorhanden ist, werden die Skins nicht angewendet.  
  
 Wenn die <xref:System.Web.UI.WebControls.WebControl.EnableTheming%2A> -Eigenschaft `false`ist, wird das Design Verzeichnis nicht durchsucht, <xref:System.Web.UI.WebControls.WebControl.SkinID%2A> und der Inhalt der-Eigenschaft wird nicht verwendet.  
  
 Ein Steuerelement kann den <xref:System.Web.UI.WebControls.WebControl.EnableTheming%2A> von seinem übergeordneten Steuerelement oder der enthaltenden Seite festgelegten Wert überschreiben. Wenn z. b. für ein übergeordnetes <xref:System.Web.UI.WebControls.WebControl.EnableTheming%2A> Steuerelement die `false`-Eigenschaft auf festgelegt ist, können Sie Designs selektiv auf untergeordnete Steuerelemente anwenden, <xref:System.Web.UI.WebControls.WebControl.EnableTheming%2A> die im `true` übergeordneten Element enthalten sind, indem Sie die-Eigenschaft für das untergeordnete Steuerelemente.  
  
 Designs können auf der Seite, auf dem Container oder auf der Steuerelement Ebene aktiviert werden. Wenn das Design auf der Seiten-oder Container Ebene deaktiviert ist, werden Designs für alle Steuerelemente, die in der Seite oder im Container enthalten sind, deaktiviert.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.EnableTheming" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.SkinID" />
        <related type="Article" href="https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3(v=vs.100)">Übersicht über ASP.net-Themen</related>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Entwickeln benutzerdefinierter ASP.NET-Server Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FontInfo Font { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FontInfo Font" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.Font" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Font As FontInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FontInfo ^ Font { System::Web::UI::WebControls::FontInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Font : System.Web.UI.WebControls.FontInfo" Usage="System.Web.UI.WebControls.WebControl.Font" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FontInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Schriftarteigenschaften ab, die dem Webserversteuerelement zugeordnet sind.</summary>
        <value>Eine <see cref="T:System.Web.UI.WebControls.FontInfo" />, die die Schriftarteigenschaften des Webserver-Steuerelements darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.WebControl.Font%2A> die-Eigenschaft, um die Schriftart Eigenschaften des Webserver Steuer Elements anzugeben. Diese Eigenschaft enthält untergeordnete Eigenschaften, `Property-Subproperty` auf die deklarativ in Form von (z `Font-Bold`. b.) oder Programm gesteuert in Form von `Property.Subproperty` (z `Font.Bold`. b.) zugegriffen werden kann.  
  
 Alle außer einer untergeordneten Eigenschaft werden in Browsern vor Microsoft Internet Explorer Version 4 für alle Steuerelemente angezeigt. Dabei handelt es <xref:System.Web.UI.WebControls.FontInfo.Bold%2A>sich um die folgenden <xref:System.Web.UI.WebControls.FontInfo.Strikeout%2A>: <xref:System.Web.UI.WebControls.FontInfo.Underline%2A>, <xref:System.Web.UI.WebControls.FontInfo.Italic%2A>, <xref:System.Web.UI.WebControls.FontInfo.Names%2A> <xref:System.Web.UI.WebControls.FontInfo.Size%2A> `Smaller`,,, und (aber nur benannte Schrift `Small`Größen, z. b., usw., funktionieren). <xref:System.Web.UI.WebControls.FontInfo.Name%2A>  
  
> [!NOTE]
>  Obwohl diese unter Eigenschaften in Browsern vor Microsoft Internet Explorer, Version 4, gerendert werden, unterscheidet sich der gerenderte HTML-Code von neueren Browsern. Anstatt Sie als Format Attribute zu rendern, werden diese unter Eigenschaften als HTML `<b>` -Elemente, z. b. und `<font>`, gerendert.  
  
 Die eine untergeordnete Eigenschaft, die in früheren Browsern für alle-Steuerelemente <xref:System.Web.UI.WebControls.FontInfo.Overline%2A>nicht angezeigt wird, ist.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.WebControl.Font%2A> -Eigenschaft verwendet wird, um Schriftart <xref:System.Web.UI.WebControls.Label> Informationen von einem-Steuerelement zu erfassen.  
  
> [!NOTE]
>  Im folgenden Codebeispiel wird das Einzel Datei-Code Modell verwendet und funktioniert möglicherweise nicht ordnungsgemäß, wenn es direkt in eine Code-Behind-Datei kopiert wird. Dieses Codebeispiel muss in eine leere Textdatei mit der Erweiterung ASPX kopiert werden. Weitere Informationen zum Web Forms-Code Modell finden Sie unter [ASP.net Web Forms Page Code Model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[Classic WebControl.Font Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.Font Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.Font Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.Font Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="T:System.Web.UI.WebControls.FontInfo" />
        <related type="Article" href="https://msdn.microsoft.com/library/143d14d6-9d12-4d4b-ae60-f00e0eb6938f">ASP.NET-Server Steuerelemente und Browser Funktionen</related>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Entwickeln benutzerdefinierter ASP.NET-Server Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ForeColor : System.Drawing.Color with get, set" Usage="System.Web.UI.WebControls.WebControl.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.WebColorConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Vordergrundfarbe (i. A. die Textfarbe) für das Webserversteuerelement ab oder legt diese fest.</summary>
        <value>Eine <see cref="T:System.Drawing.Color" />, die die Vordergrundfarbe des Steuerelements darstellt. Die Standardeinstellung ist <see cref="F:System.Drawing.Color.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A> die-Eigenschaft, um die Vordergrundfarbe des Webserver Steuer Elements anzugeben. Die Vordergrundfarbe ist normalerweise die Farbe des Texts. Diese Eigenschaft wird in Browsern angezeigt, die älter als Microsoft Internet Explorer Version 4 für alle Steuerelemente <xref:System.Web.UI.WebControls.Image>sind, <xref:System.Web.UI.WebControls.HyperLink> mit <xref:System.Web.UI.WebControls.LinkButton>Ausnahme von, <xref:System.Web.UI.WebControls.AdRotator>und.  
  
> [!NOTE]
>  In Browsern, die älter als Microsoft Internet Explorer Version 4 sind, wird diese `<font>` Eigenschaft als Tags gerendert.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A> -Eigenschaft <xref:System.Web.UI.WebControls.Table> des-Steuer Elements festgelegt <xref:System.Web.UI.WebControls.WebControl> wird, die von der-Basisklasse geerbt wurde.  
  
 [!code-aspx-csharp[Classic WebControl.ForeColor Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.ForeColor Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.ForeColor Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.ForeColor Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="T:System.Drawing.Color" />
        <related type="Article" href="https://msdn.microsoft.com/library/143d14d6-9d12-4d4b-ae60-f00e0eb6938f">ASP.NET-Server Steuerelemente und Browser Funktionen</related>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Entwickeln benutzerdefinierter ASP.NET-Server Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="HasAttributes">
      <MemberSignature Language="C#" Value="public bool HasAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.HasAttributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasAttributes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasAttributes { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasAttributes : bool" Usage="System.Web.UI.WebControls.WebControl.HasAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob für das Steuerelement Attribute festgelegt wurden.</summary>
        <value><see langword="true" />, wenn für das Steuerelement Attribute festgelegt wurden, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebControl.HasAttributes%2A> -Eigenschaft `true` gibt zurück <xref:System.Web.UI.WebControls.WebControl> , wenn die-Instanz Attribut Name-Wert-Paare enthält. Die Attribut Paare können entweder in der-Eigenschaft oder im Ansichts Zustand festgelegt werden.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Attributes" />
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Entwickeln benutzerdefinierter ASP.NET-Server Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.Unit Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit Height" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.Height" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Height As Unit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::Unit Height { System::Web::UI::WebControls::Unit get(); void set(System::Web::UI::WebControls::Unit value); };" />
      <MemberSignature Language="F#" Value="member this.Height : System.Web.UI.WebControls.Unit with get, set" Usage="System.Web.UI.WebControls.WebControl.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.WebControls.Unit), "")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Höhe des Webserversteuerelements ab oder legt diese fest.</summary>
        <value>Eine <see cref="T:System.Web.UI.WebControls.Unit" />, die die Höhe des Steuerelements darstellt. Die Standardeinstellung ist <see cref="F:System.Web.UI.WebControls.Unit.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.WebControl.Height%2A> die-Eigenschaft, um die Höhe des Webserver Steuer Elements anzugeben.  
  
> [!NOTE]
>  Diese Eigenschaft wird nicht für alle Steuerelemente in Browsern angezeigt, die älter sind als Microsoft Internet Explorer Version 4. Steuerelemente, die diese Eigenschaft in früheren Browsern nicht Rendering <xref:System.Web.UI.WebControls.Label>enthalten <xref:System.Web.UI.WebControls.HyperLink>, <xref:System.Web.UI.WebControls.LinkButton>sind,, und Validierungs Steuerelemente. Die <xref:System.Web.UI.WebControls.CheckBoxList>- <xref:System.Web.UI.WebControls.RadioButtonList> Eigenschaft <xref:System.Web.UI.WebControls.DataList> und die-Eigenschaft in früheren Browsern auch nicht, wenn `RepeatLayout` Ihre-Eigenschaft auf `RepeatLayout.Flow`festgelegt ist. Außerdem werden in früheren Browsern nur `Pixel` die `Percentage` Einheiten Typen von und unterstützt.  
  
 Da es sich bei dieser Eigenschaft nicht um ein standardmäßiges HTML handelt, unterstützen Webserver Steuerelemente <xref:System.Web.UI.WebControls.Table> , <xref:System.Web.UI.WebControls.DataGrid>die als Tabelle angezeigt werden (z. b. und) diese Eigenschaft nicht in Browsern vor Microsoft Internet Explorer Version 4.  
  
> [!NOTE]
>  Um die <xref:System.Web.UI.WebControls.WebControl.Height%2A> -Eigenschaft auf einen anderen Einheitstyp als den `Pixel`Standardwert festzulegen, müssen Sie einen neuen Einheitstyp speziell für den gewünschten Einheitentyp erstellen. Um z. b. die- <xref:System.Web.UI.WebControls.WebControl.Height%2A> Eigenschaft eines Steuer Elements auf einen prozentualen Wert von 100 festzulegen, können Sie wie folgt vorgehen:  
>   
>  `myWebControl.Width = Unit.Percentage(100);`  
>   
>  Weitere Informationen zu den für die <xref:System.Web.UI.WebControls.WebControl.Height%2A> Eigenschaft verfügbaren Einheiten Typen finden Sie unter der <xref:System.Web.UI.WebControls.Unit> -Klasse.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.WebControl.Height%2A> -Eigenschaft <xref:System.Web.UI.WebControls.Table> des-Steuer Elements deklarativ festgelegt <xref:System.Web.UI.WebControls.WebControl> wird, die von der-Basisklasse geerbt wurde.  
  
 [!code-aspx-csharp[Classic WebControl.Height Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.Height Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.Height Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.Height Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die Höhe wurde auf einen negativen Wert festgelegt.</exception>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="T:System.Web.UI.WebControls.Unit" />
        <altmember cref="T:System.Web.UI.WebControls.Label" />
        <altmember cref="T:System.Web.UI.WebControls.HyperLink" />
        <altmember cref="T:System.Web.UI.WebControls.LinkButton" />
        <altmember cref="T:System.Web.UI.WebControls.CheckBoxList" />
        <altmember cref="T:System.Web.UI.WebControls.RadioButtonList" />
        <altmember cref="T:System.Web.UI.WebControls.DataList" />
        <altmember cref="T:System.Web.UI.WebControls.RepeatLayout" />
        <altmember cref="T:System.Web.UI.WebControls.Table" />
        <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
        <related type="Article" href="https://msdn.microsoft.com/library/143d14d6-9d12-4d4b-ae60-f00e0eb6938f">ASP.NET-Server Steuerelemente und Browser Funktionen</related>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Entwickeln benutzerdefinierter ASP.NET-Server Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="protected internal bool IsEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property IsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property bool IsEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEnabled : bool" Usage="System.Web.UI.WebControls.WebControl.IsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das Steuerelement aktiviert ist.</summary>
        <value><see langword="true" />, wenn das <see cref="T:System.Web.UI.WebControls.WebControl" />-Objekt aktiviert ist, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ist schreibgeschützt. Wenn Sie ein Steuerelement deaktivieren möchten, legen Sie dessen <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> -Eigenschaft `false`auf fest.  
  
 Wenn ein Steuerelement nicht in einem anderen Steuerelement enthalten ist, ist <xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A> der Wert der-Eigenschaft immer identisch mit dem Wert <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> der-Eigenschaft.  
  
 Die <xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A> -Eigenschaft weist einen Wert auf, der sich <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> von der-Eigenschaft unterscheidet, wenn ein Steuerelement ein untergeordnetes Element eines anderen Steuer Elements ist, und wenn alle der folgenden Bedingungen zutreffen:  
  
-   Der Wert der <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> -Eigenschaft oder der <xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A> -Eigenschaft des übergeordneten- `false`Steuer Elements ist.  
  
-   Die <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> -Eigenschaft des untergeordneten Steuer Elements ist `true`auf festgelegt.  
  
 In dieser Situation erbt das untergeordnete Steuerelement den deaktivierten Zustand des übergeordneten Steuer Elements. Die <xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A> -Eigenschaft des untergeordneten Steuer `false` Elements gibt zurück, um anzugeben, dass das Steuerelement deaktiviert ist, auch wenn das untergeordnete <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> Steuerelement `false`nicht durch Festlegen der-Eigenschaft auf explizit deaktiviert wurde. Das übergeordnete Steuerelement selbst kann <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> seine-Eigenschaft `true` auf festgelegt haben, kann jedoch den deaktivierten Zustand von seinem übergeordneten Element erben usw.  
  
 Wenn ASP.net HTML-Elemente für ein Server Steuerelement rendert, werden die Elemente durch Festlegen Ihres `disabled` Attributs oder Ihres `class` CSS-Attributs als deaktiviert markiert. Weitere Informationen finden Sie unter <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> und <xref:System.Web.Configuration.PagesSection.ControlRenderingCompatibilityVersion%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.RenderingCompatibility" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Enabled" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.IsEnabled" />
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Entwickeln benutzerdefinierter ASP.NET-Server Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="webControl.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Ein Objekt, das den wiederherzustellenden Zustand des Steuerelements darstellt.</param>
        <summary>Stellt die Informationen über den Ansichtszustand aus einer früheren Anforderung wieder her, die mit der <see cref="M:System.Web.UI.WebControls.WebControl.SaveViewState" />-Methode gespeichert wurden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird hauptsächlich von der .NET Framework-Infrastruktur verwendet und ist nicht für die direkte Verwendung im Code vorgesehen. Steuerungs Entwickler können diese Methode jedoch außer Kraft setzen, um anzugeben, wie ein benutzerdefiniertes Server Steuerelement seinen Ansichts Zustand wiederherstellt. Weitere Informationen finden Sie unter [ASP.net State Management Overview](https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)).  
  
 Die <xref:System.Web.UI.WebControls.WebControl.LoadViewState%2A> -Methode stellt die Ansichts Zustandsinformationen wieder her, die während <xref:System.Web.UI.WebControls.WebControl.SaveViewState%2A> einer vorherigen Anforderung gespeichert wurden. Die <xref:System.Web.UI.WebControls.WebControl> -Klasse überschreibt die <xref:System.Web.UI.Control.LoadViewState%2A> Basis Methode, um <xref:System.Web.UI.Control.ViewState%2A>die <xref:System.Web.UI.WebControls.WebControl.Style%2A>Eigenschaften, <xref:System.Web.UI.WebControls.WebControl.Attributes%2A> und zu verarbeiten.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ViewState" />
        <altmember cref="P:System.Web.UI.Control.IsTrackingViewState" />
        <related type="Article" href="https://msdn.microsoft.com/library/9e98c7de-a888-48df-b14e-02ec8bef7681">Steuern des Zustands im Vergleich zu Beispiel zum Ansichts Zustand</related>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Entwickeln benutzerdefinierter ASP.NET-Server Steuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)">ASP.net State Management (Übersicht)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">Einführung in den Lebenszyklus der ASP.NET-Seite</related>
      </Docs>
    </Member>
    <Member MemberName="MergeStyle">
      <MemberSignature Language="C#" Value="public void MergeStyle (System.Web.UI.WebControls.Style s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MergeStyle(class System.Web.UI.WebControls.Style s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MergeStyle (s As Style)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MergeStyle(System::Web::UI::WebControls::Style ^ s);" />
      <MemberSignature Language="F#" Value="member this.MergeStyle : System.Web.UI.WebControls.Style -&gt; unit" Usage="webControl.MergeStyle s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Web.UI.WebControls.Style" />
      </Parameters>
      <Docs>
        <param name="s">Ein <see cref="T:System.Web.UI.WebControls.Style" />, der die zu kopierende Formatvorlage darstellt.</param>
        <summary>Kopiert alle nicht leeren Elemente der angegebenen Formatvorlage in das Websteuerelement, überschreibt jedoch keine vorhandenen Formatvorlagenelemente des Steuerelements. Diese Methode wird hauptsächlich von Steuerelemententwicklern verwendet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.WebControl.MergeStyle%2A> -Methode verwendet wird, um einen Stil mit dem <xref:System.Web.UI.WebControls.DataGrid> Stil eines-Steuer Elements zusammenzuführen.  
  
> [!NOTE]
>  Im folgenden Codebeispiel wird das Einzel Datei-Code Modell verwendet und funktioniert möglicherweise nicht ordnungsgemäß, wenn es direkt in eine Code-Behind-Datei kopiert wird. Dieses Codebeispiel muss in eine leere Textdatei mit der Erweiterung ASPX kopiert werden. Weitere Informationen zum Web Forms-Code Modell finden Sie unter [ASP.net Web Forms Page Code Model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[WebControlMergeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebControlMergeStyle/CS/webcontrolmergestylecs.aspx#1)]
 [!code-aspx-vb[WebControlMergeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebControlMergeStyle/VB/webcontrolmergestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Entwickeln benutzerdefinierter ASP.NET-Server Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected override void Render (System.Web.UI.HtmlTextWriter writer);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Render (writer As HtmlTextWriter)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="webControl.Render writer" />
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Das <see cref="T:System.Web.UI.HtmlTextWriter" />-Objekt, das den Inhalt des Steuerelements empfängt.</param>
        <summary>Gibt das Steuerelement im angegebenen HTML-Writer wieder.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebControl.Render%2A> -Methode wird hauptsächlich von Steuerelement Entwicklern verwendet.  
  
 Die <xref:System.Web.UI.WebControls.WebControl.Render%2A> -Methode sendet das websteuer Element an <xref:System.Web.UI.HtmlTextWriter> die angegebene-Instanz. Überschreiben Sie diese Methode, um das benutzerdefinierte Server Steuerelement an den Client zu senden.  
  
 Die <xref:System.Web.UI.WebControls.WebControl.Render%2A> -Methode ruft zuerst <xref:System.Web.UI.WebControls.WebControl.RenderBeginTag%2A> die-Methode und <xref:System.Web.UI.WebControls.WebControl.RenderContents%2A> dann die-Methode auf <xref:System.Web.UI.WebControls.WebControl.RenderEndTag%2A> , und schließlich die-Methode, um das Steuerelement an den Client zu senden.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Entwickeln benutzerdefinierter ASP.NET-Server Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="RenderBeginTag">
      <MemberSignature Language="C#" Value="public virtual void RenderBeginTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderBeginTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderBeginTag (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderBeginTag(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member RenderBeginTag : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.RenderBeginTag : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="webControl.RenderBeginTag writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Ein <see cref="T:System.Web.UI.HtmlTextWriter" />, der den Ausgabestream zum Rendern des HTML-Inhalts auf dem Client darstellt.</param>
        <summary>Gibt das öffnende HTML-Tag des Steuerelements im angegebenen Writer wieder. Diese Methode wird hauptsächlich von Steuerelemententwicklern verwendet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dies wird öffentlich gemacht, sodass andere Steuerelemente zwischen dem öffnenden und dem schließenden Tag eines Webserver Steuer Elements mehrere Steuerelemente darstellen können.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderContents(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Entwickeln benutzerdefinierter ASP.NET-Server Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected virtual void RenderContents (System.Web.UI.HtmlTextWriter writer);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RenderContents (writer As HtmlTextWriter)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="abstract member RenderContents : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.RenderContents : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="webControl.RenderContents writer" />
      <MemberSignature Language="C#" Value="protected internal virtual void RenderContents (System.Web.UI.HtmlTextWriter writer);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub RenderContents (writer As HtmlTextWriter)" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Ein <see cref="T:System.Web.UI.HtmlTextWriter" />, der den Ausgabestream zum Rendern des HTML-Inhalts auf dem Client darstellt.</param>
        <summary>Rendert den Inhalt des Steuerelements im angegebenen Writer. Diese Methode wird hauptsächlich von Steuerelemententwicklern verwendet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Überschreiben <xref:System.Web.UI.WebControls.WebControl.RenderContents%2A> Sie die-Methode, um den Inhalt des Steuer Elements zwischen den Anfangs-und Endtags zu erzeugen. Die Standard Implementierung dieser Methode rendert alle untergeordneten Steuerelemente.  
  
 Wenn das Steuerelement über untergeordnete Steuerelemente verfügt, müssen Sie <xref:System.Web.UI.WebControls.WebControl.RenderContents%2A> entweder die Basis Methode <xref:System.Web.UI.Control.RenderChildren%2A> oder den-Befehl an dem Punkt, an dem die untergeordneten Steuerelemente im TextWriter gerendert werden sollen, abrufen.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Entwickeln benutzerdefinierter ASP.NET-Server Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="RenderEndTag">
      <MemberSignature Language="C#" Value="public virtual void RenderEndTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderEndTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderEndTag (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderEndTag(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member RenderEndTag : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.RenderEndTag : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="webControl.RenderEndTag writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Ein <see cref="T:System.Web.UI.HtmlTextWriter" />, der den Ausgabestream zum Rendern des HTML-Inhalts auf dem Client darstellt.</param>
        <summary>Stellt das schließende HTML-Tag des Steuerelements im angegebenen Writer dar. Diese Methode wird hauptsächlich von Steuerelemententwicklern verwendet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dies wird öffentlich gemacht, sodass andere Steuerelemente zwischen dem öffnenden und dem schließenden Tag eines Webserver Steuer Elements mehrere Steuerelemente darstellen können.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderContents(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Entwickeln benutzerdefinierter ASP.NET-Server Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="webControl.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Speichert jeden Zustand, der nach dem Aufrufen der <see cref="M:System.Web.UI.WebControls.Style.TrackViewState" />-Methode geändert wurde.</summary>
        <returns>Ein Objekt, das den aktuellen Ansichtszustand des Steuerelements enthält, andernfalls <see langword="null" />, wenn dem Steuerelement kein Ansichtszustand zugeordnet ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebControl.SaveViewState%2A> -Methode wird hauptsächlich von Steuerelement Entwicklern verwendet.  
  
 Der Ansichts Zustand entspricht den kumulativen Werten der Eigenschaften eines Server Steuer Elements. Diese Werte werden automatisch in der <xref:System.Web.UI.Control.ViewState%2A> -Eigenschaft des Server Steuer Elements platziert, das eine Instanz <xref:System.Web.UI.StateBag> der-Klasse ist. Der <xref:System.Web.UI.Control.ViewState%2A> Eigenschafts Wert wird dann in einem Zeichen folgen Objekt nach der Phase zum Speichern des Zustands des Lebenszyklus für das Server Steuerelement beibehalten. Weitere Informationen finden Sie unter [ASP.net page Lifecycle Overview](https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991).  
  
 Wenn der Ansichts Zustand gespeichert wird, wird dieses Zeichen folgen Objekt als Variable, die in einem verborgenen HTML `input` -Element gespeichert ist, an den Client zurückgegeben. Wenn Sie benutzerdefinierte Server Steuerelemente erstellen, können Sie die Effizienz steigern <xref:System.Web.UI.WebControls.WebControl.SaveViewState%2A> , indem Sie die <xref:System.Web.UI.Control.ViewState%2A> -Methode überschreiben und die-Eigenschaft für das Server Steuerelement ändern. Weitere Informationen finden Sie unter [ASP.net State Management Overview](https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ViewState" />
        <altmember cref="P:System.Web.UI.Control.IsTrackingViewState" />
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Entwickeln benutzerdefinierter ASP.NET-Server Steuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9e98c7de-a888-48df-b14e-02ec8bef7681">Steuern des Zustands im Vergleich zu Beispiel zum Ansichts Zustand</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)">ASP.net State Management (Übersicht)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">Einführung in den Lebenszyklus der ASP.NET-Seite</related>
      </Docs>
    </Member>
    <Member MemberName="SkinID">
      <MemberSignature Language="C#" Value="public override string SkinID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SkinID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.SkinID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SkinID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SkinID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SkinID : string with get, set" Usage="System.Web.UI.WebControls.WebControl.SkinID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Design ab, das auf das Steuerelement angewendet werden soll.</summary>
        <value>Der Name des Designs, das auf das Steuerelement angewendet werden soll. Die Standardeinstellung ist <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Für ein Steuerelement verfügbare Skins sind in einer oder mehreren Skin-Dateien in einem Design Verzeichnis enthalten. Die <xref:System.Web.UI.WebControls.WebControl.SkinID%2A> -Eigenschaft gibt an, welche dieser Skins auf das-Steuerelement angewendet werden soll. Ein Skin ist für ein bestimmtes Steuerelement spezifisch. Sie können keine Skin-Einstellungen zwischen Steuerelementen verschiedener Typen freigeben.  
  
 Wenn Sie die <xref:System.Web.UI.WebControls.WebControl.SkinID%2A> -Eigenschaft nicht festlegen, verwendet ein-Steuerelement die Standard Skin, wenn eine definiert ist. Wenn z. b. eine Skin ohne ID für ein <xref:System.Web.UI.WebControls.Image> Steuerelement definiert ist, dann gilt diese Skin für alle <xref:System.Web.UI.WebControls.Image> Steuerelemente, die nicht explizit nach ID auf eine Skin verweisen und nicht auf das Deaktivieren von Designs festgelegt sind. Wenn eine Skin mit einer ID für ein <xref:System.Web.UI.WebControls.Image> Steuerelement definiert ist, gilt diese Skin nur <xref:System.Web.UI.WebControls.Image> für Steuerelemente <xref:System.Web.UI.WebControls.WebControl.SkinID%2A> , deren auf diese ID festgelegt ist.  
  
 Wenn die Skin-Dateien in einem Design Verzeichnis keine Skin mit dem angegebenen <xref:System.Web.UI.WebControls.WebControl.SkinID%2A>enthalten, wird zur Laufzeit eine <xref:System.ArgumentException> Ausnahme ausgelöst.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die in der <see cref="P:System.Web.UI.WebControls.WebControl.SkinID" />-Eigenschaft angegebene Skin ist im Design nicht vorhanden.</exception>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.EnableTheming" />
        <related type="Article" href="https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3">Grundlegendes zu ASP.NET Designs</related>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Entwickeln benutzerdefinierter ASP.NET-Server Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="Style">
      <MemberSignature Language="C#" Value="public System.Web.UI.CssStyleCollection Style { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.CssStyleCollection Style" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.Style" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Style As CssStyleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::CssStyleCollection ^ Style { System::Web::UI::CssStyleCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Style : System.Web.UI.CssStyleCollection" Usage="System.Web.UI.WebControls.WebControl.Style" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.CssStyleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Auflistung der Textattribute ab, die im äußeren Tag des Webserversteuerelements als Formatvorlagenattribut gerendert werden.</summary>
        <value>Eine <see cref="T:System.Web.UI.CssStyleCollection" /> mit den Formatvorlagenattributen, die im äußeren Tag des Webserversteuerelements gerendert werden sollen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.WebControl.Style%2A> die-Auflistung, um die Stil Attribute zu verwalten, die im äußeren Tag des Webserver Steuer Elements gerendert werden. Diese Eigenschaft wird für alle-Steuerelemente in allen Browsern angezeigt.  
  
> [!NOTE]
>  Browser, die keine Stil Attribute unterstützen, ignorieren den gerenderten HTML-Code.  
  
 Alle durch die stark typisierten Stileigenschaften (z `BackColor="Red"`. b.) festgelegten Stilwerte überschreiben automatisch einen entsprechenden Wert in dieser Auflistung.  
  
 Werte, die in dieser Auflistung festgelegt sind, werden nicht automatisch von den stark typisierten Stileigenschaften reflektiert.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.WebControl.Style%2A> -Eigenschaft verwendet wird, um <xref:System.Web.UI.WebControls.Label> ein Steuerelement auf einer Seite auszublenden oder anzuzeigen.  
  
> [!NOTE]
>  Im folgenden Codebeispiel wird das Einzel Datei-Code Modell verwendet und funktioniert möglicherweise nicht ordnungsgemäß, wenn es direkt in eine Code-Behind-Datei kopiert wird. Dieses Codebeispiel muss in eine leere Textdatei mit der Erweiterung ASPX kopiert werden. Weitere Informationen zum Web Forms-Code Modell finden Sie unter [ASP.net Web Forms Page Code Model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[Classic WebControl.Style Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.Style Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.Style Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.Style Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.CssStyleCollection" />
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Entwickeln benutzerdefinierter ASP.NET-Server Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="SupportsDisabledAttribute">
      <MemberSignature Language="C#" Value="public virtual bool SupportsDisabledAttribute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsDisabledAttribute" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsDisabledAttribute As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsDisabledAttribute { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsDisabledAttribute : bool" Usage="System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob vom Steuerelement das <see langword="disabled" />-Attribut des gerenderten HTML-Elements auf "disabled" festgelegt werden soll, wenn die <see cref="P:System.Web.UI.WebControls.WebControl.IsEnabled" />-Eigenschaft des Steuerelements <see langword="false" /> ist.</summary>
        <value>Immer <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In abgeleiteten Klassen gibt diese Eigenschaft an, wie ASP.net html für ein Steuerelement erzeugen soll, wenn das Steuerelement deaktiviert ist.  
  
## <a name="disabling-aspnet-web-controls"></a>Deaktivieren der ASP.net-websteuer Elemente  
 Wenn die <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> -Eigenschaft eines ASP.net-Steuer Elements auf `false` festgelegt ist (d. h., wenn das Steuerelement deaktiviert ist), ist die Absicht, dass ASP.NET das Steuerelement auf der Seite Rendering, aber in einem deaktivierten Zustand (in der Regel Abbild) anzeigt. Wenn ein übergeordnetes Steuerelement deaktiviert ist, werden untergeordnete Elemente dieses Steuer Elements ebenfalls als deaktiviert angezeigt. In diesem Fall wird die-Eigenschaft des <xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A> untergeordneten Steuer Elements `false`auf festgelegt, <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> obwohl die-Eigenschaft möglich `true`erweise auf festgelegt ist.  
  
 Wenn in ASP.NET 3,5 und früheren Versionen die-Eigenschaft eines <xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A> Steuer Elements `false`auf festgelegt ist `disabled` , legt ASP.NET das-Attribut im HTML-Element, das für das Steuerelement gerendert wird, auf "deaktiviert" fest. Der HTML 4,01-Standard erlaubt jedoch das `disabled` -Attribut nur für bestimmte Elemente, die für Benutzereingaben verwendet werden. Beispielsweise ist das `disabled` -Attribut für `input` -Elemente zulässig, jedoch nicht `span` für-Elemente.  
  
 Die meisten Browser unterstützen eine standardmäßige deaktivierte Darstellung für nur `disabled` Anzeigeelemente, die über Attribute verfügen. Um jedoch den HTML-Standards zu entsprechen, lässt ASP.NET 4 standardmäßig ungültige Attribute aus.  
  
## <a name="how-the-supportsdisabledattribute-property-is-used"></a>Verwendung der SupportsDisabledAttribute-Eigenschaft  
 Wenn die <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> -Eigenschaft `true`ist, rendert `disabled` ASP.net ein-Attribut, wenn das Steuerelement deaktiviert ist. Wenn diese Eigenschaft ist `false`, rendert ASP.net `class` ein-Attribut, wenn das Steuerelement deaktiviert ist.  
  
 Abgeleitete Klassen überschreiben diese Eigenschaft `false` , um zurückzugeben, wenn alle der folgenden Bedingungen zutreffen:  
  
-   Das-Steuerelement rendert ein HTML-Element, `disabled` das das-Attribut nicht unterstützt.  
  
-   Die <xref:System.Web.UI.Control.RenderingCompatibility%2A> Eigenschaft gibt eine ASP.NET-Versionsnummer an, die kleiner als 4,0 ist.  
  
 Die <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> -Eigenschaft gibt nicht notwendigerweise an, ob das-Element, das für ein-Steuerelement gerendert wird, das `disabled` -Attribut unterstützt. Wenn <xref:System.Web.UI.Control.RenderingCompatibility%2A> die-Eigenschaft eines Steuer Elements eine ASP.NET-Versionsnummer unter 4,0 angibt, kann der Wert der <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> -Eigenschaft des `true` -Steuer Elements auch dann zurückgegeben werden, `disabled` wenn der gerenderte HTML das-Attribut nicht unterstützt.  
  
## <a name="backward-compatibility-for-disabled-controls"></a>Abwärtskompatibilität für deaktivierte Steuerelemente  
 Wenn Sie Visual Studio verwenden, um ein Webprojekt von einer früheren Version auf ASP.NET 4 zu aktualisieren, legt Visual Studio `controlRenderingCompatibilityVersion` automatisch das-Attribut in der Datei "Web. config <xref:System.Web.UI.Control.RenderingCompatibility%2A> " (die die-Eigenschaft festlegt) auf die frühere Versionsnummer fest. Da die <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> -Eigenschaft immer `true` zurückgibt <xref:System.Web.UI.Control.RenderingCompatibility%2A> , wenn die-Eigenschaft niedriger als 4,0 ist, bewirkt dies, dass websteuer Elemente HTML für deaktivierte Steuerelemente wie in der früheren Version Rendering. Wenn Sie möchten, dass eine aktualisierte Website HTML mithilfe des in ASP.NET 4 eingeführten Algorithmus wieder gibt, können Sie das `controlRenderingCompatibilityVersion` Attribut ändern oder entfernen. Weitere Informationen finden Sie in den Ausführungen zur <xref:System.Web.UI.Control.RenderingCompatibility%2A>-Eigenschaft.  
  
## <a name="setting-a-disabled-appearance-by-using-css"></a>Festlegen einer deaktivierten Darstellung mithilfe von CSS  
 Wenn die <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> -Eigenschaft eines-Steuer `false` Elements ist und das-Steuerelement deaktiviert ist `class` , legt ASP.NET das-Attribut des <xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A?displayProperty=nameWithType> gerenderten HTML-Elements auf den Wert der-Eigenschaft fest. Der Standardwert <xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A?displayProperty=nameWithType> der Eigenschaft ist "aspnetdeaktiviert".  
  
 Um eine deaktivierte Darstellung für deaktivierte Steuerelemente bereitzustellen, müssen Sie eine CSS-Regel für die Klasse definieren, <xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A?displayProperty=nameWithType> die durch den Wert der-Eigenschaft dargestellt wird.  
  
 Das HTML-Element, das für ein Steuerelement gerendert wird, kann über `class` mehr als einen Wert im-Attribut verfügen <xref:System.Web.UI.WebControls.WebControl.CssClass%2A> , wenn ein Wert in der-Eigenschaft vorhanden ist. Weitere Informationen finden Sie in den Ausführungen zur <xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A>-Eigenschaft.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt Markup für ein deaktiviertes <xref:System.Web.UI.WebControls.Label> Steuerelement:  
  
 `<asp:Label id="Label1" runat="server" Text="Test" Enabled="false"/>`  
  
 In ASP.NET 3,5 und früheren Versionen rendert dieses Markup den folgenden HTML-Code:  
  
 `<span id="Label1" disabled="disabled">Test</span>`  
  
 Wenn in ASP.NET 4 der Wert der <xref:System.Web.UI.Control.RenderingCompatibility%2A> -Eigenschaft 4,0 oder höher ist und die <xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A> -Eigenschaft auf den Standardwert festgelegt ist, rendert das gleiche Markup den folgenden HTML-Code:  
  
 `<span id="Label1" class="aspNetDisabled">Test</span>`  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.RenderingCompatibility" />
        <altmember cref="P:System.Web.Configuration.PagesSection.ControlRenderingCompatibilityVersion" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.DisabledCssClass" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Enabled" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.IsEnabled" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IAttributeAccessor.GetAttribute">
      <MemberSignature Language="C#" Value="string IAttributeAccessor.GetAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Web.UI.IAttributeAccessor.GetAttribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetAttribute (name As String) As String Implements IAttributeAccessor.GetAttribute" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.Web.UI.IAttributeAccessor.GetAttribute(System::String ^ name) = System::Web::UI::IAttributeAccessor::GetAttribute;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IAttributeAccessor.GetAttribute(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Der Name des Attributs.</param>
        <summary>Ruft ein Attribut des Websteuerelements mit dem angegebenen Namen ab.</summary>
        <returns>Der Wert des Attributs.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebControl.System%23Web%23UI%23IAttributeAccessor%23GetAttribute%2A> -Methode ist eine explizite Schnittstellenmember-Implementierung. Sie kann nur verwendet werden, wenn die Instanz der <xref:System.Web.UI.WebControls.WebControl> -Klasse in eine <xref:System.Web.UI.IAttributeAccessor> -Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Attributes" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IAttributeAccessor.SetAttribute">
      <MemberSignature Language="C#" Value="void IAttributeAccessor.SetAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IAttributeAccessor.SetAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub SetAttribute (name As String, value As String) Implements IAttributeAccessor.SetAttribute" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IAttributeAccessor.SetAttribute(System::String ^ name, System::String ^ value) = System::Web::UI::IAttributeAccessor::SetAttribute;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IAttributeAccessor.SetAttribute(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Die Namenskomponente des Name-Wert-Paars des Attributs.</param>
        <param name="value">Die Wertkomponente des Name-Wert-Paars des Attributs.</param>
        <summary>Legt zum angegebenen Namen und Wert ein Attribut des Websteuerelements fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebControl.System%23Web%23UI%23IAttributeAccessor%23SetAttribute%2A> -Methode ist eine explizite Schnittstellenmember-Implementierung. Sie kann nur verwendet werden, wenn die Instanz der <xref:System.Web.UI.WebControls.WebControl> -Klasse in eine <xref:System.Web.UI.IAttributeAccessor> -Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Attributes" />
      </Docs>
    </Member>
    <Member MemberName="TabIndex">
      <MemberSignature Language="C#" Value="public virtual short TabIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 TabIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.TabIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TabIndex As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property short TabIndex { short get(); void set(short value); };" />
      <MemberSignature Language="F#" Value="member this.TabIndex : int16 with get, set" Usage="System.Web.UI.WebControls.WebControl.TabIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Index der Aktivierreihenfolge des Webserversteuerelements ab oder legt diesen fest.</summary>
        <value>Der Index der Aktivierreihenfolge des Webserversteuerelements. Der Standardwert ist <see langword="0" /> und gibt an, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.WebControl.TabIndex%2A> die-Eigenschaft, um den Registerkarten Index eines Webserver-Steuer Elements auf der Web Forms Seite anzugeben oder zu bestimmen. Wenn Sie die `Tab` Taste drücken, wird die Reihenfolge, in der die Webserver-Steuerelemente den Fokus <xref:System.Web.UI.WebControls.WebControl.TabIndex%2A> erhalten, von der-Eigenschaft jedes Steuer Elements bestimmt. Wenn eine Seite anfänglich geladen wird, ist das erste Element, das den `Tab` Fokus erhält, wenn die Taste gedrückt wird, die Adressleiste. Als nächstes werden die Steuerelemente auf der Web Forms Seite in aufsteigender Reihenfolge auf der Grundlage des Werts <xref:System.Web.UI.WebControls.WebControl.TabIndex%2A> der-Eigenschaft jedes Steuer Elements angezeigt, beginnend mit dem kleinsten positiven Wert ungleich 0 (null). Wenn mehrere Steuerelemente denselben Registerkarten Index gemeinsam verwenden, erhalten die Steuerelemente den Fokus in der Reihenfolge, in der Sie auf der Web Forms Seite deklariert werden. Zum Schluss werden Steuerelemente, die über einen Registerkarten Index von NULL verfügen, in der Reihenfolge, in der Sie deklariert werden, auf den  
  
> [!NOTE]
>  Nur Steuerelemente mit einem Registerkarten Index ungleich NULL werden `tabindex` das Attribut Rendering.  
  
 Sie können ein Webserver Steuerelement aus der Aktivier Reihenfolge entfernen <xref:System.Web.UI.WebControls.WebControl.TabIndex%2A> , indem Sie die-Eigenschaft auf einen negativen Wert festlegen.  
  
> [!NOTE]
>  Diese Eigenschaft wird nur in Internet Explorer 4 und höher unterstützt.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.WebControl.TabIndex%2A> -Eigenschaft <xref:System.Web.UI.WebControls.WebControl> von verwendet wird, um die Aktivier Reihenfolge von Steuerelementen auf der Seite festzulegen.  
  
> [!NOTE]
>  Im folgenden Codebeispiel wird das Einzel Datei-Code Modell verwendet und funktioniert möglicherweise nicht ordnungsgemäß, wenn es direkt in eine Code-Behind-Datei kopiert wird. Dieses Codebeispiel muss in eine leere Textdatei mit der Erweiterung ASPX kopiert werden. Weitere Informationen zum Web Forms-Code Modell finden Sie unter [ASP.net Web Forms Page Code Model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[Classic WebControl.TabIndex Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.TabIndex Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.TabIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.TabIndex Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der angegebene Index der Aktivierreihenfolge liegt nicht zwischen -32768 und 32767.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/143d14d6-9d12-4d4b-ae60-f00e0eb6938f">ASP.NET-Server Steuerelemente und Browser Funktionen</related>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Entwickeln benutzerdefinierter ASP.NET-Server Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); };" />
      <MemberSignature Language="F#" Value="member this.TagKey : System.Web.UI.HtmlTextWriterTag" Usage="System.Web.UI.WebControls.WebControl.TagKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den <see cref="T:System.Web.UI.HtmlTextWriterTag" />-Wert ab, der diesem Webserversteuerelement entspricht. Diese Eigenschaft wird hauptsächlich von Steuerelemententwicklern verwendet.</summary>
        <value>Einer der <see cref="T:System.Web.UI.HtmlTextWriterTag" />-Enumerationswerte.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.WebControl.TagKey%2A> die-Eigenschaft, <xref:System.Web.UI.HtmlTextWriterTag> um den Wert zu bestimmen, der diesem Webserver Steuerelement zugeordnet ist. Diese Eigenschaft wird hauptsächlich von Steuerelemententwicklern verwendet.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Entwickeln benutzerdefinierter ASP.NET-Server Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="TagName">
      <MemberSignature Language="C#" Value="protected virtual string TagName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TagName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.TagName" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property TagName As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::String ^ TagName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TagName : string" Usage="System.Web.UI.WebControls.WebControl.TagName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen des Steuerelementtags ab. Diese Eigenschaft wird hauptsächlich von Steuerelemententwicklern verwendet.</summary>
        <value>Der Name des Steuerelementtags.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.WebControl.TagName%2A> die-Eigenschaft, um den Namen des Steuer Elements zu bestimmen, das diesem Webserver Steuerelement zugeordnet ist. Diese Eigenschaft wird hauptsächlich von Steuerelemententwicklern verwendet.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Entwickeln benutzerdefinierter ASP.NET-Server Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="ToolTip">
      <MemberSignature Language="C#" Value="public virtual string ToolTip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolTip" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.ToolTip" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ToolTip As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ToolTip { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ToolTip : string with get, set" Usage="System.Web.UI.WebControls.WebControl.ToolTip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Text ab, der angezeigt wird, wenn mit dem Mauszeiger auf das Webserversteuerelement gezeigt wird, oder legt diesen fest.</summary>
        <value>Der Text, der angezeigt wird, wenn mit dem Mauszeiger auf das Webserversteuerelement gezeigt wird. Die Standardeinstellung ist <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.WebControl.ToolTip%2A> die-Eigenschaft, um den benutzerdefinierten Text anzugeben, der angezeigt wird, wenn mit dem Mauszeiger auf das Webserver Steuerelement gezeigt wird.  
  
> [!NOTE]
>  Diese Eigenschaft wird für alle Browser gerendert. Diese Eigenschaft wird jedoch nur in Microsoft Internet Explorer als QuickInfo angezeigt. Alle anderen Browser ignorieren diese Eigenschaft.  
  
 Der Wert dieser Eigenschaft, wenn festgelegt, kann mithilfe eines Designers Tools automatisch zu einer Ressourcendatei gespeichert werden. Weitere Informationen finden Sie unter <xref:System.ComponentModel.LocalizableAttribute> und [Globalisierung und Lokalisierung](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.WebControl.ToolTip%2A> -Eigenschaft für <xref:System.Web.UI.WebControls.Button> das-Steuerelement festgelegt wird <xref:System.Web.UI.WebControls.WebControl> , die von der-Basisklasse geerbt wird.  
  
> [!NOTE]
>  Im folgenden Codebeispiel wird das Einzel Datei-Code Modell verwendet und funktioniert möglicherweise nicht ordnungsgemäß, wenn es direkt in eine Code-Behind-Datei kopiert wird. Dieses Codebeispiel muss in eine leere Textdatei mit der Erweiterung ASPX kopiert werden. Weitere Informationen zum Web Forms-Code Modell finden Sie unter [ASP.net Web Forms Page Code Model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[Classic WebControl.ToolTip Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.ToolTip Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.ToolTip Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.ToolTip Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/143d14d6-9d12-4d4b-ae60-f00e0eb6938f">ASP.NET-Server Steuerelemente und Browser Funktionen</related>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Entwickeln benutzerdefinierter ASP.NET-Server Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="webControl.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Bewirkt, dass das Steuerelement die Änderungen an seinem Ansichtszustand nachverfolgt, damit diese in der <see cref="P:System.Web.UI.Control.ViewState" />-Eigenschaft des Objekts gespeichert werden können.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WebControl.TrackViewState%2A> -Methode wird hauptsächlich von Steuerelement Entwicklern verwendet.  
  
 Der <xref:System.Web.UI.WebControls.WebControl.TrackViewState%2A> markiert den Anfangspunkt, an dem mit dem Nachverfolgen und Speichern von Änderungen am Ansichts Zustand für das Steuerelement begonnen werden soll. Die <xref:System.Web.UI.WebControls.WebControl.TrackViewState%2A> -Methode wird automatisch von ASP.NET aufgerufen, wenn ein Server Steuerelement initialisiert wird.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ViewState" />
        <altmember cref="P:System.Web.UI.Control.IsTrackingViewState" />
        <related type="Article" href="https://msdn.microsoft.com/library/9e98c7de-a888-48df-b14e-02ec8bef7681">Steuern des Zustands im Vergleich zu Beispiel zum Ansichts Zustand</related>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Entwickeln benutzerdefinierter ASP.NET-Server Steuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)">ASP.net State Management (Übersicht)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">Einführung in den Lebenszyklus der ASP.NET-Seite</related>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.Unit Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit Width" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.Width" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Width As Unit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::Unit Width { System::Web::UI::WebControls::Unit get(); void set(System::Web::UI::WebControls::Unit value); };" />
      <MemberSignature Language="F#" Value="member this.Width : System.Web.UI.WebControls.Unit with get, set" Usage="System.Web.UI.WebControls.WebControl.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.WebControls.Unit), "")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Breite des Webserver-Steuerelements ab oder legt sie fest.</summary>
        <value>Eine <see cref="T:System.Web.UI.WebControls.Unit" />, die die Breite des Steuerelements darstellt. Die Standardeinstellung ist <see cref="F:System.Web.UI.WebControls.Unit.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.WebControl.Width%2A> die-Eigenschaft, um die Breite des Webserver Steuer Elements anzugeben.  
  
> [!NOTE]
>  Diese Eigenschaft wird nicht für alle Steuerelemente in Browsern angezeigt, die älter sind als Microsoft Internet Explorer Version 4. Steuerelemente, die diese Eigenschaft in früheren Browsern nicht Rendering <xref:System.Web.UI.WebControls.Label>enthalten <xref:System.Web.UI.WebControls.HyperLink>, <xref:System.Web.UI.WebControls.LinkButton>sind,, und Validierungs Steuerelemente. Die <xref:System.Web.UI.WebControls.CheckBoxList>- <xref:System.Web.UI.WebControls.RadioButtonList> Eigenschaft <xref:System.Web.UI.WebControls.DataList> und die-Eigenschaft in früheren Browsern auch nicht, wenn `RepeatLayout` Ihre-Eigenschaft auf `RepeatLayout.Flow`festgelegt ist. Außerdem werden in früheren Browsern nur `Pixel` die `Percentage` Einheiten Typen von und unterstützt.  
  
 Da es sich bei dieser Eigenschaft nicht um ein standardmäßiges HTML handelt, unterstützen Webserver Steuerelemente <xref:System.Web.UI.WebControls.Table> , <xref:System.Web.UI.WebControls.DataGrid>die als Tabelle angezeigt werden (z. b. und) diese Eigenschaft nicht in Browsern vor Microsoft Internet Explorer Version 4.  
  
> [!NOTE]
>  Wenn Sie die <xref:System.Web.UI.WebControls.WebControl.Width%2A> -Eigenschaft deklarativ auf einen anderen Einheitentyp als den `Pixel`Standardwert festlegen möchten, müssen Sie einen neuen Einheitstyp erstellen, der für den gewünschten Einheitentyp spezifisch ist. Um z. b. die- <xref:System.Web.UI.WebControls.WebControl.Width%2A> Eigenschaft eines Steuer Elements auf einen prozentualen Wert von 100 festzulegen, können Sie wie folgt vorgehen:  
>   
>  `myWebControl.width = Unit.Percentage(100);`  
>   
>  Weitere Informationen zu den für die <xref:System.Web.UI.WebControls.WebControl.Width%2A> Eigenschaft verfügbaren Einheiten Typen finden Sie unter der <xref:System.Web.UI.WebControls.Unit> -Klasse.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.WebControl.Width%2A> -Eigenschaft <xref:System.Web.UI.WebControls.Table> des-Steuer Elements deklarativ festgelegt <xref:System.Web.UI.WebControls.WebControl> wird, die von der-Basisklasse geerbt wurde.  
  
 [!code-aspx-csharp[Classic WebControl.Width Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.Width Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.Width Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.Width Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die Breite des Webserversteuerelements wurde auf einen negativen Wert festgelegt.</exception>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <related type="Article" href="https://msdn.microsoft.com/library/143d14d6-9d12-4d4b-ae60-f00e0eb6938f">ASP.NET-Server Steuerelemente und Browser Funktionen</related>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Entwickeln benutzerdefinierter ASP.NET-Server Steuerelemente</related>
      </Docs>
    </Member>
  </Members>
</Type>
