<Type Name="LinqDataSourceInsertEventArgs" FullName="System.Web.UI.WebControls.LinqDataSourceInsertEventArgs">
  <TypeSignature Language="C#" Value="public class LinqDataSourceInsertEventArgs : System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LinqDataSourceInsertEventArgs extends System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class LinqDataSourceInsertEventArgs&#xA;Inherits CancelEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class LinqDataSourceInsertEventArgs : System::ComponentModel::CancelEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.CancelEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="e7715-101">Stellt Daten für das <see cref="E:System.Web.UI.WebControls.LinqDataSource.Inserting" />-Ereignis bereit.</span><span class="sxs-lookup"><span data-stu-id="e7715-101">Provides data for the <see cref="E:System.Web.UI.WebControls.LinqDataSource.Inserting" /> event.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7715-102">Die <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> Objekt übergeben wird, um einen Ereignishandler für das <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="e7715-102">The <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> object is passed to any event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event.</span></span> <span data-ttu-id="e7715-103">Die <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> Eigenschaft enthält die Daten, die eingefügt werden.</span><span class="sxs-lookup"><span data-stu-id="e7715-103">The <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property contains the data that will be inserted.</span></span>  
  
 <span data-ttu-id="e7715-104">Sie können die <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> Objekt, das die Daten zu überprüfen, bevor der Einfügevorgang in der Datenquelle ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="e7715-104">You can use the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> object to examine the data before the insert operation is executed in the data source.</span></span> <span data-ttu-id="e7715-105">Sie können dann überprüfen Sie die Daten, zu überprüfen Validierungsfehler von der Datenklasse fest oder ändern Sie einen Wert vor dem Update.</span><span class="sxs-lookup"><span data-stu-id="e7715-105">You can then validate the data, examine validation errors from the data class, or change a value before the update.</span></span> <span data-ttu-id="e7715-106">Sie können auch die Insert-Vorgang "Abbrechen".</span><span class="sxs-lookup"><span data-stu-id="e7715-106">You can also cancel the insert operation.</span></span>  
  
 <span data-ttu-id="e7715-107">Wenn das Objekt, das die Datenquelle repräsentiert, eine Validierungsausnahme ausgelöst, bevor die Daten eingefügt die <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> Eigenschaft enthält eine Instanz von der <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> Klasse.</span><span class="sxs-lookup"><span data-stu-id="e7715-107">If the object that represents the data source throws a validation exception before it inserts the data, the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> property contains an instance of the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> class.</span></span> <span data-ttu-id="e7715-108">Sie können alle Validierungsausnahmen durch Abrufen der <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="e7715-108">You can retrieve all the validation exceptions through the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> property.</span></span> <span data-ttu-id="e7715-109">Wenn keine Validierungsausnahme ausgelöst wird, die <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> Eigenschaft enthält `null`.</span><span class="sxs-lookup"><span data-stu-id="e7715-109">If no validation exception is thrown, the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> property contains `null`.</span></span> <span data-ttu-id="e7715-110">Wenn Sie die Validierungsausnahmen behandeln und nicht die Ausnahme erneut ausgelöst werden soll, legen Sie die <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled%2A> Eigenschaft `true`.</span><span class="sxs-lookup"><span data-stu-id="e7715-110">If you handle the validation exceptions and do not want the exception to be re-thrown, set the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled%2A> property to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7715-111">Das folgende Beispiel zeigt einen Handler für das <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="e7715-111">The following example shows a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event.</span></span> <span data-ttu-id="e7715-112">Das Objekt aus der <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> Eigenschaft umgewandelt wird, auf einen Typ mit dem Namen `Product`.</span><span class="sxs-lookup"><span data-stu-id="e7715-112">The object from the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property is cast to a type named `Product`.</span></span> <span data-ttu-id="e7715-113">Die `DateModified` Eigenschaft von der `Product` -Objekts auf das aktuelle Datum und die Uhrzeit festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="e7715-113">The `DateModified` property of the `Product` object is set to the current date and time.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource.Inserting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Inserting/cs/Default.aspx.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource.Inserting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Inserting/vb/Default.aspx.vb#1)]  
  
 <span data-ttu-id="e7715-114">Das folgende Beispiel zeigt einen Ereignishandler für das <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="e7715-114">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event.</span></span> <span data-ttu-id="e7715-115">Es zeigt ausnahmemeldungen für die Validierung mithilfe einer <xref:System.Web.UI.WebControls.Label> Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="e7715-115">It displays any validation exception messages by using a <xref:System.Web.UI.WebControls.Label> control.</span></span>  
  
```vb  
Protected Sub LinqDataSource_Inserting(ByVal sender As Object, _  
        ByVal e As LinqDataSourceInsertEventArgs)  
    If (e.Exception IsNot Nothing) Then  
        For Each innerException As KeyValuePair(Of String, Exception) _  
               In e.Exception.InnerExceptions  
            Label1.Text &= innerException.Key & ": " & _  
                innerException.Value.Message + "<br />"  
        Next  
        e.ExceptionHandled = True  
    End If  
End Sub  
```  
  
```csharp  
protected void LinqDataSource_Inserting(object sender,   
        LinqDataSourceInsertEventArgs e)  
{  
    if (e.Exception != null)  
    {  
        foreach (KeyValuePair<string, Exception> innerException in   
             e.Exception.InnerExceptions)  
        {  
        Label1.Text += innerException.Key + ": " +   
            innerException.Value.Message + "<br />";  
        }  
        e.ExceptionHandled = true;  
    }  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e7715-116">Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="e7715-116">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceInsertEventArgs (object newObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object newObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (newObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceInsertEventArgs(System::Object ^ newObject);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="newObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="newObject"><span data-ttu-id="e7715-117">Ein Objekt, das die einzufügenden Daten enthält.</span><span class="sxs-lookup"><span data-stu-id="e7715-117">An object that contains the data to insert.</span></span></param>
        <summary><span data-ttu-id="e7715-118">Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="e7715-118">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceInsertEventArgs (System.Web.UI.WebControls.LinqDataSourceValidationException exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.LinqDataSourceValidationException exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.#ctor(System.Web.UI.WebControls.LinqDataSourceValidationException)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (exception As LinqDataSourceValidationException)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceInsertEventArgs(System::Web::UI::WebControls::LinqDataSourceValidationException ^ exception);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="exception" Type="System.Web.UI.WebControls.LinqDataSourceValidationException" />
      </Parameters>
      <Docs>
        <param name="exception"><span data-ttu-id="e7715-119">Die Ausnahme, die beim Validieren der einzufügenden Daten aufgetreten ist.</span><span class="sxs-lookup"><span data-stu-id="e7715-119">The exception that occurred when the data to insert was being validated.</span></span></param>
        <summary><span data-ttu-id="e7715-120">Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" />-Klasse und gibt die bereitgestellte Ausnahme an.</span><span class="sxs-lookup"><span data-stu-id="e7715-120">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" /> class and specifies the provided exception.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.LinqDataSourceValidationException Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.LinqDataSourceValidationException Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As LinqDataSourceValidationException" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::LinqDataSourceValidationException ^ Exception { System::Web::UI::WebControls::LinqDataSourceValidationException ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.LinqDataSourceValidationException</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e7715-121">Ruft die Ausnahme ab, die ausgelöst wurde, während die Daten vor dem Einfügevorgang validiert wurden.</span><span class="sxs-lookup"><span data-stu-id="e7715-121">Gets the exception that was thrown while the data was being validated before the insert operation.</span></span></summary>
        <value><span data-ttu-id="e7715-122">Die Ausnahme, wenn ein Fehler aufgetreten ist, andernfalls <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e7715-122">The exception, if an error occurred; otherwise, <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7715-123">Wenn eine Validierungsausnahme ausgelöst wird, bevor der Einfügevorgang ausgeführt wird, wird die Ausnahme gespeichert, der <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="e7715-123">If a validation exception is thrown before the insert operation is performed, the exception is stored in the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> property.</span></span> <span data-ttu-id="e7715-124">In einem Ereignishandler für das <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> -Ereignis können Sie die Ausnahme durch Abrufen der <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="e7715-124">In a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event, you can retrieve the exception through the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7715-125">Das folgende Beispiel zeigt einen Handler für das <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="e7715-125">The following example shows a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event.</span></span> <span data-ttu-id="e7715-126">Es zeigt ausnahmemeldungen für die Validierung mithilfe einer <xref:System.Web.UI.WebControls.Label> Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="e7715-126">It displays any validation exception messages by using a <xref:System.Web.UI.WebControls.Label> control.</span></span>  
  
```vb  
Protected Sub LinqDataSource_Inserting(ByVal sender As Object, _  
        ByVal e As LinqDataSourceInsertEventArgs)  
    If (e.Exception IsNot Nothing) Then  
        For Each innerException As KeyValuePair(Of String, Exception) _  
               In e.Exception.InnerExceptions  
            Label1.Text &= innerException.Key & ": " & _  
                innerException.Value.Message + "<br />"  
        Next  
        e.ExceptionHandled = True  
    End If  
End Sub  
```  
  
```csharp  
protected void LinqDataSource_Inserting(object sender,   
        LinqDataSourceInsertEventArgs e)  
{  
    if (e.Exception != null)  
    {  
        foreach (KeyValuePair<string, Exception> innerException in   
             e.Exception.InnerExceptions)  
        {  
        Label1.Text += innerException.Key + ": " +   
            innerException.Value.Message + "<br />";  
        }  
        e.ExceptionHandled = true;  
    }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled" />
      <MemberSignature Language="VB.NET" Value="Public Property ExceptionHandled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExceptionHandled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e7715-127">Ruft einen Wert ab, der angibt, ob die Ausnahme behandelt wurde und dass diese nicht erneut ausgelöst werden soll, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="e7715-127">Gets or sets a value that indicates whether the exception was handled and that it should not be thrown again.</span></span></summary>
        <value>
          <span data-ttu-id="e7715-128"><see langword="true" />, wenn die Ausnahme behandelt wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e7715-128"><see langword="true" /> if the exception was handled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7715-129">Ereignishandler für erstellen Sie die <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> Ereignis Validierungsausnahmen untersucht, die vor der Insert-Vorgang aufgetreten ist.</span><span class="sxs-lookup"><span data-stu-id="e7715-129">You can create event handlers for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event to examine validation exceptions that occurred before the insert operation.</span></span> <span data-ttu-id="e7715-130">Wenn Sie die Ausnahme behandeln und nicht erneut ausgelöst werden soll möchten, legen Sie die <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled%2A> Eigenschaft `true`.</span><span class="sxs-lookup"><span data-stu-id="e7715-130">If you handle the exception and do not want it to be thrown again, set the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled%2A> property to `true`.</span></span> <span data-ttu-id="e7715-131">Wenn Sie nicht festlegen, die <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled%2A> Eigenschaft `true`, wird die Ausnahme an den nächsten Ereignishandler in der Aufrufliste weitergegeben werden.</span><span class="sxs-lookup"><span data-stu-id="e7715-131">If you do not set the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled%2A> property to `true`, the exception will be propagated to the next event handler in the call stack.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7715-132">Das folgende Beispiel zeigt einen Ereignishandler für das <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="e7715-132">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event.</span></span> <span data-ttu-id="e7715-133">Es zeigt ausnahmemeldungen für die Validierung mithilfe einer <xref:System.Web.UI.WebControls.Label> Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="e7715-133">It displays any validation exception messages by using a <xref:System.Web.UI.WebControls.Label> control.</span></span>  
  
```vb  
Protected Sub LinqDataSource_Inserting(ByVal sender As Object, _  
        ByVal e As LinqDataSourceInsertEventArgs)  
    If (e.Exception IsNot Nothing) Then  
        For Each innerException As KeyValuePair(Of String, Exception) _  
               In e.Exception.InnerExceptions  
            Label1.Text &= innerException.Key & ": " & _  
                innerException.Value.Message + "<br />"  
        Next  
        e.ExceptionHandled = True  
    End If  
End Sub  
```  
  
```csharp  
protected void LinqDataSource_Inserting(object sender,   
        LinqDataSourceInsertEventArgs e)  
{  
    if (e.Exception != null)  
    {  
        foreach (KeyValuePair<string, Exception> innerException in   
             e.Exception.InnerExceptions)  
        {  
        Label1.Text += innerException.Key + ": " +   
            innerException.Value.Message + "<br />";  
        }  
        e.ExceptionHandled = true;  
    }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewObject">
      <MemberSignature Language="C#" Value="public object NewObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object NewObject" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NewObject As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ NewObject { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e7715-134">Ruft das Objekt ab, das die einzufügenden Daten enthält.</span><span class="sxs-lookup"><span data-stu-id="e7715-134">Gets the object that contains the data to insert.</span></span></summary>
        <value><span data-ttu-id="e7715-135">Ein Objekt, das die einzufügenden Daten enthält.</span><span class="sxs-lookup"><span data-stu-id="e7715-135">An object that contains the data to insert.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7715-136">Die <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> Eigenschaft enthält die Daten, die in der Datenquelle eingefügt werden.</span><span class="sxs-lookup"><span data-stu-id="e7715-136">The <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property contains the data that will be inserted into the data source.</span></span> <span data-ttu-id="e7715-137">Erstellen Sie einen Ereignishandler für das <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> Ereignis, und rufen die <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> Eigenschaft zum Überprüfen der Daten, die Daten ändern oder den Insert-Vorgang "Abbrechen", bevor die Datenvorgang ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="e7715-137">Create a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event and retrieve the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property in order to validate the data, change the data, or cancel the insert operation before the data operation is executed.</span></span>  
  
 <span data-ttu-id="e7715-138">Die <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> Eigenschaft gibt ein Objekt vom Typ <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="e7715-138">The <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property returns an object of type <xref:System.Object>.</span></span> <span data-ttu-id="e7715-139">Sie können dieses Objekt in den Typ der Klasse umgewandelt, die das Daten darstellt.</span><span class="sxs-lookup"><span data-stu-id="e7715-139">You can cast this object to the type of the class that represents the data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7715-140">Das folgende Beispiel zeigt einen Handler für das <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="e7715-140">The following example shows a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event.</span></span> <span data-ttu-id="e7715-141">Das Objekt aus der <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> Eigenschaft umgewandelt wird, auf einen Typ mit dem Namen `Product`.</span><span class="sxs-lookup"><span data-stu-id="e7715-141">The object from the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property is cast to a type named `Product`.</span></span> <span data-ttu-id="e7715-142">Die `DateModified` Eigenschaft von der `Product` -Objekts auf das aktuelle Datum und die Uhrzeit festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="e7715-142">The `DateModified` property of the `Product` object is set to the current date and time.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource.Inserting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Inserting/cs/Default.aspx.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource.Inserting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Inserting/vb/Default.aspx.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>