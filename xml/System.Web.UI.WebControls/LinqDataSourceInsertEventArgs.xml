<Type Name="LinqDataSourceInsertEventArgs" FullName="System.Web.UI.WebControls.LinqDataSourceInsertEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2ab4325615454ed91c3a809e54c9e27b6efdfd83" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70532861" /></Metadata><TypeSignature Language="C#" Value="public class LinqDataSourceInsertEventArgs : System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LinqDataSourceInsertEventArgs extends System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class LinqDataSourceInsertEventArgs&#xA;Inherits CancelEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class LinqDataSourceInsertEventArgs : System::ComponentModel::CancelEventArgs" />
  <TypeSignature Language="F#" Value="type LinqDataSourceInsertEventArgs = class&#xA;    inherit CancelEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.CancelEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a6f33-101">Stellt Daten für das <see cref="E:System.Web.UI.WebControls.LinqDataSource.Inserting" />-Ereignis bereit.</span><span class="sxs-lookup"><span data-stu-id="a6f33-101">Provides data for the <see cref="E:System.Web.UI.WebControls.LinqDataSource.Inserting" /> event.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6f33-102">Das <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> -Objekt wird an einen beliebigen Ereignishandler für <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> das-Ereignis übermittelt.</span><span class="sxs-lookup"><span data-stu-id="a6f33-102">The <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> object is passed to any event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event.</span></span> <span data-ttu-id="a6f33-103">Die <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> -Eigenschaft enthält die Daten, die eingefügt werden.</span><span class="sxs-lookup"><span data-stu-id="a6f33-103">The <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property contains the data that will be inserted.</span></span>  
  
 <span data-ttu-id="a6f33-104">Sie können das <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> -Objekt verwenden, um die Daten zu untersuchen, bevor der Einfügevorgang in der Datenquelle ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="a6f33-104">You can use the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> object to examine the data before the insert operation is executed in the data source.</span></span> <span data-ttu-id="a6f33-105">Anschließend können Sie die Daten überprüfen, Validierungs Fehler von der Datenklasse überprüfen oder einen Wert vor dem Update ändern.</span><span class="sxs-lookup"><span data-stu-id="a6f33-105">You can then validate the data, examine validation errors from the data class, or change a value before the update.</span></span> <span data-ttu-id="a6f33-106">Sie können auch den Einfügevorgang abbrechen.</span><span class="sxs-lookup"><span data-stu-id="a6f33-106">You can also cancel the insert operation.</span></span>  
  
 <span data-ttu-id="a6f33-107">Wenn das Objekt, das die Datenquelle darstellt, eine Validierungs Ausnahme auslöst, bevor die Daten eingefügt <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> werden, enthält die-Eigenschaft <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> eine Instanz der-Klasse.</span><span class="sxs-lookup"><span data-stu-id="a6f33-107">If the object that represents the data source throws a validation exception before it inserts the data, the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> property contains an instance of the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> class.</span></span> <span data-ttu-id="a6f33-108">Mithilfe der <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> -Eigenschaft können Sie alle Validierungs Ausnahmen abrufen.</span><span class="sxs-lookup"><span data-stu-id="a6f33-108">You can retrieve all the validation exceptions through the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> property.</span></span> <span data-ttu-id="a6f33-109">Wenn keine Validierungs Ausnahme ausgelöst wird, enthält <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> `null`die-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="a6f33-109">If no validation exception is thrown, the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> property contains `null`.</span></span> <span data-ttu-id="a6f33-110">Wenn Sie die Validierungs Ausnahmen behandeln und die Ausnahme nicht erneut ausgelöst werden soll, legen Sie die <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled%2A> -Eigenschaft auf `true`fest.</span><span class="sxs-lookup"><span data-stu-id="a6f33-110">If you handle the validation exceptions and do not want the exception to be re-thrown, set the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled%2A> property to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6f33-111">Das folgende Beispiel zeigt einen Handler für das <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> -Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a6f33-111">The following example shows a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event.</span></span> <span data-ttu-id="a6f33-112">Das-Objekt aus <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> der-Eigenschaft wird in einen Typ `Product`mit dem Namen umgewandelt.</span><span class="sxs-lookup"><span data-stu-id="a6f33-112">The object from the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property is cast to a type named `Product`.</span></span> <span data-ttu-id="a6f33-113">Die `DateModified` -Eigenschaft `Product` des-Objekts wird auf das aktuelle Datum und die aktuelle Uhrzeit festgelegt.</span><span class="sxs-lookup"><span data-stu-id="a6f33-113">The `DateModified` property of the `Product` object is set to the current date and time.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource.Inserting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Inserting/cs/Default.aspx.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource.Inserting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Inserting/vb/Default.aspx.vb#1)]  
  
 <span data-ttu-id="a6f33-114">Das folgende Beispiel zeigt einen Ereignishandler für das <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> -Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a6f33-114">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event.</span></span> <span data-ttu-id="a6f33-115">Alle Validierungs Ausnahme Meldungen werden mithilfe eines <xref:System.Web.UI.WebControls.Label> -Steuer Elements angezeigt.</span><span class="sxs-lookup"><span data-stu-id="a6f33-115">It displays any validation exception messages by using a <xref:System.Web.UI.WebControls.Label> control.</span></span>  
  
```vb  
Protected Sub LinqDataSource_Inserting(ByVal sender As Object, _  
        ByVal e As LinqDataSourceInsertEventArgs)  
    If (e.Exception IsNot Nothing) Then  
        For Each innerException As KeyValuePair(Of String, Exception) _  
               In e.Exception.InnerExceptions  
            Label1.Text &= innerException.Key & ": " & _  
                innerException.Value.Message + "<br />"  
        Next  
        e.ExceptionHandled = True  
    End If  
End Sub  
```  
  
```csharp  
protected void LinqDataSource_Inserting(object sender,   
        LinqDataSourceInsertEventArgs e)  
{  
    if (e.Exception != null)  
    {  
        foreach (KeyValuePair<string, Exception> innerException in   
             e.Exception.InnerExceptions)  
        {  
        Label1.Text += innerException.Key + ": " +   
            innerException.Value.Message + "<br />";  
        }  
        e.ExceptionHandled = true;  
    }  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a6f33-116">Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="a6f33-116">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceInsertEventArgs (object newObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object newObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (newObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceInsertEventArgs(System::Object ^ newObject);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.LinqDataSourceInsertEventArgs : obj -&gt; System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" Usage="new System.Web.UI.WebControls.LinqDataSourceInsertEventArgs newObject" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="newObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="newObject"><span data-ttu-id="a6f33-117">Ein Objekt, das die einzufügenden Daten enthält.</span><span class="sxs-lookup"><span data-stu-id="a6f33-117">An object that contains the data to insert.</span></span></param>
        <summary><span data-ttu-id="a6f33-118">Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="a6f33-118">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceInsertEventArgs (System.Web.UI.WebControls.LinqDataSourceValidationException exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.LinqDataSourceValidationException exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.#ctor(System.Web.UI.WebControls.LinqDataSourceValidationException)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (exception As LinqDataSourceValidationException)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceInsertEventArgs(System::Web::UI::WebControls::LinqDataSourceValidationException ^ exception);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.LinqDataSourceInsertEventArgs : System.Web.UI.WebControls.LinqDataSourceValidationException -&gt; System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" Usage="new System.Web.UI.WebControls.LinqDataSourceInsertEventArgs exception" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="exception" Type="System.Web.UI.WebControls.LinqDataSourceValidationException" />
      </Parameters>
      <Docs>
        <param name="exception"><span data-ttu-id="a6f33-119">Die Ausnahme, die beim Validieren der einzufügenden Daten aufgetreten ist.</span><span class="sxs-lookup"><span data-stu-id="a6f33-119">The exception that occurred when the data to insert was being validated.</span></span></param>
        <summary><span data-ttu-id="a6f33-120">Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" />-Klasse und gibt die bereitgestellte Ausnahme an.</span><span class="sxs-lookup"><span data-stu-id="a6f33-120">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" /> class and specifies the provided exception.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.LinqDataSourceValidationException Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.LinqDataSourceValidationException Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As LinqDataSourceValidationException" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::LinqDataSourceValidationException ^ Exception { System::Web::UI::WebControls::LinqDataSourceValidationException ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : System.Web.UI.WebControls.LinqDataSourceValidationException" Usage="System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.LinqDataSourceValidationException</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a6f33-121">Ruft die Ausnahme ab, die ausgelöst wurde, während die Daten vor dem Einfügevorgang validiert wurden.</span><span class="sxs-lookup"><span data-stu-id="a6f33-121">Gets the exception that was thrown while the data was being validated before the insert operation.</span></span></summary>
        <value><span data-ttu-id="a6f33-122">Die Ausnahme, wenn ein Fehler aufgetreten ist, andernfalls <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6f33-122">The exception, if an error occurred; otherwise, <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6f33-123">Wenn eine Validierungs Ausnahme ausgelöst wird, bevor der Einfügevorgang ausgeführt wird, wird die Ausnahme <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> in der-Eigenschaft gespeichert.</span><span class="sxs-lookup"><span data-stu-id="a6f33-123">If a validation exception is thrown before the insert operation is performed, the exception is stored in the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> property.</span></span> <span data-ttu-id="a6f33-124">In einem Handler für das <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> -Ereignis können Sie die Ausnahme über die <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> -Eigenschaft abrufen.</span><span class="sxs-lookup"><span data-stu-id="a6f33-124">In a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event, you can retrieve the exception through the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6f33-125">Das folgende Beispiel zeigt einen Handler für das <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> -Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a6f33-125">The following example shows a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event.</span></span> <span data-ttu-id="a6f33-126">Alle Validierungs Ausnahme Meldungen werden mithilfe eines <xref:System.Web.UI.WebControls.Label> -Steuer Elements angezeigt.</span><span class="sxs-lookup"><span data-stu-id="a6f33-126">It displays any validation exception messages by using a <xref:System.Web.UI.WebControls.Label> control.</span></span>  
  
```vb  
Protected Sub LinqDataSource_Inserting(ByVal sender As Object, _  
        ByVal e As LinqDataSourceInsertEventArgs)  
    If (e.Exception IsNot Nothing) Then  
        For Each innerException As KeyValuePair(Of String, Exception) _  
               In e.Exception.InnerExceptions  
            Label1.Text &= innerException.Key & ": " & _  
                innerException.Value.Message + "<br />"  
        Next  
        e.ExceptionHandled = True  
    End If  
End Sub  
```  
  
```csharp  
protected void LinqDataSource_Inserting(object sender,   
        LinqDataSourceInsertEventArgs e)  
{  
    if (e.Exception != null)  
    {  
        foreach (KeyValuePair<string, Exception> innerException in   
             e.Exception.InnerExceptions)  
        {  
        Label1.Text += innerException.Key + ": " +   
            innerException.Value.Message + "<br />";  
        }  
        e.ExceptionHandled = true;  
    }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled" />
      <MemberSignature Language="VB.NET" Value="Public Property ExceptionHandled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExceptionHandled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExceptionHandled : bool with get, set" Usage="System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a6f33-127">Ruft einen Wert ab, der angibt, ob die Ausnahme behandelt wurde und dass diese nicht erneut ausgelöst werden soll, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="a6f33-127">Gets or sets a value that indicates whether the exception was handled and that it should not be thrown again.</span></span></summary>
        <value><span data-ttu-id="a6f33-128"><see langword="true" />, wenn die Ausnahme behandelt wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a6f33-128"><see langword="true" /> if the exception was handled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6f33-129">Sie können Ereignishandler für das <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> -Ereignis erstellen, um Validierungs Ausnahmen zu überprüfen, die vor dem Einfügevorgang aufgetreten sind.</span><span class="sxs-lookup"><span data-stu-id="a6f33-129">You can create event handlers for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event to examine validation exceptions that occurred before the insert operation.</span></span> <span data-ttu-id="a6f33-130">Wenn Sie die Ausnahme behandeln und nicht erneut ausgelöst werden sollen, legen Sie die <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled%2A> -Eigenschaft auf `true`fest.</span><span class="sxs-lookup"><span data-stu-id="a6f33-130">If you handle the exception and do not want it to be thrown again, set the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled%2A> property to `true`.</span></span> <span data-ttu-id="a6f33-131">Wenn Sie die <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled%2A> -Eigenschaft nicht auf `true`festlegen, wird die Ausnahme an den nächsten Ereignishandler in der-aufrufsstapel weitergegeben.</span><span class="sxs-lookup"><span data-stu-id="a6f33-131">If you do not set the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled%2A> property to `true`, the exception will be propagated to the next event handler in the call stack.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6f33-132">Das folgende Beispiel zeigt einen Ereignishandler für das <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> -Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a6f33-132">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event.</span></span> <span data-ttu-id="a6f33-133">Alle Validierungs Ausnahme Meldungen werden mithilfe eines <xref:System.Web.UI.WebControls.Label> -Steuer Elements angezeigt.</span><span class="sxs-lookup"><span data-stu-id="a6f33-133">It displays any validation exception messages by using a <xref:System.Web.UI.WebControls.Label> control.</span></span>  
  
```vb  
Protected Sub LinqDataSource_Inserting(ByVal sender As Object, _  
        ByVal e As LinqDataSourceInsertEventArgs)  
    If (e.Exception IsNot Nothing) Then  
        For Each innerException As KeyValuePair(Of String, Exception) _  
               In e.Exception.InnerExceptions  
            Label1.Text &= innerException.Key & ": " & _  
                innerException.Value.Message + "<br />"  
        Next  
        e.ExceptionHandled = True  
    End If  
End Sub  
```  
  
```csharp  
protected void LinqDataSource_Inserting(object sender,   
        LinqDataSourceInsertEventArgs e)  
{  
    if (e.Exception != null)  
    {  
        foreach (KeyValuePair<string, Exception> innerException in   
             e.Exception.InnerExceptions)  
        {  
        Label1.Text += innerException.Key + ": " +   
            innerException.Value.Message + "<br />";  
        }  
        e.ExceptionHandled = true;  
    }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewObject">
      <MemberSignature Language="C#" Value="public object NewObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object NewObject" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NewObject As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ NewObject { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NewObject : obj" Usage="System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a6f33-134">Ruft das Objekt ab, das die einzufügenden Daten enthält.</span><span class="sxs-lookup"><span data-stu-id="a6f33-134">Gets the object that contains the data to insert.</span></span></summary>
        <value><span data-ttu-id="a6f33-135">Ein Objekt, das die einzufügenden Daten enthält.</span><span class="sxs-lookup"><span data-stu-id="a6f33-135">An object that contains the data to insert.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6f33-136">Die <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> -Eigenschaft enthält die Daten, die in die Datenquelle eingefügt werden.</span><span class="sxs-lookup"><span data-stu-id="a6f33-136">The <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property contains the data that will be inserted into the data source.</span></span> <span data-ttu-id="a6f33-137">Erstellen Sie einen Handler für <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> das-Ereignis, <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> und rufen Sie die-Eigenschaft ab, um die Daten zu überprüfen, die Daten zu ändern oder den Einfügevorgang abzubrechen, bevor der Daten Vorgang ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="a6f33-137">Create a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event and retrieve the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property in order to validate the data, change the data, or cancel the insert operation before the data operation is executed.</span></span>  
  
 <span data-ttu-id="a6f33-138">Die <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> -Eigenschaft gibt ein Objekt vom <xref:System.Object>Typ zurück.</span><span class="sxs-lookup"><span data-stu-id="a6f33-138">The <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property returns an object of type <xref:System.Object>.</span></span> <span data-ttu-id="a6f33-139">Sie können dieses Objekt in den Typ der Klasse umwandeln, die die Daten darstellt.</span><span class="sxs-lookup"><span data-stu-id="a6f33-139">You can cast this object to the type of the class that represents the data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6f33-140">Das folgende Beispiel zeigt einen Handler für das <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> -Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a6f33-140">The following example shows a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event.</span></span> <span data-ttu-id="a6f33-141">Das-Objekt aus <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> der-Eigenschaft wird in einen Typ `Product`mit dem Namen umgewandelt.</span><span class="sxs-lookup"><span data-stu-id="a6f33-141">The object from the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property is cast to a type named `Product`.</span></span> <span data-ttu-id="a6f33-142">Die `DateModified` -Eigenschaft `Product` des-Objekts wird auf das aktuelle Datum und die aktuelle Uhrzeit festgelegt.</span><span class="sxs-lookup"><span data-stu-id="a6f33-142">The `DateModified` property of the `Product` object is set to the current date and time.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource.Inserting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Inserting/cs/Default.aspx.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource.Inserting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Inserting/vb/Default.aspx.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
