<Type Name="SqlDataSourceStatusEventArgs" FullName="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cf662220fa381ff1888a96cd50bfa39d132a8c80" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39938462" /></Metadata><TypeSignature Language="C#" Value="public class SqlDataSourceStatusEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlDataSourceStatusEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlDataSourceStatusEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlDataSourceStatusEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type SqlDataSourceStatusEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt Daten für ein Ereignis bereit, das vom <see cref="T:System.Web.UI.WebControls.SqlDataSource" />-Steuerelement nach Abschluss einer Datenoperation ausgelöst wird.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> Klasse wird verwendet, der <xref:System.Web.UI.WebControls.SqlDataSource.Selected>, <xref:System.Web.UI.WebControls.SqlDataSource.Updated>, <xref:System.Web.UI.WebControls.SqlDataSource.Inserted>, und <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> quellcodeverwaltung für Ereignisse, übergeben Informationen über einen Database-Vorgang, nachdem sie durch die Daten ausgeführt werden. Diese Informationen umfassen die Anzahl der vom Vorgang betroffenen Zeilen die <xref:System.Data.Common.DbCommand> -Objekt, das die Datenquelle verwendet wird, zum Ausführen des Vorgangs sowie alle Informationen zur Ausnahme, die geführt haben. Durch das Hinzufügen eines Ereignishandlerdelegaten, behandeln die <xref:System.Web.UI.WebControls.SqlDataSource.Selected>, <xref:System.Web.UI.WebControls.SqlDataSource.Updated>, <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> oder <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> Ereignisse können Sie diese Daten überprüfen und verarbeiten Sie die zusätzlichen Post erforderlich sind.  
  
 Die <xref:System.Web.UI.WebControls.SqlDataSource> Steuerelement stellt viele Ereignisse, die Sie behandeln können, um mit der zugrunde liegenden Datenobjekte im Verlauf eines Datenvorgangs zu arbeiten. Die folgende Tabelle listet die Ereignisse und die zugehörigen <xref:System.EventArgs> und -Handler-Ereignisklassen, um eine bessere Übersicht über die verschiedenen Ereignisse erhalten, die den Lebenszyklus des Datenvorgangs mit entsprechen, den <xref:System.Web.UI.WebControls.SqlDataSource> Steuerelement.  
  
|event|EventArgs|EventHandler|  
|-----------|---------------|------------------|  
|<xref:System.Web.UI.WebControls.SqlDataSource.Selecting> Tritt auf, bevor die Daten abgerufen werden.|<xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs>|<xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler>|  
|<xref:System.Web.UI.WebControls.SqlDataSource.Inserting>, <xref:System.Web.UI.WebControls.SqlDataSource.Updating>, <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> auftreten, bevor eine INSERT-, Update- oder Delete-Vorgang wird ausgeführt.|<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>|<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventHandler>|  
|<xref:System.Web.UI.WebControls.SqlDataSource.Selected>, <xref:System.Web.UI.WebControls.SqlDataSource.Inserted>, <xref:System.Web.UI.WebControls.SqlDataSource.Updated>, <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> treten nach dem Abrufen von Daten, INSERT-, Update- oder delete-Vorgänge abgeschlossen ist.|<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler>|  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> Klasse untersuchen, den Rückgabewert und die Werte der Output-Parameter, die zurückgegeben werden, wenn Sie verwenden eine <xref:System.Web.UI.WebControls.SqlDataSource> -Steuerelement mit einer gespeicherten Prozedur zum Auffüllen einer <xref:System.Web.UI.WebControls.GridView> Steuerelement. Die gespeicherte Prozedur wählt Daten, die in angezeigt werden der <xref:System.Web.UI.WebControls.GridView>, aber auch andere Informationen an dem Aufrufer, z. B. ein Integer-Output-Parameter und Rückgabewert übergibt. Die Parameter, die die <xref:System.Web.UI.WebControls.SqlDataSource> verwendet für die gespeicherte Prozedur enthalten sind die <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> Sammlung und bestehen aus Parametern, die Informationen aus dem Webformular für die gespeicherte Prozedur übergeben sowie Parameter, die Übergabe von Informationen zurück an die Formular. Die <xref:System.Web.UI.WebControls.Parameter.Direction%2A> dieser Parameter-Eigenschaftensatz auf <xref:System.Data.ParameterDirection.Output> und <xref:System.Data.ParameterDirection.ReturnValue>.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/CS/sql21cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/VB/sql21vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler" />
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSource" />
    <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Selected" />
    <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Updated" />
    <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Inserted" />
    <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Deleted" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataSourceStatusEventArgs (System.Data.Common.DbCommand command, int affectedRows, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Common.DbCommand command, int32 affectedRows, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.#ctor(System.Data.Common.DbCommand,System.Int32,System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDataSourceStatusEventArgs(System::Data::Common::DbCommand ^ command, int affectedRows, Exception ^ exception);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.SqlDataSourceStatusEventArgs : System.Data.Common.DbCommand * int * Exception -&gt; System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" Usage="new System.Web.UI.WebControls.SqlDataSourceStatusEventArgs (command, affectedRows, exception)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="command" Type="System.Data.Common.DbCommand" />
        <Parameter Name="affectedRows" Type="System.Int32" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="command">Der <see cref="T:System.Data.Common.DbCommand" />, der die Datenbankabfrage darstellt, den Befehl oder die gespeicherte Prozedur darstellt, die der Datenbank vom <see cref="T:System.Web.UI.WebControls.SqlDataSource" />-Steuerelement übermittelt wird.</param>
        <param name="affectedRows">Die Anzahl der vom Datenbankvorgang betroffenen Zeilen, sofern anwendbar.</param>
        <param name="exception">Eine vom Datenbankvorgang ausgelöste <see cref="T:System.Exception" />, sofern anwendbar.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />-Klasse unter Verwendung der angegeben Ausgabeparameter und des angegeben Rückgabewerts sowie der Anzahl der vom Datenbankvorgang betroffenen Zeilen.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Command" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.AffectedRows" />
      </Docs>
    </Member>
    <Member MemberName="AffectedRows">
      <MemberSignature Language="C#" Value="public int AffectedRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AffectedRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.AffectedRows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AffectedRows As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AffectedRows { int get(); };" />
      <MemberSignature Language="F#" Value="member this.AffectedRows : int" Usage="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.AffectedRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der vom Datenbankvorgang betroffenen Zeilen ab.</summary>
        <value>Die Anzahl der vom Datenbankvorgang betroffenen Zeilen. Der Standardwert ist -1.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Alle Vorgänge werden die Anzahl der vom Vorgang betroffenen Zeilen zurückgeben. Die <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.AffectedRows%2A> Eigenschaft hat den gleichen Wert wie der Rückgabewert von der <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A>, <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A>, und <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> Methoden.  
  
 Wenn die <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> Methode wird aufgerufen, und die Datenquelle wird festgelegt, um <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> Modus, der Rückgabewert ist 0 in allen Fällen.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
      </Docs>
    </Member>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand Command { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand Command" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Command" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Command As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ Command { System::Data::Common::DbCommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Command : System.Data.Common.DbCommand" Usage="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Command" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den an die Datenbank übermittelten Datenbankbefehl ab.</summary>
        <value>Das <see cref="T:System.Data.Common.DbCommand" />-Objekt, das den an die Datenbank übermittelten Datenbankbefehl darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Können Sie behandeln die <xref:System.Web.UI.WebControls.SqlDataSource.Selected>, <xref:System.Web.UI.WebControls.SqlDataSource.Updated>, <xref:System.Web.UI.WebControls.SqlDataSource.Inserted>, oder <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> Ereignis zum Überprüfen und ändern die Eigenschaften der <xref:System.Data.Common.DbCommand> nach der Übergabe durch die <xref:System.Web.UI.WebControls.SqlDataSource> -Steuerelement in der Datenbank. Die <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Command%2A> Eigenschaft können Sie Werte in der alle Ausgabeparameter und Rückgabewerte zugreifen, nachdem der Datenbankvorgang, über ausgeführt wird die <xref:System.Data.Common.DbCommand.Parameters%2A> -Eigenschaft, als auch die <xref:System.Data.Common.DbCommand.CommandText%2A> -Eigenschaft, die die SQL-Abfrage darstellt, Befehl ein, oder der Namen der gespeicherten Prozedur, die an die Datenbank übermittelt wurde.  
  
 Alle Ausgabeparameter werden insbesondere aus Parametern, die eine <xref:System.Data.ParameterDirection.InputOutput> oder <xref:System.Data.ParameterDirection.Output> Wert für die <xref:System.Web.UI.WebControls.Parameter.Direction%2A> Eigenschaft der <xref:System.Web.UI.WebControls.Parameter> Objekt. Ein Rückgabewert ist aus einem Parameter, die eine <xref:System.Data.ParameterDirection.ReturnValue> Wert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie die Werte der Output-Parameter zu überprüfen, bei Verwendung einer <xref:System.Web.UI.WebControls.SqlDataSource> -Steuerelement mit einer gespeicherten Prozedur. Die <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> -Auflistung enthält die Parameter, die die <xref:System.Web.UI.WebControls.SqlDataSource> für die gespeicherte Prozedur verwendet, und besteht aus Parametern, die Informationen aus dem Webformular, für die gespeicherte Prozedur übergeben sowie Parameter, die Informationen an das Formular übergeben. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> Klasse.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/CS/sql21cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/VB/sql21vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Selected" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Updated" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Inserted" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Deleted" />
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wrapper für von der Datenbank während eines Datenvorgangs ausgelöste Ausnahmen ab.</summary>
        <value>Eine <see cref="T:System.Exception" />, die alle von der Datenbank in ihrer <see cref="P:System.Exception.InnerException" />-Eigenschaft ausgelösten Ausnahmen umschließt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Exception> -Eigenschaft stellt nicht die eigentliche vom Datenbankvorgang ausgelöste Ausnahme dar. Sie können auf zugreifen, die ausgelöste Ausnahme mit der <xref:System.Exception.InnerException%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Selected" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Updated" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Inserted" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Deleted" />
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.ExceptionHandled" />
      <MemberSignature Language="VB.NET" Value="Public Property ExceptionHandled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExceptionHandled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExceptionHandled : bool with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.ExceptionHandled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob eine von der Datenbank ausgelöste Ausnahme behandelt wurde, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn eine von der Datenbank ausgelöste Ausnahme behandelt wurde und nicht vom <see cref="T:System.Web.UI.WebControls.SqlDataSource" />-Steuerelement ausgelöst werden soll, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die Datenbank eine Ausnahme auslöst, die <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.ExceptionHandled%2A> -Eigenschaftensatz auf `false` und die Ausnahme umschlossen ist die <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Exception%2A> Eigenschaft. Bei Verwendung einer <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler>, sehen Sie sich die <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception%2A> -Eigenschaft und die Ausnahme behandeln. Wenn Sie die Ausnahme behandeln, legen Sie die <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.ExceptionHandled%2A> Eigenschaft `true` oder <xref:System.Web.UI.WebControls.SqlDataSource> Steuerelement wird eine Ausnahme ausgelöst.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Exception" />
      </Docs>
    </Member>
  </Members>
</Type>