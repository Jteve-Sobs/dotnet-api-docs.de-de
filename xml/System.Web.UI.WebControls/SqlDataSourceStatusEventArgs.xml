<Type Name="SqlDataSourceStatusEventArgs" FullName="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="64e5d00dda06754c0ce63079ef13a1fcb1fa0c7e" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86657581" /></Metadata><TypeSignature Language="C#" Value="public class SqlDataSourceStatusEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlDataSourceStatusEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlDataSourceStatusEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlDataSourceStatusEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type SqlDataSourceStatusEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt Daten für ein Ereignis bereit, das vom <see cref="T:System.Web.UI.WebControls.SqlDataSource" />-Steuerelement nach Abschluss einer Datenoperation ausgelöst wird.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> -Klasse wird in den <xref:System.Web.UI.WebControls.SqlDataSource.Selected> <xref:System.Web.UI.WebControls.SqlDataSource.Updated> Ereignissen,, und verwendet, <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> um Informationen zu einem Daten Bank Vorgang zu übergeben, nachdem er vom Datenquellen-Steuerelement ausgeführt wurde. Zu diesen Informationen zählen die Anzahl der vom Vorgang betroffenen Zeilen, das <xref:System.Data.Common.DbCommand> Objekt, das die Datenquelle zum Ausführen des Vorgangs verwendet hat, und alle Ausnahme Informationen, die sich ergeben haben. Indem Sie einen Ereignishandlerdelegaten hinzufügen, um die <xref:System.Web.UI.WebControls.SqlDataSource.Selected> Ereignisse, oder zu behandeln <xref:System.Web.UI.WebControls.SqlDataSource.Updated> <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> , können Sie diese Daten untersuchen und alle zusätzlichen nach verarbeiteten Verarbeitungsschritte ausführen.  
  
 Das-Steuerelement macht <xref:System.Web.UI.WebControls.SqlDataSource> viele Ereignisse verfügbar, die Sie behandeln können, um während eines Daten Vorgangs mit den zugrunde liegenden Datenobjekten zu arbeiten. In der folgenden Tabelle werden die-Ereignisse und zugeordneten <xref:System.EventArgs> -und-Ereignishandlerklassen aufgelistet, um Sie besser zu den verschiedenen Ereignissen zu führen, die dem Lebenszyklus eines Daten Vorgangs mithilfe des-Steuer Elements entsprechen <xref:System.Web.UI.WebControls.SqlDataSource> .  
  
|Ereignis|EventArgs|EventHandler|  
|-----------|---------------|------------------|  
|<xref:System.Web.UI.WebControls.SqlDataSource.Selecting> Tritt ein, bevor die Daten abgerufen werden.|<xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs>|<xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler>|  
|<xref:System.Web.UI.WebControls.SqlDataSource.Inserting>, <xref:System.Web.UI.WebControls.SqlDataSource.Updating> , <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> treten vor einem INSERT-, Update-oder DELETE-Vorgang auf.|<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>|<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventHandler>|  
|<xref:System.Web.UI.WebControls.SqlDataSource.Selected>, <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> , <xref:System.Web.UI.WebControls.SqlDataSource.Updated> , <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> treten nach Abschluss der Datenabruf-, INSERT-, Update-oder DELETE-Vorgänge auf.|<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler>|  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> -Klasse verwendet wird, um den Rückgabewert und Werte von Ausgabeparametern zu untersuchen, die zurückgegeben werden, wenn ein- <xref:System.Web.UI.WebControls.SqlDataSource> Steuerelement mit einer gespeicherten Prozedur zum Auffüllen eines Steuer Elements verwendet wird <xref:System.Web.UI.WebControls.GridView> . Die gespeicherte Prozedur wählt Daten aus, die in der angezeigt <xref:System.Web.UI.WebControls.GridView> werden, übergibt aber auch andere Informationen an den Aufrufer, z. b. einen ganzzahligen Ausgabeparameter und einen Rückgabewert. Die Parameter, die der <xref:System.Web.UI.WebControls.SqlDataSource> für die gespeicherte Prozedur verwendet, sind in der Auflistung enthalten <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> und bestehen aus Parametern, die Informationen aus dem Webformular an die gespeicherte Prozedur sowie an Parameter übergeben, die Informationen an das Formular zurückgeben. Die <xref:System.Web.UI.WebControls.Parameter.Direction%2A> -Eigenschaft dieser Parameter ist auf und festgelegt <xref:System.Data.ParameterDirection.Output> <xref:System.Data.ParameterDirection.ReturnValue> .  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/CS/sql21cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/VB/sql21vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler" />
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSource" />
    <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Selected" />
    <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Updated" />
    <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Inserted" />
    <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Deleted" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataSourceStatusEventArgs (System.Data.Common.DbCommand command, int affectedRows, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Common.DbCommand command, int32 affectedRows, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.#ctor(System.Data.Common.DbCommand,System.Int32,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (command As DbCommand, affectedRows As Integer, exception As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDataSourceStatusEventArgs(System::Data::Common::DbCommand ^ command, int affectedRows, Exception ^ exception);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.SqlDataSourceStatusEventArgs : System.Data.Common.DbCommand * int * Exception -&gt; System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" Usage="new System.Web.UI.WebControls.SqlDataSourceStatusEventArgs (command, affectedRows, exception)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="command" Type="System.Data.Common.DbCommand" />
        <Parameter Name="affectedRows" Type="System.Int32" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="command">Der <see cref="T:System.Data.Common.DbCommand" />, der die Datenbankabfrage darstellt, den Befehl oder die gespeicherte Prozedur darstellt, die der Datenbank vom <see cref="T:System.Web.UI.WebControls.SqlDataSource" />-Steuerelement übermittelt wird.</param>
        <param name="affectedRows">Die Anzahl der vom Datenbankvorgang betroffenen Zeilen, sofern anwendbar.</param>
        <param name="exception">Eine vom Datenbankvorgang ausgelöste <see cref="T:System.Exception" />, sofern anwendbar.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />-Klasse unter Verwendung der angegeben Ausgabeparameter und des angegeben Rückgabewerts sowie der Anzahl der vom Datenbankvorgang betroffenen Zeilen.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Command" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.AffectedRows" />
      </Docs>
    </Member>
    <Member MemberName="AffectedRows">
      <MemberSignature Language="C#" Value="public int AffectedRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AffectedRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.AffectedRows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AffectedRows As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AffectedRows { int get(); };" />
      <MemberSignature Language="F#" Value="member this.AffectedRows : int" Usage="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.AffectedRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der vom Datenbankvorgang betroffenen Zeilen ab.</summary>
        <value>Die Anzahl der vom Datenbankvorgang betroffenen Zeilen. Der Standardwert ist -1.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Alle Vorgänge geben die Anzahl der vom Vorgang betroffenen Zeilen zurück. Die <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.AffectedRows%2A> -Eigenschaft hat denselben Wert wie der Rückgabewert der <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> -Methode, der-Methode und der- <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> Methode.  
  
 Wenn die <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> -Methode aufgerufen wird und die Datenquelle auf den-Modus festgelegt ist <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> , ist der Rückgabewert in allen Fällen 0.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
      </Docs>
    </Member>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand Command { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand Command" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Command" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Command As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ Command { System::Data::Common::DbCommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Command : System.Data.Common.DbCommand" Usage="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Command" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den an die Datenbank übermittelten Datenbankbefehl ab.</summary>
        <value>Das <see cref="T:System.Data.Common.DbCommand" />-Objekt, das den an die Datenbank übermittelten Datenbankbefehl darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können das-Ereignis, das-Ereignis oder das-Ereignis behandeln, <xref:System.Web.UI.WebControls.SqlDataSource.Selected> <xref:System.Web.UI.WebControls.SqlDataSource.Updated> <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> um die Eigenschaften der zu überprüfen und zu bearbeiten, <xref:System.Data.Common.DbCommand> nachdem Sie vom- <xref:System.Web.UI.WebControls.SqlDataSource> Steuerelement an die Datenbank gesendet wurde. Die- <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Command%2A> Eigenschaft ermöglicht es Ihnen, auf Rückgabewerte und Werte in beliebigen Ausgabeparametern zuzugreifen, nachdem der Daten Bank Vorgang über seine-Eigenschaft ausgeführt wurde <xref:System.Data.Common.DbCommand.Parameters%2A> , sowie die- <xref:System.Data.Common.DbCommand.CommandText%2A> Eigenschaft, die die SQL-Abfrage, den Befehl oder den Namen der gespeicherten Prozedur darstellt, die an die Datenbank übermittelt wurde.  
  
 Alle Ausgabeparameter stammen speziell aus Parametern, die einen-  <xref:System.Data.ParameterDirection.InputOutput> Wert oder einen- <xref:System.Data.ParameterDirection.Output> Wert für die- <xref:System.Web.UI.WebControls.Parameter.Direction%2A> Eigenschaft des- <xref:System.Web.UI.WebControls.Parameter> Objekts aufweisen. Ein Rückgabewert ist von einem Parameter, der über einen <xref:System.Data.ParameterDirection.ReturnValue> Wert verfügt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die Werte von Ausgabeparametern untersucht werden, wenn ein- <xref:System.Web.UI.WebControls.SqlDataSource> Steuerelement mit einer gespeicherten Prozedur verwendet wird. Die <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> -Auflistung enthält die Parameter, die der <xref:System.Web.UI.WebControls.SqlDataSource> für die gespeicherte Prozedur verwendet, und besteht aus Parametern, die Informationen aus dem Webformular an die gespeicherte Prozedur sowie an Parameter übergeben, die Informationen an das Formular zurückgeben. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die-Klasse bereitgestellt wird <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> .  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/CS/sql21cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/VB/sql21vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Selected" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Updated" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Inserted" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Deleted" />
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wrapper für von der Datenbank während eines Datenvorgangs ausgelöste Ausnahmen ab.</summary>
        <value>Eine <see cref="T:System.Exception" />, die alle von der Datenbank in ihrer <see cref="P:System.Exception.InnerException" />-Eigenschaft ausgelösten Ausnahmen umschließt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die- <xref:System.Exception> Eigenschaft stellt nicht die tatsächliche Ausnahme dar, die vom Daten Bank Vorgang ausgelöst wird. Mithilfe der-Eigenschaft können Sie auf die ausgelöste Ausnahme zugreifen <xref:System.Exception.InnerException%2A> .  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Selected" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Updated" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Inserted" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Deleted" />
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.ExceptionHandled" />
      <MemberSignature Language="VB.NET" Value="Public Property ExceptionHandled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExceptionHandled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExceptionHandled : bool with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.ExceptionHandled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob eine von der Datenbank ausgelöste Ausnahme behandelt wurde, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn eine von der Datenbank ausgelöste Ausnahme behandelt wurde und nicht vom <see cref="T:System.Web.UI.WebControls.SqlDataSource" />-Steuerelement ausgelöst werden soll, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die Datenbank eine Ausnahme auslöst, <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.ExceptionHandled%2A> wird die-Eigenschaft auf festgelegt, `false` und die Ausnahme wird von der-Eigenschaft umschließt <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Exception%2A> . Wenn Sie verwenden <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler> , können Sie die <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception%2A> -Eigenschaft überprüfen und die Ausnahme behandeln. Wenn Sie die Ausnahme behandeln, legen Sie die- <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.ExceptionHandled%2A> Eigenschaft auf fest, `true` oder das-Steuerelement löst <xref:System.Web.UI.WebControls.SqlDataSource> eine Ausnahme aus.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Exception" />
      </Docs>
    </Member>
  </Members>
</Type>
