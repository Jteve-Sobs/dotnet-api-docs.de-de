<Type Name="RangeValidator" FullName="System.Web.UI.WebControls.RangeValidator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9c39caf143815d7107b87f79988c84746444f81a" /><Meta Name="ms.sourcegitcommit" Value="a8ff98b48bda124cfcb2605f5da9b21bc6dcd791" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="02/14/2020" /><Meta Name="ms.locfileid" Value="77246695" /></Metadata><TypeSignature Language="C#" Value="public class RangeValidator : System.Web.UI.WebControls.BaseCompareValidator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RangeValidator extends System.Web.UI.WebControls.BaseCompareValidator" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.RangeValidator" />
  <TypeSignature Language="VB.NET" Value="Public Class RangeValidator&#xA;Inherits BaseCompareValidator" />
  <TypeSignature Language="C++ CLI" Value="public ref class RangeValidator : System::Web::UI::WebControls::BaseCompareValidator" />
  <TypeSignature Language="F#" Value="type RangeValidator = class&#xA;    inherit BaseCompareValidator" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.BaseCompareValidator</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.ToolboxData("&lt;{0}:RangeValidator runat="server" ErrorMessage="RangeValidator"&gt;&lt;/{0}:RangeValidator&gt;")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.Web.UI.ToolboxData("&lt;{0}:RangeValidator runat=server ErrorMessage="RangeValidator"&gt;&lt;/{0}:RangeValidator&gt;")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Überprüft, ob der Wert eines Eingabesteuerelements innerhalb eines angegebenen Wertebereichs liegt.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 Das <xref:System.Web.UI.WebControls.RangeValidator> Steuerelement testet, ob der Wert eines Eingabe Steuer Elements innerhalb eines angegebenen Bereichs liegt.

 Das <xref:System.Web.UI.WebControls.RangeValidator>-Steuerelement verwendet vier Schlüsseleigenschaften, um seine Validierung auszuführen. Die <xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A>-Eigenschaft enthält das zu validierende Eingabe Steuerelement. Die Eigenschaften <xref:System.Web.UI.WebControls.RangeValidator.MinimumValue%2A> und <xref:System.Web.UI.WebControls.RangeValidator.MaximumValue%2A> geben den minimalen und maximalen Wert des gültigen Bereichs an.

 Die <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=nameWithType>-Eigenschaft wird verwendet, um den Datentyp der zu vergleichenden Werte anzugeben. Die zu vergleichenden Werte werden in diesen Datentyp konvertiert, bevor der Überprüfungs Vorgang durchgeführt wird.

> [!NOTE]
>  Wenn die <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A>-Eigenschaft auf <xref:System.Web.UI.WebControls.ValidationDataType.Date> festgelegt ist und der aktuelle Kalendertyp nicht Gregorianisch ist, führt das Validierungs Steuerelement nur eine serverseitige Validierung aus. Das Validierungs Steuerelement-Client Skript unterstützt nur gregorianische Kalender.

 In der folgenden Tabelle werden die verschiedenen Datentypen aufgelistet, die verglichen werden können.

|Datentyp|BESCHREIBUNG|
|---------------|-----------------|
|`String`|Ein Zeichenfolgen-Datentyp.|
|`Integer`|Ein ganzzahliger 32-Bit-Datentyp mit Vorzeichen.|
|`Double`|Ein Datentyp für Gleit Komma Zahlen mit doppelter Genauigkeit.|
|`Date`|Ein Date-Datentyp.|
|`Currency`|Ein Decimal-Datentyp, der Währungssymbole enthalten kann.|

> [!NOTE]
>  Die Überprüfung ist erfolgreich, wenn das Eingabe Steuerelement leer ist. Verwenden Sie ein <xref:System.Web.UI.WebControls.RequiredFieldValidator>-Steuerelement, um das Eingabe Steuerelement als Pflichtfeld zu verwenden.

> [!NOTE]
>  Das <xref:System.Web.UI.WebControls.RangeValidator>-Steuerelement löst eine Ausnahme aus, wenn der von der <xref:System.Web.UI.WebControls.RangeValidator.MaximumValue%2A>-oder <xref:System.Web.UI.WebControls.RangeValidator.MinimumValue%2A>-Eigenschaft angegebene Wert nicht in den angegebenen <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=nameWithType>konvertiert werden kann.

> [!NOTE]
>  Wenn Sie das <xref:System.Web.UI.WebControls.RangeValidator>-Steuerelement in einem <xref:System.Web.UI.UpdatePanel>-Steuerelement verwenden, stellen Sie sicher, dass sich das Validierungs Steuerelement und das Steuerelement, dem es zugeordnet ist, im gleichen Bereich befinden. Weitere Informationen zur Verwendung des <xref:System.Web.UI.UpdatePanel>-Steuer Elements für Teil Aktualisierungen von Seiten finden Sie unter [Übersicht über das Teil Rendering von Seiten](https://docs.microsoft.com/previous-versions/aspnet/bb386573(v=vs.100)).

 Weitere Informationen zu Validierungs Steuerelementen finden Sie unter <xref:System.Web.UI.WebControls.BaseValidator>.

## <a name="accessibility"></a>Barrierefreiheit
 Weitere Informationen zur Verwendung dieses Steuerelement so konfigurieren, dass sie Markup generiert, das Accessibility Standards entspricht, finden Sie unter [Barrierefreiheit in Visual Studio und ASP.NET](https://docs.microsoft.com/previous-versions/ms228004(v=vs.140)) und [ASP.NET-Steuerelemente und Barrierefreiheit](https://docs.microsoft.com/previous-versions/ms227996(v=vs.140)).



## Examples
 Im folgenden Beispiel wird veranschaulicht, wie ein <xref:System.Web.UI.WebControls.RangeValidator>-Steuerelement auf der Webseite erstellt wird, um zu bestimmen, ob der in ein Eingabe Steuerelement eingegebene Wert innerhalb des Vergleichs Bereichs liegt.

> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).

 [!code-aspx-csharp[RangeValidator#1](~/samples/snippets/csharp/VS_Snippets_WebNet/RangeValidator/CS/rangevalidatorcs.aspx#1)]
 [!code-aspx-vb[RangeValidator#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/RangeValidator/VB/rangevalidatorvb.aspx#1)]

 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.WebControls.BaseValidator.ControlToValidate" />
    <altmember cref="P:System.Web.UI.WebControls.RangeValidator.MaximumValue" />
    <altmember cref="P:System.Web.UI.WebControls.RangeValidator.MinimumValue" />
    <altmember cref="P:System.Web.UI.WebControls.BaseCompareValidator.Type" />
    <altmember cref="T:System.Web.UI.WebControls.RequiredFieldValidator" />
    <altmember cref="T:System.Web.UI.WebControls.BaseValidator" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RangeValidator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.RangeValidator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RangeValidator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der Klasse <see cref="T:System.Web.UI.WebControls.RangeValidator" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.RangeValidator.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.AddAttributesToRender : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="rangeValidator.AddAttributesToRender writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Ein <see cref="T:System.Web.UI.HtmlTextWriter" />, der den Ausgabestream für das Rendering von HTML-Inhalten auf dem Client darstellt.</param>
        <summary>Fügt dem angegebenen <see cref="T:System.Web.UI.HtmlTextWriter" />-Objekt die für das Steuerelement zu rendernden HTML-Attribute und -Stile hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie die <xref:System.Web.UI.WebControls.RangeValidator.AddAttributesToRender%2A>-Methode in einem benutzerdefinierten Server Steuerelement überschreiben, sodass der <xref:System.Web.UI.WebControls.RangeValidator> Text immer fett formatiert angezeigt wird.

> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).

 [!code-aspx-csharp[CustomRangeValidatorAddAttributesToRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomRangeValidatorAddAttributesToRender/CS/custom_rangevalidator_addattributestorendercs.aspx#1)]
 [!code-aspx-vb[CustomRangeValidatorAddAttributesToRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomRangeValidatorAddAttributesToRender/VB/custom_rangevalidator_addattributestorendervb.aspx#1)]
[!code-csharp[CustomRangeValidatorAddAttributesToRender#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomRangeValidatorAddAttributesToRender/CS/custom_rangevalidator_addattributestorender.cs#2)]
[!code-vb[CustomRangeValidatorAddAttributesToRender#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomRangeValidatorAddAttributesToRender/VB/custom_rangevalidator_addattributestorender.vb#2)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlPropertiesValid">
      <MemberSignature Language="C#" Value="protected override bool ControlPropertiesValid ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ControlPropertiesValid() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.RangeValidator.ControlPropertiesValid" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ControlPropertiesValid () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ControlPropertiesValid();" />
      <MemberSignature Language="F#" Value="override this.ControlPropertiesValid : unit -&gt; bool" Usage="rangeValidator.ControlPropertiesValid " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Dies ist eine Überprüfung von Eigenschaften, bei der Entwicklerfehler bestimmt werden.</summary>
        <returns><see langword="true" />, wenn die Steuerelementeigenschaften gültig sind, anderenfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluateIsValid">
      <MemberSignature Language="C#" Value="protected override bool EvaluateIsValid ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool EvaluateIsValid() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.RangeValidator.EvaluateIsValid" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function EvaluateIsValid () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool EvaluateIsValid();" />
      <MemberSignature Language="F#" Value="override this.EvaluateIsValid : unit -&gt; bool" Usage="rangeValidator.EvaluateIsValid " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Bestimmt, ob der Inhalt des Eingabesteuerelements gültig ist.</summary>
        <returns><see langword="true" />, wenn das Steuerelement gültig ist, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.RangeValidator.EvaluateIsValid%2A>-Methode in einem benutzerdefinierten Server Steuerelement überschrieben wird, damit immer überprüft wird, ob der Wert vorhanden ist und innerhalb der maximalen und minimalen Werte liegt, die für die <xref:System.Web.UI.WebControls.RangeValidator>angegeben werden.

 [!code-aspx-csharp[CustomRangeValidatorEvaluateIsValid#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomRangeValidatorEvaluateIsValid/CS/custom_rangevalidator_evaluateisvalidcs.aspx#1)]
 [!code-aspx-vb[CustomRangeValidatorEvaluateIsValid#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomRangeValidatorEvaluateIsValid/VB/custom_rangevalidator_evaluateisvalidvb.aspx#1)]
[!code-csharp[CustomRangeValidatorEvaluateIsValid#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomRangeValidatorEvaluateIsValid/CS/custom_rangevalidator_evaluateisvalid.cs#2)]
[!code-vb[CustomRangeValidatorEvaluateIsValid#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomRangeValidatorEvaluateIsValid/VB/custom_rangevalidator_evaluateisvalid.vb#2)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumValue">
      <MemberSignature Language="C#" Value="public string MaximumValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MaximumValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.RangeValidator.MaximumValue" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MaximumValue { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumValue : string with get, set" Usage="System.Web.UI.WebControls.RangeValidator.MaximumValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Höchstwert des Validierungsbereichs ab oder legt diesen fest.</summary>
        <value>Der Höchstwert des Validierungsbereichs. Standardwert: <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Verwenden Sie die <xref:System.Web.UI.WebControls.RangeValidator.MaximumValue%2A>-Eigenschaft, um den maximalen Wert für den Gültigkeitsbereich anzugeben. Wenn der von dieser Eigenschaft angegebene Wert nicht in den Datentyp konvertiert werden kann, der durch die <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=nameWithType>-Eigenschaft angegeben ist, wird eine Ausnahme ausgelöst.

> [!NOTE]
>  Wenn Sie `ValidationDataType.Date` für die Eigenschaft <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=nameWithType> angeben, ohne die Kultur für die Anwendung Programm gesteuert festzulegen, sollten Sie für die Eigenschaften <xref:System.Web.UI.WebControls.RangeValidator.MaximumValue%2A> und <xref:System.Web.UI.WebControls.RangeValidator.MinimumValue%2A> ein Kultur neutrales Format wie yyyy/mm/dd verwenden. Andernfalls wird das Datum möglicherweise nicht ordnungsgemäß interpretiert.

 Diese Eigenschaft kann nicht durch Designs oder Stylesheetdesigns festgelegt werden. Weitere Informationen finden Sie unter <xref:System.Web.UI.ThemeableAttribute> und [ASP.NET-Designs und Skins](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100)).



## Examples
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.RangeValidator.MaximumValue%2A>-Eigenschaft verwendet wird, um den maximalen Wert für den Gültigkeitsbereich anzugeben.

> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).

 [!code-aspx-csharp[RangeValidator#1](~/samples/snippets/csharp/VS_Snippets_WebNet/RangeValidator/CS/rangevalidatorcs.aspx#1)]
 [!code-aspx-vb[RangeValidator#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/RangeValidator/VB/rangevalidatorvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.RangeValidator.MinimumValue" />
        <altmember cref="P:System.Web.UI.WebControls.BaseCompareValidator.Type" />
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.IsValid" />
        <altmember cref="F:System.String.Empty" />
      </Docs>
    </Member>
    <Member MemberName="MinimumValue">
      <MemberSignature Language="C#" Value="public string MinimumValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MinimumValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.RangeValidator.MinimumValue" />
      <MemberSignature Language="VB.NET" Value="Public Property MinimumValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MinimumValue { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MinimumValue : string with get, set" Usage="System.Web.UI.WebControls.RangeValidator.MinimumValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Mindestwert des Validierungsbereichs ab oder legt diesen fest.</summary>
        <value>Der Mindestwert des Validierungsbereichs. Standardwert: <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Verwenden Sie die <xref:System.Web.UI.WebControls.RangeValidator.MinimumValue%2A>-Eigenschaft, um den minimalen Wert für den Gültigkeitsbereich anzugeben. Wenn der von dieser Eigenschaft angegebene Wert nicht in den Datentyp konvertiert werden kann, der durch die <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=nameWithType>-Eigenschaft angegeben ist, wird eine Ausnahme ausgelöst.

> [!NOTE]
>  Wenn Sie `ValidationDataType.Date` für die Eigenschaft <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=nameWithType> angeben, ohne die Kultur für die Anwendung Programm gesteuert festzulegen, sollten Sie für die Eigenschaften <xref:System.Web.UI.WebControls.RangeValidator.MaximumValue%2A> und <xref:System.Web.UI.WebControls.RangeValidator.MinimumValue%2A> ein Kultur neutrales Format wie yyyy/mm/dd verwenden. Andernfalls wird das Datum möglicherweise nicht ordnungsgemäß interpretiert.

 Diese Eigenschaft kann nicht durch Designs oder Stylesheetdesigns festgelegt werden. Weitere Informationen finden Sie unter <xref:System.Web.UI.ThemeableAttribute> und [ASP.NET-Designs und Skins](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100)).



## Examples
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.RangeValidator.MinimumValue%2A>-Eigenschaft verwendet wird, um den minimalen Wert für den Gültigkeitsbereich anzugeben.

> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).

 [!code-aspx-csharp[RangeValidator#1](~/samples/snippets/csharp/VS_Snippets_WebNet/RangeValidator/CS/rangevalidatorcs.aspx#1)]
 [!code-aspx-vb[RangeValidator#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/RangeValidator/VB/rangevalidatorvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.RangeValidator.MaximumValue" />
        <altmember cref="P:System.Web.UI.WebControls.BaseCompareValidator.Type" />
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.IsValid" />
        <altmember cref="F:System.String.Empty" />
      </Docs>
    </Member>
  </Members>
</Type>
