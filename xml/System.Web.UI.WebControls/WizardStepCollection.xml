<Type Name="WizardStepCollection" FullName="System.Web.UI.WebControls.WizardStepCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="66e216345903dd38c778766ae401146190086937" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36578189" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class WizardStepCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WizardStepCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WizardStepCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WizardStepCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public ref class WizardStepCollection sealed : System::Collections::IList" />
  <TypeSignature Language="F#" Value="type WizardStepCollection = class&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Stellt eine Auflistung von Objekten, die von <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> abgeleitet sind, in einem Steuerelement dar, das als Assistent fungiert. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WizardStepCollection> Klasse dient zum Speichern und verwalten eine Auflistung von <xref:System.Web.UI.WebControls.WizardStepBase>-abgeleiteten Objekte in einem Steuerelement, das als Assistent, wie z. B. fungiert die <xref:System.Web.UI.WebControls.CreateUserWizard> Steuerelement oder <xref:System.Web.UI.WebControls.Wizard> Steuerelement. Z. B. die <xref:System.Web.UI.WebControls.Wizard> steuern verwendet der <xref:System.Web.UI.WebControls.WizardStepCollection> -Klasse für die <xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A> Eigenschaft.  
  
 Es gibt mehrere Möglichkeiten, die Sie erreichen die <xref:System.Web.UI.WebControls.WizardStepBase>-abgeleiteten Objekte in der <xref:System.Web.UI.WebControls.WizardStepCollection>:  
  
-   Verwenden der <xref:System.Web.UI.WebControls.WizardStepCollection.Item%2A> Eigenschaft den direkten Zugriff auf eine <xref:System.Web.UI.WebControls.WizardStepBase>-abgeleitetes Objekt am angegebenen nullbasierten Index.  
  
-   Verwenden der <xref:System.Web.UI.WebControls.WizardStepCollection.GetEnumerator%2A> Methode zum Erstellen eines Enumerators, der zum Durchlaufen der Auflistung verwendet werden kann.  
  
-   Verwenden der <xref:System.Web.UI.WebControls.WizardStepCollection.CopyTo%2A> Methode zum Kopieren der Inhalte der <xref:System.Web.UI.WebControls.WizardStepCollection> Auflistung in ein <xref:System.Array> Objekt.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie zum Auffüllen der <xref:System.Web.UI.WebControls.WizardStepCollection> Auflistung verwenden deklarativen Syntax.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardStepCollectionDeclare#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepCollectionDeclare/CS/wizardstepcollectiondeclarecs.aspx#3)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardStepCollectionDeclare#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepCollectionDeclare/VB/wizardstepcollectiondeclarevb.aspx#3)]  
  
 Im folgenden Beispiel wird veranschaulicht, wie Programmgesteuertes Auffüllen einer <xref:System.Web.UI.WebControls.WizardStepCollection> Auflistung.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardStepCollection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepCollection/CS/wizardstepcollectioncs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardStepCollection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepCollection/VB/wizardstepcollectionvb.aspx#1)]  
  
 Im folgenden finden die CodeBehind-Datei für die Webseite im vorherigen Beispiel.  
  
 [!code-csharp[System.Web.UI.WebControls.WizardStepCollection#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepCollection/CS/wizardstepcollection.cs#2)]
 [!code-vb[System.Web.UI.WebControls.WizardStepCollection#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepCollection/VB/wizardstepcollection.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WizardStepBase" />
    <altmember cref="T:System.Web.UI.WebControls.WizardStep" />
    <altmember cref="T:System.Web.UI.WebControls.Wizard" />
    <altmember cref="T:System.Web.UI.WebControls.CreateUserWizard" />
    <altmember cref="T:System.Web.UI.WebControls.Login" />
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Web.UI.WebControls.WizardStepBase wizardStep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Web.UI.WebControls.WizardStepBase wizardStep) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepCollection.Add(System.Web.UI.WebControls.WizardStepBase)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (wizardStep As WizardStepBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Web::UI::WebControls::WizardStepBase ^ wizardStep);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Web.UI.WebControls.WizardStepBase -&gt; unit" Usage="wizardStepCollection.Add wizardStep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wizardStep" Type="System.Web.UI.WebControls.WizardStepBase" />
      </Parameters>
      <Docs>
        <param name="wizardStep">Das von <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> abgeleitete Objekt, das an die <see cref="T:System.Web.UI.WebControls.WizardStepCollection" />-Auflistung angefügt werden soll.</param>
        <summary>Fügt das angegebene, von <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> abgeleitete Objekt an das Ende der Auflistung an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WizardStepCollection.Add%2A> Methode fügt die <xref:System.Web.UI.WebControls.WizardStepBase>-abgeleitetes Objekt an das Ende der <xref:System.Web.UI.WebControls.WizardStepCollection> Auflistung. Hinzufügen einer <xref:System.Web.UI.WebControls.WizardStepBase>-abgeleitete Objekt der Auflistung an einer bestimmten Indexposition verwenden die <xref:System.Web.UI.WebControls.WizardStepCollection.AddAt%2A> Methode.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht das programmgesteuert erstellen eine <xref:System.Web.UI.WebControls.Wizard> Steuerelement und mithilfe der <xref:System.Web.UI.WebControls.WizardStepCollection.Add%2A> -Methode zum Hinzufügen <xref:System.Web.UI.WebControls.WizardStepBase>-abgeleitet <xref:System.Web.UI.WebControls.WizardStep> Datenbankobjekte in der <xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A> Auflistung. Beachten Sie, dass im Beispiel die <xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A> Eigenschaft von der <xref:System.Web.UI.WebControls.Wizard> -Steuerelement ist eine Instanz von der <xref:System.Web.UI.WebControls.WizardStepCollection> Klasse.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardSteps#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardSteps/CS/wizardstepscs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardSteps#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardSteps/VB/wizardstepsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Das von <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> abgeleitete und übergebene Objekt ist <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.WizardStepBase" />
        <altmember cref="T:System.Web.UI.WebControls.WizardStep" />
        <altmember cref="M:System.Web.UI.WebControls.WizardStepCollection.AddAt(System.Int32,System.Web.UI.WebControls.WizardStepBase)" />
      </Docs>
    </Member>
    <Member MemberName="AddAt">
      <MemberSignature Language="C#" Value="public void AddAt (int index, System.Web.UI.WebControls.WizardStepBase wizardStep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAt(int32 index, class System.Web.UI.WebControls.WizardStepBase wizardStep) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepCollection.AddAt(System.Int32,System.Web.UI.WebControls.WizardStepBase)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAt (index As Integer, wizardStep As WizardStepBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAt(int index, System::Web::UI::WebControls::WizardStepBase ^ wizardStep);" />
      <MemberSignature Language="F#" Value="member this.AddAt : int * System.Web.UI.WebControls.WizardStepBase -&gt; unit" Usage="wizardStepCollection.AddAt (index, wizardStep)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="wizardStep" Type="System.Web.UI.WebControls.WizardStepBase" />
      </Parameters>
      <Docs>
        <param name="index">Die Indexposition, an der das von <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> abgeleitete Objekt hinzugefügt wird.</param>
        <param name="wizardStep">Das von <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> abgeleitete Objekt, das an die <see cref="T:System.Web.UI.WebControls.WizardStepCollection" />-Auflistung angefügt werden soll.</param>
        <summary>Fügt das angegebene, von <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> abgeleitete Objekt der Auflistung an der angegebenen Indexposition hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WizardStepCollection.AddAt%2A> Methode fügt die <xref:System.Web.UI.WebControls.WizardStepBase>-abgeleitetes Objekt der Auflistung an der angegebenen Indexposition.  
  
 Hinzufügen einer <xref:System.Web.UI.WebControls.WizardStepBase>-abgeleitetes Objekt an das Ende der <xref:System.Web.UI.WebControls.WizardStepCollection> Sammlung, Nutzung der <xref:System.Web.UI.WebControls.WizardStepCollection.Add%2A> Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Das von <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> abgeleitete und übergebene Objekt ist <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.WizardStepBase" />
        <altmember cref="T:System.Web.UI.WebControls.WizardStep" />
        <altmember cref="M:System.Web.UI.WebControls.WizardStepCollection.Add(System.Web.UI.WebControls.WizardStepBase)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="wizardStepCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Entfernt sämtliche von <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> abgeleiteten Objekte aus der Auflistung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.WizardStepCollection.Clear%2A> Methode, um alle Entfernen der <xref:System.Web.UI.WebControls.WizardStepBase>-abgeleiteten Objekte aus der <xref:System.Web.UI.WebControls.WizardStepCollection> Auflistung.  
  
> [!NOTE]
>  Nach der <xref:System.Web.UI.WebControls.WizardStepCollection.Clear%2A> Methode entfernt die <xref:System.Web.UI.WebControls.WizardStepBase>-abgeleiteten Objekte aus der Auflistung der <xref:System.Web.UI.WebControls.WizardStepCollection.Count%2A> Eigenschaft von der <xref:System.Web.UI.WebControls.WizardStepCollection> Auflistung hat den Wert 0 (null).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WizardStepBase" />
        <altmember cref="T:System.Web.UI.WebControls.WizardStep" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Web.UI.WebControls.WizardStepBase wizardStep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Web.UI.WebControls.WizardStepBase wizardStep) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepCollection.Contains(System.Web.UI.WebControls.WizardStepBase)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (wizardStep As WizardStepBase) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Web::UI::WebControls::WizardStepBase ^ wizardStep);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Web.UI.WebControls.WizardStepBase -&gt; bool" Usage="wizardStepCollection.Contains wizardStep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wizardStep" Type="System.Web.UI.WebControls.WizardStepBase" />
      </Parameters>
      <Docs>
        <param name="wizardStep">Das von <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> abgeleitete Objekt, das in der <see cref="T:System.Web.UI.WebControls.WizardStepCollection" />-Auflistung gesucht werden soll.</param>
        <summary>Ermittelt, ob die <see cref="T:System.Web.UI.WebControls.WizardStepCollection" />-Auflistung ein bestimmtes von <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> abgeleitetes Objekt enthält.</summary>
        <returns>
          <see langword="true" />, wenn das von <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> abgeleitete Objekt in der <see cref="T:System.Web.UI.WebControls.WizardStepCollection" />-Auflistung gefunden wurde, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.WizardStepCollection.Contains%2A> Methode, um zu bestimmen, ob eine <xref:System.Web.UI.WebControls.WizardStepBase>-abgeleitetes Objekt in der Auflistung enthalten ist. Diese Methode wird häufig verwendet, um das Vorhandensein einer <xref:System.Web.UI.WebControls.WizardStepBase>-abgeleitetes Objekt vor dem Ausführen einer Aufgabe, wie z. B. das Entfernen einer <xref:System.Web.UI.WebControls.WizardStepBase>-abgeleitetes Objekt aus der Auflistung.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="wizardStep" /> ist <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.WizardStepBase" />
        <altmember cref="T:System.Web.UI.WebControls.WizardStep" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Web.UI.WebControls.WizardStepBase[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Web.UI.WebControls.WizardStepBase[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepCollection.CopyTo(System.Web.UI.WebControls.WizardStepBase[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As WizardStepBase(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Web::UI::WebControls::WizardStepBase ^&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.Web.UI.WebControls.WizardStepBase[] * int -&gt; unit" Usage="wizardStepCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Web.UI.WebControls.WizardStepBase[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">Ein nullbasiertes Array aus <see cref="T:System.Web.UI.WebControls.WizardStepBase" />-Objekten, das die kopierten Elemente aus der Auflistung aufnimmt.</param>
        <param name="index">Die Position im Zielarray, bei der mit dem Empfang des kopierten Inhalts begonnen werden soll.</param>
        <summary>Kopiert alle Elemente aus einer <see cref="T:System.Web.UI.WebControls.WizardStepCollection" />-Auflistung in ein kompatibles eindimensionales Array aus <see cref="T:System.Web.UI.WebControls.WizardStepBase" />-Objekten, beginnend bei dem angegebenen Index im Zielarray.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.WizardStepCollection.CopyTo%2A> Methode, um den Inhalt der Auflistung in das angegebene nullbasierte Array kopieren. Elemente werden kopiert, beginnend am angegebenen Index des Zielarrays. Nachdem die Elemente in einem Array sind, können Sie Arraysyntax verwenden, den Zugriff auf die Elemente in der <xref:System.Web.UI.WebControls.WizardStepCollection> Auflistung.  
  
 Als Alternative können Sie auch die <xref:System.Web.UI.WebControls.WizardStepCollection.GetEnumerator%2A> Methode, um einen Enumerator zu erstellen, die Zugriff auf die Elemente in der Auflistung verwendet werden kann.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.WizardStepCollection.CopyTo%2A> Methode zum Kopieren der <xref:System.Web.UI.WebControls.WizardStepBase> Objekte aus der Auflistung in ein Array. Dann wird das Array durchlaufen, zum Anzeigen der <xref:System.Web.UI.Control.ID%2A> -Eigenschaft jedes <xref:System.Web.UI.WebControls.WizardStepBase>-abgeleitetes Objekt. Beachten Sie, dass im Beispiel die <xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A> Eigenschaft von der <xref:System.Web.UI.WebControls.Wizard> -Steuerelement ist eine Instanz von der <xref:System.Web.UI.WebControls.WizardStepCollection> Klasse.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardStepCollectionCopyTo#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepCollectionCopyTo/CS/wizardstepcollectioncopytocs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardStepCollectionCopyTo#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepCollectionCopyTo/VB/wizardstepcollectioncopytovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WizardStepBase" />
        <altmember cref="M:System.Web.UI.WebControls.WizardStepCollection.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Web.UI.WebControls.WizardStepCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der von <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> abgeleiteten Objekte in der <see cref="T:System.Web.UI.WebControls.Wizard" />-Auflistung des <see cref="T:System.Web.UI.WebControls.WizardStepCollection" />-Steuerelements ab.</summary>
        <value>Die Anzahl der von <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> abgeleiteten Objekte im <see cref="T:System.Web.UI.WebControls.Wizard" />-Steuerelement.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.WizardStepCollection.Count%2A> -Eigenschaft können Sie bestimmen die Anzahl der <xref:System.Web.UI.WebControls.WizardStepBase>-abgeleiteten Objekte in der <xref:System.Web.UI.WebControls.WizardStepCollection> Auflistung. Die <xref:System.Web.UI.WebControls.WizardStepCollection.Count%2A> Eigenschaft wird häufig verwendet, beim Durchlaufen des Auflistung zum Bestimmen der oberen Grenze.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WizardStepBase" />
        <altmember cref="T:System.Web.UI.WebControls.WizardStep" />
        <altmember cref="T:System.Web.UI.WebControls.Wizard" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="wizardStepCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt ein von <see cref="T:System.Collections.IEnumerator" /> implementiertes Objekt zurück, das zum Durchlaufen der von <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> abgeleiteten Objekte in der Auflistung verwendet werden kann.</summary>
        <returns>Ein von <see cref="T:System.Collections.IEnumerator" /> implementiertes Objekt, das alle von <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> abgeleiteten Objekte in der <see cref="T:System.Web.UI.WebControls.WizardStepCollection" />-Auflistung enthält.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.WebControls.WizardStepCollection.CopyTo(System.Web.UI.WebControls.WizardStepBase[],System.Int32)" />
        <altmember cref="T:System.Web.UI.WebControls.WizardStepBase" />
        <altmember cref="T:System.Web.UI.WebControls.WizardStep" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Web.UI.WebControls.WizardStepBase wizardStep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Web.UI.WebControls.WizardStepBase wizardStep) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepCollection.IndexOf(System.Web.UI.WebControls.WizardStepBase)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (wizardStep As WizardStepBase) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Web::UI::WebControls::WizardStepBase ^ wizardStep);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Web.UI.WebControls.WizardStepBase -&gt; int" Usage="wizardStepCollection.IndexOf wizardStep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wizardStep" Type="System.Web.UI.WebControls.WizardStepBase" />
      </Parameters>
      <Docs>
        <param name="wizardStep">Das von <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> abgeleitete Objekt, nach dem in der <see cref="T:System.Web.UI.WebControls.WizardStepCollection" />-Auflistung gesucht werden soll.</param>
        <summary>Bestimmt den Indexwert, der die Position des angegebenen, von <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> abgeleiteten Objekts der Auflistung darstellt.</summary>
        <returns>Falls gefunden, wird der nullbasierte Index des ersten Vorkommens des von <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> abgeleiteten Objekts innerhalb der aktuellen <see cref="T:System.Web.UI.WebControls.WizardStepCollection" />-Auflistung übergeben, andernfalls -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.WizardStepCollection.IndexOf%2A> Methode, um zu bestimmen, den Index des angegebenen <xref:System.Web.UI.WebControls.WizardStepBase>-abgeleitetes Objekt in der aktuellen <xref:System.Web.UI.WebControls.WizardStepCollection> Auflistung. Wenn die <xref:System.Web.UI.WebControls.WizardStepBase>-abgeleitete Objekt ist nicht in der Auflistung, die Methode gibt-1 zurück.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Das von <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> abgeleitete und übergebene Objekt ist <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.WizardStepBase" />
        <altmember cref="T:System.Web.UI.WebControls.WizardStep" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Web.UI.WebControls.WizardStepBase wizardStep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Web.UI.WebControls.WizardStepBase wizardStep) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepCollection.Insert(System.Int32,System.Web.UI.WebControls.WizardStepBase)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, wizardStep As WizardStepBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::Web::UI::WebControls::WizardStepBase ^ wizardStep);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * System.Web.UI.WebControls.WizardStepBase -&gt; unit" Usage="wizardStepCollection.Insert (index, wizardStep)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="wizardStep" Type="System.Web.UI.WebControls.WizardStepBase" />
      </Parameters>
      <Docs>
        <param name="index">Die Indexposition, an der das von <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> abgeleitete Objekt eingefügt wird.</param>
        <param name="wizardStep">Das von <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> abgeleitete Objekt, das der <see cref="T:System.Web.UI.WebControls.WizardStepCollection" />-Auflistung hinzugefügt werden soll.</param>
        <summary>Fügt das angegebene, von <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> abgeleitete Objekt in der Auflistung an der angegebenen Indexposition ein.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.WizardStepCollection.Insert%2A> Methode fügt die <xref:System.Web.UI.WebControls.WizardStepBase>-abgeleitetes Objekt der Auflistung an der angegebenen Indexposition.  
  
 Alternativ können Sie die <xref:System.Web.UI.WebControls.WizardStepCollection.AddAt%2A> -Methode zum Hinzufügen der <xref:System.Web.UI.WebControls.WizardStepBase>-abgeleitetes Objekt der Auflistung. Hinzufügen einer <xref:System.Web.UI.WebControls.WizardStepBase>-abgeleitetes Objekt an das Ende der <xref:System.Web.UI.WebControls.WizardStepCollection> Sammlung, Nutzung der <xref:System.Web.UI.WebControls.WizardStepCollection.Add%2A> Methode.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.WizardStepCollection.Insert%2A> Methode und die <xref:System.Web.UI.WebControls.WizardStepCollection.AddAt%2A> -Methode führen im Wesentlichen die gleiche Funktion. Wenn die <xref:System.Web.UI.WebControls.WizardStepCollection.Insert%2A> -Methode aufgerufen wird, übergibt diese einfach die `wizardStep` und `index` Parameter für die <xref:System.Web.UI.WebControls.WizardStepCollection.AddAt%2A> Methode.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht das programmgesteuert erstellen eine <xref:System.Web.UI.WebControls.Wizard> Steuerelement und Verwenden der <xref:System.Web.UI.WebControls.WizardStepCollection.Insert%2A> -Methode zum Hinzufügen <xref:System.Web.UI.WebControls.WizardStepBase>-abgeleitete Objekte, die <xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A> Auflistung. Beachten Sie, dass im Beispiel die <xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A> Eigenschaft von der <xref:System.Web.UI.WebControls.Wizard> -Steuerelement ist eine Instanz von der <xref:System.Web.UI.WebControls.WizardStepCollection> Klasse.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardStepCollectionInsert#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepCollectionInsert/CS/wizardstepcollectioninsertcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardStepCollectionInsert#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepCollectionInsert/VB/wizardstepcollectioninsertvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WizardStepBase" />
        <altmember cref="T:System.Web.UI.WebControls.WizardStep" />
        <altmember cref="M:System.Web.UI.WebControls.WizardStepCollection.Add(System.Web.UI.WebControls.WizardStepBase)" />
        <altmember cref="M:System.Web.UI.WebControls.WizardStepCollection.AddAt(System.Int32,System.Web.UI.WebControls.WizardStepBase)" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Web.UI.WebControls.WizardStepCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die von <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> abgeleiteten Objekte in der Auflistung geändert werden können.</summary>
        <value>
          <see langword="true" />, wenn die <see cref="T:System.Web.UI.WebControls.WizardStepCollection" />-Auflistung geändert werden kann, andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.WebControls.WizardStepBase" />
        <altmember cref="T:System.Web.UI.WebControls.WizardStep" />
        <altmember cref="T:System.Web.UI.WebControls.Wizard" />
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Web.UI.WebControls.WizardStepCollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Zugriff auf die Auflistung synchronisiert (threadsicher) ist.</summary>
        <value>
          <see langword="false" /> in allen Fällen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft stammt aus dem <xref:System.Collections.ICollection> -Schnittstelle und wird überschrieben, um stets `false`.  
  
 Weitere Informationen zu den <xref:System.Web.UI.WebControls.WizardStepCollection.IsSynchronized%2A> -Eigenschaft, finden Sie unter der <xref:System.Collections.ICollection.IsSynchronized%2A> Eigenschaft von der <xref:System.Collections.ICollection> Schnittstelle  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WizardStepBase this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WizardStepBase Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As WizardStepBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WizardStepBase ^ default[int] { System::Web::UI::WebControls::WizardStepBase ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Web.UI.WebControls.WizardStepBase" Usage="System.Web.UI.WebControls.WizardStepCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WizardStepBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Der Index des abzurufenden <see cref="T:System.Web.UI.WebControls.WizardStep" />-Objekts.</param>
        <summary>Ruft aus der Auflistung am angegebenen Index ein von <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> abgeleitetes Objekt ab.</summary>
        <value>Das von <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> abgeleitete Objekt in der <see cref="T:System.Web.UI.WebControls.WizardStepCollection" />-Auflistung an der angegebenen Indexposition.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.WizardStepCollection.Item%2A> Eigenschaft zum Abrufen der <xref:System.Web.UI.WebControls.WizardStepBase>-abgeleitetes Objekt an der angegebenen Indexposition in der <xref:System.Web.UI.WebControls.WizardStepCollection> mithilfe der Arraynotation Auflistung.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WizardStepBase" />
        <altmember cref="T:System.Web.UI.WebControls.WizardStep" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Web.UI.WebControls.WizardStepBase wizardStep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Web.UI.WebControls.WizardStepBase wizardStep) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepCollection.Remove(System.Web.UI.WebControls.WizardStepBase)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (wizardStep As WizardStepBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Web::UI::WebControls::WizardStepBase ^ wizardStep);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Web.UI.WebControls.WizardStepBase -&gt; unit" Usage="wizardStepCollection.Remove wizardStep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wizardStep" Type="System.Web.UI.WebControls.WizardStepBase" />
      </Parameters>
      <Docs>
        <param name="wizardStep">Das von <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> abgeleitete Objekt, das aus der Auflistung entfernt werden soll.</param>
        <summary>Entfernt das angegebene, von <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> abgeleitete Objekt aus der Auflistung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.WizardStepCollection.Remove%2A> -Methode zum Entfernen der <xref:System.Web.UI.WebControls.WizardStepBase>-abgeleitetes Objekt aus der <xref:System.Web.UI.WebControls.WizardStepCollection> Auflistung. Alternativ können Sie die <xref:System.Web.UI.WebControls.WizardStepCollection.RemoveAt%2A> -Methode zum Entfernen einer <xref:System.Web.UI.WebControls.WizardStepBase>-abgeleitetes Objekt aus einer angegebenen Position in der <xref:System.Web.UI.WebControls.WizardStepCollection> Auflistung.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.WizardStepCollection.Remove%2A> -Methode zum Entfernen einer <xref:System.Web.UI.WebControls.WizardStepBase>-abgeleitetes Objekt aus der <xref:System.Web.UI.WebControls.WizardStepCollection> Auflistung. Beachten Sie, dass im Beispiel die <xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A> Eigenschaft von der <xref:System.Web.UI.WebControls.Wizard> -Steuerelement ist eine Instanz von der <xref:System.Web.UI.WebControls.WizardStepCollection> Klasse.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardStepCollectionRemove#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepCollectionRemove/CS/wizardstepcollectionremovecs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardStepCollectionRemove#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepCollectionRemove/VB/wizardstepcollectionremovevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Das von <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> abgeleitete und übergebene Objekt ist <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.WizardStepBase" />
        <altmember cref="T:System.Web.UI.WebControls.WizardStep" />
        <altmember cref="M:System.Web.UI.WebControls.WizardStepCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="wizardStepCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Der Index des von <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> abgeleiteten Objekts, das entfernt werden soll.</param>
        <summary>Entfernt das von <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> abgeleitete Objekt an der angegebenen Position aus der Auflistung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.WizardStepCollection.RemoveAt%2A> -Methode zum Entfernen der <xref:System.Web.UI.WebControls.WizardStepBase>-abgeleitetes Objekt aus der <xref:System.Web.UI.WebControls.WizardStepCollection> Auflistung an der angegebenen Indexposition. Alternativ können Sie einen bestimmten entfernen <xref:System.Web.UI.WebControls.WizardStepBase>-abgeleitetes Objekt aus der Auflistung über den <xref:System.Web.UI.WebControls.WizardStepCollection.Remove%2A> Methode.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WizardStepBase" />
        <altmember cref="T:System.Web.UI.WebControls.WizardStep" />
        <altmember cref="M:System.Web.UI.WebControls.WizardStepCollection.Remove(System.Web.UI.WebControls.WizardStepBase)" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Web.UI.WebControls.WizardStepCollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Objekt ab, mit dem der Zugriff auf die Auflistung synchronisiert werden kann.</summary>
        <value>Ein Objekt, mit dem der Zugriff auf die <see cref="T:System.Web.UI.WebControls.WizardStepCollection" />-Auflistung synchronisiert werden kann.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das in dieser Implementierung zurückgegebene Objekt stellt der <xref:System.Web.UI.WebControls.WizardStepCollection> Objekt selbst.  
  
 Weitere Informationen zu den <xref:System.Web.UI.WebControls.WizardStepCollection.SyncRoot%2A> -Eigenschaft, finden Sie unter der <xref:System.Collections.ICollection.SyncRoot%2A> Eigenschaft von der <xref:System.Collections.ICollection> Schnittstelle.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">Ein nullbasiertes <see cref="T:System.Array" />, das die aus der <see cref="T:System.Web.UI.WebControls.WizardStepCollection" />-Auflistung kopierten Elemente empfängt.</param>
        <param name="index">Die Position im Zielarray, bei der mit dem Empfang des kopierten Inhalts begonnen werden soll.</param>
        <summary>Kopiert alle Elemente aus einer <see cref="T:System.Web.UI.WebControls.WizardStepCollection" />-Auflistung in ein eindimensionales Array, beginnend am angegebenen Index im Zielarray.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Das <see cref="T:System.Object" />, das an das Ende der Auflistung angefügt werden soll.</param>
        <summary>Fügt das angegebene Objekt an das Ende der Auflistung an.</summary>
        <returns>Die Position, an der das neue Element eingefügt wurde.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Die <see cref="T:System.Object" />, die in der Auflistung gesucht werden soll.</param>
        <summary>Ermittelt, ob die Auflistung das angegebene Objekt enthält.</summary>
        <returns>
          <see langword="true" />, wenn das <see cref="T:System.Object" /> in der <see cref="T:System.Collections.IList" /> gefunden wird, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Das in der Auflistung zu suchende Objekt.</param>
        <summary>Bestimmt den Indexwert, der die Position des angegebenen Objekts in der Auflistung darstellt.</summary>
        <returns>Der Index des angegebenen Objekts in der Auflistung.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">Der Index, an dem das Objekt in die Auflistung eingefügt werden soll.</param>
        <param name="value">Das Objekt, das in die Auflistung eingefügt werden soll.</param>
        <summary>Fügt das angegebene Objekt an der angegebene Position in die Auflistung ein.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.WizardStepCollection.System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Auflistung eine feste Größe aufweist.</summary>
        <value>
          <see langword="true" />, wenn die Auflistung eine feste Größe hat, andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IList.Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.WizardStepCollection.System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Der Index des aus der Auflistung abzurufenden Objekts.</param>
        <summary>Ruft das Objekt am angegebenen Index in der Sammlung ab.</summary>
        <value>Das abzurufende Objekt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ermöglicht den Zugriff auf ein bestimmtes Element in der Auflistung mit folgender Syntax: myCollection[index].  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Das aus der Auflistung zu entfernende Objekt.</param>
        <summary>Entfernt das angegebene Objekt aus der Auflistung.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>