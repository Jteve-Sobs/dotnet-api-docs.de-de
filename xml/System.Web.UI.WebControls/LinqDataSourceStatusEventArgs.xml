<Type Name="LinqDataSourceStatusEventArgs" FullName="System.Web.UI.WebControls.LinqDataSourceStatusEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="397ed9376985c69513834ee2e1edcf9a0819adeb" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39931342" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class LinqDataSourceStatusEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LinqDataSourceStatusEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class LinqDataSourceStatusEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class LinqDataSourceStatusEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type LinqDataSourceStatusEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt Daten für die Ereignisse <see cref="E:System.Web.UI.WebControls.LinqDataSource.ContextCreated" />, <see cref="E:System.Web.UI.WebControls.LinqDataSource.Deleted" />, <see cref="E:System.Web.UI.WebControls.LinqDataSource.Inserted" />, <see cref="E:System.Web.UI.WebControls.LinqDataSource.Selected" /> und <see cref="E:System.Web.UI.WebControls.LinqDataSource.Updated" /> bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> -Klasse können Sie die Ergebnisse der Datenvorgänge zu untersuchen, die von ausgeführten eine <xref:System.Web.UI.WebControls.LinqDataSource> Steuerelement. Ein <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> Objekt übergeben wird, um Ereignishandler für die <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleted>, <xref:System.Web.UI.WebControls.LinqDataSource.Inserted>, <xref:System.Web.UI.WebControls.LinqDataSource.Selected>, und <xref:System.Web.UI.WebControls.LinqDataSource.Updated> Ereignisse der <xref:System.Web.UI.WebControls.LinqDataSource> Steuerelement.  
  
 Wenn der Datenvorgang erfolgreich abgeschlossen wurde, das resultierende Objekt in gespeichert ist die <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> Eigenschaft und die <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> -Eigenschaft ist `null`. Wenn der Datenvorgang fehlgeschlagen ist, befindet sich die während der Datenoperation aufgetretene Ausnahme in der <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> Eigenschaft und die <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> Eigenschaft `null`. Wenn Sie die Ausnahme, die durch dargestellt behandelt die <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> Eigenschaftensatz, der <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> Eigenschaft `true` , damit die Ausnahme nicht ausgelöst wird.  
  
 Sie die Gesamtanzahl von Datensätzen zurückgegeben, die aus einer Abfrage durch Abrufen der <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> Eigenschaft.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt einen Ereignishandler für die <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> Ereignis. Im Ereignishandler Wenn die <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> Eigenschaft `null`, das Produkt-ID, aus dem Objekt in abgerufen wird der <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> Eigenschaft. Die Produkt-ID ist ein primärer Schlüssel für die Tabelle und der Datenbank festgelegt ist, ist der Wert aus diesem Grund nicht bekannt, bis der Insert-Vorgang abgeschlossen ist. Die Ausnahmemeldung wird protokolliert, wenn die <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> Eigenschaft ist nicht gleich `null`. Die <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> -Eigenschaft wird festgelegt, um `true`.  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/cs/Default.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/vb/Default.aspx#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceStatusEventArgs (Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceStatusEventArgs(Exception ^ exception);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.LinqDataSourceStatusEventArgs : Exception -&gt; System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" Usage="new System.Web.UI.WebControls.LinqDataSourceStatusEventArgs exception" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="exception">Der während der Datenoperation aufgetretene Fehler.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" />-Klasse mit einer Ausnahme, die als Ergebnis der Datenoperation aufgetreten ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor wird verwendet, wenn eine Ausnahme während der Datenoperation ausgelöst wird. Die <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> Eigenschaft wird automatisch festgelegt, um `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceStatusEventArgs (object result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (result As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceStatusEventArgs(System::Object ^ result);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.LinqDataSourceStatusEventArgs : obj -&gt; System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" Usage="new System.Web.UI.WebControls.LinqDataSourceStatusEventArgs result" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="result" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="result">Ein Objekt, das die aus einer Datenoperation resultierenden Daten enthält.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" />-Klasse mit einem Objekt, das die Daten aus der Datenoperation enthält.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor wird verwendet, wenn der Datenvorgang ohne Fehler abgeschlossen ist. Die `result` Parameter enthält, ein Objekt, das das Ergebnis der Datenoperation darstellt. Die <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> Eigenschaft wird automatisch festgelegt, um `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceStatusEventArgs (object result, int totalRowCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object result, int32 totalRowCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (result As Object, totalRowCount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceStatusEventArgs(System::Object ^ result, int totalRowCount);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.LinqDataSourceStatusEventArgs : obj * int -&gt; System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" Usage="new System.Web.UI.WebControls.LinqDataSourceStatusEventArgs (result, totalRowCount)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="result" Type="System.Object" />
        <Parameter Name="totalRowCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="result">Ein Objekt, das die aus einer Datenoperation resultierenden Daten enthält.</param>
        <param name="totalRowCount">Die Anzahl der Zeilen, die von einem Datenabrufvorgang zurückgegeben wurden.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" />-Klasse mit einem Objekt, das die Daten aus der Datenoperation sowie die Anzahl der zurückgegebenen Zeilen enthält.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die während der Datenoperation ausgelöste Ausnahme ab.</summary>
        <value>Ein <see cref="T:System.Exception" />-Objekt, das die Ausnahme darstellt, wenn ein Fehler aufgetreten ist, andernfalls <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn eine Ausnahme während der Datenoperation ausgelöst wird, befindet sich die Ausnahme in der <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> Eigenschaft. Sie können Ereignishandler für erstellen die <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleted>, <xref:System.Web.UI.WebControls.LinqDataSource.Inserted>, <xref:System.Web.UI.WebControls.LinqDataSource.Selected>, und <xref:System.Web.UI.WebControls.LinqDataSource.Updated> Ereignisse und Abrufen der Ausnahme, sofern vorhanden, über die <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> Eigenschaft.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt einen Ereignishandler für die <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> Ereignis. Im Ereignishandler Wenn die <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> Eigenschaft `null`, das Produkt-ID, aus dem Objekt in abgerufen wird der <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> Eigenschaft. Die Produkt-ID ist ein primärer Schlüssel für die Tabelle und von der Datenbank festgelegt ist, sodass der Wert nicht bekannt ist, bis der Insert-Vorgang abgeschlossen ist. Die Ausnahmemeldung wird protokolliert, wenn die <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> Eigenschaft ist nicht gleich `null`. Die <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> -Eigenschaft wird festgelegt, um `true`.  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/cs/Default.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/vb/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled" />
      <MemberSignature Language="VB.NET" Value="Public Property ExceptionHandled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExceptionHandled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExceptionHandled : bool with get, set" Usage="System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Ausnahme behandelt wurde und dass diese nicht erneut ausgelöst werden soll, oder legt diesen fest.</summary>
        <value>
          <see langword="true" />, wenn die Ausnahme behandelt wurde, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können Ereignishandler für erstellen die <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleted>, <xref:System.Web.UI.WebControls.LinqDataSource.Inserted>, <xref:System.Web.UI.WebControls.LinqDataSource.Selected>, und <xref:System.Web.UI.WebControls.LinqDataSource.Updated> Ereignisse, Ausnahmen zu untersuchen, die während dieser Vorgänge aufgetreten sind. Wenn Sie die Ausnahme behandeln und nicht erneut ausgelöst werden soll möchten, legen Sie die <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> Eigenschaft `true`. Wenn Sie nicht Festlegen der <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> Eigenschaft `true`, wird die Ausnahme an den nächsten Ereignishandler in der Aufrufliste weitergegeben.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt einen Ereignishandler für die <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> Ereignis. Im Ereignishandler Wenn die <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> Eigenschaft `null`, das Produkt-ID, aus dem Objekt in abgerufen wird der <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> Eigenschaft. Die Produkt-ID ist ein primärer Schlüssel für die Tabelle und der Datenbank festgelegt ist, ist der Wert aus diesem Grund nicht bekannt, bis der Insert-Vorgang abgeschlossen ist. Die Ausnahmemeldung wird protokolliert, wenn die <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> Eigenschaft ist nicht gleich `null`. Die <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> -Eigenschaft wird festgelegt, um `true`.  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/cs/Default.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/vb/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Result">
      <MemberSignature Language="C#" Value="public object Result { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Result" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Result As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Result { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Result : obj" Usage="System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Objekt ab, das das Ergebnis einer Datenoperation darstellt.</summary>
        <value>Ein Objekt, das Daten aus der Datenoperation enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie verwenden die <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> Eigenschaft, um Werte zu untersuchen, aus einer Datenoperation zurückgegeben. Sie können Output-Parameter aus einer Datenoperation abrufen oder ändern Sie die Werte, die von einer Abfrage zurückgegeben.  
  
 Die Daten in die <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> Eigenschaft hängt von dem Typ des Datenvorgangs, die ausgeführt wurden. Wenn Sie Daten löschen, die <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> -Eigenschaft enthält ein Objekt des Typs im angegebenen die <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> Eigenschaft, die mit den ursprünglichen Werten, die aus der Datenquelle gelöscht wurden. Wenn Sie einfügen oder Aktualisieren von Daten, die <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> -Eigenschaft enthält ein Objekt des Typs im angegebenen die <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> Eigenschaft, die mit den neuen Werten, die mit der Datenquelle gespeichert wurden. Bei Auswahl von Daten, die <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> -Eigenschaft die Ergebnisse der Abfrage enthält.  
  
 Wenn die select-Abfrage umfasst die Daten gruppiert werden, oder wählen eine Teilmenge der Eigenschaften aus dem im angegebenen Typ der <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> -Eigenschaft, die <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> -Eigenschaft enthält ein Objekt von einem dynamisch erstellten Typ. Andernfalls die <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> -Eigenschaft enthält ein Objekt des Typs im angegebenen die <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> Eigenschaft.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt einen Ereignishandler für die <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> Ereignis. Im Ereignishandler Wenn die <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> Eigenschaft `null`, das Produkt-ID, aus dem Objekt in abgerufen wird der <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> Eigenschaft. Die Produkt-ID ist ein primärer Schlüssel für die Tabelle und der Datenbank festgelegt ist, ist der Wert aus diesem Grund nicht bekannt, bis der Insert-Vorgang abgeschlossen ist. Die Ausnahmemeldung wird protokolliert, wenn die <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> Eigenschaft ist nicht gleich `null`. Die <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> -Eigenschaft wird festgelegt, um `true`.  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/cs/Default.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/vb/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TotalRowCount">
      <MemberSignature Language="C#" Value="public int TotalRowCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TotalRowCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TotalRowCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TotalRowCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.TotalRowCount : int" Usage="System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Gesamtanzahl der Zeilen in einem Dataset für einen Datenabrufvorgang ab.</summary>
        <value>Die Gesamtanzahl der Zeilen in einem Dataset für einen Datenabrufvorgang: -1, wenn das <see cref="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" />-Objekt während eines Datenänderungsvorgangs erstellt wurde; -1, wenn Sie benutzerdefiniertes Paging durch Festlegen von <see cref="P:System.Web.UI.WebControls.LinqDataSource.AutoPage" /> auf <see langword="true" /> und <see cref="P:System.Web.UI.DataSourceSelectArguments.RetrieveTotalRowCount" /> auf <see langword="false" /> aktiviert haben.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie verwenden die <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> Eigenschaft, um die Anzahl der Datensätze im Dataset bei einem Datenabrufvorgang abzurufen. In der Regel rufen Sie diese Eigenschaft, wenn Sie werden die Seiten mit Daten angezeigt, und die Gesamtzahl der Datensätze angezeigt werden soll.  
  
 Wenn Daten ausgelagert werden, wird der Wert in der <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> Eigenschaft unterscheiden von der tatsächlichen Anzahl der Zeilen, die von der Abfrage zurückgegeben werden. Dies ist, da die Abfrage gibt nur die Anzahl der Zeilen zurück, die für diese Seite der Daten erforderlich sind.  
  
 Die <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> Eigenschaft enthält die Anzahl der Datensätze aus einer Abfrage nur, wenn darauf in einem Ereignishandler für die <xref:System.Web.UI.WebControls.LinqDataSource.Selected> Ereignis. Wenn die Eigenschaft von einem Ereignishandler für erfolgt die <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleted>, <xref:System.Web.UI.WebControls.LinqDataSource.Inserted>, oder <xref:System.Web.UI.WebControls.LinqDataSource.Updated> Ereignis die <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> Eigenschaft enthält, -1.  
  
 Der Wert des der <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> Eigenschaft hängt die <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> Eigenschaft der <xref:System.Web.UI.WebControls.LinqDataSource> -Steuerelement, und klicken Sie auf die `AllowPaging` -Eigenschaft des datengebundenen Steuerelements. Die folgende Tabelle enthält die möglichen Werte für die <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> Eigenschaft.  
  
|AutoPage-Eigenschaft des LinqDataSource-Steuerelement|AllowPaging-Eigenschaft des datengebundenen Steuerelements|TotalRowCount-Eigenschaft|Ergebnis|  
|-------------------------------------------------|-------------------------------------------------|----------------------------|-------------|  
|`true`|`true`|Anzahl der Datensätze für eine Abfrage.|Daten werden automatisch ausgelagert.|  
|`false`|`false`|Anzahl der Datensätze für eine Abfrage.|Daten werden nicht ausgelagert.|  
|`true`|`false`|-1|Daten werden nicht ausgelagert.|  
|`false`|`true`|Der Wert, der Sie zugewiesen haben die <xref:System.Web.UI.DataSourceSelectArguments.TotalRowCount%2A> -Eigenschaft in der Ereignishandler für die <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> Ereignis.|Daten werden gemäß den Werten ausgelagert, die Sie angegeben, wenn Sie Paging angepasst.|  
  
   
  
## Examples  
 Das folgende Beispiel zeigt eine Webseite mit einem <xref:System.Web.UI.WebControls.LinqDataSource> -Steuerelement, ein <xref:System.Web.UI.WebControls.GridView> -Steuerelement, und ein <xref:System.Web.UI.WebControls.Literal> Steuerelement. Die <xref:System.Web.UI.WebControls.LinqDataSource> -Steuerelement definiert einen Ereignishandler für die <xref:System.Web.UI.WebControls.LinqDataSource.Selected> Ereignis.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount/cs/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount/vb/Default.aspx#1)]  
  
 Das folgende Beispiel zeigt den Code für den Ereignishandler für die <xref:System.Web.UI.WebControls.LinqDataSource.Selected> Ereignis. Der Wert des der <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> -Eigenschaft zugewiesen, die <xref:System.Web.UI.WebControls.Literal> Steuerelement.  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount/cs/Default.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount/vb/Default.aspx.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>