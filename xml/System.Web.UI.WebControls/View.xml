<Type Name="View" FullName="System.Web.UI.WebControls.View">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="820c320cff927c3d84216e0dd2b53f79f69e5598" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36378678" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class View : System.Web.UI.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit View extends System.Web.UI.Control" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.View" />
  <TypeSignature Language="VB.NET" Value="Public Class View&#xA;Inherits Control" />
  <TypeSignature Language="C++ CLI" Value="public ref class View : System::Web::UI::Control" />
  <TypeSignature Language="F#" Value="type View = class&#xA;    inherit Control" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ToolboxData("&lt;{0}:View runat="server"&gt;&lt;/{0}:View&gt;")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt ein Steuerelement dar, das als Container für eine Gruppe von Steuerelementen in einem <see cref="T:System.Web.UI.WebControls.MultiView" />-Steuerelement fungiert.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In diesem Thema:  
  
-   [Introduction (Einführung)](#introduction)  
  
-   [Deklarationssyntax](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Einführung  
 Die <xref:System.Web.UI.WebControls.View> Steuerelement ist ein Container für eine Gruppe von Steuerelementen. Ein <xref:System.Web.UI.WebControls.View> Steuerelement muss immer enthaltenen ein <xref:System.Web.UI.WebControls.MultiView> Steuerelement. Nur ein <xref:System.Web.UI.WebControls.View> Steuerelement zu einem Zeitpunkt kann definiert werden, als die aktive Ansicht in einem <xref:System.Web.UI.WebControls.MultiView> Steuerelement.  
  
 Die <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> Eigenschaft gibt an, die aktive <xref:System.Web.UI.WebControls.View> -Steuerelement innerhalb der <xref:System.Web.UI.WebControls.MultiView.Views%2A> Auflistung von einem <xref:System.Web.UI.WebControls.MultiView> Steuerelement. Das aktiven Steuerelement wird an den Client, solange das enthaltende gerendert <xref:System.Web.UI.WebControls.MultiView> Steuerelement sichtbar ist. Verwenden der <xref:System.Web.UI.WebControls.View.Visible%2A> -Eigenschaft können Sie bestimmen, ob ein <xref:System.Web.UI.WebControls.View> Steuerelement und seine untergeordneten Steuerelemente werden auf der Seite angezeigt und gerenderten an den Client.  
  
 Ein <xref:System.Web.UI.WebControls.View> Steuerelement darf Steuerelemente eines beliebigen Typs, einschließlich anderer <xref:System.Web.UI.WebControls.MultiView> Steuerelemente. Ein <xref:System.Web.UI.WebControls.View> Stileigenschaften Steuerelement nicht unterstützt. Anwenden von Formatvorlagen ein <xref:System.Web.UI.WebControls.View> Steuerelement, fügen Sie eine oder mehrere <xref:System.Web.UI.WebControls.Panel> -Steuerelementen an die <xref:System.Web.UI.WebControls.View> Steuerelement.  
  
 Die <xref:System.Web.UI.WebControls.View> -Klasse stellt die <xref:System.Web.UI.WebControls.View.Activate> und <xref:System.Web.UI.WebControls.View.Deactivate> Ereignisse. Die <xref:System.Web.UI.WebControls.View.Activate> Ereignis wird ausgelöst, wenn die aktuelle <xref:System.Web.UI.WebControls.View> Steuerelement wird die aktive Ansicht. In diesem Fall bei den Wert des der <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> eigenschaftenänderungen oder <xref:System.Web.UI.WebControls.MultiView.SetActiveView%2A> Methode wird aufgerufen, um eine andere angeben <xref:System.Web.UI.WebControls.View> Steuerelement. Z. B. wenn `View1` ist die aktive Ansicht innerhalb einer <xref:System.Web.UI.WebControls.MultiView> Steuerelement, wenn die <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> eigenschaftenänderungen an `View2`, die <xref:System.Web.UI.WebControls.View.Activate> Ereignis wird für `View2` und die <xref:System.Web.UI.WebControls.View.Deactivate> Ereignis wird für `View1`.  
  
 Ermöglicht Benutzern das Navigieren zwischen mehreren <xref:System.Web.UI.WebControls.View> steuert innerhalb einer <xref:System.Web.UI.WebControls.MultiView> -Steuerelement, fügen Sie eine <xref:System.Web.UI.WebControls.LinkButton> oder <xref:System.Web.UI.WebControls.Button> steuern, auf die einzelnen <xref:System.Web.UI.WebControls.View> Steuerelement. Festlegen der <xref:System.Web.UI.WebControls.LinkButton> oder <xref:System.Web.UI.WebControls.Button> des Steuerelements `CommandName` Eigenschaft, um die ID des dem <xref:System.Web.UI.WebControls.View> Steuerelement zu navigieren. Ein Codebeispiel finden Sie unter <xref:System.Web.UI.WebControls.MultiView.ActiveViewChanged>.  
  
 Weitere Informationen zum Bearbeiten von <xref:System.Web.UI.WebControls.View> steuert innerhalb einer <xref:System.Web.UI.WebControls.MultiView> steuern, finden Sie unter der <xref:System.Web.UI.WebControls.MultiView> Thema.  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Deklarationssyntax  
  
```  
<asp:View  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    ID="string"  
    OnActivate="Activate event handler"  
    OnDataBinding="DataBinding event handler"  
    OnDeactivate="Deactivate event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    runat="server"  
    SkinID="string"  
    Visible="True|False"  
/>  
```  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Erstellen einer <xref:System.Web.UI.WebControls.MultiView> Steuerelement, das drei enthält <xref:System.Web.UI.WebControls.View> Steuerelemente. Die Seite geladen ist, erstmalig `DefaultView` als aktive Ansicht festgelegt ist. Jede <xref:System.Web.UI.WebControls.View> Steuerelement enthält Verknüpfungsschaltflächen, damit der Benutzer zu anderen Ansichten navigieren kann. Beachten Sie, dass jedes <xref:System.Web.UI.WebControls.View> Steuerelement enthält eine <xref:System.Web.UI.WebControls.Panel> Steuerelement, damit die Stile angewendet werden können.  
  
 [!code-aspx-vb[MultiView Class Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MultiView Class Example/VB/multiviewclass1vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.MultiView" />
    <altmember cref="T:System.Web.UI.WebControls.Button" />
    <altmember cref="T:System.Web.UI.WebControls.LinkButton" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public View ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.View.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; View();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.View" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public event EventHandler Activate;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Activate" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.View.Activate" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Activate As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Activate;" />
      <MemberSignature Language="F#" Value="member this.Activate : EventHandler " Usage="member this.Activate : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn das aktuelle <see cref="T:System.Web.UI.WebControls.View" />-Steuerelement zur aktiven Ansicht wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.View.Activate> Ereignis wird ausgelöst, wenn die aktuelle <xref:System.Web.UI.WebControls.View> Steuerelement wird die aktive Ansicht. In diesem Fall bei den Wert des der <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> eigenschaftenänderungen oder <xref:System.Web.UI.WebControls.MultiView.SetActiveView%2A> Methode wird aufgerufen, um eine andere angeben <xref:System.Web.UI.WebControls.View> Steuerelement. Z. B. wenn `View1` ist die aktive Ansicht innerhalb einer <xref:System.Web.UI.WebControls.MultiView> Steuerelement, wenn die <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> eigenschaftenänderungen an `View2`, die <xref:System.Web.UI.WebControls.View.Activate> Ereignis wird für `View2` und die <xref:System.Web.UI.WebControls.View.Deactivate> Ereignis wird für `View1`.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie angeben und codieren einen Ereignishandler für das <xref:System.Web.UI.WebControls.View.Activate> -Ereignis für ein <xref:System.Web.UI.WebControls.View> Steuerelement. Wenn die aktive Ansicht ändert, wird eine Meldung angezeigt, die Angabe von Benutzer die <xref:System.Web.UI.WebControls.View> zu steuern, die ausgelöst der <xref:System.Web.UI.WebControls.View.Activate> Ereignis und die <xref:System.Web.UI.WebControls.View> zu steuern, die ausgelöst der <xref:System.Web.UI.WebControls.View.Deactivate> Ereignis.  
  
 [!code-aspx-csharp[View.Activate Event Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/View.Activate Event Example/cs/viewactivateeventcs.aspx#1)]
 [!code-aspx-vb[View.Activate Event Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/View.Activate Event Example/VB/viewactivateeventvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.View.Deactivate" />
        <altmember cref="T:System.Web.UI.WebControls.MultiView" />
      </Docs>
    </Member>
    <Member MemberName="Deactivate">
      <MemberSignature Language="C#" Value="public event EventHandler Deactivate;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Deactivate" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.View.Deactivate" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deactivate As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Deactivate;" />
      <MemberSignature Language="F#" Value="member this.Deactivate : EventHandler " Usage="member this.Deactivate : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn das aktuelle aktive <see cref="T:System.Web.UI.WebControls.View" />-Steuerelement inaktiv wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.View.Deactivate> Ereignis wird ausgelöst, wenn die aktuelle aktive <xref:System.Web.UI.WebControls.View> -Steuerelement inaktiv. Ein <xref:System.Web.UI.WebControls.View> Steuerelement wird inaktiv, wenn der Wert des der <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> eigenschaftenänderungen oder <xref:System.Web.UI.WebControls.MultiView.SetActiveView%2A> Methode wird aufgerufen, um eine andere angeben <xref:System.Web.UI.WebControls.View> Steuerelement. Z. B. wenn `View1` ist die aktive Ansicht innerhalb einer <xref:System.Web.UI.WebControls.MultiView> Steuerelement, wenn die <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> eigenschaftenänderungen an `View2`, die <xref:System.Web.UI.WebControls.View.Deactivate> Ereignis wird für `View1` und die <xref:System.Web.UI.WebControls.View.Activate> Ereignis wird für `View2`.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie angeben und codieren einen Ereignishandler für das <xref:System.Web.UI.WebControls.View.Deactivate> -Ereignis für ein <xref:System.Web.UI.WebControls.View> Steuerelement. Wenn die aktive Ansicht ändert, wird eine Meldung angezeigt, die Angabe von Benutzer die <xref:System.Web.UI.WebControls.View> zu steuern, die ausgelöst der <xref:System.Web.UI.WebControls.View.Activate> Ereignis und die <xref:System.Web.UI.WebControls.View> zu steuern, die ausgelöst der <xref:System.Web.UI.WebControls.View.Deactivate> Ereignis.  
  
 [!code-aspx-csharp[View.Activate Event Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/View.Activate Event Example/cs/viewactivateeventcs.aspx#1)]
 [!code-aspx-vb[View.Activate Event Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/View.Activate Event Example/VB/viewactivateeventvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.View.Activate" />
        <altmember cref="T:System.Web.UI.WebControls.MultiView" />
      </Docs>
    </Member>
    <Member MemberName="EnableTheming">
      <MemberSignature Language="C#" Value="public override bool EnableTheming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableTheming" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.View.EnableTheming" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property EnableTheming As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableTheming { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableTheming : bool with get, set" Usage="System.Web.UI.WebControls.View.EnableTheming" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob für dieses Steuerelement Designs gelten, oder legt diesen fest.</summary>
        <value>
          <see langword="true" />, wenn Designs verwendet werden sollen, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.View.EnableTheming%2A> Eigenschaft gibt an, ob Designs, für aktiviert sind die <xref:System.Web.UI.WebControls.View> Steuerelement. Die <xref:System.Web.UI.WebControls.View.EnableTheming%2A> Eigenschaft bestimmt außerdem, ob Designs, für die Steuerelemente aktiviert sind seiner <xref:System.Web.UI.Control.Controls%2A?displayProperty=nameWithType> Auflistung. Wenn die <xref:System.Web.UI.WebControls.View.EnableTheming%2A> Eigenschaft ist `true`, Design-Verzeichnis der Anwendung wird gesucht Steuerelementdesigns angewendet. Wenn kein Design für das jeweilige Steuerelement im Designverzeichnis vorhanden ist, wird ein Design angewendet. Wenn die <xref:System.Web.UI.WebControls.View.EnableTheming%2A> Eigenschaft ist `false`, Designverzeichnis nicht durchsucht und den Inhalt von der <xref:System.Web.UI.Control.SkinID%2A> -Eigenschaft nicht verwendet werden.  
  
 Ein Steuerelement kann überschreiben die <xref:System.Web.UI.WebControls.View.EnableTheming%2A> Wert festgelegt, indem Sie das übergeordnete Steuerelement oder der Seite. Z. B. wenn ein <xref:System.Web.UI.WebControls.View> -Steuerelement <xref:System.Web.UI.WebControls.View.EnableTheming%2A> festgelegt `false`, können Sie selektiv Designs anwenden, um untergeordnete Steuerelemente innerhalb der <xref:System.Web.UI.WebControls.View> Steuerelement durch Festlegen der <xref:System.Web.UI.Control.EnableTheming%2A> Eigenschaft, um `true` auf den einzelnen untergeordnete Steuerelemente.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.EnableTheming" />
      </Docs>
    </Member>
    <Member MemberName="OnActivate">
      <MemberSignature Language="C#" Value="protected internal virtual void OnActivate (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnActivate(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.View.OnActivate(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnActivate (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnActivate(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnActivate : EventArgs -&gt; unit&#xA;override this.OnActivate : EventArgs -&gt; unit" Usage="view.OnActivate e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.View.Activate" />-Ereignis des <see cref="T:System.Web.UI.WebControls.View" />-Steuerelements aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.View.Activate> Ereignis wird ausgelöst, wenn die aktuelle <xref:System.Web.UI.WebControls.View> Steuerelement wird die aktive Ansicht.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.View.Activate" />
      </Docs>
    </Member>
    <Member MemberName="OnDeactivate">
      <MemberSignature Language="C#" Value="protected internal virtual void OnDeactivate (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnDeactivate(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.View.OnDeactivate(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnDeactivate (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnDeactivate(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDeactivate : EventArgs -&gt; unit&#xA;override this.OnDeactivate : EventArgs -&gt; unit" Usage="view.OnDeactivate e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.View.Deactivate" />-Ereignis des <see cref="T:System.Web.UI.WebControls.View" />-Steuerelements aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.View.Deactivate> Ereignis wird ausgelöst, wenn die aktuelle aktive <xref:System.Web.UI.WebControls.View> -Steuerelement inaktiv.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.View.Deactivate" />
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public override bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.View.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Visible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Visible : bool with get, set" Usage="System.Web.UI.WebControls.View.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Web.UI.WebControls.View" />-Steuerelement sichtbar ist, oder legt diesen Wert fest.</summary>
        <value>
          <see langword="true" />, wenn das <see cref="T:System.Web.UI.WebControls.View" />-Steuerelement sichtbar ist, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.View.Visible%2A> -Eigenschaft können Sie bestimmen, ob die aktuelle <xref:System.Web.UI.WebControls.View> Steuerelement ist sichtbar und gerenderten an den Client. Für eine <xref:System.Web.UI.WebControls.View> -Steuerelement auf der gerenderten Seite angezeigt werden, muss er die aktive Ansicht im enthaltenden <xref:System.Web.UI.WebControls.MultiView> -Steuerelement und das enthaltende <xref:System.Web.UI.WebControls.MultiView> -Steuerelement muss sichtbar sein. Wenn die enthaltende <xref:System.Web.UI.WebControls.MultiView> Steuerelement ist nicht auf der Seite sichtbar oder, wenn die <xref:System.Web.UI.WebControls.View> -Steuerelement ist nicht die aktive Ansicht und dann die <xref:System.Web.UI.WebControls.View> Steuerelement und seine untergeordneten Steuerelemente werden nicht gerendert.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.View.Visible%2A> Eigenschaft intern basierend auf die Sichtbarkeit und der aktiven Ansicht für das enthaltende übergeordnete Steuerelement festgelegt ist. Wenn Sie diese Eigenschaft zur Laufzeit festlegen einer <xref:System.InvalidOperationException> Ausnahme wird ausgelöst. Wenn Sie festlegen, die <xref:System.Web.UI.WebControls.View.Visible%2A> Eigenschaft zur Entwurfszeit, Änderungen der Eigenschaft werden ignoriert.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Es wurde versucht, diese Eigenschaft zur Laufzeit festzulegen.</exception>
        <altmember cref="T:System.Web.UI.WebControls.MultiView" />
        <altmember cref="M:System.Web.UI.WebControls.MultiView.GetActiveView" />
        <altmember cref="P:System.Web.UI.WebControls.MultiView.ActiveViewIndex" />
      </Docs>
    </Member>
  </Members>
</Type>