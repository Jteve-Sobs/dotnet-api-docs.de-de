<Type Name="EmbeddedMailObjectsCollection" FullName="System.Web.UI.WebControls.EmbeddedMailObjectsCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2cff62db8cbbb336a679395967297c59df01229c" /><Meta Name="ms.sourcegitcommit" Value="71cd9c2de2cd52bd5b71424de92feb029aa2818b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="10/09/2019" /><Meta Name="ms.locfileid" Value="72185842" /></Metadata><TypeSignature Language="C#" Value="public sealed class EmbeddedMailObjectsCollection : System.Collections.CollectionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EmbeddedMailObjectsCollection extends System.Collections.CollectionBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.EmbeddedMailObjectsCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EmbeddedMailObjectsCollection&#xA;Inherits CollectionBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class EmbeddedMailObjectsCollection sealed : System::Collections::CollectionBase" />
  <TypeSignature Language="F#" Value="type EmbeddedMailObjectsCollection = class&#xA;    inherit CollectionBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.CollectionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.EmbeddedMailObjectCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.EmbeddedMailObjectCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt einen geordneten Satz von <see cref="T:System.Web.UI.WebControls.EmbeddedMailObject" />-Objekten dar.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der <xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection> speichert Verweise auf Elemente, die in eine e-Mail-Nachricht eingebettet werden. Die eingebetteten Elemente können Bilddateien sein, z. b. Firmenlogos. Der <xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection> wird von der <xref:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects%2A>-Eigenschaft des <xref:System.Web.UI.WebControls.MailDefinition>-Objekts verwendet.  
  
 E-Mail-Nachrichten, die eingebettete Objekte zulassen, können in den folgenden websteuer Elementen konfiguriert werden, indem ihre <xref:System.Web.UI.WebControls.MailDefinition>-Eigenschaften deklarativ  
  
-   <xref:System.Web.UI.WebControls.CreateUserWizard>  
  
-   <xref:System.Web.UI.WebControls.ChangePassword>  
  
-   <xref:System.Web.UI.WebControls.PasswordRecovery>  
  
> [!NOTE]
>  Die Werte in den Objekten <xref:System.Web.UI.WebControls.EmbeddedMailObject> und <xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection> werden nicht im Ansichts Zustand gespeichert. Dies schützt vor böswilligen Benutzern, die Pfadinformationen für Ihren Server ermitteln.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine ASP.NET-Seite veranschaulicht, die ein <xref:System.Web.UI.WebControls.ChangePassword>-websteuer Element verwendet und einen Ereignishandler für das <xref:System.Web.UI.WebControls.ChangePassword.SendingMail>-Ereignis mit dem Namen `SendingMail` enthält. Im Codebeispiel wird davon ausgegangen, dass die ASP.NET-Website für die Verwendung der ASP.NET-Mitgliedschaft und Formular Authentifizierung konfiguriert wurde und dass ein Benutzer erstellt wurde, dessen Name und Kennwort Ihnen bekannt sind. Weitere Informationen finden Sie unter [Vorgehensweise: Implementieren Sie die einfache Formular Authentifizierung @ no__t-0.  
  
 Wenn die Kenn Wort Änderung erfolgreich ist, versucht der Code im `SendingMail`-Ereignishandler, eine e-Mail-Nachricht an den Benutzer zu senden, um die Änderung zu bestätigen. SMTP muss bereits auf dem Server konfiguriert sein, damit dieses Codebeispiel funktioniert. Informationen zum Konfigurieren eines SMTP-Servers finden Sie unter [gewusst wie: Installieren und Konfigurieren virtueller SMTP-Server in IIS 6.0 @ no__t-0. Im Rahmen dieses Beispiels ist es nicht erforderlich, einen SMTP-Server zu konfigurieren. Das Beispiel wird erstellt, um zu testen, dass ein Fehler beim Senden einer e-Mail-Nachricht vorliegt.  
  
 Wenn ein Mailserver nicht ordnungsgemäß konfiguriert ist oder ein anderer Fehler auftritt und die e-Mail-Nachricht nicht gesendet werden kann, wird die `SendMailError`-Funktion aufgerufen. Dem Benutzer wird eine Meldung angezeigt. Außerdem wird ein Ereignis im Windows-Anwendungs Ereignisprotokoll mit der Annahme protokolliert, dass eine Ereignis Quelle mit dem Namen MySamplesSite bereits vorhanden ist. Weitere Informationen finden Sie im folgenden Codebeispiel, um die angegebene Ereignis Quelle zu erstellen. Weitere Informationen zum Erstellen einer Ereignis Quelle finden Sie unter [Server Ereignis Behandlung auf ASP.net-Web Forms Seiten](https://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9). Die <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A>-Eigenschaft des <xref:System.Web.UI.WebControls.SendMailErrorEventArgs>-Objekts wird auf `true` festgelegt, um anzugeben, dass der Fehler behandelt wurde.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 Verwenden Sie das folgende Codebeispiel, wenn Sie die Ereignis Quelle namens MySamplesSite Programm gesteuert dem Anwendungsprotokoll hinzufügen müssen. Diese Ereignis Quelle muss vorhanden sein, damit das erste Codebeispiel ordnungsgemäß funktioniert. Für das folgende Codebeispiel sind Administrator Rechte erforderlich.  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 Der folgende Beispielcode kann als ChangePasswordMail. htm-Datei für den vorangehenden Beispielcode verwendet werden.  
  
> [!IMPORTANT]
>  Das Senden von Benutzerkonto Namen oder Kenn Wörtern in einer e-Mail ist eine potenzielle Sicherheitsbedrohung. E-Mail-Nachrichten werden in der Regel als Klartext gesendet und können von speziellen Netzwerkanwendungen gelesen werden.  Um die Sicherheit zu verbessern, verwenden Sie die entschärfungen, die unter [Sichern von Anmelde Steuerelementen](https://msdn.microsoft.com/library/d85075bc-9c1a-4453-8a0c-539b10853c9c)beschrieben werden.  
  
```  
<html>  
<head><title></title></head>  
<body>  
<form>  
  
  <h1>Your password for the account named &quot;<%Username%>&quot; has changed.</h1>  
  
  <p>  
  If you did not initiate this change, please call 1-206-555-0100.  
  </p>  
  
  <p>  
  <a href="http://www.contoso.com/login.aspx">  
    <img src="cid:LoginGif" alt="Log In" />  
  </a>   
  </p>  
  
  <p>  
  Please read our attached Privacy Notice.  
  </p>  
  
</form>  
</body>  
</html>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.CreateUserWizard" />
    <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.MailDefinition" />
    <altmember cref="E:System.Web.UI.WebControls.CreateUserWizard.SendingMail" />
    <altmember cref="T:System.Web.UI.WebControls.ChangePassword" />
    <altmember cref="P:System.Web.UI.WebControls.ChangePassword.MailDefinition" />
    <altmember cref="E:System.Web.UI.WebControls.ChangePassword.SendingMail" />
    <altmember cref="T:System.Web.UI.WebControls.PasswordRecovery" />
    <altmember cref="P:System.Web.UI.WebControls.PasswordRecovery.MailDefinition" />
    <altmember cref="E:System.Web.UI.WebControls.PasswordRecovery.SendingMail" />
    <altmember cref="T:System.Web.UI.WebControls.EmbeddedMailObject" />
    <altmember cref="T:System.Net.Mail.MailMessage" />
    <related type="Article" href="https://msdn.microsoft.com/library/448f7802-0aa8-4304-abf7-82e138877dc8">Registerkarte "Websiteverwaltungs-Tool Anwendung"</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EmbeddedMailObjectsCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EmbeddedMailObjectsCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.EmbeddedMailObjectsCollection" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (System.Web.UI.WebControls.EmbeddedMailObject value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(class System.Web.UI.WebControls.EmbeddedMailObject value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.Add(System.Web.UI.WebControls.EmbeddedMailObject)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (value As EmbeddedMailObject) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::Web::UI::WebControls::EmbeddedMailObject ^ value);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Web.UI.WebControls.EmbeddedMailObject -&gt; int" Usage="embeddedMailObjectsCollection.Add value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.UI.WebControls.EmbeddedMailObject" />
      </Parameters>
      <Docs>
        <param name="value">Das <see cref="T:System.Web.UI.WebControls.EmbeddedMailObject" />, das in <see cref="T:System.Web.UI.WebControls.EmbeddedMailObjectsCollection" /> eingefügt werden soll.</param>
        <summary>Fügt <see cref="T:System.Web.UI.WebControls.EmbeddedMailObject" />am Ende der <see cref="T:System.Web.UI.WebControls.EmbeddedMailObjectsCollection" />-Auflistung hinzu.</summary>
        <returns>Gibt den Index von <see cref="T:System.Web.UI.WebControls.EmbeddedMailObject" /> in der <see cref="T:System.Web.UI.WebControls.EmbeddedMailObjectsCollection" /> zurück.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Der angegebene <paramref name="value" /> ist gleich <see langword="null" />.</exception>
        <altmember cref="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.Contains(System.Web.UI.WebControls.EmbeddedMailObject)" />
        <altmember cref="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.CopyTo(System.Web.UI.WebControls.EmbeddedMailObject[],System.Int32)" />
        <altmember cref="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.IndexOf(System.Web.UI.WebControls.EmbeddedMailObject)" />
        <altmember cref="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.Insert(System.Int32,System.Web.UI.WebControls.EmbeddedMailObject)" />
        <altmember cref="P:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.Item(System.Int32)" />
        <altmember cref="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.Remove(System.Web.UI.WebControls.EmbeddedMailObject)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Web.UI.WebControls.EmbeddedMailObject value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Web.UI.WebControls.EmbeddedMailObject value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.Contains(System.Web.UI.WebControls.EmbeddedMailObject)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As EmbeddedMailObject) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Web::UI::WebControls::EmbeddedMailObject ^ value);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Web.UI.WebControls.EmbeddedMailObject -&gt; bool" Usage="embeddedMailObjectsCollection.Contains value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.UI.WebControls.EmbeddedMailObject" />
      </Parameters>
      <Docs>
        <param name="value">Das <see cref="T:System.Web.UI.WebControls.EmbeddedMailObject" />, das im <see cref="T:System.Web.UI.WebControls.EmbeddedMailObjectsCollection" />-Objekt gesucht werden soll.</param>
        <summary>Ermittelt, ob die <see cref="T:System.Web.UI.WebControls.EmbeddedMailObjectsCollection" /> einen bestimmten <see cref="T:System.Web.UI.WebControls.EmbeddedMailObject" /> enthält.</summary>
        <returns><see langword="true" />, wenn <see cref="T:System.Web.UI.WebControls.EmbeddedMailObjectsCollection" /> das <paramref name="obj" /> enthält, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.IndexOf%2A>-Methode, um die Position des <xref:System.Web.UI.WebControls.EmbeddedMailObject> in der <xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection> zu identifizieren.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.Add(System.Web.UI.WebControls.EmbeddedMailObject)" />
        <altmember cref="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.CopyTo(System.Web.UI.WebControls.EmbeddedMailObject[],System.Int32)" />
        <altmember cref="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.IndexOf(System.Web.UI.WebControls.EmbeddedMailObject)" />
        <altmember cref="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.Insert(System.Int32,System.Web.UI.WebControls.EmbeddedMailObject)" />
        <altmember cref="P:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.Item(System.Int32)" />
        <altmember cref="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.Remove(System.Web.UI.WebControls.EmbeddedMailObject)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Web.UI.WebControls.EmbeddedMailObject[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Web.UI.WebControls.EmbeddedMailObject[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.CopyTo(System.Web.UI.WebControls.EmbeddedMailObject[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As EmbeddedMailObject(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Web::UI::WebControls::EmbeddedMailObject ^&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.Web.UI.WebControls.EmbeddedMailObject[] * int -&gt; unit" Usage="embeddedMailObjectsCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Web.UI.WebControls.EmbeddedMailObject[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">Das eindimensionale <see cref="T:System.Array" /> ist das Ziel der aus der aktuellen <see cref="T:System.Web.UI.WebControls.EmbeddedMailObjectsCollection" /> kopierten Elemente. Für das Array muss eine nullbasierte Indizierung verwendet werden.</param>
        <param name="index">Der nullbasierte Index im <paramref name="array" />, bei dem der Kopiervorgang beginnt.</param>
        <summary>Kopiert die Auflistungsobjekte in eine eindimensionale <see cref="T:System.Array" />-Instanz, beginnend am angegebenen Index im Array.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Der angegebene <paramref name="array" /> ist gleich <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Der angegebene <paramref name="index" /> liegt außerhalb des Bereichs der Sammlung.</exception>
        <altmember cref="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.Add(System.Web.UI.WebControls.EmbeddedMailObject)" />
        <altmember cref="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.Contains(System.Web.UI.WebControls.EmbeddedMailObject)" />
        <altmember cref="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.IndexOf(System.Web.UI.WebControls.EmbeddedMailObject)" />
        <altmember cref="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.Insert(System.Int32,System.Web.UI.WebControls.EmbeddedMailObject)" />
        <altmember cref="P:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.Item(System.Int32)" />
        <altmember cref="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.Remove(System.Web.UI.WebControls.EmbeddedMailObject)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Web.UI.WebControls.EmbeddedMailObject value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Web.UI.WebControls.EmbeddedMailObject value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.IndexOf(System.Web.UI.WebControls.EmbeddedMailObject)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As EmbeddedMailObject) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Web::UI::WebControls::EmbeddedMailObject ^ value);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Web.UI.WebControls.EmbeddedMailObject -&gt; int" Usage="embeddedMailObjectsCollection.IndexOf value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.UI.WebControls.EmbeddedMailObject" />
      </Parameters>
      <Docs>
        <param name="value">Ein <see cref="T:System.Web.UI.WebControls.EmbeddedMailObject" />, das in <see cref="T:System.Web.UI.WebControls.EmbeddedMailObjectsCollection" /> gesucht werden soll.</param>
        <summary>Ermittelt den Index eines bestimmten <see cref="T:System.Web.UI.WebControls.EmbeddedMailObject" /> in <see cref="T:System.Web.UI.WebControls.EmbeddedMailObjectsCollection" />.</summary>
        <returns>Der Index des <see cref="T:System.Web.UI.WebControls.EmbeddedMailObject" />, wenn es in <see cref="T:System.Web.UI.WebControls.EmbeddedMailObjectsCollection" /> vorhanden ist, andernfalls -1.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.Add(System.Web.UI.WebControls.EmbeddedMailObject)" />
        <altmember cref="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.Contains(System.Web.UI.WebControls.EmbeddedMailObject)" />
        <altmember cref="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.CopyTo(System.Web.UI.WebControls.EmbeddedMailObject[],System.Int32)" />
        <altmember cref="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.Insert(System.Int32,System.Web.UI.WebControls.EmbeddedMailObject)" />
        <altmember cref="P:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.Item(System.Int32)" />
        <altmember cref="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.Remove(System.Web.UI.WebControls.EmbeddedMailObject)" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Web.UI.WebControls.EmbeddedMailObject value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Web.UI.WebControls.EmbeddedMailObject value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.Insert(System.Int32,System.Web.UI.WebControls.EmbeddedMailObject)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, value As EmbeddedMailObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::Web::UI::WebControls::EmbeddedMailObject ^ value);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * System.Web.UI.WebControls.EmbeddedMailObject -&gt; unit" Usage="embeddedMailObjectsCollection.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Web.UI.WebControls.EmbeddedMailObject" />
      </Parameters>
      <Docs>
        <param name="index">Ein Ganzzahlwert, der die Indexposition angibt, an der <see cref="T:System.Web.UI.WebControls.EmbeddedMailObject" /> in die Auflistung eingefügt werden soll.</param>
        <param name="value">Ein <see cref="T:System.Web.UI.WebControls.EmbeddedMailObject" />-Objekt, das in <see cref="T:System.Web.UI.WebControls.EmbeddedMailObjectsCollection" /> eingefügt werden soll.</param>
        <summary>Fügt <see cref="T:System.Web.UI.WebControls.EmbeddedMailObject" /> an der angegebenen Indexposition in das <see cref="T:System.Web.UI.WebControls.EmbeddedMailObjectsCollection" />-Objekt ein.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn `index` 0 ist, wird `value` am Anfang des <xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection> hinzugefügt. Wenn `index` der Anzahl der Elemente im <xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection> entspricht, wird `value` am Ende angefügt.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der angegebene <paramref name="index" /> liegt außerhalb des Bereichs der Sammlung.</exception>
        <exception cref="T:System.ArgumentNullException">Der angegebene <paramref name="value" /> ist gleich <see langword="null" />.</exception>
        <altmember cref="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.Add(System.Web.UI.WebControls.EmbeddedMailObject)" />
        <altmember cref="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.Contains(System.Web.UI.WebControls.EmbeddedMailObject)" />
        <altmember cref="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.CopyTo(System.Web.UI.WebControls.EmbeddedMailObject[],System.Int32)" />
        <altmember cref="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.IndexOf(System.Web.UI.WebControls.EmbeddedMailObject)" />
        <altmember cref="P:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.Item(System.Int32)" />
        <altmember cref="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.Remove(System.Web.UI.WebControls.EmbeddedMailObject)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.EmbeddedMailObject this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.EmbeddedMailObject Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As EmbeddedMailObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::EmbeddedMailObject ^ default[int] { System::Web::UI::WebControls::EmbeddedMailObject ^ get(int index); void set(int index, System::Web::UI::WebControls::EmbeddedMailObject ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Web.UI.WebControls.EmbeddedMailObject with get, set" Usage="System.Web.UI.WebControls.EmbeddedMailObjectsCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.EmbeddedMailObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Der nullbasierte Index des abzurufenden Elements.</param>
        <summary>Gibt ein bestimmtes Element von <see cref="T:System.Web.UI.WebControls.EmbeddedMailObjectsCollection" /> zurück, das durch seine Position identifiziert wird.</summary>
        <value>Gibt <see cref="T:System.Web.UI.WebControls.EmbeddedMailObject" /> an der von <paramref name="index" /> angegebenen Position zurück.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn `index` nicht mit einem vorhandenen Member der Auflistung identisch ist, tritt ein Fehler auf.  
  
 Die <xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.Item%2A>-Eigenschaft ist die Standard Eigenschaft für eine Auflistung. Daher sind die folgenden Codezeilen äquivalent:  
  
```vb  
myObject = myCollection(index)  
myObject = myCollection.Item(index)  
```  
  
```csharp  
myObject = myCollection[index];  
myObject = myCollection.Item[index];  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" /> ist kleiner als Null.  
  
- oder - 
 <paramref name="index" /> ist größer oder gleich der Anzahl von Elementen in der Auflistung.</exception>
        <altmember cref="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.Add(System.Web.UI.WebControls.EmbeddedMailObject)" />
        <altmember cref="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.Contains(System.Web.UI.WebControls.EmbeddedMailObject)" />
        <altmember cref="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.CopyTo(System.Web.UI.WebControls.EmbeddedMailObject[],System.Int32)" />
        <altmember cref="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.IndexOf(System.Web.UI.WebControls.EmbeddedMailObject)" />
        <altmember cref="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.Insert(System.Int32,System.Web.UI.WebControls.EmbeddedMailObject)" />
        <altmember cref="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.Remove(System.Web.UI.WebControls.EmbeddedMailObject)" />
      </Docs>
    </Member>
    <Member MemberName="OnValidate">
      <MemberSignature Language="C#" Value="protected override void OnValidate (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnValidate(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.OnValidate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnValidate (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnValidate(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.OnValidate : obj -&gt; unit" Usage="embeddedMailObjectsCollection.OnValidate value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Web.UI.WebControls.EmbeddedMailObject value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Web.UI.WebControls.EmbeddedMailObject value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.Remove(System.Web.UI.WebControls.EmbeddedMailObject)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (value As EmbeddedMailObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Web::UI::WebControls::EmbeddedMailObject ^ value);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Web.UI.WebControls.EmbeddedMailObject -&gt; unit" Usage="embeddedMailObjectsCollection.Remove value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.UI.WebControls.EmbeddedMailObject" />
      </Parameters>
      <Docs>
        <param name="value">Der <see cref="T:System.Web.UI.WebControls.EmbeddedMailObject" />, der aus der <see cref="T:System.Web.UI.WebControls.EmbeddedMailObjectsCollection" /> entfernt werden soll.</param>
        <summary>Entfernt das erste Vorkommen der angegebenen <see cref="T:System.Web.UI.WebControls.EmbeddedMailObject" /> aus der <see cref="T:System.Web.UI.WebControls.EmbeddedMailObjectsCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.Remove%2A>-Methode verwendet die Informationen, die in der <xref:System.Web.UI.WebControls.EmbeddedMailObject> enthalten sind, um das Element zu identifizieren, das aus der Auflistung entfernt werden soll.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.Add(System.Web.UI.WebControls.EmbeddedMailObject)" />
        <altmember cref="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.Contains(System.Web.UI.WebControls.EmbeddedMailObject)" />
        <altmember cref="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.CopyTo(System.Web.UI.WebControls.EmbeddedMailObject[],System.Int32)" />
        <altmember cref="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.IndexOf(System.Web.UI.WebControls.EmbeddedMailObject)" />
        <altmember cref="M:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.Insert(System.Int32,System.Web.UI.WebControls.EmbeddedMailObject)" />
        <altmember cref="P:System.Web.UI.WebControls.EmbeddedMailObjectsCollection.Item(System.Int32)" />
      </Docs>
    </Member>
  </Members>
</Type>
