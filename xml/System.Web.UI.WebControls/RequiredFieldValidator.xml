<Type Name="RequiredFieldValidator" FullName="System.Web.UI.WebControls.RequiredFieldValidator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0290a9f69e55ad69f9bc16890cc0b2f10a2e705a" /><Meta Name="ms.sourcegitcommit" Value="a8ff98b48bda124cfcb2605f5da9b21bc6dcd791" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="02/14/2020" /><Meta Name="ms.locfileid" Value="77246644" /></Metadata><TypeSignature Language="C#" Value="public class RequiredFieldValidator : System.Web.UI.WebControls.BaseValidator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RequiredFieldValidator extends System.Web.UI.WebControls.BaseValidator" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.RequiredFieldValidator" />
  <TypeSignature Language="VB.NET" Value="Public Class RequiredFieldValidator&#xA;Inherits BaseValidator" />
  <TypeSignature Language="C++ CLI" Value="public ref class RequiredFieldValidator : System::Web::UI::WebControls::BaseValidator" />
  <TypeSignature Language="F#" Value="type RequiredFieldValidator = class&#xA;    inherit BaseValidator" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.BaseValidator</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.ToolboxData("&lt;{0}:RequiredFieldValidator runat="server" ErrorMessage="RequiredFieldValidator"&gt;&lt;/{0}:RequiredFieldValidator&gt;")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.Web.UI.ToolboxData("&lt;{0}:RequiredFieldValidator runat=server ErrorMessage="RequiredFieldValidator"&gt;&lt;/{0}:RequiredFieldValidator&gt;")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Legt das zugeordnete Eingabesteuerelement als Pflichtfeld fest.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 Verwenden Sie dieses Steuerelement, um ein Eingabe Steuerelement als Pflichtfeld zu verwenden. Das Eingabe Steuerelement schlägt die Validierung fehl, wenn der Wert nicht von der <xref:System.Web.UI.WebControls.RequiredFieldValidator.InitialValue%2A>-Eigenschaft geändert wird, nachdem der Fokus verloren ist.

 Mehrere Validierungs Steuerelemente können mit demselben Eingabe Steuerelement verknüpft werden. Beispielsweise kann ein <xref:System.Web.UI.WebControls.RequiredFieldValidator> verwendet werden, um die Eingabe für ein Steuerelement sicherzustellen, während gleichzeitig ein <xref:System.Web.UI.WebControls.RangeValidator> verwendet werden kann, um sicherzustellen, dass die Eingabe innerhalb eines angegebenen Datenbereichs liegt.

> [!NOTE]
>  Wenn Sie das <xref:System.Web.UI.WebControls.RequiredFieldValidator>-Steuerelement in einem <xref:System.Web.UI.UpdatePanel>-Steuerelement verwenden, stellen Sie sicher, dass sich das Validierungs Steuerelement und das Steuerelement, dem es zugeordnet ist, im gleichen Bereich befinden. Weitere Informationen zur Verwendung des <xref:System.Web.UI.UpdatePanel>-Steuer Elements für Teil Aktualisierungen von Seiten finden Sie unter [Übersicht über das Teil Rendering von Seiten](https://docs.microsoft.com/previous-versions/aspnet/bb386573(v=vs.100)).

 Weitere Informationen zu Validierungs Steuerelementen finden Sie unter <xref:System.Web.UI.WebControls.BaseValidator>.

## <a name="accessibility"></a>Barrierefreiheit
 Weitere Informationen zur Verwendung dieses Steuerelement so konfigurieren, dass sie Markup generiert, das Accessibility Standards entspricht, finden Sie unter [Barrierefreiheit in Visual Studio und ASP.NET](https://docs.microsoft.com/previous-versions/ms228004(v=vs.140)) und [ASP.NET-Steuerelemente und Barrierefreiheit](https://docs.microsoft.com/previous-versions/ms227996(v=vs.140)).



## Examples
 Im folgenden Beispiel wird veranschaulicht, wie das <xref:System.Web.UI.WebControls.RequiredFieldValidator>-Steuerelement verwendet wird, um sicherzustellen, dass der Benutzer einen Wert in das Textfeld eingibt.

> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).

 [!code-aspx-csharp[Classic RequiredFieldValidator Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic RequiredFieldValidator Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic RequiredFieldValidator Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic RequiredFieldValidator Example/VB/sourcevb.aspx#1)]
 [!code-xml[Classic RequiredFieldValidator Example#1](~/samples/snippets/common/VS_Snippets_WebNet/Classic RequiredFieldValidator Example/Common/source.xml#1)]

 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.RangeValidator" />
    <altmember cref="P:System.Web.UI.WebControls.RequiredFieldValidator.InitialValue" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RequiredFieldValidator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.RequiredFieldValidator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RequiredFieldValidator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.RequiredFieldValidator" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Verwenden Sie diesen Konstruktor, um eine neue Instanz der <xref:System.Web.UI.WebControls.RequiredFieldValidator>-Klasse zu erstellen und zu initialisieren.

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.RangeValidator" />
        <altmember cref="P:System.Web.UI.WebControls.RequiredFieldValidator.InitialValue" />
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.RequiredFieldValidator.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.AddAttributesToRender : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="requiredFieldValidator.AddAttributesToRender writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Ein <see cref="T:System.Web.UI.HtmlTextWriter" />, der den Ausgabestream zum Rendern des HTML-Inhalts auf dem Client darstellt.</param>
        <summary>Fügt dem angegebenen <see cref="T:System.Web.UI.HtmlTextWriter" />-Objekt die HTML-Attribute und -Stile hinzu, die für das Steuerelement gerendert werden sollen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie die <xref:System.Web.UI.WebControls.RequiredFieldValidator.AddAttributesToRender%2A>-Methode in einem benutzerdefinierten Server Steuerelement überschreiben, sodass die <xref:System.Web.UI.WebControls.RequiredFieldValidator> Fehlermeldung immer fett angezeigt wird.

> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).

 [!code-aspx-csharp[CustomRequiredFieldValidatorAddAttributesToRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomRequiredFieldValidatorAddAttributesToRender/CS/custom_requiredfieldvalidator_addattributestorendercs.aspx#1)]
 [!code-aspx-vb[CustomRequiredFieldValidatorAddAttributesToRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomRequiredFieldValidatorAddAttributesToRender/VB/custom_requiredfieldvalidator_addattributestorendervb.aspx#1)]
[!code-csharp[CustomRequiredFieldValidatorAddAttributesToRender#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomRequiredFieldValidatorAddAttributesToRender/CS/custom_requiredfieldvalidator_addattributestorender.cs#2)]
[!code-vb[CustomRequiredFieldValidatorAddAttributesToRender#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomRequiredFieldValidatorAddAttributesToRender/VB/custom_requiredfieldvalidator_addattributestorender.vb#2)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluateIsValid">
      <MemberSignature Language="C#" Value="protected override bool EvaluateIsValid ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool EvaluateIsValid() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.RequiredFieldValidator.EvaluateIsValid" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function EvaluateIsValid () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool EvaluateIsValid();" />
      <MemberSignature Language="F#" Value="override this.EvaluateIsValid : unit -&gt; bool" Usage="requiredFieldValidator.EvaluateIsValid " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wird während der Validierungsphase aufgerufen, wenn ASP.NET ein Web Form verarbeitet.</summary>
        <returns><see langword="true" />, wenn der Wert im Eingabesteuerelement gültig ist, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie die <xref:System.Web.UI.WebControls.RequiredFieldValidator.EvaluateIsValid%2A>-Methode in einem benutzerdefinierten Server Steuerelement überschreiben, sodass Sie immer `false` zurückgibt, wenn der Wert des <xref:System.Web.UI.WebControls.RequiredFieldValidator> NULL oder leer ist, und andernfalls immer `true` zurückgibt.

 [!code-aspx-csharp[CustomRequiredFieldValidatorEvaluateIsValid#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomRequiredFieldValidatorEvaluateIsValid/CS/custom_requiredfieldvalidator_evaluateisvalidcs.aspx#1)]
 [!code-aspx-vb[CustomRequiredFieldValidatorEvaluateIsValid#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomRequiredFieldValidatorEvaluateIsValid/VB/custom_requiredfieldvalidator_evaluateisvalidvb.aspx#1)]
[!code-csharp[CustomRequiredFieldValidatorEvaluateIsValid#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomRequiredFieldValidatorEvaluateIsValid/CS/custom_requiredfieldvalidator_evaluateisvalid.cs#2)]
[!code-vb[CustomRequiredFieldValidatorEvaluateIsValid#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomRequiredFieldValidatorEvaluateIsValid/VB/custom_requiredfieldvalidator_evaluateisvalid.vb#2)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitialValue">
      <MemberSignature Language="C#" Value="public string InitialValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InitialValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.RequiredFieldValidator.InitialValue" />
      <MemberSignature Language="VB.NET" Value="Public Property InitialValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InitialValue { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InitialValue : string with get, set" Usage="System.Web.UI.WebControls.RequiredFieldValidator.InitialValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Anfangswert des zugeordneten Eingabesteuerelements ab oder legt diesen fest.</summary>
        <value>Eine Zeichenfolge, die den Anfangswert des zugeordneten Eingabesteuerelements angibt. Der Standardwert lautet <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Verwenden Sie diese Eigenschaft, um den Anfangswert des Eingabe Steuer Elements anzugeben.

 Die Validierung schlägt nur fehl, wenn der Wert des zugeordneten Eingabe Steuer Elements diesem <xref:System.Web.UI.WebControls.RequiredFieldValidator.InitialValue%2A> entspricht, wenn der Fokus verloren geht.

> [!NOTE]
>  Die Zeichen folgen in der <xref:System.Web.UI.WebControls.RequiredFieldValidator.InitialValue%2A>-Eigenschaft und im Eingabe Steuerelement werden abgeschnitten, um vor und nach der Überprüfung zusätzliche Leerzeichen vor und nach der Zeichenfolge zu entfernen.

 Diese Eigenschaft kann nicht durch Designs oder Stylesheetdesigns festgelegt werden. Weitere Informationen finden Sie unter <xref:System.Web.UI.ThemeableAttribute> und [ASP.NET-Designs und Skins](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100)).



## Examples
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.RequiredFieldValidator.InitialValue%2A>-Eigenschaft verwendet wird, um sicherzustellen, dass der Benutzer einen Wert in das Textfeld eingibt.

> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).

 [!code-aspx-csharp[Classic RequiredFieldValidator.InitialValue Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic RequiredFieldValidator.InitialValue Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic RequiredFieldValidator.InitialValue Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic RequiredFieldValidator.InitialValue Example/VB/sourcevb.aspx#1)]

 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.RequiredFieldValidator.InitialValue%2A>-Eigenschaft verwendet wird, um sicherzustellen, dass der Benutzer ein Element aus dem Listenfeld auswählt.

 [!code-aspx-csharp[Classic RequiredFieldValidator.InitialValue Example#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic RequiredFieldValidator.InitialValue Example/CS/source2cs.aspx#2)]
 [!code-aspx-vb[Classic RequiredFieldValidator.InitialValue Example#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic RequiredFieldValidator.InitialValue Example/VB/source2vb.aspx#2)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
