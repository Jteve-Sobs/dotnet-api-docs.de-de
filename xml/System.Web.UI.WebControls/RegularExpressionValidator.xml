<Type Name="RegularExpressionValidator" FullName="System.Web.UI.WebControls.RegularExpressionValidator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="809e7cb9bd9697e3d28a889198e7aa1a507a905e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RegularExpressionValidator : System.Web.UI.WebControls.BaseValidator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RegularExpressionValidator extends System.Web.UI.WebControls.BaseValidator" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.RegularExpressionValidator" />
  <TypeSignature Language="VB.NET" Value="Public Class RegularExpressionValidator&#xA;Inherits BaseValidator" />
  <TypeSignature Language="C++ CLI" Value="public ref class RegularExpressionValidator : System::Web::UI::WebControls::BaseValidator" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.BaseValidator</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Web.UI.ToolboxData("&lt;{0}:RegularExpressionValidator runat="server" ErrorMessage="RegularExpressionValidator"&gt;&lt;/{0}:RegularExpressionValidator&gt;")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="60c14-101">Überprüft, ob der Wert eines zugeordneten Eingabesteuerelements mit dem von einem regulären Ausdruck angegebenen Muster übereinstimmt.</span>
      <span class="sxs-lookup">
        <span data-stu-id="60c14-101">Validates whether the value of an associated input control matches the pattern specified by a regular expression.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60c14-102">Die <xref:System.Web.UI.WebControls.RegularExpressionValidator> Steuerelement überprüft, ob der Wert eines Eingabesteuerelements mit einem Muster, die definiert, die von einem regulären Ausdruck übereinstimmt.</span><span class="sxs-lookup"><span data-stu-id="60c14-102">The <xref:System.Web.UI.WebControls.RegularExpressionValidator> control checks whether the value of an input control matches a pattern defined by a regular expression.</span></span> <span data-ttu-id="60c14-103">Diese Art der Validierung können Sie prüfen, vorhersagbare Sequenzen von Zeichen, z. B. die e-Mail-Adressen, Telefonnummern und Postleitzahlen.</span><span class="sxs-lookup"><span data-stu-id="60c14-103">This type of validation allows you to check for predictable sequences of characters, such as those in email addresses, telephone numbers, and postal codes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="60c14-104">Überprüfung erfolgreich ist, wenn das Eingabesteuerelement leer ist.</span><span class="sxs-lookup"><span data-stu-id="60c14-104">Validation succeeds if the input control is empty.</span></span> <span data-ttu-id="60c14-105">Wenn ein Wert für das zugeordnete Eingabesteuerelement erforderlich ist, verwenden Sie eine <xref:System.Web.UI.WebControls.RequiredFieldValidator> zusätzlich zum Steuern der <xref:System.Web.UI.WebControls.RegularExpressionValidator> Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="60c14-105">If a value is required for the associated input control, use a <xref:System.Web.UI.WebControls.RequiredFieldValidator> control in addition to the <xref:System.Web.UI.WebControls.RegularExpressionValidator> control.</span></span>  
  
 <span data-ttu-id="60c14-106">Serverseitige und clientseitige Validierung werden ausgeführt, es sei denn, die clientseitige Validierung wird vom Browser nicht unterstützt oder die clientseitige Validierung ist explizit deaktiviert (durch Festlegen der <xref:System.Web.UI.WebControls.BaseValidator.EnableClientScript%2A> Eigenschaft `false`).</span><span class="sxs-lookup"><span data-stu-id="60c14-106">Both server-side and client-side validation are performed unless the browser does not support client-side validation or client-side validation is explicitly disabled (by setting the <xref:System.Web.UI.WebControls.BaseValidator.EnableClientScript%2A> property to `false`).</span></span>  
  
 <span data-ttu-id="60c14-107">Die Validierung für reguläre Ausdrücke-Implementierung unterscheidet sich leicht auf dem Client als auf dem Server.</span><span class="sxs-lookup"><span data-stu-id="60c14-107">The regular-expression validation implementation is slightly different on the client than on the server.</span></span> <span data-ttu-id="60c14-108">Auf dem Client wird die JScript-Syntax für reguläre Ausdrücke verwendet.</span><span class="sxs-lookup"><span data-stu-id="60c14-108">On the client, JScript regular-expression syntax is used.</span></span> <span data-ttu-id="60c14-109">Auf dem Server <xref:System.Text.RegularExpressions.Regex?displayProperty=nameWithType> -Syntax wird verwendet.</span><span class="sxs-lookup"><span data-stu-id="60c14-109">On the server, <xref:System.Text.RegularExpressions.Regex?displayProperty=nameWithType> syntax is used.</span></span> <span data-ttu-id="60c14-110">Da JScript-Syntax für reguläre Ausdrücke sind eine Teilmenge der <xref:System.Text.RegularExpressions.Regex?displayProperty=nameWithType> Syntax, es wird empfohlen, dass die JScript-Syntax für reguläre Ausdrücke verwendet werden, um auf dem Client und dem Server die gleichen Ergebnisse liefert.</span><span class="sxs-lookup"><span data-stu-id="60c14-110">Since JScript regular expression syntax is a subset of <xref:System.Text.RegularExpressions.Regex?displayProperty=nameWithType> syntax, it is recommended that JScript regular-expression syntax be used in order to yield the same results on both the client and the server.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="60c14-111">Bei Verwendung der <xref:System.Web.UI.WebControls.RegularExpressionValidator> -Steuerelement innerhalb einer <xref:System.Web.UI.UpdatePanel> steuern, stellen Sie sicher, dass das Validierungssteuerelement und das Steuerelement, das diesem zugeordnet ist, im gleichen Bereich sind.</span><span class="sxs-lookup"><span data-stu-id="60c14-111">When you use the <xref:System.Web.UI.WebControls.RegularExpressionValidator> control inside an <xref:System.Web.UI.UpdatePanel> control, make sure that the validator control and the control it is associated with are in the same panel.</span></span> <span data-ttu-id="60c14-112">Weitere Informationen zum Verwenden der <xref:System.Web.UI.UpdatePanel> für Aktualisierungen von Teilseiten steuern, finden Sie unter [Teilrendering von Seiten Rendering Overview](http://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49).</span><span class="sxs-lookup"><span data-stu-id="60c14-112">For more information about using the <xref:System.Web.UI.UpdatePanel> control for partial-page updates, see [Partial-Page Rendering Overview](http://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49).</span></span>  
  
 <span data-ttu-id="60c14-113">Weitere Informationen über Validierungssteuerelemente finden Sie unter <xref:System.Web.UI.WebControls.BaseValidator>.</span><span class="sxs-lookup"><span data-stu-id="60c14-113">For additional information about validation controls, see <xref:System.Web.UI.WebControls.BaseValidator>.</span></span> <span data-ttu-id="60c14-114">Weitere Informationen zu regulären Ausdrücken finden Sie unter [reguläre Ausdrücke von .NET Framework](~/docs/standard/base-types/regular-expressions.md).</span><span class="sxs-lookup"><span data-stu-id="60c14-114">For more information on regular expressions, see [.NET Framework Regular Expressions](~/docs/standard/base-types/regular-expressions.md).</span></span>  
  
## <a name="accessibility"></a><span data-ttu-id="60c14-115">Zugriff</span><span class="sxs-lookup"><span data-stu-id="60c14-115">Accessibility</span></span>  
 <span data-ttu-id="60c14-116">Weitere Informationen dazu, wie das Steuerelement so konfigurieren, dass er Markup generiert, das den Accessibility Standards entspricht, finden Sie unter [Barrierefreiheit in Visual Studio und ASP.NET](http://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13) und [ASP.NET-Steuerelemente und Barrierefreiheit](http://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).</span><span class="sxs-lookup"><span data-stu-id="60c14-116">For information about how to configure this control so that it generates markup that conforms to accessibility standards, see [Accessibility in Visual Studio and ASP.NET](http://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13) and [ASP.NET Controls and Accessibility](http://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="60c14-117">Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.RegularExpressionValidator> -Steuerelement eine fünfstellige Postleitzahl zu überprüfen.</span><span class="sxs-lookup"><span data-stu-id="60c14-117">The following example demonstrates how to use the <xref:System.Web.UI.WebControls.RegularExpressionValidator> control to validate a five-digit postal code.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="60c14-118">Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen.</span><span class="sxs-lookup"><span data-stu-id="60c14-118">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="60c14-119">Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten.</span><span class="sxs-lookup"><span data-stu-id="60c14-119">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="60c14-120">Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span><span class="sxs-lookup"><span data-stu-id="60c14-120">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[Classic RegularExpressionValidator Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic RegularExpressionValidator Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic RegularExpressionValidator Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic RegularExpressionValidator Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.BaseValidator" />
    <altmember cref="P:System.Web.UI.WebControls.BaseValidator.EnableClientScript" />
    <altmember cref="T:System.Text.RegularExpressions.Regex" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegularExpressionValidator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.RegularExpressionValidator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegularExpressionValidator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="60c14-121">Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.RegularExpressionValidator" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c14-121">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.RegularExpressionValidator" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.WebControls.BaseValidator" />
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.EnableClientScript" />
        <altmember cref="T:System.Text.RegularExpressions.Regex" />
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.RegularExpressionValidator.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="60c14-122">Ein <see cref="T:System.Web.UI.HtmlTextWriter" />, der den Ausgabestream für das Rendering von HTML-Inhalten auf dem Client darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c14-122">An <see cref="T:System.Web.UI.HtmlTextWriter" /> that represents the output stream to render HTML content on the client.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="60c14-123">Fügt dem angegebenen <see cref="T:System.Web.UI.HtmlTextWriter" />-Objekt die für das Steuerelement zu rendernden HTML-Attribute und -Stile hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c14-123">Adds to the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object the HTML attributes and styles that need to be rendered for the control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="60c14-124">Das folgende Codebeispiel veranschaulicht das Überschreiben der <xref:System.Web.UI.WebControls.RegularExpressionValidator.AddAttributesToRender%2A> -Methode in ein benutzerdefiniertes Steuerelement, damit die <xref:System.Web.UI.WebControls.RegularExpressionValidator> Fehlermeldung immer fett formatiert angezeigt.</span><span class="sxs-lookup"><span data-stu-id="60c14-124">The following code example demonstrates how to override the <xref:System.Web.UI.WebControls.RegularExpressionValidator.AddAttributesToRender%2A> method in a custom server control so that the <xref:System.Web.UI.WebControls.RegularExpressionValidator> error message always displays as bold.</span></span>  
  
 [!code-csharp[CustomRegularExpressionValidatorAddAttributesToRender#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomRegularExpressionValidatorAddAttributesToRender/CS/custom_regularexpressionvalidator_addattributestorender.cs#2)]
 [!code-vb[CustomRegularExpressionValidatorAddAttributesToRender#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomRegularExpressionValidatorAddAttributesToRender/VB/custom_regularexpressionvalidator_addattributestorender.vb#2)]  
  
 <span data-ttu-id="60c14-125">Im folgenden Codebeispiel wird veranschaulicht, wie die Verwendung der `CustomRegularExpressionValidatorAddAttributesToRender` Steuerelements, die im vorherigen Beispiel, in einer Web Forms-Seite definiert.</span><span class="sxs-lookup"><span data-stu-id="60c14-125">The following code example demonstrates how to use the use the `CustomRegularExpressionValidatorAddAttributesToRender` control, defined in the preceding example, on a Web Forms page.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="60c14-126">Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen.</span><span class="sxs-lookup"><span data-stu-id="60c14-126">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="60c14-127">Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten.</span><span class="sxs-lookup"><span data-stu-id="60c14-127">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="60c14-128">Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span><span class="sxs-lookup"><span data-stu-id="60c14-128">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[CustomRegularExpressionValidatorAddAttributesToRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomRegularExpressionValidatorAddAttributesToRender/CS/custom_regularexpressionvalidator_addattributestorendercs.aspx#1)]
 [!code-aspx-vb[CustomRegularExpressionValidatorAddAttributesToRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomRegularExpressionValidatorAddAttributesToRender/VB/custom_regularexpressionvalidator_addattributestorendervb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.BaseValidator" />
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.EnableClientScript" />
        <altmember cref="T:System.Text.RegularExpressions.Regex" />
      </Docs>
    </Member>
    <Member MemberName="EvaluateIsValid">
      <MemberSignature Language="C#" Value="protected override bool EvaluateIsValid ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool EvaluateIsValid() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.RegularExpressionValidator.EvaluateIsValid" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function EvaluateIsValid () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool EvaluateIsValid();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="60c14-129">Gibt an, ob der Wert im Eingabesteuerelement gültig ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c14-129">Indicates whether the value in the input control is valid.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="60c14-130">
            <see langword="true" />, wenn der Wert im Eingabesteuerelement gültig ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c14-130">
              <see langword="true" /> if the value in the input control is valid; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="60c14-131">Das folgende Codebeispiel veranschaulicht das Überschreiben der <xref:System.Web.UI.WebControls.RegularExpressionValidator.EvaluateIsValid%2A> Methode in einem benutzerdefinierten steuern, sodass es immer den Wert für den Ausdruck für eine Übereinstimmung in prüft eine <xref:System.Web.UI.WebControls.RegularExpressionValidator>.</span><span class="sxs-lookup"><span data-stu-id="60c14-131">The following code example demonstrates how to override the <xref:System.Web.UI.WebControls.RegularExpressionValidator.EvaluateIsValid%2A> method in a custom server control so that it always checks the value against the expression for a match in a <xref:System.Web.UI.WebControls.RegularExpressionValidator>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="60c14-132">Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen.</span><span class="sxs-lookup"><span data-stu-id="60c14-132">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="60c14-133">Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten.</span><span class="sxs-lookup"><span data-stu-id="60c14-133">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="60c14-134">Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span><span class="sxs-lookup"><span data-stu-id="60c14-134">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-csharp[CustomRegularExpressionValidatorEvaluateIsValid#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomRegularExpressionValidatorEvaluateIsValid/CS/custom_regularexpressionvalidator_evaluateisvalid.cs#2)]
 [!code-vb[CustomRegularExpressionValidatorEvaluateIsValid#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomRegularExpressionValidatorEvaluateIsValid/VB/custom_regularexpressionvalidator_evaluateisvalid.vb#2)]  
  
 <span data-ttu-id="60c14-135">Im folgenden Codebeispiel wird veranschaulicht, wie die `CustomRegularExpressionValidatorEvaluateIsValid` Steuerelements, die im vorherigen Beispiel, in einer Web Forms-Seite definiert.</span><span class="sxs-lookup"><span data-stu-id="60c14-135">The following code example demonstrates how to use the `CustomRegularExpressionValidatorEvaluateIsValid` control, defined in the preceding example, on a Web Forms page.</span></span>  
  
 [!code-aspx-csharp[CustomRegularExpressionValidatorEvaluateIsValid#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomRegularExpressionValidatorEvaluateIsValid/CS/custom_regularexpressionvalidator_evaluateisvalidcs.aspx#1)]
 [!code-aspx-vb[CustomRegularExpressionValidatorEvaluateIsValid#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomRegularExpressionValidatorEvaluateIsValid/VB/custom_regularexpressionvalidator_evaluateisvalidvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.BaseValidator" />
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.EnableClientScript" />
        <altmember cref="T:System.Text.RegularExpressions.Regex" />
      </Docs>
    </Member>
    <Member MemberName="MatchTimeout">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; MatchTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; MatchTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.RegularExpressionValidator.MatchTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property MatchTimeout As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;int&gt; MatchTimeout { Nullable&lt;int&gt; get(); void set(Nullable&lt;int&gt; value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="60c14-136">Dient zum Abrufen oder Festlegen des maximalen Zeitraums zum Ausführen eines einzelnen übereinstimmenden Vorgangs, ehe das Zeitlimit des Vorgangs überschritten wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c14-136">Gets or set the maximum time interval to execute a single matching operation before the operation times out.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="60c14-137">Der maximale Zeitraum zum Ausführen eines einzelnen übereinstimmenden Vorgangs, ehe das Zeitlimit des Vorgangs überschritten wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c14-137">The maximum time interval to execute a single matching operation before the operation times out.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationExpression">
      <MemberSignature Language="C#" Value="public string ValidationExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValidationExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.RegularExpressionValidator.ValidationExpression" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidationExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ValidationExpression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.RegexTypeEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="60c14-138">Ruft den regulären Ausdruck ab, der das Muster für die Überprüfung eines Felds angibt, oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c14-138">Gets or sets the regular expression that determines the pattern used to validate a field.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="60c14-139">Eine Zeichenfolge, die den regulären Ausdruck für die Überprüfung des Formats eines Felds angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c14-139">A string that specifies the regular expression used to validate a field for format.</span>
          </span>
          <span data-ttu-id="60c14-140">Der Standardwert ist <see cref="F:System.String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c14-140">The default is <see cref="F:System.String.Empty" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60c14-141">Verwenden Sie diese Eigenschaft, um das Muster zum Prüfen auf vorhersagbare Sequenzen von Zeichen, z. B. die Sozialversicherungsnummern enthalten, e-Mail-Adressen, Telefonnummern und Postleitzahlen anzugeben.</span><span class="sxs-lookup"><span data-stu-id="60c14-141">Use this property to specify the pattern used to check for predictable sequences of characters, such as those in social security numbers, email addresses, telephone numbers, and postal codes.</span></span>  
  
 <span data-ttu-id="60c14-142">Der <xref:System.Web.UI.WebControls.RegularExpressionValidator> führt keine Validierung für eine leere Zeichenfolge aus.</span><span class="sxs-lookup"><span data-stu-id="60c14-142">The <xref:System.Web.UI.WebControls.RegularExpressionValidator> does not perform validation on an empty string.</span></span> <span data-ttu-id="60c14-143">Wenn die Zeichenfolge, die zu überprüfende leer ist ggf., verwenden Sie die <xref:System.Web.UI.WebControls.RequiredFieldValidator> als auch die <xref:System.Web.UI.WebControls.RegularExpressionValidator>.</span><span class="sxs-lookup"><span data-stu-id="60c14-143">If the string you are testing might be empty, use the <xref:System.Web.UI.WebControls.RequiredFieldValidator> as well as the <xref:System.Web.UI.WebControls.RegularExpressionValidator>.</span></span>  
  
 <span data-ttu-id="60c14-144">Weitere Informationen zu regulären Ausdrücken finden Sie unter [reguläre Ausdrücke von .NET Framework](~/docs/standard/base-types/regular-expressions.md).</span><span class="sxs-lookup"><span data-stu-id="60c14-144">For more information on regular expressions, see [.NET Framework Regular Expressions](~/docs/standard/base-types/regular-expressions.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="60c14-145">Wenn Sie Probleme mit Musterabgleich Konstrukte auftreten, versuchen Sie, den Ausdruck mit einzuschließen "^ ("und") $".</span><span class="sxs-lookup"><span data-stu-id="60c14-145">If you experience problems with pattern matching constructs, try wrapping the expression with "^(" and ")$".</span></span> <span data-ttu-id="60c14-146">Z. B. "eine&#124;Ab" wird "^ (eine&#124;Ab) $".</span><span class="sxs-lookup"><span data-stu-id="60c14-146">For example, "a&#124;ab" becomes "^(a&#124;ab)$".</span></span>  
  
 <span data-ttu-id="60c14-147">Diese Eigenschaft kann nicht durch Designs oder Stylesheetdesigns festgelegt werden.</span><span class="sxs-lookup"><span data-stu-id="60c14-147">This property cannot be set by themes or style sheet themes.</span></span> <span data-ttu-id="60c14-148">Weitere Informationen finden Sie unter <xref:System.Web.UI.ThemeableAttribute> und [ASP.NET-Designs und Skins](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).</span><span class="sxs-lookup"><span data-stu-id="60c14-148">For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="60c14-149">Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.RegularExpressionValidator.ValidationExpression%2A> Eigenschaft, um ein Feld mit fünf Ziffern zu überprüfen.</span><span class="sxs-lookup"><span data-stu-id="60c14-149">The following example demonstrates how to use the <xref:System.Web.UI.WebControls.RegularExpressionValidator.ValidationExpression%2A> property to validate a field with five numeric digits.</span></span> <span data-ttu-id="60c14-150">Bei der <xref:System.Web.UI.WebControls.Button> Steuerelement geklickt wird, das resultierende <xref:System.Web.UI.WebControls.Button.OnClick%2A> -Ereignishandler prüft die <xref:System.Web.UI.Page.IsValid%2A> Eigenschaft der <xref:System.Web.UI.Page> um zu bestimmen, ob den Text in der <xref:System.Web.UI.WebControls.TextBox> erfüllt den regulären Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="60c14-150">When the <xref:System.Web.UI.WebControls.Button> control is clicked, the resulting <xref:System.Web.UI.WebControls.Button.OnClick%2A> event handler checks the <xref:System.Web.UI.Page.IsValid%2A> property of the <xref:System.Web.UI.Page> to determine whether the text in the <xref:System.Web.UI.WebControls.TextBox> satisfies the regular expression.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="60c14-151">Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen.</span><span class="sxs-lookup"><span data-stu-id="60c14-151">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="60c14-152">Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten.</span><span class="sxs-lookup"><span data-stu-id="60c14-152">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="60c14-153">Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span><span class="sxs-lookup"><span data-stu-id="60c14-153">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[Classic RegularExpressionValidator Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic RegularExpressionValidator Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic RegularExpressionValidator Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic RegularExpressionValidator Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="60c14-154">Der reguläre Ausdruck ist nicht korrekt gebildet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c14-154">The regular expression is not properly formed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>