<Type Name="SqlDataSourceView" FullName="System.Web.UI.WebControls.SqlDataSourceView">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="56793326c9289dc8571df36d7fa8e9d17af807b3" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30600724" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SqlDataSourceView : System.Web.UI.DataSourceView, System.Web.UI.IStateManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlDataSourceView extends System.Web.UI.DataSourceView implements class System.Web.UI.IStateManager" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.SqlDataSourceView" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlDataSourceView&#xA;Inherits DataSourceView&#xA;Implements IStateManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlDataSourceView : System::Web::UI::DataSourceView, System::Web::UI::IStateManager" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.DataSourceView</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IStateManager</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Unterstützt das <see cref="T:System.Web.UI.WebControls.SqlDataSource" />-Steuerelement und stellt eine Schnittstelle für datengebundene Steuerelemente zum Ausführen von SQL-Datenvorgängen mit relationalen Datenbanken bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.SqlDataSourceView> Klasse dient in erster Linie, die von datengebundenen Steuerelementen und nicht als programmierbares Objekt im Seitencode verwendet werden.  
  
 ASP.NET-Datenquellensteuerelemente enthalten eine oder mehrere Listen der Daten, die vom Datenquellensicht-Objekte dargestellt. Die <xref:System.Web.UI.WebControls.SqlDataSourceView> -Klasse erweitert die <xref:System.Web.UI.DataSourceView> Klasse, das die Funktionen des definiert die <xref:System.Web.UI.WebControls.SqlDataSource> Steuerelement mit der er zugeordnet ist, und das Lernprogramm zu Data-Funktionen für das Datenquellensteuerelement implementiert. Die <xref:System.Web.UI.WebControls.SqlDataSourceView> Klasse implementiert die Funktionalität der Daten für die <xref:System.Web.UI.WebControls.SqlDataSource> zu steuern, einschließlich der <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>, <xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A>, <xref:System.Web.UI.WebControls.SqlDataSourceView.Insert%2A>, und <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> Vorgänge, Sortierung, Filterung und Verwalten von Einstellungen, die in einer Ansicht beibehalten werden Status.  
  
 Obwohl die <xref:System.Web.UI.WebControls.SqlDataSourceView> Objekt wird nicht direkt verfügbar gemacht, Entwicklern von der <xref:System.Web.UI.WebControls.SqlDataSource> -Steuerelement, viele Eigenschaften sind. Die meisten grundlegenden eine Datenquellensicht ausgeführten Vorgangs ist das Abrufen von Daten aus der zugrunde liegenden Datenbank mithilfe der <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> Methode, der abgerufen wird eine <xref:System.Collections.IEnumerable> Auflistung von Datenelementen. Die <xref:System.Web.UI.WebControls.SqlDataSourceView> Klasse implementiert, Abrufen von Daten aus relationalen Datenbanken, die mit SQL-Abfragen. Die SQL-Abfragen können für eine größere Flexibilität und Sicherheit parametrisiert werden. Die folgenden Datenabrufmethoden, Eigenschaften und Ereignisse werden von implementiert die <xref:System.Web.UI.WebControls.SqlDataSourceView> und verfügbar gemacht werden direkt über seine <xref:System.Web.UI.WebControls.SqlDataSource> Steuerelement Entwickler von Seiten und andere Aufrufer:  
  
-   Die <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>-Eigenschaft.  
  
-   Die <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>-Eigenschaft.  
  
-   Die <xref:System.Web.UI.WebControls.SqlDataSource.Selecting> Ereignis  
  
-   Die <xref:System.Web.UI.WebControls.SqlDataSource.Selected> Ereignis  
  
 Die <xref:System.Web.UI.WebControls.SqlDataSourceView> -Objekt unterstützt das Aktualisieren von Daten in einer relationalen Datenbank mit SQL-Befehlen. Die SQL-Befehle können für eine größere Flexibilität und Sicherheit parametrisiert werden. Datengebundene Steuerelemente, z. B. die <xref:System.Web.UI.WebControls.GridView> und <xref:System.Web.UI.WebControls.DetailsView>, kann konfiguriert werden, zum Durchführen von Updates automatisch mithilfe der <xref:System.Web.UI.WebControls.SqlDataSourceView>, während andere Steuerelemente nicht. Die folgenden Methoden, Eigenschaften und Ereignisse werden von implementiert die <xref:System.Web.UI.WebControls.SqlDataSourceView> und verfügbar gemacht werden direkt über seine <xref:System.Web.UI.WebControls.SqlDataSource> Steuerelement Entwickler von Seiten und andere Aufrufer:  
  
-   Die <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>-Eigenschaft.  
  
-   Die <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A>-Eigenschaft.  
  
-   Die <xref:System.Web.UI.WebControls.SqlDataSource.Updating> Ereignis  
  
-   Die <xref:System.Web.UI.WebControls.SqlDataSource.Updated> Ereignis  
  
 Die <xref:System.Web.UI.WebControls.SqlDataSourceView> unterstützt das Einfügen von neuen Zeilen mit Daten in einer relationalen Datenbank. Die SQL-Befehle, die im angegebenen die <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> Eigenschaft kann für eine größere Flexibilität und Sicherheit parametrisiert werden. Datengebundene Steuerelemente, z. B. die <xref:System.Web.UI.WebControls.GridView> und <xref:System.Web.UI.WebControls.DetailsView>, kann so konfiguriert werden, dass Einfügevorgänge automatisch mithilfe der <xref:System.Web.UI.WebControls.SqlDataSourceView>, während andere Steuerelemente nicht möglich. Fügen Sie die folgenden Methoden, Eigenschaften und Ereignisse werden implementiert, indem die <xref:System.Web.UI.WebControls.SqlDataSourceView> und verfügbar gemacht werden direkt über seine <xref:System.Web.UI.WebControls.SqlDataSource> Steuerelement Entwickler von Seiten und andere Aufrufer:  
  
-   Die <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A>-Eigenschaft.  
  
-   Die <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A>-Eigenschaft.  
  
-   Die <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> Ereignis  
  
-   Die <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> Ereignis  
  
 Die <xref:System.Web.UI.WebControls.SqlDataSourceView> Objekt auch unterstützt, die Löschen von Daten aus einer relationalen Datenbank. Wie bei anderen Befehlen, die SQL-Befehle, die angegeben werden, der <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> Eigenschaft kann für eine größere Flexibilität und Sicherheit parametrisiert werden. Datengebundene Steuerelemente, z. B. die <xref:System.Web.UI.WebControls.GridView> und <xref:System.Web.UI.WebControls.DetailsView>, kann konfiguriert werden, zum Durchführen von Löschvorgängen, die automatisch mit der <xref:System.Web.UI.WebControls.SqlDataSourceView>, während andere Steuerelemente nicht. Folgende löschen Methoden, Eigenschaften und Ereignisse werden implementiert, indem die <xref:System.Web.UI.WebControls.SqlDataSourceView> und verfügbar gemacht werden direkt über seine <xref:System.Web.UI.WebControls.SqlDataSource> Steuerelement Entwickler von Seiten und andere Aufrufer:  
  
-   Die <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A>-Eigenschaft.  
  
-   Die <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A>-Eigenschaft.  
  
-   Die <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> Ereignis  
  
-   Die <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> Ereignis  
  
 Datenabruf ist leistungsfähiger, wenn Klausel, die zum Filtern der Daten beim Abrufen von Daten verwendet wird, dynamisch ist. Das heißt, eine SQL-Abfrage mit einem statischen, in denen Klausel nicht ist weniger flexibel und leistungsfähig wie eine SQL-Abfrage, in denen die Werte in der WHERE-Klausel an Werte gebunden sind, die sich ändern kann z. B. Werte, die in die Steuerelemente auf einer Web Forms-Seite angezeigt werden. Anstatt das Neuerstellen eines SQL abzufragen und Festlegen der <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> Eigenschaft auf jeder Seite laden, können Sie die <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> und <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> Eigenschaften dynamische Filterung zum Abrufen von Daten angewendet. Diese Eigenschaften werden implementiert, indem die <xref:System.Web.UI.WebControls.SqlDataSourceView> und verfügbar gemacht werden direkt über seine <xref:System.Web.UI.WebControls.SqlDataSource> Steuerelement datengebundene Steuerelemente und andere Aufrufer.  
  
 Sie können die Daten, die Sie mit abrufen Sortieren der <xref:System.Web.UI.WebControls.SqlDataSource> -Steuerelements durch Hinzufügen einer ORDER BY-Klausel, die bewirkt, dass die Datenbank die Sortierung für die Sie beim Abrufen von Daten oder nach dem Datenabruf im Arbeitsspeicher ist. Können Sie einen Sortierausdruck zum Angeben der <xref:System.Web.UI.WebControls.SqlDataSourceView> durch Festlegen der <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A> Eigenschaft von der <xref:System.Web.UI.DataSourceSelectArguments> -Objekt, das übergeben wird die <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> Methode. Die Syntax für die <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A> Eigenschaft ist identisch mit der Syntax für eine <xref:System.Data.DataView.Sort%2A?displayProperty=nameWithType> Eigenschaft. Wenn Sie eine gespeicherte Prozedur verwenden, um Daten abzurufen, können Sie auch die <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> Eigenschaft, um einen Parameter anzugeben, die speziell für das Sortieren der Ergebnisse des Aufrufs einer gespeicherten Prozedur verwendet wird.  
  
 Wenn mehrere Benutzer gleichzeitig die Datenbank ändern kann, besteht die Wahrscheinlichkeit Parallelitätskonflikt. Die <xref:System.Web.UI.WebControls.SqlDataSource> -Steuerelement Steuerelemente Parallelität durch die <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection?displayProperty=nameWithType> Eigenschaft. Die Funktionen sind implementiert die <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection?displayProperty=nameWithType> Eigenschaft.  
  
 Wie viele andere Web-Steuerelemente der <xref:System.Web.UI.WebControls.SqlDataSourceView> implementiert die <xref:System.Web.UI.IStateManager> Schnittstelle und verwendet den Ansichtszustand um Datenbankzustands Seite anforderungsübergreifend nachzuverfolgen. Implementierungen von der <xref:System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState%2A> und -Eigenschaft und die <xref:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState%2A>, <xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A>, und <xref:System.Web.UI.WebControls.SqlDataSourceView.TrackViewState%2A> werden Methoden bereitgestellt für die um Verfolgung des Ansichtszustands für das Steuerelement zu aktivieren. Weitere Informationen finden Sie unter [ASP.NET State Management Overview](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce).  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSource" />
    <altmember cref="T:System.Web.UI.DataSourceView" />
    <altmember cref="T:System.Web.UI.WebControls.AccessDataSourceView" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataSourceView (System.Web.UI.WebControls.SqlDataSource owner, string name, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.SqlDataSource owner, string name, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.#ctor(System.Web.UI.WebControls.SqlDataSource,System.String,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As SqlDataSource, name As String, context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDataSourceView(System::Web::UI::WebControls::SqlDataSource ^ owner, System::String ^ name, System::Web::HttpContext ^ context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.WebControls.SqlDataSource" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="owner">Das Datenquellen-Steuerelement, dem die <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> zugeordnet ist.</param>
        <param name="name">Ein eindeutiger Name für die Datenquellenansicht, die innerhalb des Gültigkeitsbereichs des besitzenden Datenquellen-Steuerelements liegt.</param>
        <param name="context">Der aktuelle <see cref="T:System.Web.HttpContext" />.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" />-Klasse, die das angegebene <see cref="T:System.Web.UI.WebControls.SqlDataSource" />-Steuerelement als Besitzer der aktuellen Ansicht festlegt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.SqlDataSourceView.%23ctor%2A> Konstruktor wird aufgerufen, indem Sie die <xref:System.Web.UI.WebControls.SqlDataSource.GetView%2A> Methode, um eine neue Instanz der einer Datenquellensicht mit dem angegebenen zurückzugeben `name` Parameter. Die <xref:System.Web.UI.WebControls.SqlDataSource> Steuerelement bezieht sich auf nur eine <xref:System.Web.UI.WebControls.SqlDataSourceView> Objekt jederzeit und immer den Namen der Ansicht `Table`, obwohl diese jeweils ist die <xref:System.Web.UI.WebControls.SqlDataSource> steuern, nicht die <xref:System.Web.UI.WebControls.SqlDataSourceView>. Sie können außer Kraft setzen die <xref:System.Web.UI.WebControls.SqlDataSource.GetView%2A> -Methode zur Unterstützung von Sichten mit eine andere Namenskonvention.  
  
 Die <xref:System.Web.HttpContext> -Objekt, das übergeben wird, indem Sie die `context` Parameter wird von der Datenquellensicht zum Zugreifen auf Parameter-Objekte verwendet, z. B. die <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> und <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A> Eigenschaften.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.GetView(System.String)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.GetViewNames" />
      </Docs>
    </Member>
    <Member MemberName="CancelSelectOnNullParameter">
      <MemberSignature Language="C#" Value="public bool CancelSelectOnNullParameter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CancelSelectOnNullParameter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.CancelSelectOnNullParameter" />
      <MemberSignature Language="VB.NET" Value="Public Property CancelSelectOnNullParameter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CancelSelectOnNullParameter { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob ein Datenabrufvorgang abgebrochen werden soll, wenn einer der in der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />-Auflistung enthaltenen Parameter mit <see langword="null" /> ausgewertet wird, oder legt diesen Wert fest.</summary>
        <value>
          <see langword="true" />, wenn ein Datenabrufvorgang abgebrochen werden soll, wenn ein in der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />-Auflistung enthaltener Parameter mit <see langword="null" /> ausgewertet wird, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Wert, der die <xref:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter%2A> Eigenschaft im Ansichtszustand gespeichert wird.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter" />
      </Docs>
    </Member>
    <Member MemberName="CanDelete">
      <MemberSignature Language="C#" Value="public override bool CanDelete { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanDelete" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.CanDelete" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanDelete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanDelete { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" />-Objekt, das dem aktuellen <see cref="T:System.Web.UI.WebControls.SqlDataSource" />-Steuerelement zugeordnet ist, den Löschvorgang unterstützt.</summary>
        <value>
          <see langword="true" />, wenn der Vorgang unterstützt wird, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.SqlDataSourceView.CanDelete%2A> -Eigenschaft gibt `true` Wenn die <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> festgelegt wird. Ein Löschvorgang konnte weiterhin fehl, wenn die Dateneigenschaften nicht festgelegt sind oder nicht ordnungsgemäß festgelegt sind.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="CanInsert">
      <MemberSignature Language="C#" Value="public override bool CanInsert { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanInsert" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.CanInsert" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanInsert As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanInsert { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" />-Objekt, das dem aktuellen <see cref="T:System.Web.UI.WebControls.SqlDataSource" />-Steuerelement zugeordnet ist, den Einfügevorgang unterstützt.</summary>
        <value>
          <see langword="true" />, wenn der Vorgang unterstützt wird, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.SqlDataSourceView.CanInsert%2A> -Eigenschaft gibt `true` Wenn die <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> festgelegt wird. Ein Einfügevorgang kann dennoch fehlschlagen, wenn alle Data-Eigenschaften nicht festgelegt sind oder nicht ordnungsgemäß festgelegt sind.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="CanPage">
      <MemberSignature Language="C#" Value="public override bool CanPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanPage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.CanPage" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanPage As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanPage { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das Paging der abgerufenen Daten vom <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" />-Objekt unterstützt wird, das dem aktuellen <see cref="T:System.Web.UI.WebControls.SqlDataSource" />-Objekt zugeordnet ist.</summary>
        <value>
          <see langword="false" /> in allen Fällen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.SqlDataSourceView> Objekt werden keine Auslagerung unterstützt.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.StartRowIndex" />
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.MaximumRows" />
      </Docs>
    </Member>
    <Member MemberName="CanRetrieveTotalRowCount">
      <MemberSignature Language="C#" Value="public override bool CanRetrieveTotalRowCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRetrieveTotalRowCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRetrieveTotalRowCount As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRetrieveTotalRowCount { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" />-Objekt, das dem aktuellen <see cref="T:System.Web.UI.WebControls.SqlDataSource" />-Steuerelement zugeordnet ist, das Abrufen der Gesamtanzahl der Datenzeilen (zusätzlich zum Datensatz) unterstützt.</summary>
        <value>
          <see langword="false" /> in allen Fällen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.SqlDataSourceView> Objekt Abrufen der Zeilenanzahl wird nicht unterstützt.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.RetrieveTotalRowCount" />
      </Docs>
    </Member>
    <Member MemberName="CanSort">
      <MemberSignature Language="C#" Value="public override bool CanSort { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSort" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.CanSort" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSort As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSort { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" />-Objekt, das dem aktuellen <see cref="T:System.Web.UI.WebControls.SqlDataSource" />-Steuerelement zugeordnet ist, eine sortierte Ansicht der abgerufenen Daten unterstützt.</summary>
        <value>
          <see langword="true" />, wenn das Sortieren unterstützt wird, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.SqlDataSourceView.CanSort%2A> -Eigenschaft gibt `true`, wenn die aktuelle <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> -Eigenschaftensatz auf die <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> Wert und die <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> festgelegt wird.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.SortExpression" />
      </Docs>
    </Member>
    <Member MemberName="CanUpdate">
      <MemberSignature Language="C#" Value="public override bool CanUpdate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanUpdate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanUpdate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanUpdate { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" />-Objekt, das dem aktuellen <see cref="T:System.Web.UI.WebControls.SqlDataSource" />-Steuerelement zugeordnet ist, den Aktualisierungsvorgang unterstützt.</summary>
        <value>
          <see langword="true" />, wenn der Vorgang unterstützt wird, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate%2A> -Eigenschaft gibt `true` Wenn die <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> festgelegt wird. Ein Löschvorgang konnte weiterhin fehl, wenn die Dateneigenschaften nicht festgelegt sind oder nicht ordnungsgemäß festgelegt sind.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="ConflictDetection">
      <MemberSignature Language="C#" Value="public System.Web.UI.ConflictOptions ConflictDetection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ConflictOptions ConflictDetection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" />
      <MemberSignature Language="VB.NET" Value="Public Property ConflictDetection As ConflictOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ConflictOptions ConflictDetection { System::Web::UI::ConflictOptions get(); void set(System::Web::UI::ConflictOptions value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ConflictOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der bestimmt, wie das <see cref="T:System.Web.UI.WebControls.SqlDataSource" />-Steuerelement Aktualisierungs- und Löschvorgänge ausführt, wenn die Daten einer Zeile in der zugrunde liegenden Datenbank während der Vorgangsausführung geändert werden, oder legt diesen Wert fest.</summary>
        <value>Einer der <see cref="T:System.Web.UI.ConflictOptions" />-Werte. Der Standardwert ist der <see cref="F:System.Web.UI.ConflictOptions.OverwriteChanges" />-Wert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> -Eigenschaft bestimmt, ob der Parameter für die alten und neuen Werte angewendet werden, um die `Update` Methode. Z. B., wenn der Befehl ist, die gemäß der <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> Eigenschaft gibt eine <xref:System.Data.DataSet> Objekt mit den Spalten `Name` und `Number`, und die <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> -Eigenschaftensatz auf die <xref:System.Web.UI.ConflictOptions.OverwriteChanges> Wert Parameter werden für erstellt `Name` und `Number` für den Updatevorgang. Wenn die <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> -Eigenschaftensatz auf die <xref:System.Web.UI.ConflictOptions.CompareAllValues> Wert Parameter werden für erstellt `Name`, `Number`, `original_Name`, und `original_Number`. (Hängt von der genaue Namen der Parameter für die ursprünglichen Werte der <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A>.) Anschließend wird die <xref:System.Web.UI.WebControls.SqlDataSourceView> Objekt bestimmt, ob die Methode, die im angegebenen die <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> Eigenschaft verfügt über Parameter, die mit übereinstimmen.  
  
 Parallelitätssteuerung ist eine Technik, verwenden von Datenspeichern zu steuern, wie Daten gelesen und im Speicher geändert werden, wenn mehrere Clients den Zugriff auf und bearbeiten die gleichen Daten. Beispielsweise ein Client liest Daten und stellt für einen Benutzer dar, während ein anderer Client die gleichen Daten liest und sie an einen anderen Benutzer zeigt. Wenn beide Benutzer die Daten aktualisieren und an den Datenspeicher zu übermitteln, kann unerwartete Ergebnisse auftreten, da beide Clients u. unterschiedliche Werte für die gleichen Daten aktualisieren können. Dies wird als Konflikt betrachtet. Durch Festlegen der <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> Eigenschaft, um die <xref:System.Web.UI.ConflictOptions.CompareAllValues> Wert, der Update-Vorgang können Sie die alten und neuen Werte an die ursprüngliche Datenquelle auf Konflikte zu erkennen und verarbeiten sie nach Bedarf vergleichen.  
  
 Der Wert, der die <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> Eigenschaft im Ansichtszustand gespeichert wird.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der ausgewählte Wert ist keiner der <see cref="T:System.Web.UI.ConflictOptions" />-Werte.</exception>
        <altmember cref="T:System.Web.UI.ConflictOptions" />
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public int Delete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Delete(class System.Collections.IDictionary keys, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function Delete (keys As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Delete(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ oldValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys">Ein <see cref="T:System.Collections.IDictionary" /> von Objekt- bzw. Zeilenschlüsselwerten für den zu löschenden <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />-Vorgang.</param>
        <param name="oldValues">Ein <see cref="T:System.Collections.IDictionary" /> mit Zeilenwerten, die nur dann ausgewertet werden, wenn die <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" />-Eigenschaft auf den <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" />-Wert festgelegt ist.</param>
        <summary>Führt mit der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />-SQL-Zeichenfolge, allen in der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" />-Auflistung angegebenen Parametern sowie den Werten in der angegebenen <paramref name="keys" />-Auflistung und der angegebenen <paramref name="oldValues" />-Auflistung einen Löschvorgang aus.</summary>
        <returns>Ein Wert, der die Anzahl der Zeilen darstellt, die aus der zugrunde liegenden Datenbank gelöscht wurden.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> Methodenaufrufe der <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete%2A> -Methode auf und übergibt die `keys` und `oldValues` Parameter.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> kann keine Verbindung mit der zugrunde liegenden Datenquelle herstellen.  
  
 \- oder –  
  
 Die <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" />-Eigenschaft wird auf den <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" />-Wert festgelegt, und es werden keine <paramref name="oldValues" />-Parameter übergeben.</exception>
        <exception cref="T:System.NotSupportedException">Die <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanDelete" />-Eigenschaft ist <see langword="false" />.</exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />
      </Docs>
    </Member>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public string DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DeleteCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die SQL-Zeichenfolge ab, die von <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> zum Löschen von Daten aus der zugrunde liegenden Datenbank verwendet wird, oder legt diese fest.</summary>
        <value>Eine SQL-Zeichenfolge, die von der <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> zum Löschen von Daten verwendet wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Da die jeweiligen Datenbankprodukte verschiedene SQL-Varianten verwenden, hängt die Syntax der SQL-Zeichenfolge vom derzeit verwendeten ADO.NET-Anbieter ab, der durch die <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>-Eigenschaft identifiziert wird.  
  
 Wenn die SQL-Zeichenfolge eine parametrisierte Abfrage oder ein parametrisierter Befehl ist, hängt der Platzhalter des Parameters ebenfalls vom verwendeten ADO.NET-Anbieter ab. Angenommen, wenn der Anbieter ist die <xref:System.Data.SqlClient?displayProperty=nameWithType>, also der Standardanbieter für die <xref:System.Web.UI.WebControls.SqlDataSource> -Klasse, die der Platzhalter des Parameters ist `'@parameterName'`. Jedoch, wenn der Anbieter, um festgelegt ist die <xref:System.Data.Odbc?displayProperty=nameWithType> oder <xref:System.Data.OleDb?displayProperty=nameWithType>, der Platzhalter des Parameters ist `'?'`. Weitere Informationen zu parametrisierten SQL-Abfragen und Befehle, finden Sie unter [Verwenden von Parametern mit dem SqlDataSource-Steuerelement](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
 Die <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> kann eine SQL-Zeichenfolge oder den Namen einer gespeicherten Prozedur, wenn die zugrunde liegenden Datenbank gespeicherte Prozeduren unterstützt.  
  
 Der Wert, der die <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> Eigenschaft im Ansichtszustand gespeichert wird.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht das Festlegen der <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> Text um eine Bestellung aus der Northwind-Datenbank Orders-Tabelle zu löschen. Daten aus der Orders-Tabelle abgerufen und angezeigt, die einem <xref:System.Web.UI.WebControls.GridView> Steuerelement. Der <xref:System.Web.UI.WebControls.GridView> rendert eine **löschen** Schaltfläche automatisch bei der <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> -Eigenschaftensatz auf `true` automatisch aufgefüllt der <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> -Auflistung und ruft die <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> Methode beim der **Löschen** geklickt wird. Schließlich, da in diesem Beispiel Daten gelöscht werden, wird ein Ereignishandler hinzugefügt ausgeführt werden, um zu versuchen, das Sichern der Datenbank auf dem Datenträger vor dem Löschvorgang.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/CS/sql10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/VB/sql10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="DeleteCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType DeleteCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType DeleteCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType DeleteCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Text in der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />-Eigenschaft eine SQL-Anweisung oder der Name einer gespeicherten Prozedur ist, oder legt diesen Wert fest.</summary>
        <value>Einer der <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />-Werte. Der Standardwert ist der <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" />-Wert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Wert, der die <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType%2A> Eigenschaft im Ansichtszustand gespeichert wird.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der ausgewählte Wert ist keiner der <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />-Werte.</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommandType" />
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />
      </Docs>
    </Member>
    <Member MemberName="Deleted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Deleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Deleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Deleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleted As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Deleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn ein Löschvorgang abgeschlossen ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Behandeln der <xref:System.Web.UI.WebControls.SqlDataSourceView.Deleted> Ereignis untersuchen Sie die Werte der Ausgabeparameter enthalten, nachdem ein Delete-Vorgang abgeschlossen wurde. Die Output-Parameter stehen über die <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> -Objekt, das dem Ereignis zugeordnet ist.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Deleting" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="DeleteParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection DeleteParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeleteParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ DeleteParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Parameterauflistung ab, die die von der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />-Eigenschaft verwendeten Parameter enthält.</summary>
        <value>Eine <see cref="T:System.Web.UI.WebControls.ParameterCollection" />, die die von der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />-Eigenschaft verwendeten Parameter enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> Eigenschaft enthält eine parametrisierte SQL-Abfrage, die <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A> Auflistung enthält alle <xref:System.Web.UI.WebControls.Parameter> Objekte, die den Parameterplatzhaltern in der SQL-Zeichenfolge entsprechen.  
  
 Parameternamen beeinträchtigt werden könnte, indem Sie die <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> Eigenschaft; insbesondere, wenn der Name einen Primärschlüssel bezeichnet, z. B. einen Schlüssel, wird mit angegeben die `DataKeyNames` Eigenschaft eines datengebundenen Steuerelements, oder löschen und Aktualisieren von Szenarien, in denen die <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>-Eigenschaftensatz auf die <xref:System.Web.UI.ConflictOptions.CompareAllValues> Wert und einen Satz von `oldValues` an die entsprechenden Datenmethode übergeben wird. In diesem Fall wird die Formatzeichenfolge angewendet, um jeder Parametername in der `oldValues` Auflistung.  
  
 Je nach den ADO.NET-Anbieter, die Reihenfolge der Parameter in der <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A> -Auflistung möglicherweise wichtig. Die <xref:System.Data.OleDb?displayProperty=nameWithType> und <xref:System.Data.Odbc?displayProperty=nameWithType> Anbieter ordnen die Parameter in der Auflistung nach der Reihenfolge, die die Parameter in der parametrisierten SQL-Abfrage angezeigt werden. Die <xref:System.Data.SqlClient?displayProperty=nameWithType> Anbieter, der den Standard-ADO.NET-Anbieter ist für die <xref:System.Web.UI.WebControls.SqlDataSource> steuern, ordnet die Parameter in der Auflistung durch den Namen des Parameters mit dem Platzhalter in der SQL-Abfrage entsprechen. Weitere Informationen zu parametrisierten SQL-Abfragen und Befehle, finden Sie unter [Verwenden von Parametern mit dem SqlDataSource-Steuerelement](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht das Festlegen der <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> Text um eine Bestellung aus der Northwind-Datenbank zu löschen. Zu Beginn Daten aus der Orders-Tabelle abgerufen und angezeigt, die einem <xref:System.Web.UI.WebControls.DropDownList> Steuerelement. Müssen Sie explizit deklarieren die <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> -Eigenschaft, und rufen die <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> Methode, wenn Sie datengebundene Steuerelemente, z. B. mit der <xref:System.Web.UI.WebControls.DropDownList> (im Gegensatz zu Steuerelementen, wie z. B. die <xref:System.Web.UI.WebControls.GridView> und <xref:System.Web.UI.WebControls.DetailsView>, die automatisch aufgefüllt der Parameter, und rufen die <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> -Methode für ein Datenquellen-Steuerelement). In diesem Beispiel wird die <xref:System.Web.UI.WebControls.Button.OnClick%2A> Ereignis delegiert an die Private <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A> -Ereignishandler, der explizit aufgerufen wird, die <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> Methode der <xref:System.Web.UI.WebControls.SqlDataSource> Steuerelement.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_11sql/CS/sql11cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_11sql/VB/sql11vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />
      </Docs>
    </Member>
    <Member MemberName="Deleting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Deleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Deleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Deleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleting As SqlDataSourceCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceCommandEventHandler ^ Deleting;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt vor einem Löschvorgang ein.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Behandeln der <xref:System.Web.UI.WebControls.SqlDataSourceView.Deleting> Ereignis, um weitere Initialisierungsvorgänge auszuführen, die spezifisch für Ihre Anwendung zum Überprüfen der Werte von Parametern oder die Werte der Parameter vor dem Ändern der <xref:System.Web.UI.WebControls.SqlDataSource> Steuerelement den Löschvorgang ausführt.  
  
 Die Verbindung mit der zugrunde liegenden Datenquelle ist noch nicht geöffnet, wenn der Handler Ereignisdelegat aufgerufen wird. Aus diesem Grund kann nicht abgebrochen der <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> Vorgang direkt durch Aufrufen der <xref:System.Data.Common.DbCommand.Cancel%2A> Methode für die <xref:System.Data.Common.DbCommand> -Objekt, das vom verfügbar gemacht wird die <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> Objekt. Allerdings können Sie den Vorgang abbrechen, durch Festlegen der <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> Eigenschaft von der <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> auf `true`.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie behandelt die <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> Ereignis, das ausgelöst wird, bevor ein Löschvorgang erfolgt. Da in diesem Beispiel Daten aus der Northwind-Datenbank und löscht eine <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> Handler wird hinzugefügt, versucht wird, Sichern Sie die Datenbank, auf den Datenträger, bevor der Löschvorgang ausgeführt wird.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/CS/sql10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/VB/sql10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Deleted" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteDelete">
      <MemberSignature Language="C#" Value="protected override int ExecuteDelete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 ExecuteDelete(class System.Collections.IDictionary keys, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteDelete (keys As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int ExecuteDelete(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ oldValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys">Ein <see cref="T:System.Collections.IDictionary" /> von Objekt- bzw. Zeilenschlüsselwerten für den zu löschenden <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />-Vorgang.</param>
        <param name="oldValues">Ein <see cref="T:System.Collections.IDictionary" /> mit Zeilenwerten, die nur dann ausgewertet werden, wenn die <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" />-Eigenschaft auf den <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" />-Wert festgelegt ist.</param>
        <summary>Führt mit der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />-SQL-Zeichenfolge, allen in der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" />-Auflistung angegebenen Parametern sowie den Werten in der angegebenen <paramref name="keys" />-Auflistung und der angegebenen <paramref name="oldValues" />-Auflistung einen Löschvorgang aus.</summary>
        <returns>Ein Wert, der die Anzahl der Zeilen darstellt, die aus der zugrunde liegenden Datenbank gelöscht wurden.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.SqlDataSourceView> Klasse implementiert die geerbte <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> Methode, um Daten aus einer Datenbank zu löschen. Seite und datengebundene Steuerelemententwickler rufen Sie nicht die <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete%2A> Methode direkt; stattdessen Verwendung öffentlich verfügbar gemachten <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> Methode.  
  
 Die Werte, die in enthaltenen der `keys` Auflistung ausgewertet werden und mit allen Werten, die enthaltenen zusammengeführt der <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A> Auflistung. Wenn die <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> -Eigenschaftensatz auf die <xref:System.Web.UI.ConflictOptions.CompareAllValues> Wert, der in enthaltenen Werte der `oldValues` Auflistung mit formatiert sind die <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> Eigenschaft und werden ebenfalls zusammengeführt.  
  
 Bevor der Löschvorgang ausgeführt wird, die <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> Methode wird aufgerufen, um das Auslösen der <xref:System.Web.UI.WebControls.SqlDataSourceView.Deleting> Ereignis. Sie können dieses Ereignis, um die Werte der Parameter zu untersuchen und Ausführen jeder vorverarbeitung vor einem Löschvorgang behandeln.  
  
 Zum Ausführen eines Delete-Vorgangs der <xref:System.Web.UI.WebControls.SqlDataSourceView> -Objekt Builds ein <xref:System.Data.Common.DbCommand> -Objekt unter Verwendung der <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> Text und alle zugeordneten <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A> Eigenschaften, und führt dann die <xref:System.Data.Common.DbCommand> Objekt für die zugrunde liegenden Datenbank. Nach Abschluss des Löschvorgangs die <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A> Methode wird aufgerufen, um das Auslösen der <xref:System.Web.UI.WebControls.SqlDataSourceView.Deleted> Ereignis. Sie können dieses Ereignis, um alle Fehlercodes und Rückgabewerte zu untersuchen und die Nachbearbeitung durchführen behandeln.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> kann keine Verbindung mit der zugrunde liegenden Datenquelle herstellen.  
  
 \- oder –  
  
 Die <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" />-Eigenschaft wird auf den <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" />-Wert festgelegt, und es werden keine <paramref name="oldValues" />-Parameter übergeben.</exception>
        <exception cref="T:System.Web.HttpException">Der aktuelle Benutzer verfügt nicht über die erforderlichen Berechtigungen für den Zugriff auf die Datenbank.  
  
 \- oder –  
  
 Die Instanz des Steuerelements ist ein <see cref="T:System.Web.UI.WebControls.AccessDataSource" />-Steuerelement, und der Zugriff auf den für die <see cref="P:System.Web.UI.WebControls.AccessDataSource.DataFile" />-Eigenschaft angegebenen Pfad wird verweigert.</exception>
        <exception cref="T:System.NotSupportedException">Die <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanDelete" />-Eigenschaft ist <see langword="false" />.  
  
 \- oder –  
  
 Vor dem Verwenden einer Instanz des <see cref="T:System.Web.UI.WebControls.AccessDataSource" />-Steuerelements wurde ein relativer Pfad zur Entwurfszeit vom Designer nicht ordnungsgemäß zugeordnet.</exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteInsert">
      <MemberSignature Language="C#" Value="protected override int ExecuteInsert (System.Collections.IDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 ExecuteInsert(class System.Collections.IDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteInsert (values As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int ExecuteInsert(System::Collections::IDictionary ^ values);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="values">Ein <see cref="T:System.Collections.IDictionary" /> mit Werten, die zusammen mit der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />-Eigenschaft zum Ausführen eines Einfügevorgangs für die Datenbank verwendet werden. Wenn der Abfrage keine Parameter zugeordnet sind oder die <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />-Eigenschaft keine parametrisierte SQL-Abfrage ist, wird <see langword="null" /> übergeben.</param>
        <summary>Führt mithilfe der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />-SQL-Zeichenfolge, aller in der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" />-Auflistung angegebenen Parameter sowie der Werte in der angegebenen <paramref name="values" />-Auflistung einen Einfügevorgang aus.</summary>
        <returns>Ein Wert, der die Anzahl der in die zugrunde liegenden Datenbank eingefügten Zeilen darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.SqlDataSourceView> Klasse implementiert die geerbte <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> Methode zum Einfügen von Daten in einer Datenbank. Seite und datengebundene Steuerelemententwickler rufen Sie nicht die <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert%2A> Methode direkt; stattdessen Verwendung öffentlich verfügbar gemachten <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> Methode.  
  
 Vor der Insert-Vorgang ausgeführt wird, die <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> Methode wird aufgerufen, um das Auslösen der <xref:System.Web.UI.WebControls.SqlDataSourceView.Inserting> Ereignis. Sie können dieses Ereignis, um die Werte der Parameter zu untersuchen und ausführen, eine Verarbeitung vor einer Einfügung behandeln.  
  
 Einen Insert-Vorgang ausführen der <xref:System.Web.UI.WebControls.SqlDataSourceView> -Objekt Builds ein <xref:System.Data.Common.DbCommand> -Objekt unter Verwendung der <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> Text und alle zugeordneten <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A> Eigenschaften, und führt dann die <xref:System.Data.Common.DbCommand> Objekt für die zugrunde liegenden Datenbank. Nachdem der Einfügevorgang abgeschlossen ist, die <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> Methode wird aufgerufen, um das Auslösen der <xref:System.Web.UI.WebControls.SqlDataSourceView.Inserted> Ereignis. Sie können dieses Ereignis, um alle Fehlercodes und Rückgabewerte zu untersuchen und die Nachbearbeitung durchführen behandeln.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> kann keine Verbindung mit der zugrunde liegenden Datenquelle herstellen.</exception>
        <exception cref="T:System.Web.HttpException">Der aktuelle Benutzer verfügt nicht über die erforderlichen Berechtigungen für den Zugriff auf die Datenbank.</exception>
        <exception cref="T:System.NotSupportedException">Die <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanInsert" />-Eigenschaft ist <see langword="false" />.</exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteSelect">
      <MemberSignature Language="C#" Value="protected internal override System.Collections.IEnumerable ExecuteSelect (System.Web.UI.DataSourceSelectArguments arguments);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.Collections.IEnumerable ExecuteSelect(class System.Web.UI.DataSourceSelectArguments arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function ExecuteSelect (arguments As DataSourceSelectArguments) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Collections::IEnumerable ^ ExecuteSelect(System::Web::UI::DataSourceSelectArguments ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Web.UI.DataSourceSelectArguments" />
      </Parameters>
      <Docs>
        <param name="arguments">Ein <see cref="T:System.Web.UI.DataSourceSelectArguments" />-Objekt, mit dem Datenvorgängen angefordert werden, die über einen grundlegenden Datenabruf hinausgehen.</param>
        <summary>Ruft Daten aus der zugrunde liegenden Datenbank mithilfe der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />-SQL-Zeichenfolge und aller Parameter in der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />-Auflistung ab.</summary>
        <returns>Eine <see cref="T:System.Collections.IEnumerable" />-Liste mit Datenzeilen.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.SqlDataSourceView> Klasse implementiert die geerbte <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A> Methode zum Abrufen von Daten aus einer Datenbank. Seite und datengebundene Steuerelemententwickler rufen Sie nicht die <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A> Methode direkt; stattdessen Verwendung öffentlich verfügbar gemachten <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> Methode.  
  
 Vor das Abrufen von Daten ausgeführt wird, die <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting%2A> Methode wird aufgerufen, um das Auslösen der <xref:System.Web.UI.WebControls.SqlDataSourceView.Selecting> Ereignis. Sie können dieses Ereignis, um die Werte der Parameter zu untersuchen und Ausführen jeder vorverarbeiten, bevor Daten abgerufen werden, behandeln.  
  
 Zum Ausführen des Vorgangs die <xref:System.Web.UI.WebControls.SqlDataSourceView> -Objekt Builds ein <xref:System.Data.Common.DbCommand> -Objekt unter Verwendung der <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> Text und alle zugehörigen <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>, und führt sie für die zugrunde liegenden Datenbank. Nach Abschluss des Vorgangs die <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelected%2A> Methode wird aufgerufen, um das Auslösen der <xref:System.Web.UI.WebControls.SqlDataSource.Selected> Ereignis. Sie können behandeln dieses Ereignis, um alle Rückgabewerte Fehlercodes, untersuchen und führen nach der Verarbeitung.  
  
 Die <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A> Methode gibt ein <xref:System.Data.DataView> Objekt, wenn die <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> auf festgelegt ist <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet>, oder ein <xref:System.Data.IDataReader> Objekt, wenn die <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> auf festgelegt ist <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader>. Schließen der <xref:System.Data.IDataReader> Objekt, wenn Sie die Daten gelesen haben.  
  
 Wenn die <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> festgelegt ist, um <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> und das Zwischenspeichern aktiviert ist, wird die <xref:System.Web.UI.WebControls.SqlDataSourceView> Daten abruft und speichert Daten im Cache während des Datenvorgangs. Der Cache wird erstellt, verworfen oder aktualisiert basierend auf das Cachingverhalten, angegeben durch die Kombination der <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> und <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> Eigenschaften.  
  
> [!IMPORTANT]
>  Wenn Sie Identitätswechsel des Clients unter Windows-Authentifizierung verwenden, werden die Daten zwischengespeichert, wenn der erste Benutzer die Daten zugreift. Wenn ein anderer Benutzer die gleichen Daten anfordert, werden die Daten aus dem Cache abgerufen. Die Daten werden nicht von einem anderen Aufruf an die Datenbank, überprüfen Sie, ob der Benutzer Zugriff auf die Daten abgerufen. Wenn Sie erwarten, dass mehrere Benutzer Zugriff auf die Daten, und jeder Abruf auf Daten, die von der Datenbank Sicherheitskonfigurationen überprüft werden soll, verwenden Sie kein Zwischenspeichern.  
  
 Wenn die <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> festgelegt ist, um <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> und ein <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> angegeben wurde, wird er zusammen mit allen bereitgestellten ausgewertet <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> und der resultierende Filter wird angewendet, um die Liste der Daten während der Vorgang zum Abrufen von Daten.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Die an die <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />-Methode übergebenen <paramref name="arguments" /> geben an, dass die Datenquelle während des Datenabrufs noch weitere Aufgaben ausführen muss, um das Paging oder das Sortieren der abgerufenen Daten zu ermöglichen. Das Datenquellen-Steuerelement unterstützt die erforderlichen Funktionen jedoch nicht.  
  
 \- oder –  
  
 Caching ist aktiviert, aber die <see cref="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" />-Eigenschaft der Datenquelle ist nicht auf <see cref="F:System.Web.UI.WebControls.SqlDataSourceMode.DataSet" /> festgelegt.  
  
 \- oder –  
  
 Die <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName" />-Eigenschaft wurde festgelegt, aber <see cref="P:System.Data.SqlClient.SqlCommand.CommandType" /> ist nicht auf <see cref="F:System.Data.CommandType.StoredProcedure" /> festgelegt.</exception>
        <exception cref="T:System.InvalidOperationException">Die Datenquelle kann keine Datenbankverbindung erstellen.  
  
 \- oder –  
  
 Die Zwischenspeicherung ist aktiviert, aber die internen Cache- und Befehlstypen entsprechen einander nicht.</exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteUpdate">
      <MemberSignature Language="C#" Value="protected override int ExecuteUpdate (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 ExecuteUpdate(class System.Collections.IDictionary keys, class System.Collections.IDictionary values, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteUpdate (keys As IDictionary, values As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int ExecuteUpdate(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values, System::Collections::IDictionary ^ oldValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys">Ein <see cref="T:System.Collections.IDictionary" /> mit Primärschlüsseln, die mit der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />-Eigenschaft zum Ausführen des Aktualisierungsvorgangs für die Datenbank verwendet werden. Wenn der Abfrage keine Schlüssel zugeordnet sind oder die <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />-Eigenschaft keine parametrisierte SQL-Abfrage ist, wird <see langword="null" /> übergeben.</param>
        <param name="values">Ein <see cref="T:System.Collections.IDictionary" /> mit Werten, die mit der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />-Eigenschaft zum Ausführen des Aktualisierungsvorgangs für die Datenbank verwendet werden. Wenn der Abfrage keine Parameter zugeordnet sind oder der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> keine parametrisierte SQL-Abfrage ist, wird <see langword="null" /> übergeben.</param>
        <param name="oldValues">Ein <see cref="T:System.Collections.IDictionary" />, das die ursprünglichen Werte in der Datenbank darstellt. Wenn der Abfrage keine Parameter zugeordnet sind oder die <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />-Eigenschaft keine parametrisierte SQL-Abfrage ist, wird <see langword="null" /> übergeben.</param>
        <summary>Führt mithilfe der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />-SQL-Zeichenfolge, aller Parameter in der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" />-Auflistung sowie der Werte in den angegebenen Auflistungen <paramref name="keys" />, <paramref name="values" /> und <paramref name="oldValues" /> einen Aktualisierungsvorgang aus.</summary>
        <returns>Ein Wert, der die Anzahl der aktualisierten Zeilen in der zugrunde liegenden Datenbank darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.SqlDataSourceView> Klasse implementiert die geerbte <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate%2A> Methode, um Daten in einer Datenbank zu aktualisieren. Seite und datengebundene Steuerelemententwickler rufen Sie nicht die <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate%2A> Methode direkt; stattdessen Verwendung öffentlich verfügbar gemachten <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> Methode.  
  
 Die Werte in der `keys` und `values` Sammlungen werden ausgewertet und mit allen enthaltenen Werten zusammengeführt der <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A> Auflistung. Wenn die <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> -Eigenschaftensatz auf <xref:System.Web.UI.ConflictOptions.CompareAllValues>, die Werte in der `oldValues` Auflistung formatiert sind, mit der <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> und ebenfalls zusammengeführt.  
  
 Bevor der Aktualisierungsvorgang ausgeführt wird, die <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A> Methode wird aufgerufen, um das Auslösen der <xref:System.Web.UI.WebControls.SqlDataSourceView.Updating> Ereignis. Sie können dieses Ereignis, um die Werte der Parameter prüfen und alle vorverarbeiten, bevor Sie ein Update ausführen behandeln.  
  
 Zum Ausführen des Vorgangs die <xref:System.Web.UI.WebControls.SqlDataSourceView> erstellt eine <xref:System.Data.Common.DbCommand> -Objekt unter Verwendung der <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> Text und alle zugeordneten <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A> Eigenschaften, und führt dann die <xref:System.Data.Common.DbCommand> Objekt für die zugrunde liegenden Datenbank. Nach Abschluss des Vorgangs die <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated%2A> Methode wird aufgerufen, um das Auslösen der <xref:System.Web.UI.WebControls.SqlDataSourceView.Updated> Ereignis. Sie können dieses Ereignis, um alle Fehlercodes und Rückgabewerte zu untersuchen und die Nachbearbeitung durchführen behandeln.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> kann keine Verbindung mit der zugrunde liegenden Datenquelle herstellen.  
  
 \- oder –  
  
 Die <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" />-Eigenschaft wird auf den <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" />-Wert festgelegt, und es werden keine <paramref name="oldValues" />-Parameter übergeben.</exception>
        <exception cref="T:System.Web.HttpException">Der aktuelle Benutzer verfügt nicht über die erforderlichen Berechtigungen für den Zugriff auf die Datenbank.</exception>
        <exception cref="T:System.NotSupportedException">Die <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate" />-Eigenschaft ist <see langword="false" />.</exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" />
      </Docs>
    </Member>
    <Member MemberName="FilterExpression">
      <MemberSignature Language="C#" Value="public string FilterExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilterExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FilterExpression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Filterausdruck ab, der angewendet wird, wenn die <see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Select" />-Methode aufgerufen wird, oder legt diesen fest.</summary>
        <value>Eine Zeichenfolge, die einen Filterausdruck darstellt, der angewendet wird, wenn Daten mithilfe der <see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />-Methode abgerufen werden.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Syntax für die verwendeten die <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> Eigenschaft ist eine Format-Syntax. Sie können Parameter in einschließen der <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> Eigenschaft. Ist der Typ des Parameters Zeichenfolgen- oder, schließen Sie den Parameter in einfache Anführungszeichen ein. Anführungszeichen sind nicht erforderlich, wenn der Parameter einen numerischen Typ handelt.  
  
 Die <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> Auflistung enthält die Parameter, die für den Platzhalter, die im gefunden ausgewertet werden die <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> Eigenschaft.  
  
 Die <xref:System.Web.UI.WebControls.SqlDataSource> Steuerelement unterstützt das Filtern von Daten nur, wenn im `DataSet` Modus.  
  
 Der Wert, der die <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> Eigenschaft im Ansichtszustand gespeichert wird.  
  
> [!IMPORTANT]
>  Sie sollten alle Filterparameterwert überprüfen, die Sie vom Client empfangen. Die Common Language Runtime einfach der Wert des Parameters in der Filter-Ausdruck ersetzt, und wendet ihn auf die <xref:System.Data.DataView> von zurückgegebene Objekt der <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Methode. Bei Verwendung der <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> -Eigenschaft, wie eine Sicherheitsmaßnahme, um die Anzahl der Elemente, die zurückgegeben werden, müssen Sie die Parameterwerte überprüfen, bevor die Filterung erfolgt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Daten aus der Northwind-Datenbank abgerufen und Filtern sie mithilfe der <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> und <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> Eigenschaften. Die <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> Eigenschaft der <xref:System.Web.UI.WebControls.SqlDataSource> Steuerelement angewendet wird jedes Mal die <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> Methode zum Abrufen von Daten ausgeführt wird. In diesem Beispiel wird die <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> Eigenschaft enthält einen Platzhalter für einen Filterparameter, der in enthalten ist das <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> Auflistung. In diesem Beispiel wird der Filterparameter ist ein <xref:System.Web.UI.WebControls.ControlParameter> -Objekt, das gebunden ist die <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> Eigenschaft von der <xref:System.Web.UI.WebControls.DropDownList> Steuerelement. Da die <xref:System.Web.UI.WebControls.DropDownList> -Steuerelement seine <xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A> -Eigenschaftensatz auf `true`, jede Änderung in der <xref:System.Web.UI.WebControls.DropDownList> Auswahl bewirkt, dass die Seite an den Server zu senden und die <xref:System.Web.UI.WebControls.GridView> Steuerelement zu binden, Datenquellen-Steuerelements mit den neuen Filter.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/CS/sql17cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/VB/sql17vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Die <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression" />-Eigenschaft wurde festgelegt, während sich die <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> im <see cref="F:System.Web.UI.WebControls.SqlDataSourceMode.DataReader" />-Modus befand.</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" />
      </Docs>
    </Member>
    <Member MemberName="Filtering">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler Filtering;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler Filtering" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Filtering" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Filtering As SqlDataSourceFilteringEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceFilteringEventHandler ^ Filtering;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt vor einem Filtervorgang auf.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Behandeln der <xref:System.Web.UI.WebControls.SqlDataSourceView.Filtering> Ereignis Überprüfungsvorgänge für Filterparameterwerte vor dem Ausführen der <xref:System.Web.UI.WebControls.SqlDataSourceView> Objekt führt eine Filter-Operation. Können Sie Abbrechen der <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> Methode durch Festlegen der <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> Eigenschaft von der <xref:System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs> -Objekt `true`. Dieses Ereignis wird ausgelöst, wenn nur die <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> festgelegt wird.  
  
> [!IMPORTANT]
>  Sie sollten alle Filterparameterwert überprüfen, die Sie vom Client empfangen. Die Common Language Runtime einfach der Wert des Parameters in der Filter-Ausdruck ersetzt, und wendet ihn auf die <xref:System.Data.DataView> von zurückgegebene Objekt der <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Methode. Bei Verwendung der <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> -Eigenschaft, wie eine Sicherheitsmaßnahme, um die Anzahl der Elemente, die zurückgegeben werden, müssen Sie die Parameterwerte überprüfen, bevor die Filterung erfolgt.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Filtering" />
      </Docs>
    </Member>
    <Member MemberName="FilterParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection FilterParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection FilterParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilterParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ FilterParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Auflistung von Parametern ab, die beliebigen Parameterplatzhaltern in der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression" />-Zeichenfolge zugeordnet sind.</summary>
        <value>Eine <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> mit einer Reihe von Parametern, die beliebigen Parameterplatzhaltern in der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression" />-Eigenschaft zugeordnet sind.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Parameter in der <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> Auflistung aller Parameter, die im angegebenen zugeordnet sind die <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> Eigenschaft. Die Parameterplatzhalter die im angegebenen der <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> nach der Reihenfolge ausgewertet werden, und mit den Parameterobjekten in der <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> Auflistung bei der <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> Methode wird aufgerufen.  
  
> [!IMPORTANT]
>  Sie sollten alle Filterparameterwert überprüfen, die Sie vom Client empfangen. Die Common Language Runtime einfach der Wert des Parameters in der Filter-Ausdruck ersetzt, und wendet ihn auf die <xref:System.Data.DataView> von zurückgegebene Objekt der <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Methode. Bei Verwendung der <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> -Eigenschaft, wie eine Sicherheitsmaßnahme, um die Anzahl der Elemente, die zurückgegeben werden, müssen Sie die Parameterwerte überprüfen, bevor die Filterung erfolgt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Daten aus der Northwind-Datenbank abgerufen und Filtern sie mithilfe der <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> und <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> Eigenschaften. Die <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> Eigenschaft der <xref:System.Web.UI.WebControls.SqlDataSource> Steuerelement angewendet wird jedes Mal die <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> Methode zum Abrufen von Daten ausgeführt wird. In diesem Beispiel wird die <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> Eigenschaft enthält einen Platzhalter für einen Filterparameter, der in enthalten ist das <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> Auflistung. Darüber hinaus die Filter-Parameter ist ein <xref:System.Web.UI.WebControls.ControlParameter> -Objekt, das gebunden ist die <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> Eigenschaft von der <xref:System.Web.UI.WebControls.DropDownList> Steuerelement. Da die <xref:System.Web.UI.WebControls.DropDownList> -Steuerelement seine <xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A> -Eigenschaftensatz auf `true`, jede Änderung in der <xref:System.Web.UI.WebControls.DropDownList> Auswahl bewirkt, dass die Seite Informationen an den Server und die <xref:System.Web.UI.WebControls.GridView> Steuerelement zu binden, Datenquellen-Steuerelements mit der neue Filter.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/CS/sql17cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/VB/sql17vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public int Insert (System.Collections.IDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Insert(class System.Collections.IDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (values As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Insert(System::Collections::IDictionary ^ values);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="values">Ein <see cref="T:System.Collections.IDictionary" /> mit Parametern, die von der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />-Eigenschaft zum Ausführen des Einfügevorgangs für die Datenbank verwendet werden. Wenn der Abfrage keine Parameter zugeordnet sind oder der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> keine parametrisierte SQL-Abfrage ist, wird <see langword="null" /> übergeben.</param>
        <summary>Führt mithilfe der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />-SQL-Zeichenfolge, aller in der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" />-Auflistung angegebenen Parameter sowie der Werte in der angegebenen <paramref name="values" />-Auflistung einen Einfügevorgang aus.</summary>
        <returns>Ein Wert, der die Anzahl der in die zugrunde liegenden Datenbank eingefügten Zeilen darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.SqlDataSourceView.Insert%2A> Methodenaufrufe der <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert%2A> -Methode auf und übergibt die `values` Parameter.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> kann keine Verbindung mit der zugrunde liegenden Datenquelle herstellen.</exception>
        <exception cref="T:System.NotSupportedException">Die <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanInsert" />-Eigenschaft ist <see langword="false" />.</exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public string InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InsertCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die SQL-Zeichenfolge ab, mit deren Hilfe das <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" />-Objekt Daten in die zugrunde liegende Datenbank einfügt, oder legt diese fest.</summary>
        <value>Eine SQL-Zeichenfolge, die von der <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> zum Einfügen von Daten verwendet wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Da die jeweiligen Datenbankprodukte verschiedene SQL-Varianten verwenden, hängt die Syntax der SQL-Zeichenfolge vom derzeit verwendeten ADO.NET-Anbieter ab, der durch die <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>-Eigenschaft identifiziert wird. Wenn die SQL-Zeichenfolge eine parametrisierte Abfrage oder ein parametrisierter Befehl ist, hängt der Platzhalter des Parameters ebenfalls vom verwendeten ADO.NET-Anbieter ab. Angenommen, wenn der Anbieter ist die <xref:System.Data.SqlClient?displayProperty=nameWithType>, also der Standardanbieter für die <xref:System.Web.UI.WebControls.SqlDataSource> -Klasse, die der Platzhalter des Parameters ist `'@parameterName'`. Jedoch, wenn der Anbieter, um festgelegt ist die <xref:System.Data.Odbc?displayProperty=nameWithType> oder <xref:System.Data.OleDb?displayProperty=nameWithType>, der Platzhalter des Parameters ist `'?'`. Weitere Informationen zu parametrisierten SQL-Abfragen und Befehle, finden Sie unter [Verwenden von Parametern mit dem SqlDataSource-Steuerelement](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
 Die <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> Eigenschaft kann eine SQL-Zeichenfolge oder den Namen einer gespeicherten Prozedur sein, wenn die Datenquelle gespeicherte Prozeduren unterstützt.  
  
 Der Wert, der die <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> Eigenschaft im Ansichtszustand gespeichert wird.  
  
   
  
## Examples  
 Dieser Abschnitt enthält zwei Codebeispiele. Im ersten Codebeispiel wird veranschaulicht, wie zum Einfügen von Daten in einer Datenbank mithilfe der <xref:System.Web.UI.WebControls.SqlDataSource> Steuerelement. Im zweiten Codebeispiel wird veranschaulicht, wie zum Abrufen von Daten aus Microsoft SQL Server, zeigen Sie es in ein <xref:System.Web.UI.WebControls.GridView> steuern, und Verwenden einer <xref:System.Web.UI.WebControls.DetailsView> Steuerelement in den Details einer ausgewählten Zeile in finden Sie unter der <xref:System.Web.UI.WebControls.GridView> und als Formular zum Einfügen neuer Datensätze.  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Einfügen von Daten in einer Datenbank mithilfe der <xref:System.Web.UI.WebControls.SqlDataSource> Steuerelement. Die aktuellen Daten in der Tabelle werden angezeigt, der <xref:System.Web.UI.WebControls.DropDownList> Steuerelement. Sie können neue Datensätze hinzufügen, indem das Eingeben von Werten in der <xref:System.Web.UI.WebControls.TextBox> Steuerelemente, und klicken Sie dann auf die **einfügen** Schaltfläche. Wenn die **einfügen** geklickt wird, werden die angegebenen Werte in die Datenbank eingefügt und die <xref:System.Web.UI.WebControls.DropDownList> aktualisiert wird.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/CS/sql24cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/VB/sql24vb.aspx#1)]  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Abrufen von Daten aus SQL Server, zeigen Sie es in ein <xref:System.Web.UI.WebControls.GridView> steuern, und Verwenden einer <xref:System.Web.UI.WebControls.DetailsView> Steuerelement in den Details einer ausgewählten Zeile in finden Sie unter der <xref:System.Web.UI.WebControls.GridView> und als Formular zum Einfügen neuer Datensätze.  
  
 Zu Beginn wird der Daten angezeigt, der <xref:System.Web.UI.WebControls.GridView> Steuerelements und der ausgewählten Zeile der <xref:System.Web.UI.WebControls.GridView> wird auch angezeigt, der <xref:System.Web.UI.WebControls.DetailsView> Steuerelement. Der <xref:System.Web.UI.WebControls.GridView> und <xref:System.Web.UI.WebControls.DetailsView> Steuerelemente verwenden unterschiedliche Daten Datenquellensteuerelemente; das Projekt, das zugeordnet ist die <xref:System.Web.UI.WebControls.DetailsView> hat die <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> und <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> Eigenschaften, die sicherstellen, dass die ausgewählte Zeile von der <xref:System.Web.UI.WebControls.GridView> ist angezeigt.  
  
 Wenn Sie den automatisch generierten auf **einfügen** Schaltfläche der <xref:System.Web.UI.WebControls.DetailsView> -Steuerelement, das <xref:System.Web.UI.WebControls.DetailsView> zeigt eine andere Benutzeroberfläche, die zum Einfügen eines neuen Datensatzes verwendet wird. Im Beispiel wird eine gespeicherte Prozedur zum Einfügen von Datensätzen verwendet und gibt den primären Schlüssel der eingefügten Zeile zurück. Wenn Sie einen Datensatz einfügen der <xref:System.Web.UI.WebControls.DetailsView> füllt automatisch die <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> Auflistung mit Werten aus den gebundenen Spalten und ruft die <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> Methode. Die <xref:System.Web.UI.WebControls.DetailsView> kann ableiten, die richtigen Parameter aus allen <xref:System.Web.UI.WebControls.BoundField> -Objekt und einen Parameter für die <xref:System.Web.UI.WebControls.TemplateField> Objekt, wenn die bidirektionale Datenbindung ASP.NET-Syntax verwendet wird. In diesem Beispiel wird ein zusätzlicher Parameter hinzugefügt, der <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> -Ereignishandler, um den primären Schlüssel zu behandeln, die von der gespeicherten Prozedur zurückgegeben wird.  
  
 Schließlich nach dem eingefügten Daten von der <xref:System.Web.UI.WebControls.DetailsView> Steuerelement in der Datenbank die <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> -Ereignishandler wird aufgerufen, um die Behandlung der <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> Ereignis den Wert des Primärschlüssels der eingefügten Zeile wird angezeigt, und die <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> Methode von der <xref:System.Web.UI.WebControls.GridView> Steuerelement explizit aufgerufen, um die Daten zu aktualisieren.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="InsertCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType InsertCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType InsertCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType InsertCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Text in der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />-Eigenschaft eine SQL-Anweisung oder der Name einer gespeicherten Prozedur ist, oder legt diesen Wert fest.</summary>
        <value>Einer der <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />-Werte. Der Wert ist der <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" />-Wert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Wert, der die <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType%2A> Eigenschaft im Ansichtszustand gespeichert wird.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Abrufen von Daten aus Microsoft SQL Server, zeigen Sie es in ein <xref:System.Web.UI.WebControls.GridView> steuern, und Verwenden einer <xref:System.Web.UI.WebControls.DetailsView> Steuerelement in den Details einer ausgewählten Zeile in finden Sie unter der <xref:System.Web.UI.WebControls.GridView> und als Formular zum Einfügen neuer Datensätze.  
  
 Die <xref:System.Web.UI.WebControls.GridView> -Steuerelement zeigt einen Satz von Daten und die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement zeigt die Details für eine bestimmte Zeile. Wenn Sie den automatisch generierten auf **einfügen** Schaltfläche der <xref:System.Web.UI.WebControls.DetailsView> -Steuerelement, das <xref:System.Web.UI.WebControls.DetailsView> zeigt eine andere Benutzeroberfläche, die zum Einfügen eines neuen Datensatzes verwendet wird. Im Beispiel wird eine gespeicherte Prozedur zum Einfügen von Datensätzen verwendet und gibt den primären Schlüssel der eingefügten Zeile zurück. Name der gespeicherten Prozedur wird festgelegt, der <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> Eigenschaft und wird als gespeicherte Prozedur identifiziert, indem Sie festlegen der <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommandType%2A> Eigenschaft, um die <xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure> Wert.  
  
 Schließlich nach dem eingefügten Daten von der <xref:System.Web.UI.WebControls.DetailsView> Steuerelement in der Datenbank die <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> -Ereignishandler wird aufgerufen, um die Behandlung der <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> Ereignis den Wert des Primärschlüssels der eingefügten Zeile wird angezeigt, und die <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> Methode von der <xref:System.Web.UI.WebControls.GridView> Steuerelement explizit aufgerufen, um die Daten zu aktualisieren.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der ausgewählte Wert ist keiner der <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />-Werte.</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommandType" />
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />
      </Docs>
    </Member>
    <Member MemberName="Inserted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Inserted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Inserted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Inserted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserted As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Inserted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn ein Einfügevorgang abgeschlossen wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Behandeln der <xref:System.Web.UI.WebControls.SqlDataSourceView.Inserted> Ereignis untersuchen Sie die Werte der Ausgabeparameter enthalten, nachdem ein Insert-Vorgang abgeschlossen wurde. Die Output-Parameter stehen über die <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> -Objekt, das dem Ereignis zugeordnet ist.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Daten aus Microsoft SQL Server abgerufen, und zeigen Sie es in einem <xref:System.Web.UI.WebControls.GridView> Steuerelement. Das Beispiel verwendet außerdem eine <xref:System.Web.UI.WebControls.DetailsView> -Steuerelement zum Anzeigen von Details der ausgewählten Zeile in der <xref:System.Web.UI.WebControls.GridView>, und als Formular zum Einfügen neuer Datensätze.  
  
 Zu Beginn wird der Daten angezeigt, der <xref:System.Web.UI.WebControls.GridView> Steuerelements und der ausgewählten Zeile der <xref:System.Web.UI.WebControls.GridView> wird auch angezeigt, der <xref:System.Web.UI.WebControls.DetailsView>. Der <xref:System.Web.UI.WebControls.GridView> und <xref:System.Web.UI.WebControls.DetailsView> Steuerelemente verwenden unterschiedliche Daten Datenquellensteuerelemente; das Projekt, das zugeordnet ist die <xref:System.Web.UI.WebControls.DetailsView> hat die <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> und <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> Eigenschaften, die sicherstellen, dass die ausgewählte Zeile von der <xref:System.Web.UI.WebControls.GridView> ist angezeigt.  
  
 Wenn Sie den automatisch generierten auf **einfügen** Schaltfläche der <xref:System.Web.UI.WebControls.DetailsView> -Steuerelement, das <xref:System.Web.UI.WebControls.DetailsView> zeigt eine andere Benutzeroberfläche, die verwendet wird, um einen neuen Datensatz einzufügen. Im Beispiel wird eine gespeicherte Prozedur zum Einfügen von Datensätzen verwendet und gibt den primären Schlüssel der eingefügten Zeile zurück. Wenn Sie einen Datensatz einfügen der <xref:System.Web.UI.WebControls.DetailsView> füllt automatisch die <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> Auflistung mit Werten aus den gebundenen Spalten und ruft die <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> Methode. Die <xref:System.Web.UI.WebControls.DetailsView> kann ableiten, die richtigen Parameter aus allen <xref:System.Web.UI.WebControls.BoundField> -Objekt und einen Parameter für die <xref:System.Web.UI.WebControls.TemplateField> Objekt, wenn die bidirektionale Datenbindung ASP.NET-Syntax verwendet wird. In diesem Beispiel wird ein zusätzlicher Parameter hinzugefügt, der <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> -Ereignishandler, um den primären Schlüssel zu behandeln, die von der gespeicherten Prozedur zurückgegeben wird.  
  
 Schließlich nach dem eingefügten Daten von der <xref:System.Web.UI.WebControls.DetailsView> Steuerelement in der Datenbank die <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> -Ereignishandler wird aufgerufen, um die Behandlung der <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> Ereignis den Wert des Primärschlüssels der eingefügten Zeile wird angezeigt, und die <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> Methode von der <xref:System.Web.UI.WebControls.GridView> Steuerelement explizit aufgerufen, um die Daten zu aktualisieren.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Inserting" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="Inserting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Inserting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Inserting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Inserting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserting As SqlDataSourceCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceCommandEventHandler ^ Inserting;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt vor einem Einfügevorgang ein.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Behandeln der <xref:System.Web.UI.WebControls.SqlDataSourceView.Inserting> Ereignis, um weitere Initialisierungsvorgänge auszuführen, die spezifisch für Ihre Anwendung zum Überprüfen der Werte von Parametern oder die Werte der Parameter vor dem Ändern der <xref:System.Web.UI.WebControls.SqlDataSource> Steuerelement den Einfügevorgang ausführt.  
  
 Die Verbindung mit der zugrunde liegenden Datenquelle ist noch nicht geöffnet, wenn der Handler Ereignisdelegat aufgerufen wird. Sie können nicht aus diesem Grund die Database-Vorgang abbrechen, direkt durch Aufrufen der <xref:System.Data.Common.DbCommand.Cancel%2A> Methode für die <xref:System.Data.Common.DbCommand> -Objekt, das vom verfügbar gemacht wird die <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> Objekt. Sie können jedoch den Datenbankvorgang abbrechen, indem die <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> Eigenschaft von der <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> auf `true`.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Abrufen von Daten aus Microsoft SQL Server, zeigen Sie es in einem <xref:System.Web.UI.WebControls.GridView> Steuerelement. Das Beispiel verwendet außerdem eine <xref:System.Web.UI.WebControls.DetailsView> -Steuerelement zum Anzeigen von Details der ausgewählten Zeile in der <xref:System.Web.UI.WebControls.GridView>, und als Formular zum Einfügen neuer Datensätze.  
  
 Zu Beginn wird der Daten angezeigt, der <xref:System.Web.UI.WebControls.GridView> Steuerelements und der ausgewählten Zeile der <xref:System.Web.UI.WebControls.GridView> wird auch angezeigt, der <xref:System.Web.UI.WebControls.DetailsView> Steuerelement. Der <xref:System.Web.UI.WebControls.GridView> und <xref:System.Web.UI.WebControls.DetailsView> Steuerelemente verwenden unterschiedliche Daten Datenquellensteuerelemente; das Projekt, das zugeordnet ist die <xref:System.Web.UI.WebControls.DetailsView> hat die <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> und <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> Eigenschaften, die sicherstellen, dass die ausgewählte Zeile von der <xref:System.Web.UI.WebControls.GridView> ist angezeigt.  
  
 Wenn Sie den automatisch generierten auf **einfügen** Schaltfläche der <xref:System.Web.UI.WebControls.DetailsView> -Steuerelement, das <xref:System.Web.UI.WebControls.DetailsView> zeigt eine andere Benutzeroberfläche, die zum Einfügen eines neuen Datensatzes verwendet wird. Im Beispiel wird eine gespeicherte Prozedur zum Einfügen von Datensätzen verwendet und gibt den primären Schlüssel der eingefügten Zeile zurück. Wenn Sie einen Datensatz einfügen der <xref:System.Web.UI.WebControls.DetailsView> füllt automatisch die <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> Auflistung mit Werten aus den gebundenen Spalten und ruft die <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> Methode. Die <xref:System.Web.UI.WebControls.DetailsView> kann ableiten, die richtigen Parameter aus allen <xref:System.Web.UI.WebControls.BoundField> Objekt und einen Parameter für die <xref:System.Web.UI.WebControls.TemplateField> Objekt, wenn die bidirektionale Datenbindung ASP.NET-Syntax verwendet wird. In diesem Beispiel wird ein zusätzlicher Parameter hinzugefügt, der <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> -Ereignishandler, um den primären Schlüssel zu behandeln, die von der gespeicherten Prozedur zurückgegeben wird.  
  
 Schließlich nach dem eingefügten Daten von der <xref:System.Web.UI.WebControls.DetailsView> Steuerelement in der Datenbank die <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> -Ereignishandler wird aufgerufen, um die Behandlung der <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> Ereignis den Wert des Primärschlüssels der eingefügten Zeile wird angezeigt, und die <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> Methode von der <xref:System.Web.UI.WebControls.GridView> Steuerelement explizit aufgerufen, um die Daten zu aktualisieren.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Inserted" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="InsertParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection InsertParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection InsertParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InsertParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ InsertParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Parameterauflistung ab, die die von der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />-Eigenschaft verwendeten Parameter enthält.</summary>
        <value>Eine <see cref="T:System.Web.UI.WebControls.ParameterCollection" />, die die von der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />-Eigenschaft verwendeten Parameter enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> Eigenschaft enthält eine parametrisierte SQL-Abfrage, die <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A> Auflistung enthält alle <xref:System.Web.UI.WebControls.Parameter> Objekte, die den Parameterplatzhaltern in der SQL-Zeichenfolge entsprechen.  
  
 Je nach den ADO.NET-Anbieter, die Reihenfolge der Parameter in der <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A> -Auflistung möglicherweise wichtig. Die <xref:System.Data.OleDb?displayProperty=nameWithType> und <xref:System.Data.Odbc?displayProperty=nameWithType> Anbieter ordnen die Parameter in der Auflistung nach der Reihenfolge, in der die Parameter in der parametrisierten SQL-Abfrage angezeigt werden. Die <xref:System.Data.SqlClient?displayProperty=nameWithType> Anbieter, der den Standard-ADO.NET-Anbieter ist für die <xref:System.Web.UI.WebControls.SqlDataSource> steuern, ordnet die Parameter in der Auflistung durch den Namen des Parameters mit einem Platzhalteralias in der SQL-Abfrage übereinstimmt. Weitere Informationen zu parametrisierten SQL-Abfragen und Befehle, finden Sie unter [Verwenden von Parametern mit dem SqlDataSource-Steuerelement](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Einfügen von Daten in einer Datenbank mithilfe der <xref:System.Web.UI.WebControls.SqlDataSource> -Steuerelement und einer einfachen Web Forms-Seite. Die aktuellen Daten in der Tabelle werden angezeigt, der <xref:System.Web.UI.WebControls.DropDownList> Steuerelement. Sie können neue Datensätze hinzufügen, indem das Eingeben von Werten in der <xref:System.Web.UI.WebControls.TextBox> Steuerelemente, und klicken Sie dann auf die **einfügen** Schaltfläche. Wenn die **einfügen** geklickt wird, werden die angegebenen Werte in die Datenbank eingefügt und die <xref:System.Web.UI.WebControls.DropDownList> aktualisiert wird.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/CS/sql24cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/VB/sql24vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />
      </Docs>
    </Member>
    <Member MemberName="IsTrackingViewState">
      <MemberSignature Language="C#" Value="protected bool IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsTrackingViewState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsTrackingViewState { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" />-Objekt Änderungen des Ansichtszustands speichert.</summary>
        <value>
          <see langword="true" />, wenn die Datenquellenansicht für das Speichern ihres Zustands markiert wurde, andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected virtual void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void LoadViewState(System::Object ^ savedState);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Ein Objekt, das den wiederherzustellenden <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" />-Zustand darstellt.</param>
        <summary>Stellt den vorher gespeicherten Ansichtszustand für die Datenquellenansicht wieder her.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode dient in erster Linie durch die [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.  Allerdings können Entwickler von Steuerelementen überschreiben Sie diese Methode, um anzugeben, wie ein benutzerdefiniertes Serversteuerelement seinen Ansichtszustand wiederherstellt. Weitere Informationen finden Sie unter [ASP.NET State Management Overview](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce).  
  
 Die <xref:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState%2A> Methode stellt die Ansichtszustandsinformationen für die <xref:System.Web.UI.WebControls.SqlDataSourceView> Objekt aus einer früheren Seitenanforderung wieder, die gespeichert wurde, durch die <xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A> Methode.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="OldValuesParameterFormatString">
      <MemberSignature Language="C#" Value="public string OldValuesParameterFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OldValuesParameterFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property OldValuesParameterFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OldValuesParameterFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("{0}")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Formatzeichenfolge ab, die auf die Namen aller Parameter angewendet wird, die an die <see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Delete" />-Methode oder an die <see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Update" />-Methode übergeben werden, oder legt diese Formatzeichenfolge fest.</summary>
        <value>Eine Zeichenfolge, die eine Formatzeichenfolge darstellt, die auf die Namen aller an die <see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Delete" />-Methode oder die <see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Update" />-Methode übergebenen <paramref name="oldValues" />-Parameter angewendet wird. Der Standardwert ist "{0}" (null).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> Formatzeichenfolge an Primärschlüsseln nur angewendet wird, z. B. von identifiziert werden die `DataKeyNames` -Eigenschaft des datengebundenen Steuerelements oder in DELETE- und update-Szenarien, in dem die <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> Eigenschaft auf festgelegt ist der <xref:System.Web.UI.ConflictOptions.CompareAllValues> Wert und eine eine Gruppe von `oldValues` an die entsprechenden Datenmethode übergeben wird. In diesem Fall wird die Formatzeichenfolge angewendet, um jeder Parametername in der `oldValues` Auflistung. Weitere Informationen finden Sie unter <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString?displayProperty=nameWithType>.  
  
 Der Wert, der die <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> Eigenschaft im Ansichtszustand gespeichert wird.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="OnDeleted">
      <MemberSignature Language="C#" Value="protected virtual void OnDeleted (System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDeleted(class System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDeleted (e As SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDeleted(System::Web::UI::WebControls::SqlDataSourceStatusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Deleted" />-Ereignis aus, nachdem das <see cref="T:System.Web.UI.WebControls.SqlDataSource" />-Steuerelement einen Löschvorgang abgeschlossen hat.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 Mit der <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Zum Überschreiben der <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /> Methode in einer abgeleiteten Klasse aufrufen werden die <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /> Methode für die Basisklasse, damit Delegaten registrierte das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnDeleting">
      <MemberSignature Language="C#" Value="protected virtual void OnDeleting (System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDeleting(class System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDeleting (e As SqlDataSourceCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDeleting(System::Web::UI::WebControls::SqlDataSourceCommandEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Deleting" />-Ereignis aus, bevor das <see cref="T:System.Web.UI.WebControls.SqlDataSource" />-Steuerelement einen Löschvorgang startet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 Mit der <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie behandelt die <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> Ereignis, das ausgelöst wird, bevor Sie eine <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> Vorgang auftritt. Da in diesem Beispiel Daten aus der Northwind-Datenbank und löscht eine <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> Handler wird hinzugefügt, versucht wird, Sichern Sie die Datenbank, auf den Datenträger, bevor der Löschvorgang ausgeführt wird.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/CS/sql10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/VB/sql10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Zum Überschreiben der <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" /> Methode in einer abgeleiteten Klasse aufrufen werden die <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" /> Methode für die Basisklasse, damit Delegaten registrierte das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnFiltering">
      <MemberSignature Language="C#" Value="protected virtual void OnFiltering (System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFiltering(class System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFiltering (e As SqlDataSourceFilteringEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFiltering(System::Web::UI::WebControls::SqlDataSourceFilteringEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Filtering" />-Ereignis aus, bevor das <see cref="T:System.Web.UI.WebControls.SqlDataSource" />-Steuerelement die Ergebnisse eines Auswahlvorgangs filtert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 Mit der <xref:System.Web.UI.WebControls.SqlDataSourceView.OnFiltering%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Zum Überschreiben der <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)" /> Methode in einer abgeleiteten Klasse aufrufen werden die <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)" /> Methode für die Basisklasse, damit Delegaten registrierte das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnInserted">
      <MemberSignature Language="C#" Value="protected virtual void OnInserted (System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInserted(class System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInserted (e As SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInserted(System::Web::UI::WebControls::SqlDataSourceStatusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Inserted" />-Ereignis aus, nachdem das <see cref="T:System.Web.UI.WebControls.SqlDataSource" />-Steuerelement einen Einfügevorgang abgeschlossen hat.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 Mit der <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Abrufen von Daten aus Microsoft SQL Server, zeigen Sie es in ein <xref:System.Web.UI.WebControls.GridView> steuern, und Verwenden einer <xref:System.Web.UI.WebControls.DetailsView> Steuerelement in den Details einer ausgewählten Zeile in finden Sie unter der <xref:System.Web.UI.WebControls.GridView> und als Formular zum Einfügen neuer Datensätze.  
  
 Zu Beginn wird der Daten angezeigt, der <xref:System.Web.UI.WebControls.GridView> Steuerelements und der ausgewählten Zeile der <xref:System.Web.UI.WebControls.GridView> wird auch angezeigt, der <xref:System.Web.UI.WebControls.DetailsView> Steuerelement. Der <xref:System.Web.UI.WebControls.GridView> und <xref:System.Web.UI.WebControls.DetailsView> Steuerelemente verwenden unterschiedliche Daten Datenquellensteuerelemente; das Projekt, das zugeordnet ist die <xref:System.Web.UI.WebControls.DetailsView> hat die <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> und <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> Eigenschaften, die sicherstellen, dass die ausgewählte Zeile von der <xref:System.Web.UI.WebControls.GridView> ist angezeigt.  
  
 Wenn Sie den automatisch generierten auf **einfügen** Schaltfläche der <xref:System.Web.UI.WebControls.DetailsView> -Steuerelement, das <xref:System.Web.UI.WebControls.DetailsView> zeigt eine andere Benutzeroberfläche, die zum Einfügen eines neuen Datensatzes verwendet wird. Im Beispiel wird eine gespeicherte Prozedur zum Einfügen von Datensätzen verwendet und gibt den primären Schlüssel der eingefügten Zeile zurück. Wenn Sie einen Datensatz einfügen der <xref:System.Web.UI.WebControls.DetailsView> füllt automatisch die <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> Auflistung mit Werten aus den gebundenen Spalten und ruft die <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> Methode. Die <xref:System.Web.UI.WebControls.DetailsView> kann ableiten, die richtigen Parameter aus allen <xref:System.Web.UI.WebControls.BoundField> -Objekt und einen Parameter für die <xref:System.Web.UI.WebControls.TemplateField> Objekt, wenn die bidirektionale Datenbindung ASP.NET-Syntax verwendet wird. In diesem Beispiel wird ein zusätzlicher Parameter hinzugefügt, der <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> -Ereignishandler, um den primären Schlüssel zu behandeln, die von der gespeicherten Prozedur zurückgegeben wird.  
  
 Schließlich nach dem eingefügten Daten von der <xref:System.Web.UI.WebControls.DetailsView> Steuerelement in der Datenbank die <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> -Ereignishandler wird aufgerufen, um die Behandlung der <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> Ereignis den Wert des Primärschlüssels der eingefügten Zeile wird angezeigt, und die <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> Methode von der <xref:System.Web.UI.WebControls.GridView> Steuerelement explizit aufgerufen, um die Daten zu aktualisieren.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Zum Überschreiben der <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /> Methode in einer abgeleiteten Klasse aufrufen werden die <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /> Methode für die Basisklasse, damit Delegaten registrierte das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnInserting">
      <MemberSignature Language="C#" Value="protected virtual void OnInserting (System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInserting(class System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInserting (e As SqlDataSourceCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInserting(System::Web::UI::WebControls::SqlDataSourceCommandEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Inserting" />-Ereignis aus, bevor das <see cref="T:System.Web.UI.WebControls.SqlDataSource" />-Steuerelement einen Einfügevorgang startet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 Mit der <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Abrufen von Daten aus Microsoft SQL Server, zeigen Sie es in ein <xref:System.Web.UI.WebControls.GridView> steuern, und Verwenden einer <xref:System.Web.UI.WebControls.DetailsView> Steuerelement in den Details einer ausgewählten Zeile in finden Sie unter der <xref:System.Web.UI.WebControls.GridView> und als Formular zum Einfügen neuer Datensätze.  
  
 Zu Beginn wird der Daten angezeigt, der <xref:System.Web.UI.WebControls.GridView> Steuerelements und der ausgewählten Zeile der <xref:System.Web.UI.WebControls.GridView> wird auch angezeigt, der <xref:System.Web.UI.WebControls.DetailsView> Steuerelement. Der <xref:System.Web.UI.WebControls.GridView> und <xref:System.Web.UI.WebControls.DetailsView> Steuerelemente verwenden unterschiedliche Daten Datenquellensteuerelemente; das Projekt, das zugeordnet ist die <xref:System.Web.UI.WebControls.DetailsView> hat die <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> und <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> Eigenschaften, die sicherstellen, dass die ausgewählte Zeile von der <xref:System.Web.UI.WebControls.GridView> ist angezeigt.  
  
 Wenn Sie den automatisch generierten auf **einfügen** Schaltfläche der <xref:System.Web.UI.WebControls.DetailsView> -Steuerelement, das <xref:System.Web.UI.WebControls.DetailsView> zeigt eine andere Benutzeroberfläche, die zum Einfügen eines neuen Datensatzes verwendet wird. Im Beispiel wird eine gespeicherte Prozedur zum Einfügen von Datensätzen verwendet und gibt den primären Schlüssel der eingefügten Zeile zurück. Wenn Sie einen Datensatz einfügen der <xref:System.Web.UI.WebControls.DetailsView> füllt automatisch die <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> Auflistung mit Werten aus den gebundenen Spalten und ruft die <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> Methode. Die <xref:System.Web.UI.WebControls.DetailsView> kann ableiten, die richtigen Parameter aus allen <xref:System.Web.UI.WebControls.BoundField> -Objekt und einen Parameter für die <xref:System.Web.UI.WebControls.TemplateField> Objekt, wenn die bidirektionale Datenbindung ASP.NET-Syntax verwendet wird. In diesem Beispiel wird ein zusätzlicher Parameter hinzugefügt, der <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> -Ereignishandler, um den primären Schlüssel zu behandeln, die von der gespeicherten Prozedur zurückgegeben wird.  
  
 Schließlich nach dem eingefügten Daten von der <xref:System.Web.UI.WebControls.DetailsView> Steuerelement in der Datenbank die <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> -Ereignishandler wird aufgerufen, um die Behandlung der <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> Ereignis den Wert des Primärschlüssels der eingefügten Zeile wird angezeigt, und die <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> Methode von der <xref:System.Web.UI.WebControls.GridView> Steuerelement explizit aufgerufen, um die Daten zu aktualisieren.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Zum Überschreiben der <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" /> Methode in einer abgeleiteten Klasse aufrufen werden die <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" /> Methode für die Basisklasse, damit Delegaten registrierte das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnSelected">
      <MemberSignature Language="C#" Value="protected virtual void OnSelected (System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelected(class System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelected (e As SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelected(System::Web::UI::WebControls::SqlDataSourceStatusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Selected" />-Ereignis aus, nachdem das <see cref="T:System.Web.UI.WebControls.SqlDataSource" />-Steuerelement einen Datenabrufvorgang abgeschlossen hat.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 Mit der <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelected%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Zum Überschreiben der <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /> Methode in einer abgeleiteten Klasse aufrufen werden die <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /> Methode für die Basisklasse, damit Delegaten registrierte das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnSelecting">
      <MemberSignature Language="C#" Value="protected virtual void OnSelecting (System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelecting(class System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelecting (e As SqlDataSourceSelectingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelecting(System::Web::UI::WebControls::SqlDataSourceSelectingEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Selecting" />-Ereignis aus, bevor das <see cref="T:System.Web.UI.WebControls.SqlDataSource" />-Steuerelement einen Datenabrufvorgang startet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 Mit der <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Zum Überschreiben der <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)" /> Methode in einer abgeleiteten Klasse aufrufen werden die <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)" /> Methode für die Basisklasse, damit Delegaten registrierte das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnUpdated">
      <MemberSignature Language="C#" Value="protected virtual void OnUpdated (System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUpdated(class System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUpdated (e As SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUpdated(System::Web::UI::WebControls::SqlDataSourceStatusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Updated" />-Ereignis aus, nachdem das <see cref="T:System.Web.UI.WebControls.SqlDataSource" />-Steuerelement einen Aktualisierungsvorgang abgeschlossen hat.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 Mit der <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie anzeigen und Aktualisieren von Daten aus einer ODBC-Datenbank in einem <xref:System.Web.UI.WebControls.GridView> Steuerelement. Nachdem ein Datensatz wurde erfolgreich aktualisiert wurde, die <xref:System.Web.UI.WebControls.SqlDataSource.Updated> Ereignis erfolgt durch einen Ereignishandler an einen Nachverarbeitungsschritt ausführen, in denen eine e-Mail-Benachrichtigung gesendet wird.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/CS/odbc7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/VB/odbc7vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Zum Überschreiben der <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /> Methode in einer abgeleiteten Klasse aufrufen werden die <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /> Methode für die Basisklasse, damit Delegaten registrierte das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnUpdating">
      <MemberSignature Language="C#" Value="protected virtual void OnUpdating (System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUpdating(class System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUpdating (e As SqlDataSourceCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUpdating(System::Web::UI::WebControls::SqlDataSourceCommandEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Updating" />-Ereignis aus, bevor das <see cref="T:System.Web.UI.WebControls.SqlDataSource" />-Steuerelement einen Aktualisierungsvorgang startet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 Mit der <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Daten angezeigt, die aus einer Microsoft SQL Server-Datenbank abgerufen wird eine <xref:System.Web.UI.WebControls.DropDownList> steuern und aktualisieren Sie den Datensatz mit einem <xref:System.Web.UI.WebControls.TextBox> Steuerelement. Im Beispiel wird gezeigt, wie Sie verwenden können eine <xref:System.Data.Common.DbTransaction> Objekt bereits verwendeten Transaktionskontext hinzugefügt werden, wenn mithilfe der <xref:System.Web.UI.WebControls.SqlDataSource> Steuerelement, um Daten zu aktualisieren.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/CS/sql9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/VB/sql9vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Zum Überschreiben der <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" /> werden Sie in einer abgeleiteten Klasse Aufrufen der <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" /> Methode für die Basisklasse, damit Delegaten registrierte das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ParameterPrefix">
      <MemberSignature Language="C#" Value="protected virtual string ParameterPrefix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ParameterPrefix" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property ParameterPrefix As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::String ^ ParameterPrefix { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Zeichenfolge ab, die als Präfix für einen Parameterplatzhalter in einer parametrisierten SQL-Abfrage fungiert.</summary>
        <value>Die Zeichenfolge "@".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SQL-Abfragen und-Befehle können parametrisiert werden, dass sie Platzhalter für Werte enthalten, die an die Abfrage zur Laufzeit gebunden sind. Je nach den ADO.NET-Anbieter, die für festgelegt ist die <xref:System.Web.UI.WebControls.SqlDataSource> -Steuerelement, das identifizierte der <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> -Eigenschaft, die Parameter ausgewertet vom alias oder deren Reihenfolge in der <xref:System.Web.UI.WebControls.ParameterCollection> Objekt.  
  
 Wenn der <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> ist nicht festgelegt oder auf festgelegt ist die <xref:System.Data.SqlClient?displayProperty=nameWithType>, Parameter nach Alias ausgewertet und die <xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A> Eigenschaft wird verwendet, um ein Parameterpräfix zum Hinzufügen der <xref:System.Web.UI.WebControls.Parameter.Name%2A> -Eigenschaft für jedes <xref:System.Web.UI.WebControls.Parameter> -Objekt in ein <xref:System.Web.UI.WebControls.ParameterCollection> während einer Vorgang der Abruf oder Data Manipulation. Wenn die <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> -Eigenschaftensatz auf die <xref:System.Data.OleDb?displayProperty=nameWithType> oder <xref:System.Data.Odbc?displayProperty=nameWithType>, die Parameter nach der Reihenfolge ausgewertet werden und die <xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A> und <xref:System.Web.UI.WebControls.Parameter.Name%2A> Eigenschaften werden ignoriert.  
  
 Falls Sie nicht erweitert die <xref:System.Web.UI.WebControls.SqlDataSourceView> -Klasse, die Sie überschreiben die <xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A> Eigenschaft ein Präfix angeben, außer der `"@"` Zeichenfolge, falls erforderlich.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseUnsupportedCapabilityError">
      <MemberSignature Language="C#" Value="protected internal override void RaiseUnsupportedCapabilityError (System.Web.UI.DataSourceCapabilities capability);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RaiseUnsupportedCapabilityError(valuetype System.Web.UI.DataSourceCapabilities capability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RaiseUnsupportedCapabilityError (capability As DataSourceCapabilities)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RaiseUnsupportedCapabilityError(System::Web::UI::DataSourceCapabilities capability);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="capability" Type="System.Web.UI.DataSourceCapabilities" />
      </Parameters>
      <Docs>
        <param name="capability">Einer der Werte von <see cref="T:System.Web.UI.DataSourceCapabilities" />, die mit den Funktionen verglichen werden, die die Ansicht unterstützt.</param>
        <summary>Vergleicht die für einen <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />-Vorgang erforderlichen Funktionen mit den von der Ansicht unterstützten und wird von der <see cref="M:System.Web.UI.DataSourceSelectArguments.RaiseUnsupportedCapabilitiesError(System.Web.UI.DataSourceView)" />-Methode aufgerufen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError%2A> Methode wird von der Datenquellensicht verwendet, die einzelnen Funktionen, die von einem datengebundenen Steuerelement angefordert werden untersucht der dargestellt wird, indem Sie die <xref:System.Web.UI.DataSourceSelectArguments> -Objekt, das an die <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> -Methode, und vergleichen diese Funktionen auf die Verwaltungsfunktionen werden, die von der Datenquellensicht unterstützt. Für die Funktionen, die durch dargestellt werden die <xref:System.Web.UI.DataSourceSelectArguments> Objekt und können nicht von der Datenquellensicht eine <xref:System.NotSupportedException> Ausnahme ausgelöst.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Für die Datenquelle wurde nicht die ausgewählte <paramref name="capability" /> aktiviert.</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanSort" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanPage" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected virtual object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ SaveViewState();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Speichert die Änderungen am Ansichtszustand des <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" />-Steuerelements ab dem Zeitpunkt, zu dem die Seite an den Server zurückgesendet wurde.</summary>
        <returns>Das Objekt, das die Änderungen des Ansichtszustands von <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> enthält, andernfalls <see langword="null" />, wenn dem Objekt kein Ansichtszustand zugeordnet ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A> Methode wird hauptsächlich von Steuerelemententwicklern verwendet.  
  
 Ansichtszustand besteht in der Ansammlung der Werte der Eigenschaften für ein Serversteuerelement. Diese Werte werden automatisch platziert die <xref:System.Web.UI.Control.ViewState%2A> -Eigenschaft für das Serversteuerelement, das eine Instanz von der <xref:System.Web.UI.StateBag> Klasse. Die <xref:System.Web.UI.Control.ViewState%2A> -Wert für das Webserversteuerelement klicken Sie dann auf ein Zeichenfolgenobjekt beibehalten wird, nach dem Speichern Status, Phase des Lebenszyklus des Serversteuerelements.  
  
 Wenn der Ansichtszustand gespeichert wird, wird das String-Objekt, das persistent gespeichert wurde, nachdem Sie speichern Status, Phase des Lebenszyklus des Serversteuerelements an den Client als eine Variable, die in HTML gespeichert werden zurückgegeben `Hidden` Element. Beim Erstellen von benutzerdefinierten Steuerelementen können Sie die Effizienz verbessern, indem Sie überschreiben die <xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A> Methode, und ändern die `ViewState` Eigenschaft für das Serversteuerelement. Weitere Informationen finden Sie unter [ASP.NET State Management Overview](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable Select (System.Web.UI.DataSourceSelectArguments arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerable Select(class System.Web.UI.DataSourceSelectArguments arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
      <MemberSignature Language="VB.NET" Value="Public Function Select (arguments As DataSourceSelectArguments) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerable ^ Select(System::Web::UI::DataSourceSelectArguments ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Web.UI.DataSourceSelectArguments" />
      </Parameters>
      <Docs>
        <param name="arguments">Eine Instanz von <see cref="T:System.Web.UI.DataSourceSelectArguments" />, mit der Datenvorgänge angefordert werden, die über grundlegenden Datenabrufvorgänge hinausgehen.</param>
        <summary>Ruft Daten aus der zugrunde liegenden Datenbank mithilfe der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />-SQL-Zeichenfolge und aller Parameter in der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />-Auflistung ab.</summary>
        <returns>Eine <see cref="T:System.Collections.IEnumerable" />-Liste mit Datenzeilen.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> Methodenaufrufe der <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A> -Methode auf und übergibt die `selectArgs` Parameter.  
  
 Der <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A> Methode gibt eine <xref:System.Data.DataView> Objekt, wenn der <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> -Eigenschaftensatz auf die <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> Wert, oder er gibt eine <xref:System.Data.IDataReader> Objekt, wenn der <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> Eigenschaft auf festgelegt ist der <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> Wert. Schließen der <xref:System.Data.IDataReader> Objekt, wenn Sie die Daten gelesen haben.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Die an die <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />-Methode übergebenen <paramref name="selectArgs" /> geben an, dass die Datenquelle während des Datenabrufs noch weitere Aufgaben ausführen muss, um das Paging oder das Sortieren der abgerufenen Daten zu ermöglichen. Das Datenquellen-Steuerelement unterstützt die erforderlichen Funktionen jedoch nicht.</exception>
        <exception cref="T:System.InvalidOperationException">Die <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> kann keine Verbindung mit der zugrunde liegenden Datenquelle herstellen.</exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public string SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die SQL-Zeichenfolge ab, die vom <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" />-Objekt zum Abrufen von Daten aus der zugrunde liegenden Datenbank verwendet wird, oder legt diese Zeichenfolge fest.</summary>
        <value>Eine SQL-Zeichenfolge, die von der <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> zum Abrufen von Daten verwendet wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Da die jeweiligen Datenbankprodukte verschiedene SQL-Varianten verwenden, hängt die Syntax der SQL-Zeichenfolge vom derzeit verwendeten ADO.NET-Anbieter ab, der durch die <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>-Eigenschaft identifiziert wird. Wenn die SQL-Zeichenfolge eine parametrisierte Abfrage oder ein parametrisierter Befehl ist, hängt der Platzhalter des Parameters ebenfalls vom verwendeten ADO.NET-Anbieter ab. Angenommen, wenn der Anbieter ist die <xref:System.Data.SqlClient?displayProperty=nameWithType>, also der Standardanbieter für die <xref:System.Web.UI.WebControls.SqlDataSource> -Klasse, die der Platzhalter des Parameters ist `'@parameterName'`. Jedoch, wenn der Anbieter, um festgelegt ist die <xref:System.Data.Odbc?displayProperty=nameWithType> oder <xref:System.Data.OleDb?displayProperty=nameWithType>, der Platzhalter des Parameters ist `'?'`. Weitere Informationen zu parametrisierten SQL-Abfragen und Befehle, finden Sie unter [Verwenden von Parametern mit dem SqlDataSource-Steuerelement](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
 Die <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> Eigenschaft kann eine SQL-Zeichenfolge oder den Namen einer gespeicherten Prozedur sein, wenn die Datenquelle gespeicherte Prozeduren unterstützt.  
  
> [!IMPORTANT]
>  Es ist sicherer, als eine SQL-Anweisung für eine gespeicherte Prozedur verwendet die <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> Eigenschaft.  
  
 Der Wert, der die <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> Eigenschaft im Ansichtszustand gespeichert wird.  
  
   
  
## Examples  
 Dieser Abschnitt enthält zwei Codebeispiele. Im ersten Codebeispiel wird veranschaulicht, wie zum Festlegen der <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> Text, der eine einfache SQL-Abfrage zum Abrufen von Daten aus einer Microsoft SQL Server-Datenbank, und zeigen Sie es in ein <xref:System.Web.UI.WebControls.DropDownList> Steuerelement. Das zweite Codebeispiel veranschaulicht das Festlegen der <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> Text, der den Namen einer gespeicherten Prozedur zum Abrufen von Daten aus einer SQL Server-Datenbank, und zeigen Sie es in einem <xref:System.Web.UI.WebControls.DropDownList>.  
  
 Das folgende Codebeispiel veranschaulicht das Festlegen der <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> Text, der eine einfache SQL-Abfrage zum Abrufen von Daten aus einer SQL Server-Datenbank, und zeigen Sie es in einem <xref:System.Web.UI.WebControls.DropDownList> Steuerelement. Die <xref:System.Web.UI.WebControls.Button> und <xref:System.Web.UI.WebControls.TextBox> Steuerelemente werden bereitgestellt, wie eine einfache Schnittstelle zum Aktualisieren der Adresse für den ausgewählten Benutzer in der <xref:System.Web.UI.WebControls.DropDownList>.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/CS/sql8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/VB/sql8vb.aspx#1)]  
  
 Das folgende Codebeispiel veranschaulicht das Festlegen der <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> Text, der den Namen einer gespeicherten Prozedur zum Abrufen von Daten aus einer SQL Server-Datenbank, und zeigen Sie es in einem <xref:System.Web.UI.WebControls.DropDownList> Steuerelement. Die <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> Eigenschaft kann eine SQL-Abfrage oder den Namen einer gespeicherten Prozedur sein, wenn die Datenquelle gespeicherte Prozeduren unterstützt.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/CS/sql14cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/VB/sql14vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="SelectCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType SelectCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType SelectCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType SelectCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Text in der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />-Eigenschaft eine SQL-Abfrage oder der Name einer gespeicherten Prozedur ist, oder legt diesen Wert fest.</summary>
        <value>Einer der <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />-Werte. Der Standardwert ist der <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" />-Wert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Wert, der die <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType%2A> Eigenschaft im Ansichtszustand gespeichert wird.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht das Festlegen der <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> Text, der den Namen einer gespeicherten Prozedur und die <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A> Eigenschaft, um die <xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure> Wert zum Abrufen von Daten aus einer Microsoft SQL Server-Datenbank, und zeigen Sie es in ein <xref:System.Web.UI.WebControls.DropDownList>.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/CS/sql14cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/VB/sql14vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der ausgewählte Wert ist keiner der <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />-Werte.</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommandType" />
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Selected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Selected" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Selected" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selected As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Selected;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn ein Datenabrufvorgang abgeschlossen wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Behandeln der <xref:System.Web.UI.WebControls.SqlDataSourceView.Selected> Ereignis untersuchen Sie die Werte der Ausgabeparameter enthalten, nachdem ein Vorgang zum Abrufen von Daten abgeschlossen wurde. Die Output-Parameter stehen über die <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> -Objekt, das dem Ereignis zugeordnet ist.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Selecting" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="Selecting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler Selecting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler Selecting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Selecting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selecting As SqlDataSourceSelectingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceSelectingEventHandler ^ Selecting;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt vor einem Datenabrufvorgang ein.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Behandeln der <xref:System.Web.UI.WebControls.SqlDataSourceView.Selecting> Ereignis, um weitere Initialisierungsvorgänge auszuführen, die spezifisch für Ihre Anwendung zum Überprüfen der Werte von Parametern oder die Werte der Parameter vor dem Ändern der <xref:System.Web.UI.WebControls.SqlDataSource> Steuerelement führt das Abrufen von Daten der Vorgang.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Selected" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Select" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="SelectParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection SelectParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection SelectParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ SelectParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Parameterauflistung ab, die die von der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />-Eigenschaft verwendeten Parameter enthält.</summary>
        <value>Eine <see cref="T:System.Web.UI.WebControls.ParameterCollection" />, die die von der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />-Eigenschaft verwendeten Parameter enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> Eigenschaft enthält eine parametrisierte SQL-Abfrage, die <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A> Auflistung enthält alle <xref:System.Web.UI.WebControls.Parameter> Objekte, die den Parameterplatzhaltern in der SQL-Zeichenfolge entsprechen.  
  
 Je nach den ADO.NET-Anbieter, die Reihenfolge der Parameter in der <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A> -Auflistung möglicherweise wichtig. Die <xref:System.Data.OleDb?displayProperty=nameWithType> und <xref:System.Data.Odbc?displayProperty=nameWithType> Anbieter ordnen die Parameter in der Auflistung nach der Reihenfolge, in der die Parameter in der parametrisierten SQL-Abfrage angezeigt werden. Die <xref:System.Data.SqlClient?displayProperty=nameWithType> Anbieter, der den Standard-ADO.NET-Anbieter ist für die <xref:System.Web.UI.WebControls.SqlDataSource> steuern, ordnet die Parameter in der Auflistung durch den Namen des Parameters mit einem Platzhalteralias in der SQL-Abfrage übereinstimmt. Weitere Informationen zu parametrisierten SQL-Abfragen und Befehle, finden Sie unter [Verwenden von Parametern mit dem SqlDataSource-Steuerelement](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Abrufen von Daten aus der Northwind-Datenbank in Microsoft SQL Server durch Festlegen der <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> Eigenschaft, um eine SQL-Abfrage. Die SQL-Abfrage ist parametrisiert und der Platzhalter in der <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> -Eigenschaft wird abgeglichen, um die <xref:System.Web.UI.WebControls.ControlParameter> -Objekt, das hinzugefügt wird die <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> Auflistung. Auf diese Weise die <xref:System.Web.UI.WebControls.DropDownList> -Steuerelement, zu dem der <xref:System.Web.UI.WebControls.ControlParameter> gebunden ist, fungiert als Filter für die angezeigt wird, in der <xref:System.Web.UI.WebControls.ListBox> Steuerelement.  
  
> [!NOTE]
>  Da der Parameter in einer WHERE-Klausel, die Verwendung von verwendet wird die <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> Eigenschaft in diesem Codebeispiel ist funktional mit der <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> und <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> Eigenschaften.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_2sql/CS/sql2cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_2sql/VB/sql2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />
      </Docs>
    </Member>
    <Member MemberName="SortParameterName">
      <MemberSignature Language="C#" Value="public string SortParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SortParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property SortParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SortParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen eines Parameters für eine gespeicherte Prozedur ab, mit der abgerufene Daten sortiert werden, sofern der Abruf mit einer gespeicherten Prozedur erfolgt ist, oder legt diesen Namen fest.</summary>
        <value>Der Name eines Parameters für eine gespeicherte Prozedur, mit der abgerufene Daten sortiert werden, sofern der Abruf mit einer gespeicherten Prozedur erfolgt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> Eigenschaft ausgewertet wird nur bei der SQL-Befehl enthalten die <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> Eigenschaft ist der Name einer gespeicherten Prozedur. In diesem Fall, wenn die <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> Eigenschaft festgelegt ist, enthält den Namen eines Parameters, der zum Sortieren der Ergebnisse der gespeicherten Prozedur verwendet wird.  
  
 Wenn die <xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A> Eigenschaft festgelegt ist, wird es vorangestellt ist die <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> Eigenschaft.  
  
 Der Wert, der die <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> Eigenschaft im Ansichtszustand gespeichert wird.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.IsTrackingViewState">
      <MemberSignature Language="C#" Value="bool System.Web.UI.IStateManager.IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsTrackingViewState As Boolean Implements IStateManager.IsTrackingViewState" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Web.UI.IStateManager.IsTrackingViewState { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.Web.UI.IStateManager.IsTrackingViewState" />.</summary>
        <value>
          <see langword="true" />, wenn die Datenquellenansicht für das Speichern ihres Zustands markiert wurde, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Kann verwendet werden nur, wenn die <xref:System.Web.UI.WebControls.SqlDataSourceView> Instanz umgewandelt wird die <xref:System.Web.UI.IStateManager> Schnittstelle.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.IStateManager.IsTrackingViewState" />
        <altmember cref="T:System.Web.UI.IStateManager" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.LoadViewState">
      <MemberSignature Language="C#" Value="void IStateManager.LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub LoadViewState (savedState As Object) Implements IStateManager.LoadViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.LoadViewState(System::Object ^ savedState) = System::Web::UI::IStateManager::LoadViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Ein Objekt, das den wiederherzustellenden <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" />-Zustand darstellt.</param>
        <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Web.UI.IStateManager.LoadViewState(System.Object)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Kann verwendet werden nur, wenn die <xref:System.Web.UI.WebControls.SqlDataSourceView> Instanz umgewandelt wird die <xref:System.Web.UI.IStateManager> Schnittstelle.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IStateManager" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.SaveViewState">
      <MemberSignature Language="C#" Value="object IStateManager.SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Web.UI.IStateManager.SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Function SaveViewState () As Object Implements IStateManager.SaveViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Web.UI.IStateManager.SaveViewState() = System::Web::UI::IStateManager::SaveViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Web.UI.IStateManager.SaveViewState" />.</summary>
        <returns>Das Objekt, das die Änderungen des Ansichtszustands von <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> enthält, andernfalls <see langword="null" />, wenn dem Objekt kein Ansichtszustand zugeordnet ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Kann verwendet werden nur, wenn die <xref:System.Web.UI.WebControls.SqlDataSourceView> Instanz umgewandelt wird die <xref:System.Web.UI.IStateManager> Schnittstelle.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IStateManager" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.TrackViewState">
      <MemberSignature Language="C#" Value="void IStateManager.TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Sub TrackViewState () Implements IStateManager.TrackViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.TrackViewState() = System::Web::UI::IStateManager::TrackViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Web.UI.IStateManager.TrackViewState" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Kann verwendet werden nur, wenn die <xref:System.Web.UI.WebControls.SqlDataSourceView> Instanz umgewandelt wird die <xref:System.Web.UI.IStateManager> Schnittstelle.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IStateManager" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected virtual void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void TrackViewState();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Bewirkt, dass das <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" />-Objekt Änderungen an seinem Ansichtszustand nachverfolgt, damit diese im <see cref="T:System.Web.UI.StateBag" />-Objekt des Steuerelements gespeichert und über Anforderungen der gleichen Seite hinweg beibehalten werden.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(class System.Collections.IDictionary keys, class System.Collections.IDictionary values, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function Update (keys As IDictionary, values As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values, System::Collections::IDictionary ^ oldValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys">Ein <see cref="T:System.Collections.IDictionary" /> mit Primärschlüsseln, die mit der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />-Eigenschaft zum Ausführen des Aktualisierungsvorgangs für die Datenbank verwendet werden. Wenn der Abfrage keine Schlüssel zugeordnet sind oder <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> keine parametrisierte SQL-Abfrage ist, wird <see langword="null" /> übergeben.</param>
        <param name="values">Ein <see cref="T:System.Collections.IDictionary" /> mit Werten, die mit der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />-Eigenschaft zum Ausführen des Aktualisierungsvorgangs für die Datenbank verwendet werden. Wenn der Abfrage keine Parameter zugeordnet sind oder der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> keine parametrisierte SQL-Abfrage ist, wird <see langword="null" /> übergeben.</param>
        <param name="oldValues">Ein <see cref="T:System.Collections.IDictionary" />, das die ursprünglichen Werte in der Datenbank darstellt. Wenn der Abfrage keine Parameter zugeordnet sind oder der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> keine parametrisierte SQL-Abfrage ist, wird <see langword="null" /> übergeben.</param>
        <summary>Führt mithilfe der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />-SQL-Zeichenfolge, aller Parameter in der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" />-Auflistung sowie der Werte in den angegebenen Auflistungen <paramref name="keys" />, <paramref name="values" /> und <paramref name="oldValues" /> einen Aktualisierungsvorgang aus.</summary>
        <returns>Ein Wert, der die Anzahl der aktualisierten Zeilen in der zugrunde liegenden Datenbank darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A> Methodenaufrufe der <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate%2A> -Methode auf und übergibt die `keys`, `values`, und `oldValues` Parameter. Weitere Informationen finden Sie unter <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand?displayProperty=nameWithType>.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie eine <xref:System.Web.UI.WebControls.SqlDataSource> -Steuerelement zum Anzeigen von Daten in eine <xref:System.Web.UI.WebControls.DropDownList> steuern und Aktualisieren von Daten bei der **Absenden** geklickt wird. Die <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> Eigenschaft wird festgelegt, mit der eine parametrisierte SQL­Anweisung und zwei <xref:System.Web.UI.WebControls.ControlParameter> Parameter hinzugefügt werden die <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> Auflistung. Wenn die **Absenden** Schaltfläche geklickt wird, die <xref:System.Web.UI.WebControls.Button.OnClick%2A> Ereignis behandelt wird, zum Aufrufen der <xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A> Methode explizit.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/CS/sql8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/VB/sql8vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> kann keine Verbindung mit der zugrunde liegenden Datenquelle herstellen.</exception>
        <exception cref="T:System.NotSupportedException">Die <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate" />-Eigenschaft ist <see langword="false" />.</exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" />
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public string UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UpdateCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die SQL-Zeichenfolge ab, die vom <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" />-Objekt zum Aktualisieren von Daten in der zugrunde liegenden Datenbank verwendet wird, oder legt diese Zeichenfolge fest.</summary>
        <value>Eine SQL-Zeichenfolge, die von der <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> zum Aktualisieren von Daten verwendet wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Da die jeweiligen Datenbankprodukte verschiedene SQL-Varianten verwenden, hängt die Syntax der SQL-Zeichenfolge vom derzeit verwendeten ADO.NET-Anbieter ab, der durch die <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>-Eigenschaft identifiziert wird. Wenn die SQL-Zeichenfolge eine parametrisierte Abfrage oder ein parametrisierter Befehl ist, hängt der Platzhalter des Parameters ebenfalls vom verwendeten ADO.NET-Anbieter ab. Angenommen, wenn der Anbieter ist die <xref:System.Data.SqlClient?displayProperty=nameWithType>, also der Standardanbieter für die <xref:System.Web.UI.WebControls.SqlDataSource> -Klasse, die der Platzhalter des Parameters ist `'@parameterName'`. Jedoch, wenn der Anbieter, um festgelegt ist die <xref:System.Data.Odbc?displayProperty=nameWithType> oder <xref:System.Data.OleDb?displayProperty=nameWithType>, der Platzhalter des Parameters ist `'?'`. Weitere Informationen zu parametrisierten SQL-Abfragen und Befehle, finden Sie unter [Verwenden von Parametern mit dem SqlDataSource-Steuerelement](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
 Die <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> Eigenschaft kann eine SQL-Zeichenfolge oder den Namen einer gespeicherten Prozedur sein, wenn die Datenquelle gespeicherte Prozeduren unterstützt.  
  
 Der Wert, der die <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> Eigenschaft im Ansichtszustand gespeichert wird.  
  
   
  
## Examples  
 Dieser Abschnitt enthält zwei Codebeispiele. Im ersten Codebeispiel wird veranschaulicht, wie zum Festlegen der <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> Eigenschaft der <xref:System.Web.UI.WebControls.SqlDataSource> steuern und Aktualisieren von Daten in einer Microsoft SQL Server-Datenbank mithilfe der <xref:System.Web.UI.WebControls.GridView> Steuerelement. Im zweiten Codebeispiel wird veranschaulicht, wie zum Aktualisieren von Daten in einer ODBC-Datenbank mithilfe der <xref:System.Web.UI.WebControls.GridView> Steuerelement.  
  
 Das folgende Codebeispiel veranschaulicht das Festlegen der <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> Eigenschaft von der <xref:System.Web.UI.WebControls.SqlDataSource> steuern und Aktualisieren von Daten in einer SQL Server-Datenbank mithilfe der <xref:System.Web.UI.WebControls.GridView> Steuerelement. Die <xref:System.Web.UI.WebControls.GridView> -Steuerelement füllt automatisch die <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> -Auflistung, ableiten von den Parametern aus der <xref:System.Web.UI.WebControls.BoundField> Objekten und ruft die <xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A> Methode beim der **Update** Link auf die bearbeitbaren <xref:System.Web.UI.WebControls.GridView> Steuerelement ausgewählt ist. In diesem Beispiel enthält auch einige Nachbearbeitung – nach dem Update eines Datensatzes, wird eine e-Mail-Benachrichtigung gesendet.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_7sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7sql/CS/sql7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_7sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7sql/VB/sql7vb.aspx#1)]  
  
 Im folgenden Codebeispiel wird, die funktionell identisch zum vorherigen Codebeispiel wird veranschaulicht, wie zum Aktualisieren von Daten in einer ODBC-Datenbank mithilfe der <xref:System.Web.UI.WebControls.GridView> Steuerelement. Die <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> Eigenschaftensatz wird auf den ADO.NET-Anbieter für ODBC, der <xref:System.Data.Odbc?displayProperty=nameWithType>, und die <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> Eigenschaft auf den Namen des einen ODBC-Datenquellennamen (DSN) festgelegt ist.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/CS/odbc7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/VB/odbc7vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" />
      </Docs>
    </Member>
    <Member MemberName="UpdateCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType UpdateCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType UpdateCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType UpdateCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Text in der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />-Eigenschaft eine SQL-Anweisung oder der Name einer gespeicherten Prozedur ist, oder legt diesen Wert fest.</summary>
        <value>Einer der <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />-Werte. Der Standardwert ist der <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" />-Wert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Wert, der die <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType%2A> Eigenschaft im Ansichtszustand gespeichert wird.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der ausgewählte Wert ist keiner der <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />-Werte.</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommandType" />
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />
      </Docs>
    </Member>
    <Member MemberName="Updated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Updated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Updated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Updated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updated As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Updated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn ein Aktualisierungsvorgang abgeschlossen wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Behandeln der <xref:System.Web.UI.WebControls.SqlDataSourceView.Updated> Ereignis untersuchen Sie die Werte der Ausgabeparameter enthalten, nachdem ein Updatevorgang abgeschlossen wurde. Die Output-Parameter stehen über die <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> -Objekt, das dem Ereignis zugeordnet ist.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie anzeigen und Aktualisieren von Daten, die aus einer ODBC-Datenbank im abgerufen werden ein <xref:System.Web.UI.WebControls.GridView> Steuerelement. Nachdem ein Datensatz wurde erfolgreich aktualisiert wurde, die <xref:System.Web.UI.WebControls.SqlDataSource.Updated> Ereignis erfolgt durch einen Ereignishandler an einen Nachverarbeitungsschritt ausführen, in denen eine e-Mail-Benachrichtigung gesendet wird.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/CS/odbc7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/VB/odbc7vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Updating" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Update" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" />
      </Docs>
    </Member>
    <Member MemberName="UpdateParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection UpdateParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdateParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ UpdateParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Parameterauflistung ab, die die von der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />-Eigenschaft verwendeten Parameter enthält.</summary>
        <value>Eine <see cref="T:System.Web.UI.WebControls.ParameterCollection" />, die die von der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />-Eigenschaft verwendeten Parameter enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> Eigenschaft enthält eine parametrisierte SQL-Abfrage, die <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A> Auflistung enthält alle <xref:System.Web.UI.WebControls.Parameter> Objekte, die die Parameterplatzhalter entsprechen, die in der SQL-Zeichenfolge entsprechen.  
  
 Parameternamen beeinträchtigt werden könnte, indem Sie die <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> Eigenschafts-insbesondere, wenn der Name einen Primärschlüssel bezeichnet, z. B. einen Schlüssel, wird mit angegeben der `DataKeyNames` -Eigenschaft, oder im löschen und Aktualisieren von Szenarien, in dem der <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> -Eigenschaftensatz auf der <xref:System.Web.UI.ConflictOptions.CompareAllValues> Wert und einen Satz von `oldValues` an die entsprechenden Datenmethode übergeben werden. In diesem Fall wird die Formatzeichenfolge angewendet, um jeder Parametername in der `oldValues` Auflistung.  
  
 Je nach den ADO.NET-Anbieter, die Reihenfolge der Parameter in der <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A> -Auflistung möglicherweise wichtig. Die <xref:System.Data.OleDb?displayProperty=nameWithType> und <xref:System.Data.Odbc?displayProperty=nameWithType> Anbieter ordnen die Parameter in der Auflistung nach der Reihenfolge, in der die Parameter in der parametrisierten SQL-Abfrage angezeigt werden. Die <xref:System.Data.SqlClient?displayProperty=nameWithType> Anbieter, der den Standard-ADO.NET-Anbieter ist für die <xref:System.Web.UI.WebControls.SqlDataSource> steuern, ordnet die Parameter in der Auflistung durch den Namen des Parameters mit einem Platzhalteralias in der SQL-Abfrage übereinstimmt. Weitere Informationen zu parametrisierten SQL-Abfragen und Befehle, finden Sie unter [Verwenden von Parametern mit dem SqlDataSource-Steuerelement](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie eine <xref:System.Web.UI.WebControls.SqlDataSource> -Steuerelement zum Anzeigen von Daten in eine <xref:System.Web.UI.WebControls.DropDownList> steuern und Aktualisieren von Daten bei der **Absenden** geklickt wird. Die <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> Eigenschaft wird festgelegt, mit der eine parametrisierte SQL­Anweisung und zwei <xref:System.Web.UI.WebControls.ControlParameter> Parameter hinzugefügt werden die <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> Auflistung. Wenn die **Absenden** Schaltfläche geklickt wird, die <xref:System.Web.UI.WebControls.Button.OnClick%2A> Ereignis behandelt wird, zum Aufrufen der <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> Methode explizit.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/CS/sql8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/VB/sql8vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />
      </Docs>
    </Member>
    <Member MemberName="Updating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Updating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Updating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Updating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updating As SqlDataSourceCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceCommandEventHandler ^ Updating;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt vor einem Aktualisierungsvorgang ein.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Behandeln der <xref:System.Web.UI.WebControls.SqlDataSourceView.Updating> Ereignis, um weitere Initialisierungsvorgänge auszuführen, die spezifisch für Ihre Anwendung zum Überprüfen der Werte von Parametern oder die Werte der Parameter vor dem Ändern der <xref:System.Web.UI.WebControls.SqlDataSource> Steuerelement führt die Update-Vorgang.  
  
 Die Verbindung mit der zugrunde liegenden Datenquelle ist noch nicht geöffnet, wenn der Handler Ereignisdelegat aufgerufen wird. Aus diesem Grund können Sie den Vorgang abbrechen, direkt durch Aufrufen der <xref:System.Data.Common.DbCommand.Cancel%2A> Methode für die <xref:System.Data.Common.DbCommand> -Objekt, das vom verfügbar gemacht wird die <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> Objekt. Sie können jedoch den Datenbankvorgang abbrechen, indem die <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> Eigenschaft von der <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> auf `true`.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Daten angezeigt, die aus einer Microsoft SQL Server-Datenbank abgerufen wird eine <xref:System.Web.UI.WebControls.DropDownList> steuern und aktualisieren Sie den Datensatz mit einem <xref:System.Web.UI.WebControls.TextBox> Steuerelement. Im Beispiel wird gezeigt, wie Sie verwenden können eine <xref:System.Data.Common.DbTransaction> Objekt bereits verwendeten Transaktionskontext hinzugefügt werden, wenn mithilfe der <xref:System.Web.UI.WebControls.SqlDataSource> Steuerelement, um Daten zu aktualisieren.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/CS/sql9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/VB/sql9vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Updated" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Update" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" />
      </Docs>
    </Member>
  </Members>
</Type>