<Type Name="SqlDataSourceView" FullName="System.Web.UI.WebControls.SqlDataSourceView">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f40c40145020e74c230b03716660039c6dadaec2" /><Meta Name="ms.sourcegitcommit" Value="a8ff98b48bda124cfcb2605f5da9b21bc6dcd791" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="02/14/2020" /><Meta Name="ms.locfileid" Value="77246539" /></Metadata><TypeSignature Language="C#" Value="public class SqlDataSourceView : System.Web.UI.DataSourceView, System.Web.UI.IStateManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlDataSourceView extends System.Web.UI.DataSourceView implements class System.Web.UI.IStateManager" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.SqlDataSourceView" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlDataSourceView&#xA;Inherits DataSourceView&#xA;Implements IStateManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlDataSourceView : System::Web::UI::DataSourceView, System::Web::UI::IStateManager" />
  <TypeSignature Language="F#" Value="type SqlDataSourceView = class&#xA;    inherit DataSourceView&#xA;    interface IStateManager" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.DataSourceView</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IStateManager</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Unterstützt das <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> -Steuerelement und stellt eine Schnittstelle für datengebundene Steuerelemente zum Ausführen von SQL-Datenvorgängen in relationalen Datenbanken bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.SqlDataSourceView>-Klasse ist primär für die Verwendung durch Daten gebundene Steuerelemente und nicht als programmierbares Objekt im Seitencode vorgesehen.  
  
 ASP.NET-Datenquellen Steuerelemente enthalten eine oder mehrere Listen der Daten, die durch Datenquellen Sicht-Objekte dargestellt werden. Die <xref:System.Web.UI.WebControls.SqlDataSourceView>-Klasse erweitert die <xref:System.Web.UI.DataSourceView>-Klasse, definiert die Funktionen des <xref:System.Web.UI.WebControls.SqlDataSource> Steuer Elements, mit dem Sie verknüpft ist, und implementiert die grundlegenden Datenfunktionen für das Datenquellen-Steuerelement. Die <xref:System.Web.UI.WebControls.SqlDataSourceView>-Klasse implementiert die Datenfunktionen für das <xref:System.Web.UI.WebControls.SqlDataSource> Steuerelement, einschließlich der <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>, <xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A>, <xref:System.Web.UI.WebControls.SqlDataSourceView.Insert%2A>und <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> Vorgänge, sortieren, Filtern und Verwalten von Einstellungen, die im Ansichts Zustand aufbewahrt werden.  
  
 Obwohl das <xref:System.Web.UI.WebControls.SqlDataSourceView> Objekt nicht direkt für Seiten Entwickler durch das <xref:System.Web.UI.WebControls.SqlDataSource>-Steuerelement verfügbar gemacht wird, sind viele seiner Eigenschaften. Der grundlegendste Vorgang, der von einer Datenquellen Sicht durchführt wird, ist das Abrufen von Daten aus der zugrunde liegenden Datenbank mithilfe der <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>-Methode, die eine <xref:System.Collections.IEnumerable> Auflistung von Datenelementen abruft. Die <xref:System.Web.UI.WebControls.SqlDataSourceView>-Klasse implementiert den Datenabruf aus relationalen Datenbanken mithilfe von SQL-Abfragen. Die SQL-Abfragen können für größere Flexibilität und Sicherheit parametrisiert werden. Die folgenden Datenabruf Methoden,-Eigenschaften und-Ereignisse werden vom-<xref:System.Web.UI.WebControls.SqlDataSourceView> implementiert und für Seiten Entwickler und andere Aufrufer direkt über das <xref:System.Web.UI.WebControls.SqlDataSource>-Steuerelement verfügbar gemacht:  
  
-   Die <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>-Eigenschaft.  
  
-   Die <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>-Eigenschaft.  
  
-   Das <xref:System.Web.UI.WebControls.SqlDataSource.Selecting>-Ereignis  
  
-   Das <xref:System.Web.UI.WebControls.SqlDataSource.Selected>-Ereignis  
  
 Das <xref:System.Web.UI.WebControls.SqlDataSourceView> Objekt unterstützt das Aktualisieren von Daten in einer relationalen Datenbank mithilfe von SQL-Befehlen. Die SQL-Befehle können für größere Flexibilität und Sicherheit parametrisiert werden. Daten gebundene Steuerelemente, wie z. b. die <xref:System.Web.UI.WebControls.GridView> und <xref:System.Web.UI.WebControls.DetailsView>, können so konfiguriert werden, dass Updates automatisch mithilfe der <xref:System.Web.UI.WebControls.SqlDataSourceView>durchgeführt werden, während andere Steuerelemente dies nicht tun. Die folgenden Aktualisierungs Methoden,-Eigenschaften und-Ereignisse werden vom-<xref:System.Web.UI.WebControls.SqlDataSourceView> implementiert und direkt über das <xref:System.Web.UI.WebControls.SqlDataSource>-Steuerelement für Seiten Entwickler und andere Aufrufer verfügbar gemacht:  
  
-   Die <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>-Eigenschaft.  
  
-   Die <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A>-Eigenschaft.  
  
-   Das <xref:System.Web.UI.WebControls.SqlDataSource.Updating>-Ereignis  
  
-   Das <xref:System.Web.UI.WebControls.SqlDataSource.Updated>-Ereignis  
  
 Der <xref:System.Web.UI.WebControls.SqlDataSourceView> unterstützt das Einfügen neuer Daten Zeilen in eine relationale Datenbank. Die SQL-Befehle, die in der <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A>-Eigenschaft angegeben sind, können für größere Flexibilität und Sicherheit parametrisiert werden. Daten gebundene Steuerelemente, wie z. b. die <xref:System.Web.UI.WebControls.GridView> und <xref:System.Web.UI.WebControls.DetailsView>, können so konfiguriert werden, dass Sie automatisch mit dem <xref:System.Web.UI.WebControls.SqlDataSourceView>durchgeführt werden, während andere Steuerelemente dies nicht möglich sind Die folgenden Insert-Methoden,-Eigenschaften und-Ereignisse werden vom-<xref:System.Web.UI.WebControls.SqlDataSourceView> implementiert und direkt über das <xref:System.Web.UI.WebControls.SqlDataSource>-Steuerelement für Seiten Entwickler und andere Aufrufer verfügbar gemacht:  
  
-   Die <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A>-Eigenschaft.  
  
-   Die <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A>-Eigenschaft.  
  
-   Das <xref:System.Web.UI.WebControls.SqlDataSource.Inserting>-Ereignis  
  
-   Das <xref:System.Web.UI.WebControls.SqlDataSource.Inserted>-Ereignis  
  
 Das <xref:System.Web.UI.WebControls.SqlDataSourceView>-Objekt unterstützt auch das Löschen von Daten aus einer relationalen Datenbank. Wie bei anderen Befehlen können die SQL-Befehle, die in der <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A>-Eigenschaft angegeben sind, für größere Flexibilität und Sicherheit parametrisiert werden. Daten gebundene Steuerelemente, wie z. b. die <xref:System.Web.UI.WebControls.GridView> und <xref:System.Web.UI.WebControls.DetailsView>, können so konfiguriert werden, dass Löschvorgänge automatisch mithilfe der <xref:System.Web.UI.WebControls.SqlDataSourceView>durchgeführt werden, während andere Steuerelemente dies nicht möglich Die folgenden Delete-Methoden,-Eigenschaften und-Ereignisse werden vom-<xref:System.Web.UI.WebControls.SqlDataSourceView> implementiert und direkt über das <xref:System.Web.UI.WebControls.SqlDataSource>-Steuerelement für Seiten Entwickler und andere Aufrufer verfügbar gemacht:  
  
-   Die <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A>-Eigenschaft.  
  
-   Die <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A>-Eigenschaft.  
  
-   Das <xref:System.Web.UI.WebControls.SqlDataSource.Deleting>-Ereignis  
  
-   Das <xref:System.Web.UI.WebControls.SqlDataSource.Deleted>-Ereignis  
  
 Das Abrufen von Daten ist leistungsfähiger, wenn die-Klausel, die zum Filtern der Daten während des Datenabrufs verwendet wird, dynamisch ist. Anders ausgedrückt: eine SQL-Abfrage mit einer statischen WHERE-Klausel ist nicht so flexibel und leistungsstark wie eine SQL-Abfrage, bei der die Werte in der WHERE-Klausel an Werte gebunden sind, die sich ändern können, z. b. Werte, die in Steuerelementen auf einer Web Forms Seite angezeigt werden. Anstatt eine SQL-Abfrage neu zu erstellen und die <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A>-Eigenschaft für jede Seiten Auslastung festzulegen, können Sie die Eigenschaften <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> und <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> verwenden, um die dynamische Filterung auf das Abrufen von Daten anzuwenden. Diese Eigenschaften werden von der <xref:System.Web.UI.WebControls.SqlDataSourceView> implementiert und direkt über das <xref:System.Web.UI.WebControls.SqlDataSource>-Steuerelement für Daten gebundene Steuerelemente und andere Aufrufer verfügbar gemacht.  
  
 Sie können die Daten, die Sie mit dem <xref:System.Web.UI.WebControls.SqlDataSource>-Steuerelement abrufen, sortieren, indem Sie eine ORDER BY-Klausel hinzufügen, die bewirkt, dass die Datenbank die Reihenfolge für Sie ausführt, wenn Sie Daten abrufen oder indem Sie die Daten nach dem Abruf im Arbeitsspeicher sortieren. Sie können einen Sortierungs Ausdruck für den <xref:System.Web.UI.WebControls.SqlDataSourceView> bereitstellen, indem Sie die <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>-Eigenschaft des <xref:System.Web.UI.DataSourceSelectArguments>-Objekts festlegen, das an die <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>-Methode übergeben wird. Die Syntax für die <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>-Eigenschaft ist identisch mit der Syntax für eine <xref:System.Data.DataView.Sort%2A?displayProperty=nameWithType>-Eigenschaft. Wenn Sie eine gespeicherte Prozedur zum Abrufen von Daten verwenden, können Sie auch die <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A>-Eigenschaft verwenden, um einen Parameter anzugeben, der speziell zum Sortieren der Ergebnisse eines gespeicherten Prozedur Aufrufes verwendet wird.  
  
 Wenn mehrere Benutzer die Datenbank gleichzeitig ändern können, besteht die Möglichkeit eines Parallelitäts Konflikts. Das <xref:System.Web.UI.WebControls.SqlDataSource> Steuerelement steuert die Parallelität durch die <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection?displayProperty=nameWithType>-Eigenschaft. Die-Funktionalität wird in der <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection?displayProperty=nameWithType>-Eigenschaft implementiert.  
  
 Wie viele andere Webserver-Steuerelemente implementiert die <xref:System.Web.UI.WebControls.SqlDataSourceView> die <xref:System.Web.UI.IStateManager>-Schnittstelle und verwendet den Ansichts Zustand, um den Status über Seiten Anforderungen hinweg zu verfolgen. Zum Aktivieren der Ansichts Zustandsüberwachung für das-Steuerelement werden Implementierungen der <xref:System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState%2A>-und-Eigenschaft sowie der Methoden <xref:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState%2A>, <xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A>und <xref:System.Web.UI.WebControls.SqlDataSourceView.TrackViewState%2A> bereitgestellt. Weitere Informationen finden Sie unter [ASP.net State Management Overview](https://docs.microsoft.com/previous-versions/aspnet/75x4ha6s(v=vs.100)).  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSource" />
    <altmember cref="T:System.Web.UI.DataSourceView" />
    <altmember cref="T:System.Web.UI.WebControls.AccessDataSourceView" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataSourceView (System.Web.UI.WebControls.SqlDataSource owner, string name, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.SqlDataSource owner, string name, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.#ctor(System.Web.UI.WebControls.SqlDataSource,System.String,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As SqlDataSource, name As String, context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDataSourceView(System::Web::UI::WebControls::SqlDataSource ^ owner, System::String ^ name, System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.SqlDataSourceView : System.Web.UI.WebControls.SqlDataSource * string * System.Web.HttpContext -&gt; System.Web.UI.WebControls.SqlDataSourceView" Usage="new System.Web.UI.WebControls.SqlDataSourceView (owner, name, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.WebControls.SqlDataSource" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="owner">Das Datenquellen-Steuerelement, dem die <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> zugeordnet ist.</param>
        <param name="name">Ein eindeutiger Name für die Datenquellenansicht, die innerhalb des Gültigkeitsbereichs des besitzenden Datenquellen-Steuerelements liegt.</param>
        <param name="context">Der aktuelle <see cref="T:System.Web.HttpContext" />.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" />-Klasse, die das angegebene <see cref="T:System.Web.UI.WebControls.SqlDataSource" />-Steuerelement als Besitzer der aktuellen Ansicht festlegt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der <xref:System.Web.UI.WebControls.SqlDataSourceView.%23ctor%2A>-Konstruktor wird von der <xref:System.Web.UI.WebControls.SqlDataSource.GetView%2A>-Methode aufgerufen, um eine neue Instanz einer Datenquellen Sicht mit dem angegebenen `name`-Parameter zurückzugeben. Das <xref:System.Web.UI.WebControls.SqlDataSource>-Steuerelement ist jeweils nur einem <xref:System.Web.UI.WebControls.SqlDataSourceView> Objekt zugeordnet und benennt die Sicht `Table`immer, obwohl diese Benennungs Einschränkung durch das <xref:System.Web.UI.WebControls.SqlDataSource> Steuerelement, nicht aber durch den <xref:System.Web.UI.WebControls.SqlDataSourceView>festgelegt wird. Sie können die <xref:System.Web.UI.WebControls.SqlDataSource.GetView%2A>-Methode außer Kraft setzen, um Sichten mit einer anderen Benennungs Konvention zu unterstützen.  
  
 Das <xref:System.Web.HttpContext> Objekt, das vom `context`-Parameter übergeben wird, wird von der Datenquellen Sicht verwendet, um auf Parameter Objekte zuzugreifen, wie z. b. die <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A>-und <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A>-Eigenschaften.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.GetView(System.String)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.GetViewNames" />
      </Docs>
    </Member>
    <Member MemberName="CancelSelectOnNullParameter">
      <MemberSignature Language="C#" Value="public bool CancelSelectOnNullParameter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CancelSelectOnNullParameter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.CancelSelectOnNullParameter" />
      <MemberSignature Language="VB.NET" Value="Public Property CancelSelectOnNullParameter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CancelSelectOnNullParameter { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CancelSelectOnNullParameter : bool with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.CancelSelectOnNullParameter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob ein Datenabrufvorgang abgebrochen werden soll, wenn einer der in der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />-Auflistung enthaltenen Parameter mit <see langword="null" /> ausgewertet wird, oder legt diesen Wert fest.</summary>
        <value><see langword="true" />, wenn ein Datenabrufvorgang abgebrochen werden soll, wenn ein in der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />-Auflistung enthaltener Parameter mit <see langword="null" /> ausgewertet wird, andernfalls <see langword="false" />. Der Standardwert lautet <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Wert der <xref:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter%2A>-Eigenschaft wird im Ansichts Zustand gespeichert.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter" />
      </Docs>
    </Member>
    <Member MemberName="CanDelete">
      <MemberSignature Language="C#" Value="public override bool CanDelete { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanDelete" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.CanDelete" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanDelete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanDelete { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanDelete : bool" Usage="System.Web.UI.WebControls.SqlDataSourceView.CanDelete" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" />-Objekt, das dem aktuellen <see cref="T:System.Web.UI.WebControls.SqlDataSource" />-Steuerelement zugeordnet ist, den Löschvorgang unterstützt.</summary>
        <value><see langword="true" />, wenn der Vorgang unterstützt wird, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.SqlDataSourceView.CanDelete%2A>-Eigenschaft gibt `true` zurück, wenn die <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A>-Eigenschaft festgelegt ist. Ein Löschvorgang kann dennoch fehlschlagen, wenn alle Daten Eigenschaften nicht festgelegt oder nicht ordnungsgemäß festgelegt wurden.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="CanInsert">
      <MemberSignature Language="C#" Value="public override bool CanInsert { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanInsert" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.CanInsert" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanInsert As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanInsert { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanInsert : bool" Usage="System.Web.UI.WebControls.SqlDataSourceView.CanInsert" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" />-Objekt, das dem aktuellen <see cref="T:System.Web.UI.WebControls.SqlDataSource" />-Steuerelement zugeordnet ist, den Einfügevorgang unterstützt.</summary>
        <value><see langword="true" />, wenn der Vorgang unterstützt wird, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.SqlDataSourceView.CanInsert%2A>-Eigenschaft gibt `true` zurück, wenn die <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A>-Eigenschaft festgelegt ist. Ein Einfügevorgang kann dennoch fehlschlagen, wenn alle Daten Eigenschaften nicht festgelegt oder nicht ordnungsgemäß festgelegt wurden.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="CanPage">
      <MemberSignature Language="C#" Value="public override bool CanPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanPage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.CanPage" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanPage As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanPage { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanPage : bool" Usage="System.Web.UI.WebControls.SqlDataSourceView.CanPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das Paging der abgerufenen Daten vom <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" />-Objekt unterstützt wird, das dem aktuellen <see cref="T:System.Web.UI.WebControls.SqlDataSource" />-Objekt zugeordnet ist.</summary>
        <value><see langword="false" /> in allen Fällen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Web.UI.WebControls.SqlDataSourceView>-Objekt unterstützt kein Paging.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.StartRowIndex" />
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.MaximumRows" />
      </Docs>
    </Member>
    <Member MemberName="CanRetrieveTotalRowCount">
      <MemberSignature Language="C#" Value="public override bool CanRetrieveTotalRowCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRetrieveTotalRowCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRetrieveTotalRowCount As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRetrieveTotalRowCount { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRetrieveTotalRowCount : bool" Usage="System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" />-Objekt, das dem aktuellen <see cref="T:System.Web.UI.WebControls.SqlDataSource" />-Steuerelement zugeordnet ist, das Abrufen der Gesamtanzahl der Datenzeilen (zusätzlich zum Datensatz) unterstützt.</summary>
        <value><see langword="false" /> in allen Fällen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Web.UI.WebControls.SqlDataSourceView>-Objekt unterstützt das Abrufen von Zeilen Anzahlen nicht.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.RetrieveTotalRowCount" />
      </Docs>
    </Member>
    <Member MemberName="CanSort">
      <MemberSignature Language="C#" Value="public override bool CanSort { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSort" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.CanSort" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSort As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSort { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSort : bool" Usage="System.Web.UI.WebControls.SqlDataSourceView.CanSort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" />-Objekt, das dem aktuellen <see cref="T:System.Web.UI.WebControls.SqlDataSource" />-Steuerelement zugeordnet ist, eine sortierte Ansicht der abgerufenen Daten unterstützt.</summary>
        <value><see langword="true" />, wenn das Sortieren unterstützt wird, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.SqlDataSourceView.CanSort%2A>-Eigenschaft gibt `true`zurück, wenn die aktuelle <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>-Eigenschaft auf den <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> Wert festgelegt ist und die <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A>-Eigenschaft festgelegt ist.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.SortExpression" />
      </Docs>
    </Member>
    <Member MemberName="CanUpdate">
      <MemberSignature Language="C#" Value="public override bool CanUpdate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanUpdate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanUpdate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanUpdate { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanUpdate : bool" Usage="System.Web.UI.WebControls.SqlDataSourceView.CanUpdate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" />-Objekt, das dem aktuellen <see cref="T:System.Web.UI.WebControls.SqlDataSource" />-Steuerelement zugeordnet ist, den Aktualisierungsvorgang unterstützt.</summary>
        <value><see langword="true" />, wenn der Vorgang unterstützt wird, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate%2A>-Eigenschaft gibt `true` zurück, wenn die <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A>-Eigenschaft festgelegt ist. Ein Löschvorgang kann dennoch fehlschlagen, wenn alle Daten Eigenschaften nicht festgelegt oder nicht ordnungsgemäß festgelegt wurden.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="ConflictDetection">
      <MemberSignature Language="C#" Value="public System.Web.UI.ConflictOptions ConflictDetection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ConflictOptions ConflictDetection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" />
      <MemberSignature Language="VB.NET" Value="Public Property ConflictDetection As ConflictOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ConflictOptions ConflictDetection { System::Web::UI::ConflictOptions get(); void set(System::Web::UI::ConflictOptions value); };" />
      <MemberSignature Language="F#" Value="member this.ConflictDetection : System.Web.UI.ConflictOptions with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ConflictOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der bestimmt, wie das <see cref="T:System.Web.UI.WebControls.SqlDataSource" />-Steuerelement Aktualisierungs- und Löschvorgänge ausführt, wenn die Daten einer Zeile in der zugrunde liegenden Datenbank während der Vorgangsausführung geändert werden, oder legt diesen Wert fest.</summary>
        <value>Einer der <see cref="T:System.Web.UI.ConflictOptions" />-Werte. Der Standardwert ist der <see cref="F:System.Web.UI.ConflictOptions.OverwriteChanges" />-Wert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>-Eigenschaft bestimmt, ob Parameter für alte und neue Werte auf die `Update` Methode angewendet werden. Wenn beispielsweise der durch die <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A>-Eigenschaft angegebene Befehl ein <xref:System.Data.DataSet>-Objekt mit den Spalten `Name` und `Number`zurückgibt und die <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>-Eigenschaft auf den <xref:System.Web.UI.ConflictOptions.OverwriteChanges> Wert festgelegt ist, werden Parameter für `Name` erstellt und für den Aktualisierungs Vorgang `Number`. Wenn die <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>-Eigenschaft auf den <xref:System.Web.UI.ConflictOptions.CompareAllValues>-Wert festgelegt ist, werden Parameter für `Name`, `Number`, `original_Name`und `original_Number`erstellt. (Der genaue Name der Parameter für die ursprünglichen Werte hängt vom <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A>ab.) Anschließend bestimmt das <xref:System.Web.UI.WebControls.SqlDataSourceView> Objekt, ob die Methode, die in der <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A>-Eigenschaft angegeben ist, über Parameter verfügt, die mit identisch sind.  
  
 Die Parallelitäts Steuerung ist ein Verfahren, mit dem Datenspeicher steuern, wie Daten im Speicher gelesen und geändert werden, wenn mehrere Clients auf dieselben Daten zugreifen und diese bearbeiten. Beispielsweise liest ein Client Daten und zeigt Sie einem Benutzer an, während ein anderer Client dieselben Daten liest und Sie einem anderen Benutzer präsentiert. Wenn beide Benutzer die Daten aktualisieren und an den Datenspeicher senden, kann ein unerwartetes Ergebnis auftreten, weil beide Clients möglicherweise unterschiedliche Werte für die gleichen Daten aktualisieren. Dies gilt als Konflikt. Wenn Sie die <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>-Eigenschaft auf den <xref:System.Web.UI.ConflictOptions.CompareAllValues>-Wert festlegen, kann der Aktualisierungs Vorgang die alten und neuen Werte mit der ursprünglichen Datenquelle vergleichen, um Konflikte zu erkennen und Sie nach Bedarf zu behandeln.  
  
 Der Wert der <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>-Eigenschaft wird im Ansichts Zustand gespeichert.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der ausgewählte Wert ist keiner der <see cref="T:System.Web.UI.ConflictOptions" />-Werte.</exception>
        <altmember cref="T:System.Web.UI.ConflictOptions" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/dz12d98w(v=vs.100)">Übersicht über das SqlDataSource-Webserver Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public int Delete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Delete(class System.Collections.IDictionary keys, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function Delete (keys As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Delete(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ oldValues);" />
      <MemberSignature Language="F#" Value="override this.Delete : System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="sqlDataSourceView.Delete (keys, oldValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys">Ein <see cref="T:System.Collections.IDictionary" /> von Objekt- bzw. Zeilenschlüsselwerten für den zu löschenden <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />-Vorgang.</param>
        <param name="oldValues">Ein <see cref="T:System.Collections.IDictionary" /> mit Zeilenwerten, die nur dann ausgewertet werden, wenn die <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" />-Eigenschaft auf den <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" />-Wert festgelegt ist.</param>
        <summary>Führt mit der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />-SQL-Zeichenfolge, allen in der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" />-Auflistung angegebenen Parametern sowie den Werten in der angegebenen <paramref name="keys" />-Auflistung und der angegebenen <paramref name="oldValues" />-Auflistung einen Löschvorgang aus.</summary>
        <returns>Ein Wert, der die Anzahl der Zeilen darstellt, die aus der zugrunde liegenden Datenbank gelöscht wurden.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A>-Methode ruft die <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete%2A>-Methode auf, wobei die Parameter `keys` und `oldValues` übergeben werden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> kann keine Verbindung mit der zugrunde liegenden Datenquelle herstellen.  
  
Oder 
Die <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" />-Eigenschaft wird auf den <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" />-Wert festgelegt, und es werden keine <paramref name="oldValues" />-Parameter übergeben.</exception>
        <exception cref="T:System.NotSupportedException">Die <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanDelete" />-Eigenschaft ist <see langword="false" />.</exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />
      </Docs>
    </Member>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public string DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DeleteCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteCommand : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die SQL-Zeichenfolge ab, die von <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> zum Löschen von Daten aus der zugrunde liegenden Datenbank verwendet wird, oder legt diese fest.</summary>
        <value>Eine SQL-Zeichenfolge, die von der <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> zum Löschen von Daten verwendet wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Da die jeweiligen Datenbankprodukte verschiedene SQL-Varianten verwenden, hängt die Syntax der SQL-Zeichenfolge vom derzeit verwendeten ADO.NET-Anbieter ab, der durch die <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>-Eigenschaft identifiziert wird.  
  
 Wenn die SQL-Zeichenfolge eine parametrisierte Abfrage oder ein parametrisierter Befehl ist, hängt der Platzhalter des Parameters ebenfalls vom verwendeten ADO.NET-Anbieter ab. Wenn der Anbieter z. b. der <xref:System.Data.SqlClient?displayProperty=nameWithType>ist, bei dem es sich um den Standardanbieter für die <xref:System.Web.UI.WebControls.SqlDataSource>-Klasse handelt, wird der Platzhalter des-Parameters `'@parameterName'`. Wenn der Anbieter jedoch auf die <xref:System.Data.Odbc?displayProperty=nameWithType> oder <xref:System.Data.OleDb?displayProperty=nameWithType>festgelegt ist, wird der Platzhalter des Parameters `'?'`. Weitere Informationen über parametrisierte SQL-Abfragen und-Befehle finden [Sie unter Verwenden von Parametern mit dem SqlDataSource-Steuer](https://docs.microsoft.com/previous-versions/aspnet/z72eefad(v=vs.100))Element.  
  
 Der <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> kann eine SQL-Zeichenfolge oder der Name einer gespeicherten Prozedur sein, wenn die zugrunde liegende Datenbank gespeicherte Prozeduren unterstützt.  
  
 Der Wert der <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A>-Eigenschaft wird im Ansichts Zustand gespeichert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie der <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> Text so festgelegt wird, dass eine Bestellung aus der Tabelle "Northwind database Orders" gelöscht wird. Daten werden aus der Tabelle Orders abgerufen und in einem <xref:System.Web.UI.WebControls.GridView>-Steuerelement angezeigt. Der <xref:System.Web.UI.WebControls.GridView> rendert automatisch eine **Lösch** Schaltfläche, wenn die <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A>-Eigenschaft auf `true` festgelegt ist, füllt automatisch die <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> Auflistung auf und ruft die <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A>-Methode auf, wenn auf die Schaltfläche **Löschen** geklickt wird. Da in diesem Beispiel Daten gelöscht werden, wird ein Ereignishandler zum Sichern der Datenbank auf dem Datenträger hinzugefügt, bevor der Löschvorgang ausgeführt wird.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/CS/sql10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/VB/sql10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="DeleteCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType DeleteCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType DeleteCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType DeleteCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteCommandType : System.Web.UI.WebControls.SqlDataSourceCommandType with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Text in der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />-Eigenschaft eine SQL-Anweisung oder der Name einer gespeicherten Prozedur ist, oder legt diesen Wert fest.</summary>
        <value>Einer der <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />-Werte. Der Standardwert ist der <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" />-Wert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Wert der <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType%2A>-Eigenschaft wird im Ansichts Zustand gespeichert.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der ausgewählte Wert ist keiner der <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />-Werte.</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommandType" />
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />
      </Docs>
    </Member>
    <Member MemberName="Deleted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Deleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Deleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Deleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleted As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Deleted;" />
      <MemberSignature Language="F#" Value="member this.Deleted : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " Usage="member this.Deleted : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn ein Löschvorgang abgeschlossen ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Behandeln Sie das <xref:System.Web.UI.WebControls.SqlDataSourceView.Deleted>-Ereignis, um die Werte der Ausgabeparameter zu überprüfen, nachdem ein Löschvorgang abgeschlossen wurde. Die Ausgabeparameter sind über das <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> Objekt verfügbar, das dem Ereignis zugeordnet ist.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Deleting" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="DeleteParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection DeleteParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeleteParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ DeleteParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeleteParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Parameterauflistung ab, die die von der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />-Eigenschaft verwendeten Parameter enthält.</summary>
        <value>Eine <see cref="T:System.Web.UI.WebControls.ParameterCollection" />, die die von der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />-Eigenschaft verwendeten Parameter enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A>-Eigenschaft eine parametrisierte SQL-Abfrage enthält, enthält die <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A> Auflistung alle <xref:System.Web.UI.WebControls.Parameter>-Objekte, die den Parameter Platzhaltern in der SQL-Zeichenfolge entsprechen.  
  
 Parameter Namen können von der <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A>-Eigenschaft beeinflusst werden. Dies gilt insbesondere, wenn der Name einen Primärschlüssel identifiziert, z. b. einen Schlüssel, der mit der `DataKeyNames`-Eigenschaft eines Daten gebundenen Steuer Elements angegeben wird, oder in DELETE-und Update-Szenarios, in denen die Eigenschaft <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> auf den <xref:System.Web.UI.ConflictOptions.CompareAllValues> Wert festgelegt ist und ein Satz `oldValues` an die entsprechende Daten Methode übermittelt wird. In diesem Fall wird die Format Zeichenfolge auf jeden Parameternamen in der `oldValues` Auflistung angewendet.  
  
 Abhängig vom ADO.NET-Anbieter kann die Reihenfolge der Parameter in der <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A> Auflistung von Bedeutung sein. Die <xref:System.Data.OleDb?displayProperty=nameWithType>-und <xref:System.Data.Odbc?displayProperty=nameWithType> Anbieter ordnen die Parameter in der Auflistung entsprechend der Reihenfolge zu, in der die Parameter in der parametrisierten SQL-Abfrage angezeigt werden. Der <xref:System.Data.SqlClient?displayProperty=nameWithType>-Anbieter, bei dem es sich um den standardmäßigen ADO.NET-Anbieter für das <xref:System.Web.UI.WebControls.SqlDataSource> Steuerelement handelt, ordnet die Parameter in der Auflistung zu, indem der Name des Parameters mit dem Platzhalter in der SQL-Abfrage übereinstimmt. Weitere Informationen über parametrisierte SQL-Abfragen und-Befehle finden [Sie unter Verwenden von Parametern mit dem SqlDataSource-Steuer](https://docs.microsoft.com/previous-versions/aspnet/z72eefad(v=vs.100))Element.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie den <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> Text festlegen, um eine Bestellung aus der Northwind-Datenbank zu löschen. Zunächst werden die Daten aus der Tabelle Orders abgerufen und in einem <xref:System.Web.UI.WebControls.DropDownList> Steuerelement angezeigt. Die <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A>-Eigenschaft muss explizit deklariert und die <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A>-Methode aufgerufen werden, wenn Daten gebundene Steuerelemente verwendet werden, z. b. die <xref:System.Web.UI.WebControls.DropDownList> (im Gegensatz zu Steuerelementen, z. b. die <xref:System.Web.UI.WebControls.GridView> und <xref:System.Web.UI.WebControls.DetailsView>, die automatisch die Parameter auffüllen und die <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A>-Methode für ein Datenquellen-Steuerelement aufzurufen). In diesem Beispiel wird das <xref:System.Web.UI.WebControls.Button.OnClick%2A>-Ereignis an den privaten <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A>-Ereignishandler delegiert, der explizit die <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A>-Methode des <xref:System.Web.UI.WebControls.SqlDataSource>-Steuer Elements aufruft.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_11sql/CS/sql11cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_11sql/VB/sql11vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />
      </Docs>
    </Member>
    <Member MemberName="Deleting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Deleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Deleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Deleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleting As SqlDataSourceCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceCommandEventHandler ^ Deleting;" />
      <MemberSignature Language="F#" Value="member this.Deleting : System.Web.UI.WebControls.SqlDataSourceCommandEventHandler " Usage="member this.Deleting : System.Web.UI.WebControls.SqlDataSourceCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt vor einem Löschvorgang ein.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Behandeln Sie das <xref:System.Web.UI.WebControls.SqlDataSourceView.Deleting>-Ereignis, um zusätzliche Initialisierungs Vorgänge auszuführen, die für Ihre Anwendung spezifisch sind, um die Werte von Parametern zu überprüfen oder um die Parameterwerte zu ändern, bevor das <xref:System.Web.UI.WebControls.SqlDataSource>-Steuerelement den Löschvorgang ausführt.  
  
 Die Verbindung mit der zugrunde liegenden Datenquelle ist noch nicht geöffnet, wenn der Ereignishandlerdelegat aufgerufen wird. Daher können Sie den <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> Vorgang nicht direkt abbrechen, indem Sie die <xref:System.Data.Common.DbCommand.Cancel%2A>-Methode für das <xref:System.Data.Common.DbCommand> Objekt aufrufen, das vom <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> Objekt verfügbar gemacht wird. Sie können den Vorgang jedoch abbrechen, indem Sie die <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>-Eigenschaft des <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> auf `true`festlegen.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie das <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> Ereignis behandelt wird, das vor dem Auftreten eines Löschvorgangs ausgelöst wird. Da in diesem Beispiel Daten aus der Northwind-Datenbank gelöscht werden, wird ein <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A>-Handler hinzugefügt, um zu versuchen, die Datenbank auf dem Datenträger zu sichern, bevor der Löschvorgang ausgeführt wird.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/CS/sql10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/VB/sql10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Deleted" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteDelete">
      <MemberSignature Language="C#" Value="protected override int ExecuteDelete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 ExecuteDelete(class System.Collections.IDictionary keys, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteDelete (keys As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int ExecuteDelete(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ oldValues);" />
      <MemberSignature Language="F#" Value="override this.ExecuteDelete : System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="sqlDataSourceView.ExecuteDelete (keys, oldValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys">Ein <see cref="T:System.Collections.IDictionary" /> von Objekt- bzw. Zeilenschlüsselwerten für den zu löschenden <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />-Vorgang.</param>
        <param name="oldValues">Ein <see cref="T:System.Collections.IDictionary" /> mit Zeilenwerten, die nur dann ausgewertet werden, wenn die <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" />-Eigenschaft auf den <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" />-Wert festgelegt ist.</param>
        <summary>Führt mit der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />-SQL-Zeichenfolge, allen in der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" />-Auflistung angegebenen Parametern sowie den Werten in der angegebenen <paramref name="keys" />-Auflistung und der angegebenen <paramref name="oldValues" />-Auflistung einen Löschvorgang aus.</summary>
        <returns>Ein Wert, der die Anzahl der Zeilen darstellt, die aus der zugrunde liegenden Datenbank gelöscht wurden.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.SqlDataSourceView>-Klasse implementiert die geerbte <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A>-Methode, um Daten aus einer Datenbank zu löschen. Seiten Entwickler und Autoren von Daten gebundenen Steuerelementen nennen die <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete%2A>-Methode nicht direkt. Verwenden Sie stattdessen die öffentlich verfügbar gemachte <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> Methode.  
  
 Die Werte, die in der `keys` Auflistung enthalten sind, werden ausgewertet und mit allen Werten zusammengeführt, die in der <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A> Auflistung enthalten sind. Wenn die <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>-Eigenschaft auf den <xref:System.Web.UI.ConflictOptions.CompareAllValues>-Wert festgelegt ist, werden die in der `oldValues`-Auflistung enthaltenen Werte mit der <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A>-Eigenschaft formatiert und ebenfalls zusammengeführt.  
  
 Bevor der Löschvorgang ausgeführt wird, wird die <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A>-Methode aufgerufen, um das <xref:System.Web.UI.WebControls.SqlDataSourceView.Deleting>-Ereignis zu erhöhen. Sie können dieses Ereignis behandeln, um die Werte der Parameter zu überprüfen und vor dem Löschen eine beliebige Vorverarbeitung auszuführen.  
  
 Zum Ausführen eines Löschvorgangs erstellt das <xref:System.Web.UI.WebControls.SqlDataSourceView>-Objekt ein <xref:System.Data.Common.DbCommand>-Objekt mit dem <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> Text und allen zugehörigen <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A> Eigenschaften und führt dann das <xref:System.Data.Common.DbCommand>-Objekt für die zugrunde liegende Datenbank aus. Nachdem der Löschvorgang abgeschlossen wurde, wird die <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A>-Methode aufgerufen, um das <xref:System.Web.UI.WebControls.SqlDataSourceView.Deleted>-Ereignis zu erhöhen. Sie können dieses Ereignis behandeln, um alle Rückgabewerte und Fehlercodes zu überprüfen und Nachbearbeitung auszuführen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> kann keine Verbindung mit der zugrunde liegenden Datenquelle herstellen.  
  
Oder 
Die <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" />-Eigenschaft wird auf den <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" />-Wert festgelegt, und es werden keine <paramref name="oldValues" />-Parameter übergeben.</exception>
        <exception cref="T:System.Web.HttpException">Der aktuelle Benutzer verfügt nicht über die erforderlichen Berechtigungen für den Zugriff auf die Datenbank.  
  
Oder 
Die Instanz des Steuerelements ist ein <see cref="T:System.Web.UI.WebControls.AccessDataSource" />-Steuerelement, und der Zugriff auf den für die <see cref="P:System.Web.UI.WebControls.AccessDataSource.DataFile" />-Eigenschaft angegebenen Pfad wird verweigert.</exception>
        <exception cref="T:System.NotSupportedException">Die <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanDelete" />-Eigenschaft ist <see langword="false" />.  
  
Oder 
Vor dem Verwenden einer Instanz des <see cref="T:System.Web.UI.WebControls.AccessDataSource" />-Steuerelements wurde ein relativer Pfad zur Entwurfszeit vom Designer nicht ordnungsgemäß zugeordnet.</exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteInsert">
      <MemberSignature Language="C#" Value="protected override int ExecuteInsert (System.Collections.IDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 ExecuteInsert(class System.Collections.IDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteInsert (values As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int ExecuteInsert(System::Collections::IDictionary ^ values);" />
      <MemberSignature Language="F#" Value="override this.ExecuteInsert : System.Collections.IDictionary -&gt; int" Usage="sqlDataSourceView.ExecuteInsert values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="values">Ein <see cref="T:System.Collections.IDictionary" /> mit Werten, die zusammen mit der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />-Eigenschaft zum Ausführen eines Einfügevorgangs für die Datenbank verwendet werden. Wenn der Abfrage keine Parameter zugeordnet sind oder die <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />-Eigenschaft keine parametrisierte SQL-Abfrage ist, wird <see langword="null" /> übergeben.</param>
        <summary>Führt mithilfe der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />-SQL-Zeichenfolge, aller in der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" />-Auflistung angegebenen Parameter sowie der Werte in der angegebenen <paramref name="values" />-Auflistung einen Einfügevorgang aus.</summary>
        <returns>Ein Wert, der die Anzahl der in die zugrunde liegenden Datenbank eingefügten Zeilen darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.SqlDataSourceView>-Klasse implementiert die geerbte <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A>-Methode, um Daten in eine Datenbank einzufügen. Seiten Entwickler und Autoren von Daten gebundenen Steuerelementen nennen die <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert%2A>-Methode nicht direkt. Verwenden Sie stattdessen die öffentlich verfügbar gemachte <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> Methode.  
  
 Bevor der INSERT-Vorgang ausgeführt wird, wird die <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A>-Methode aufgerufen, um das <xref:System.Web.UI.WebControls.SqlDataSourceView.Inserting>-Ereignis zu erhöhen. Sie können dieses Ereignis behandeln, um die Werte der Parameter zu überprüfen und vor der Einfügung eine beliebige Vorverarbeitung auszuführen.  
  
 Zum Ausführen eines Einfügevorgangs erstellt das <xref:System.Web.UI.WebControls.SqlDataSourceView> Objekt ein <xref:System.Data.Common.DbCommand>-Objekt mit dem <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> Text und allen zugeordneten <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A> Eigenschaften und führt dann das <xref:System.Data.Common.DbCommand> Objekt für die zugrunde liegende Datenbank aus. Nachdem die INSERT-Anweisung abgeschlossen ist, wird die <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A>-Methode aufgerufen, um das <xref:System.Web.UI.WebControls.SqlDataSourceView.Inserted>-Ereignis zu erhöhen. Sie können dieses Ereignis behandeln, um alle Rückgabewerte und Fehlercodes zu überprüfen und Nachbearbeitung auszuführen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> kann keine Verbindung mit der zugrunde liegenden Datenquelle herstellen.</exception>
        <exception cref="T:System.Web.HttpException">Der aktuelle Benutzer verfügt nicht über die erforderlichen Berechtigungen für den Zugriff auf die Datenbank.</exception>
        <exception cref="T:System.NotSupportedException">Die <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanInsert" />-Eigenschaft ist <see langword="false" />.</exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteSelect">
      <MemberSignature Language="C#" Value="protected internal override System.Collections.IEnumerable ExecuteSelect (System.Web.UI.DataSourceSelectArguments arguments);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.Collections.IEnumerable ExecuteSelect(class System.Web.UI.DataSourceSelectArguments arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function ExecuteSelect (arguments As DataSourceSelectArguments) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Collections::IEnumerable ^ ExecuteSelect(System::Web::UI::DataSourceSelectArguments ^ arguments);" />
      <MemberSignature Language="F#" Value="override this.ExecuteSelect : System.Web.UI.DataSourceSelectArguments -&gt; System.Collections.IEnumerable" Usage="sqlDataSourceView.ExecuteSelect arguments" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Web.UI.DataSourceSelectArguments" />
      </Parameters>
      <Docs>
        <param name="arguments">Ein <see cref="T:System.Web.UI.DataSourceSelectArguments" />-Objekt, mit dem Datenvorgängen angefordert werden, die über einen grundlegenden Datenabruf hinausgehen.</param>
        <summary>Ruft Daten aus der zugrunde liegenden Datenbank mithilfe der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />-SQL-Zeichenfolge und aller Parameter in der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />-Auflistung ab.</summary>
        <returns>Eine <see cref="T:System.Collections.IEnumerable" />-Liste mit Datenzeilen.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.SqlDataSourceView>-Klasse implementiert die geerbte <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A>-Methode, um Daten aus einer Datenbank abzurufen. Seiten Entwickler und Autoren von Daten gebundenen Steuerelementen nennen die <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A>-Methode nicht direkt. Verwenden Sie stattdessen die öffentlich verfügbar gemachte <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> Methode.  
  
 Bevor der Datenabruf durchgeführt wird, wird die <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting%2A>-Methode aufgerufen, um das <xref:System.Web.UI.WebControls.SqlDataSourceView.Selecting>-Ereignis zu erhöhen. Sie können dieses Ereignis behandeln, um die Werte der Parameter zu überprüfen und eine Vorverarbeitung durchzuführen, bevor Daten abgerufen werden.  
  
 Um den Vorgang auszuführen, erstellt das <xref:System.Web.UI.WebControls.SqlDataSourceView> Objekt ein <xref:System.Data.Common.DbCommand>-Objekt mit dem <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> Text und allen zugehörigen <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>und führt es für die zugrunde liegende Datenbank aus. Nachdem der Vorgang abgeschlossen wurde, wird die <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelected%2A>-Methode aufgerufen, um das <xref:System.Web.UI.WebControls.SqlDataSource.Selected>-Ereignis zu erhöhen. Sie können dieses Ereignis behandeln, um alle Rückgabewerte und Fehlercodes zu überprüfen und Nachbearbeitung auszuführen.  
  
 Die <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A>-Methode gibt ein <xref:System.Data.DataView> Objekt zurück, wenn die <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> auf <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet>festgelegt ist, oder ein <xref:System.Data.IDataReader> Objekt, wenn die <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> auf <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader>festgelegt ist. Schließen Sie das <xref:System.Data.IDataReader> Objekt, wenn Sie mit dem Lesen der Daten fertig sind.  
  
 Wenn die <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> auf <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> festgelegt ist und Caching aktiviert ist, ruft der <xref:System.Web.UI.WebControls.SqlDataSourceView> während des Daten Vorgangs Daten aus ab und speichert Daten im Cache. Der Cache wird basierend auf dem zwischen Speicherungs Verhalten, das durch die Kombination der Eigenschaften <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> und <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> angegeben wird, erstellt, verworfen oder aktualisiert.  
  
> [!IMPORTANT]
>  Wenn Sie einen Client Identitätswechsel unter der Windows-Authentifizierung verwenden, werden die Daten zwischengespeichert, wenn der erste Benutzer auf die Daten zugreift. Wenn ein anderer Benutzer die gleichen Daten anfordert, werden die Daten aus dem Cache abgerufen. Die Daten werden nicht durch einen weiteren Daten Bank Abruf abgerufen, um den Zugriff des Benutzers auf die Daten zu überprüfen. Wenn Sie davon ausgehen, dass mehrere Benutzer auf die Daten zugreifen müssen und jeder Abruf der Daten durch die Sicherheits Konfigurationen der Datenbank überprüft werden soll, sollten Sie die Zwischenspeicherung nicht verwenden.  
  
 Wenn die <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> auf <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> festgelegt ist und eine <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> angegeben wurde, wird Sie zusammen mit allen angegebenen <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> ausgewertet, und der resultierende Filter wird während des Datenabruf Vorgangs auf die Liste der Daten angewendet.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Die an die <paramref name="arguments" />-Methode übergebenen <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> geben an, dass die Datenquelle während des Datenabrufs noch weitere Aufgaben ausführen muss, um das Paging oder das Sortieren der abgerufenen Daten zu ermöglichen. Das Datenquellen-Steuerelement unterstützt die erforderlichen Funktionen jedoch nicht.  
  
Oder 
Caching ist aktiviert, aber die <see cref="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" />-Eigenschaft der Datenquelle ist nicht auf <see cref="F:System.Web.UI.WebControls.SqlDataSourceMode.DataSet" /> festgelegt.  
  
Oder 
Die <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName" />-Eigenschaft wurde festgelegt, aber <see cref="P:System.Data.SqlClient.SqlCommand.CommandType" /> ist nicht auf <see cref="F:System.Data.CommandType.StoredProcedure" /> festgelegt.</exception>
        <exception cref="T:System.InvalidOperationException">Die Datenquelle kann keine Datenbankverbindung erstellen.  
  
Oder
  
 Die Zwischenspeicherung ist aktiviert, aber die internen Cache- und Befehlstypen entsprechen einander nicht.</exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteUpdate">
      <MemberSignature Language="C#" Value="protected override int ExecuteUpdate (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 ExecuteUpdate(class System.Collections.IDictionary keys, class System.Collections.IDictionary values, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteUpdate (keys As IDictionary, values As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int ExecuteUpdate(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values, System::Collections::IDictionary ^ oldValues);" />
      <MemberSignature Language="F#" Value="override this.ExecuteUpdate : System.Collections.IDictionary * System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="sqlDataSourceView.ExecuteUpdate (keys, values, oldValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys">Ein <see cref="T:System.Collections.IDictionary" /> mit Primärschlüsseln, die mit der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />-Eigenschaft zum Ausführen des Aktualisierungsvorgangs für die Datenbank verwendet werden. Wenn der Abfrage keine Schlüssel zugeordnet sind oder die <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />-Eigenschaft keine parametrisierte SQL-Abfrage ist, wird <see langword="null" /> übergeben.</param>
        <param name="values">Ein <see cref="T:System.Collections.IDictionary" /> mit Werten, die mit der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />-Eigenschaft zum Ausführen des Aktualisierungsvorgangs für die Datenbank verwendet werden. Wenn der Abfrage keine Parameter zugeordnet sind oder der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> keine parametrisierte SQL-Abfrage ist, wird <see langword="null" /> übergeben.</param>
        <param name="oldValues">Ein <see cref="T:System.Collections.IDictionary" />, das die ursprünglichen Werte in der Datenbank darstellt. Wenn der Abfrage keine Parameter zugeordnet sind oder die <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />-Eigenschaft keine parametrisierte SQL-Abfrage ist, wird <see langword="null" /> übergeben.</param>
        <summary>Führt mithilfe der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />-SQL-Zeichenfolge, aller Parameter in der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" />-Auflistung sowie der Werte in den angegebenen Auflistungen <paramref name="keys" />, <paramref name="values" /> und <paramref name="oldValues" /> einen Aktualisierungsvorgang aus.</summary>
        <returns>Ein Wert, der die Anzahl der aktualisierten Zeilen in der zugrunde liegenden Datenbank darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.SqlDataSourceView>-Klasse implementiert die geerbte <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate%2A>-Methode, um Daten in einer Datenbank zu aktualisieren. Seiten Entwickler und Autoren von Daten gebundenen Steuerelementen nennen die <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate%2A>-Methode nicht direkt. Verwenden Sie stattdessen die öffentlich verfügbar gemachte <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> Methode.  
  
 Die Werte in den `keys`-und `values` Auflistungen werden ausgewertet und mit allen Werten zusammengeführt, die in der <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A>-Auflistung enthalten sind. Wenn die <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>-Eigenschaft auf <xref:System.Web.UI.ConflictOptions.CompareAllValues>festgelegt ist, werden die Werte, die in der `oldValues`-Auflistung enthalten sind, mit dem <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> formatiert und ebenfalls zusammengeführt.  
  
 Bevor der Aktualisierungs Vorgang ausgeführt wird, wird die <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A>-Methode aufgerufen, um das <xref:System.Web.UI.WebControls.SqlDataSourceView.Updating>-Ereignis zu erhöhen. Sie können dieses Ereignis behandeln, um die Werte der Parameter zu überprüfen und vor einem Update eine beliebige Vorverarbeitung auszuführen.  
  
 Zum Ausführen des Vorgangs erstellt der <xref:System.Web.UI.WebControls.SqlDataSourceView> ein <xref:System.Data.Common.DbCommand>-Objekt mit dem <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> Text und allen zugeordneten <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A> Eigenschaften und führt dann das <xref:System.Data.Common.DbCommand> Objekt für die zugrunde liegende Datenbank aus. Nachdem der Vorgang abgeschlossen wurde, wird die <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated%2A>-Methode aufgerufen, um das <xref:System.Web.UI.WebControls.SqlDataSourceView.Updated>-Ereignis zu erhöhen. Sie können dieses Ereignis behandeln, um alle Rückgabewerte und Fehlercodes zu überprüfen und Nachbearbeitung auszuführen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> kann keine Verbindung mit der zugrunde liegenden Datenquelle herstellen.  
  
Oder 
Die <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" />-Eigenschaft wird auf den <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" />-Wert festgelegt, und es werden keine <paramref name="oldValues" />-Parameter übergeben.</exception>
        <exception cref="T:System.Web.HttpException">Der aktuelle Benutzer verfügt nicht über die erforderlichen Berechtigungen für den Zugriff auf die Datenbank.</exception>
        <exception cref="T:System.NotSupportedException">Die <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate" />-Eigenschaft ist <see langword="false" />.</exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" />
      </Docs>
    </Member>
    <Member MemberName="FilterExpression">
      <MemberSignature Language="C#" Value="public string FilterExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilterExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FilterExpression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FilterExpression : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.FilterExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Filterausdruck ab, der angewendet wird, wenn die <see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Select" /> -Methode aufgerufen wird, oder legt diesen fest.</summary>
        <value>Eine Zeichenfolge, die einen Filterausdruck darstellt, der angewendet wird, wenn Daten mithilfe der <see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />-Methode abgerufen werden.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Syntax, die für die <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A>-Eigenschaft verwendet wird, ist eine Format Zeichenfolgen-Syntax. Sie können Parameter in die <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A>-Eigenschaft einschließen. Wenn der Typ des Parameters eine Zeichenfolge oder ein Zeichen ist, müssen Sie den Parameter in einfache Anführungszeichen einschließen. Anführungszeichen sind nicht erforderlich, wenn es sich bei dem Parameter um einen numerischen Typ handelt.  
  
 Die <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A>-Auflistung enthält die Parameter, die für die Platzhalter in der <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>-Eigenschaft ausgewertet werden.  
  
 Das <xref:System.Web.UI.WebControls.SqlDataSource>-Steuerelement unterstützt das Filtern von Daten nur im `DataSet` Modus.  
  
 Der Wert der <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A>-Eigenschaft wird im Ansichts Zustand gespeichert.  
  
> [!IMPORTANT]
>  Sie sollten jeden Filter Parameterwert validieren, den Sie vom Client erhalten. Die Runtime ersetzt einfach den Parameterwert in den Filter Ausdruck und wendet ihn auf das <xref:System.Data.DataView> Objekt an, das von der <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>-Methode zurückgegeben wird. Wenn Sie die <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>-Eigenschaft als Sicherheitsmaßnahme verwenden, um die Anzahl der zurückgegebenen Elemente einzuschränken, müssen Sie die Parameterwerte vor dem Filtern überprüfen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Daten aus der Northwind-Datenbank abgerufen und mithilfe der Eigenschaften <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> und <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> gefiltert werden. Die <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>-Eigenschaft des <xref:System.Web.UI.WebControls.SqlDataSource> Steuer Elements wird jedes Mal angewendet, wenn die <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>-Methode ausgeführt wird, um Daten abzurufen. In diesem Beispiel enthält die <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>-Eigenschaft einen Platzhalter für einen Filter Parameter, der in der <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>-Auflistung enthalten ist. In diesem Beispiel ist der Filter-Parameter ein <xref:System.Web.UI.WebControls.ControlParameter> Objekt, das an die <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A>-Eigenschaft des <xref:System.Web.UI.WebControls.DropDownList>-Steuer Elements gebunden ist. Da für das <xref:System.Web.UI.WebControls.DropDownList>-Steuerelement die <xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A>-Eigenschaft auf `true`festgelegt ist, bewirkt jede Änderung in der <xref:System.Web.UI.WebControls.DropDownList> Auswahl, dass die Seite an den Server gesendet wird und das <xref:System.Web.UI.WebControls.GridView>-Steuerelement mit dem neuen Filter erneut an das Datenquellen Steuerelement gebunden wird.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/CS/sql17cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/VB/sql17vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Die <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression" />-Eigenschaft wurde festgelegt, während sich die <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> im <see cref="F:System.Web.UI.WebControls.SqlDataSourceMode.DataReader" />-Modus befand.</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" />
      </Docs>
    </Member>
    <Member MemberName="Filtering">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler Filtering;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler Filtering" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Filtering" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Filtering As SqlDataSourceFilteringEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceFilteringEventHandler ^ Filtering;" />
      <MemberSignature Language="F#" Value="member this.Filtering : System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler " Usage="member this.Filtering : System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt vor einem Filtervorgang auf.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Behandeln Sie das <xref:System.Web.UI.WebControls.SqlDataSourceView.Filtering>-Ereignis, um Validierungs Vorgänge für Filter Parameterwerte auszuführen, bevor das <xref:System.Web.UI.WebControls.SqlDataSourceView>-Objekt einen Filter Vorgang ausführt. Sie können die <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>-Methode abbrechen, indem Sie die <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>-Eigenschaft des <xref:System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs>-Objekts auf `true`festlegen. Das-Ereignis wird nur ausgelöst, wenn die <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A>-Eigenschaft festgelegt ist.  
  
> [!IMPORTANT]
>  Sie sollten jeden Filter Parameterwert validieren, den Sie vom Client erhalten. Die Runtime ersetzt einfach den Parameterwert in den Filter Ausdruck und wendet ihn auf das <xref:System.Data.DataView> Objekt an, das von der <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>-Methode zurückgegeben wird. Wenn Sie die <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>-Eigenschaft als Sicherheitsmaßnahme verwenden, um die Anzahl der zurückgegebenen Elemente einzuschränken, müssen Sie die Parameterwerte vor dem Filtern überprüfen.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Filtering" />
      </Docs>
    </Member>
    <Member MemberName="FilterParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection FilterParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection FilterParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilterParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ FilterParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FilterParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.SqlDataSourceView.FilterParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Auflistung von Parametern ab, die beliebigen Parameterplatzhaltern in der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression" />-Zeichenfolge zugeordnet sind.</summary>
        <value>Eine <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> mit einer Reihe von Parametern, die beliebigen Parameterplatzhaltern in der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression" />-Eigenschaft zugeordnet sind.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Parameter in der <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> Auflistung sind mit Parametern verknüpft, die in der <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A>-Eigenschaft angegeben sind. Die Parameter Platzhalter, die im <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> angegeben werden, werden nach Reihenfolge ausgewertet und mit Parameter Objekten in der <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> Auflistung verglichen, wenn die <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>-Methode aufgerufen wird.  
  
> [!IMPORTANT]
>  Sie sollten jeden Filter Parameterwert validieren, den Sie vom Client erhalten. Die Runtime ersetzt einfach den Parameterwert in den Filter Ausdruck und wendet ihn auf das <xref:System.Data.DataView> Objekt an, das von der <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>-Methode zurückgegeben wird. Wenn Sie die <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>-Eigenschaft als Sicherheitsmaßnahme verwenden, um die Anzahl der zurückgegebenen Elemente einzuschränken, müssen Sie die Parameterwerte vor dem Filtern überprüfen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Daten aus der Northwind-Datenbank abgerufen und mithilfe der Eigenschaften <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> und <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> gefiltert werden. Die <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>-Eigenschaft des <xref:System.Web.UI.WebControls.SqlDataSource> Steuer Elements wird jedes Mal angewendet, wenn die <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>-Methode ausgeführt wird, um Daten abzurufen. In diesem Beispiel enthält die <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>-Eigenschaft einen Platzhalter für einen Filter Parameter, der in der <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>-Auflistung enthalten ist. Außerdem ist der Filter Parameter ein <xref:System.Web.UI.WebControls.ControlParameter> Objekt, das an die <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A>-Eigenschaft des <xref:System.Web.UI.WebControls.DropDownList>-Steuer Elements gebunden ist. Da die <xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A>-Eigenschaft für das <xref:System.Web.UI.WebControls.DropDownList>-Steuerelement auf "`true`" festgelegt ist, wird durch jede Änderung in der <xref:System.Web.UI.WebControls.DropDownList> Auswahl die Seite an den Server zurückgesendet, und das <xref:System.Web.UI.WebControls.GridView> Steuerelement wird mit dem neuen Filter erneut an das Datenquellen Steuerelement gebunden.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/CS/sql17cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/VB/sql17vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public int Insert (System.Collections.IDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Insert(class System.Collections.IDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (values As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Insert(System::Collections::IDictionary ^ values);" />
      <MemberSignature Language="F#" Value="override this.Insert : System.Collections.IDictionary -&gt; int" Usage="sqlDataSourceView.Insert values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="values">Ein <see cref="T:System.Collections.IDictionary" /> mit Parametern, die von der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />-Eigenschaft zum Ausführen des Einfügevorgangs für die Datenbank verwendet werden. Wenn der Abfrage keine Parameter zugeordnet sind oder der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> keine parametrisierte SQL-Abfrage ist, wird <see langword="null" /> übergeben.</param>
        <summary>Führt mithilfe der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />-SQL-Zeichenfolge, aller in der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" />-Auflistung angegebenen Parameter sowie der Werte in der angegebenen <paramref name="values" />-Auflistung einen Einfügevorgang aus.</summary>
        <returns>Ein Wert, der die Anzahl der in die zugrunde liegenden Datenbank eingefügten Zeilen darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.SqlDataSourceView.Insert%2A>-Methode ruft die <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert%2A>-Methode auf, wobei der `values`-Parameter übergeben wird.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> kann keine Verbindung mit der zugrunde liegenden Datenquelle herstellen.</exception>
        <exception cref="T:System.NotSupportedException">Die <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanInsert" />-Eigenschaft ist <see langword="false" />.</exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public string InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InsertCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertCommand : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die SQL-Zeichenfolge ab, mit deren Hilfe das <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" />-Objekt Daten in die zugrunde liegende Datenbank einfügt, oder legt diese fest.</summary>
        <value>Eine SQL-Zeichenfolge, die von der <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> zum Einfügen von Daten verwendet wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Da die jeweiligen Datenbankprodukte verschiedene SQL-Varianten verwenden, hängt die Syntax der SQL-Zeichenfolge vom derzeit verwendeten ADO.NET-Anbieter ab, der durch die <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>-Eigenschaft identifiziert wird. Wenn die SQL-Zeichenfolge eine parametrisierte Abfrage oder ein parametrisierter Befehl ist, hängt der Platzhalter des Parameters ebenfalls vom verwendeten ADO.NET-Anbieter ab. Wenn der Anbieter z. b. der <xref:System.Data.SqlClient?displayProperty=nameWithType>ist, bei dem es sich um den Standardanbieter für die <xref:System.Web.UI.WebControls.SqlDataSource>-Klasse handelt, wird der Platzhalter des-Parameters `'@parameterName'`. Wenn der Anbieter jedoch auf die <xref:System.Data.Odbc?displayProperty=nameWithType> oder <xref:System.Data.OleDb?displayProperty=nameWithType>festgelegt ist, wird der Platzhalter des Parameters `'?'`. Weitere Informationen über parametrisierte SQL-Abfragen und-Befehle finden [Sie unter Verwenden von Parametern mit dem SqlDataSource-Steuer](https://docs.microsoft.com/previous-versions/aspnet/z72eefad(v=vs.100))Element.  
  
 Bei der <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A>-Eigenschaft kann es sich um eine SQL-Zeichenfolge oder den Namen einer gespeicherten Prozedur handeln, wenn die Datenquelle gespeicherte Prozeduren unterstützt.  
  
 Der Wert der <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A>-Eigenschaft wird im Ansichts Zustand gespeichert.  
  
   
  
## Examples  
 Dieser Abschnitt enthält zwei Codebeispiele. Im ersten Codebeispiel wird veranschaulicht, wie Daten mithilfe des <xref:System.Web.UI.WebControls.SqlDataSource>-Steuer Elements in eine Datenbank eingefügt werden. Im zweiten Codebeispiel wird veranschaulicht, wie Sie Daten aus Microsoft SQL Server abrufen, in einem <xref:System.Web.UI.WebControls.GridView> Steuerelement anzeigen und ein <xref:System.Web.UI.WebControls.DetailsView>-Steuerelement verwenden, um die Details einer ausgewählten Zeile in der <xref:System.Web.UI.WebControls.GridView> und als Formular zum Einfügen neuer Datensätze anzuzeigen.  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie Daten mithilfe des <xref:System.Web.UI.WebControls.SqlDataSource>-Steuer Elements in eine Datenbank eingefügt werden. Die aktuellen Daten in der Tabelle werden im <xref:System.Web.UI.WebControls.DropDownList> Steuerelement angezeigt. Sie können neue Datensätze hinzufügen, indem Sie Werte in den <xref:System.Web.UI.WebControls.TextBox>-Steuerelementen eingeben und dann auf die Schaltfläche **Einfügen** klicken. Wenn auf die Schaltfläche **Einfügen** geklickt wird, werden die angegebenen Werte in die Datenbank eingefügt, und der <xref:System.Web.UI.WebControls.DropDownList> wird aktualisiert.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/CS/sql24cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/VB/sql24vb.aspx#1)]  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie Daten aus SQL Server abrufen, in einem <xref:System.Web.UI.WebControls.GridView> Steuerelement anzeigen und ein <xref:System.Web.UI.WebControls.DetailsView>-Steuerelement verwenden, um die Details einer ausgewählten Zeile in der <xref:System.Web.UI.WebControls.GridView> und als Formular zum Einfügen neuer Datensätze anzuzeigen.  
  
 Zunächst werden die Daten im <xref:System.Web.UI.WebControls.GridView>-Steuerelement angezeigt, und die ausgewählte Zeile der <xref:System.Web.UI.WebControls.GridView> wird auch im <xref:System.Web.UI.WebControls.DetailsView>-Steuerelement angezeigt. Die Steuerelemente <xref:System.Web.UI.WebControls.GridView> und <xref:System.Web.UI.WebControls.DetailsView> verwenden unterschiedliche Datenquellen Steuerelemente. das, das dem <xref:System.Web.UI.WebControls.DetailsView> zugeordnet ist, verfügt über die Eigenschaften <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> und <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>, die sicherstellen, dass die ausgewählte Zeile der <xref:System.Web.UI.WebControls.GridView> angezeigt wird.  
  
 Wenn Sie auf die automatisch generierte Schaltfläche **Einfügen** des <xref:System.Web.UI.WebControls.DetailsView>-Steuer Elements klicken, zeigt die <xref:System.Web.UI.WebControls.DetailsView> eine andere Benutzeroberfläche an, die zum Einfügen eines neuen Datensatzes verwendet wird. Im Beispiel wird eine gespeicherte Prozedur verwendet, um Datensätze einzufügen, und gibt den Primärschlüssel der eingefügten Zeile zurück. Wenn Sie einen Datensatz einfügen, füllt der <xref:System.Web.UI.WebControls.DetailsView> automatisch die <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> Auflistung mit Werten aus den gebundenen Spalten auf und ruft die <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A>-Methode auf. Der <xref:System.Web.UI.WebControls.DetailsView> kann die richtigen Parameter aus jedem <xref:System.Web.UI.WebControls.BoundField> Objekt und einen Parameter für das <xref:System.Web.UI.WebControls.TemplateField> Objekt ableiten, wenn die ASP.net-bidirektionale Daten Bindungs Syntax verwendet wird. In diesem Beispiel wird ein zusätzlicher Parameter im <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A>-Ereignishandler hinzugefügt, um den Primärschlüssel zu verarbeiten, der von der gespeicherten Prozedur zurückgegeben wird.  
  
 Nachdem die Daten vom <xref:System.Web.UI.WebControls.DetailsView>-Steuerelement in die Datenbank eingefügt wurden, wird der <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A>-Ereignishandler aufgerufen, um das <xref:System.Web.UI.WebControls.SqlDataSource.Inserted>-Ereignis zu behandeln. der Wert des Primärschlüssels der eingefügten Zeile wird angezeigt, und die <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A>-Methode des <xref:System.Web.UI.WebControls.GridView>-Steuer Elements wird explizit aufgerufen, um die Daten zu aktualisieren.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="InsertCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType InsertCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType InsertCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType InsertCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberSignature Language="F#" Value="member this.InsertCommandType : System.Web.UI.WebControls.SqlDataSourceCommandType with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Text in der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />-Eigenschaft eine SQL-Anweisung oder der Name einer gespeicherten Prozedur ist, oder legt diesen Wert fest.</summary>
        <value>Einer der <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />-Werte. Der Wert ist der <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" />-Wert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Wert der <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType%2A>-Eigenschaft wird im Ansichts Zustand gespeichert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie Daten aus Microsoft SQL Server abrufen, in einem <xref:System.Web.UI.WebControls.GridView> Steuerelement anzeigen und ein <xref:System.Web.UI.WebControls.DetailsView>-Steuerelement verwenden, um die Details einer ausgewählten Zeile in der <xref:System.Web.UI.WebControls.GridView> und als Formular zum Einfügen neuer Datensätze anzuzeigen.  
  
 Das <xref:System.Web.UI.WebControls.GridView>-Steuerelement zeigt eine Gruppe von Daten an, und das <xref:System.Web.UI.WebControls.DetailsView>-Steuerelement zeigt die Details für eine bestimmte Zeile an. Wenn Sie auf die automatisch generierte Schaltfläche **Einfügen** des <xref:System.Web.UI.WebControls.DetailsView>-Steuer Elements klicken, zeigt die <xref:System.Web.UI.WebControls.DetailsView> eine andere Benutzeroberfläche an, die zum Einfügen eines neuen Datensatzes verwendet wird. Im Beispiel wird eine gespeicherte Prozedur verwendet, um Datensätze einzufügen, und gibt den Primärschlüssel der eingefügten Zeile zurück. Der Name der gespeicherten Prozedur wird in der <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A>-Eigenschaft festgelegt und als gespeicherte Prozedur identifiziert, indem die <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommandType%2A>-Eigenschaft auf den <xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure>-Wert festgelegt wird.  
  
 Nachdem die Daten vom <xref:System.Web.UI.WebControls.DetailsView>-Steuerelement in die Datenbank eingefügt wurden, wird der <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A>-Ereignishandler aufgerufen, um das <xref:System.Web.UI.WebControls.SqlDataSource.Inserted>-Ereignis zu behandeln. der Wert des Primärschlüssels der eingefügten Zeile wird angezeigt, und die <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A>-Methode des <xref:System.Web.UI.WebControls.GridView>-Steuer Elements wird explizit aufgerufen, um die Daten zu aktualisieren.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der ausgewählte Wert ist keiner der <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />-Werte.</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommandType" />
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />
      </Docs>
    </Member>
    <Member MemberName="Inserted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Inserted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Inserted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Inserted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserted As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Inserted;" />
      <MemberSignature Language="F#" Value="member this.Inserted : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " Usage="member this.Inserted : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn ein Einfügevorgang abgeschlossen wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Behandeln Sie das <xref:System.Web.UI.WebControls.SqlDataSourceView.Inserted>-Ereignis, um die Werte der Ausgabeparameter zu überprüfen, nachdem ein INSERT-Vorgang abgeschlossen wurde. Die Ausgabeparameter sind über das <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> Objekt verfügbar, das dem Ereignis zugeordnet ist.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Daten aus Microsoft SQL Server abgerufen und in einem <xref:System.Web.UI.WebControls.GridView>-Steuerelement angezeigt werden. Im Beispiel wird außerdem ein <xref:System.Web.UI.WebControls.DetailsView>-Steuerelement verwendet, um Details der ausgewählten Zeile in der <xref:System.Web.UI.WebControls.GridView>anzuzeigen, und als Formular zum Einfügen neuer Datensätze.  
  
 Zunächst werden die Daten im <xref:System.Web.UI.WebControls.GridView> Steuerelement angezeigt, und die ausgewählte Zeile der <xref:System.Web.UI.WebControls.GridView> wird ebenfalls im <xref:System.Web.UI.WebControls.DetailsView>angezeigt. Die Steuerelemente <xref:System.Web.UI.WebControls.GridView> und <xref:System.Web.UI.WebControls.DetailsView> verwenden unterschiedliche Datenquellen Steuerelemente. das, das dem <xref:System.Web.UI.WebControls.DetailsView> zugeordnet ist, verfügt über die Eigenschaften <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> und <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>, die sicherstellen, dass die ausgewählte Zeile der <xref:System.Web.UI.WebControls.GridView> angezeigt wird.  
  
 Wenn Sie auf die automatisch generierte Schaltfläche **Einfügen** des <xref:System.Web.UI.WebControls.DetailsView>-Steuer Elements klicken, zeigt die <xref:System.Web.UI.WebControls.DetailsView> eine andere Benutzeroberfläche an, die zum Einfügen eines neuen Datensatzes verwendet wird. Im Beispiel wird eine gespeicherte Prozedur verwendet, um Datensätze einzufügen, und gibt den Primärschlüssel der eingefügten Zeile zurück. Wenn Sie einen Datensatz einfügen, füllt der <xref:System.Web.UI.WebControls.DetailsView> automatisch die <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> Auflistung mit Werten aus den gebundenen Spalten auf und ruft die <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A>-Methode auf. Der <xref:System.Web.UI.WebControls.DetailsView> kann die richtigen Parameter aus jedem <xref:System.Web.UI.WebControls.BoundField> Objekt und einen Parameter für das <xref:System.Web.UI.WebControls.TemplateField> Objekt ableiten, wenn die ASP.net-bidirektionale Daten Bindungs Syntax verwendet wird. In diesem Beispiel wird ein zusätzlicher Parameter im <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A>-Ereignishandler hinzugefügt, um den Primärschlüssel zu verarbeiten, der von der gespeicherten Prozedur zurückgegeben wird.  
  
 Nachdem die Daten vom <xref:System.Web.UI.WebControls.DetailsView>-Steuerelement in die Datenbank eingefügt wurden, wird der <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A>-Ereignishandler aufgerufen, um das <xref:System.Web.UI.WebControls.SqlDataSource.Inserted>-Ereignis zu behandeln. der Wert des Primärschlüssels der eingefügten Zeile wird angezeigt, und die <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A>-Methode des <xref:System.Web.UI.WebControls.GridView>-Steuer Elements wird explizit aufgerufen, um die Daten zu aktualisieren.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Inserting" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="Inserting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Inserting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Inserting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Inserting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserting As SqlDataSourceCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceCommandEventHandler ^ Inserting;" />
      <MemberSignature Language="F#" Value="member this.Inserting : System.Web.UI.WebControls.SqlDataSourceCommandEventHandler " Usage="member this.Inserting : System.Web.UI.WebControls.SqlDataSourceCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt vor einem Einfügevorgang ein.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Behandeln Sie das <xref:System.Web.UI.WebControls.SqlDataSourceView.Inserting>-Ereignis, um zusätzliche Initialisierungs Vorgänge auszuführen, die für Ihre Anwendung spezifisch sind, um die Werte von Parametern zu überprüfen oder um die Parameterwerte zu ändern, bevor das <xref:System.Web.UI.WebControls.SqlDataSource>-Steuerelement den Einfügevorgang ausführt.  
  
 Die Verbindung mit der zugrunde liegenden Datenquelle ist noch nicht geöffnet, wenn der Ereignishandlerdelegat aufgerufen wird. Daher können Sie den Daten Bank Vorgang nicht direkt abbrechen, indem Sie die <xref:System.Data.Common.DbCommand.Cancel%2A>-Methode für das <xref:System.Data.Common.DbCommand> Objekt aufrufen, das vom <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>-Objekt verfügbar gemacht wird. Sie können den Daten Bank Vorgang jedoch abbrechen, indem Sie die <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>-Eigenschaft des <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> auf `true`festlegen.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Daten aus Microsoft SQL Server abgerufen und in einem <xref:System.Web.UI.WebControls.GridView>-Steuerelement angezeigt werden. Im Beispiel wird außerdem ein <xref:System.Web.UI.WebControls.DetailsView>-Steuerelement verwendet, um Details der ausgewählten Zeile in der <xref:System.Web.UI.WebControls.GridView>anzuzeigen, und als Formular zum Einfügen neuer Datensätze.  
  
 Zunächst werden die Daten im <xref:System.Web.UI.WebControls.GridView>-Steuerelement angezeigt, und die ausgewählte Zeile der <xref:System.Web.UI.WebControls.GridView> wird auch im <xref:System.Web.UI.WebControls.DetailsView>-Steuerelement angezeigt. Die Steuerelemente <xref:System.Web.UI.WebControls.GridView> und <xref:System.Web.UI.WebControls.DetailsView> verwenden unterschiedliche Datenquellen Steuerelemente. das, das dem <xref:System.Web.UI.WebControls.DetailsView> zugeordnet ist, verfügt über die Eigenschaften <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> und <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>, die sicherstellen, dass die ausgewählte Zeile der <xref:System.Web.UI.WebControls.GridView> angezeigt wird.  
  
 Wenn Sie auf die automatisch generierte Schaltfläche **Einfügen** des <xref:System.Web.UI.WebControls.DetailsView>-Steuer Elements klicken, zeigt die <xref:System.Web.UI.WebControls.DetailsView> eine andere Benutzeroberfläche an, die zum Einfügen eines neuen Datensatzes verwendet wird. Im Beispiel wird eine gespeicherte Prozedur verwendet, um Datensätze einzufügen, und gibt den Primärschlüssel der eingefügten Zeile zurück. Wenn Sie einen Datensatz einfügen, füllt der <xref:System.Web.UI.WebControls.DetailsView> automatisch die <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> Auflistung mit Werten aus den gebundenen Spalten auf und ruft die <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A>-Methode auf. Der <xref:System.Web.UI.WebControls.DetailsView> kann die richtigen Parameter aus jedem <xref:System.Web.UI.WebControls.BoundField> Objekt ableiten und einen Parameter für das <xref:System.Web.UI.WebControls.TemplateField> Objekt, wenn die ASP.NET-Syntax für bidirektionale Datenbindung verwendet wird. In diesem Beispiel wird ein zusätzlicher Parameter im <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A>-Ereignishandler hinzugefügt, um den Primärschlüssel zu verarbeiten, der von der gespeicherten Prozedur zurückgegeben wird.  
  
 Nachdem die Daten vom <xref:System.Web.UI.WebControls.DetailsView>-Steuerelement in die Datenbank eingefügt wurden, wird der <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A>-Ereignishandler aufgerufen, um das <xref:System.Web.UI.WebControls.SqlDataSource.Inserted>-Ereignis zu behandeln. der Wert des Primärschlüssels der eingefügten Zeile wird angezeigt, und die <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A>-Methode des <xref:System.Web.UI.WebControls.GridView>-Steuer Elements wird explizit aufgerufen, um die Daten zu aktualisieren.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Inserted" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="InsertParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection InsertParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection InsertParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InsertParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ InsertParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InsertParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Parameterauflistung ab, die die von der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />-Eigenschaft verwendeten Parameter enthält.</summary>
        <value>Eine <see cref="T:System.Web.UI.WebControls.ParameterCollection" />, die die von der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />-Eigenschaft verwendeten Parameter enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A>-Eigenschaft eine parametrisierte SQL-Abfrage enthält, enthält die <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A> Auflistung alle <xref:System.Web.UI.WebControls.Parameter>-Objekte, die den Parameter Platzhaltern in der SQL-Zeichenfolge entsprechen.  
  
 Abhängig vom ADO.NET-Anbieter kann die Reihenfolge der Parameter in der <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A> Auflistung von Bedeutung sein. Die <xref:System.Data.OleDb?displayProperty=nameWithType>-und <xref:System.Data.Odbc?displayProperty=nameWithType> Anbieter ordnen die Parameter in der Auflistung entsprechend der Reihenfolge zu, in der die Parameter in der parametrisierten SQL-Abfrage angezeigt werden. Der <xref:System.Data.SqlClient?displayProperty=nameWithType>-Anbieter, der der standardmäßige ADO.NET-Anbieter für das <xref:System.Web.UI.WebControls.SqlDataSource>-Steuerelement ist, ordnet die Parameter in der Auflistung zu, indem der Name des Parameters mit einem Platzhalter Alias in der SQL-Abfrage abgeglichen wird. Weitere Informationen über parametrisierte SQL-Abfragen und-Befehle finden [Sie unter Verwenden von Parametern mit dem SqlDataSource-Steuer](https://docs.microsoft.com/previous-versions/aspnet/z72eefad(v=vs.100))Element.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Daten mithilfe des <xref:System.Web.UI.WebControls.SqlDataSource>-Steuer Elements und einer einfachen Web Forms Seite in eine Datenbank eingefügt werden. Die aktuellen Daten in der Tabelle werden im <xref:System.Web.UI.WebControls.DropDownList> Steuerelement angezeigt. Sie können neue Datensätze hinzufügen, indem Sie Werte in den <xref:System.Web.UI.WebControls.TextBox>-Steuerelementen eingeben und dann auf die Schaltfläche **Einfügen** klicken. Wenn auf die Schaltfläche **Einfügen** geklickt wird, werden die angegebenen Werte in die Datenbank eingefügt, und der <xref:System.Web.UI.WebControls.DropDownList> wird aktualisiert.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/CS/sql24cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/VB/sql24vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />
      </Docs>
    </Member>
    <Member MemberName="IsTrackingViewState">
      <MemberSignature Language="C#" Value="protected bool IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsTrackingViewState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsTrackingViewState { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsTrackingViewState : bool" Usage="System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" />-Objekt Änderungen des Ansichtszustands speichert.</summary>
        <value><see langword="true" />, wenn die Datenquellenansicht für das Speichern ihres Zustands markiert wurde, andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected virtual void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="abstract member LoadViewState : obj -&gt; unit&#xA;override this.LoadViewState : obj -&gt; unit" Usage="sqlDataSourceView.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Ein Objekt, das den wiederherzustellenden <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> -Zustand darstellt.</param>
        <summary>Stellt den vorher gespeicherten Ansichtszustand für die Datenquellenansicht wieder her.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird hauptsächlich von der [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]-Infrastruktur verwendet und ist nicht für die direkte Verwendung im Code vorgesehen.  Steuerungs Entwickler können diese Methode jedoch außer Kraft setzen, um anzugeben, wie ein benutzerdefiniertes Server Steuerelement seinen Ansichts Zustand wiederherstellt. Weitere Informationen finden Sie unter [ASP.net State Management Overview](https://docs.microsoft.com/previous-versions/aspnet/75x4ha6s(v=vs.100)).  
  
 Die <xref:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState%2A>-Methode stellt Ansichts Zustandsinformationen für das <xref:System.Web.UI.WebControls.SqlDataSourceView> Objekt aus einer früheren Seiten Anforderung wieder her, die von der <xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A>-Methode gespeichert wurde.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="OldValuesParameterFormatString">
      <MemberSignature Language="C#" Value="public string OldValuesParameterFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OldValuesParameterFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property OldValuesParameterFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OldValuesParameterFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OldValuesParameterFormatString : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("{0}")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Formatzeichenfolge ab, die auf die Namen aller Parameter angewendet wird, die an die <see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Delete" />-Methode oder an die <see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Update" />-Methode übergeben werden, oder legt diese Formatzeichenfolge fest.</summary>
        <value>Eine Zeichenfolge, die eine Formatzeichenfolge darstellt, die auf die Namen aller an die <paramref name="oldValues" />-Methode oder die <see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Delete" />-Methode übergebenen <see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Update" />-Parameter angewendet wird. Der Standardwert ist "{0}".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A>-Format Zeichenfolge wird nur auf Primärschlüssel angewendet, wie z. b. die, die durch die `DataKeyNames`-Eigenschaft des Daten gebundenen Steuer Elements oder in DELETE-und Update-Szenarios identifiziert werden, bei denen die <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>-Eigenschaft auf den <xref:System.Web.UI.ConflictOptions.CompareAllValues> Wert festgelegt ist und ein Satz `oldValues` an die entsprechende Daten Methode übermittelt wird. In diesem Fall wird die Format Zeichenfolge auf jeden Parameternamen in der `oldValues` Auflistung angewendet. Weitere Informationen finden Sie unter <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString?displayProperty=nameWithType>.  
  
 Der Wert der <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A>-Eigenschaft wird im Ansichts Zustand gespeichert.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="OnDeleted">
      <MemberSignature Language="C#" Value="protected virtual void OnDeleted (System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDeleted(class System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDeleted (e As SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDeleted(System::Web::UI::WebControls::SqlDataSourceStatusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDeleted : System.Web.UI.WebControls.SqlDataSourceStatusEventArgs -&gt; unit&#xA;override this.OnDeleted : System.Web.UI.WebControls.SqlDataSourceStatusEventArgs -&gt; unit" Usage="sqlDataSourceView.OnDeleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Deleted" />-Ereignis aus, nachdem das <see cref="T:System.Web.UI.WebControls.SqlDataSource" />-Steuerelement einen Löschvorgang abgeschlossen hat.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie die <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /> Methode in einer abgeleiteten Klasse überschreiben, stellen Sie sicher, dass Sie die <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />-Methode für die Basisklasse aufzurufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnDeleting">
      <MemberSignature Language="C#" Value="protected virtual void OnDeleting (System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDeleting(class System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDeleting (e As SqlDataSourceCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDeleting(System::Web::UI::WebControls::SqlDataSourceCommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDeleting : System.Web.UI.WebControls.SqlDataSourceCommandEventArgs -&gt; unit&#xA;override this.OnDeleting : System.Web.UI.WebControls.SqlDataSourceCommandEventArgs -&gt; unit" Usage="sqlDataSourceView.OnDeleting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Deleting" />-Ereignis aus, bevor das <see cref="T:System.Web.UI.WebControls.SqlDataSource" />-Steuerelement einen Löschvorgang startet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie das <xref:System.Web.UI.WebControls.SqlDataSource.Deleting>-Ereignis behandelt wird, das vor dem Auftreten eines <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A>-Vorgangs ausgelöst wird. Da in diesem Beispiel Daten aus der Northwind-Datenbank gelöscht werden, wird ein <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A>-Handler hinzugefügt, um zu versuchen, die Datenbank vor dem Löschen auf dem Datenträger zu sichern.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/CS/sql10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/VB/sql10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie die <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" /> Methode in einer abgeleiteten Klasse überschreiben, stellen Sie sicher, dass Sie die <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />-Methode für die Basisklasse aufzurufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnFiltering">
      <MemberSignature Language="C#" Value="protected virtual void OnFiltering (System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFiltering(class System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFiltering (e As SqlDataSourceFilteringEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFiltering(System::Web::UI::WebControls::SqlDataSourceFilteringEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnFiltering : System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs -&gt; unit&#xA;override this.OnFiltering : System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs -&gt; unit" Usage="sqlDataSourceView.OnFiltering e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Filtering" />-Ereignis aus, bevor das <see cref="T:System.Web.UI.WebControls.SqlDataSource" />-Steuerelement die Ergebnisse eines Auswahlvorgangs filtert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Web.UI.WebControls.SqlDataSourceView.OnFiltering%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie die <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)" /> Methode in einer abgeleiteten Klasse überschreiben, stellen Sie sicher, dass Sie die <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)" />-Methode für die Basisklasse aufzurufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnInserted">
      <MemberSignature Language="C#" Value="protected virtual void OnInserted (System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInserted(class System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInserted (e As SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInserted(System::Web::UI::WebControls::SqlDataSourceStatusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnInserted : System.Web.UI.WebControls.SqlDataSourceStatusEventArgs -&gt; unit&#xA;override this.OnInserted : System.Web.UI.WebControls.SqlDataSourceStatusEventArgs -&gt; unit" Usage="sqlDataSourceView.OnInserted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Inserted" />-Ereignis aus, nachdem das <see cref="T:System.Web.UI.WebControls.SqlDataSource" />-Steuerelement einen Einfügevorgang abgeschlossen hat.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie Daten aus Microsoft SQL Server abrufen, in einem <xref:System.Web.UI.WebControls.GridView> Steuerelement anzeigen und ein <xref:System.Web.UI.WebControls.DetailsView>-Steuerelement verwenden, um die Details einer ausgewählten Zeile in der <xref:System.Web.UI.WebControls.GridView> und als Formular zum Einfügen neuer Datensätze anzuzeigen.  
  
 Zunächst werden die Daten im <xref:System.Web.UI.WebControls.GridView>-Steuerelement angezeigt, und die ausgewählte Zeile der <xref:System.Web.UI.WebControls.GridView> wird auch im <xref:System.Web.UI.WebControls.DetailsView>-Steuerelement angezeigt. Die Steuerelemente <xref:System.Web.UI.WebControls.GridView> und <xref:System.Web.UI.WebControls.DetailsView> verwenden unterschiedliche Datenquellen Steuerelemente. das, das dem <xref:System.Web.UI.WebControls.DetailsView> zugeordnet ist, verfügt über die Eigenschaften <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> und <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>, die sicherstellen, dass die ausgewählte Zeile der <xref:System.Web.UI.WebControls.GridView> angezeigt wird.  
  
 Wenn Sie auf die automatisch generierte Schaltfläche **Einfügen** des <xref:System.Web.UI.WebControls.DetailsView>-Steuer Elements klicken, zeigt die <xref:System.Web.UI.WebControls.DetailsView> eine andere Benutzeroberfläche an, die zum Einfügen eines neuen Datensatzes verwendet wird. Im Beispiel wird eine gespeicherte Prozedur verwendet, um Datensätze einzufügen, und gibt den Primärschlüssel der eingefügten Zeile zurück. Wenn Sie einen Datensatz einfügen, füllt der <xref:System.Web.UI.WebControls.DetailsView> automatisch die <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> Auflistung mit Werten aus den gebundenen Spalten auf und ruft die <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A>-Methode auf. Der <xref:System.Web.UI.WebControls.DetailsView> kann die richtigen Parameter aus jedem <xref:System.Web.UI.WebControls.BoundField> Objekt und einen Parameter für das <xref:System.Web.UI.WebControls.TemplateField> Objekt ableiten, wenn die ASP.net-bidirektionale Daten Bindungs Syntax verwendet wird. In diesem Beispiel wird ein zusätzlicher Parameter im <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A>-Ereignishandler hinzugefügt, um den Primärschlüssel zu verarbeiten, der von der gespeicherten Prozedur zurückgegeben wird.  
  
 Nachdem die Daten vom <xref:System.Web.UI.WebControls.DetailsView>-Steuerelement in die Datenbank eingefügt wurden, wird der <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A>-Ereignishandler aufgerufen, um das <xref:System.Web.UI.WebControls.SqlDataSource.Inserted>-Ereignis zu behandeln. der Wert des Primärschlüssels der eingefügten Zeile wird angezeigt, und die <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A>-Methode des <xref:System.Web.UI.WebControls.GridView>-Steuer Elements wird explizit aufgerufen, um die Daten zu aktualisieren.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie die <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /> Methode in einer abgeleiteten Klasse überschreiben, stellen Sie sicher, dass Sie die <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />-Methode für die Basisklasse aufzurufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnInserting">
      <MemberSignature Language="C#" Value="protected virtual void OnInserting (System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInserting(class System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInserting (e As SqlDataSourceCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInserting(System::Web::UI::WebControls::SqlDataSourceCommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnInserting : System.Web.UI.WebControls.SqlDataSourceCommandEventArgs -&gt; unit&#xA;override this.OnInserting : System.Web.UI.WebControls.SqlDataSourceCommandEventArgs -&gt; unit" Usage="sqlDataSourceView.OnInserting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Inserting" />-Ereignis aus, bevor das <see cref="T:System.Web.UI.WebControls.SqlDataSource" />-Steuerelement einen Einfügevorgang startet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie Daten aus Microsoft SQL Server abrufen, in einem <xref:System.Web.UI.WebControls.GridView> Steuerelement anzeigen und ein <xref:System.Web.UI.WebControls.DetailsView>-Steuerelement verwenden, um die Details einer ausgewählten Zeile in der <xref:System.Web.UI.WebControls.GridView> und als Formular zum Einfügen neuer Datensätze anzuzeigen.  
  
 Zunächst werden die Daten im <xref:System.Web.UI.WebControls.GridView>-Steuerelement angezeigt, und die ausgewählte Zeile der <xref:System.Web.UI.WebControls.GridView> wird auch im <xref:System.Web.UI.WebControls.DetailsView>-Steuerelement angezeigt. Die Steuerelemente <xref:System.Web.UI.WebControls.GridView> und <xref:System.Web.UI.WebControls.DetailsView> verwenden unterschiedliche Datenquellen Steuerelemente. das, das dem <xref:System.Web.UI.WebControls.DetailsView> zugeordnet ist, verfügt über die Eigenschaften <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> und <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>, die sicherstellen, dass die ausgewählte Zeile der <xref:System.Web.UI.WebControls.GridView> angezeigt wird.  
  
 Wenn Sie auf die automatisch generierte Schaltfläche **Einfügen** des <xref:System.Web.UI.WebControls.DetailsView>-Steuer Elements klicken, zeigt die <xref:System.Web.UI.WebControls.DetailsView> eine andere Benutzeroberfläche an, die zum Einfügen eines neuen Datensatzes verwendet wird. Im Beispiel wird eine gespeicherte Prozedur verwendet, um Datensätze einzufügen, und gibt den Primärschlüssel der eingefügten Zeile zurück. Wenn Sie einen Datensatz einfügen, füllt der <xref:System.Web.UI.WebControls.DetailsView> automatisch die <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> Auflistung mit Werten aus den gebundenen Spalten auf und ruft die <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A>-Methode auf. Der <xref:System.Web.UI.WebControls.DetailsView> kann die richtigen Parameter aus jedem <xref:System.Web.UI.WebControls.BoundField> Objekt und einen Parameter für das <xref:System.Web.UI.WebControls.TemplateField> Objekt ableiten, wenn die ASP.net-bidirektionale Daten Bindungs Syntax verwendet wird. In diesem Beispiel wird ein zusätzlicher Parameter im <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A>-Ereignishandler hinzugefügt, um den Primärschlüssel zu verarbeiten, der von der gespeicherten Prozedur zurückgegeben wird.  
  
 Nachdem die Daten vom <xref:System.Web.UI.WebControls.DetailsView>-Steuerelement in die Datenbank eingefügt wurden, wird der <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A>-Ereignishandler aufgerufen, um das <xref:System.Web.UI.WebControls.SqlDataSource.Inserted>-Ereignis zu behandeln. der Wert des Primärschlüssels der eingefügten Zeile wird angezeigt, und die <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A>-Methode des <xref:System.Web.UI.WebControls.GridView>-Steuer Elements wird explizit aufgerufen, um die Daten zu aktualisieren.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie die <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" /> Methode in einer abgeleiteten Klasse überschreiben, stellen Sie sicher, dass Sie die <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />-Methode für die Basisklasse aufzurufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnSelected">
      <MemberSignature Language="C#" Value="protected virtual void OnSelected (System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelected(class System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelected (e As SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelected(System::Web::UI::WebControls::SqlDataSourceStatusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelected : System.Web.UI.WebControls.SqlDataSourceStatusEventArgs -&gt; unit&#xA;override this.OnSelected : System.Web.UI.WebControls.SqlDataSourceStatusEventArgs -&gt; unit" Usage="sqlDataSourceView.OnSelected e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Selected" />-Ereignis aus, nachdem das <see cref="T:System.Web.UI.WebControls.SqlDataSource" />-Steuerelement einen Datenabrufvorgang abgeschlossen hat.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelected%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie die <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /> Methode in einer abgeleiteten Klasse überschreiben, stellen Sie sicher, dass Sie die <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />-Methode für die Basisklasse aufzurufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnSelecting">
      <MemberSignature Language="C#" Value="protected virtual void OnSelecting (System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelecting(class System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelecting (e As SqlDataSourceSelectingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelecting(System::Web::UI::WebControls::SqlDataSourceSelectingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelecting : System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs -&gt; unit&#xA;override this.OnSelecting : System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs -&gt; unit" Usage="sqlDataSourceView.OnSelecting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Selecting" />-Ereignis aus, bevor das <see cref="T:System.Web.UI.WebControls.SqlDataSource" />-Steuerelement einen Datenabrufvorgang startet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie die <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)" /> Methode in einer abgeleiteten Klasse überschreiben, stellen Sie sicher, dass Sie die <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)" />-Methode für die Basisklasse aufzurufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnUpdated">
      <MemberSignature Language="C#" Value="protected virtual void OnUpdated (System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUpdated(class System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUpdated (e As SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUpdated(System::Web::UI::WebControls::SqlDataSourceStatusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUpdated : System.Web.UI.WebControls.SqlDataSourceStatusEventArgs -&gt; unit&#xA;override this.OnUpdated : System.Web.UI.WebControls.SqlDataSourceStatusEventArgs -&gt; unit" Usage="sqlDataSourceView.OnUpdated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Updated" />-Ereignis aus, nachdem das <see cref="T:System.Web.UI.WebControls.SqlDataSource" />-Steuerelement einen Aktualisierungsvorgang abgeschlossen hat.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht das Anzeigen und Aktualisieren von Daten, die aus einer ODBC-Datenbank in einem <xref:System.Web.UI.WebControls.GridView>-Steuerelement abgerufen werden. Nachdem ein Datensatz erfolgreich aktualisiert wurde, wird das <xref:System.Web.UI.WebControls.SqlDataSource.Updated> Ereignis von einem Ereignishandler behandelt, um einen nach Verarbeitungsschritt auszuführen, bei dem eine e-Mail-Benachrichtigung gesendet wird.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/CS/odbc7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/VB/odbc7vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie die <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /> Methode in einer abgeleiteten Klasse überschreiben, stellen Sie sicher, dass Sie die <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />-Methode für die Basisklasse aufzurufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnUpdating">
      <MemberSignature Language="C#" Value="protected virtual void OnUpdating (System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUpdating(class System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUpdating (e As SqlDataSourceCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUpdating(System::Web::UI::WebControls::SqlDataSourceCommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUpdating : System.Web.UI.WebControls.SqlDataSourceCommandEventArgs -&gt; unit&#xA;override this.OnUpdating : System.Web.UI.WebControls.SqlDataSourceCommandEventArgs -&gt; unit" Usage="sqlDataSourceView.OnUpdating e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Updating" />-Ereignis aus, bevor das <see cref="T:System.Web.UI.WebControls.SqlDataSource" />-Steuerelement einen Aktualisierungsvorgang startet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie Daten anzeigen, die aus einer Microsoft SQL Server-Datenbank in einem <xref:System.Web.UI.WebControls.DropDownList>-Steuerelement abgerufen werden, und den Datensatz mit einem <xref:System.Web.UI.WebControls.TextBox>-Steuerelement aktualisieren. Das Beispiel zeigt, wie Sie mit einem <xref:System.Data.Common.DbTransaction>-Objekt einen Transaktionskontext hinzufügen können, wenn Sie das <xref:System.Web.UI.WebControls.SqlDataSource>-Steuerelement zum Aktualisieren von Daten verwenden.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/CS/sql9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/VB/sql9vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie die <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" /> in einer abgeleiteten Klasse überschreiben, stellen Sie sicher, dass Sie die <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />-Methode für die Basisklasse aufzurufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
      </Docs>
    </Member>
    <Member MemberName="ParameterPrefix">
      <MemberSignature Language="C#" Value="protected virtual string ParameterPrefix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ParameterPrefix" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property ParameterPrefix As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::String ^ ParameterPrefix { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ParameterPrefix : string" Usage="System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Zeichenfolge ab, die als Präfix für einen Parameterplatzhalter in einer parametrisierten SQL-Abfrage fungiert.</summary>
        <value>Die Zeichenfolge "@".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SQL-Abfragen und-Befehle können parametrisiert werden, da Sie Platzhalter für Werte enthalten, die zur Laufzeit an die Abfrage gebunden sind. Abhängig vom ADO.NET-Anbieter, der für das <xref:System.Web.UI.WebControls.SqlDataSource>-Steuerelement festgelegt wird, das durch die <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>-Eigenschaft identifiziert wird, werden die Parameter nach Alias oder ihrer Reihenfolge im <xref:System.Web.UI.WebControls.ParameterCollection>-Objekt ausgewertet.  
  
 Wenn die <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> nicht festgelegt oder auf die <xref:System.Data.SqlClient?displayProperty=nameWithType>festgelegt ist, werden die Parameter nach Alias ausgewertet, und die <xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A>-Eigenschaft wird verwendet, um der <xref:System.Web.UI.WebControls.Parameter.Name%2A>-Eigenschaft jedes <xref:System.Web.UI.WebControls.Parameter> Objekts in einer <xref:System.Web.UI.WebControls.ParameterCollection> während eines Datenabruf-oder Daten Bearbeitungsvorgangs ein Parameter Präfix hinzuzufügen. Wenn die <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>-Eigenschaft auf die <xref:System.Data.OleDb?displayProperty=nameWithType> oder <xref:System.Data.Odbc?displayProperty=nameWithType>festgelegt ist, werden die Parameter nach Reihenfolge ausgewertet, und die Eigenschaften <xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A> und <xref:System.Web.UI.WebControls.Parameter.Name%2A> werden ignoriert.  
  
 Wenn Sie die <xref:System.Web.UI.WebControls.SqlDataSourceView>-Klasse erweitern, können Sie die <xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A>-Eigenschaft überschreiben, um bei Bedarf ein anderes Präfix als die `"@"` Zeichenfolge bereitzustellen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseUnsupportedCapabilityError">
      <MemberSignature Language="C#" Value="protected internal override void RaiseUnsupportedCapabilityError (System.Web.UI.DataSourceCapabilities capability);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RaiseUnsupportedCapabilityError(valuetype System.Web.UI.DataSourceCapabilities capability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RaiseUnsupportedCapabilityError (capability As DataSourceCapabilities)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RaiseUnsupportedCapabilityError(System::Web::UI::DataSourceCapabilities capability);" />
      <MemberSignature Language="F#" Value="override this.RaiseUnsupportedCapabilityError : System.Web.UI.DataSourceCapabilities -&gt; unit" Usage="sqlDataSourceView.RaiseUnsupportedCapabilityError capability" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="capability" Type="System.Web.UI.DataSourceCapabilities" />
      </Parameters>
      <Docs>
        <param name="capability">Einer der Werte von <see cref="T:System.Web.UI.DataSourceCapabilities" />, die mit den Funktionen verglichen werden, die die Ansicht unterstützt.</param>
        <summary>Vergleicht die für einen <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />-Vorgang erforderlichen Funktionen mit den von der Ansicht unterstützten und wird von der <see cref="M:System.Web.UI.DataSourceSelectArguments.RaiseUnsupportedCapabilitiesError(System.Web.UI.DataSourceView)" />-Methode aufgerufen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError%2A>-Methode wird von der Datenquellen Sicht verwendet, um die einzelnen Funktionen zu untersuchen, die von einem Daten gebundenen Steuerelement angefordert werden, das durch das <xref:System.Web.UI.DataSourceSelectArguments>-Objekt dargestellt wird, das an die <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>-Methode übermittelt wird, und um diese Funktionen mit den Funktionen zu vergleichen, die von der Datenquellen Sicht unterstützt werden. Für die Funktionen, die durch das <xref:System.Web.UI.DataSourceSelectArguments> Objekt dargestellt werden und nicht von der Datenquellen Sicht unterstützt werden, wird eine <xref:System.NotSupportedException> Ausnahme ausgelöst.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Für die Datenquelle wurde nicht die ausgewählte <paramref name="capability" /> aktiviert.</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanSort" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanPage" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected virtual object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="abstract member SaveViewState : unit -&gt; obj&#xA;override this.SaveViewState : unit -&gt; obj" Usage="sqlDataSourceView.SaveViewState " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Speichert die Änderungen am Ansichtszustand des <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" />-Steuerelements ab dem Zeitpunkt, zu dem die Seite an den Server zurückgesendet wurde.</summary>
        <returns>Das Objekt, das die Änderungen des Ansichtszustands von <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> enthält, andernfalls <see langword="null" />, wenn dem Objekt kein Ansichtszustand zugeordnet ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A>-Methode wird hauptsächlich von Steuerelement Entwicklern verwendet.  
  
 Der Ansichts Zustand ist die Ansammlung der Werte der Eigenschaften für ein Server Steuerelement. Diese Werte werden automatisch in der <xref:System.Web.UI.Control.ViewState%2A>-Eigenschaft des Server Steuer Elements platziert, bei dem es sich um eine Instanz der <xref:System.Web.UI.StateBag>-Klasse handelt. Der <xref:System.Web.UI.Control.ViewState%2A> Wert für das Server Steuerelement wird dann in einem Zeichen folgen Objekt nach der Speicher Zustands Phase des Lebenszyklus des Server Steuer Elements persistent gespeichert.  
  
 Wenn der Ansichts Zustand gespeichert wird, wird das Zeichen folgen Objekt, das nach der Speicher Zustands Phase des Lebenszyklus des Server Steuer Elements persistent gespeichert wurde, als Variable an den Client zurückgegeben, die in einem HTML-`Hidden` Element gespeichert ist. Wenn Sie benutzerdefinierte Server Steuerelemente erstellen, können Sie die Effizienz verbessern, indem Sie die <xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A>-Methode überschreiben und die `ViewState`-Eigenschaft des Server Steuer Elements ändern. Weitere Informationen finden Sie unter [ASP.net State Management Overview](https://docs.microsoft.com/previous-versions/aspnet/75x4ha6s(v=vs.100)).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable Select (System.Web.UI.DataSourceSelectArguments arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerable Select(class System.Web.UI.DataSourceSelectArguments arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
      <MemberSignature Language="VB.NET" Value="Public Function Select (arguments As DataSourceSelectArguments) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerable ^ Select(System::Web::UI::DataSourceSelectArguments ^ arguments);" />
      <MemberSignature Language="F#" Value="override this.Select : System.Web.UI.DataSourceSelectArguments -&gt; System.Collections.IEnumerable" Usage="sqlDataSourceView.Select arguments" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Web.UI.DataSourceSelectArguments" />
      </Parameters>
      <Docs>
        <param name="arguments">Eine Instanz von <see cref="T:System.Web.UI.DataSourceSelectArguments" />, mit der Datenvorgänge angefordert werden, die über grundlegenden Datenabrufvorgänge hinausgehen.</param>
        <summary>Ruft Daten aus der zugrunde liegenden Datenbank mithilfe der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />-SQL-Zeichenfolge und aller Parameter in der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />-Auflistung ab.</summary>
        <returns>Eine <see cref="T:System.Collections.IEnumerable" />-Liste mit Datenzeilen.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>-Methode ruft die <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A>-Methode auf, wobei der `selectArgs`-Parameter übergeben wird.  
  
 Die <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A>-Methode gibt ein <xref:System.Data.DataView> Objekt zurück, wenn die <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>-Eigenschaft auf den <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> Wert festgelegt ist oder ein <xref:System.Data.IDataReader> Objekt zurückgibt, wenn die <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>-Eigenschaft auf den <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> Wert festgelegt ist. Schließen Sie das <xref:System.Data.IDataReader> Objekt, wenn Sie mit dem Lesen der Daten fertig sind.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Die an die <paramref name="selectArgs" />-Methode übergebenen <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" /> geben an, dass die Datenquelle während des Datenabrufs noch weitere Aufgaben ausführen muss, um das Paging oder das Sortieren der abgerufenen Daten zu ermöglichen. Das Datenquellen-Steuerelement unterstützt die erforderlichen Funktionen jedoch nicht.</exception>
        <exception cref="T:System.InvalidOperationException">Die <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> kann keine Verbindung mit der zugrunde liegenden Datenquelle herstellen.</exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public string SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCommand : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die SQL-Zeichenfolge ab, die vom <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" />-Objekt zum Abrufen von Daten aus der zugrunde liegenden Datenbank verwendet wird, oder legt diese Zeichenfolge fest.</summary>
        <value>Eine SQL-Zeichenfolge, die von der <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> zum Abrufen von Daten verwendet wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Da die jeweiligen Datenbankprodukte verschiedene SQL-Varianten verwenden, hängt die Syntax der SQL-Zeichenfolge vom derzeit verwendeten ADO.NET-Anbieter ab, der durch die <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>-Eigenschaft identifiziert wird. Wenn die SQL-Zeichenfolge eine parametrisierte Abfrage oder ein parametrisierter Befehl ist, hängt der Platzhalter des Parameters ebenfalls vom verwendeten ADO.NET-Anbieter ab. Wenn der Anbieter z. b. der <xref:System.Data.SqlClient?displayProperty=nameWithType>ist, bei dem es sich um den Standardanbieter für die <xref:System.Web.UI.WebControls.SqlDataSource>-Klasse handelt, wird der Platzhalter des-Parameters `'@parameterName'`. Wenn der Anbieter jedoch auf die <xref:System.Data.Odbc?displayProperty=nameWithType> oder <xref:System.Data.OleDb?displayProperty=nameWithType>festgelegt ist, wird der Platzhalter des Parameters `'?'`. Weitere Informationen über parametrisierte SQL-Abfragen und-Befehle finden [Sie unter Verwenden von Parametern mit dem SqlDataSource-Steuer](https://docs.microsoft.com/previous-versions/aspnet/z72eefad(v=vs.100))Element.  
  
 Bei der <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A>-Eigenschaft kann es sich um eine SQL-Zeichenfolge oder den Namen einer gespeicherten Prozedur handeln, wenn die Datenquelle gespeicherte Prozeduren unterstützt.  
  
> [!IMPORTANT]
>  Es ist sicherer, eine gespeicherte Prozedur als eine SQL-Anweisung für die <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A>-Eigenschaft zu verwenden.  
  
 Der Wert der <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A>-Eigenschaft wird im Ansichts Zustand gespeichert.  
  
   
  
## Examples  
 Dieser Abschnitt enthält zwei Codebeispiele. Im ersten Codebeispiel wird veranschaulicht, wie der <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> Text auf eine einfache SQL-Abfrage festgelegt wird, um Daten aus einer Microsoft SQL Server Datenbank abzurufen und in einem <xref:System.Web.UI.WebControls.DropDownList>-Steuerelement anzuzeigen. Im zweiten Codebeispiel wird veranschaulicht, wie der <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> Text auf den Namen einer gespeicherten Prozedur festgelegt wird, um Daten aus einer SQL Server Datenbank abzurufen und in einem <xref:System.Web.UI.WebControls.DropDownList>anzuzeigen.  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie der <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> Text auf eine einfache SQL-Abfrage festgelegt wird, um Daten aus einer SQL Server Datenbank abzurufen und in einem <xref:System.Web.UI.WebControls.DropDownList>-Steuerelement anzuzeigen. Die Steuerelemente <xref:System.Web.UI.WebControls.Button> und <xref:System.Web.UI.WebControls.TextBox> werden als einfache Schnittstelle bereitgestellt, um die Adresse für den ausgewählten Benutzer in der <xref:System.Web.UI.WebControls.DropDownList>zu aktualisieren.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/CS/sql8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/VB/sql8vb.aspx#1)]  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie der <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> Text auf den Namen einer gespeicherten Prozedur festgelegt wird, um Daten aus einer SQL Server Datenbank abzurufen und in einem <xref:System.Web.UI.WebControls.DropDownList>-Steuerelement anzuzeigen. Bei der <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>-Eigenschaft kann es sich um eine SQL-Abfrage oder den Namen einer gespeicherten Prozedur handeln, wenn die Datenquelle gespeicherte Prozeduren unterstützt.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/CS/sql14cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/VB/sql14vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="SelectCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType SelectCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType SelectCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType SelectCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCommandType : System.Web.UI.WebControls.SqlDataSourceCommandType with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Text in der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />-Eigenschaft eine SQL-Abfrage oder der Name einer gespeicherten Prozedur ist, oder legt diesen Wert fest.</summary>
        <value>Einer der <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />-Werte. Der Standardwert ist der <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" />-Wert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Wert der <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType%2A>-Eigenschaft wird im Ansichts Zustand gespeichert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie der <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> Text auf den Namen einer gespeicherten Prozedur und die <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A>-Eigenschaft auf den <xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure> Wert festgelegt wird, um Daten aus einer Microsoft SQL Server Datenbank abzurufen und in einer <xref:System.Web.UI.WebControls.DropDownList>anzuzeigen.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/CS/sql14cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/VB/sql14vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der ausgewählte Wert ist keiner der <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />-Werte.</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommandType" />
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Selected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Selected" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Selected" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selected As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Selected;" />
      <MemberSignature Language="F#" Value="member this.Selected : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " Usage="member this.Selected : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn ein Datenabrufvorgang abgeschlossen wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Behandeln Sie das <xref:System.Web.UI.WebControls.SqlDataSourceView.Selected>-Ereignis, um die Werte der Ausgabeparameter zu überprüfen, nachdem ein Datenabruf Vorgang abgeschlossen wurde. Die Ausgabeparameter sind über das <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> Objekt verfügbar, das dem Ereignis zugeordnet ist.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Selecting" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="Selecting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler Selecting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler Selecting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Selecting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selecting As SqlDataSourceSelectingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceSelectingEventHandler ^ Selecting;" />
      <MemberSignature Language="F#" Value="member this.Selecting : System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler " Usage="member this.Selecting : System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt vor einem Datenabrufvorgang ein.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Behandeln Sie das <xref:System.Web.UI.WebControls.SqlDataSourceView.Selecting>-Ereignis, um zusätzliche Initialisierungs Vorgänge auszuführen, die für Ihre Anwendung spezifisch sind, um die Werte von Parametern zu überprüfen oder um die Parameterwerte zu ändern, bevor das <xref:System.Web.UI.WebControls.SqlDataSource>-Steuerelement den Datenabruf Vorgang ausführt.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Selected" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Select" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="SelectParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection SelectParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection SelectParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ SelectParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Parameterauflistung ab, die die von der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />-Eigenschaft verwendeten Parameter enthält.</summary>
        <value>Eine <see cref="T:System.Web.UI.WebControls.ParameterCollection" />, die die von der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />-Eigenschaft verwendeten Parameter enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A>-Eigenschaft eine parametrisierte SQL-Abfrage enthält, enthält die <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A> Auflistung alle <xref:System.Web.UI.WebControls.Parameter>-Objekte, die den Parameter Platzhaltern in der SQL-Zeichenfolge entsprechen.  
  
 Abhängig vom ADO.NET-Anbieter kann die Reihenfolge der Parameter in der <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A> Auflistung von Bedeutung sein. Die <xref:System.Data.OleDb?displayProperty=nameWithType>-und <xref:System.Data.Odbc?displayProperty=nameWithType> Anbieter ordnen die Parameter in der Auflistung entsprechend der Reihenfolge zu, in der die Parameter in der parametrisierten SQL-Abfrage angezeigt werden. Der <xref:System.Data.SqlClient?displayProperty=nameWithType>-Anbieter, der der standardmäßige ADO.NET-Anbieter für das <xref:System.Web.UI.WebControls.SqlDataSource>-Steuerelement ist, ordnet die Parameter in der Auflistung zu, indem der Name des Parameters mit einem Platzhalter Alias in der SQL-Abfrage abgeglichen wird. Weitere Informationen über parametrisierte SQL-Abfragen und-Befehle finden [Sie unter Verwenden von Parametern mit dem SqlDataSource-Steuer](https://docs.microsoft.com/previous-versions/aspnet/z72eefad(v=vs.100))Element.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Daten aus der Northwind-Datenbank in Microsoft SQL Server abgerufen werden, indem die <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>-Eigenschaft auf eine SQL-Abfrage festgelegt wird. Die SQL-Abfrage ist parametrisiert, und der Platzhalter in der <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>-Eigenschaft wird mit dem <xref:System.Web.UI.WebControls.ControlParameter> Objekt abgeglichen, das der <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> Collection hinzugefügt wird. Auf diese Weise fungiert das <xref:System.Web.UI.WebControls.DropDownList>-Steuerelement, an das der <xref:System.Web.UI.WebControls.ControlParameter> gebunden ist, als Filter für das, was im <xref:System.Web.UI.WebControls.ListBox>-Steuerelement angezeigt wird.  
  
> [!NOTE]
>  Da der-Parameter in einer WHERE-Klausel verwendet wird, ist die Verwendung der <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>-Eigenschaft in diesem Codebeispiel funktionell gleichwertig mit der Verwendung der Eigenschaften <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> und <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_2sql/CS/sql2cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_2sql/VB/sql2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />
      </Docs>
    </Member>
    <Member MemberName="SortParameterName">
      <MemberSignature Language="C#" Value="public string SortParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SortParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property SortParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SortParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SortParameterName : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.SortParameterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen eines Parameters für eine gespeicherte Prozedur ab, mit der abgerufene Daten sortiert werden, sofern der Abruf mit einer gespeicherten Prozedur erfolgt ist, oder legt diesen Namen fest.</summary>
        <value>Der Name eines Parameters für eine gespeicherte Prozedur, mit der abgerufene Daten sortiert werden, sofern der Abruf mit einer gespeicherten Prozedur erfolgt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A>-Eigenschaft wird nur ausgewertet, wenn der SQL-Befehl, der in der <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A>-Eigenschaft enthalten ist, der Name einer gespeicherten Prozedur ist. Wenn die <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A>-Eigenschaft festgelegt ist, enthält Sie in diesem Fall den Namen eines Parameters, der zum Sortieren der Ergebnisse der gespeicherten Prozedur verwendet wird.  
  
 Wenn die <xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A>-Eigenschaft festgelegt ist, wird Sie der <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A>-Eigenschaft vorangestellt.  
  
 Der Wert der <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A>-Eigenschaft wird im Ansichts Zustand gespeichert.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.IsTrackingViewState">
      <MemberSignature Language="C#" Value="bool System.Web.UI.IStateManager.IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsTrackingViewState As Boolean Implements IStateManager.IsTrackingViewState" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Web::UI::IStateManager::IsTrackingViewState { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="P:System.Web.UI.IStateManager.IsTrackingViewState" />.</summary>
        <value><see langword="true" />, wenn die Datenquellenansicht für das Speichern ihres Zustands markiert wurde, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Member ist eine explizite Schnittstellen-Memberimplementierung. Sie kann nur verwendet werden, wenn die <xref:System.Web.UI.WebControls.SqlDataSourceView> Instanz in die <xref:System.Web.UI.IStateManager>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.IStateManager.IsTrackingViewState" />
        <altmember cref="T:System.Web.UI.IStateManager" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.LoadViewState">
      <MemberSignature Language="C#" Value="void IStateManager.LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub LoadViewState (savedState As Object) Implements IStateManager.LoadViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.LoadViewState(System::Object ^ savedState) = System::Web::UI::IStateManager::LoadViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Ein Objekt, das den wiederherzustellenden <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> -Zustand darstellt.</param>
        <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.Web.UI.IStateManager.LoadViewState(System.Object)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Member ist eine explizite Schnittstellen-Memberimplementierung. Sie kann nur verwendet werden, wenn die <xref:System.Web.UI.WebControls.SqlDataSourceView> Instanz in die <xref:System.Web.UI.IStateManager>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IStateManager" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.SaveViewState">
      <MemberSignature Language="C#" Value="object IStateManager.SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Web.UI.IStateManager.SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Function SaveViewState () As Object Implements IStateManager.SaveViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Web.UI.IStateManager.SaveViewState() = System::Web::UI::IStateManager::SaveViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.Web.UI.IStateManager.SaveViewState" />.</summary>
        <returns>Das Objekt, das die Änderungen des Ansichtszustands von <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> enthält, andernfalls <see langword="null" />, wenn dem Objekt kein Ansichtszustand zugeordnet ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Member ist eine explizite Schnittstellen-Memberimplementierung. Sie kann nur verwendet werden, wenn die <xref:System.Web.UI.WebControls.SqlDataSourceView> Instanz in die <xref:System.Web.UI.IStateManager>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IStateManager" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.TrackViewState">
      <MemberSignature Language="C#" Value="void IStateManager.TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Sub TrackViewState () Implements IStateManager.TrackViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.TrackViewState() = System::Web::UI::IStateManager::TrackViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.Web.UI.IStateManager.TrackViewState" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Member ist eine explizite Schnittstellen-Memberimplementierung. Sie kann nur verwendet werden, wenn die <xref:System.Web.UI.WebControls.SqlDataSourceView> Instanz in die <xref:System.Web.UI.IStateManager>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IStateManager" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected virtual void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void TrackViewState();" />
      <MemberSignature Language="F#" Value="abstract member TrackViewState : unit -&gt; unit&#xA;override this.TrackViewState : unit -&gt; unit" Usage="sqlDataSourceView.TrackViewState " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Bewirkt, dass das <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" />-Objekt Änderungen an seinem Ansichtszustand nachverfolgt, damit diese im <see cref="T:System.Web.UI.StateBag" />-Objekt des Steuerelements gespeichert und über Anforderungen der gleichen Seite hinweg beibehalten werden.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(class System.Collections.IDictionary keys, class System.Collections.IDictionary values, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function Update (keys As IDictionary, values As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values, System::Collections::IDictionary ^ oldValues);" />
      <MemberSignature Language="F#" Value="override this.Update : System.Collections.IDictionary * System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="sqlDataSourceView.Update (keys, values, oldValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys">Ein <see cref="T:System.Collections.IDictionary" /> mit Primärschlüsseln, die mit der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />-Eigenschaft zum Ausführen des Aktualisierungsvorgangs für die Datenbank verwendet werden. Wenn der Abfrage keine Schlüssel zugeordnet sind oder <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> keine parametrisierte SQL-Abfrage ist, wird <see langword="null" /> übergeben.</param>
        <param name="values">Ein <see cref="T:System.Collections.IDictionary" /> mit Werten, die mit der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />-Eigenschaft zum Ausführen des Aktualisierungsvorgangs für die Datenbank verwendet werden. Wenn der Abfrage keine Parameter zugeordnet sind oder der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> keine parametrisierte SQL-Abfrage ist, wird <see langword="null" /> übergeben.</param>
        <param name="oldValues">Ein <see cref="T:System.Collections.IDictionary" />, das die ursprünglichen Werte in der Datenbank darstellt. Wenn der Abfrage keine Parameter zugeordnet sind oder der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> keine parametrisierte SQL-Abfrage ist, wird <see langword="null" /> übergeben.</param>
        <summary>Führt mithilfe der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />-SQL-Zeichenfolge, aller Parameter in der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" />-Auflistung sowie der Werte in den angegebenen Auflistungen <paramref name="keys" />, <paramref name="values" /> und <paramref name="oldValues" /> einen Aktualisierungsvorgang aus.</summary>
        <returns>Ein Wert, der die Anzahl der aktualisierten Zeilen in der zugrunde liegenden Datenbank darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A>-Methode ruft die <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate%2A>-Methode auf und übergibt die Parameter `keys`, `values`und `oldValues`. Weitere Informationen finden Sie unter <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand?displayProperty=nameWithType>.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie ein <xref:System.Web.UI.WebControls.SqlDataSource> Steuerelement zum Anzeigen von Daten in einem <xref:System.Web.UI.WebControls.DropDownList> Steuerelement und zum Aktualisieren von Daten verwendet wird, wenn auf die Schaltfläche **senden** geklickt wird. Die <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>-Eigenschaft wird mit einer parametrisierten SQL-Anweisung festgelegt, und der <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A>-Auflistung werden zwei <xref:System.Web.UI.WebControls.ControlParameter> Parameter hinzugefügt. Wenn Sie auf die Schaltfläche " **senden** " klicken, wird das <xref:System.Web.UI.WebControls.Button.OnClick%2A> Ereignis behandelt, um die <xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A>-Methode explizit aufzurufen.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/CS/sql8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/VB/sql8vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> kann keine Verbindung mit der zugrunde liegenden Datenquelle herstellen.</exception>
        <exception cref="T:System.NotSupportedException">Die <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate" />-Eigenschaft ist <see langword="false" />.</exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" />
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public string UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UpdateCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateCommand : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die SQL-Zeichenfolge ab, die vom <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" />-Objekt zum Aktualisieren von Daten in der zugrunde liegenden Datenbank verwendet wird, oder legt diese Zeichenfolge fest.</summary>
        <value>Eine SQL-Zeichenfolge, die von der <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> zum Aktualisieren von Daten verwendet wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Da die jeweiligen Datenbankprodukte verschiedene SQL-Varianten verwenden, hängt die Syntax der SQL-Zeichenfolge vom derzeit verwendeten ADO.NET-Anbieter ab, der durch die <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>-Eigenschaft identifiziert wird. Wenn die SQL-Zeichenfolge eine parametrisierte Abfrage oder ein parametrisierter Befehl ist, hängt der Platzhalter des Parameters ebenfalls vom verwendeten ADO.NET-Anbieter ab. Wenn der Anbieter z. b. der <xref:System.Data.SqlClient?displayProperty=nameWithType>ist, bei dem es sich um den Standardanbieter für die <xref:System.Web.UI.WebControls.SqlDataSource>-Klasse handelt, wird der Platzhalter des-Parameters `'@parameterName'`. Wenn der Anbieter jedoch auf die <xref:System.Data.Odbc?displayProperty=nameWithType> oder <xref:System.Data.OleDb?displayProperty=nameWithType>festgelegt ist, wird der Platzhalter des Parameters `'?'`. Weitere Informationen über parametrisierte SQL-Abfragen und-Befehle finden [Sie unter Verwenden von Parametern mit dem SqlDataSource-Steuer](https://docs.microsoft.com/previous-versions/aspnet/z72eefad(v=vs.100))Element.  
  
 Bei der <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A>-Eigenschaft kann es sich um eine SQL-Zeichenfolge oder den Namen einer gespeicherten Prozedur handeln, wenn die Datenquelle gespeicherte Prozeduren unterstützt.  
  
 Der Wert der <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A>-Eigenschaft wird im Ansichts Zustand gespeichert.  
  
   
  
## Examples  
 Dieser Abschnitt enthält zwei Codebeispiele. Im ersten Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>-Eigenschaft des <xref:System.Web.UI.WebControls.SqlDataSource>-Steuer Elements festgelegt und Daten in einer Microsoft SQL Server-Datenbank mithilfe des <xref:System.Web.UI.WebControls.GridView>-Steuer Elements aktualisiert werden. Im zweiten Codebeispiel wird veranschaulicht, wie Daten in einer ODBC-Datenbank mithilfe des <xref:System.Web.UI.WebControls.GridView>-Steuer Elements aktualisiert werden.  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>-Eigenschaft des <xref:System.Web.UI.WebControls.SqlDataSource>-Steuer Elements festgelegt und Daten in einer SQL Server-Datenbank mithilfe des <xref:System.Web.UI.WebControls.GridView>-Steuer Elements aktualisiert werden. Das <xref:System.Web.UI.WebControls.GridView>-Steuerelement füllt automatisch die <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> Auflistung auf, wobei die Parameter aus den <xref:System.Web.UI.WebControls.BoundField> Objekten abgeleitet werden, und ruft die <xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A>-Methode auf, wenn der **Aktualisierungs** Link für das bearbeitbare <xref:System.Web.UI.WebControls.GridView> Steuerelement ausgewählt wird. Dieses Beispiel enthält auch einige Nachbearbeitung: Nachdem ein Datensatz aktualisiert wurde, wird eine e-Mail-Benachrichtigung gesendet.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_7sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7sql/CS/sql7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_7sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7sql/VB/sql7vb.aspx#1)]  
  
 Das folgende Codebeispiel, das funktionell mit dem vorangehenden Codebeispiel identisch ist, veranschaulicht das Aktualisieren von Daten in einer ODBC-Datenbank mithilfe des <xref:System.Web.UI.WebControls.GridView>-Steuer Elements. Die <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>-Eigenschaft wird auf den ADO.NET-Anbieter für ODBC, die <xref:System.Data.Odbc?displayProperty=nameWithType>und die <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A>-Eigenschaft auf den Namen eines ODBC-Datenquellen namens (DSN) festgelegt.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/CS/odbc7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/VB/odbc7vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" />
      </Docs>
    </Member>
    <Member MemberName="UpdateCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType UpdateCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType UpdateCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType UpdateCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateCommandType : System.Web.UI.WebControls.SqlDataSourceCommandType with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Text in der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />-Eigenschaft eine SQL-Anweisung oder der Name einer gespeicherten Prozedur ist, oder legt diesen Wert fest.</summary>
        <value>Einer der <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />-Werte. Der Standardwert ist der <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" />-Wert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Wert der <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType%2A>-Eigenschaft wird im Ansichts Zustand gespeichert.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der ausgewählte Wert ist keiner der <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />-Werte.</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommandType" />
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />
      </Docs>
    </Member>
    <Member MemberName="Updated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Updated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Updated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Updated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updated As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Updated;" />
      <MemberSignature Language="F#" Value="member this.Updated : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " Usage="member this.Updated : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn ein Aktualisierungsvorgang abgeschlossen wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Behandeln Sie das <xref:System.Web.UI.WebControls.SqlDataSourceView.Updated>-Ereignis, um die Werte der Ausgabeparameter zu überprüfen, nachdem ein Aktualisierungs Vorgang abgeschlossen wurde. Die Ausgabeparameter sind über das <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> Objekt verfügbar, das dem Ereignis zugeordnet ist.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie Daten, die aus einer ODBC-Datenbank abgerufen werden, in einem <xref:System.Web.UI.WebControls.GridView>-Steuerelement anzeigen und aktualisieren. Nachdem ein Datensatz erfolgreich aktualisiert wurde, wird das <xref:System.Web.UI.WebControls.SqlDataSource.Updated> Ereignis von einem Ereignishandler behandelt, um einen nach Verarbeitungsschritt auszuführen, bei dem eine e-Mail-Benachrichtigung gesendet wird.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/CS/odbc7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/VB/odbc7vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Updating" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Update" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" />
      </Docs>
    </Member>
    <Member MemberName="UpdateParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection UpdateParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdateParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ UpdateParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UpdateParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Parameterauflistung ab, die die von der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />-Eigenschaft verwendeten Parameter enthält.</summary>
        <value>Eine <see cref="T:System.Web.UI.WebControls.ParameterCollection" />, die die von der <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />-Eigenschaft verwendeten Parameter enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A>-Eigenschaft eine parametrisierte SQL-Abfrage enthält, enthält die <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A> Auflistung alle <xref:System.Web.UI.WebControls.Parameter>-Objekte, die den Parameter Platzhaltern in der SQL-Zeichenfolge entsprechen.  
  
 Parameter Namen können von der <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A>-Eigenschaft beeinflusst werden. insbesondere, wenn der Name einen Primärschlüssel identifiziert, z. b. einen Schlüssel, der mit der `DataKeyNames`-Eigenschaft angegeben wird, oder in DELETE-und Update-Szenarios, in denen die <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A>-Eigenschaft auf den <xref:System.Web.UI.ConflictOptions.CompareAllValues> Wert festgelegt ist, und ein Satz von `oldValues` an die entsprechende Daten Methode übermittelt wird. In diesem Fall wird die Format Zeichenfolge auf jeden Parameternamen in der `oldValues` Auflistung angewendet.  
  
 Abhängig vom ADO.NET-Anbieter kann die Reihenfolge der Parameter in der <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A> Auflistung von Bedeutung sein. Die <xref:System.Data.OleDb?displayProperty=nameWithType>-und <xref:System.Data.Odbc?displayProperty=nameWithType> Anbieter ordnen die Parameter in der Auflistung entsprechend der Reihenfolge zu, in der die Parameter in der parametrisierten SQL-Abfrage angezeigt werden. Der <xref:System.Data.SqlClient?displayProperty=nameWithType>-Anbieter, der der standardmäßige ADO.NET-Anbieter für das <xref:System.Web.UI.WebControls.SqlDataSource>-Steuerelement ist, ordnet die Parameter in der Auflistung zu, indem der Name des Parameters mit einem Platzhalter Alias in der SQL-Abfrage abgeglichen wird. Weitere Informationen über parametrisierte SQL-Abfragen und-Befehle finden [Sie unter Verwenden von Parametern mit dem SqlDataSource-Steuer](https://docs.microsoft.com/previous-versions/aspnet/z72eefad(v=vs.100))Element.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie ein <xref:System.Web.UI.WebControls.SqlDataSource> Steuerelement zum Anzeigen von Daten in einem <xref:System.Web.UI.WebControls.DropDownList> Steuerelement und zum Aktualisieren von Daten verwendet wird, wenn auf die Schaltfläche **senden** geklickt wird. Die <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>-Eigenschaft wird mit einer parametrisierten SQL-Anweisung festgelegt, und der <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A>-Auflistung werden zwei <xref:System.Web.UI.WebControls.ControlParameter> Parameter hinzugefügt. Wenn Sie auf die Schaltfläche " **senden** " klicken, wird das <xref:System.Web.UI.WebControls.Button.OnClick%2A> Ereignis behandelt, um die <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A>-Methode explizit aufzurufen.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/CS/sql8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/VB/sql8vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />
      </Docs>
    </Member>
    <Member MemberName="Updating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Updating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Updating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Updating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updating As SqlDataSourceCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceCommandEventHandler ^ Updating;" />
      <MemberSignature Language="F#" Value="member this.Updating : System.Web.UI.WebControls.SqlDataSourceCommandEventHandler " Usage="member this.Updating : System.Web.UI.WebControls.SqlDataSourceCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt vor einem Aktualisierungsvorgang ein.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Behandeln Sie das <xref:System.Web.UI.WebControls.SqlDataSourceView.Updating>-Ereignis, um zusätzliche Initialisierungs Vorgänge auszuführen, die für Ihre Anwendung spezifisch sind, um die Werte von Parametern zu überprüfen oder um die Parameterwerte zu ändern, bevor das <xref:System.Web.UI.WebControls.SqlDataSource>-Steuerelement den Aktualisierungs Vorgang ausführt.  
  
 Die Verbindung mit der zugrunde liegenden Datenquelle ist noch nicht geöffnet, wenn der Ereignishandlerdelegat aufgerufen wird. Daher können Sie den Vorgang nicht direkt abbrechen, indem Sie die <xref:System.Data.Common.DbCommand.Cancel%2A>-Methode für das <xref:System.Data.Common.DbCommand> Objekt aufrufen, das vom <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>-Objekt verfügbar gemacht wird. Sie können den Daten Bank Vorgang jedoch abbrechen, indem Sie die <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>-Eigenschaft des <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> auf `true`festlegen.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie Daten anzeigen, die aus einer Microsoft SQL Server-Datenbank in einem <xref:System.Web.UI.WebControls.DropDownList>-Steuerelement abgerufen werden, und den Datensatz mit einem <xref:System.Web.UI.WebControls.TextBox>-Steuerelement aktualisieren. Das Beispiel zeigt, wie Sie mit einem <xref:System.Data.Common.DbTransaction>-Objekt einen Transaktionskontext hinzufügen können, wenn Sie das <xref:System.Web.UI.WebControls.SqlDataSource>-Steuerelement zum Aktualisieren von Daten verwenden.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/CS/sql9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/VB/sql9vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Updated" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Update" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" />
      </Docs>
    </Member>
  </Members>
</Type>
