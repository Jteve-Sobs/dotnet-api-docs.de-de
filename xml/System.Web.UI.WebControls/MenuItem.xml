<Type Name="MenuItem" FullName="System.Web.UI.WebControls.MenuItem">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1db6bb17a65617256ee22d441083a479ca11d1e0" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70668602" /></Metadata><TypeSignature Language="C#" Value="public sealed class MenuItem : ICloneable, System.Web.UI.IStateManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MenuItem extends System.Object implements class System.ICloneable, class System.Web.UI.IStateManager" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.MenuItem" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MenuItem&#xA;Implements ICloneable, IStateManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class MenuItem sealed : ICloneable, System::Web::UI::IStateManager" />
  <TypeSignature Language="F#" Value="type MenuItem = class&#xA;    interface IStateManager&#xA;    interface ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IStateManager</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true, "ChildItems")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt ein Menüelement dar, das im <see cref="T:System.Web.UI.WebControls.Menu" />Steuerelement angezeigt wird. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein <xref:System.Web.UI.WebControls.Menu> -Steuerelement besteht aus einer Hierarchie von Menü Elementen, <xref:System.Web.UI.WebControls.MenuItem> die durch-Objekte dargestellt werden. Jedes Menü Element verfügt über eine <xref:System.Web.UI.WebControls.MenuItem.Depth%2A> schreibgeschützte Eigenschaft, die die Ebene angibt, bei der das Menü Element <xref:System.Web.UI.WebControls.Menu> im Steuerelement angezeigt wird. Menü Elemente auf der obersten Ebene (Ebene 0), die nicht über ein übergeordnetes Menü Element verfügen, werden als Stamm Menü Elemente bezeichnet. Ein Menü Element, das über ein übergeordnetes Menü Element verfügt, wird als unter Menü Element bezeichnet. Alle Stamm Menü Elemente werden in der <xref:System.Web.UI.WebControls.Menu.Items%2A> Auflistung gespeichert. Unter Menü Elemente werden in der <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> Auflistung eines übergeordneten Menü Elements gespeichert. Mithilfe der <xref:System.Web.UI.WebControls.MenuItem.Parent%2A> -Eigenschaft können Sie auf das übergeordnete Menü Element eines Menü Elements zugreifen.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.Menu.Items%2A> - <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> Auflistung und die-Auflistung enthalten nur die Menü Elemente für die nächste Ebene. Wenn Sie auf Menü Elemente weiter unten in der Menüstruktur zugreifen <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> möchten, verwenden Sie die-Eigenschaft eines nachfolgenden Menü Elements.  
  
 Um die Menü Elemente für ein <xref:System.Web.UI.WebControls.Menu> Steuerelement zu erstellen, verwenden Sie eine der folgenden Methoden:  
  
 Verwenden Sie die deklarative Syntax, um statische Menü Elemente zu erstellen.  
  
 Verwenden Sie einen Konstruktor, um dynamisch neue Instanzen der <xref:System.Web.UI.WebControls.MenuItem> -Klasse zu erstellen. Diese <xref:System.Web.UI.WebControls.MenuItem> Objekte können dann der-Auflistung oder <xref:System.Web.UI.WebControls.Menu.Items%2A> <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> der-Auflistung hinzugefügt werden.  
  
 Binden Sie <xref:System.Web.UI.WebControls.Menu> das Steuerelement an eine Datenquelle. Wenn das <xref:System.Web.UI.WebControls.Menu> Steuerelement an ein <xref:System.Web.UI.WebControls.SiteMapDataSource> Steuerelement gebunden <xref:System.Web.UI.WebControls.MenuItem> ist, werden automatisch-Objekte erstellt, die den Elementen in der Datenquelle entsprechen. Bei anderen Datenquellen <xref:System.Web.UI.WebControls.MenuItem> werden Objekte auch automatisch erstellt, die der Hierarchiestruktur der Datenquelle entsprechen. Sie müssen jedoch auch die <xref:System.Web.UI.WebControls.Menu.DataBindings%2A> Auflistung verwenden, um die Menü Element Bindungen zu definieren, die die Bindungs Beziehung angeben. zwischen einem Menü Element und dem zugehörigen Datenelement.  
  
 Die Menü Elemente werden je nach Ebene entweder in einem statischen Menü oder in einem dynamischen Menü angezeigt. Das statische Menü wird immer in einem <xref:System.Web.UI.WebControls.Menu> -Steuerelement angezeigt. Standardmäßig werden die Menü Elemente auf der obersten Ebene (Ebene 0) im statischen Menü angezeigt. Sie können zusätzliche Menüebenen (statische Untermenüs) im statischen Menü anzeigen, indem Sie die <xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A> -Eigenschaft festlegen. Menü Elemente (sofern vorhanden) mit einer höheren Ebene als der Wert, der von <xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A> der-Eigenschaft angegeben wird, werden in einem dynamischen Untermenü angezeigt. Ein dynamisches Untermenü wird nur angezeigt, wenn der Benutzer den Mauszeiger über dem übergeordneten Menü Element positioniert, das ein dynamisches Untermenü enthält.  
  
 Wenn der Benutzer auf ein Menü Element klickt, <xref:System.Web.UI.WebControls.Menu> kann das Steuerelement entweder zu einer verknüpften Webseite navigieren oder einfach an den Server zurücksenden. Wenn die <xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A> -Eigenschaft eines Menü Elements festgelegt wird, <xref:System.Web.UI.WebControls.Menu> navigiert das-Steuerelement zur verknüpften Seite; andernfalls wird die Seite zur Verarbeitung an den Server zurückgesendet. Standardmäßig wird eine verknüpfte Seite im gleichen Fenster oder Frame angezeigt wie das <xref:System.Web.UI.WebControls.Menu> Steuerelement. Um den verknüpften Inhalt in einem anderen Fenster oder Frame anzuzeigen, verwenden <xref:System.Web.UI.WebControls.Menu.Target%2A> Sie die- <xref:System.Web.UI.WebControls.Menu> Eigenschaft des-Steuer Elements.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.Menu.Target%2A?displayProperty=nameWithType> -Eigenschaft wirkt sich auf alle Menü Elemente im-Steuerelement aus. Wenn Sie ein Fenster oder einen Frame für ein einzelnes Menü Element angeben möchten <xref:System.Web.UI.WebControls.MenuItem.Target%2A> , legen Sie <xref:System.Web.UI.WebControls.MenuItem> die-Eigenschaft des-Objekts direkt fest.  
  
 Jedes Menü Element verfügt über <xref:System.Web.UI.WebControls.MenuItem.Text%2A> eine- <xref:System.Web.UI.WebControls.MenuItem.Value%2A> Eigenschaft und eine-Eigenschaft. Der Wert der <xref:System.Web.UI.WebControls.MenuItem.Text%2A> -Eigenschaft wird <xref:System.Web.UI.WebControls.Menu> im-Steuerelement angezeigt, während <xref:System.Web.UI.WebControls.MenuItem.Value%2A> die-Eigenschaft zum Speichern zusätzlicher Daten über das Menü Element verwendet wird, z. b. Daten, die an das dem Menü Element zugeordnete Post Back Ereignis weitergegeben werden. Wenn Sie die <xref:System.Web.UI.WebControls.MenuItem.Text%2A> -Eigenschaft festlegen, aber die <xref:System.Web.UI.WebControls.MenuItem.Value%2A> -Eigenschaft nicht festgelegt <xref:System.Web.UI.WebControls.MenuItem.Value%2A> lassen, wird die-Eigenschaft automatisch mit dem gleichen <xref:System.Web.UI.WebControls.MenuItem.Text%2A> Wert wie die-Eigenschaft festgelegt. Das Gegenteil gilt auch für. Wenn Sie die <xref:System.Web.UI.WebControls.MenuItem.Value%2A> -Eigenschaft, jedoch nicht die <xref:System.Web.UI.WebControls.MenuItem.Text%2A> -Eigenschaft festlegen <xref:System.Web.UI.WebControls.MenuItem.Text%2A> , wird die-Eigenschaft automatisch mit dem gleichen Wert <xref:System.Web.UI.WebControls.MenuItem.Value%2A> wie die-Eigenschaft festgelegt.  
  
> [!NOTE]
>  Menü Elemente auf der gleichen Menü Ebene müssen jeweils einen eindeutigen Wert für die <xref:System.Web.UI.WebControls.MenuItem.Value%2A> -Eigenschaft aufweisen. das <xref:System.Web.UI.WebControls.Menu> Steuerelement kann nicht zwischen verschiedenen Menü Elementen auf derselben Ebene unterscheiden, die denselben Wert aufweisen. Wenn der Benutzer in diesem Szenario auf ein Menü Element klickt, das einen doppelten Wert hat, wird das Menü Element ausgewählt, das zuerst im Menü angezeigt wird.  
  
 Um eine QuickInfo anzuzeigen, wenn der Benutzer den Mauszeiger über einem Menü Element positioniert, legen Sie <xref:System.Web.UI.WebControls.MenuItem.ToolTip%2A> die-Eigenschaft des Elements fest.  
  
 Ein <xref:System.Web.UI.WebControls.Menu> -Steuerelement verfügt über mehrere verschiedene Typen von Menü Elementen. Sie können den Stil (z. b. Schriftart Größe und-Farbe) für die unterschiedlichen Menü Elementtypen steuern, indem Sie die Eigenschaften in der folgenden Tabelle verwenden.  
  
|Menü Element Stil (Eigenschaft)|Beschreibung|  
|------------------------------|-----------------|  
|<xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A>|Die Stileinstellungen für ein dynamisches Menü Element, wenn der Mauszeiger darauf positioniert ist.|  
|<xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A>|Die Stileinstellungen für ein einzelnes dynamisches Menü Element.|  
|<xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A>|Die Stileinstellungen für ein dynamisches Menü.|  
|<xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A>|Die Stileinstellungen für das aktuell ausgewählte dynamische Menü Element.|  
|<xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A>|Die Stileinstellungen für ein statisches Menü Element, wenn der Mauszeiger darauf positioniert ist.|  
|<xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A>|Die Stileinstellungen für ein einzelnes statisches Menü Element.|  
|<xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A>|Die Stileinstellungen für ein statisches Menü.|  
|<xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A>|Die Stileinstellungen für das aktuell ausgewählte statische Menü Element.|  
  
 Anstatt die einzelnen Stileigenschaften festzulegen, können Sie mithilfe der in der folgenden Tabelle gezeigten Stil Auflistungen Stile angeben, die auf die Menü Elemente basierend auf ihrer Ebene angewendet werden.  
  
|Sammlungen auf Ebene|Beschreibung|  
|-----------------------------|-----------------|  
|<xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A>|Eine Auflistung von <xref:System.Web.UI.WebControls.MenuItemStyle> -Objekten, die den Stil der Menü Elemente basierend auf ihrer Ebene steuern.|  
|<xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A>|Eine Auflistung von <xref:System.Web.UI.WebControls.MenuItemStyle> -Objekten, die den Stil ausgewählter Menü Elemente basierend auf ihrer Ebene steuern.|  
|<xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A>|Eine Auflistung von <xref:System.Web.UI.WebControls.MenuItemStyle> -Objekten, die den Stil der unter Menü Elemente basierend auf ihrer Ebene steuern.|  
  
 Der erste Stil in der Auflistung entspricht dem Stil der Menü Elemente auf der ersten tiefen Ebene in der Menüstruktur. Der zweite Stil in der Auflistung entspricht dem Stil der Menü Elemente auf der zweiten tiefen Ebene in der Menüstruktur usw. Dies wird am häufigsten verwendet, um Inhalts Stil-Navigationsmenüs zu generieren, bei denen Menü Elemente in einer bestimmten Tiefe die gleiche Darstellung aufweisen sollten, unabhängig davon, ob Sie über Untermenüs verfügen.  
  
> [!NOTE]
>  Wenn Sie eine der in der vorherigen Tabelle aufgeführten Ebenen-Auflistungen verwenden, um den Stil für <xref:System.Web.UI.WebControls.Menu> das Steuerelement zu definieren, überschreiben diese Stileinstellungen die einzelnen Menü Element-Stileigenschaften.  
  
 Zusätzlich zum Anpassen des Stils eines Menü Elements können Sie auch seine Darstellung anpassen. Sie können benutzerdefinierte Images für die verschiedenen Teile für ein Menü Element angeben, indem Sie die Eigenschaften in der folgenden Tabelle festlegen.  
  
|Image-Eigenschaft|Beschreibung|  
|--------------------|-----------------|  
|<xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A>|Ein optionales Bild, das neben dem Text eines Menü Elements angezeigt wird.|  
|<xref:System.Web.UI.WebControls.MenuItem.PopOutImageUrl%2A>|Ein optionales Bild, das in einem Menü Element angezeigt wird und angibt, dass das Menü Element über ein dynamisches Untermenü verfügt.|  
|<xref:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl%2A>|Ein optionales Bild, das am unteren Rand eines Menü Elements angezeigt wird, um es von anderen Menü Elementen zu trennen.|  
  
 Verwenden Sie die <xref:System.Web.UI.WebControls.MenuItem.Selected%2A> -Eigenschaft, um zu bestimmen, ob <xref:System.Web.UI.WebControls.Menu> ein Menü Element zurzeit in einem-Steuerelement ausgewählt ist. Mithilfe der <xref:System.Web.UI.WebControls.MenuItem.DataBound%2A> -Eigenschaft können Sie auch bestimmen, ob ein Menü Element an Daten gebunden ist. Wenn ein Menü Element an Daten gebunden ist, können Sie die <xref:System.Web.UI.WebControls.MenuItem.DataItem%2A> -Eigenschaft verwenden, um auf die Werte des Datenelements zuzugreifen, das an das Menü Element gebunden ist.  
  
 Eine Liste der anfänglichen Eigenschaftenwerte für eine Instanz der <xref:System.Web.UI.WebControls.MenuItem>-Klasse finden Sie im <xref:System.Web.UI.WebControls.MenuItem.%23ctor%2A>-Konstruktor.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie ein <xref:System.Web.UI.WebControls.Menu> -Steuerelement mithilfe von deklarativer Syntax mit statischen <xref:System.Web.UI.WebControls.MenuItem> -Objekten aufgefüllt wird.  
  
 [!code-aspx-csharp[MenuItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItem/CS/menuitemcs.aspx#1)]
 [!code-aspx-vb[MenuItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItem/VB/menuitemvb.aspx#1)]  
  
 Im folgenden Beispiel wird veranschaulicht, wie ein <xref:System.Web.UI.WebControls.Menu> -Steuerelement <xref:System.Web.UI.WebControls.SiteMapDataSource> an ein-Steuerelement gebunden wird. Wenn das <xref:System.Web.UI.WebControls.Menu> Steuerelement an eine Datenquelle gebunden ist, erstellt <xref:System.Web.UI.WebControls.MenuItem> es automatisch die Objekte. Damit dieses Beispiel ordnungsgemäß funktioniert, müssen Sie die Beispiel Daten der Site Map unten in eine Datei mit dem Namen "Web. Sitemap" kopieren.  
  
 [!code-aspx-csharp[MenuDataBind#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDataBind/CS/menudatabindcs.aspx#1)]
 [!code-aspx-vb[MenuDataBind#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDataBind/VB/menudatabindvb.aspx#1)]  
  
 Im folgenden finden Sie Beispiele für Site Übersichts Daten für das vorherige Beispiel.  
  
 `<siteMap>`  
  
 `<siteMapNode url="~\Home.aspx"`  
  
 `title="Home"`  
  
 `description="Home">`  
  
 `<siteMapNode url="~\Music.aspx"`  
  
 `title="Music"`  
  
 `description="Music">`  
  
 `<siteMapNode url="~\Classical.aspx"`  
  
 `title="Classical"`  
  
 `description="Classical"/>`  
  
 `<siteMapNode url="~\Rock.aspx"`  
  
 `title="Rock"`  
  
 `description="Rock"/>`  
  
 `<siteMapNode url="~\Jazz.aspx"`  
  
 `title="Jazz"`  
  
 `description="Jazz"/>`  
  
 `</siteMapNode>`  
  
 `<siteMapNode url="~\Movies.aspx"`  
  
 `title="Movies"`  
  
 `description="Movies">`  
  
 `<siteMapNode url="~\Action.aspx"`  
  
 `title="Action"`  
  
 `description="Action"/>`  
  
 `<siteMapNode url="~\Drama.aspx"`  
  
 `title="Drama"`  
  
 `description="Drama"/>`  
  
 `<siteMapNode url="~\Musical.aspx"`  
  
 `title="Musical"`  
  
 `description="Musical"/>`  
  
 `</siteMapNode>`  
  
 `</siteMapNode>`  
  
 `</siteMap>`  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.Menu" />
    <altmember cref="T:System.Web.UI.WebControls.MenuItemBinding" />
    <altmember cref="T:System.Web.UI.WebControls.MenuItemCollection" />
    <altmember cref="T:System.Web.UI.WebControls.MenuItemStyle" />
    <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
    <altmember cref="P:System.Web.UI.WebControls.MenuItem.ImageUrl" />
    <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
    <altmember cref="P:System.Web.UI.WebControls.MenuItem.NavigateUrl" />
    <altmember cref="P:System.Web.UI.WebControls.MenuItem.PopOutImageUrl" />
    <altmember cref="P:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl" />
    <altmember cref="P:System.Web.UI.WebControls.Menu.Target" />
    <altmember cref="P:System.Web.UI.WebControls.MenuItem.Target" />
    <altmember cref="P:System.Web.UI.WebControls.MenuItem.Text" />
    <altmember cref="P:System.Web.UI.WebControls.MenuItem.ToolTip" />
    <altmember cref="P:System.Web.UI.WebControls.MenuItem.Value" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.MenuItem" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuItem ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItem.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuItem();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.MenuItem" />-Klasse ohne einen Menütext oder einen Wert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diesen Konstruktor, um eine neue Instanz <xref:System.Web.UI.WebControls.MenuItem> einer-Klasse ohne Menütext oder einen-Wert zu erstellen.  
  
> [!NOTE]
>  Wenn dieser Konstruktor verwendet wird, werden alle Eigenschaften im <xref:System.Web.UI.WebControls.MenuItem> Objekt auf ihre Standardwerte festgelegt. Stellen Sie sicher, dass Sie nach dem Erstellen des Objekts die Eigenschaften nach Bedarf festlegen.  
  
 <xref:System.Web.UI.WebControls.Menu.Items%2A> Dieser Konstruktor wird häufig beim dynamischen Auffüllen der <xref:System.Web.UI.WebControls.Menu> -Auflistung eines-Steuer Elements <xref:System.Web.UI.WebControls.MenuItem> oder der <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> -Auflistung eines-Objekts verwendet.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie dieser Konstruktor verwendet wird, um eine neue Instanz <xref:System.Web.UI.WebControls.MenuItem> der-Klasse zu erstellen. Das <xref:System.Web.UI.WebControls.MenuItem> -Objekt wird dann verwendet, um die Menü Elemente in einem <xref:System.Web.UI.WebControls.Menu> -Steuerelement dynamisch aufzufüllen.  
  
 [!code-aspx-csharp[MenuItemCtorDefault#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemCtorDefault/CS/menuitemctordefaultcs.aspx#1)]
 [!code-aspx-vb[MenuItemCtorDefault#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemCtorDefault/VB/menuitemctordefaultvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItemCollection" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuItem (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItem.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuItem(System::String ^ text);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.MenuItem : string -&gt; System.Web.UI.WebControls.MenuItem" Usage="new System.Web.UI.WebControls.MenuItem text" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Der für ein Menüelement in einem <see cref="T:System.Web.UI.WebControls.Menu" />-Steuerelement angezeigte Text.</param>
        <summary>Initialisiert mithilfe des angegebenen Menütexts eine neue Instanz der <see cref="T:System.Web.UI.WebControls.MenuItem" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diesen Konstruktor, um eine neue Instanz der <xref:System.Web.UI.WebControls.MenuItem> -Klasse mit dem im- `text` Parameter angegebenen Menütext zu erstellen.  
  
 In der folgenden Tabelle wird der anfängliche Eigenschafts Wert für eine Instanz <xref:System.Web.UI.WebControls.MenuItem> der-Klasse angezeigt.  
  
|Eigenschaft|Anfangswert|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.MenuItem.Text%2A>|Der Wert des Text-Parameters.|  
  
 <xref:System.Web.UI.WebControls.Menu.Items%2A> Dieser Konstruktor wird häufig beim dynamischen Auffüllen der <xref:System.Web.UI.WebControls.Menu> -Auflistung eines-Steuer Elements <xref:System.Web.UI.WebControls.MenuItem> oder der <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> -Auflistung eines-Objekts verwendet.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie dieser Konstruktor verwendet wird, um eine neue Instanz <xref:System.Web.UI.WebControls.MenuItem> der-Klasse zu erstellen. Das <xref:System.Web.UI.WebControls.MenuItem> -Objekt wird dann verwendet, um die Menü Elemente in einem <xref:System.Web.UI.WebControls.Menu> -Steuerelement dynamisch aufzufüllen.  
  
 [!code-aspx-csharp[MenuItemCtor1Param#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemCtor1Param/CS/menuitemctor1paramcs.aspx#1)]
 [!code-aspx-vb[MenuItemCtor1Param#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemCtor1Param/VB/menuitemctor1paramvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItemCollection" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuItem (string text, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItem.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuItem(System::String ^ text, System::String ^ value);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.MenuItem : string * string -&gt; System.Web.UI.WebControls.MenuItem" Usage="new System.Web.UI.WebControls.MenuItem (text, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Der für ein Menüelement in einem <see cref="T:System.Web.UI.WebControls.Menu" />-Steuerelement angezeigte Text.</param>
        <param name="value">Ergänzende Daten, die dem Menüelement zugeordnet sind (z. B. Daten zum Behandeln von Postbackereignissen).</param>
        <summary>Initialisiert mithilfe des angegebenen Menütexts und des angegebenen Werts eine neue Instanz der <see cref="T:System.Web.UI.WebControls.MenuItem" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diesen Konstruktor zum Erstellen einer neuen Instanz von der <xref:System.Web.UI.WebControls.MenuItem> -Klasse mit dem Menütext und der angegebene Wert der `text` und `value` Parameter bzw.  
  
 In der folgenden Tabelle werden anfängliche Eigenschaftswerte für eine Instanz der <xref:System.Web.UI.WebControls.MenuItem>-Klasse aufgeführt.  
  
|Eigenschaft|Anfangswert|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.MenuItem.Text%2A>|Der Wert des `text`-Parameters.|  
|<xref:System.Web.UI.WebControls.MenuItem.Value%2A>|Der Wert des `value`-Parameters.|  
  
 <xref:System.Web.UI.WebControls.Menu.Items%2A> Dieser Konstruktor wird häufig beim dynamischen Auffüllen der <xref:System.Web.UI.WebControls.Menu> -Auflistung eines-Steuer Elements <xref:System.Web.UI.WebControls.MenuItem> oder der <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> -Auflistung eines-Objekts verwendet.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie dieser Konstruktor verwendet wird, um eine neue Instanz <xref:System.Web.UI.WebControls.MenuItem> der-Klasse zu erstellen. Das <xref:System.Web.UI.WebControls.MenuItem> -Objekt wird dann verwendet, um die Menü Elemente in einem <xref:System.Web.UI.WebControls.Menu> -Steuerelement dynamisch aufzufüllen.  
  
 [!code-aspx-csharp[MenuItemCtor2Param#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemCtor2Param/CS/menuitemctor2paramcs.aspx#1)]
 [!code-aspx-vb[MenuItemCtor2Param#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemCtor2Param/VB/menuitemctor2paramvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItemCollection" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuItem (string text, string value, string imageUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, string value, string imageUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItem.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, value As String, imageUrl As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuItem(System::String ^ text, System::String ^ value, System::String ^ imageUrl);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.MenuItem : string * string * string -&gt; System.Web.UI.WebControls.MenuItem" Usage="new System.Web.UI.WebControls.MenuItem (text, value, imageUrl)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="imageUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Der für ein Menüelement in einem <see cref="T:System.Web.UI.WebControls.Menu" />-Steuerelement angezeigte Text.</param>
        <param name="value">Ergänzende Daten, die dem Menüelement zugeordnet sind (z. B. Daten zum Behandeln von Postbackereignissen).</param>
        <param name="imageUrl">Die URL zu einem Bild, das neben dem Text eines Menüelements angezeigt wird.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.MenuItem" />-Klasse unter Verwendung des angegebenen Menütexts, des Werts sowie der URL zu einem Bild.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diesen Konstruktor zum Erstellen einer neuen Instanz von der <xref:System.Web.UI.WebControls.MenuItem> -Klasse unter Verwendung der Menütext Wert und Bild-URL, die gemäß der `text`, `value`, und `imageUrl` Parameter bzw.  
  
 In der folgenden Tabelle werden anfängliche Eigenschaftswerte für eine Instanz der <xref:System.Web.UI.WebControls.MenuItem>-Klasse aufgeführt.  
  
|Eigenschaft|Anfangswert|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.MenuItem.Text%2A>|Der Wert des `text`-Parameters.|  
|<xref:System.Web.UI.WebControls.MenuItem.Value%2A>|Der Wert des `value`-Parameters.|  
|<xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A>|Der Wert des `imageUrl`-Parameters.|  
  
 <xref:System.Web.UI.WebControls.Menu.Items%2A> Dieser Konstruktor wird häufig beim dynamischen Auffüllen der <xref:System.Web.UI.WebControls.Menu> -Auflistung eines-Steuer Elements <xref:System.Web.UI.WebControls.MenuItem> oder der <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> -Auflistung eines-Objekts verwendet.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie dieser Konstruktor verwendet wird, um eine neue Instanz <xref:System.Web.UI.WebControls.MenuItem> der-Klasse zu erstellen. Das <xref:System.Web.UI.WebControls.MenuItem> -Objekt wird dann verwendet, um die Menü Elemente in einem <xref:System.Web.UI.WebControls.Menu> -Steuerelement dynamisch aufzufüllen.  
  
 [!code-aspx-csharp[MenuItemCtor3Param#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemCtor3Param/CS/menuitemctor3paramcs.aspx#1)]
 [!code-aspx-vb[MenuItemCtor3Param#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemCtor3Param/VB/menuitemctor3paramvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItemCollection" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuItem (string text, string value, string imageUrl, string navigateUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, string value, string imageUrl, string navigateUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItem.#ctor(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, value As String, imageUrl As String, navigateUrl As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuItem(System::String ^ text, System::String ^ value, System::String ^ imageUrl, System::String ^ navigateUrl);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.MenuItem : string * string * string * string -&gt; System.Web.UI.WebControls.MenuItem" Usage="new System.Web.UI.WebControls.MenuItem (text, value, imageUrl, navigateUrl)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="imageUrl" Type="System.String" />
        <Parameter Name="navigateUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Der für ein Menüelement in einem <see cref="T:System.Web.UI.WebControls.Menu" />-Steuerelement angezeigte Text.</param>
        <param name="value">Ergänzende Daten, die dem Menüelement zugeordnet sind (z. B. Daten zum Behandeln von Postbackereignissen).</param>
        <param name="imageUrl">Die URL zu einem Bild, das neben dem Text eines Menüelements angezeigt wird.</param>
        <param name="navigateUrl">Die URL, die geöffnet werden soll, wenn auf das Menüelement geklickt wird.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.MenuItem" />-Klasse unter Verwendung des angegebenen Menütexts, des Werts sowie der URL zu einem Bild und der URL für die Navigation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diesen Konstruktor zum Erstellen einer neuen Instanz von der <xref:System.Web.UI.WebControls.MenuItem> -Klasse Menütext, Wert, Bild-URL und die URL für die Navigation durch angegeben mit der `text`, `value`, `imageUrl`, und `navigateUrl` Parameter bzw.  
  
 In der folgenden Tabelle werden anfängliche Eigenschaftswerte für eine Instanz der <xref:System.Web.UI.WebControls.MenuItem>-Klasse aufgeführt.  
  
|Eigenschaft|Anfangswert|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.MenuItem.Text%2A>|Der Wert des `text`-Parameters.|  
|<xref:System.Web.UI.WebControls.MenuItem.Value%2A>|Der Wert des `value`-Parameters.|  
|<xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A>|Der Wert des `imageUrl`-Parameters.|  
|<xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A>|Der Wert des `navigateUrl`-Parameters.|  
  
 <xref:System.Web.UI.WebControls.Menu.Items%2A> Dieser Konstruktor wird häufig beim dynamischen Auffüllen der <xref:System.Web.UI.WebControls.Menu> -Auflistung eines-Steuer Elements <xref:System.Web.UI.WebControls.MenuItem> oder der <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> -Auflistung eines-Objekts verwendet.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie dieser Konstruktor verwendet wird, um eine neue Instanz <xref:System.Web.UI.WebControls.MenuItem> der-Klasse zu erstellen. Das <xref:System.Web.UI.WebControls.MenuItem> -Objekt wird dann verwendet, um die Menü Elemente in einem <xref:System.Web.UI.WebControls.Menu> -Steuerelement dynamisch aufzufüllen.  
  
 [!code-aspx-csharp[MenuItemCtor4Param#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemCtor4Param/CS/menuitemctor4paramcs.aspx#1)]
 [!code-aspx-vb[MenuItemCtor4Param#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemCtor4Param/VB/menuitemctor4paramvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItemCollection" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuItem (string text, string value, string imageUrl, string navigateUrl, string target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, string value, string imageUrl, string navigateUrl, string target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItem.#ctor(System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, value As String, imageUrl As String, navigateUrl As String, target As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuItem(System::String ^ text, System::String ^ value, System::String ^ imageUrl, System::String ^ navigateUrl, System::String ^ target);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.MenuItem : string * string * string * string * string -&gt; System.Web.UI.WebControls.MenuItem" Usage="new System.Web.UI.WebControls.MenuItem (text, value, imageUrl, navigateUrl, target)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="imageUrl" Type="System.String" />
        <Parameter Name="navigateUrl" Type="System.String" />
        <Parameter Name="target" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Der für ein Menüelement in einem <see cref="T:System.Web.UI.WebControls.Menu" />-Steuerelement angezeigte Text.</param>
        <param name="value">Ergänzende Daten, die dem Menüelement zugeordnet sind (z. B. Daten zum Behandeln von Postbackereignissen).</param>
        <param name="imageUrl">Die URL zu einem Bild, das neben dem Text eines Menüelements angezeigt wird.</param>
        <param name="navigateUrl">Die URL, die geöffnet werden soll, wenn auf das Menüelement geklickt wird.</param>
        <param name="target">Das Zielfenster oder der Zielframe, in dem die mit einem Menüelement verknüpften Webseiteninhalte angezeigt werden sollen, wenn auf das Menüelement geklickt wird.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.MenuItem" />-Klasse unter Verwendung des angegebenen Menütexts, des Werts, der URL zu einem Bild, der URL für die Navigation sowie eines Ziels.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diesen Konstruktor zum Erstellen einer neuen Instanz von der <xref:System.Web.UI.WebControls.MenuItem> -Klasse mit den Menütext, Wert, Bild-URL, Navigations-URL und Ziel, die gemäß der `text`, `value`, `imageUrl`, `navigateUrl`, und `target` Parameter bzw.  
  
 In der folgenden Tabelle werden anfängliche Eigenschaftswerte für eine Instanz der <xref:System.Web.UI.WebControls.MenuItem>-Klasse aufgeführt.  
  
|Eigenschaft|Anfangswert|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.MenuItem.Text%2A>|Der Wert des `text`-Parameters.|  
|<xref:System.Web.UI.WebControls.MenuItem.Value%2A>|Der Wert des `value`-Parameters.|  
|<xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A>|Der Wert des `imageUrl`-Parameters.|  
|<xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A>|Der Wert des `navigateUrl`-Parameters.|  
|<xref:System.Web.UI.WebControls.MenuItem.Target%2A>|Der Wert des `target`-Parameters.|  
  
 <xref:System.Web.UI.WebControls.Menu.Items%2A> Dieser Konstruktor wird häufig beim dynamischen Auffüllen der <xref:System.Web.UI.WebControls.Menu> -Auflistung eines-Steuer Elements <xref:System.Web.UI.WebControls.MenuItem> oder der <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> -Auflistung eines-Objekts verwendet.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie dieser Konstruktor verwendet wird, um eine neue Instanz <xref:System.Web.UI.WebControls.MenuItem> der-Klasse zu erstellen. Das <xref:System.Web.UI.WebControls.MenuItem> -Objekt wird dann verwendet, um die Menü Elemente in einem <xref:System.Web.UI.WebControls.Menu> -Steuerelement dynamisch aufzufüllen.  
  
 [!code-aspx-csharp[MenuItemCtor5Param#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemCtor5Param/CS/menuitemctor5paramcs.aspx#1)]
 [!code-aspx-vb[MenuItemCtor5Param#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemCtor5Param/VB/menuitemctor5paramvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItemCollection" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
      </Docs>
    </Member>
    <Member MemberName="ChildItems">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemCollection ChildItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemCollection ChildItems" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChildItems As MenuItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItemCollection ^ ChildItems { System::Web::UI::WebControls::MenuItemCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChildItems : System.Web.UI.WebControls.MenuItemCollection" Usage="System.Web.UI.WebControls.MenuItem.ChildItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerDefaultProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein <see cref="T:System.Web.UI.WebControls.MenuItemCollection" />-Objekt ab, das die Untermenüelemente des aktuellen Menüelements enthält.</summary>
        <value>Eine <see cref="T:System.Web.UI.WebControls.MenuItemCollection" />, die die Untermenüelemente des aktuellen Menüelements enthält. Der Standardwert ist <see langword="null" />. Dies bedeutet, dass dieses Menüelement keine Untermenüelemente enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> die-Eigenschaft (Collection), um auf die unter Menü Elemente des aktuellen Menü Elements zuzugreifen, sofern vorhanden. Diese Auflistung enthält nur die Menü Elemente auf der nächsten Ebene. Wenn Sie auf Menü Elemente weiter unten in der Menüstruktur zugreifen <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> möchten, verwenden Sie die-Eigenschaft eines nachfolgenden Menü Elements. Wenn die <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> -Eigenschaft `null`ist, enthält das aktuelle Menü keine unter Menü Elemente.  
  
 Die <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> -Eigenschaft kann auch verwendet werden, um die unter Menü Elemente des aktuellen Menü Elements Programm gesteuert zu verwalten. Sie können Objekte aus der Auflistung hinzufügen, einfügen, entfernen <xref:System.Web.UI.WebControls.MenuItem> , abrufen und ändern. Alle Aktualisierungen der Auflistung werden automatisch im <xref:System.Web.UI.WebControls.Menu> Steuerelement wiedergegeben, wenn die Seite das nächste Mal aktualisiert wird.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> -Eigenschaft zum Durchlaufen der Menü Elemente <xref:System.Web.UI.WebControls.Menu> in einem-Steuerelement verwendet wird.  
  
 [!code-aspx-csharp[MenuItems#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItems/CS/menuitemscs.aspx#1)]
 [!code-aspx-vb[MenuItems#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItems/VB/menuitemsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItemCollection" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Parent" />
      </Docs>
    </Member>
    <Member MemberName="DataBound">
      <MemberSignature Language="C#" Value="public bool DataBound { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DataBound" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItem.DataBound" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataBound As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DataBound { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.DataBound : bool" Usage="System.Web.UI.WebControls.MenuItem.DataBound" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das Menüelement durch Datenbindung erstellt wurde.</summary>
        <value><see langword="true" />, wenn das Menüelement durch Datenbindung erstellt wurde, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.MenuItem.DataBound%2A> -Eigenschaft wird verwendet, um Programm gesteuert zu ermitteln, ob das Menü Element durch Datenbindung erstellt wurde.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="P:System.Web.UI.WebControls.BaseDataBoundControl.DataSource" />
        <altmember cref="P:System.Web.UI.WebControls.HierarchicalDataBoundControl.DataSourceID" />
        <altmember cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" />
      </Docs>
    </Member>
    <Member MemberName="DataItem">
      <MemberSignature Language="C#" Value="public object DataItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataItem" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItem.DataItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DataItem { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataItem : obj" Usage="System.Web.UI.WebControls.MenuItem.DataItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Datenelement ab, das an das Menüelement gebunden ist.</summary>
        <value>Ein <see cref="T:System.Object" />, das das Datenelement darstellt, das an das Menüelement gebunden ist. Der Standardwert ist <see langword="null" />. Dies bedeutet, dass das Menüelement nicht an ein Datenelement gebunden ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn das <xref:System.Web.UI.WebControls.Menu> Steuerelement an eine Datenquelle gebunden ist, z. <xref:System.Web.UI.WebControls.XmlDataSource> b. ein-Objekt, wird diese Eigenschaft auf das Datenelement festgelegt, das an dieses bestimmte Menü Element gebunden ist. Diese Eigenschaft wird häufig verwendet, um auf den Wert des Datenelements zuzugreifen.  
  
> [!NOTE]
>  Diese Eigenschaft ist nur verfügbar, nachdem die Datenbindung stattgefunden hat.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.XmlDataSource" />
      </Docs>
    </Member>
    <Member MemberName="DataPath">
      <MemberSignature Language="C#" Value="public string DataPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItem.DataPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataPath : string" Usage="System.Web.UI.WebControls.MenuItem.DataPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Pfad zu den Daten ab, die an das Menüelement gebunden sind.</summary>
        <value>Der Pfad zu den Daten, die an den Knoten gebunden sind. Dieser Wert stammt vom hierarchischen Datenquellen-Steuerelement, an das das <see cref="T:System.Web.UI.WebControls.Menu" />-Steuerelement gebunden ist. Der Standardwert ist eine leere Zeichenfolge („“).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der <xref:System.Web.UI.WebControls.MenuItem.DataPath%2A> -Eigenschafts Wert wird häufig verwendet, <xref:System.Web.UI.IHierarchicalDataSource.GetHierarchicalView%2A?displayProperty=nameWithType> wenn die-Methode aufgerufen wird, um den Pfad zu den Daten bereitzustellen, die an das aktuelle Menü Element gebunden sind. Diese Methode gibt dann ein <xref:System.Web.UI.HierarchicalDataSourceView?displayProperty=nameWithType> -Objekt zurück, das die Daten im angegebenen Pfad enthält.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.HierarchicalDataSourceView" />
        <altmember cref="M:System.Web.UI.IHierarchicalDataSource.GetHierarchicalView(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItem.Depth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Depth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Depth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Depth : int" Usage="System.Web.UI.WebControls.MenuItem.Depth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Ebene ab, auf der ein Menüelement angezeigt wird.</summary>
        <value>Die Ebene, auf der ein Menüelement angezeigt wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.MenuItem.Depth%2A> die-Eigenschaft, um die Tiefe des Menü Elements zu bestimmen. Die Tiefe gibt die Ebene an, auf der ein Menü Element angezeigt wird, und stellt die Anzahl der Hierarchieebenen zwischen dem aktuellen Menü Element und dem Stamm Menü Element dar. Ein Root-Menü Element hat z. b. eine Tiefe von 0. Ein unter Menü Element des Root-Menü Elements hat eine Tiefe von 1 usw.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.MenuItem.Depth%2A> -Eigenschaft verwendet wird, um die Tiefe eines Menü Elements zu bestimmen.  
  
 [!code-aspx-csharp[MenuItemDepth#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemDepth/CS/menuitemdepthcs.aspx#1)]
 [!code-aspx-vb[MenuItemDepth#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemDepth/VB/menuitemdepthvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticDisplayLevels" />
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItem.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Web.UI.WebControls.MenuItem.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Web.UI.WebControls.MenuItem" />-Objekt aktiviert ist, sodass das Element ein Popoutbild sowie vorhandene untergeordnete Menüelemente anzeigen kann, oder legt diesen Wert fest.</summary>
        <value><see langword="true" />, wenn das Menüelement aktiviert ist, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn diese Eigenschaft auf `false`festgelegt ist, wird das Menü Element deaktiviert, und es wird kein Popup Bild angezeigt, das angibt, dass untergeordnete Elemente angezeigt werden. Wenn diese Eigenschaft für `false` ein Menü Element auf festgelegt wird, wird das Menü Element im Grunde zum Ende dieses Knotens, wobei keine weiteren Ebenen von diesem Knoten angezeigt werden. Der Standardwert ist `true`sein.  
  
 Wenn das Menü Element untergeordnete Elemente anzeigen soll, aber nicht "klickbar" sein soll, verwenden Sie die <xref:System.Web.UI.WebControls.MenuItem.Selectable%2A> -Eigenschaft, und legen Sie Sie auf `false`fest.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie ein Menü Element <xref:System.Web.UI.WebControls.MenuItem.Enabled%2A> , bei dem `false` die-Eigenschaft auf festgelegt ist, und in einem Menü funktioniert.  
  
 [!code-aspx-csharp[MenuSelectableEnabled#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuSelectableEnabled/CS/menuselectableenabledcs.aspx#1)]
 [!code-aspx-vb[MenuSelectableEnabled#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuSelectableEnabled/VB/menuselectableenabledvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Selectable" />
      </Docs>
    </Member>
    <Member MemberName="ImageUrl">
      <MemberSignature Language="C#" Value="public string ImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItem.ImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ImageUrl : string with get, set" Usage="System.Web.UI.WebControls.MenuItem.ImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die URL zu einem Bild ab, das neben dem Text im Menüelement angezeigt wird, oder legt diese URL fest.</summary>
        <value>Die URL zu einem benutzerdefinierten Bild, das neben dem Text eines Menüelements angezeigt wird. Der Standardwert ist eine leere Zeichenfolge (""), die angibt, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A> die-Eigenschaft, um ein benutzerdefiniertes Bild für das aktuelle <xref:System.Web.UI.WebControls.Menu> Menü Element im-Steuerelement anzugeben. Dieses Bild wird neben dem Text des Menü Elements angezeigt und kann ein beliebiges Dateiformat aufweisen (JPG, GIF, BMP usw.), solange der Client Browser dieses Format unterstützt.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A> -Eigenschaft verwendet wird, um ein benutzerdefiniertes Bild neben dem Text eines Menü Elements anzuzeigen.  
  
 [!code-aspx-csharp[MenuItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItem/CS/menuitemcs.aspx#1)]
 [!code-aspx-vb[MenuItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItem/VB/menuitemvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.NavigateUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.PopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Target" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Text" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Value" />
      </Docs>
    </Member>
    <Member MemberName="NavigateUrl">
      <MemberSignature Language="C#" Value="public string NavigateUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NavigateUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItem.NavigateUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property NavigateUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NavigateUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NavigateUrl : string with get, set" Usage="System.Web.UI.WebControls.MenuItem.NavigateUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die URL ab, zu der beim Klicken auf das Menüelement navigiert werden soll, oder legt diese fest.</summary>
        <value>Die URL, zu der beim Klicken auf das Menüelement navigiert werden soll. Der Standardwert ist eine leere Zeichenfolge (""), die angibt, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein Menü Element kann sich in einem von zwei Modi befinden: Auswahlmodus oder Navigationsmodus. Standardmäßig befindet sich ein Menü Element im Auswahlmodus. Wenn Sie ein Menü Element in den Navigationsmodus versetzen möchten, legen Sie <xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A> die-Eigenschaft des Menü Elements auf einen anderen Wert als eine leere Zeichenfolge ("") fest.  
  
 Wenn sich ein Menü Element im Navigationsmodus befindet, werden alle Auswahl Ereignisse für dieses Menü Element deaktiviert. Wenn Sie im Navigationsmodus auf das Menü Element klicken, wird der Benutzer zur angegebenen URL. Optional können Sie die <xref:System.Web.UI.WebControls.MenuItem.Target%2A> -Eigenschaft festlegen, um das Fenster oder den Frame anzugeben, in dem der verknüpfte Inhalt angezeigt werden soll.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A> -Eigenschaft zum Angeben der URL verwendet wird, zu der navigiert werden soll, wenn der Benutzer auf ein Menü Element klickt.  
  
 [!code-aspx-csharp[MenuItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItem/CS/menuitemcs.aspx#1)]
 [!code-aspx-vb[MenuItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItem/VB/menuitemvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.PopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Target" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Text" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Value" />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItem Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItem Parent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItem.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As MenuItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItem ^ Parent { System::Web::UI::WebControls::MenuItem ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Web.UI.WebControls.MenuItem" Usage="System.Web.UI.WebControls.MenuItem.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das übergeordnete Menüelement des aktuellen Menüelements ab.</summary>
        <value>Ein <see cref="T:System.Web.UI.WebControls.MenuItem" />, das das übergeordnete Menüelement des aktuellen Menüelements darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.MenuItem.Parent%2A> die-Eigenschaft, um das übergeordnete Menü Element zu ermitteln oder auf seine Eigenschaften zuzugreifen.  
  
> [!NOTE]
>  Ein Root-Menü Element verfügt über kein übergeordnetes Menü Element.  
  
 Um auf die unter Menü Elemente des aktuellen Menü Elements zuzugreifen, verwenden Sie <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> die-Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.MenuItem.Parent%2A> -Eigenschaft für den Zugriff auf das übergeordnete Menü Element eines untergeordneten Menü Elements verwendet wird.  
  
 [!code-aspx-csharp[MenuItemParent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemParent/CS/menuitemparentcs.aspx#1)]
 [!code-aspx-vb[MenuItemParent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemParent/VB/menuitemparentvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
      </Docs>
    </Member>
    <Member MemberName="PopOutImageUrl">
      <MemberSignature Language="C#" Value="public string PopOutImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PopOutImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItem.PopOutImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property PopOutImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PopOutImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PopOutImageUrl : string with get, set" Usage="System.Web.UI.WebControls.MenuItem.PopOutImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die URL zu einem Bild ab oder legt eine URL zu einem Bild fest, das in einem Menüelement angezeigt wird und angibt, dass dieses Menüelement über ein dynamisches Untermenü verfügt.</summary>
        <value>Die URL zu einem Bild, das in einem Menüelement angezeigt wird und angibt, dass dieses Menüelement über ein dynamisches Untermenü verfügt. Der Standardwert ist eine leere Zeichenfolge ("") und gibt an, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn <xref:System.Web.UI.WebControls.MenuRenderingMode?displayProperty=nameWithType> auf `Default` <xref:System.Web.UI.WebControls.MenuRenderingMode?displayProperty=nameWithType> <xref:System.Web.Configuration.PagesSection.ControlRenderingCompatibilityVersion%2A?displayProperty=nameWithType> `4.0` festgelegt ist, oder wenn auf und auf oder höher festgelegt ist, hat diese Eigenschaft keine Auswirkung. `List` Verwenden Sie <xref:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage%2A?displayProperty=nameWithType> die-Eigenschaft <xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A?displayProperty=nameWithType> oder die-Eigenschaft anstelle dieser Eigenschaft.  
  
 Wenn <xref:System.Web.UI.WebControls.MenuRenderingMode?displayProperty=nameWithType> auf `Default` <xref:System.Web.UI.WebControls.MenuRenderingMode?displayProperty=nameWithType> <xref:System.Web.Configuration.PagesSection.ControlRenderingCompatibilityVersion%2A?displayProperty=nameWithType> festgelegt ist, oder wenn auf und `3.5` auf festgelegt ist, verwenden Sie diese Eigenschaft, um ein benutzerdefiniertes Bild anzugeben, das in einem Menü Element angezeigt wird, um anzugeben, dass das Menü Element über ein dynamisches Untermenü verfügt. `Table` Dieses Bild kann in einem beliebigen Dateiformat (JPG, GIF, BMP usw.) vorliegen, solange der Client Browser dieses Format unterstützt.  
  
> [!NOTE]
>  Durch Festlegen dieser Eigenschaft wird das von den <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A?displayProperty=nameWithType> Eigenschaften und <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A?displayProperty=nameWithType> angegebene Bild überschrieben.  
  
 Sie können dieses Bild auch in einem statischen Menü deaktivieren, indem Sie diese Eigenschaft auf eine leere Zeichenfolge festlegen <xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A> und die `false`-Eigenschaft auf festlegen. Auf ähnliche Weise können Sie dieses Bild in einem dynamischen Menü deaktivieren, indem Sie diese Eigenschaft auf eine leere Zeichenfolge <xref:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage%2A> festlegen und `false`die-Eigenschaft auf festlegen.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.MenuItem.PopOutImageUrl%2A> -Eigenschaft verwendet wird, um ein benutzerdefiniertes Bild anzugeben, das in einem Menü Element angezeigt wird, wenn das Menü Element über ein dynamisches Untermenü verfügt.  
  
 [!code-aspx-csharp[MenuItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItem/CS/menuitemcs.aspx#1)]
 [!code-aspx-vb[MenuItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItem/VB/menuitemvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.NavigateUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Target" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Text" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Value" />
      </Docs>
    </Member>
    <Member MemberName="Selectable">
      <MemberSignature Language="C#" Value="public bool Selectable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Selectable" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItem.Selectable" />
      <MemberSignature Language="VB.NET" Value="Public Property Selectable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Selectable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Selectable : bool with get, set" Usage="System.Web.UI.WebControls.MenuItem.Selectable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Web.UI.WebControls.MenuItem" />-Objekt ausgewählt werden kann oder ob darauf geklickt werden kann, oder legt diesen Wert fest.</summary>
        <value><see langword="true" />, wenn das Menüelement ausgewählt werden kann, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn diese Eigenschaft für ein Menü `false` Element auf festgelegt ist, wird keine Aktion ausgeführt, wenn auf das Menü Element geklickt wird (ausgewählt). Das Popup Bild, das die untergeordneten Menü Elemente für das Menü Element anzeigt, wird immer noch angezeigt und ist verfügbar.  
  
 Wenn Sie nicht möchten, dass untergeordnete Menü Elemente für ein Menü Element angezeigt werden, legen <xref:System.Web.UI.WebControls.MenuItem.Enabled%2A> Sie die `false`-Eigenschaft auf fest.  
  
 <xref:System.Web.UI.WebControls.MenuItem.Selectable%2A>gilt nur für Menü Elemente, die ausgewählt werden können. Dies ist sinnvoll, wenn auf ein Menü Element zurück gepostet wird und dieses Element im ausgewählten Zustand festgelegt wird. Beachten Sie, dass ein Menü Element, das nicht ausgewählt werden kann, weiterhin als Link formatiert ist. Dies ist aus Gründen der Barrierefreiheit, damit das Menü Element eine Aktion auslösen kann. Außerdem kann ein Menü Element, auch wenn es nicht ausgewählt werden kann, untergeordnete Menü Elemente aufweisen, die ausgewählt oder angezeigt werden müssen.  
  
 Wenn Sie verhindern möchten, dass ein Benutzer auf ein Menü Element klickt, führen Sie einen der folgenden Schritte aus:  
  
-   Legen Sie nicht <xref:System.Web.UI.WebControls.MenuItemBinding.NavigateUrl%2A> fest, <xref:System.Web.UI.WebControls.MenuItem.Selectable%2A> und `false`legen Sie auf fest.  
  
-   Legen Sie die- <xref:System.Web.UI.WebControls.MenuItem.Enabled%2A> Eigenschaft des Menü Elements auf `false`fest.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie ein Menü Element <xref:System.Web.UI.WebControls.MenuItem.Selectable%2A> , bei dem `false` die-Eigenschaft auf festgelegt ist, und in einem Menü funktioniert.  
  
 [!code-aspx-csharp[MenuSelectableEnabled#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuSelectableEnabled/CS/menuselectableenabledcs.aspx#1)]
 [!code-aspx-vb[MenuSelectableEnabled#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuSelectableEnabled/VB/menuselectableenabledvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Enabled" />
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public bool Selected { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Selected" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItem.Selected" />
      <MemberSignature Language="VB.NET" Value="Public Property Selected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Selected { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Selected : bool with get, set" Usage="System.Web.UI.WebControls.MenuItem.Selected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das aktuelle Menüelement in einem <see cref="T:System.Web.UI.WebControls.Menu" />-Steuerelement ausgewählt ist, oder legt diesen Wert fest.</summary>
        <value><see langword="true" />, um anzugeben, dass das aktuelle Menüelement in einem <see cref="T:System.Web.UI.WebControls.Menu" />-Steuerelement ausgewählt ist, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.MenuItem.Selected%2A> die-Eigenschaft, um anzugeben oder zu bestimmen, ob das aktuelle Menü Element ausgewählt ist.  
  
> [!NOTE]
>  Obwohl die-Eigenschaft verwendet werden kann, um zu bestimmen, ob ein Menü Element ausgewählt ist, wird die <xref:System.Web.UI.WebControls.Menu.SelectedItem%2A> -Eigenschaft häufiger verwendet.  
  
 Im <xref:System.Web.UI.WebControls.Menu> -Steuerelement kann jeweils nur ein Menü Element ausgewählt werden.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.MenuItem.Selected%2A> -Eigenschaft verwendet wird, um ein bestimmtes Menü <xref:System.Web.UI.WebControls.Menu> Element in einem-Steuerelement auszuwählen, wenn die Seite zum ersten Mal geladen wird. Damit dieses Beispiel ordnungsgemäß funktioniert, müssen Sie die Beispiel Daten der Site Map unten in eine Datei mit dem Namen "Web. Sitemap" kopieren.  
  
 [!code-aspx-csharp[MenuItemSelected#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemSelected/CS/menuitemselectedcs.aspx#1)]
 [!code-aspx-vb[MenuItemSelected#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemSelected/VB/menuitemselectedvb.aspx#1)]  
  
 Im folgenden finden Sie Beispiele für Site Übersichts Daten für das vorherige Beispiel.  
  
 `<siteMap>`  
  
 `<siteMapNode url="~\Home.aspx"`  
  
 `title="Home"`  
  
 `description="Home">`  
  
 `<siteMapNode url="~\Music.aspx"`  
  
 `title="Music"`  
  
 `description="Music">`  
  
 `<siteMapNode url="~\Classical.aspx"`  
  
 `title="Classical"`  
  
 `description="Classical"/>`  
  
 `<siteMapNode url="~\Rock.aspx"`  
  
 `title="Rock"`  
  
 `description="Rock"/>`  
  
 `<siteMapNode url="~\Jazz.aspx"`  
  
 `title="Jazz"`  
  
 `description="Jazz"/>`  
  
 `</siteMapNode>`  
  
 `<siteMapNode url="~\Movies.aspx"`  
  
 `title="Movies"`  
  
 `description="Movies">`  
  
 `<siteMapNode url="~\Action.aspx"`  
  
 `title="Action"`  
  
 `description="Action"/>`  
  
 `<siteMapNode url="~\Drama.aspx"`  
  
 `title="Drama"`  
  
 `description="Drama"/>`  
  
 `<siteMapNode url="~\Musical.aspx"`  
  
 `title="Musical"`  
  
 `description="Musical"/>`  
  
 `</siteMapNode>`  
  
 `</siteMapNode>`  
  
 `</siteMap>`  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.SelectedItem" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.SelectedValue" />
      </Docs>
    </Member>
    <Member MemberName="SeparatorImageUrl">
      <MemberSignature Language="C#" Value="public string SeparatorImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SeparatorImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property SeparatorImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SeparatorImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SeparatorImageUrl : string with get, set" Usage="System.Web.UI.WebControls.MenuItem.SeparatorImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine URL zu einem Bild ab oder legt die URL zu einem Bild fest, das am unteren Rand eines Menüelements angezeigt werden soll, um das Menüelement von anderen Menüelementen abzugrenzen.</summary>
        <value>Die URL zu einem Bild, das verwendet wird, um das aktuelle Menüelement von anderen Menüelementen abzugrenzen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl%2A> die-Eigenschaft, um ein benutzerdefiniertes Bild (normalerweise eine Zeile) anzugeben, das am unteren Rand eines Menü Elements angezeigt wird, um es von anderen Menü Elementen zu trennen. Dieses Bild kann in einem beliebigen Dateiformat (JPG, GIF, BMP usw.) vorliegen, solange der Client Browser dieses Format unterstützt.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl%2A> -Eigenschaft verwendet wird, um ein benutzerdefiniertes Bild anzugeben, das am unteren Rand eines Menü Elements angezeigt wird, um <xref:System.Web.UI.WebControls.Menu> es von anderen Menü Elementen in einem-Steuerelement zu trennen.  
  
 [!code-aspx-csharp[MenuItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItem/CS/menuitemcs.aspx#1)]
 [!code-aspx-vb[MenuItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItem/VB/menuitemvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.NavigateUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.PopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Text" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Target" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Value" />
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItem.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt eine Kopie des aktuellen <see cref="T:System.Web.UI.WebControls.MenuItem" />-Objekts.</summary>
        <returns>Ein <see cref="T:System.Object" />, das eine Kopie des <see cref="T:System.Web.UI.WebControls.MenuItem" /> darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.MenuItem.System%23ICloneable%23Clone%2A> -Methode wird von der <xref:System.Web.UI.WebControls.MenuItem> -Klasse verwendet, um eine Kopie von sich selbst zu erstellen.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ICloneable.Clone" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.IsTrackingViewState">
      <MemberSignature Language="C#" Value="bool System.Web.UI.IStateManager.IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItem.System#Web#UI#IStateManager#IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsTrackingViewState As Boolean Implements IStateManager.IsTrackingViewState" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Web::UI::IStateManager::IsTrackingViewState { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Web.UI.WebControls.MenuItem" />-Objekt Änderungen des Ansichtszustands speichert.</summary>
        <value><see langword="true" />, wenn das Steuerelement für das Speichern seines Zustands markiert ist, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In der Regel sollten Sie den <xref:System.Web.UI.WebControls.MenuItem.System%23Web%23UI%23IStateManager%23IsTrackingViewState%2A> -Member verwenden, um <xref:System.Web.UI.WebControls.MenuItem> zu bestimmen, ob ein-Objektänderungen des Ansichts Zustands nachverfolgt.  
  
 Der <xref:System.Web.UI.WebControls.MenuItem.System%23Web%23UI%23IStateManager%23IsTrackingViewState%2A> Member ist eine explizite Schnittstellenmember-Implementierung. Sie kann nur verwendet werden, wenn <xref:System.Web.UI.WebControls.MenuItem> eine-Instanz in eine <xref:System.Web.UI.IStateManager> -Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ViewState" />
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.Control.SaveViewState" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.LoadViewState">
      <MemberSignature Language="C#" Value="void IStateManager.LoadViewState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.LoadViewState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItem.System#Web#UI#IStateManager#LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub LoadViewState (state As Object) Implements IStateManager.LoadViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.LoadViewState(System::Object ^ state) = System::Web::UI::IStateManager::LoadViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">Ein <see cref="T:System.Object" />, das die gespeicherten Ansichtszustandswerte enthält.</param>
        <summary>Lädt den zuvor gespeicherten Ansichtszustand des Menüelements.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="T:System.Web.UI.StateItem" />
        <related type="Article" href="https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)">ASP.net State Management (Übersicht)</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.SaveViewState">
      <MemberSignature Language="C#" Value="object IStateManager.SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Web.UI.IStateManager.SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItem.System#Web#UI#IStateManager#SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Function SaveViewState () As Object Implements IStateManager.SaveViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Web.UI.IStateManager.SaveViewState() = System::Web::UI::IStateManager::SaveViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Speichert die Änderungen am Ansichtszustand für ein <see cref="T:System.Object" />.</summary>
        <returns>Das <see cref="T:System.Object" />, das die Änderungen am Ansichtszustand enthält.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="T:System.Web.UI.StateItem" />
        <related type="Article" href="https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)">ASP.net State Management (Übersicht)</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.TrackViewState">
      <MemberSignature Language="C#" Value="void IStateManager.TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItem.System#Web#UI#IStateManager#TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Sub TrackViewState () Implements IStateManager.TrackViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.TrackViewState() = System::Web::UI::IStateManager::TrackViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Weist das <see cref="T:System.Web.UI.WebControls.MenuItem" />-Objekt an, Änderungen am Ansichtszustand nachzuverfolgen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nachdem diese Methode für ein Server Steuerelement aufgerufen wurde, gibt <xref:System.Web.UI.Control.IsTrackingViewState%2A> die- `true`Eigenschaft zurück.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="T:System.Web.UI.StateItem" />
        <related type="Article" href="https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)">ASP.net State Management (Übersicht)</related>
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public string Target { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Target" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItem.Target" />
      <MemberSignature Language="VB.NET" Value="Public Property Target As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Target { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Target : string with get, set" Usage="System.Web.UI.WebControls.MenuItem.Target" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Zielfenster oder den Zielframe ab, in dem die einem Menüeelement zugeordneten Webseiteninhalte angezeigt werden sollen, oder legt dieses Zielfenster bzw. den Zielframe fest.</summary>
        <value>Das Zielfenster oder der Zielframe, in dem der verknüpfte Webseiteninhalt angezeigt werden soll. Der Standardwert ist eine leere Zeichenfolge (""), die das Fenster oder den Frame mit dem Fokus aktualisiert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.MenuItem.Target%2A> die-Eigenschaft, um das Fenster oder den Frame anzugeben, in dem der mit einem Menü Element verknüpfte Webinhalt angezeigt werden soll, wenn auf dieses Menü Element geklickt wird. Werte müssen mit einem Buchstaben aus dem Bereich von A bis Z (ohne Berücksichtigung der Groß- und Kleinschreibung) beginnen, mit Ausnahme der in folgender Tabelle aufgeführten speziellen Werte, die mit einem Unterstrich beginnen: Beachten Sie, dass <xref:System.Web.UI.WebControls.Menu.Target%2A> <xref:System.Web.UI.WebControls.Menu> durch das Festlegen dieser Eigenschaft die-Eigenschaft des-Steuer Elements für dieses Menü Element überschrieben wird.  
  
|Zielwert|Beschreibung|  
|------------------|-----------------|  
|`_blank`|Stellt den Inhalt in einem neuen Fenster ohne Frames dar.|  
|`_parent`|Stellt den Inhalt im unmittelbar übergeordneten Frameset dar.|  
|`_search`|Gibt den Inhalt im Suchbereich wieder.|  
|`_self`|Stellt den Inhalt in dem Frame dar, der den Fokus besitzt.|  
|`_top`|Stellt den Inhalt im gesamten Fenster ohne Frames dar.|  
  
> [!NOTE]
>  Sie können der Browserdokumentation entnehmen, ob der `_search`-Wert unterstützt wird. Beispielsweise unterstützen Microsoft Internet Explorer 5.0 und höhere Versionen den `_search`-Zielwert.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.MenuItem.Target%2A> -Eigenschaft wird `target` als-Attribut gerendert. Das `target` -Attribut für Anker Elemente ist in der XHTML 1,1 Strict-Dokumenttyp Definition nicht zulässig. Legen Sie die <xref:System.Web.UI.WebControls.MenuItem.Target%2A> -Eigenschaft nicht fest, wenn die gerenderte Ausgabe <xref:System.Web.UI.WebControls.HyperLink> für XHTML 1,1-kompatibel sein muss. Weitere Informationen finden Sie unter [XHTML-Standards in Visual Studio und ASP.net](https://msdn.microsoft.com/library/1b78d416-66bb-43a5-ac77-c703aab55b97).  
>   
>  Wenn Sie barrierefreie Webseiten erstellen, wird dringend empfohlen, die Verwendung der <xref:System.Web.UI.WebControls.MenuItem.Target%2A> -Eigenschaft für ein anderes Fenster zu vermeiden. Weitere Informationen finden Sie unter [Barrierefreiheit in Visual Studio und ASP.NET](https://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13).  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.MenuItem.Target%2A> -Eigenschaft verwendet wird, um ein Fenster oder einen Frame anzugeben, in dem der mit einem Menü Element verknüpfte Webinhalt angezeigt werden soll, wenn auf dieses Menü Element geklickt wird.  
  
 [!code-aspx-csharp[MenuItemTarget#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemTarget/CS/menuitemtargetcs.aspx#1)]
 [!code-aspx-vb[MenuItemTarget#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemTarget/VB/menuitemtargetvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.NavigateUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.PopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Target" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Text" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Value" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItem.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Web.UI.WebControls.MenuItem.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Text ab oder legt den Text fest, der in einem <see cref="T:System.Web.UI.WebControls.Menu" />-Steuerelement für das Menüelement angezeigt wird.</summary>
        <value>Der für das Menüelement in einem <see cref="T:System.Web.UI.WebControls.Menu" />-Steuerelement angezeigte Text. Der Standardwert ist eine leere Zeichenfolge ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.MenuItem.Text%2A> die-Eigenschaft, um den Text anzugeben oder zu bestimmen, der für das Menü <xref:System.Web.UI.WebControls.Menu> Element im-Steuerelement angezeigt wird.  
  
> [!NOTE]
>  Wenn die <xref:System.Web.UI.WebControls.MenuItem.Text%2A> -Eigenschaft `null`enthält, `get` gibt der-Accessor den Wert <xref:System.Web.UI.WebControls.MenuItem.Value%2A> der-Eigenschaft zurück. Wenn die <xref:System.Web.UI.WebControls.MenuItem.Value%2A> Eigenschaft wiederum enthält `null`, <xref:System.String.Empty> wird zurückgegeben.  
  
 Der Wert dieser Eigenschaft, wenn festgelegt, kann mithilfe eines Designers Tools automatisch zu einer Ressourcendatei gespeichert werden. Weitere Informationen finden Sie unter <xref:System.ComponentModel.LocalizableAttribute> und [Globalisierung und Lokalisierung](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.MenuItem.Text%2A> -Eigenschaft verwendet wird, um den Text anzugeben, der in jedem <xref:System.Web.UI.WebControls.Menu> Menü Element in einem-Steuerelement angezeigt werden soll.  
  
 [!code-aspx-csharp[MenuItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItem/CS/menuitemcs.aspx#1)]
 [!code-aspx-vb[MenuItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItem/VB/menuitemvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.NavigateUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.PopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Target" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Value" />
      </Docs>
    </Member>
    <Member MemberName="ToolTip">
      <MemberSignature Language="C#" Value="public string ToolTip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolTip" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItem.ToolTip" />
      <MemberSignature Language="VB.NET" Value="Public Property ToolTip As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ToolTip { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ToolTip : string with get, set" Usage="System.Web.UI.WebControls.MenuItem.ToolTip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den QuickInfo-Text für das Menüelement ab oder legt diesen fest.</summary>
        <value>Der QuickInfo-Text für das Menüelement. Der Standardwert ist eine leere Zeichenfolge ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.MenuItem.ToolTip%2A> die-Eigenschaft, um den QuickInfo-Text für das Menü Element anzugeben. Der QuickInfo-Text wird angezeigt, wenn sich der Mauszeiger über dem Menü Element befindet.  
  
 Der Wert dieser Eigenschaft, wenn festgelegt, kann mithilfe eines Designers Tools automatisch zu einer Ressourcendatei gespeichert werden. Weitere Informationen finden Sie unter <xref:System.ComponentModel.LocalizableAttribute> und [Globalisierung und Lokalisierung](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.MenuItem.ToolTip%2A> -Eigenschaft verwendet wird, um eine QuickInfo für jedes <xref:System.Web.UI.WebControls.Menu> Menü Element in einem-Steuerelement anzugeben.  
  
 [!code-aspx-csharp[MenuItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItem/CS/menuitemcs.aspx#1)]
 [!code-aspx-vb[MenuItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItem/VB/menuitemvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.NavigateUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.PopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Target" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Text" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.ToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Value" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItem.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : string with get, set" Usage="System.Web.UI.WebControls.MenuItem.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen nicht angezeigten Wert ab, mit dem zusätzliche Daten zum Menüelement gespeichert werden (z. B. Daten zum Behandeln eines Postbackereignisses), oder legt diesen Wert fest.</summary>
        <value>Ergänzende Daten zum Menüelement, die nicht angezeigt werden. Der Standardwert ist eine leere Zeichenfolge („“).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.MenuItem.Value%2A> -Eigenschaft wird verwendet, um <xref:System.Web.UI.WebControls.MenuItem.Text%2A> die-Eigenschaft zu ergänzen, indem alle dem Menü Element zugeordneten zusätzlichen Daten gespeichert werden. Dieser Wert wird im-Steuerelement nicht angezeigt und wird häufig zum Speichern von Daten für die Behandlung von Post Back Ereignissen verwendet.  
  
> [!NOTE]
>  Wenn die <xref:System.Web.UI.WebControls.MenuItem.Value%2A> -Eigenschaft `null`enthält, `get` gibt der-Accessor den Wert <xref:System.Web.UI.WebControls.MenuItem.Text%2A> der-Eigenschaft zurück. Wenn die <xref:System.Web.UI.WebControls.MenuItem.Text%2A> Eigenschaft wiederum enthält `null`, <xref:System.String.Empty> wird zurückgegeben.  
  
 Der Wert der <xref:System.Web.UI.WebControls.MenuItem.Value%2A> -Eigenschaft wird auch verwendet, wenn der in der <xref:System.Web.UI.WebControls.MenuItem.ValuePath%2A> -Eigenschaft angegebene Wertpfad generiert wird. Ein Wertpfad ist eine durch Trennzeichen getrennte Liste von Menü Element Werten, die einen Pfad vom Stamm Menü Element zum aktuellen Menü Element bilden. Der Wertpfad wird verwendet, um die Position eines Menü Elements in einem <xref:System.Web.UI.WebControls.Menu> -Steuerelement anzugeben.  
  
> [!NOTE]
>  Menü Elemente auf der gleichen Menü Ebene müssen jeweils einen eindeutigen Wert für die <xref:System.Web.UI.WebControls.MenuItem.Value%2A> -Eigenschaft aufweisen. das <xref:System.Web.UI.WebControls.Menu> Steuerelement kann nicht zwischen verschiedenen Menü Elementen auf derselben Ebene unterscheiden, die denselben Wert aufweisen.  
  
 Der Wert dieser Eigenschaft, wenn festgelegt, kann mithilfe eines Designers Tools automatisch zu einer Ressourcendatei gespeichert werden. Weitere Informationen finden Sie unter <xref:System.ComponentModel.LocalizableAttribute> und [Globalisierung und Lokalisierung](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.MenuItem.Value%2A> für ein Menü Element und dessen übergeordnetes Element angezeigt wird, wenn der Benutzer ein Menü Element auswählt.  
  
 [!code-aspx-csharp[MenuItemValue#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemValue/CS/menuitemvaluecs.aspx#1)]
 [!code-aspx-vb[MenuItemValue#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemValue/VB/menuitemvaluevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.NavigateUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.PopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Target" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Text" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ToolTip" />
      </Docs>
    </Member>
    <Member MemberName="ValuePath">
      <MemberSignature Language="C#" Value="public string ValuePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValuePath" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItem.ValuePath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValuePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ValuePath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValuePath : string" Usage="System.Web.UI.WebControls.MenuItem.ValuePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Pfad vom Stammmenüelement zum aktuellen Menüelement ab.</summary>
        <value>Eine durch ein Trennzeichen getrennte Liste mit Menüelementwerten, die einen Pfad vom Stammmenüelement zum aktuellen Menüelement darstellen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.MenuItem.ValuePath%2A> -Eigenschaft enthält eine durch Trennzeichen getrennte Liste von Menü Element Werten, die einen Pfad vom Stamm Menü Element zum aktuellen Menü Element bilden. Der Wertpfad wird verwendet, um die Position eines Menü Elements in einem <xref:System.Web.UI.WebControls.Menu> -Steuerelement anzugeben. Sie können das Trennzeichen, das zum Trennen der Menü Element Werte verwendet wird, mithilfe der <xref:System.Web.UI.WebControls.Menu.PathSeparator%2A> -Eigenschaft angeben. Dieser Wert wird häufig verwendet, wenn die Liste für die einzelnen Werte verarbeitet oder als Argument an die <xref:System.Web.UI.WebControls.Menu.FindItem%2A> -Methode <xref:System.Web.UI.WebControls.TreeView> der-Klasse übergeben wird. Abhängig von dem im <xref:System.Web.UI.WebControls.Menu> -Steuerelement angezeigten Wert muss das Trennzeichen möglicherweise geändert werden, um Konflikte zu vermeiden. Wenn Sie z. b. das Trennzeichen auf ein Komma setzen, sollte der angezeigte Wert keine Kommas enthalten. Andernfalls können Sie die <xref:System.Web.UI.WebControls.MenuItem.ValuePath%2A> Eigenschaft nicht genau analysieren.  
  
> [!NOTE]
>  Die Werte der <xref:System.Web.UI.WebControls.MenuItem.Value%2A> -Eigenschaft jedes Menü Elements vom Stamm Menü Element zum aktuellen Menü Element werden verwendet, um den Wert Pfad zu generieren. Menü Elemente auf der gleichen Menü Ebene müssen jeweils einen eindeutigen Wert für die <xref:System.Web.UI.WebControls.MenuItem.Value%2A> -Eigenschaft aufweisen. das <xref:System.Web.UI.WebControls.Menu> Steuerelement kann nicht zwischen verschiedenen Menü Elementen auf derselben Ebene unterscheiden, die denselben Wert aufweisen.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie Sie <xref:System.Web.UI.WebControls.MenuItem.ValuePath%2A> den Wert für die-Eigenschaft der einzelnen Menü Element Werte analysieren.  
  
 [!code-aspx-csharp[MenuItemValuePath#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemValuePath/CS/menuitemvaluepathcs.aspx#1)]
 [!code-aspx-vb[MenuItemValuePath#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemValuePath/VB/menuitemvaluepathvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.PathSeparator" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.FindItem(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>
