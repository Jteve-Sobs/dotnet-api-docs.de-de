<Type Name="TreeView" FullName="System.Web.UI.WebControls.TreeView">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a2131d9cf7e3f6ed711c19cbdd23cf8c5c05ca76" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36379406" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TreeView : System.Web.UI.WebControls.HierarchicalDataBoundControl, System.Web.UI.ICallbackEventHandler, System.Web.UI.IPostBackDataHandler, System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TreeView extends System.Web.UI.WebControls.HierarchicalDataBoundControl implements class System.Web.UI.ICallbackEventHandler, class System.Web.UI.IPostBackDataHandler, class System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.TreeView" />
  <TypeSignature Language="VB.NET" Value="Public Class TreeView&#xA;Inherits HierarchicalDataBoundControl&#xA;Implements ICallbackEventHandler, IPostBackDataHandler, IPostBackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class TreeView : System::Web::UI::WebControls::HierarchicalDataBoundControl, System::Web::UI::ICallbackEventHandler, System::Web::UI::IPostBackDataHandler, System::Web::UI::IPostBackEventHandler" />
  <TypeSignature Language="F#" Value="type TreeView = class&#xA;    inherit HierarchicalDataBoundControl&#xA;    interface IPostBackEventHandler&#xA;    interface IPostBackDataHandler&#xA;    interface ICallbackEventHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.HierarchicalDataBoundControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.ICallbackEventHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackDataHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("SelectedNodeChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.TreeViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlValueProperty("SelectedValue")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Zeigt hierarchische Daten, z. B. ein Inhaltsverzeichnis, in einer Struktur an.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In diesem Thema:  
  
-   [Introduction (Einführung)](#introduction)  
  
-   [Knoten](#nodes)  
  
-   [Statische Daten](#static_data)  
  
-   [Binden an Daten](#binding_to_data)  
  
-   [Auffüllen von dynamischen Knoten](#dynamic_node_population)  
  
-   [Anpassen der Benutzeroberfläche](#customizing_the_user_interface)  
  
-   [Ereignisse](#events)  
  
-   [Durchführen eines Bildlaufs](#scrolling)  
  
-   [Barrierefreiheit](#accessibility)  
  
-   [Deklarationssyntax](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Einführung  
 Die <xref:System.Web.UI.WebControls.TreeView> Steuerelement wird verwendet, um hierarchische Daten, z. B. eine Tabelle mit Inhalt oder das Verzeichnis in einer Baumstruktur angezeigt und unterstützt die folgenden Funktionen:  
  
-   Daten, die Bindung, können die Knoten des Steuerelements XML, tabellarische oder relationalen Daten gebunden werden.  
  
-   Websitenavigation durch die Integration mit der <xref:System.Web.UI.WebControls.SiteMapDataSource> Steuerelement.  
  
-   Knotentext, der als nur-Text oder Hyperlinks angezeigt werden kann.  
  
-   Programmgesteuerter Zugriff auf die <xref:System.Web.UI.WebControls.TreeView> Objektmodell erstellen Strukturen, Knoten zu füllen, Eigenschaften und so weiter dynamisch festgelegt werden.  
  
-   Die clientseitige Knoten Auffüllung (auf unterstützten Browser).  
  
-   Die Fähigkeit, das Kontrollkästchen neben jedem Knoten angezeigt.  
  
-   Anpassbare Darstellung durch Designs, benutzerdefinierte Bilder und Stile.  
  
    > [!NOTE]
    >  Die <xref:System.Web.UI.WebControls.TreeView> Steuerelement wurde entwickelt, die innerhalb einer <xref:System.Web.UI.UpdatePanel> steuern nur, wenn <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A> auf festgelegt ist `true`. <xref:System.Web.UI.UpdatePanel> Steuerelemente werden verwendet, um die ausgewählten Bereiche einer Seite statt zu aktualisieren die gesamte Seite mit einem Postback zu aktualisieren. Weitere Informationen finden Sie unter [Übersicht über das Steuerelement UpdatePanel](http://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a) und [Teilrendering von Seiten Rendering Overview](http://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49).  
  
<a name="nodes"></a>   
## <a name="nodes"></a>Knoten  
 Die <xref:System.Web.UI.WebControls.TreeView> Steuerelement besteht aus Knoten. Jeder Eintrag in der Struktur wird als Knoten bezeichnet und wird durch dargestellt eine <xref:System.Web.UI.WebControls.TreeNode> Objekt. Knotentypen sind folgendermaßen definiert:  
  
-   Wird aufgerufen, ein Knoten, der andere Knoten enthält eine *übergeordneten Knoten*.  
  
-   Heißt der Knoten, der von einem anderen Knoten enthalten ist ein *untergeordneter Knoten*.  
  
-   Wird aufgerufen, ein Knoten, der keine untergeordneten Elemente besitzt eine *Endknoten*.  
  
-   Der Knoten, die nicht von einem anderen Knoten enthalten ist, sondern wird von allen anderen Knoten übergeordnet ist die *Stammknoten*.  
  
 Ein Knoten kann einem übergeordneten und untergeordneten jedoch Stamm, übergeordnetes Element sein, und Blattknoten schließen sich gegenseitig aus. Mehrere visual und Verhaltenseigenschaften Eigenschaften der Knoten werden durch gibt an, ob ein Knoten ein Stamm, untergeordnete oder Blattknoten wird bestimmt.  
  
 Obwohl eine typische Struktur nur einen Stammknoten, hat die <xref:System.Web.UI.WebControls.TreeView> Steuerelement ermöglicht es Ihnen, mehrere Stammknoten der Struktur hinzufügen. Dies ist hilfreich, wenn angeboten ohne Anzeige von einem einzelnen Stammknoten, wie eine Liste der Produktkategorien angezeigt werden soll.  
  
 Jeder Knoten verfügt über eine <xref:System.Web.UI.WebControls.TreeNode.Text%2A> Eigenschaft und eine <xref:System.Web.UI.WebControls.TreeNode.Value%2A> Eigenschaft. Der Wert von der <xref:System.Web.UI.WebControls.TreeNode.Text%2A> Eigenschaft wird angezeigt, der <xref:System.Web.UI.WebControls.TreeView>, während die <xref:System.Web.UI.WebControls.TreeNode.Value%2A> Eigenschaft wird verwendet, um zusätzlichen Daten über den Knoten, z. B. Daten zu speichern, die an das Postbackereignis übergeben wird, die dem Knoten zugeordnet ist.  
  
 Ein Knoten kann in einem von zwei Modi: den Mehrfachauswahlmodus aufweist und Navigationsmodus. Standardmäßig ist ein Knoten in den Mehrfachauswahlmodus aufweist. Um einen Knoten in den Navigationsmodus zu versetzen, legen Sie die <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> -Eigenschaft für den Knoten, um einen anderen Wert als eine leere Zeichenfolge (""). Um einen Knoten in den Auswahlmodus versetzen möchten, legen Sie die <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> -Eigenschaft für den Knoten, um eine leere Zeichenfolge ("").  
  
> [!NOTE]
>  Einige Internetbrowser haben eine Einschränkung, die die Leistung beeinträchtigen kann die <xref:System.Web.UI.WebControls.TreeView> Steuerelement. Microsoft Internet Explorer 6.0 hat beispielsweise eine URL-Zeichen-Grenze der 2067 Zeichen, die es zurückgesendet. Wenn die Anzahl der Zeichen in einer URL eines Knotens größer als diese Zahl ist, Erweitern des Knotens fehl, und keine Ausnahme ausgelöst wird.  
  
<a name="static_data"></a>   
## <a name="static-data"></a>Statische Daten  
 Das einfachste Datenmodell von der <xref:System.Web.UI.WebControls.TreeView> Steuerelement sind statische Daten. Zum Anzeigen von statischer Daten verwenden deklarativen Syntax zuerst schachteln, öffnende und schließende `<Nodes>` zwischen dem Start- und Endtag des Tags der <xref:System.Web.UI.WebControls.TreeView> Steuerelement. Als Nächstes erstellen Sie die Struktur von Schachtelung `<asp:TreeNode>` Elemente zwischen den öffnenden und schließenden `<Nodes>` Tags. Jede `<asp:TreeNode>` Element stellt einen Knoten in der Struktur und ordnet einen <xref:System.Web.UI.WebControls.TreeNode> Objekt. Sie können die Eigenschaften der einzelnen Knoten festlegen, indem Sie die Attribute festlegen seiner `<asp:TreeNode>` Element. Schachteln Sie zum Erstellen von untergeordneten Knoten zusätzliche `<asp:TreeNode>` Elemente zwischen den öffnenden und schließenden `<asp:TreeNode>` Tags des übergeordneten Knotens.  
  
<a name="binding_to_data"></a>   
## <a name="binding-to-data"></a>Binden an Daten  
 Die <xref:System.Web.UI.WebControls.TreeView> Steuerelement auch an Daten gebunden werden kann. Können Sie eine der beiden Methoden zum Binden der <xref:System.Web.UI.WebControls.TreeView> Steuerelement in den entsprechenden Datenquellentyp:  
  
-   Die <xref:System.Web.UI.WebControls.TreeView> Steuerelement können Datenquellen-Steuerelements, das implementiert die <xref:System.Web.UI.IHierarchicalDataSource> Schnittstelle, wie ein <xref:System.Web.UI.WebControls.XmlDataSource> Steuerelement oder ein <xref:System.Web.UI.WebControls.SiteMapDataSource> Steuerelement. Legen Sie die Bindung an ein Datenquellen-Steuerelement die <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> Eigenschaft von der <xref:System.Web.UI.WebControls.TreeView> die Steuerung an die <xref:System.Web.UI.Control.ID%2A> Wert des Datenquellen-Steuerelements. Die <xref:System.Web.UI.WebControls.TreeView> Steuerelement automatisch an das angegebene Datenquellen-Steuerelement gebunden. Dies ist die bevorzugte Methode zum Binden an Daten.  
  
-   Die <xref:System.Web.UI.WebControls.TreeView> Steuerelement kann auch an gebunden werden ein <xref:System.Xml.XmlDocument> Objekt oder ein <xref:System.Data.DataSet> Objekt mit Beziehungen. Legen Sie zum Binden an eine dieser Datenquellen die <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> Eigenschaft der <xref:System.Web.UI.WebControls.TreeView> die Steuerung an die Datenquelle, und rufen Sie dann die <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> Methode.  
  
 Beim Binden an eine Datenquelle, in dem jedes Datenelement enthält mehrere Eigenschaften (z. B. ein XML-Element mit mehreren Attributen), eines Knotens zeigt den Wert an, die von zurückgegeben wird die `ToString` Methode des Datenelements in der Standardeinstellung. Im Fall einer XML-Element zeigt der Knoten der Elementname, die die zugrunde liegende Struktur der Struktur zeigt, aber ist andernfalls nicht sehr sinnvoll. Sie können einen Knoten für eine bestimmte Daten Item-Eigenschaft binden, indem Struktur Knoten Bindungen mit Angabe der <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> Auflistung. Die <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> Auflistung enthält `TreeNodeBinding` Objekten, definieren die Beziehung zwischen einem Datenelement und dem Knoten, die es gebunden ist. Sie können die Kriterien für die Bindung und die Datenelementeigenschaft so an den Knoten angeben. Weitere Informationen zu Struktur Knoten Bindungen, finden Sie unter <xref:System.Web.UI.WebControls.TreeNodeBinding>.  
  
> [!IMPORTANT]
>  Ein böswilliger Benutzer kann einen Rückruf Request erstellen und Abrufen von Daten für den Knoten des der <xref:System.Web.UI.WebControls.TreeView> Steuerelement, das der Entwickler der Seite nicht angezeigt wird. Aus diesem Grund muss die Sicherheit der Daten von der Datenquelle implementiert werden. Verwenden Sie nicht die <xref:System.Web.UI.WebControls.TreeView.MaxDataBindDepth%2A> Eigenschaft, um Daten auszublenden.  
  
<a name="dynamic_node_population"></a>   
## <a name="dynamic-node-population"></a>Auffüllen von dynamischen Knoten  
 Manchmal ist es nicht praktikabel ist, die Baumstruktur statisch zu definieren, da die Datenquelle zu viele Daten zurückgibt oder die anzuzeigenden Daten Informationen abhängig, die Sie zur Laufzeit abrufen. Aus diesem Grund die <xref:System.Web.UI.WebControls.TreeView> Steuerelement unterstützt dynamische Knoten Auffüllung. Wenn die <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> -Eigenschaft für einen Knoten auf festgelegt ist `true`, dieser Knoten wird aufgefüllt, zur Laufzeit, wenn der Knoten erweitert ist. Um einen Knoten dynamisch aufzufüllen, müssen Sie definieren eine Ereignisbehandlungsmethode, die enthält die Logik zum Auffüllen eines Knotens für die <xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate> Ereignis.  
  
 Browsern mit Unterstützung für Rückrufskripts können auch clientseitige Knoten Auffüllung nutzen. (Dies schließt Internet Explorer 5.5 und höher sowie einige andere Browser). Ermöglicht die clientseitige Knoten Auffüllung der <xref:System.Web.UI.WebControls.TreeView> -Steuerelement auffüllen, einen Knoten, die mit Clientskript, wenn Benutzer den Knoten zu erweitern, ohne dass einen Roundtrip zum Server. Weitere Informationen zum Auffüllen von Client-Side-Knoten, finden Sie unter <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>.  
  
<a name="customizing_the_user_interface"></a>   
## <a name="customizing-the-user-interface"></a>Anpassen der Benutzeroberfläche  
 Es gibt viele Methoden zum Anpassen der Darstellung der <xref:System.Web.UI.WebControls.TreeView> Steuerelement. Erstens können Sie einem anderen Format (z. B. Schriftart und Farbe) für jede der Knotentypen angeben.  
  
 Wenn Sie cascading Stylesheets (CSS) verwenden, um die Darstellung des Steuerelements anzupassen, verwenden Sie Inlineformate oder eine separate CSS-Datei, aber nicht beides. Mit Inlineformatvorlagen und eine separate CSS-Datei könnte unerwartete Ergebnisse verursachen. Weitere Informationen zur Verwendung von Stylesheets mit Steuerelementen finden Sie unter [-Webserversteuerelemente und CSS-Formatvorlagen](http://msdn.microsoft.com/library/782c2db6-fc9b-4243-8df9-a8ffe2f4cc42).  
  
 Die folgende Tabelle enthält die verfügbaren Knotenstile.  
  
|Knoten-Style-Eigenschaft|Beschreibung |  
|-------------------------|-----------------|  
|<xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>|Die Stileigenschaften für einen Knoten aus, wenn der Mauszeiger darauf positioniert ist.|  
|<xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>|Die Stileigenschaften für die Blattknoten.|  
|<xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>|Die Standardeinstellungen des Stil für einen Knoten.|  
|<xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>|Die Stileigenschaften für den übergeordneten Knoten.|  
|<xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>|Die Stileigenschaften für den Stammknoten.|  
|<xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>|Die Stileigenschaften für einen ausgewählten Knoten.|  
  
 Sie können auch den Stil der Knoten in bestimmten Ebenen innerhalb der Struktur steuern, mit der <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> Auflistung. Das erste Format in der Auflistung entspricht dem Stil der Knoten auf der ersten Ebene in der Struktur. Das zweite Format in der Auflistung entspricht dem Stil der Knoten auf der zweiten Ebene in der Struktur und So weiter. Dies wird am häufigsten verwendet zum Generieren des Inhalts Stil Navigationsmenüs, sollte für Knoten auf einer bestimmten Ebene unabhängig davon, ob diese untergeordneten Knoten haben die gleiche Darstellung haben.  
  
> [!NOTE]
>  Wenn für eine bestimmte Tiefe Ebene mithilfe eine Formatvorlage definiert wird die <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> Auflistung, Stil Stamm, übergeordnete oder Blattebene Knoten stileinstellungen für die Knoten auf dieser Ebene überschreibt.  
  
 Eine weitere Möglichkeit zum Ändern der Darstellung des Steuerelements ist der Bilder anpassen, die in angezeigt werden die <xref:System.Web.UI.WebControls.TreeView> Steuerelement. Sie können Ihren eigenen Satz von Bildern für die verschiedenen Teile des Steuerelements angeben, durch Festlegen der Eigenschaften in der folgenden Tabelle gezeigt.  
  
|Image-Eigenschaft|Beschreibung |  
|--------------------|-----------------|  
|<xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>|Die URL zu einem Bild für den Knotenindikator reduzierbaren angezeigt. Dieses Image ist normalerweise ein Minuszeichen (-).|  
|<xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>|Die URL zu einem Bild für den Indikator erweiterbaren Knoten angezeigt. Dieses Image ist normalerweise ein Pluszeichen (+).|  
|<xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A>|Die URL, zu dem Ordner mit der Bilder für die Verbindung übergeordnete Knoten mit untergeordneten Knoten verwendet werden soll. Die <xref:System.Web.UI.WebControls.TreeView.ShowLines%2A> muss auch-Eigenschaftensatz auf `true` für diese Eigenschaft eine Auswirkung hat.|  
|<xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>|Die URL zu einem Bild für den Knotenindikator nicht erweiterbare angezeigt.|  
  
> [!NOTE]
>  Sie müssen nicht alle Image-Eigenschaft anpassen. Wenn eine Image-Eigenschaft nicht explizit festgelegt ist, wird das integrierte Standardbild verwendet.  
  
 Die <xref:System.Web.UI.WebControls.TreeView> Steuerelement auch ermöglicht es Ihnen, um das Kontrollkästchen neben einem Knoten anzuzeigen. Wenn die <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> Eigenschaft wird auf einen Wert festgelegt, außer `TreeNodeTypes.None`, werden die Kontrollkästchen neben den angegebenen Knotentypen angezeigt.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> Eigenschaft kann festgelegt werden, um eine bitweise Kombination der <xref:System.Web.UI.WebControls.TreeNodeTypes> enumerationsmemberwerte.  
  
 Jedes Mal die Seite an den Server zurückgesendet wird die <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A> Auflistung wird automatisch mit den ausgewählten Knoten aufgefüllt. Wenn Sie die relevanten Kontrollkästchen angezeigt werden, können Sie die <xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged> Ereignis, um eine benutzerdefinierte Routine ausgeführt werden, sobald der Status eines Kontrollkästchens zwischen Übertragungen zum Server ändert.  
  
<a name="events"></a>   
## <a name="events"></a>Ereignisse  
 Die <xref:System.Web.UI.WebControls.TreeView> Steuerelement bietet mehrere Ereignisse, die Sie programmieren können. Dadurch können Sie eine benutzerdefinierte Routine ausgeführt wird, sobald ein Ereignis auftritt. Die folgende Tabelle enthält die Ereignisse, die von unterstützt werden die <xref:System.Web.UI.WebControls.TreeView> Steuerelement.  
  
|event|Beschreibung |  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged>|Tritt auf, wenn die Kontrollkästchen der <xref:System.Web.UI.WebControls.TreeView> Steuerelement Zustand zwischen Übertragungen zum Server geändert.|  
|<xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>|Wird ausgelöst, wenn ein Knoten im <xref:System.Web.UI.WebControls.TreeView>-Steuerelement ausgewählt wird.|  
|<xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>|Wird ausgelöst, wenn ein Knoten im <xref:System.Web.UI.WebControls.TreeView>-Steuerelement erweitert wird.|  
|<xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed>|Wird ausgelöst, wenn ein Knoten im <xref:System.Web.UI.WebControls.TreeView>-Steuerelement reduziert wird.|  
|<xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>|Tritt ein, wenn ein Knoten, dessen <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>-Eigenschaft auf `true` festgelegt ist, im <xref:System.Web.UI.WebControls.TreeView>-Steuerelement erweitert wird.|  
|<xref:System.Web.UI.WebControls.TreeView.TreeNodeDataBound>|Wird ausgelöst, wenn ein Datenelement im <xref:System.Web.UI.WebControls.TreeView>-Steuerelement an einen Knoten gebunden wird.|  
  
<a name="scrolling"></a>   
## <a name="scrolling"></a>Durchführen eines Bildlaufs  
 Die <xref:System.Web.UI.WebControls.TreeView> Steuerelement enthält keine integrierte Durchführen eines Bildlaufs. Um den Bildlauf hinzuzufügen, platzieren Sie die <xref:System.Web.UI.WebControls.TreeView> steuern, eine <xref:System.Web.UI.WebControls.Panel> Steuerelement, und fügen Sie die Bildlaufleisten, um die <xref:System.Web.UI.WebControls.Panel> Steuerelement. Weitere Informationen finden Sie unter [Übersicht über das Panel-Steuerelement](http://msdn.microsoft.com/library/127b61ed-87f2-46f4-92a3-785166e7245b).  
  
<a name="accessibility"></a>   
## <a name="accessibility"></a>Zugriff  
 Das Markup gerendert wird, wird standardmäßig für dieses Steuerelement kann nicht Accessibility Standards entsprechen. Ausführliche Informationen zu Accessibility-Unterstützung für das genannte Steuerelement finden Sie unter [ASP.NET-Steuerelemente und Barrierefreiheit](http://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Deklarationssyntax  
  
```  
<asp:TreeView  
    AccessKey="string"  
    AutoGenerateDataBindings="True|False"  
    BackColor="color name|#dddddd"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    CollapseImageToolTip="string"  
    CollapseImageUrl="uri"  
    CssClass="string"  
    DataSource="string"  
    DataSourceID="string"  
    EnableClientScript="True|False"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    ExpandDepth="string|FullyExpand|0|1|2|3|4|5|6|7|8|9|10|11|12|13|  
        14|15|16|17|18|19|20|21|22|23|24|25|26|27|28|29|30"  
    ExpandImageToolTip="string"  
    ExpandImageUrl="uri"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
       Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    Height="size"  
    ID="string"  
    ImageSet="Custom|XPFileExplorer|Msdn|WindowsHelp|Simple|Simple2|  
        BulletedList|BulletedList2|BulletedList3|BulletedList4|  
        Arrows|News|Contacts|Inbox|Events|Faq"  
    LineImagesFolder="string"  
    MaxDataBindDepth="integer"  
    NodeIndent="integer"  
    NodeWrap="True|False"  
    NoExpandImageUrl="uri"  
    OnDataBinding="DataBinding event handler"  
    OnDataBound="DataBound event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnSelectedNodeChanged="SelectedNodeChanged event handler"  
    OnTreeNodeCheckChanged="TreeNodeCheckChanged event handler"  
    OnTreeNodeCollapsed="TreeNodeCollapsed event handler"  
    OnTreeNodeDataBound="TreeNodeDataBound event handler"  
    OnTreeNodeExpanded="TreeNodeExpanded event handler"  
    OnTreeNodePopulate="TreeNodePopulate event handler"  
    OnUnload="Unload event handler"  
    PathSeparator="string"  
    PopulateNodesFromClient="True|False"  
    runat="server"  
    ShowCheckBoxes="None|Root|Parent|Leaf|All"  
    ShowExpandCollapse="True|False"  
    ShowLines="True|False"  
    SkinID="string"  
    SkipLinkText="string"  
    Style="string"  
    TabIndex="integer"  
    Target="string"  
    ToolTip="string"  
    Visible="True|False"  
    Width="size"  
>  
        <DataBindings>  
                <asp:TreeNodeBinding  
                    DataMember="string"  
                    Depth="integer"  
                    FormatString="string"  
                    ImageToolTip="string"  
                    ImageToolTipField="string"  
                    ImageUrl="uri"  
                    ImageUrlField="string"  
                    NavigateUrl="uri"  
                    NavigateUrlField="string"  
                    PopulateOnDemand="True|False"  
                    SelectAction="Select|Expand|SelectExpand|None"  
                    ShowCheckBox="string"  
                    Target="string"  
                    TargetField="string"  
                    Text="string"  
                    TextField="string"  
                    ToolTip="string"  
                    ToolTipField="string"  
                    Value="string"  
                    ValueField="string"  
                />  
        </DataBindings>  
        <HoverNodeStyle />  
        <LeafNodeStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            ChildNodesPadding="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ImageUrl="uri"  
            NodeSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <LevelStyles>  
                <asp:TreeNodeStyle  
                    BackColor="color name|#dddddd"  
                    BorderColor="color name|#dddddd"  
                    BorderStyle="NotSet|None|Dotted|Dashed|Solid|  
                        Double|Groove|Ridge|Inset|Outset"  
                    BorderWidth="size"  
                    ChildNodesPadding="size"  
                    CssClass="string"  
                    Font-Bold="True|False"  
                    Font-Italic="True|False"  
                    Font-Names="string"  
                    Font-Overline="True|False"  
                    Font-Size="string|Smaller|Larger|XX-Small|  
                        X-Small|Small|Medium|Large|X-Large|XX-Large"  
                    Font-Strikeout="True|False"  
                    Font-Underline="True|False"  
                    ForeColor="color name|#dddddd"  
                    Height="size"  
                    HorizontalPadding="size"  
                    ImageUrl="uri"  
                    NodeSpacing="size"  
                    OnDisposed="Disposed event handler"  
                    VerticalPadding="size"  
                    Width="size"  
                />  
        </LevelStyles>  
        <Nodes>  
                <asp:TreeNode  
                    Checked="True|False"  
                    Expanded="string"  
                    ImageToolTip="string"  
                    ImageUrl="uri"  
                    NavigateUrl="uri"  
                    PopulateOnDemand="True|False"  
                    SelectAction="Select|Expand|SelectExpand|None"  
                    Selected="True|False"  
                    ShowCheckBox="string"  
                    Target="string"  
                    Text="string"  
                    ToolTip="string"  
                    Value="string"  
>  
                </asp:TreeNode>  
        </Nodes>  
        <NodeStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            ChildNodesPadding="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ImageUrl="uri"  
            NodeSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <ParentNodeStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            ChildNodesPadding="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ImageUrl="uri"  
            NodeSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <RootNodeStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            ChildNodesPadding="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ImageUrl="uri"  
            NodeSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <SelectedNodeStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            ChildNodesPadding="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ImageUrl="uri"  
            NodeSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
</asp:TreeView>  
```  
  
   
  
## Examples  
 Dieser Abschnitt enthält sieben Codebeispiele:  
  
-   Im ersten Codebeispiel wird veranschaulicht, wie die Frames für das zweite Codebeispiel eingerichtet wird.  
  
-   Das zweite Codebeispiel veranschaulicht die deklarative Syntax verwenden, um statische Daten angezeigt werden sollen die <xref:System.Web.UI.WebControls.TreeView> Steuerelement.  
  
-   Das dritte Codebeispiel veranschaulicht das Binden der <xref:System.Web.UI.WebControls.TreeView> Steuerelement mit einer XML-Datenquelle.  
  
-   Das vierte Codebeispiel enthält Beispiel-XML-Daten für das dritte Codebeispiel.  
  
-   Im fünften Codebeispiel wird veranschaulicht, wie mithilfe der <xref:System.Web.UI.WebControls.TreeView> -Steuerelement für Websitenavigation, indem Sie ihn zum Binden einer <xref:System.Web.UI.WebControls.SiteMapDataSource> Steuerelement.  
  
-   Das sechste Codebeispiel enthält Beispiel-Siteübersichtsdaten für das fünfte Codebeispiel.  
  
-   Im siebten Codebeispiel wird veranschaulicht, wie zum Auffüllen von Knoten in der <xref:System.Web.UI.WebControls.TreeView> -Steuerelement aus dem Client.  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie die Frames für das folgende Codebeispiel eingerichtet wird.  
  
 [!code-aspx-csharp[TreeViewFrameSet#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFrameSet/CS/framecs.aspx#1)]
 [!code-aspx-vb[TreeViewFrameSet#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFrameSet/VB/framevb.aspx#1)]  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie verwenden Sie deklarativen Syntax zum Anzeigen von statischer Daten in die <xref:System.Web.UI.WebControls.TreeView> Steuerelement. In diesem Beispiel wird innerhalb des Satzes Frame des obigen Beispiels verwendet, um eine Tabelle der Inhalte anzuzeigen.  
  
 [!code-aspx-csharp[TreeViewFrameExample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFrameExample/CS/treeviewframecs.aspx#1)]
 [!code-aspx-vb[TreeViewFrameExample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFrameExample/VB/treeviewframevb.aspx#1)]  
  
 Das folgende Codebeispiel veranschaulicht das Binden der <xref:System.Web.UI.WebControls.TreeView> Steuerelement mit einer XML-Datenquelle. Für dieses Beispiel ordnungsgemäß funktioniert müssen Sie die XML-Beispieldaten bereitgestellt, die nach diesem Codebeispiel, in eine Datei mit dem Namen Book.xml kopieren.  
  
 [!code-aspx-csharp[TreeViewXml#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewXml/CS/treeviewxmlcs.aspx#1)]
 [!code-aspx-vb[TreeViewXml#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewXml/VB/treeviewxmlvb.aspx#1)]  
  
 Das folgende Codebeispiel stellt XML-Beispieldaten für das vorangegangene Beispiel bereit.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeView> -Steuerelement für Websitenavigation, indem Sie ihn zum Binden einer <xref:System.Web.UI.WebControls.SiteMapDataSource> Steuerelement. Für dieses Beispiel ordnungsgemäß funktioniert müssen Sie die Website zuordnen, bereitgestellten Beispieldaten nach diesem Codebeispiel, in eine Datei mit dem Namen Web.sitemap kopieren.  
  
 [!code-aspx-csharp[TreeViewAutoGenerateBindings#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewAutoGenerateBindings/CS/treeviewautogeneratebindingscs.aspx#1)]
 [!code-aspx-vb[TreeViewAutoGenerateBindings#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewAutoGenerateBindings/VB/treeviewautogeneratebindingsvb.aspx#1)]  
  
 Im folgenden Codebeispiel wird im vorangehenden Codebeispiel Siteübersichtsdaten Beispiel bereit.  
  
```  
<siteMap>  
    <siteMapNode title="Home" description="Home" url="default.aspx">  
        <siteMapNode title="Products" description="Products" url="Products.aspx">  
            <siteMapNode title="Computers" url="Computers.aspx"/>  
            <siteMapNode title="Accessories" url="Accessories.aspx"/>       
        </siteMapNode>  
    </siteMapNode>  
</siteMap>  
```  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Auffüllen von Knoten in der <xref:System.Web.UI.WebControls.TreeView> -Steuerelement aus dem Client. Wenn die clientseitige Knoten Auffüllung aktiviert ist, werden die Knoten auf dem Client, ohne die Notwendigkeit zum Zurücksenden an den Server dynamisch aufgefüllt.  
  
 [!code-aspx-csharp[TreeViewPopulateNodesFromClient#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/CS/treeviewpopulatenodesfromclientcs.aspx#1)]
 [!code-aspx-vb[TreeViewPopulateNodesFromClient#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/VB/treeviewpopulatenodesfromclientvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.WebControls.DataBoundControl.DataSourceID" />
    <altmember cref="P:System.Web.UI.WebControls.TreeView.DataBindings" />
    <altmember cref="P:System.Web.UI.WebControls.TreeView.EnableClientScript" />
    <altmember cref="T:System.Web.UI.IHierarchicalDataSource" />
    <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
    <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowCheckBoxes" />
    <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
    <altmember cref="T:System.Web.UI.WebControls.TreeNodeBinding" />
    <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
    <altmember cref="T:System.Web.UI.WebControls.TreeNodeCollection" />
    <altmember cref="T:System.Web.UI.WebControls.SiteMapDataSource" />
    <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged" />
    <altmember cref="E:System.Web.UI.WebControls.TreeView.SelectedNodeChanged" />
    <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeExpanded" />
    <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed" />
    <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" />
    <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeDataBound" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeView();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.TreeView" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.TreeView.%23ctor%2A> Konstruktor erstellt und initialisiert eine neue Instanz der dem <xref:System.Web.UI.WebControls.TreeView> Klasse. Hinzufügen einer <xref:System.Web.UI.WebControls.TreeView> dynamisch auf eine Seite zu steuern, erstellen Sie ein neues <xref:System.Web.UI.WebControls.TreeView> Objekt, dessen Eigenschaften festlegen und fügen Sie es auf die <xref:System.Web.UI.Control.Controls%2A?displayProperty=nameWithType> Auflistung eines Containers zu steuern, wie z. B. die <xref:System.Web.UI.WebControls.PlaceHolder> Steuerelement.  
  
   
  
## Examples  
 Dieser Abschnitt enthält zwei Codebeispiele. Im ersten Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeView.%23ctor%2A> Konstruktors zum Hinzufügen einer <xref:System.Web.UI.WebControls.TreeView> dynamisch auf eine Seite zu steuern. Das zweite Codebeispiel im ersten Codebeispiel wird XML-Daten bereit.  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeView.%23ctor%2A> Konstruktors zum Hinzufügen einer <xref:System.Web.UI.WebControls.TreeView> dynamisch auf eine Seite zu steuern. Für dieses Beispiel ordnungsgemäß funktioniert müssen Sie die XML-Beispieldaten bereitgestellt, die nach diesem Codebeispiel, in eine Datei mit dem Namen Book.xml kopieren.  
  
 [!code-aspx-csharp[TreeViewCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCtor/CS/treeviewctorcs.aspx#1)]
 [!code-aspx-vb[TreeViewCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCtor/VB/treeviewctorvb.aspx#1)]  
  
 Das folgende Codebeispiel stellt XML-Beispieldaten für das vorangegangene Beispiel bereit.  
  
```  
<Book Title="Book Title">  
  <Chapter Heading="Chapter 1">  
    <Section Heading="Section 1">  
    </Section>  
    <Section Heading="Section 2">  
    </Section>  
  </Chapter>  
  <Chapter Heading="Chapter 2">  
    <Section Heading="Section 1">  
    </Section>  
  </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="T:System.Web.UI.WebControls.PlaceHolder" />
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.AddAttributesToRender : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="treeView.AddAttributesToRender writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Ein <see cref="T:System.Web.UI.HtmlTextWriter" />, der den Ausgabestream für das Rendering von HTML-Inhalten auf dem Client darstellt.</param>
        <summary>Fügt dem angegebenen <see cref="T:System.Web.UI.HtmlTextWriter" />-Steuerelement die darzustellenden HTML-Attribute und -Formatvorlagen hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.TreeView.AddAttributesToRender%2A> Methode wird hauptsächlich von Steuerelemententwicklern verwendet.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="AutoGenerateDataBindings">
      <MemberSignature Language="C#" Value="public bool AutoGenerateDataBindings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoGenerateDataBindings" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoGenerateDataBindings As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoGenerateDataBindings { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoGenerateDataBindings : bool with get, set" Usage="System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob das <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelement Strukturknotenbindungen automatisch generiert.</summary>
        <value>
          <see langword="true" />, damit das <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelement automatisch Strukturknotenbindungen generiert, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Struktur der Knoten Bindungen definieren die Beziehung zwischen einem Datenelement und dem Knoten, dem es gebunden ist. Wenn mit einer Datenquelle gebunden, in dem jedes Datenelement enthält mehrere Eigenschaften (z. B. ein XML-Element mit mehreren Attributen), die <xref:System.Web.UI.WebControls.TreeView> Steuerelement muss wissen, welche Datenelementeigenschaft zum Binden an die <xref:System.Web.UI.WebControls.TreeNode> Eigenschaft. Wenn die <xref:System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings%2A> -Eigenschaftensatz auf `true`, die <xref:System.Web.UI.WebControls.TreeView> Steuerelement generiert automatisch die Struktur der Knoten standardbindungen, die festgelegt die <xref:System.Web.UI.WebControls.TreeNode.Text%2A> Eigenschaft von der <xref:System.Web.UI.WebControls.TreeNode> -Objekt, das die Bindung mit dem Wert zugeordnet ist, die zurückgegebenes die `ToString` Methode des Datenelements.  
  
> [!NOTE]
>  Die Struktur der automatisch generierten Knoten Bindungen nicht hinzugefügt werden die <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> Auflistung.  
  
 Bei einem XML-Element, das durch zurückgegebene Wert die `ToString` Methode wird der Elementname, die die zugrunde liegende Struktur der XML-Datei zeigt, aber ist andernfalls nicht sehr sinnvoll. Um eine nützlichere Struktur zu erstellen, müssen Sie eigene Struktur Knoten Bindungen definieren, indem Auffüllen der <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> Auflistung.  
  
> [!NOTE]
>  Wenn Sie definieren eine <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> -Auflistung, die <xref:System.Web.UI.WebControls.TreeView> Steuerelement verwendet diese Werte anstelle von automatisch generierten Struktur Knoten Bindungen.  
  
 Der Wert dieser Eigenschaft wird im Ansichtszustand gespeichert.  
  
   
  
## Examples  
 Dieser Abschnitt enthält zwei Codebeispiele. Im ersten Codebeispiel wird veranschaulicht, wie zum Deaktivieren von automatischen Struktur Knoten Bindung Generierung durch Festlegen der <xref:System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings%2A> Eigenschaft `false`. Das zweite Codebeispiel bereit im ersten Codebeispiel Siteübersichtsdaten Beispiel.  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Deaktivieren von automatischen Struktur Knoten Bindung Generierung durch Festlegen der <xref:System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings%2A> Eigenschaft `false`. Ein <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> Auflistung wird definiert, um die Beziehung zwischen den Datenelementen in herzustellen eine <xref:System.Web.UI.WebControls.SiteMapDataSource> Steuerelement und den Knoten, der die <xref:System.Web.UI.WebControls.TreeView> Steuerelement. Für dieses Beispiel ordnungsgemäß funktioniert müssen Sie die Website zuordnen, bereitgestellten Beispieldaten nach diesem Codebeispiel, in eine Datei mit dem Namen Web.sitemap kopieren.  
  
 [!code-aspx-csharp[TreeViewAutoGenerateBindings#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewAutoGenerateBindings/CS/treeviewautogeneratebindingscs.aspx#1)]
 [!code-aspx-vb[TreeViewAutoGenerateBindings#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewAutoGenerateBindings/VB/treeviewautogeneratebindingsvb.aspx#1)]  
  
 Im folgenden Codebeispiel wird das obige Beispiel Siteübersichtsdaten Beispiel bereit.  
  
```  
<siteMap>  
    <siteMapNode title="Home" description="Home" url="default.aspx">  
        <siteMapNode title="Products" description="Products" url="Products.aspx">  
            <siteMapNode title="Computers" url="Computers.aspx"/>  
            <siteMapNode title="Accessories" url="Accessories.aspx"/>       
        </siteMapNode>  
    </siteMapNode>  
</siteMap>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.DataBindings" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeBinding" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" />
      </Docs>
    </Member>
    <Member MemberName="CheckedNodes">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeCollection CheckedNodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeCollection CheckedNodes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.CheckedNodes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CheckedNodes As TreeNodeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeCollection ^ CheckedNodes { System::Web::UI::WebControls::TreeNodeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CheckedNodes : System.Web.UI.WebControls.TreeNodeCollection" Usage="System.Web.UI.WebControls.TreeView.CheckedNodes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Auflistung von <see cref="T:System.Web.UI.WebControls.TreeNode" />-Objekten ab, die die Knoten im <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelement darstellen, bei denen ein aktiviertes Kontrollkästchen angezeigt wird.</summary>
        <value>Eine <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />, die die Knoten in der <see cref="T:System.Web.UI.WebControls.TreeView" /> enthält, bei denen ein aktiviertes Kontrollkästchen angezeigt wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Kontrollkästchen angezeigt werden, der <xref:System.Web.UI.WebControls.TreeView> Steuerelement (durch Festlegen der <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> -Eigenschaft auf einen anderen Wert als `TreeNodeType.None`), verwenden Sie die <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A> -Eigenschaft können Sie bestimmen, welche Knoten über ein aktiviertes Kontrollkästchen angezeigt. Diese Auflistung wird häufig verwendet, zum iterieren durch alle Knoten, die über ein aktiviertes Kontrollkästchen in der Struktur verfügen.  
  
 Die <xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged> Ereignis wird ausgelöst, wenn die Kontrollkästchen der <xref:System.Web.UI.WebControls.TreeView> Steuerelement Zustand zwischen Übertragungen zum Server geändert. Dadurch können Sie eine Ereignisbehandlungsmethode bereitstellen, die eine benutzerdefinierte Routine ausführt, z. B. eine Datenbank oder der angezeigte Inhalt aktualisieren, wenn dieses Ereignis tritt auf.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A> Auflistung unter Verwendung einer Postorder-die Struktur aufgefüllt: jeder übergeordnete Knoten auf seinen untergeordneten Knoten verarbeitet werden, bevor der nächste übergeordnete Knoten aufgefüllt wird.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A> Eigenschaft, um zu bestimmen, welche Knoten über ein aktiviertes Kontrollkästchen verfügen, der <xref:System.Web.UI.WebControls.TreeView> Steuerelement.  
  
 [!code-aspx-csharp[TreeViewShowCheckBoxes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewShowCheckBoxes/CS/treeviewshowcheckboxescs.aspx#1)]
 [!code-aspx-vb[TreeViewShowCheckBoxes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewShowCheckBoxes/VB/treeviewshowcheckboxesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowCheckBoxes" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeCollection" />
      </Docs>
    </Member>
    <Member MemberName="CollapseAll">
      <MemberSignature Language="C#" Value="public void CollapseAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CollapseAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.CollapseAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub CollapseAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CollapseAll();" />
      <MemberSignature Language="F#" Value="member this.CollapseAll : unit -&gt; unit" Usage="treeView.CollapseAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Schließt jeden Knoten in der Struktur.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.TreeView.CollapseAll%2A> Methode bietet eine einfache Möglichkeit, alle Knoten in der Struktur zu schließen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeView.CollapseAll%2A> Methode, um alle Knoten in reduzieren die <xref:System.Web.UI.WebControls.TreeView> Steuerelement zur gleichen Zeit.  
  
 [!code-aspx-csharp[TreeViewExpandAll#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewExpandAll/CS/treeviewexpandallcs.aspx#1)]
 [!code-aspx-vb[TreeViewExpandAll#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewExpandAll/VB/treeviewexpandallvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.ExpandAll" />
      </Docs>
    </Member>
    <Member MemberName="CollapseImageToolTip">
      <MemberSignature Language="C#" Value="public string CollapseImageToolTip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CollapseImageToolTip" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.CollapseImageToolTip" />
      <MemberSignature Language="VB.NET" Value="Public Property CollapseImageToolTip As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CollapseImageToolTip { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CollapseImageToolTip : string with get, set" Usage="System.Web.UI.WebControls.TreeView.CollapseImageToolTip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die QuickInfo für das Bild ab, das für den Indikator des reduzierbaren Knotens angezeigt wird, oder legt die QuickInfo fest.</summary>
        <value>Die QuickInfo für das für den Indikator des reduzierbaren Knotens angezeigte Bild.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.TreeView.CollapseImageToolTip%2A> Eigenschaft, um eine QuickInfo für das reduzierbare Bild anzugeben. Der Text, den Sie angeben, enthält Geräte mit Hilfstechnologie mit einer Beschreibung des Abbilds, das verwendet werden kann, um das Steuerelement leichter zugänglich machen.  
  
 Der Wert dieser Eigenschaft wird im Ansichtszustand gespeichert.  
  
 Der Wert dieser Eigenschaft, wenn festgelegt ist, können mit einem Designer-Tool automatisch in einer Ressourcendatei gespeichert werden. Weitere Informationen finden Sie unter <xref:System.ComponentModel.LocalizableAttribute> und [Globalisierung und Lokalisierung](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeView.CollapseImageToolTip%2A> Eigenschaft, um eine QuickInfo für ein Bild anzugeben, die für den Knotenindikator reduzierbaren angezeigt wird.  
  
 [!code-aspx-csharp[TreeViewCustomImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCustomImage/CS/treeviewcustomimagecs.aspx#1)]
 [!code-aspx-vb[TreeViewCustomImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCustomImage/VB/treeviewcustomimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ImageSet" />
      </Docs>
    </Member>
    <Member MemberName="CollapseImageUrl">
      <MemberSignature Language="C#" Value="public string CollapseImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CollapseImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property CollapseImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CollapseImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CollapseImageUrl : string with get, set" Usage="System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die URL zu einem benutzerdefinierten Bild für den Indikator eines reduzierbaren Knotens ab oder legt diese fest.</summary>
        <value>Die URL zu einem benutzerdefinierten Bild, das für reduzierbare Knoten angezeigt werden soll. Der Standardwert ist eine leere Zeichenfolge (""), die das Standardbild mit dem Minuszeichen (-) anzeigt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> Eigenschaft, um ein benutzerdefiniertes Bild für den Knotenindikator reduzierbaren anzugeben. Dieses Bild wird neben einem reduzierbaren Knoten angezeigt und ist normalerweise ein Minuszeichen (-).  
  
 Wenn die <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> -Eigenschaftensatz auf `true`, <xref:System.Web.UI.WebControls.TreeView> -Steuerelement zeigt ein Pluszeichen (+) oder Minuszeichen (-) oder ein Platzhalterbild neben einem Knoten, um anzugeben, ob der Knoten erweiterbar, reduzierbar oder nicht erweiterbar ist. Können Sie angeben, benutzerdefinierte Images, indem Sie zuerst die <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> Eigenschaft `TreeViewImageSet.Custom`, festlegen und anschließend die <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>, <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>, und <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> Eigenschaften auf die URLs für die benutzerdefinierten Abbildern. Wenn keine Bilder angegeben sind, werden die Standardbilder verwendet. Um die Erweiterung Knotenerweiterungsindikatoren auszublenden, legen Sie die <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> Eigenschaft `false`.  
  
> [!NOTE]
>  Um sicherzustellen, dass Knoten richtig ausgerichtet der <xref:System.Web.UI.WebControls.TreeView> gesteuert werden, wenn benutzerdefinierte Abbilder verwenden, stellen Sie sicher, dass alle Abbilder, die vom angegebenen der <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>, <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>, und <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> Eigenschaften haben die gleichen Dimensionen.  
  
 Wenn Sie ein benutzerdefiniertes Bild für den Knotenindikator reduzierbaren verwenden, erwägen Sie auch die Einstellung der <xref:System.Web.UI.WebControls.TreeView.CollapseImageToolTip%2A> Eigenschaft, um eine QuickInfo für das Bild anzugeben.  
  
 Der Wert dieser Eigenschaft wird im Ansichtszustand gespeichert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> Eigenschaft, um ein benutzerdefiniertes Bild für den Knotenindikator reduzierbaren anzugeben. Für das Codebeispiel angezeigt und das Bild im Steuerelement angezeigt werden, müssen Sie Ihr eigenes Image bereitstellen und die <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> Eigenschaft muss festgelegt werden, um `TreeNodeImageSet.Custom`.  
  
 [!code-aspx-csharp[TreeViewCustomImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCustomImage/CS/treeviewcustomimagecs.aspx#1)]
 [!code-aspx-vb[TreeViewCustomImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCustomImage/VB/treeviewcustomimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowExpandCollapse" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ImageSet" />
        <altmember cref="T:System.Web.UI.WebControls.TreeViewImageSet" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NoExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageToolTip" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberSignature Language="F#" Value="override this.CreateControlCollection : unit -&gt; System.Web.UI.ControlCollection" Usage="treeView.CreateControlCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt eine Auflistung zum Speichern untergeordneter Steuerelemente.</summary>
        <returns>Gibt immer eine <see cref="T:System.Web.UI.EmptyControlCollection" /> zurück.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.TreeView> Steuerelement unterstützt nicht das Einbetten von untergeordneten Steuerelementen. Diese Methode wurde überschrieben, um zu verhindern, dass das Hinzufügen von untergeordneten Steuerelementen und gibt immer eine <xref:System.Web.UI.EmptyControlCollection?displayProperty=nameWithType> Objekt.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.EmptyControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="CreateNode">
      <MemberSignature Language="C#" Value="protected internal virtual System.Web.UI.WebControls.TreeNode CreateNode ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Web.UI.WebControls.TreeNode CreateNode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.CreateNode" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreateNode () As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Web::UI::WebControls::TreeNode ^ CreateNode();" />
      <MemberSignature Language="F#" Value="abstract member CreateNode : unit -&gt; System.Web.UI.WebControls.TreeNode&#xA;override this.CreateNode : unit -&gt; System.Web.UI.WebControls.TreeNode" Usage="treeView.CreateNode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt eine neue Instanz der <see cref="T:System.Web.UI.WebControls.TreeNode" />-Klasse zurück. <see cref="M:System.Web.UI.WebControls.TreeView.CreateNode" /> ist eine Hilfsmethode.</summary>
        <returns>Eine neue Instanz der <see cref="T:System.Web.UI.WebControls.TreeNode" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.TreeView.CreateNode%2A> Methode ist eine Hilfsmethode, die eine neue Instanz der gibt die <xref:System.Web.UI.WebControls.TreeNode> Klasse.  
  
 Die <xref:System.Web.UI.WebControls.TreeView.CreateNode%2A> Methode wird hauptsächlich von Steuerelemententwicklern verwendet. Entwickler, der zu erweiternden steuern die <xref:System.Web.UI.WebControls.TreeView> Klasse durch die Erweiterung der <xref:System.Web.UI.WebControls.TreeNode> Klasse sollte überschreiben diese Methode, um ein Objekt zurückzugeben, das von abgeleitet ist die <xref:System.Web.UI.WebControls.TreeNode>. Ein häufiger Grund zum Erweitern der <xref:System.Web.UI.WebControls.TreeNode> Klasse ist, überschreiben die <xref:System.Web.UI.WebControls.TreeNode.RenderPreText%2A> und <xref:System.Web.UI.WebControls.TreeNode.RenderPostText%2A> Methoden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="public override sealed void DataBind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DataBind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.DataBind" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub DataBind ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void DataBind();" />
      <MemberSignature Language="F#" Value="override this.DataBind : unit -&gt; unit" Usage="treeView.DataBind " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft die <see cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" />-Methode der Basisklasse auf.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Datengebundene Steuerelemente sollten überschreiben die <xref:System.Web.UI.WebControls.TreeView.PerformDataBinding%2A> -Methode anstelle der <xref:System.Web.UI.WebControls.TreeView.DataBind%2A> Methode.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.PerformDataBinding" />
      </Docs>
    </Member>
    <Member MemberName="DataBindings">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeBindingCollection DataBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeBindingCollection DataBindings" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.DataBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataBindings As TreeNodeBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeBindingCollection ^ DataBindings { System::Web::UI::WebControls::TreeNodeBindingCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataBindings : System.Web.UI.WebControls.TreeNodeBindingCollection" Usage="System.Web.UI.WebControls.TreeView.DataBindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.TreeViewBindingsEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Auflistung von <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" />-Objekten ab, die die Beziehung zwischen einem Datenelement und dem Knoten, an den es gebunden werden soll, definieren.</summary>
        <value>Eine <see cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" />, die die Beziehung zwischen einem Datenelement und dem Knoten darstellt, an den es gebunden werden soll.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> Auflistung enthält <xref:System.Web.UI.WebControls.TreeNodeBinding> Objekten, definieren die Beziehung zwischen einem Datenelement und dem Knoten, die es gebunden ist. Beim Binden an eine Datenquelle, in dem jedes Datenelement enthält mehrere Eigenschaften (z. B. ein XML-Element mit mehreren Attributen), eines Knotens zeigt den Wert an, die von zurückgegeben wird die `ToString` Methode des Datenelements in der Standardeinstellung. Im Fall einer XML-Element zeigt der Knoten der Elementname, der veranschaulicht, der zugrunde liegende Struktur des Baums, sondern ist andernfalls nicht sehr sinnvoll. Sie können einen Knoten für eine bestimmte Daten Item-Eigenschaft binden, indem Sie die Struktur Knoten Bindungen angeben.  
  
 Wenn die Beziehung zwischen einem Datenelement und einem Knoten zu definieren, müssen Sie angeben, dass die Kriterien für die Bindung und die Werte auf die Eigenschaften eines binden <xref:System.Web.UI.WebControls.TreeNode> Objekt. Die Kriterien angeben, wann ein Datenelement an einen Knoten gebunden werden soll. Die Kriterien können mit einer Tiefe von Knoten, einen Datenmember oder beides angegeben werden. Eine Knotentiefe gibt die Ebene des Knotens, die gebunden wird. Z. B. Wenn Sie eine Knotentiefe von 0 angeben, werden alle Knoten in der Struktur auf der Ebene 0 gebunden mithilfe der Struktur der Knoten-Bindung. Ein Datenmember gibt den Typ des Datenelements in der zugrunde liegenden Datenquelle, aber Sie können unterschiedliche Informationen je nach Datenquelle dar. Das Datenelement für ein XML-Element gibt z. B. den Namen des Elements.  
  
 Wenn mehrere <xref:System.Web.UI.WebControls.TreeNodeBinding> Objekte werden definiert, die miteinander in Konflikt stehen die <xref:System.Web.UI.WebControls.TreeView> -Steuerelement wendet die Struktur-Knoten-Bindungen in der folgenden Reihenfolge:  
  
1.  Die <xref:System.Web.UI.WebControls.TreeNodeBinding> Objekt, das eine Tiefe und ein Datenmember definiert.  
  
2.  Die <xref:System.Web.UI.WebControls.TreeNodeBinding> -Objekt, das nur die Tiefe definiert.  
  
3.  Die <xref:System.Web.UI.WebControls.TreeNodeBinding> Objekt, das nur den Datenmember definiert.  
  
4.  Die <xref:System.Web.UI.WebControls.TreeNodeBinding> Objekt, das weder die Tiefe noch den Datenmember definiert.  
  
 Wenn mehrere Bindungen angegeben sind, die die gleiche Rangfolge Kriterien erfüllen, wird die erste Bindung in der Auflistung angewendet.  
  
 Wenn die Bindungskriterien hergestellt wird, können Sie eine Eigenschaft Binden einer <xref:System.Web.UI.WebControls.TreeNode> -Objekt, das an einen Wert gebunden werden kann. Sie können auf ein Attribut oder ein Feld eines Datenelements binden oder einen statischen Wert anzuzeigen. Weitere Informationen zum Binden der Eigenschaften von einer <xref:System.Web.UI.WebControls.TreeNode> -Objekts auf einen Wert, finden Sie unter <xref:System.Web.UI.WebControls.TreeNodeBinding>.  
  
 Obwohl die <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> Auflistung programmgesteuert gefüllt werden kann, in der Regel deklarativ festgelegt. Zum Angeben der Struktur der Knoten Bindungen zuerst schachteln, öffnende und schließende `<DataBindings>` zwischen dem Start- und Endtag des Tags der <xref:System.Web.UI.WebControls.TreeView> Steuerelement. Platzieren Sie als Nächstes `<asp:TreeNodeBinding>` Elemente zwischen den öffnenden und schließenden `<DataBindings>` Tags für den jeweiligen Strukturknotens binden Sie angeben möchten.  
  
 Wenn datenbindungen erstellt werden, indem der <xref:System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings%2A> Eigenschaft von der <xref:System.Web.UI.WebControls.TreeView> die Steuerung an `true`, haben Sie die Bindungen, die erstellt werden die <xref:System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand%2A> -Eigenschaftensatz auf `true`. Datenbindungen, die deklarativ erstellt werden müssen die <xref:System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand%2A> -Eigenschaftensatz auf `false`. Verwenden deklarative Syntax können Sie zum Steuern des Verhaltens von Daten für die einzelnen Bindungen.  
  
   
  
## Examples  
 Dieser Abschnitt enthält zwei Codebeispiele. Im ersten Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> -Auflistung definiert die Beziehung zwischen einem Datenelement und dem Knoten, die es gebunden ist. Das zweite Codebeispiel im ersten Codebeispiel wird XML-Daten bereit.  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> -Auflistung definiert die Beziehung zwischen einem Datenelement und dem Knoten, die es gebunden ist. Für dieses Beispiel ordnungsgemäß funktioniert müssen Sie die XML-Beispieldaten bereitgestellt, die nach diesem Codebeispiel, in eine Datei mit dem Namen Book.xml kopieren. In diesem Beispiel wird nur der <xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A> -Eigenschaft der Bindung. Eine leichte leistungsverbesserung konnte hinzugefügt werden, indem Sie auch angeben der <xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A> Eigenschaft.  
  
 [!code-aspx-csharp[TreeViewXml#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewXml/CS/treeviewxmlcs.aspx#1)]
 [!code-aspx-vb[TreeViewXml#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewXml/VB/treeviewxmlvb.aspx#1)]  
  
 Das folgende Codebeispiel stellt XML-Beispieldaten für das vorangegangene Beispiel bereit.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeBinding" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" />
      </Docs>
    </Member>
    <Member MemberName="EnableClientScript">
      <MemberSignature Language="C#" Value="public bool EnableClientScript { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableClientScript" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.EnableClientScript" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableClientScript As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableClientScript { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableClientScript : bool with get, set" Usage="System.Web.UI.WebControls.TreeView.EnableClientScript" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob das <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelement clientseitiges Skript zum Verarbeiten von Erweiterungs- oder Reduzierungsereignissen rendert.</summary>
        <value>
          <see langword="true" />, um das clientseitige Skript in kompatiblen Browsern zu rendern, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A> Eigenschaft, um anzugeben, ob die <xref:System.Web.UI.WebControls.TreeView> Steuerelement rendert clientseitiges Skript auf kompatiblen Browsern zu erweitern und reduzieren die Ereignisse zu behandeln. Wenn diese Eigenschaft festgelegt wird, um `true`, kompatible Browsern führen Sie den Code zum Erweitern und Reduzieren von Knoten auf dem Client. Die Daten der Struktur der Knoten müssen für den clientseitigen Skripts funktionieren im Voraus bekannt sein. Mit Clientskript verhindert, dass einer POST-Anforderung an den Server jedes Mal ein Knoten erweitert oder reduziert ist.  
  
 Wenn die Daten der Struktur der Knoten nicht im Voraus bekannt ist, Knoten ausgefüllt werden, die vom Client, wenn die `PopulateNodesFromClient` -Eigenschaftensatz ist auch auf `true`. In diesem Szenario müssen Sie auch eine Ereignisbehandlung Methode zum Angeben der <xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate> Ereignis, um Knoten zu füllen. Weitere Informationen zum Auffüllen von Client-Side-Knoten, finden Sie unter <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>.  
  
> [!NOTE]
>  Wenn die <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A> -Eigenschaftensatz auf `false`die <xref:System.Web.UI.WebControls.TreeView> Steuerelement Postback zum Server jedes Mal ein Knoten erweitert oder reduziert ist.  
  
 Der Wert dieser Eigenschaft wird im Ansichtszustand gespeichert.  
  
 Diese Eigenschaft kann nicht durch Designs oder Stylesheetdesigns festgelegt werden. Weitere Informationen finden Sie unter <xref:System.Web.UI.ThemeableAttribute> und [ASP.NET-Designs und Skins](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 Dieser Abschnitt enthält zwei Codebeispiele. Im ersten Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A> -Eigenschaft clientseitiges Skript gerendert, die zum Erweitern und Reduzieren von Knoten in kompatiblen Browsern verwendet wird. Das zweite Codebeispiel im ersten Codebeispiel wird XML-Daten bereit.  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A> -Eigenschaft clientseitiges Skript gerendert, die zum Erweitern und Reduzieren von Knoten in kompatiblen Browsern verwendet wird. Beachten Sie, dass eine Bereitstellung auf dem Server erforderlich ist, zum Erweitern und Reduzieren eines Knotens bei der <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A> -Eigenschaftensatz auf `false`. Für dieses Beispiel ordnungsgemäß funktioniert müssen Sie die XML-Beispieldaten bereitgestellt, die nach diesem Codebeispiel, in eine Datei mit dem Namen Book.xml kopieren.  
  
 [!code-aspx-csharp[TreeViewEnableClientScript#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewEnableClientScript/CS/treeviewenableclientscriptcs.aspx#1)]
 [!code-aspx-vb[TreeViewEnableClientScript#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewEnableClientScript/VB/treeviewenableclientscriptvb.aspx#1)]  
  
 Im folgenden Codebeispiel wird der im vorangehenden Codebeispiel wird XML-Daten bereit.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient" />
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" />
      </Docs>
    </Member>
    <Member MemberName="ExpandAll">
      <MemberSignature Language="C#" Value="public void ExpandAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExpandAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.ExpandAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExpandAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExpandAll();" />
      <MemberSignature Language="F#" Value="member this.ExpandAll : unit -&gt; unit" Usage="treeView.ExpandAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Öffnet jeden Knoten in der Struktur.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.TreeView.ExpandAll%2A> Methode bietet eine einfache Möglichkeit, alle Knoten in der Struktur zu öffnen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeView.ExpandAll%2A> Methode, um alle Knoten im Erweitern der <xref:System.Web.UI.WebControls.TreeView> Steuerelement zur gleichen Zeit.  
  
 [!code-aspx-csharp[TreeViewExpandAll#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewExpandAll/CS/treeviewexpandallcs.aspx#1)]
 [!code-aspx-vb[TreeViewExpandAll#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewExpandAll/VB/treeviewexpandallvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.CollapseAll" />
      </Docs>
    </Member>
    <Member MemberName="ExpandDepth">
      <MemberSignature Language="C#" Value="public int ExpandDepth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ExpandDepth" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ExpandDepth" />
      <MemberSignature Language="VB.NET" Value="Public Property ExpandDepth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ExpandDepth { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ExpandDepth : int with get, set" Usage="System.Web.UI.WebControls.TreeView.ExpandDepth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.TreeView/TreeViewExpandDepthConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der Ebenen ab, die erweitert werden, wenn ein <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelement erstmals angezeigt wird, oder legt die Anzahl fest.</summary>
        <value>Die Tiefe, die angezeigt werden soll, wenn die <see cref="T:System.Web.UI.WebControls.TreeView" /> erstmals angezeigt wird. Der Standardwert ist -1, d. h., alle Knoten werden angezeigt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.TreeView.ExpandDepth%2A> Eigenschaft, um das Rendern des steuern die <xref:System.Web.UI.WebControls.TreeView> steuern erstmalig, die er angezeigt wird. Bei nachfolgenden Postbacks behalten die Knoten ihren aktuellen erweiterten Zustand.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LevelStyles" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.ExpandAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.CollapseAll" />
      </Docs>
    </Member>
    <Member MemberName="ExpandImageToolTip">
      <MemberSignature Language="C#" Value="public string ExpandImageToolTip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ExpandImageToolTip" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ExpandImageToolTip" />
      <MemberSignature Language="VB.NET" Value="Public Property ExpandImageToolTip As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ExpandImageToolTip { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ExpandImageToolTip : string with get, set" Usage="System.Web.UI.WebControls.TreeView.ExpandImageToolTip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die QuickInfo für das Bild ab, das für den Indikator des erweiterbaren Knotens angezeigt wird, oder legt die QuickInfo fest.</summary>
        <value>Die QuickInfo für das für den Indikator des erweiterbaren Knotens angezeigte Bild.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.TreeView.ExpandImageToolTip%2A> Eigenschaft, um eine QuickInfo für das Bild anzugeben. Der Text, den Sie angeben, enthält Geräte mit Hilfstechnologie mit einer Beschreibung des Abbilds, das verwendet werden kann, um das Steuerelement leichter zugänglich machen.  
  
 Der Wert dieser Eigenschaft wird im Ansichtszustand gespeichert.  
  
 Der Wert dieser Eigenschaft, wenn festgelegt ist, können mit einem Designer-Tool automatisch in einer Ressourcendatei gespeichert werden. Weitere Informationen finden Sie unter <xref:System.ComponentModel.LocalizableAttribute> und [Globalisierung und Lokalisierung](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeView.ExpandImageToolTip%2A> Eigenschaft, um eine QuickInfo für ein Bild anzugeben, die für den Indikator erweiterbaren Knoten angezeigt wird.  
  
 [!code-aspx-csharp[TreeViewCustomImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCustomImage/CS/treeviewcustomimagecs.aspx#1)]
 [!code-aspx-vb[TreeViewCustomImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCustomImage/VB/treeviewcustomimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ImageSet" />
      </Docs>
    </Member>
    <Member MemberName="ExpandImageUrl">
      <MemberSignature Language="C#" Value="public string ExpandImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ExpandImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property ExpandImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ExpandImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ExpandImageUrl : string with get, set" Usage="System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die URL zu einem benutzerdefinierten Bild für den Indikator eines erweiterbaren Knotens ab oder legt diese fest.</summary>
        <value>Die URL zu einem benutzerdefinierten Bild, das für erweiterbare Knoten angezeigt werden soll. Der Standardwert ist eine leere Zeichenfolge (""), die das Standardbild mit dem Pluszeichen (+) anzeigt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A> Eigenschaft, um ein benutzerdefiniertes Bild für den Indikator erweiterbaren Knoten anzugeben. Dieses Bild wird neben einen erweiterbaren Knoten angezeigt und ist normalerweise ein Pluszeichen (+).  
  
 Wenn die <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> -Eigenschaftensatz auf `true`, <xref:System.Web.UI.WebControls.TreeView> -Steuerelement zeigt ein Pluszeichen (+) oder Minuszeichen (-) oder ein Platzhalterbild neben einem Knoten, um anzugeben, ob der Knoten erweiterbar, reduzierbar oder nicht erweiterbar ist. Können Sie angeben, benutzerdefinierte Images, indem Sie zuerst die <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> Eigenschaft `TreeViewImageSet.Custom`, festlegen und anschließend die <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>, <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>, und <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> Eigenschaften auf die URLs für die benutzerdefinierten Abbildern. Wenn keine Bilder angegeben sind, werden die Standardbilder verwendet. Um die Erweiterung Knotenerweiterungsindikatoren auszublenden, legen Sie die <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> Eigenschaft `false`.  
  
> [!NOTE]
>  Um sicherzustellen, dass Knoten richtig ausgerichtet der <xref:System.Web.UI.WebControls.TreeView> gesteuert werden, wenn benutzerdefinierte Abbilder verwenden, stellen Sie sicher, dass alle Abbilder, die vom angegebenen der <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>, <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>, und <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> Eigenschaften haben die gleichen Dimensionen.  
  
 Um ein benutzerdefiniertes Bild ordnungsgemäß anzuzeigen, müssen Sie möglicherweise festlegen <xref:System.Web.UI.WebControls.TreeView.ShowLines%2A> auf `false`.  
  
 Wenn Sie ein benutzerdefiniertes Bild für den Indikator erweiterbaren Knoten verwenden, erwägen Sie auch die Einstellung der <xref:System.Web.UI.WebControls.TreeView.ExpandImageToolTip%2A> Eigenschaft, um eine QuickInfo für das Bild anzugeben.  
  
 Der Wert dieser Eigenschaft wird im Ansichtszustand gespeichert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A> Eigenschaft, um ein benutzerdefiniertes Bild für den Indikator erweiterbaren Knoten anzugeben. Für das Codebeispiel angezeigt und das Bild im Steuerelement angezeigt werden, müssen Sie Ihr eigenes Image bereitstellen und die <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> Eigenschaft muss festgelegt werden, um `TreeNodeImageSet.Custom`.  
  
 [!code-aspx-csharp[TreeViewCustomImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCustomImage/CS/treeviewcustomimagecs.aspx#1)]
 [!code-aspx-vb[TreeViewCustomImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCustomImage/VB/treeviewcustomimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowExpandCollapse" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ImageSet" />
        <altmember cref="T:System.Web.UI.WebControls.TreeViewImageSet" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NoExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageToolTip" />
      </Docs>
    </Member>
    <Member MemberName="FindNode">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNode FindNode (string valuePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.WebControls.TreeNode FindNode(string valuePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.FindNode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindNode (valuePath As String) As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::WebControls::TreeNode ^ FindNode(System::String ^ valuePath);" />
      <MemberSignature Language="F#" Value="member this.FindNode : string -&gt; System.Web.UI.WebControls.TreeNode" Usage="treeView.FindNode valuePath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valuePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="valuePath">Der Wertpfad eines Knotens.</param>
        <summary>Ruft das <see cref="T:System.Web.UI.WebControls.TreeNode" />-Objekt im <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelement unter dem Pfad des angegebenen Werts ab.</summary>
        <returns>Der <see cref="T:System.Web.UI.WebControls.TreeNode" /> unter dem Pfad des angegebenen Werts.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.TreeView.FindNode%2A> Methode zum Abrufen eines Knotens aus dem <xref:System.Web.UI.WebControls.TreeView> Steuerelement am angegebenen Wertpfad. Der Wertpfad enthält eine durch Trennzeichen getrennte Liste von Knotenwerten, die einen Pfad aus dem Stammknoten, auf den aktuellen Knoten bilden. Jeder Knoten speichert Wertpfad in der <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> Eigenschaft. Die <xref:System.Web.UI.WebControls.TreeView.PathSeparator%2A> Eigenschaft gibt das Trennzeichen, das zur Trennung der Knotenwerte verwendet wird.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeView.FindNode%2A> Methode zum Abrufen eines Knotens aus dem <xref:System.Web.UI.WebControls.TreeView> Steuerelement.  
  
> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[TreeViewFindNode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFindNode/CS/treeviewfindnodecs.aspx#1)]
 [!code-aspx-vb[TreeViewFindNode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFindNode/VB/treeviewfindnodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ValuePath" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.PathSeparator" />
      </Docs>
    </Member>
    <Member MemberName="GetCallbackResult">
      <MemberSignature Language="C#" Value="protected virtual string GetCallbackResult ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetCallbackResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.GetCallbackResult" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetCallbackResult () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetCallbackResult();" />
      <MemberSignature Language="F#" Value="abstract member GetCallbackResult : unit -&gt; string&#xA;override this.GetCallbackResult : unit -&gt; string" Usage="treeView.GetCallbackResult " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.ICallbackEventHandler.GetCallbackResult</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt das Ergebnis eines Rückrufereignisses zurück, das ein Steuerelement als Ziel hat.</summary>
        <returns>Die Ergebnisse des Rückrufs.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.TreeView> -Steuerelement implementiert die <xref:System.Web.UI.ICallbackEventHandler> Schnittstelle und verwendet die <xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A> zum Abrufen von Daten und die <xref:System.Web.UI.WebControls.TreeView.GetCallbackResult%2A> Methode, um die abgerufenen Daten an das Steuerelement zurückzugeben.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HoverNodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style HoverNodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style HoverNodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HoverNodeStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ HoverNodeStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HoverNodeStyle : System.Web.UI.WebControls.Style" Usage="System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf das <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" />-Objekt ab, mit dem Sie festlegen können, wie ein Knoten dargestellt wird, während ein Mauszeiger darauf positioniert ist.</summary>
        <value>Ein Verweis auf den <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" />, der den Stil eines Knotens darstellt, während der Mauszeiger über diesem positioniert ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A> Eigenschaft, um die Darstellung eines Knotens steuern, wenn der Mauszeiger darauf positioniert ist. Diese Eigenschaft ist schreibgeschützt. Sie können jedoch die Eigenschaften der Festlegen der <xref:System.Web.UI.WebControls.TreeNodeStyle> -Objekt, das zurückgegeben. Die Eigenschaften können deklarativ festgelegt werden, in der Form `Property-Subproperty`, wobei `Subproperty` ist eine Eigenschaft der <xref:System.Web.UI.WebControls.TreeNodeStyle> Objekt (z. B. `HoverNodeStyle-ForeColor`). Die Eigenschaften können auch programmgesteuert in das Formular festgelegt werden `Property.Subproperty` (z. B. `HoverNodeStyle.ForeColor`). Diese Funktion ist nur für Skript-fähige Clients unterstützt.  
  
> [!NOTE]
>  Verwenden der <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A> -Eigenschaft, müssen Sie auch eine `<head>` Element mit einem `runat="server"` Attribut.  
  
 Allgemeine Einstellungen enthalten normalerweise eine benutzerdefinierte Hintergrundfarbe, Vordergrundfarbe Schriftarteigenschaften und Knoten Abstand. Stileigenschaften werden in der folgenden Reihenfolge angewendet:  
  
1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>  
  
2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>, oder <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>, abhängig von den Knotentyp. Wenn die <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> Auflistung definiert ist, es ist zu diesem Zeitpunkt angewendet, überschreiben die anderen Eigenschaften für den Knoten.  
  
3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>  
  
4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>  
  
> [!NOTE]
>  Die stileinstellungen für die <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A> Eigenschaft überschreiben alle entsprechenden Knoten Style-Einstellungen, die in der <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>, oder <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A> Eigenschaft.  
  
 Die <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A> Eigenschaft wird für einen Knoten mit nicht gerendert, dessen <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> -Eigenschaftensatz auf `TreeNodeSelectAction.None`.  
  
 Im Gegensatz zu den <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A> und die <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A> Eigenschaften, die sind <xref:System.Web.UI.WebControls.TreeNodeStyle> Objekte, die <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A> Eigenschaft ist ein <xref:System.Web.UI.WebControls.Style> Objekt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A> Eigenschaft, um die Darstellung eines Knotens steuern, wenn der Mauszeiger darauf positioniert ist. Für dieses Beispiel funktioniert, müssen Sie enthalten eine `<head>` Element mit einem `runat="server"` Attribut.  
  
 [!code-aspx-csharp[TreeViewHoverNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewHoverNodeStyle/CS/treeviewhovernodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewHoverNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewHoverNodeStyle/VB/treeviewhovernodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LevelStyles" />
      </Docs>
    </Member>
    <Member MemberName="ImageSet">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeViewImageSet ImageSet { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.TreeViewImageSet ImageSet" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ImageSet" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageSet As TreeViewImageSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeViewImageSet ImageSet { System::Web::UI::WebControls::TreeViewImageSet get(); void set(System::Web::UI::WebControls::TreeViewImageSet value); };" />
      <MemberSignature Language="F#" Value="member this.ImageSet : System.Web.UI.WebControls.TreeViewImageSet with get, set" Usage="System.Web.UI.WebControls.TreeView.ImageSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeViewImageSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Gruppe von Bildern ab, die für das <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelement verwendet werden soll, oder legt diese fest.</summary>
        <value>Einer der <see cref="T:System.Web.UI.WebControls.TreeViewImageSet" />-Werte. Der Standardwert ist <see langword="TreeViewImageSet.Custom" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> -Eigenschaft an die Gruppe von Bildern für die <xref:System.Web.UI.WebControls.TreeView> Steuerelement. Wählen Sie entweder einen vordefinierten Satz von Bildern für dem Steuerelement ein standard aussehen zu verleihen oder eigene benutzerdefinierte definieren.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> Eigenschaft wirkt sich nicht auf alle formateinstellungen für einen Knoten. Festlegen der entsprechenden Style-Eigenschaft, wie z. B. die <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A> Eigenschaft, wenn Sie benutzerdefinierte Farben und Abstände hinzufügen möchten.  
  
 Die folgende Tabelle enthält die gültigen Werte für die <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> Eigenschaft.  
  
|Satz von Bildern|Beschreibung |  
|---------------|-----------------|  
|`TreeViewImageSet.Arrows`|Ein vordefinierter Satz von, der Pfeil-Images verwendet.|  
|`TreeViewImageSet.BulletedList`|Ein vordefinierter Satz von, der Aufzählungszeichen rautenförmiges Images verwendet.|  
|`TreeViewImageSet.BulletedList2`|Ein vordefinierter Satz von, der quadratische Aufzählungszeichen Images verwendet.|  
|`TreeViewImageSet.BulletedList3`|Ein vordefinierter Satz von unterteilten, diamantförmigen Aufzählungszeichen.|  
|`TreeViewImageSet.BulletedList4`|Ein vordefinierter Satz von wechselnden unterteilten, diamantförmigen Aufzählungszeichen in Größen, die je nach Ebene variieren.|  
|`TreeViewImageSet.Contacts`|Ein vordefinierter Satz von, der MSN Messenger-Images verwendet.|  
|`TreeViewImageSet.Custom`|Ein benutzerdefiniertes Image festgelegt.|  
|`TreeViewImageSet.Events`|Ein vordefinierter Satz von, der Bilder Ereignisprotokoll formatiertes verwendet.|  
|`TreeViewImageSet.Faq`|Ein vordefinierter Satz von, der Bilder FAQ-Stil verwendet.|  
|`TreeViewImageSet.Inbox`|Ein vordefinierter Satz von, der Bilder-e-Mail-Stil verwendet.|  
|`TreeViewImageSet.News`|Ein vordefinierter Satz von, der Bilder Newsgroup-Stil verwendet.|  
|`TreeViewImageSet.Simple`|Ein vordefinierter Satz, der Form "simple" verwendet werden.|  
|`TreeViewImageSet.Simple2`|Ein vordefinierter Satz von, der einfache gefüllte Formen verwendet.|  
|`TreeViewImageSet.Msdn`|Ein vordefinierter Satz von, der MSDN-Images verwendet.|  
|`TreeViewImageSet.WindowsHelp`|Ein vordefinierter Satz von, der Hilfe zu Microsoft Windows-Images verwendet.|  
|`TreeViewImageSet.XPFileExplorer`|Ein vordefinierter Satz von, der in Microsoft Windows XP verfügbaren Windows-Explorer-Images verwendet.|  
  
 Wenn Sie einen benutzerdefinierten Satz von Bildern zu definieren, sollten Sie ein Bild für jede Eigenschaft in der folgenden Tabelle angeben. Andernfalls wird das Standardbild für diese Eigenschaft verwendet.  
  
|Eigenschaft|Beschreibung |  
|--------------|-----------------|  
|<xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>|Die URL zu einem benutzerdefinierten Bild für den Knotenindikator reduzierbaren.|  
|<xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>|Die URL zu einem benutzerdefinierten Bild für den Indikator erweiterbaren Knoten.|  
|<xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A>|Die URL zu einem Ordner, der benutzerdefinierte Bilder für die Zeilen enthält, die Knoten miteinander verbinden.|  
|<xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>|Die URL zu einem benutzerdefinierten Bild für den Indikator nicht erweiterbaren Knoten.|  
  
 Der Wert dieser Eigenschaft wird im Ansichtszustand gespeichert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> Eigenschaft von Bildern in der Windows-Explorer angezeigt der <xref:System.Web.UI.WebControls.TreeView> Steuerelement.  
  
 [!code-aspx-csharp[TreeViewImageSet#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewImageSet/CS/treeviewimagesetcs.aspx#1)]
 [!code-aspx-vb[TreeViewImageSet#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewImageSet/VB/treeviewimagesetvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Die angegebene Gruppe von Bildern entspricht keinem der <see cref="T:System.Web.UI.WebControls.TreeViewImageSet" />-Werte.</exception>
        <altmember cref="T:System.Web.UI.WebControls.TreeViewImageSet" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NoExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LineImagesFolder" />
      </Docs>
    </Member>
    <Member MemberName="LeafNodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeStyle LeafNodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeStyle LeafNodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LeafNodeStyle As TreeNodeStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeStyle ^ LeafNodeStyle { System::Web::UI::WebControls::TreeNodeStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LeafNodeStyle : System.Web.UI.WebControls.TreeNodeStyle" Usage="System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf das <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" />-Objekt ab, mit dem Sie die Darstellung von Endknoten festlegen können.</summary>
        <value>Ein Verweis auf <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" />, der den Stil der Endknoten in <see cref="T:System.Web.UI.WebControls.TreeView" /> darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A> Eigenschaft, um die Darstellung der Endknoten im steuern die <xref:System.Web.UI.WebControls.TreeView> Steuerelement. Diese Eigenschaft ist schreibgeschützt. Sie können jedoch die Eigenschaften der Festlegen der <xref:System.Web.UI.WebControls.TreeNodeStyle> -Objekt wird zurückgegeben. Die Eigenschaften können deklarativ festgelegt werden, in der Form `Property-Subproperty`, wobei `Subproperty` ist eine Eigenschaft der <xref:System.Web.UI.WebControls.TreeNodeStyle> Objekt (z. B. `LeafNodeStyle-ForeColor`). Die Eigenschaften können auch programmgesteuert in das Formular festgelegt werden `Property.Subproperty` (z. B. `LeafNodeStyle.ForeColor`). Allgemeine Einstellungen enthalten normalerweise eine benutzerdefinierte Hintergrundfarbe, Vordergrundfarbe Schriftarteigenschaften und Knoten Abstand. Stileigenschaften werden in der folgenden Reihenfolge angewendet:  
  
1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>  
  
2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>, oder <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>, abhängig von den Knotentyp. Wenn die <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> Auflistung definiert ist, es ist zu diesem Zeitpunkt angewendet, überschreiben die anderen Eigenschaften für den Knoten.  
  
3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>  
  
4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>  
  
 Wenn von Navigationsmenüs Inhalt Stil erstellen, in dem Knoten auf einer bestimmten Ebene unabhängig davon, ob diese untergeordneten Knoten haben die gleiche Darstellung haben sollten, Sie möglicherweise ggf. mit der <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> Eigenschaft anstelle die einzelnen festlegen Stileigenschaften.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A> Eigenschaft, um die Darstellung der Endknoten im steuern die <xref:System.Web.UI.WebControls.TreeView> Steuerelement.  
  
 [!code-aspx-csharp[TreeViewLeafNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewLeafNodeStyle/CS/treeviewleafnodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewLeafNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewLeafNodeStyle/VB/treeviewleafnodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="LevelStyles">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeStyleCollection LevelStyles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeStyleCollection LevelStyles" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.LevelStyles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LevelStyles As TreeNodeStyleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeStyleCollection ^ LevelStyles { System::Web::UI::WebControls::TreeNodeStyleCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LevelStyles : System.Web.UI.WebControls.TreeNodeStyleCollection" Usage="System.Web.UI.WebControls.TreeView.LevelStyles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.TreeNodeStyleCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeStyleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Auflistung von <see cref="T:System.Web.UI.WebControls.Style" />-Objekten ab, die die Knotenstile auf den einzelnen Ebenen der Struktur darstellen.</summary>
        <value>Eine <see cref="T:System.Web.UI.WebControls.StyleCollection" />, die die Knotenstile auf den einzelnen Ebenen der Struktur darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> Auflistung als Alternative zu den einzelnen Formateigenschaften (z. B. die <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A> Eigenschaft) um den Stil der Knoten auf den einzelnen Ebenen der Struktur zu steuern. Das erste Format in der Auflistung entspricht dem Format der Knoten in der ersten Ebene der Struktur. Das zweite Format in der Auflistung entspricht dem Format der Knoten in der zweiten Ebene der Struktur und So weiter. Diese Eigenschaft wird am häufigsten verwendet zum Generieren des Inhalts Stil Navigationsmenüs, sollte für Knoten auf einer bestimmten Ebene unabhängig davon, ob diese untergeordneten Knoten haben die gleiche Darstellung haben.  
  
 Stileigenschaften werden in der folgenden Reihenfolge angewendet:  
  
1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>  
  
2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>, oder <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>, abhängig von den Knotentyp. Wenn die <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> Auflistung definiert ist, es ist zu diesem Zeitpunkt angewendet, überschreiben die anderen Eigenschaften für den Knoten.  
  
3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>  
  
4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> Eigenschaft zum Erstellen eines Navigationsmenüs. Das Steuerelement wird immer vollständig erweitert, mit der Erweiterung Knotenerweiterungsindikatoren und Bilder ausgeblendet. Darüber hinaus die <xref:System.Web.UI.WebControls.TreeNodeStyle.ChildNodesPadding%2A> Eigenschaft wird verwendet, um den Abstand der Knotenebenen steuern.  
  
 [!code-aspx-csharp[TreeViewLevelStyles#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewLevelStyles/CS/treeviewlevelstylescs.aspx#1)]
 [!code-aspx-vb[TreeViewLevelStyles#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewLevelStyles/VB/treeviewlevelstylesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="T:System.Web.UI.WebControls.StyleCollection" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="LineImagesFolder">
      <MemberSignature Language="C#" Value="public string LineImagesFolder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LineImagesFolder" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.LineImagesFolder" />
      <MemberSignature Language="VB.NET" Value="Public Property LineImagesFolder As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LineImagesFolder { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LineImagesFolder : string with get, set" Usage="System.Web.UI.WebControls.TreeView.LineImagesFolder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Pfad zu einem Ordner ab, der die Linienbilder enthält, mit denen untergeordnete Knoten mit übergeordneten Knoten verbunden werden, oder legt diesen fest.</summary>
        <value>Der Pfad zu einem Ordner, der die Linienbilder enthält, durch die Knoten miteinander verbunden werden. Der Standardwert ist eine leere Zeichenfolge (""), die angibt, dass die <see cref="P:System.Web.UI.WebControls.TreeView.LineImagesFolder" />-Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.TreeView> Steuerelementanzeige Zeilen, die untergeordnete Knoten mit übergeordneten Knoten verbunden bei der <xref:System.Web.UI.WebControls.TreeView.ShowLines%2A> -Eigenschaftensatz auf `true`. Wenn Zeilen angezeigt werden, verwenden die <xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A> Eigenschaft, um ein Internet verfügbare Ordner anzugeben, die den Satz von vordefinierten Bilder, die für die Zeilen enthält. Die folgende Tabelle beschreibt die Bilder, mit denen, die <xref:System.Web.UI.WebControls.TreeView> Steuerelement.  
  
|Bild|Beschreibung |  
|-----------|-----------------|  
|Dash.gif|Eine Linie-Image, das neben dem Stammknoten angezeigt wird, wenn nur ein Stammknoten in der Struktur und der Stammknoten vorhanden ist wird ein Blatt.|  
|Dashminus.gif|Ein Minuszeichen (-) neben dem Stammknoten angezeigt wird, wenn es ist nur ein Stammknoten in der Struktur, um anzugeben, dass der Stammknoten erweitert wird.|  
|Dashplus.gif|Ein Pluszeichen (+)-Image, das neben dem Stammknoten angezeigt wird, nur einen Stammknoten in der Struktur, um anzugeben, dass der Stammknoten vorhanden ist.|  
|I.gif|Eine Zeile Bild angezeigt, um benachbarte Knoten miteinander verbinden.|  
|L.gif|Ein Image der Zeile als Nächstes bis zum letzten Knoten in einer Verzweigung angezeigt, wenn der Knoten ein Blatt ist.|  
|Lminus.gif|Eine Zeile Bild angezeigt weiter bis zum letzten Knoten in einer Verzweigung, um anzugeben, dass der Knoten erweitert ist.|  
|Lplus.gif|Eine Zeile Bild angezeigt weiter bis zum letzten Knoten in einer Verzweigung, um anzugeben, dass der Knoten reduziert wird.|  
|Minus.gif|Ein Minuszeichen (-) neben dem ersten Stammknoten in einer Baumstruktur, die mehrere Stammknoten aus, um anzugeben, dass der Knoten erweitert ist enthält angezeigte Bild. Dieses Image enthält eine zusätzliche Zeile nicht und wird erst angezeigt, nachdem der Stammknoten einmal reduziert wurde. Wenn die Seite erstmals geladen wird, wird das Bild Rminus.gif angezeigt.|  
|Noexpand.gif|Ein leerer Abstandshalter-Bild, das neben einem Endknoten angezeigt. Dieses Bild kann Text vertikal auszurichten.|  
|Plus.gif|Das Bild eines Pluszeichen (+) neben dem ersten Stammknoten in einer Baumstruktur, die mehrere Stammknoten gibt an, dass der Knoten enthält angezeigt wird reduziert. Dieses Image enthält eine zusätzliche Zeile nicht und wird erst angezeigt, nachdem der Stammknoten einmal erweitert wurde. Wenn die Seite erstmals geladen wird, wird das Bild Rplus.gif angezeigt.|  
|R.gif|Eine Line-Bild, das neben dem ersten Stammknoten in einer Baumstruktur, die mehrere Stammknoten aus, um anzugeben, dass der Knoten ein Blattknoten enthält angezeigt.|  
|Rminus.gif|Ein Minuszeichen (-) neben dem ersten Stammknoten in einer Baumstruktur, die mehrere Stammknoten aus, um anzugeben, dass der Knoten erweitert ist enthält angezeigte Bild. Dieses Bild enthält eine zusätzliche Zeile und wird nur angezeigt, wenn die Seite erstmals geladen wird. Wenn Sie das Hauptproblem reduziert wurde, nachdem das Bild Minus.gif angezeigt wird.|  
|Rplus.gif|Das Bild eines Pluszeichen (+) neben dem ersten Stammknoten in einer Baumstruktur, die mehrere Stammknoten gibt an, dass der Knoten enthält angezeigt wird reduziert. Dieses Bild enthält eine zusätzliche Zeile und wird nur angezeigt, wenn die Seite erstmals geladen wird. Nachdem Sie das Hauptproblem erweitert wurde, sobald die Plus.gif angezeigt wird.|  
|T.gif|Eine Zeile Bild neben einem Knoten in der Mitte der Baumstruktur (in einer t-Schnittmenge) angezeigt wird, um anzugeben, dass die einen Endknoten handelt.|  
|Tminus.gif|Ein Minuszeichen (-) Bild, das neben einem Knoten in der Mitte der Baumstruktur (in einer t-Schnittmenge) angezeigt wird, um anzugeben, dass der Knoten erweitert ist.|  
|Tplus.gif|Ein Pluszeichen (+)-Image, das neben einem Knoten in der Mitte der Baumstruktur (in einer t-Schnittmenge) angezeigt wird, um anzugeben, dass der Knoten reduziert wird.|  
  
> [!NOTE]
>  Wenn die <xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A> Eigenschaft nicht festgelegt ist, die <xref:System.Web.UI.WebControls.TreeView> Steuerelement verwendet die integrierte, Standardbilder (20 x 20 Pixel).  
  
 Einige visuelle Designer, z. B. Microsoft Visual Studio bieten Tools, mit der Bilder zu generieren.  
  
 Zur Laufzeit wird nicht gekippt. benutzerdefinierte Bilder für rechts-nach-links angezeigt. Unterstützung von links nach rechts und rechts-nach-links-Webseiten, müssen Sie die Bild-Sets für beide Richtungen erstellen.  
  
 Der Wert dieser Eigenschaft wird im Ansichtszustand gespeichert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A> Eigenschaft, um den Ordner anzugeben, die den anzuzeigenden Bilder Zeile enthält die <xref:System.Web.UI.WebControls.TreeView> Steuerelement. Verwenden Sie zum Arbeiten mit diesem Beispiel wird die Zeile Designertools zum Erstellen eines Satzes von Liniengrafiken. Fügen sie in einen Ordner namens LineImages in das Verzeichnis für die beispielanwendung.  
  
 [!code-aspx-csharp[TreeViewLineImagesFolderUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewLineImagesFolderUrl/CS/treeviewlineimagesfolderurlcs.aspx#1)]
 [!code-aspx-vb[TreeViewLineImagesFolderUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewLineImagesFolderUrl/VB/treeviewlineimagesfolderurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowLines" />
        <altmember cref="T:System.Web.UI.WebControls.TreeViewImageSet" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NoExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="LoadPostData">
      <MemberSignature Language="C#" Value="protected virtual bool LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection);" />
      <MemberSignature Language="F#" Value="abstract member LoadPostData : string * System.Collections.Specialized.NameValueCollection -&gt; bool&#xA;override this.LoadPostData : string * System.Collections.Specialized.NameValueCollection -&gt; bool" Usage="treeView.LoadPostData (postDataKey, postCollection)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">Die Schlüsselkennung für das Steuerelement.</param>
        <param name="postCollection">Die Sammlung aller eingehenden Namenswerte.</param>
        <summary>Verarbeitet Postbackdaten für das <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelement.</summary>
        <returns>
          <see langword="true" />, wenn sich der Zustand des <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelements aufgrund des Postbacks ändert, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das ASP.NET-Seitenframework verfolgt alle Serversteuerelemente, die zurückgeben `true` aus der <xref:System.Web.UI.WebControls.TreeView.LoadPostData%2A> -Methodenaufruf, und ruft dann die <xref:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent%2A> -Methode für diese Steuerelemente.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="treeView.LoadViewState state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">Ein Objekt, das die gespeicherten Ansichtszustandswerte für das Steuerelement enthält.</param>
        <summary>Lädt den zuvor gespeicherten Ansichtszustand des <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxDataBindDepth">
      <MemberSignature Language="C#" Value="public int MaxDataBindDepth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxDataBindDepth" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.MaxDataBindDepth" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxDataBindDepth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxDataBindDepth { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxDataBindDepth : int with get, set" Usage="System.Web.UI.WebControls.TreeView.MaxDataBindDepth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die maximale Anzahl von Strukturebenen ab, die an das <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelement gebunden werden können, oder legt diese fest.</summary>
        <value>Die maximale Anzahl von Strukturebenen, die an das <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelement gebunden werden sollen. Der Standardwert ist -1, d. h., alle Strukturebenen in der Datenquelle werden an das Steuerelement gebunden.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Beim Binden der <xref:System.Web.UI.WebControls.TreeView> Steuerelement mit einer Datenquelle mithilfe der <xref:System.Web.UI.WebControls.TreeView.MaxDataBindDepth%2A> -Eigenschaft können Sie die Anzahl der Strukturebenen zum Binden an das Steuerelement zu begrenzen. Z. B. zum Festlegen dieser Eigenschaft `2` bindet nur den Stammknoten und alle Knoten direkt unter dem Stammknoten der <xref:System.Web.UI.WebControls.TreeView> Steuerelement. Alle verbleibende Knoten in der Datenquelle werden ignoriert.  
  
> [!IMPORTANT]
>  Ein böswilliger Benutzer kann einen Rückruf Request erstellen und Abrufen von Daten für den Knoten des der <xref:System.Web.UI.WebControls.TreeView> Steuerelement, das der Entwickler der Seite nicht angezeigt wird. Aus diesem Grund muss die Sicherheit der Daten von der Datenquelle implementiert werden. Verwenden Sie nicht die <xref:System.Web.UI.WebControls.TreeView.MaxDataBindDepth%2A> Eigenschaft, um Daten auszublenden.  
  
 Der Wert dieser Eigenschaft wird im Ansichtszustand gespeichert.  
  
   
  
## Examples  
 Dieser Abschnitt enthält zwei Codebeispiele. Im ersten Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeView.MaxDataBindDepth%2A> -Eigenschaft nur die ersten beiden Knotenebenen (Tiefen 0 und 1) zum Binden der <xref:System.Web.UI.WebControls.TreeView> Steuerelement. Das zweite Codebeispiel im ersten Codebeispiel wird XML-Daten bereit.  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeView.MaxDataBindDepth%2A> -Eigenschaft nur die ersten beiden Knotenebenen (Tiefen 0 und 1) zum Binden der <xref:System.Web.UI.WebControls.TreeView> Steuerelement. Alle Ebenen in der Datenquelle werden ignoriert. Für dieses Beispiel ordnungsgemäß funktioniert müssen Sie die XML-Beispieldaten bereitgestellt, die nach diesem Codebeispiel, in eine Datei mit dem Namen Book.xml kopieren.  
  
 [!code-aspx-csharp[TreeViewMaxDataBindDepth#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewMaxDataBindDepth/CS/treeviewmaxdatabinddepthcs.aspx#1)]
 [!code-aspx-vb[TreeViewMaxDataBindDepth#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewMaxDataBindDepth/VB/treeviewmaxdatabinddepthvb.aspx#1)]  
  
 Im folgenden Codebeispiel wird der im vorangehenden Codebeispiel wird XML-Daten bereit.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der ausgewählte Wert ist kleiner als <see langword="-1" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandDepth" />
      </Docs>
    </Member>
    <Member MemberName="NodeIndent">
      <MemberSignature Language="C#" Value="public int NodeIndent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NodeIndent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.NodeIndent" />
      <MemberSignature Language="VB.NET" Value="Public Property NodeIndent As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NodeIndent { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.NodeIndent : int with get, set" Usage="System.Web.UI.WebControls.TreeView.NodeIndent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(20)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Einzugsgröße (in Pixel) für die untergeordneten Knoten des <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelements ab oder legt diese fest.</summary>
        <value>Der Abstand (in Pixel) zwischen dem linken Rand der untergeordneten Knoten und dem linken Rand ihrer übergeordneten Knoten. Die Standardeinstellung ist 20.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.TreeView.NodeIndent%2A> Eigenschaft, um die Größe des Abstands zwischen dem linken Rand eines untergeordneten Knotens und dem linken Rand des übergeordneten Knotens zu steuern.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.TreeView.NodeIndent%2A> Eigenschaft wirkt sich auf jeden untergeordneten Knoten in der <xref:System.Web.UI.WebControls.TreeView> Steuerelement. Es ist nicht möglich, die Einzugsgröße für jeden Knoten einzeln zu steuern.  
  
 Der Wert dieser Eigenschaft wird im Ansichtszustand gespeichert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeView.NodeIndent%2A> Eigenschaft, um den Einzug der untergeordneten Knoten zu steuern.  
  
 [!code-aspx-csharp[TreeViewNodeIndent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewNodeIndent/CS/treeviewnodeindentcs.aspx#1)]
 [!code-aspx-vb[TreeViewNodeIndent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewNodeIndent/VB/treeviewnodeindentvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeStyle.ChildNodesPadding" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeStyle.HorizontalPadding" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeStyle.NodeSpacing" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeStyle.VerticalPadding" />
      </Docs>
    </Member>
    <Member MemberName="Nodes">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeCollection Nodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeCollection Nodes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.Nodes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Nodes As TreeNodeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeCollection ^ Nodes { System::Web::UI::WebControls::TreeNodeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Nodes : System.Web.UI.WebControls.TreeNodeCollection" Usage="System.Web.UI.WebControls.TreeView.Nodes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.TreeNodeCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Auflistung der <see cref="T:System.Web.UI.WebControls.TreeNode" />-Objekte ab, die die Stammknoten im <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelement darstellt.</summary>
        <value>Eine <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />, die die Stammknoten in der <see cref="T:System.Web.UI.WebControls.TreeView" /> enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> Eigenschaft, um eine <xref:System.Web.UI.WebControls.TreeNodeCollection> Objekt, das alle Stammknoten in der Struktur enthält. Diese Auflistung wird häufig verwendet, schnell durchlaufen alle Stammknoten oder auf einen bestimmten Stammknoten in der Struktur zuzugreifen.  
  
> [!NOTE]
>  Eine typische Struktur verfügt über nur einen Stammknoten; Sie können jedoch mehrere Stammknoten zum Hinzufügen der <xref:System.Web.UI.WebControls.TreeView> Steuerelement.  
  
 Die <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> Eigenschaft kann auch verwendet werden, um den Stammknoten in der Struktur programmgesteuert zu verwalten. Sie können hinzufügen, einfügen, entfernen und abrufen <xref:System.Web.UI.WebControls.TreeNode> Objekte aus der Auflistung. Alle Änderungen an der Auflistung werden automatisch wiedergegeben, der <xref:System.Web.UI.WebControls.TreeView> Steuerelement nach dem nächsten Roundtrip zum Server.  
  
 Verwenden Sie die untergeordneten Knoten von einem Stammknoten für den Zugriff auf die <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> -Eigenschaft des Knotens. Verwenden der <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> -Eigenschaft jedes nachfolgende übergeordneten Knotens die Knotenebenen navigieren.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> Eigenschaft, um die Struktur durchlaufen.  
  
 [!code-aspx-csharp[TreeNodeCollectionCount#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionCount/CS/treenodecollectioncountcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionCount#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionCount/VB/treenodecollectioncountvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeCollection" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      </Docs>
    </Member>
    <Member MemberName="NodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeStyle NodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeStyle NodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NodeStyle As TreeNodeStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeStyle ^ NodeStyle { System::Web::UI::WebControls::TreeNodeStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NodeStyle : System.Web.UI.WebControls.TreeNodeStyle" Usage="System.Web.UI.WebControls.TreeView.NodeStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf das <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" />-Objekt ab, mit dem Sie die Standarddarstellung der Knoten im <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelement festlegen können.</summary>
        <value>Ein Verweis auf den <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" />, der den Standardstil eines Knotens darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A> Eigenschaft, um die standarddarstellung eines Knotens in steuern die <xref:System.Web.UI.WebControls.TreeView> Steuerelement. Diese Eigenschaft ist schreibgeschützt. Sie können jedoch die Eigenschaften der Festlegen der <xref:System.Web.UI.WebControls.TreeNodeStyle> -Objekt wird zurückgegeben. Die Eigenschaften können deklarativ festgelegt werden, in der Form `Property-Subproperty`, wobei `Subproperty` ist eine Eigenschaft der <xref:System.Web.UI.WebControls.TreeNodeStyle> Objekt (z. B. `NodeStyle-ForeColor`). Die Eigenschaften können auch programmgesteuert in das Formular festgelegt werden `Property.Subproperty` (z. B. `NodeStyle.ForeColor`). Allgemeine Einstellungen enthalten normalerweise eine benutzerdefinierte Hintergrundfarbe, Vordergrundfarbe Schriftarteigenschaften und Knoten Abstand. Stileigenschaften werden in der folgenden Reihenfolge angewendet:  
  
1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>  
  
2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>, oder <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>, abhängig von den Knotentyp. Wenn die <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> Auflistung definiert ist, es ist zu diesem Zeitpunkt angewendet, überschreiben die anderen Eigenschaften für den Knoten.  
  
3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>  
  
4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>  
  
> [!NOTE]
>  Die Einstellungen des entsprechenden Knotens Stil in die <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>, oder <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A> Eigenschaften überschreiben, das die formateinstellungen des der <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A> Eigenschaft.  
  
 Wenn müssen Sie die Tabelle mit Inhalt-Stil Navigationsmenüs generieren, in dem Knoten auf einer bestimmten Ebene unabhängig davon, ob diese untergeordneten Knoten haben die gleiche Darstellung haben sollten, sollten Sie mithilfe der <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> -Eigenschaft statt die einzelnen festlegen Stileigenschaften.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A> -Eigenschaft zur Steuerung der Darstellung von Knoten in der <xref:System.Web.UI.WebControls.TreeView> Steuerelement.  
  
 [!code-aspx-csharp[TreeViewNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewNodeStyle/CS/treeviewnodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewNodeStyle/VB/treeviewnodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="NodeWrap">
      <MemberSignature Language="C#" Value="public bool NodeWrap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NodeWrap" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.NodeWrap" />
      <MemberSignature Language="VB.NET" Value="Public Property NodeWrap As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NodeWrap { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NodeWrap : bool with get, set" Usage="System.Web.UI.WebControls.TreeView.NodeWrap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob Text in einem Knoten in die nächste Zeile umbrochen wird, wenn nicht genügend Platz vorhanden ist, oder legt diesen Wert fest.</summary>
        <value>
          <see langword="true" />, wenn der Text umbrochen werden soll, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.TreeView.NodeWrap%2A> Eigenschaft, um anzugeben, ob der Text, der in jedem Knoten angezeigt wird, das umbrochen wird, wenn kein Speicherplatz mehr verfügbar.  
  
 Der Wert dieser Eigenschaft wird im Ansichtszustand gespeichert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeView.NodeWrap%2A> Eigenschaft, um den Text der umschließen die <xref:System.Web.UI.WebControls.TreeView> Steuerelement.  
  
 [!code-aspx-csharp[TreeViewNodeWrap#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewNodeWrap/CS/treeviewnodewrapcs.aspx#1)]
 [!code-aspx-vb[TreeViewNodeWrap#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewNodeWrap/VB/treeviewnodewrapvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Font" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeIndent" />
      </Docs>
    </Member>
    <Member MemberName="NoExpandImageUrl">
      <MemberSignature Language="C#" Value="public string NoExpandImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NoExpandImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.NoExpandImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property NoExpandImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NoExpandImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NoExpandImageUrl : string with get, set" Usage="System.Web.UI.WebControls.TreeView.NoExpandImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die URL zu einem benutzerdefinierten Bild für den Indikator eines nicht erweiterbaren Knotens ab oder legt diesen fest.</summary>
        <value>Die URL zu einem benutzerdefinierten Bild, das für nicht erweiterbare Knoten angezeigt werden soll. Der Standardwert ist eine leere Zeichenfolge (""), die das standardmäßige leere Bild anzeigt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A> Eigenschaft, um ein benutzerdefiniertes Bild für den Indikator nicht erweiterbaren Knoten anzugeben. Das Indikatorbild nicht erweiterbaren Knoten (oder der Platzhalter) wird neben Blattknoten (anstelle der erweiterbaren und reduzierbaren Knoten Indikatoren) angezeigt, um die Blattknoten mit übergeordneten oder Stamm Knoten ausgerichtet festgelegt werden.  
  
 Wenn die <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> -Eigenschaftensatz auf `true`, <xref:System.Web.UI.WebControls.TreeView> -Steuerelement zeigt ein Pluszeichen (+) oder Minuszeichen (-) oder ein Platzhalterbild neben einem Knoten, um anzugeben, ob der Knoten erweiterbar, reduzierbar oder nicht erweiterbar ist. Können Sie angeben, benutzerdefinierte Images, indem Sie zuerst die <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> Eigenschaft `TreeViewImageSet.Custom`, festlegen und anschließend die <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>, <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>, und <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> Eigenschaften auf die URLs benutzerdefinierter Images. Wenn keine Bilder angegeben sind, werden die Standardbilder verwendet. Um die Erweiterung Knotenerweiterungsindikatoren auszublenden, legen Sie die <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> Eigenschaft `false`.  
  
> [!NOTE]
>  Um sicherzustellen, dass Knoten richtig ausgerichtet der <xref:System.Web.UI.WebControls.TreeView> gesteuert werden, wenn benutzerdefinierte Abbilder verwenden, stellen Sie sicher, dass alle Abbilder, die vom angegebenen der <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>, <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>, und <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> Eigenschaften haben die gleichen Dimensionen.  
  
 Der Wert dieser Eigenschaft wird im Ansichtszustand gespeichert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A> Eigenschaft, um ein benutzerdefiniertes Bild für den Indikator nicht erweiterbaren Knoten anzugeben. Für das Codebeispiel angezeigt und das Bild im Steuerelement angezeigt werden, müssen Sie Ihr eigenes Image bereitstellen und die <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> Eigenschaft muss festgelegt werden, um `TreeNodeImageSet.Custom`.  
  
 [!code-aspx-csharp[TreeViewCustomImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCustomImage/CS/treeviewcustomimagecs.aspx#1)]
 [!code-aspx-vb[TreeViewCustomImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCustomImage/VB/treeviewcustomimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowExpandCollapse" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ImageSet" />
        <altmember cref="T:System.Web.UI.WebControls.TreeViewImageSet" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="treeView.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.Control.Init" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.TreeView.OnInit%2A> Methode wird aufgerufen, indem Sie die <xref:System.Web.UI.WebControls.TreeView> Steuerelement zum Auslösen der <xref:System.Web.UI.Control.Init> Ereignis. Es wird im Allgemeinen von Entwicklern verwendet, beim Erweitern der <xref:System.Web.UI.WebControls.TreeView> Klasse.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Web.UI.WebControls.TreeView.OnInit%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Zum Überschreiben der <see cref="M:System.Web.UI.WebControls.TreeView.OnInit(System.EventArgs)" /> Methode in einer abgeleiteten Klasse aufrufen werden die <see cref="M:System.Web.UI.WebControls.TreeView.OnInit(System.EventArgs)" /> Methode für die Basisklasse, damit Delegaten registrierte das Ereignis empfangen.</para>
        </block>
        <altmember cref="E:System.Web.UI.Control.Init" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="treeView.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.Control.PreRender" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.TreeView.OnPreRender%2A> Methode wird überschrieben, um das für Postbacks registriert. Wenn Clientskript aktiviert ist, rendert sie auch das notwendige Skript und ausgeblendete Felder.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 Mit der <xref:System.Web.UI.WebControls.TreeView.OnPreRender%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Zum Überschreiben der <see cref="M:System.Web.UI.WebControls.TreeView.OnPreRender(System.EventArgs)" /> Methode in einer abgeleiteten Klasse aufrufen werden die <see cref="M:System.Web.UI.WebControls.TreeView.OnPreRender(System.EventArgs)" /> Methode für die Basisklasse, damit Delegaten registrierte das Ereignis empfangen.</para>
        </block>
        <altmember cref="E:System.Web.UI.Control.PreRender" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectedNodeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectedNodeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectedNodeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectedNodeChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectedNodeChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelectedNodeChanged : EventArgs -&gt; unit&#xA;override this.OnSelectedNodeChanged : EventArgs -&gt; unit" Usage="treeView.OnSelectedNodeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.TreeView.SelectedNodeChanged" />-Ereignis des <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelements aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> Ereignis wird ausgelöst, wenn ein Knoten, in ausgewählt wird der <xref:System.Web.UI.WebControls.TreeView> Steuerelement. Dadurch können Sie eine Ereignisbehandlungsmethode bereitstellen, die eine benutzerdefinierte Routine ausführt, z. B. den angezeigten Inhalt aktualisieren, wenn dieses Ereignis tritt auf.  
  
 Sie können optional Festlegen der <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> Eigenschaft eines Knotens aus, um anzugeben, welches Ereignis ausgelöst wird, wenn der Knoten ausgewählt ist.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A> wird nicht für einen Knoten mit gerendert seine <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> -Eigenschaftensatz auf `TreeNodeSelectAction.None`.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 Mit der <xref:System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Zum Überschreiben der <see cref="M:System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged(System.EventArgs)" /> Methode in einer abgeleiteten Klasse aufrufen werden die <see cref="M:System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged(System.EventArgs)" /> Methode für die Basisklasse, damit Delegaten registrierte das Ereignis empfangen.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.TreeView.SelectedNodeChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnTreeNodeCheckChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnTreeNodeCheckChanged (System.Web.UI.WebControls.TreeNodeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTreeNodeCheckChanged(class System.Web.UI.WebControls.TreeNodeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTreeNodeCheckChanged (e As TreeNodeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTreeNodeCheckChanged(System::Web::UI::WebControls::TreeNodeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTreeNodeCheckChanged : System.Web.UI.WebControls.TreeNodeEventArgs -&gt; unit&#xA;override this.OnTreeNodeCheckChanged : System.Web.UI.WebControls.TreeNodeEventArgs -&gt; unit" Usage="treeView.OnTreeNodeCheckChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.TreeNodeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.TreeNodeEventArgs" />, das Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged" />-Ereignis des <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelements aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged> Ereignis wird ausgelöst, wenn das Kontrollkästchen in der <xref:System.Web.UI.WebControls.TreeView> -Steuerelement ändert den Zustand zwischen Übertragungen zum Server. Dadurch können Sie eine Ereignisbehandlungsmethode bereitstellen, die eine benutzerdefinierte Routine ausführt, z. B. eine Datenbank oder der angezeigte Inhalt aktualisieren, wenn dieses Ereignis tritt auf.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 Mit der <xref:System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Zum Überschreiben der <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged(System.Web.UI.WebControls.TreeNodeEventArgs)" /> werden Sie in einer abgeleiteten Klasse Aufrufen der <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged(System.Web.UI.WebControls.TreeNodeEventArgs)" /> Methode für die Basisklasse, damit Delegaten registrierte das Ereignis empfangen.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnTreeNodeCollapsed">
      <MemberSignature Language="C#" Value="protected virtual void OnTreeNodeCollapsed (System.Web.UI.WebControls.TreeNodeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTreeNodeCollapsed(class System.Web.UI.WebControls.TreeNodeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTreeNodeCollapsed (e As TreeNodeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTreeNodeCollapsed(System::Web::UI::WebControls::TreeNodeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTreeNodeCollapsed : System.Web.UI.WebControls.TreeNodeEventArgs -&gt; unit&#xA;override this.OnTreeNodeCollapsed : System.Web.UI.WebControls.TreeNodeEventArgs -&gt; unit" Usage="treeView.OnTreeNodeCollapsed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.TreeNodeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.TreeNodeEventArgs" />, das Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed" />-Ereignis des <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelements aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed> Ereignis wird ausgelöst, wenn ein Knoten, in reduziert wird der <xref:System.Web.UI.WebControls.TreeView> Steuerelement. Dadurch können Sie eine Ereignisbehandlungsmethode bereitstellen, die eine benutzerdefinierte Routine ausführt, wenn dieses Ereignis tritt auf.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 Mit der <xref:System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Zum Überschreiben der <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed(System.Web.UI.WebControls.TreeNodeEventArgs)" /> Methode in einer abgeleiteten Klasse aufrufen werden die <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed(System.Web.UI.WebControls.TreeNodeEventArgs)" /> Methode für die Basisklasse, damit Delegaten registrierte das Ereignis empfangen.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed" />
      </Docs>
    </Member>
    <Member MemberName="OnTreeNodeDataBound">
      <MemberSignature Language="C#" Value="protected virtual void OnTreeNodeDataBound (System.Web.UI.WebControls.TreeNodeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTreeNodeDataBound(class System.Web.UI.WebControls.TreeNodeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTreeNodeDataBound (e As TreeNodeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTreeNodeDataBound(System::Web::UI::WebControls::TreeNodeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTreeNodeDataBound : System.Web.UI.WebControls.TreeNodeEventArgs -&gt; unit&#xA;override this.OnTreeNodeDataBound : System.Web.UI.WebControls.TreeNodeEventArgs -&gt; unit" Usage="treeView.OnTreeNodeDataBound e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.TreeNodeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.TreeNodeEventArgs" />, das Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.TreeView.TreeNodeDataBound" />-Ereignis des <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelements aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.TreeView.TreeNodeDataBound> Ereignis wird ausgelöst, wenn ein Datenelement, auf einen Knoten in gebunden ist der <xref:System.Web.UI.WebControls.TreeView> Steuerelement. Dadurch können Sie eine Ereignisbehandlungsmethode bereitstellen, die eine benutzerdefinierte Routine ausführt, wenn dieses Ereignis tritt auf.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 Mit der <xref:System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Zum Überschreiben der <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound(System.Web.UI.WebControls.TreeNodeEventArgs)" /> Methode in einer abgeleiteten Klasse aufrufen werden die <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound(System.Web.UI.WebControls.TreeNodeEventArgs)" /> Methode für die Basisklasse, damit Delegaten registrierte das Ereignis empfangen.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeDataBound" />
      </Docs>
    </Member>
    <Member MemberName="OnTreeNodeExpanded">
      <MemberSignature Language="C#" Value="protected virtual void OnTreeNodeExpanded (System.Web.UI.WebControls.TreeNodeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTreeNodeExpanded(class System.Web.UI.WebControls.TreeNodeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTreeNodeExpanded (e As TreeNodeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTreeNodeExpanded(System::Web::UI::WebControls::TreeNodeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTreeNodeExpanded : System.Web.UI.WebControls.TreeNodeEventArgs -&gt; unit&#xA;override this.OnTreeNodeExpanded : System.Web.UI.WebControls.TreeNodeEventArgs -&gt; unit" Usage="treeView.OnTreeNodeExpanded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.TreeNodeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.TreeNodeEventArgs" />, das Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.TreeView.TreeNodeExpanded" />-Ereignis des <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelements aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> Ereignis wird ausgelöst, wenn ein Knoten erweitert die <xref:System.Web.UI.WebControls.TreeView> Steuerelement. Dadurch können Sie eine Ereignisbehandlungsmethode bereitstellen, die eine benutzerdefinierte Routine ausführt, wenn dieses Ereignis tritt auf.  
  
> [!NOTE]
>  Wenn die <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> für einen Knoten ist-Eigenschaftensatz auf <xref:System.Web.UI.WebControls.TreeNodeSelectAction.Expand> oder <xref:System.Web.UI.WebControls.TreeNodeSelectAction.SelectExpand>, die <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> Ereignis wird auch ausgelöst, wenn in diesem Knoten geklickt wird die <xref:System.Web.UI.WebControls.TreeView> Steuerelement.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 Mit der <xref:System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Zum Überschreiben der <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded(System.Web.UI.WebControls.TreeNodeEventArgs)" /> Methode in einer abgeleiteten Klasse aufrufen werden die <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded(System.Web.UI.WebControls.TreeNodeEventArgs)" /> Methode für die Basisklasse, damit Delegaten registrierte das Ereignis empfangen.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeExpanded" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.SelectAction" />
      </Docs>
    </Member>
    <Member MemberName="OnTreeNodePopulate">
      <MemberSignature Language="C#" Value="protected virtual void OnTreeNodePopulate (System.Web.UI.WebControls.TreeNodeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTreeNodePopulate(class System.Web.UI.WebControls.TreeNodeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnTreeNodePopulate(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTreeNodePopulate (e As TreeNodeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTreeNodePopulate(System::Web::UI::WebControls::TreeNodeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTreeNodePopulate : System.Web.UI.WebControls.TreeNodeEventArgs -&gt; unit&#xA;override this.OnTreeNodePopulate : System.Web.UI.WebControls.TreeNodeEventArgs -&gt; unit" Usage="treeView.OnTreeNodePopulate e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.TreeNodeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.TreeNodeEventArgs" />, das Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" />-Ereignis des <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelements aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Manchmal ist es nicht praktikabel ist, die statisch vorzudefinieren die Baumstruktur aufgrund der Größe der Daten oder benutzerdefinierten Inhalt, der auf eine Benutzereingabe abhängig ist. Aus diesem Grund die <xref:System.Web.UI.WebControls.TreeView> Steuerelement unterstützt dynamische Knoten Auffüllung. Wenn die <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> -Eigenschaft für einen Knoten auf festgelegt ist `true`, dieser Knoten wird aufgefüllt, zur Laufzeit, wenn der Knoten erweitert ist.  
  
 Um einen Knoten dynamisch aufzufüllen, legen Sie zuerst die <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> Eigenschaft des Knotens mit `true`. Als Nächstes definieren Sie eine Ereignisbehandlungsmethode für den <xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate> Ereignis, das den Knoten programmgesteuert auffüllt. Eine typische Ereignisbehandlungsmethode Knotendaten aus einer Datenquelle abgerufen, fügt die Daten in eine Knotenstruktur und fügt dann die Knotenstruktur, die <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> Auflistung des Knotens, die aufgefüllt werden. Eine Knotenstruktur wird erstellt, indem <xref:System.Web.UI.WebControls.TreeNode> -Objekte und die <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> Auflistung von einem übergeordneten Knoten.  
  
> [!NOTE]
>  Wenn die <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> -Eigenschaft für einen Knoten auf festgelegt ist `true`, muss der Knoten dynamisch aufgefüllt werden. Sie können nicht deklarativ einen anderen Knoten darunter geschachtelt; andernfalls tritt ein Fehler auf der Seite.  
  
 Unterstützte Browser (Microsoft Internet Explorer 4.0-kompatiblen Browser und höher) auch clientseitige Knoten Population nutzen können. Wenn aktiviert, wird dadurch die <xref:System.Web.UI.WebControls.TreeView> Steuerelement um einen Knoten auf dem Client dynamisch aufgefüllt, wenn der Knoten erweitert ist, wird verhindert, dass die Notwendigkeit zum Zurücksenden an den Server. Weitere Informationen zum Auffüllen von Client-Side-Knoten, finden Sie unter <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 Mit der <xref:System.Web.UI.WebControls.TreeView.OnTreeNodePopulate%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Zum Überschreiben der <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodePopulate(System.Web.UI.WebControls.TreeNodeEventArgs)" /> Methode in einer abgeleiteten Klasse aufrufen werden die <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodePopulate(System.Web.UI.WebControls.TreeNodeEventArgs)" /> Methode für die Basisklasse, damit Delegaten registrierte das Ereignis empfangen.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.PopulateOnDemand" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.EnableClientScript" />
      </Docs>
    </Member>
    <Member MemberName="ParentNodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeStyle ParentNodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeStyle ParentNodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParentNodeStyle As TreeNodeStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeStyle ^ ParentNodeStyle { System::Web::UI::WebControls::TreeNodeStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ParentNodeStyle : System.Web.UI.WebControls.TreeNodeStyle" Usage="System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf das <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" />-Objekt ab, mit dem Sie die Darstellung der übergeordneten Knoten im <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelement festlegen können.</summary>
        <value>Ein Verweis auf <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" />, der den Stil der übergeordneten Knoten in <see cref="T:System.Web.UI.WebControls.TreeView" /> darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A> -Eigenschaft zur Steuerung der Darstellung der übergeordneten Knoten in der <xref:System.Web.UI.WebControls.TreeView> Steuerelement. Diese Eigenschaft ist schreibgeschützt. Sie können jedoch die Eigenschaften der Festlegen der <xref:System.Web.UI.WebControls.TreeNodeStyle> -Objekt wird zurückgegeben. Die Eigenschaften können deklarativ festgelegt werden, in der Form `Property-Subproperty`, wobei `Subproperty` ist eine Eigenschaft der <xref:System.Web.UI.WebControls.TreeNodeStyle> Objekt (z. B. `ParentNodeStyle-ForeColor`). Die Eigenschaften können auch programmgesteuert in das Formular festgelegt werden `Property.Subproperty` (z. B. `ParentNodeStyle.ForeColor`). Allgemeine Einstellungen enthalten normalerweise eine benutzerdefinierte Hintergrundfarbe, Vordergrundfarbe Schriftarteigenschaften und Knoten Abstand. Stileigenschaften werden in der folgenden Reihenfolge angewendet:  
  
1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>  
  
2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>, oder <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>, abhängig von den Knotentyp. Wenn die <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> Auflistung definiert ist, es ist zu diesem Zeitpunkt angewendet, überschreiben die anderen Eigenschaften für den Knoten.  
  
3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>  
  
4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>  
  
 Wenn müssen Sie die Tabelle mit Inhalt-Stil Navigationsmenüs generieren, in dem Knoten auf einer bestimmten Ebene unabhängig davon, ob diese untergeordneten Knoten haben die gleiche Darstellung haben sollten, sollten Sie mithilfe der <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> -Eigenschaft statt die einzelnen festlegen Stileigenschaften.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A> -Eigenschaft zur Steuerung der Darstellung der übergeordneten Knoten in der <xref:System.Web.UI.WebControls.TreeView> Steuerelement.  
  
 [!code-aspx-csharp[TreeViewParentNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewParentNodeStyle/CS/treeviewparentnodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewParentNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewParentNodeStyle/VB/treeviewparentnodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="PathSeparator">
      <MemberSignature Language="C#" Value="public char PathSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char PathSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.PathSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property PathSeparator As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char PathSeparator { char get(); void set(char value); };" />
      <MemberSignature Language="F#" Value="member this.PathSeparator : char with get, set" Usage="System.Web.UI.WebControls.TreeView.PathSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue('/')</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Zeichen ab, mit dem die durch die <see cref="P:System.Web.UI.WebControls.TreeNode.ValuePath" />-Eigenschaft angegebenen Knotenwerte begrenzt werden, oder legt dieses Zeichen fest.</summary>
        <value>Das Zeichen, mit dem die in der <see cref="P:System.Web.UI.WebControls.TreeNode.ValuePath" />-Eigenschaft angegebenen Knotenwerte begrenzt werden. Der Standardwert ist ein Schrägstrich (/).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> Eigenschaft enthält eine durch Trennzeichen getrennte Liste von Knotenwerten, die einen Pfad aus dem Stammknoten, auf den aktuellen Knoten bilden. Verwenden der <xref:System.Web.UI.WebControls.TreeView.PathSeparator%2A> Eigenschaft, um anzugeben, das Trennzeichen Zeichen wird verwendet, um die Knotenwerte getrennt. Dieser Wert wird häufig verwendet, wenn die Liste für die einzelnen Werte zu analysieren.  
  
 Je nach den in angezeigten Text die <xref:System.Web.UI.WebControls.TreeView> -Steuerelement, das Trennzeichen müssen möglicherweise geändert werden, um Konflikte zu vermeiden. Z. B. Wenn Sie ein Komma als Trennzeichen festlegen, sollten der angezeigte Text keine Kommas enthalten. andernfalls die <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> Eigenschaft kann nicht ordnungsgemäß analysiert werden.  
  
 Der Wert dieser Eigenschaft wird im Ansichtszustand gespeichert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeView.PathSeparator%2A> Eigenschaft an, dass das Trennzeichen für die <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> Eigenschaft eines Knotens. Dieser Wert wird dann zum Analysieren der <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> -Eigenschaft für die einzelnen Werte.  
  
 [!code-aspx-csharp[TreeViewPathSeparator2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewPathSeparator2/CS/treeviewpathseparatorcs.aspx#1)]
 [!code-aspx-vb[TreeViewPathSeparator2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewPathSeparator2/VB/treeviewpathseparatorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ValuePath" />
      </Docs>
    </Member>
    <Member MemberName="PerformDataBinding">
      <MemberSignature Language="C#" Value="protected internal override void PerformDataBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void PerformDataBinding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.PerformDataBinding" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub PerformDataBinding ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void PerformDataBinding();" />
      <MemberSignature Language="F#" Value="override this.PerformDataBinding : unit -&gt; unit" Usage="treeView.PerformDataBinding " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt alle auf der Datenquelle basierenden Knoten.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.TreeView.PerformDataBinding%2A> Methode ist eine Hilfsmethode, die aufgerufen wird, indem Sie die <xref:System.Web.UI.WebControls.TreeView> Steuerelement an die angegebene Datenquelle an das Steuerelement zu binden.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Da die <see cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" /> -Methode versiegelt ist, sollten Sie überschreiben die <see cref="M:System.Web.UI.WebControls.TreeView.PerformDataBinding" /> -Methode, wenn Sie zusätzlichen Aufgaben ausführen, beim Binden von Daten benötigen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="PopulateNodesFromClient">
      <MemberSignature Language="C#" Value="public bool PopulateNodesFromClient { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PopulateNodesFromClient" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient" />
      <MemberSignature Language="VB.NET" Value="Public Property PopulateNodesFromClient As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PopulateNodesFromClient { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PopulateNodesFromClient : bool with get, set" Usage="System.Web.UI.WebControls.TreeView.PopulateNodesFromClient" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob Knotendaten bei Bedarf vom Client aus aufgefüllt werden, oder legt diesen Wert fest.</summary>
        <value>
          <see langword="true" />, um Strukturknotendaten bei Bedarf vom Client aus aufzufüllen, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Manchmal ist es nicht praktikabel ist, die statisch vorzudefinieren die Baumstruktur aufgrund der Größe der Daten oder benutzerdefinierten Inhalt, der auf eine Benutzereingabe abhängig ist. Aus diesem Grund die <xref:System.Web.UI.WebControls.TreeView> Steuerelement unterstützt dynamische Knoten Auffüllung. Wenn die <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> -Eigenschaft für einen Knoten auf festgelegt ist `true`, dieser Knoten wird aufgefüllt, zur Laufzeit, wenn der Knoten erweitert ist.  
  
 Zusätzlich zum Auffüllen von Knoten bei Bedarf, ist es möglich, die Knoten direkt auf eine unterstützte Client-Browsers aufgefüllt. Wenn die <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A> -Eigenschaftensatz auf `true`, ein Dienst vom Client zum Auffüllen der Knoten in der Ausdrucksbaumstruktur, die zum Zurücksenden an den Server überflüssig macht aufgerufen wird. Andernfalls die <xref:System.Web.UI.WebControls.TreeView> Steuerelement Postback zum Server die Knoten aufgefüllt.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A> muss auch-Eigenschaftensatz auf `true` in der Reihenfolge für die <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A> Eigenschaft festgelegt werden, um `true`.  
  
 Um einen Knoten auf dem Client zu füllen, legen Sie zuerst die <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A> Eigenschaft `true` und legen Sie dann die <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> Eigenschaft des Knotens mit `true`. Als Nächstes definieren Sie eine Ereignisbehandlungsmethode für den <xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate> Ereignis, das den Knoten programmgesteuert auffüllt. Eine typische Ereignisbehandlungsmethode Knotendaten aus einer Datenquelle abgerufen, fügt die Daten in eine Knotenstruktur und fügt dann die Knotenstruktur, die <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> Auflistung des Knotens, die aufgefüllt werden. Sie erstellen eine Knotenstruktur indem <xref:System.Web.UI.WebControls.TreeNode> -Objekte und die <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> Auflistung von einem übergeordneten Knoten.  
  
> [!NOTE]
>  Wenn die <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> -Eigenschaft für einen Knoten auf festgelegt ist `true`, muss der Knoten dynamisch aufgefüllt werden. Sie können nicht deklarativ einen anderen Knoten darunter geschachtelt; andernfalls tritt ein Fehler auf der Seite.  
  
> [!NOTE]
>  Der Knoten für die clientseitige Auffüllung-Funktion wird in Browsern unterstützt, die Rückrufskripts unterstützen. Um zu überprüfen, ob ein Browser Zugriff auf Rückrufskripts unterstützt, verwenden die <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A> Eigenschaft von der <xref:System.Web.HttpBrowserCapabilities> Klasse. Sie erreichen die Instanz von der <xref:System.Web.HttpBrowserCapabilities> Klasse für die aktuelle Anforderung über die <xref:System.Web.HttpRequest.Browser%2A> Eigenschaft von der <xref:System.Web.HttpRequest> Klasse.  
  
 Der Wert dieser Eigenschaft wird im Ansichtszustand gespeichert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A> Eigenschaft so aktivieren Sie die clientseitige Auffüllung der Knoten in der <xref:System.Web.UI.WebControls.TreeView> Steuerelement. Beachten Sie, dass beim Auffüllen von Client-Side-Knoten aktiviert ist, Knoten dynamisch auf dem Client, ohne die Notwendigkeit zum Zurücksenden an den Server aufgefüllt werden.  
  
 [!code-aspx-csharp[TreeViewPopulateNodesFromClient#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/CS/treeviewpopulatenodesfromclientcs.aspx#1)]
 [!code-aspx-vb[TreeViewPopulateNodesFromClient#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/VB/treeviewpopulatenodesfromclientvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.EnableClientScript" />
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.PopulateOnDemand" />
      </Docs>
    </Member>
    <Member MemberName="RaiseCallbackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaiseCallbackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaiseCallbackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.RaiseCallbackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaiseCallbackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaiseCallbackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaiseCallbackEvent : string -&gt; unit&#xA;override this.RaiseCallbackEvent : string -&gt; unit" Usage="treeView.RaiseCallbackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Eine Zeichenfolge, die ein optionales Ereignisargument für die Übergabe an den Ereignishandler darstellt.</param>
        <summary>Löst das Rückrufereignis mit den angegebenen Argumenten aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei der <xref:System.Web.UI.WebControls.TreeView.RaiseCallbackEvent%2A>-Methode handelt es sich um eine Hilfsmethode für die <xref:System.Web.UI.WebControls.TreeView.System%23Web%23UI%23ICallbackEventHandler%23RaiseCallbackEvent%2A>-Methode.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaisePostBackEvent : string -&gt; unit&#xA;override this.RaisePostBackEvent : string -&gt; unit" Usage="treeView.RaisePostBackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Eine Zeichenfolge, die ein optionales Ereignisargument für die Übergabe an den Ereignishandler darstellt.</param>
        <summary>Ermöglicht dem <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelement die Verarbeitung eines Ereignisses, das ausgelöst wird, wenn ein Formular an den Server gesendet wird. Bei der <see cref="M:System.Web.UI.WebControls.TreeView.RaisePostBackEvent(System.String)" />-Methode handelt es sich um eine Hilfsmethode für die <see cref="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />-Methode.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Seite übergibt den Wert des der `eventArgument` Parameter an die <xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A> Methode des Steuerelements, das implementiert die <xref:System.Web.UI.IPostBackEventHandler?displayProperty=nameWithType> Schnittstelle. Dies <xref:System.Web.UI.WebControls.TreeView> Steuerelement auch rendert das HTML-Element, das bewirkt, dass das Postbackereignis. Wenn das Steuerelement clientseitiges Skript zum Zurücksenden an den Server rendert, wird das Argument aus dem Skript übergeben, der `eventArgument` Parameter. Das Postbackereignis wird durch eine einfache verursacht an den Server übermitteln der `eventArgument` Parameter ist `null`.  
  
 Die <xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A> -Methode stellt die Funktionalität für viele Ereignisse, die von HTML und Webserversteuerelementen implementiert werden.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostDataChangedEvent ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostDataChangedEvent();" />
      <MemberSignature Language="F#" Value="abstract member RaisePostDataChangedEvent : unit -&gt; unit&#xA;override this.RaisePostDataChangedEvent : unit -&gt; unit" Usage="treeView.RaisePostDataChangedEvent " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Signalisiert dem <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelement, die Anwendung ASP.NET darüber zu benachrichtigen, dass sich der Zustand des Steuerelements geändert hat.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ändern Sie die Ereignisse für die <xref:System.Web.UI.WebControls.TreeView> Steuerelement ausgelöst werden, aus der <xref:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent%2A> Methode.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeginTag">
      <MemberSignature Language="C#" Value="public override void RenderBeginTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderBeginTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RenderBeginTag (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RenderBeginTag(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderBeginTag : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="treeView.RenderBeginTag writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Ein <see cref="T:System.Web.UI.HtmlTextWriter" />, der den Ausgabestream für das Rendering von HTML-Inhalten auf dem Client darstellt.</param>
        <summary>Gibt das öffnende HTML-Tag des Steuerelements im angegebenen Writer wieder.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.TreeView.RenderBeginTag%2A> Methode wird hauptsächlich von Steuerelemententwicklern verwendet.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected internal override void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderContents (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderContents : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="treeView.RenderContents writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Das <see cref="T:System.Web.UI.HtmlTextWriter" />-Objekt, das den Ausgabestream darstellt, der zum Schreiben des Inhalts auf eine Webseite verwendet wird.</param>
        <summary>Gibt die Knoten im <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelement wieder.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.TreeView.RenderContents%2A> Methode zum Rendern von Knoten in der <xref:System.Web.UI.WebControls.TreeView> Steuerelement an den Client.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderEndTag">
      <MemberSignature Language="C#" Value="public override void RenderEndTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderEndTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RenderEndTag (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RenderEndTag(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderEndTag : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="treeView.RenderEndTag writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Ein <see cref="T:System.Web.UI.HtmlTextWriter" />, der den Ausgabestream für das Rendering von HTML-Inhalten auf dem Client darstellt.</param>
        <summary>Gibt das schließende HTML-Tag des Steuerelements im angegebenen Writer wieder.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.TreeView.RenderEndTag%2A> Methode wird hauptsächlich von Steuerelemententwicklern verwendet.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RootNodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeStyle RootNodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeStyle RootNodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RootNodeStyle As TreeNodeStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeStyle ^ RootNodeStyle { System::Web::UI::WebControls::TreeNodeStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RootNodeStyle : System.Web.UI.WebControls.TreeNodeStyle" Usage="System.Web.UI.WebControls.TreeView.RootNodeStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf das <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" />-Objekt ab, mit dem Sie die Darstellung des Stammknotens im <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelement festlegen können.</summary>
        <value>Ein Verweis auf <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" />, der den Stil des Stammknotens in <see cref="T:System.Web.UI.WebControls.TreeView" /> darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A> Eigenschaft, um die Darstellung des Stammknotens im steuern die <xref:System.Web.UI.WebControls.TreeView> Steuerelement. Diese Eigenschaft ist schreibgeschützt. Sie können jedoch die Eigenschaften der Festlegen der <xref:System.Web.UI.WebControls.TreeNodeStyle> -Objekt wird zurückgegeben. Die Eigenschaften können deklarativ festgelegt werden, in der Form `Property-Subproperty`, wobei `Subproperty` ist eine Eigenschaft der <xref:System.Web.UI.WebControls.TreeNodeStyle> Objekt (z. B. `RootNodeStyle-ForeColor`). Die Eigenschaften können auch programmgesteuert in das Formular festgelegt werden `Property.Subproperty` (z. B. `RootNodeStyle.ForeColor`). Allgemeine Einstellungen enthalten normalerweise eine benutzerdefinierte Hintergrundfarbe, Vordergrundfarbe Schriftarteigenschaften und Knoten Abstand. Stileigenschaften werden in der folgenden Reihenfolge angewendet:  
  
1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>  
  
2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>, oder <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>, abhängig von den Knotentyp. Wenn die <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> Auflistung definiert ist, es ist zu diesem Zeitpunkt angewendet, überschreiben die anderen Eigenschaften für den Knoten.  
  
3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>  
  
4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>  
  
 Wenn müssen Sie die Tabelle mit Inhalt-Stil Navigationsmenüs generieren, in dem Knoten auf einer bestimmten Ebene unabhängig davon, ob diese untergeordneten Knoten haben die gleiche Darstellung haben sollten, sollten Sie mithilfe der <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> -Eigenschaft statt die einzelnen festlegen Stileigenschaften.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A> Eigenschaft, um die Darstellung des Stammknotens im steuern die <xref:System.Web.UI.WebControls.TreeView> Steuerelement.  
  
 [!code-aspx-csharp[TreeViewRootNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewRootNodeStyle/CS/treeviewrootnodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewRootNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewRootNodeStyle/VB/treeviewrootnodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="treeView.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Speichert den Zustand des <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelements.</summary>
        <returns>Der aktuelle Ansichtszustand des Serversteuerelements, andernfalls <see langword="null" />, wenn dem Steuerelement kein Ansichtszustand zugeordnet ist.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedNode">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNode SelectedNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNode SelectedNode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.SelectedNode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedNode As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNode ^ SelectedNode { System::Web::UI::WebControls::TreeNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedNode : System.Web.UI.WebControls.TreeNode" Usage="System.Web.UI.WebControls.TreeView.SelectedNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein <see cref="T:System.Web.UI.WebControls.TreeNode" />-Objekt ab, das den im <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelement ausgewählten Knoten darstellt.</summary>
        <value>Ein <see cref="T:System.Web.UI.WebControls.TreeNode" />, der den ausgewählten Knoten in <see cref="T:System.Web.UI.WebControls.TreeView" /> darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Text eines Knotens in der <xref:System.Web.UI.WebControls.TreeView> Steuerelement kann in einem von zwei Modi: den Mehrfachauswahlmodus aufweist und Navigationsmodus. Standardmäßig ist ein Knoten in den Mehrfachauswahlmodus aufweist. Um einen Knoten in den Navigationsmodus zu versetzen, legen Sie die <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> -Eigenschaft für den Knoten, um einen anderen Wert als eine leere Zeichenfolge (""). Um einen Knoten in den Auswahlmodus versetzen möchten, legen Sie die <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> Eigenschaft des Knotens auf eine leere Zeichenfolge ("").  
  
 Wenn ein Knoten im Auswahlmodus befindet, kann der Benutzer einen Knoten auswählen, durch Klicken auf den Text im Knoten "". Verwenden der <xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A> Eigenschaft, um zu bestimmen, welcher Knoten ausgewählt ist, in der <xref:System.Web.UI.WebControls.TreeView> Steuerelement.  
  
> [!NOTE]
>  Ein Knoten nicht ausgewählt, wenn die <xref:System.Web.UI.WebControls.TreeView> -Steuerelement zeigt Links. Wenn links angezeigt werden, die <xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A> -Eigenschaft gibt immer `null`.  
  
 Wenn der Benutzer wählt einen anderen Knoten in der <xref:System.Web.UI.WebControls.TreeView> Steuerelement, indem Sie den Text in den neuen Knoten auf die <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> Ereignis ausgelöst wird, wird standardmäßig. Geben Sie ein anderes Ereignis, durch Festlegen der <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> -Eigenschaft für die Eigenschaft. In der folgenden Tabelle sind die verfügbaren Optionen aufgelistet.  
  
|Auswahlaktion|Beschreibung |  
|----------------------|-----------------|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.Expand>|Schaltet den Knoten zwischen erweiterten und reduzierten an. Löst das <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> oder <xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed> Ereignis, nach Bedarf.|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.None>|Löst keine Ereignisse aus, wenn ein Knoten ausgewählt wird.|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.Select>|Löst das <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>-Ereignis aus, wenn ein Knoten ausgewählt wird.|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.SelectExpand>|Löst das <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>-Ereignis und das <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>-Ereignis aus, wenn ein Knoten ausgewählt wird. Knoten werden nur erweitert, nie reduziert wird.|  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A> wird nicht für einen Knoten mit gerendert seine <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> -Eigenschaftensatz auf `TreeNodeSelectAction.None`.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A> Eigenschaft zum Bestimmen des Werts des ausgewählten Knotens in der <xref:System.Web.UI.WebControls.TreeView> Steuerelement.  
  
 [!code-aspx-csharp[TreeViewSelectedNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewSelectedNodeStyle/CS/treeviewselectednodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewSelectedNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewSelectedNodeStyle/VB/treeviewselectednodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowCheckBoxes" />
        <altmember cref="E:System.Web.UI.WebControls.TreeView.SelectedNodeChanged" />
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeExpanded" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.SelectAction" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.SelectAction" />
      </Docs>
    </Member>
    <Member MemberName="SelectedNodeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SelectedNodeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectedNodeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.TreeView.SelectedNodeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectedNodeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SelectedNodeChanged;" />
      <MemberSignature Language="F#" Value="member this.SelectedNodeChanged : EventHandler " Usage="member this.SelectedNodeChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wird ausgelöst, wenn ein Knoten im <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelement ausgewählt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> Ereignis wird ausgelöst, wenn ein Knoten, in ausgewählt wird der <xref:System.Web.UI.WebControls.TreeView> Steuerelement. Dadurch können Sie eine Ereignisbehandlungsmethode bereitstellen, die eine benutzerdefinierte Routine ausführt, z. B. den angezeigten Inhalt aktualisieren, wenn dieses Ereignis tritt auf.  
  
 Sie können optional Festlegen der <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> Eigenschaft für einen Knoten aus, um anzugeben, welches Ereignis ausgelöst wird, wenn der Knoten ausgewählt ist. In der folgenden Tabelle sind die verfügbaren Optionen aufgelistet.  
  
|Auswahlaktion|Beschreibung |  
|----------------------|-----------------|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.Expand>|Schaltet den Knoten zwischen erweiterten und reduzierten an. Löst das <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> oder <xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed> Ereignis, nach Bedarf.|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.None>|Löst keine Ereignisse aus, wenn ein Knoten ausgewählt wird.|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.Select>|Löst das <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>-Ereignis aus, wenn ein Knoten ausgewählt wird.|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.SelectExpand>|Löst das <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>-Ereignis und das <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>-Ereignis aus, wenn ein Knoten ausgewählt wird. Knoten werden nur erweitert, nie reduziert wird.|  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A> wird nicht für einen Knoten mit gerendert seine <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> -Eigenschaftensatz auf `TreeNodeSelectAction.None`.  
  
 Die <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> Ereignis nur auf Post ausgelöst wird, zurück, wenn ein Benutzer einen Knoten klickt. Das Ereignis wird nicht ausgelöst, wenn die <xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A> -Eigenschaft programmgesteuert geändert wird.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> das zu aktualisierende Ereignis ein <xref:System.Web.UI.WebControls.Label> steuern, wenn ein Knoten ausgewählt ist, in der <xref:System.Web.UI.WebControls.TreeView> Steuerelement.  
  
 [!code-aspx-csharp[TreeViewSelectedNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewSelectedNodeStyle/CS/treeviewselectednodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewSelectedNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewSelectedNodeStyle/VB/treeviewselectednodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="SelectedNodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeStyle SelectedNodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeStyle SelectedNodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedNodeStyle As TreeNodeStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeStyle ^ SelectedNodeStyle { System::Web::UI::WebControls::TreeNodeStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedNodeStyle : System.Web.UI.WebControls.TreeNodeStyle" Usage="System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" />-Objekt ab, das die Darstellung des ausgewählten Knotens im <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelement steuert.</summary>
        <value>Ein <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" />, der den Stil des ausgewählten Knotens im <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelement darstellt. Der Standardwert ist <see langword="null" /> und gibt an, dass die <see cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />-Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A> -Eigenschaft zur Steuerung der Darstellung des ausgewählten Knotens in der <xref:System.Web.UI.WebControls.TreeView> Steuerelement. Diese Eigenschaft ist schreibgeschützt. Sie können jedoch die Eigenschaften der Festlegen der <xref:System.Web.UI.WebControls.TreeNodeStyle> -Objekt wird zurückgegeben. Die Eigenschaften können deklarativ festgelegt werden, in der Form `Property-Subproperty`, wobei `Subproperty` ist eine Eigenschaft der <xref:System.Web.UI.WebControls.TreeNodeStyle> Objekt (z. B. `SelectedNodeStyle-ForeColor`). Die Eigenschaften können auch programmgesteuert in das Formular festgelegt werden `Property.Subproperty` (z. B. `SelectedNodeStyle.ForeColor`). Allgemeine Einstellungen enthalten normalerweise eine benutzerdefinierte Hintergrundfarbe, Vordergrundfarbe Schriftarteigenschaften und Knoten Abstand. Stileigenschaften werden in der folgenden Reihenfolge angewendet:  
  
1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>  
  
2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>, oder <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>, abhängig von den Knotentyp. Wenn die <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> Auflistung definiert ist, es ist zu diesem Zeitpunkt angewendet, überschreiben die anderen Eigenschaften für den Knoten.  
  
3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>  
  
4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A> -Eigenschaft zur Steuerung der Darstellung des ausgewählten Knotens in der <xref:System.Web.UI.WebControls.TreeView> Steuerelement.  
  
 [!code-aspx-csharp[TreeViewSelectedNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewSelectedNodeStyle/CS/treeviewselectednodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewSelectedNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewSelectedNodeStyle/VB/treeviewselectednodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="SelectedValue">
      <MemberSignature Language="C#" Value="public string SelectedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.SelectedValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectedValue { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedValue : string" Usage="System.Web.UI.WebControls.TreeView.SelectedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert des ausgewählten Knotens ab.</summary>
        <value>Der Wert des ausgewählten Knotens.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.TreeView.SelectedValue%2A> Eigenschaft bietet eine einfache Möglichkeit, den Wert des ausgewählten Knotens zu bestimmen. Diese Eigenschaft gibt den Wert einfach zurück die <xref:System.Web.UI.WebControls.TreeNode.Value%2A> Eigenschaft von der <xref:System.Web.UI.WebControls.TreeNode> -Objekt, das verweist die <xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A> Eigenschaft. Wenn aktuell kein Knoten ausgewählt ist die <xref:System.Web.UI.WebControls.TreeView> zu steuern, eine leere Zeichenfolge ("") zurückgegeben.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNode" />
      </Docs>
    </Member>
    <Member MemberName="SetNodeDataBound">
      <MemberSignature Language="C#" Value="protected void SetNodeDataBound (System.Web.UI.WebControls.TreeNode node, bool dataBound);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetNodeDataBound(class System.Web.UI.WebControls.TreeNode node, bool dataBound) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.SetNodeDataBound(System.Web.UI.WebControls.TreeNode,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetNodeDataBound (node As TreeNode, dataBound As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetNodeDataBound(System::Web::UI::WebControls::TreeNode ^ node, bool dataBound);" />
      <MemberSignature Language="F#" Value="member this.SetNodeDataBound : System.Web.UI.WebControls.TreeNode * bool -&gt; unit" Usage="treeView.SetNodeDataBound (node, dataBound)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.UI.WebControls.TreeNode" />
        <Parameter Name="dataBound" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="node">Die festzulegende <see cref="T:System.Web.UI.WebControls.TreeNode" />.</param>
        <param name="dataBound">
          <see langword="true" />, um den Knoten als datengebunden festzulegen, andernfalls <see langword="false" />.</param>
        <summary>Ermöglicht es einer abgeleiteten Klasse festzulegen, ob die Datenbindung des angegebenen <see cref="T:System.Web.UI.WebControls.TreeNode" />-Steuerelements vorgenommen wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.TreeView.SetNodeDataBound%2A> Methode, um anzugeben, ob das angegebene <xref:System.Web.UI.WebControls.TreeNode> datengebunden ist.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Die <see cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataBound(System.Web.UI.WebControls.TreeNode,System.Boolean)" /> Methode wird bereitgestellt, um ein Steuerelement zu ermöglichen, die abgeleitet ist die <see cref="T:System.Web.UI.WebControls.TreeView" /> festzulegenden Steuerelements die <see cref="P:System.Web.UI.WebControls.TreeNode.DataBound" /> Eigenschaft auf einem Knoten.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataItem(System.Web.UI.WebControls.TreeNode,System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataPath(System.Web.UI.WebControls.TreeNode,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SetNodeDataItem">
      <MemberSignature Language="C#" Value="protected void SetNodeDataItem (System.Web.UI.WebControls.TreeNode node, object dataItem);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetNodeDataItem(class System.Web.UI.WebControls.TreeNode node, object dataItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.SetNodeDataItem(System.Web.UI.WebControls.TreeNode,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetNodeDataItem (node As TreeNode, dataItem As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetNodeDataItem(System::Web::UI::WebControls::TreeNode ^ node, System::Object ^ dataItem);" />
      <MemberSignature Language="F#" Value="member this.SetNodeDataItem : System.Web.UI.WebControls.TreeNode * obj -&gt; unit" Usage="treeView.SetNodeDataItem (node, dataItem)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.UI.WebControls.TreeNode" />
        <Parameter Name="dataItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="node">Die festzulegende <see cref="T:System.Web.UI.WebControls.TreeNode" />.</param>
        <param name="dataItem">Das Datenelement für <see cref="T:System.Web.UI.WebControls.TreeNode" />.</param>
        <summary>Ermöglicht einer abgeleiteten Klasse, das Datenelement für das angegebene <see cref="T:System.Web.UI.WebControls.TreeNode" />-Steuerelement festzulegen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.TreeView.SetNodeDataItem%2A> an das Datenelement für die angegebene Methode <xref:System.Web.UI.WebControls.TreeNode> Steuerelement.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataBound(System.Web.UI.WebControls.TreeNode,System.Boolean)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataPath(System.Web.UI.WebControls.TreeNode,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SetNodeDataPath">
      <MemberSignature Language="C#" Value="protected void SetNodeDataPath (System.Web.UI.WebControls.TreeNode node, string dataPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetNodeDataPath(class System.Web.UI.WebControls.TreeNode node, string dataPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.SetNodeDataPath(System.Web.UI.WebControls.TreeNode,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetNodeDataPath (node As TreeNode, dataPath As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetNodeDataPath(System::Web::UI::WebControls::TreeNode ^ node, System::String ^ dataPath);" />
      <MemberSignature Language="F#" Value="member this.SetNodeDataPath : System.Web.UI.WebControls.TreeNode * string -&gt; unit" Usage="treeView.SetNodeDataPath (node, dataPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.UI.WebControls.TreeNode" />
        <Parameter Name="dataPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="node">Die festzulegende <see cref="T:System.Web.UI.WebControls.TreeNode" />.</param>
        <param name="dataPath">Der Datenpfad für <see cref="T:System.Web.UI.WebControls.TreeNode" />.</param>
        <summary>Ermöglicht einer abgeleiteten Klasse, den Datenpfad für das angegebene <see cref="T:System.Web.UI.WebControls.TreeNode" />-Steuerelement festzulegen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.TreeView.SetNodeDataPath%2A> Methode, um den Pfad für den angegebenen einzurichten <xref:System.Web.UI.WebControls.TreeNode> Steuerelement.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataBound(System.Web.UI.WebControls.TreeNode,System.Boolean)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataItem(System.Web.UI.WebControls.TreeNode,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ShowCheckBoxes">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeTypes ShowCheckBoxes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.TreeNodeTypes ShowCheckBoxes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ShowCheckBoxes" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowCheckBoxes As TreeNodeTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeTypes ShowCheckBoxes { System::Web::UI::WebControls::TreeNodeTypes get(); void set(System::Web::UI::WebControls::TreeNodeTypes value); };" />
      <MemberSignature Language="F#" Value="member this.ShowCheckBoxes : System.Web.UI.WebControls.TreeNodeTypes with get, set" Usage="System.Web.UI.WebControls.TreeView.ShowCheckBoxes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, bei welchen Knotentypen ein Kontrollkästchen im <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelement angezeigt wird, oder legt diesen Wert fest.</summary>
        <value>Eine bitweise Kombination der <see cref="T:System.Web.UI.WebControls.TreeNodeTypes" />-Werte. Der Standardwert ist <see langword="TreeNodeType.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mehrfachauswahl von Knoten in unterstützen die <xref:System.Web.UI.WebControls.TreeView> -Steuerelement, können Sie die Kontrollkästchen neben dem Bild für einen Knoten anzeigen. Verwenden der <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> Eigenschaft, um anzugeben, welche Knotentypen ein Kontrollkästchen angezeigt wird. Wenn diese Eigenschaft festgelegt wird, um z. B. `TreeNodeType.Parent`, Kontrollkästchen für jeden übergeordneten Knoten in der Struktur angezeigt werden. Die folgende Tabelle enthält die gültigen Werte für diese Eigenschaft.  
  
|Knotentyp|Beschreibung |  
|---------------|-----------------|  
|`TreeNodeType.All`|Kontrollkästchen werden für alle Knoten angezeigt.|  
|`TreeNodeType.Leaf`|Kontrollkästchen werden für alle Blattknoten angezeigt.|  
|`TreeNodeType.None`|Kontrollkästchen werden nicht angezeigt.|  
|`TreeNodeType.Parent`|Kontrollkästchen werden für alle übergeordneten Knoten angezeigt.|  
|`TreeNodeType.Root`|Kontrollkästchen werden für alle Stammknoten angezeigt.|  
  
 Der Enumerationstyp für die verwendeten die <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> Eigenschaft ist eine Flagenumeration, dem Sie Werte durch bitweise Operationen kombinieren kann. Um die Kontrollkästchen für die übergeordneten Knoten und Endknoten anzuzeigen, verwenden Sie z. B. die bitweisen OR-Operator Kombinieren der `TreeNodeType.Parent` und `TreeNodeType.Leaf` Werte.  
  
 Um zu bestimmen, welche Knoten das Kontrollkästchen aktiviert, durchlaufen Sie die Knoten des der <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A> Auflistung.  
  
> [!NOTE]
>  Sie können außer Kraft setzen die <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> Einstellung durch Festlegen der <xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A> -Eigenschaft für jeden Knoten.  
  
 Wenn Sie nur mit Einfachauswahl unterstützen müssen, sollten Sie verwenden die <xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A> Eigenschaft.  
  
 Der Wert dieser Eigenschaft wird im Ansichtszustand gespeichert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> Eigenschaft ein-und Ausblenden von die Kontrollkästchen für die verschiedenen Knotentypen aufgeführt sind.  
  
 [!code-aspx-csharp[TreeViewShowCheckBoxes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewShowCheckBoxes/CS/treeviewshowcheckboxescs.aspx#1)]
 [!code-aspx-vb[TreeViewShowCheckBoxes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewShowCheckBoxes/VB/treeviewshowcheckboxesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der bitweise Kombinationswert liegt außerhalb des Bereichs der <see cref="T:System.Web.UI.WebControls.TreeNodeTypes" />-Enumeration.</exception>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeTypes" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNode" />
      </Docs>
    </Member>
    <Member MemberName="ShowExpandCollapse">
      <MemberSignature Language="C#" Value="public bool ShowExpandCollapse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowExpandCollapse" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ShowExpandCollapse" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowExpandCollapse As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowExpandCollapse { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowExpandCollapse : bool with get, set" Usage="System.Web.UI.WebControls.TreeView.ShowExpandCollapse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob Knotenerweiterungsindikatoren angezeigt werden, oder legt diesen Wert fest.</summary>
        <value>
          <see langword="true" />, um die Knotenerweiterungsindikatoren anzuzeigen, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Erweiterung Knotenerweiterungsindikatoren werden verwendet, um anzuzeigen, ob ein Knoten erweitert, reduziert oder nicht erweiterbar ist. Verwenden der <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> Eigenschaft, um anzugeben, ob die Erweiterung Knotenerweiterungsindikatoren, in angezeigt werden der <xref:System.Web.UI.WebControls.TreeView> Steuerelement.  
  
 Wenn die <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> -Eigenschaftensatz auf `true`, <xref:System.Web.UI.WebControls.TreeView> -Steuerelement zeigt ein Pluszeichen (+) oder Minuszeichen (-) oder ein Platzhalterbild neben einem Knoten, um anzugeben, ob der Knoten erweiterbar, reduzierbar oder nicht erweiterbar ist. Können Sie angeben, benutzerdefinierte Images, indem Sie zuerst die <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> Eigenschaft `TreeViewImageSet.Custom`, festlegen und anschließend die <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>, <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>, und <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> Eigenschaften auf die URLs benutzerdefinierter Images. Wenn keine Bilder angegeben sind, werden die Standardbilder verwendet.  
  
 Der Wert dieser Eigenschaft wird im Ansichtszustand gespeichert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> Eigenschaft anzeigen und die Erweiterung Knotenerweiterungssymbole auszublenden.  
  
 [!code-aspx-csharp[TreeViewShowExpandCollapse#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewShowExpandCollapse/CS/treeviewshowexpandcollapsecs.aspx#1)]
 [!code-aspx-vb[TreeViewShowExpandCollapse#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewShowExpandCollapse/VB/treeviewshowexpandcollapsevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NoExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="ShowLines">
      <MemberSignature Language="C#" Value="public bool ShowLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowLines" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ShowLines" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowLines As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowLines { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowLines : bool with get, set" Usage="System.Web.UI.WebControls.TreeView.ShowLines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob Linien, die untergeordnete Knoten mit übergeordneten Knoten verbinden, angezeigt werden, oder legt diesen Wert fest.</summary>
        <value>
          <see langword="true" />, um Linien anzuzeigen, die Knoten miteinander verbinden, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.TreeView.ShowLines%2A> Eigenschaft, um anzugeben, ob die Zeilen, die untergeordnete Knoten mit übergeordneten Knoten verbunden sind, angezeigt werden. Wenn diese Eigenschaft auf festgelegt ist `true`, <xref:System.Web.UI.WebControls.TreeView> Steuerelement durchsucht den Web zugängliche angegeben wird die <xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A> -Eigenschaft für die Zeile Bilder.  
  
> [!NOTE]
>  Wenn die <xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A> Eigenschaft nicht festgelegt ist, die <xref:System.Web.UI.WebControls.TreeView> Steuerelement verwendet die integrierte, Standardbilder (20 x 20 Pixel).  
  
 Der Wert dieser Eigenschaft wird im Ansichtszustand gespeichert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeView.ShowLines%2A> Eigenschaft anzuzeigenden Verbindungslinien zwischen Knoten in der <xref:System.Web.UI.WebControls.TreeView> Steuerelement. Achten Sie darauf, dass das Line-Designer-Tool verwenden, um einen Satz von Liniengrafiken erstellen und in einem Ordner namens LineImages in das Verzeichnis für die beispielanwendung zu platzieren.  
  
 [!code-aspx-csharp[TreeViewLineImagesFolderUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewLineImagesFolderUrl/CS/treeviewlineimagesfolderurlcs.aspx#1)]
 [!code-aspx-vb[TreeViewLineImagesFolderUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewLineImagesFolderUrl/VB/treeviewlineimagesfolderurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LineImagesFolder" />
      </Docs>
    </Member>
    <Member MemberName="SkipLinkText">
      <MemberSignature Language="C#" Value="public string SkipLinkText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SkipLinkText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.SkipLinkText" />
      <MemberSignature Language="VB.NET" Value="Public Property SkipLinkText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SkipLinkText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SkipLinkText : string with get, set" Usage="System.Web.UI.WebControls.TreeView.SkipLinkText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab oder legt einen Wert fest, mit dem alternativer Text gerendert wird, sodass Bildschirmsprachausgaben den Inhalt des Steuerelements überspringen können.</summary>
        <value>Eine Zeichenfolge, die vom <see cref="T:System.Web.UI.WebControls.TreeView" /> als alternativer Text mit einem unsichtbaren Bild gerendert und als Hinweis für Bildschirmsprachausgaben verwendet wird. Der Standardwert lautet "Navigationslinks überspringen".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.TreeView.SkipLinkText%2A> Eigenschaft ist eine Eigenschaft, die Sie festlegen können, um einer Webseite mehr oder weniger zugänglich zu machen. Webseiten, auf denen Inhalt enthalten, die wiederholt ermöglichen einen Mechanismus für Benutzer von Bildschirmsprachausgaben überspringen den Inhalt gelesen werden.  
  
 Die <xref:System.Web.UI.WebControls.TreeView> Steuerelement verfügt über die <xref:System.Web.UI.WebControls.TreeView.SkipLinkText%2A> Eigenschaft als eine Möglichkeit für das gesamte Steuerelement von Bildschirmsprachausgaben übersprungen werden soll. Wenn die <xref:System.Web.UI.WebControls.TreeView.SkipLinkText%2A> Eigenschaft festgelegt ist, ein unsichtbaren Bild mit alternativen Text gerendert wird, sodass der Benutzer die Möglichkeit, am Ende des Steuerelements springen. Sprachausgaben vorlesen den alternativen Text, während das Bild nur ein Pixel Speicherplatz belegt. Legen Sie für Pixel präzise Kontrolle über die gerenderte Seite, die <xref:System.Web.UI.WebControls.TreeView.SkipLinkText%2A> Eigenschaft auf eine leere Zeichenfolge (""), und geben Sie einen eigenen Mechanismus, um die Struktur zu überspringen.  
  
 Die <xref:System.Web.UI.WebControls.TreeView.SkipLinkText%2A> Eigenschaft auf die leere Zeichenfolge festgelegt ist, wird standardmäßig die Bildschirmsprachausgaben das Steuerelement nicht überspringen.  
  
 Der Wert dieser Eigenschaft wird im Ansichtszustand gespeichert.  
  
 Der Wert dieser Eigenschaft, wenn festgelegt ist, können mit einem Designer-Tool automatisch in einer Ressourcendatei gespeichert werden. Weitere Informationen finden Sie unter <xref:System.ComponentModel.LocalizableAttribute> und [Globalisierung und Lokalisierung](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.ICallbackEventHandler.GetCallbackResult">
      <MemberSignature Language="C#" Value="string ICallbackEventHandler.GetCallbackResult ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Web.UI.ICallbackEventHandler.GetCallbackResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#GetCallbackResult" />
      <MemberSignature Language="VB.NET" Value="Function GetCallbackResult () As String Implements ICallbackEventHandler.GetCallbackResult" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.Web.UI.ICallbackEventHandler.GetCallbackResult() = System::Web::UI::ICallbackEventHandler::GetCallbackResult;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.ICallbackEventHandler.GetCallbackResult</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt das Ergebnis eines Rückrufereignisses zurück, das ein Steuerelement als Ziel hat.</summary>
        <returns>Die Ergebnisse des Rückrufs.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.TreeView> -Steuerelement implementiert die <xref:System.Web.UI.ICallbackEventHandler> Schnittstelle und verwendet die <xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A> zum Abrufen von Daten und die <xref:System.Web.UI.WebControls.TreeView.GetCallbackResult%2A> Methode, um die abgerufenen Daten an das Steuerelement zurückzugeben.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent">
      <MemberSignature Language="C#" Value="void ICallbackEventHandler.RaiseCallbackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaiseCallbackEvent (eventArgument As String) Implements ICallbackEventHandler.RaiseCallbackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System::String ^ eventArgument) = System::Web::UI::ICallbackEventHandler::RaiseCallbackEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Eine Zeichenfolge, die ein optionales Ereignisargument für die Übergabe an den Ereignishandler darstellt.</param>
        <summary>Löst das Rückrufereignis mit den angegebenen Argumenten aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Entwickler von Steuerelementen sollte außer Kraft gesetzt. die <xref:System.Web.UI.WebControls.TreeView.RaiseCallbackEvent%2A> Methode.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.LoadPostData">
      <MemberSignature Language="C#" Value="bool IPostBackDataHandler.LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Web.UI.IPostBackDataHandler.LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean Implements IPostBackDataHandler.LoadPostData" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Web.UI.IPostBackDataHandler.LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection) = System::Web::UI::IPostBackDataHandler::LoadPostData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">Die Schlüsselkennung für das Steuerelement.</param>
        <param name="postCollection">Die Sammlung aller eingehenden Namenswerte.</param>
        <summary>Verarbeitet Postbackdaten für das <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelement.</summary>
        <returns>
          <see langword="true" />, wenn sich der Zustand des <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelements aufgrund des Postbacks ändert, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Entwickler von Steuerelementen sollte außer Kraft gesetzt. die <xref:System.Web.UI.WebControls.TreeView.LoadPostData%2A> Methode.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="void IPostBackDataHandler.RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostDataChangedEvent () Implements IPostBackDataHandler.RaisePostDataChangedEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() = System::Web::UI::IPostBackDataHandler::RaisePostDataChangedEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Signalisiert dem <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelement, die Anwendung ASP.NET darüber zu benachrichtigen, dass sich der Zustand des Steuerelements geändert hat.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Entwickler von Steuerelementen sollte außer Kraft gesetzt. die <xref:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent%2A> Methode.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostBackEvent (eventArgument As String) Implements IPostBackEventHandler.RaisePostBackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System::String ^ eventArgument) = System::Web::UI::IPostBackEventHandler::RaisePostBackEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Eine Zeichenfolge, die ein optionales Ereignisargument für die Übergabe an den Ereignishandler darstellt.</param>
        <summary>Ermöglicht dem <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelement die Verarbeitung eines Ereignisses, das ausgelöst wird, wenn ein Formular an den Server gesendet wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Entwickler von Steuerelementen sollte außer Kraft gesetzt. die <xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A> Methode.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); };" />
      <MemberSignature Language="F#" Value="member this.TagKey : System.Web.UI.HtmlTextWriterTag" Usage="System.Web.UI.WebControls.TreeView.TagKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den <see cref="T:System.Web.UI.HtmlTextWriterTag" />-Wert für das <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelement ab.</summary>
        <value>Gibt immer einen <see cref="F:System.Web.UI.HtmlTextWriterTag.Div" />-Wert zurück.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.TreeView.TagKey%2A> Eigenschaft ermöglicht den Ausgabestream schreiben den entsprechenden HTML-Markierung-Up für die <xref:System.Web.UI.WebControls.TreeView> Steuerelement.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Sie können außer Kraft setzen die <see cref="P:System.Web.UI.WebControls.TreeView.TagKey" /> Eigenschaft angeben, welche <see cref="T:System.Web.UI.HtmlTextWriterTag" /> Wert, der für das abgeleitete Steuerelement verwendet.</para>
        </block>
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public string Target { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Target" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.Target" />
      <MemberSignature Language="VB.NET" Value="Public Property Target As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Target { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Target : string with get, set" Usage="System.Web.UI.WebControls.TreeView.Target" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Zielfenster oder den Zielframe ab, in dem die einem Knoten zugeordneten Webseiteninhalte angezeigt werden sollen, oder legt dieses Zielfenster bzw. den Zielframe fest.</summary>
        <value>Das Zielfenster oder der Zielframe, in dem der verknüpfte Webseiteninhalt angezeigt werden soll. Werte müssen mit einem Buchstaben von A bis Z (ohne Berücksichtigung der Groß- und Kleinschreibung) beginnen, mit Ausnahme der in folgender Tabelle aufgeführten speziellen Werte, die mit einem Unterstrich beginnen:  
  
 <list type="table"><listheader><term> Zielwert </term><description> rendert den Inhalt in </description></listheader><item><term><see langword="_blank" /></term><description> ein neues Fenster ohne Frames.  </description></item><item><term><see langword="_parent" /></term><description> Der unmittelbar übergeordneten Frameset.  </description></item><item><term><see langword="_search" /></term><description> Die Bereichs "Suchen".  </description></item><item><term><see langword="_self" /></term><description> Der Frame mit dem Fokus.  </description></item><item><term><see langword="_top" /></term><description> Das vollständige Fenster ohne Frames.  </description></item></list><block subset="none" type="note"><para> Überprüfen Sie Ihre Browserdokumentation zum bestimmen, ob die <see langword="_search" /> Wert wird unterstützt.  Beispielsweise Microsoft Internet Explorer 5.0 und höher unterstützt die <see langword="_search" /> Zielwert.  </para></block>  Der Standardwert ist eine leere Zeichenfolge (""), die das Fenster oder den Frame mit dem Fokus aktualisiert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.TreeView.Target%2A> Eigenschaft, um anzugeben, das Fenster oder der Zielframe, in dem anzuzeigenden Webinhalte, mit einem Knoten verknüpft ist, wenn auf diesem Knoten geklickt wird.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.TreeView.Target%2A> Eigenschaft als rendert eine `target` Attribut. Die `target` -Attribut `anchor` Elemente ist in der Dokumenttypdefinition XHTML 1.1 nicht zulässig. Legen Sie nicht die <xref:System.Web.UI.WebControls.TreeView.Target%2A> -Eigenschaft, wenn die gerenderte Ausgabe für die <xref:System.Web.UI.WebControls.TreeView> XHTML 1.1 kompatibel sein muss. Weitere Informationen finden Sie unter [XHTML-Standards in Visual Studio und ASP.NET](http://msdn.microsoft.com/library/1b78d416-66bb-43a5-ac77-c703aab55b97).  
>   
>  Beim Erstellen von accessible Web Pages vermeiden Sie die Verwendung der <xref:System.Web.UI.WebControls.TreeView.Target%2A> Eigenschaft, um ein weiteres Fenster als Ziel. Weitere Informationen finden Sie unter [ASP.NET-Steuerelemente und Barrierefreiheit](http://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).  
  
 Der Wert dieser Eigenschaft wird im Ansichtszustand gespeichert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeView.Target%2A> Eigenschaft, um den Webinhalt anzuzeigen, die auf einen Knoten in einem neuen Fenster verknüpft ist, wenn auf diesem Knoten geklickt wird.  
  
 [!code-aspx-csharp[TreeViewTarget#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewTarget/CS/treeviewtargetcs.aspx#1)]
 [!code-aspx-vb[TreeViewTarget#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewTarget/VB/treeviewtargetvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Target" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="treeView.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Verfolgt die am Ansichtszustand des <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelements vorgenommenen Änderungen und speichert diese im <see cref="T:System.Web.UI.StateBag" />-Objekt des Steuerelements. Auf dieses <see cref="T:System.Web.UI.StateBag" />-Objekt kann über die <see cref="P:System.Web.UI.Control.ViewState" />-Eigenschaft zugegriffen werden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.TreeView.TrackViewState%2A> Methode wird überschrieben, um den Ausgangspunkt beginnen nachzuverfolgen und zu speichern von Änderungen an das Steuerelement im Rahmen des Ansichtszustands für das Steuerelement zu kennzeichnen.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="P:System.Web.UI.Control.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="TreeNodeCheckChanged">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeCheckChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeCheckChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TreeNodeCheckChanged As TreeNodeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::TreeNodeEventHandler ^ TreeNodeCheckChanged;" />
      <MemberSignature Language="F#" Value="member this.TreeNodeCheckChanged : System.Web.UI.WebControls.TreeNodeEventHandler " Usage="member this.TreeNodeCheckChanged : System.Web.UI.WebControls.TreeNodeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn sich der Zustand eines Kontrollkästchens im <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelement zwischen Übermittlungen an den Server ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged> Ereignis wird ausgelöst, wenn das Kontrollkästchen in der <xref:System.Web.UI.WebControls.TreeView> -Steuerelement ändert den Zustand zwischen Übertragungen zum Server. Dadurch können Sie eine Ereignisbehandlungsmethode bereitstellen, die eine benutzerdefinierte Routine ausführt, z. B. eine Datenbank oder der angezeigte Inhalt aktualisieren, wenn dieses Ereignis tritt auf.  
  
 Obwohl die <xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged> Ereignis wird ausgelöst, bei einem Postback, ändern Sie das Kontrollkästchen bewirkt nicht, ein Postback.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie der <xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged> das zu aktualisierende Ereignis eine <xref:System.Web.UI.WebControls.Label> steuern, wann die Kontrollkästchen der <xref:System.Web.UI.WebControls.TreeView> Steuerelement Zustand zwischen Übertragungen zum Server geändert.  
  
 [!code-aspx-csharp[TreeViewCheckChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCheckChanged/CS/treeviewcheckchangedcs.aspx#1)]
 [!code-aspx-vb[TreeViewCheckChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCheckChanged/VB/treeviewcheckchangedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="TreeNodeCollapsed">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeCollapsed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeCollapsed" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TreeNodeCollapsed As TreeNodeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::TreeNodeEventHandler ^ TreeNodeCollapsed;" />
      <MemberSignature Language="F#" Value="member this.TreeNodeCollapsed : System.Web.UI.WebControls.TreeNodeEventHandler " Usage="member this.TreeNodeCollapsed : System.Web.UI.WebControls.TreeNodeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wird ausgelöst, wenn ein Knoten im <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelement reduziert wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed> Ereignis wird ausgelöst, wenn ein Knoten, in reduziert wird der <xref:System.Web.UI.WebControls.TreeView> Steuerelement. Dadurch können Sie eine Ereignisbehandlungsmethode bereitstellen, die eine benutzerdefinierte Routine ausführt, wenn dieses Ereignis tritt auf.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed> Ereignis Update des Inhalts von einer <xref:System.Web.UI.WebControls.Label> steuern, wenn der Benutzer einen Knoten im reduziert die <xref:System.Web.UI.WebControls.TreeView> Steuerelement.  
  
 [!code-aspx-csharp[TreeViewTreeNodeExpand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewTreeNodeExpand/CS/treeviewtreenodeexpandcs.aspx#1)]
 [!code-aspx-vb[TreeViewTreeNodeExpand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewTreeNodeExpand/VB/treeviewtreenodeexpandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="TreeNodeDataBound">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeDataBound;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeDataBound" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.TreeView.TreeNodeDataBound" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TreeNodeDataBound As TreeNodeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::TreeNodeEventHandler ^ TreeNodeDataBound;" />
      <MemberSignature Language="F#" Value="member this.TreeNodeDataBound : System.Web.UI.WebControls.TreeNodeEventHandler " Usage="member this.TreeNodeDataBound : System.Web.UI.WebControls.TreeNodeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wird ausgelöst, wenn ein Datenelement im <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelement an einen Knoten gebunden wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.TreeView.TreeNodeDataBound> Ereignis wird ausgelöst, wenn ein Datenelement, auf einen Knoten in gebunden ist der <xref:System.Web.UI.WebControls.TreeView> Steuerelement. Dadurch können Sie eine Ereignisbehandlungsmethode bereitstellen, die eine benutzerdefinierte Routine ausführt, wenn dieses Ereignis tritt auf.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Dieser Abschnitt enthält zwei Codebeispiele. Im ersten Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeView.TreeNodeDataBound> Ereignis so ändern Sie das Bild für einen Knoten aus, wenn eine Bedingung erfüllt ist. Das zweite Codebeispiel im ersten Codebeispiel wird XML-Daten bereit.  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeView.TreeNodeDataBound> Ereignis so ändern Sie das Bild für einen Knoten aus, wenn eine Bedingung erfüllt ist. Für dieses Beispiel ordnungsgemäß funktioniert müssen Sie die XML-Beispieldaten bereitgestellt, die nach diesem Codebeispiel, in eine Datei mit dem Namen Book.xml kopieren. Achten Sie auch darauf, geben Sie Ihre eigenen Images für dieses Beispiel angezeigt.  
  
 [!code-aspx-csharp[TreeViewTreeNodeDataBound#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewTreeNodeDataBound/CS/treeviewtreenodedataboundcs.aspx#1)]
 [!code-aspx-vb[TreeViewTreeNodeDataBound#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewTreeNodeDataBound/VB/treeviewtreenodedataboundvb.aspx#1)]  
  
 Im folgenden Codebeispiel wird der im vorangehenden Codebeispiel wird XML-Daten bereit.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="TreeNodeExpanded">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeExpanded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeExpanded" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.TreeView.TreeNodeExpanded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TreeNodeExpanded As TreeNodeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::TreeNodeEventHandler ^ TreeNodeExpanded;" />
      <MemberSignature Language="F#" Value="member this.TreeNodeExpanded : System.Web.UI.WebControls.TreeNodeEventHandler " Usage="member this.TreeNodeExpanded : System.Web.UI.WebControls.TreeNodeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wird ausgelöst, wenn ein Knoten im <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelement erweitert wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> Ereignis wird ausgelöst, wenn ein Knoten erweitert die <xref:System.Web.UI.WebControls.TreeView> Steuerelement. Dadurch können Sie eine Ereignisbehandlungsmethode bereitstellen, die eine benutzerdefinierte Routine ausführt, wenn dieses Ereignis tritt auf.  
  
> [!NOTE]
>  Wenn die <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> für einen Knoten ist-Eigenschaftensatz auf `TreeNodeSelectAction.Expand` oder `TreeNodeSelectAction.SelectExpand`, die <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> Ereignis wird auch ausgelöst, wenn in diesem Knoten geklickt wird die <xref:System.Web.UI.WebControls.TreeView> Steuerelement.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> Ereignis Update des Inhalts von einer <xref:System.Web.UI.WebControls.Label> steuern, wenn der Benutzer einen Knoten in erweitert die <xref:System.Web.UI.WebControls.TreeView> Steuerelement.  
  
 [!code-aspx-csharp[TreeViewTreeNodeExpand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewTreeNodeExpand/CS/treeviewtreenodeexpandcs.aspx#1)]
 [!code-aspx-vb[TreeViewTreeNodeExpand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewTreeNodeExpand/VB/treeviewtreenodeexpandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded(System.Web.UI.WebControls.TreeNodeEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.SelectAction" />
      </Docs>
    </Member>
    <Member MemberName="TreeNodePopulate">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodePopulate;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.TreeNodeEventHandler TreeNodePopulate" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TreeNodePopulate As TreeNodeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::TreeNodeEventHandler ^ TreeNodePopulate;" />
      <MemberSignature Language="F#" Value="member this.TreeNodePopulate : System.Web.UI.WebControls.TreeNodeEventHandler " Usage="member this.TreeNodePopulate : System.Web.UI.WebControls.TreeNodeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn ein Knoten, dessen <see cref="P:System.Web.UI.WebControls.TreeNode.PopulateOnDemand" />-Eigenschaft auf <see langword="true" /> festgelegt ist, im <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelement erweitert wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Manchmal ist es nicht praktikabel ist, die statisch vorzudefinieren die Baumstruktur aufgrund der Größe der Daten oder benutzerdefinierten Inhalt, der auf eine Benutzereingabe abhängig ist. Aus diesem Grund die <xref:System.Web.UI.WebControls.TreeView> Steuerelement unterstützt dynamische Knoten Auffüllung. Wenn die <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> -Eigenschaft für einen Knoten auf festgelegt ist `true`, dieser Knoten wird aufgefüllt, zur Laufzeit, wenn der Knoten erweitert ist.  
  
 Um einen Knoten dynamisch aufzufüllen, legen Sie zuerst die <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> Eigenschaft des Knotens mit `true`. Als Nächstes definieren Sie eine Ereignisbehandlungsmethode für den <xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate> Ereignis, das den Knoten programmgesteuert auffüllt. Eine typische Ereignisbehandlungsmethode Knotendaten aus einer Datenquelle abgerufen, fügt die Daten in eine Knotenstruktur und fügt dann die Knotenstruktur, die <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> Auflistung des Knotens, die aufgefüllt werden. Eine Knotenstruktur wird erstellt, indem <xref:System.Web.UI.WebControls.TreeNode> -Objekte und die <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> Auflistung von einem übergeordneten Knoten.  
  
> [!NOTE]
>  Wenn die <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> -Eigenschaft für einen Knoten auf festgelegt ist `true`, muss der Knoten dynamisch aufgefüllt werden. Sie können nicht deklarativ einen anderen Knoten darunter geschachtelt; andernfalls tritt ein Fehler auf der Seite.  
  
 Unterstützte Browser (Microsoft Internet Explorer 4.0-kompatiblen Browser und höher) auch clientseitige Knoten Population nutzen können. Wenn aktiviert, wird dadurch die <xref:System.Web.UI.WebControls.TreeView> Steuerelement einen Knoten dynamisch auf dem Client auffüllen, sobald der Knoten erweitert ist, wird verhindert, dass die Notwendigkeit zum Zurücksenden an den Server. Weitere Informationen zum Auffüllen von Client-Side-Knoten, finden Sie unter <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate> -Ereignis für das Füllen der Knoten in der <xref:System.Web.UI.WebControls.TreeView> Steuerelement dynamisch auf dem Server. Beachten Sie, dass die <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A> -Eigenschaftensatz auf `false` zu verhindern, dass die Knoten erweitern-Ereignisse, die auf dem Client verarbeitet wird.  
  
 [!code-aspx-csharp[TreeViewTreeNodePopulate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewTreeNodePopulate/CS/treeviewtreenodepopulatecs.aspx#1)]
 [!code-aspx-vb[TreeViewTreeNodePopulate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewTreeNodePopulate/VB/treeviewtreenodepopulatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodePopulate(System.Web.UI.WebControls.TreeNodeEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.PopulateOnDemand" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient" />
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public override bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Visible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Visible : bool with get, set" Usage="System.Web.UI.WebControls.TreeView.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das Steuerelement als Benutzeroberfläche der Seite dargestellt wird, oder legt diesen fest.</summary>
        <value>
          <see langword="true" />, wenn das Steuerelement auf der Seite sichtbar ist, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Web.UI.WebControls.TreeView.Visible%2A> -Eigenschaftensatz auf `false`, nicht das Steuerelement gerendert wird.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
      </Docs>
    </Member>
  </Members>
</Type>