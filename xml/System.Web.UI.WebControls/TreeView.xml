<Type Name="TreeView" FullName="System.Web.UI.WebControls.TreeView">
  <Metadata><Meta Name="ms.openlocfilehash" Value="644e5019335145296b521d6d60c4b71866ee67be" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70690342" /></Metadata><TypeSignature Language="C#" Value="public class TreeView : System.Web.UI.WebControls.HierarchicalDataBoundControl, System.Web.UI.ICallbackEventHandler, System.Web.UI.IPostBackDataHandler, System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TreeView extends System.Web.UI.WebControls.HierarchicalDataBoundControl implements class System.Web.UI.ICallbackEventHandler, class System.Web.UI.IPostBackDataHandler, class System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.TreeView" />
  <TypeSignature Language="VB.NET" Value="Public Class TreeView&#xA;Inherits HierarchicalDataBoundControl&#xA;Implements ICallbackEventHandler, IPostBackDataHandler, IPostBackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class TreeView : System::Web::UI::WebControls::HierarchicalDataBoundControl, System::Web::UI::ICallbackEventHandler, System::Web::UI::IPostBackDataHandler, System::Web::UI::IPostBackEventHandler" />
  <TypeSignature Language="F#" Value="type TreeView = class&#xA;    inherit HierarchicalDataBoundControl&#xA;    interface IPostBackEventHandler&#xA;    interface IPostBackDataHandler&#xA;    interface ICallbackEventHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.HierarchicalDataBoundControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.ICallbackEventHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackDataHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("SelectedNodeChanged")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.TreeViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlValueProperty("SelectedValue")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.TreeViewDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Zeigt hierarchische Daten, z. B. ein Inhaltsverzeichnis, in einer Struktur an.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In diesem Thema:  
  
-   [Introduction (Einführung)](#introduction)  
  
-   [Knoten](#nodes)  
  
-   [Statische Daten](#static_data)  
  
-   [Binden an Daten](#binding_to_data)  
  
-   [Dynamische Knoten Auffüllung](#dynamic_node_population)  
  
-   [Anpassen der Benutzeroberfläche](#customizing_the_user_interface)  
  
-   [Ereignisse](#events)  
  
-   [Scrollen](#scrolling)  
  
-   [Barrierefreiheit](#accessibility)  
  
-   [Deklarative Syntax](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Einführung  
 Das <xref:System.Web.UI.WebControls.TreeView> -Steuerelement wird verwendet, um hierarchische Daten, z. b. ein Inhaltsverzeichnis oder ein Datei Verzeichnis, in einer Baumstruktur anzuzeigen und die folgenden Funktionen zu unterstützen:  
  
-   Datenbindung, mit der die Knoten des-Steuer Elements an XML-, tabellarische oder relationale Daten gebunden werden können.  
  
-   Site Navigation durch Integration in das <xref:System.Web.UI.WebControls.SiteMapDataSource> -Steuerelement.  
  
-   Knoten Text, der entweder als nur-Text oder Hyperlinks angezeigt werden kann.  
  
-   Programm gesteuerter Zugriff <xref:System.Web.UI.WebControls.TreeView> auf das Objektmodell, um Strukturen zu erstellen, Knoten aufzufüllen, Eigenschaften festzulegen usw.  
  
-   Client seitige Knoten Population (auf unterstützten Browsern).  
  
-   Die Möglichkeit zum Anzeigen eines Kontrollkästchens neben jedem Knoten.  
  
-   Anpassbare Darstellung durch Designs, benutzerdefinierte Bilder und Stile.  
  
    > [!NOTE]
    >  Das <xref:System.Web.UI.WebControls.TreeView> -Steuerelement ist nur für die Verwendung <xref:System.Web.UI.UpdatePanel> in einem- <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A> Steuerelement vorgesehen `true`, wenn auf festgelegt ist. <xref:System.Web.UI.UpdatePanel>Steuerelemente werden verwendet, um ausgewählte Bereiche einer Seite zu aktualisieren, anstatt die gesamte Seite mit einem Postback zu aktualisieren. Weitere Informationen finden Sie unter Übersicht über das [Update Panel-Steuer](https://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a) Element und [Übersicht über das Seiten Rendering](https://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49).  
  
<a name="nodes"></a>   
## <a name="nodes"></a>Knoten  
 Das <xref:System.Web.UI.WebControls.TreeView> -Steuerelement besteht aus-Knoten. Jeder Eintrag in der Struktur wird als Knoten bezeichnet und wird durch ein <xref:System.Web.UI.WebControls.TreeNode> -Objekt dargestellt. Knoten Typen werden wie folgt definiert:  
  
-   Ein Knoten, der andere Knoten enthält, wird als über *geordneter Knoten*bezeichnet.  
  
-   Der Knoten, der in einem anderen Knoten enthalten ist, wird als untergeordneter *Knoten*bezeichnet.  
  
-   Ein Knoten, der keine untergeordneten Elemente hat, wird als *Blattknoten*bezeichnet.  
  
-   Der Knoten, der nicht in einem anderen Knoten enthalten ist, sondern der Vorgänger für alle anderen Knoten ist, ist der Stamm *Knoten*.  
  
 Ein Knoten kann sowohl ein über-als auch ein untergeordneter Knoten sein, aber Stamm Knoten, übergeordnete Knoten und Blattknoten schließen sich gegenseitig aus. Mehrere visuelle und Verhaltenseigenschaften von Knoten werden dadurch bestimmt, ob ein Knoten ein Stamm-, untergeordneter oder Blattknoten ist.  
  
 Obwohl eine typische Struktur nur über einen Stamm Knoten verfügt, können <xref:System.Web.UI.WebControls.TreeView> Sie mit dem-Steuerelement ihrer Struktur mehrere Stamm Knoten hinzufügen. Dies ist hilfreich, wenn Sie Element Auflistungen anzeigen möchten, ohne einen einzelnen Stamm Knoten anzuzeigen, wie in einer Liste von Produktkategorien.  
  
 Jeder Knoten verfügt über <xref:System.Web.UI.WebControls.TreeNode.Text%2A> eine-Eigenschaft <xref:System.Web.UI.WebControls.TreeNode.Value%2A> und eine-Eigenschaft. Der Wert der <xref:System.Web.UI.WebControls.TreeNode.Text%2A> -Eigenschaft wird in der <xref:System.Web.UI.WebControls.TreeView>angezeigt, während die <xref:System.Web.UI.WebControls.TreeNode.Value%2A> -Eigenschaft verwendet wird, um zusätzliche Daten über den Knoten zu speichern, z. b. Daten, die an das Post Back Ereignis, das dem Knoten zugeordnet ist, übermittelt werden.  
  
 Ein Knoten kann sich in einem von zwei Modi befinden: Auswahlmodus und Navigationsmodus. Standardmäßig befindet sich ein Knoten im Auswahlmodus. Um einen Knoten in den Navigationsmodus zu versetzen, <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> legen Sie die-Eigenschaft für den Knoten auf einen anderen Wert als eine leere Zeichenfolge ("") fest. Um einen Knoten in den Auswahlmodus zu versetzen, <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> legen Sie die-Eigenschaft für den Knoten auf eine leere Zeichenfolge ("") fest.  
  
> [!NOTE]
>  Einige Internet Browser haben eine Einschränkung, die sich auf die Leistung des <xref:System.Web.UI.WebControls.TreeView> Steuer Elements auswirken kann. Microsoft Internet Explorer 6,0 hat z. b. eine URL-Zeichen Beschränkung von 2067 Zeichen, die es sendet. Wenn die Anzahl der Zeichen in einer URL eines Knotens größer ist als diese Zahl, schlägt das Erweitern des Knotens fehl, und es wird keine Ausnahme ausgelöst.  
  
<a name="static_data"></a>   
## <a name="static-data"></a>Statische Daten  
 Das einfachste Datenmodell des <xref:System.Web.UI.WebControls.TreeView> Steuer Elements sind statische Daten. Wenn Sie statische Daten mithilfe der deklarativen Syntax anzeigen möchten, Schachteln Sie `<Nodes>` zunächst öffnende und schließende Tags zwischen dem <xref:System.Web.UI.WebControls.TreeView> öffnenden und dem schließenden Tag des Steuer Elements. Erstellen Sie als nächstes die Baumstruktur, `<asp:TreeNode>` indem Sie Elemente zwischen den öffnenden und Schließ `<Nodes>` enden Tags schachteln. Jedes `<asp:TreeNode>` -Element stellt einen Knoten in der Struktur dar und ist <xref:System.Web.UI.WebControls.TreeNode> einem-Objekt zugeordnet. Sie können die Eigenschaften der einzelnen Knoten festlegen, indem Sie die Attribute des `<asp:TreeNode>` Elements festlegen. Zum Erstellen von untergeordneten Knoten Schachteln `<asp:TreeNode>` Sie zusätzliche Elemente zwischen den öffnenden und Schließ `<asp:TreeNode>` enden Tags des übergeordneten Knotens.  
  
<a name="binding_to_data"></a>   
## <a name="binding-to-data"></a>Binden an Daten  
 Das <xref:System.Web.UI.WebControls.TreeView> Steuerelement kann auch an Daten gebunden werden. Sie können eine der beiden Methoden verwenden, um das <xref:System.Web.UI.WebControls.TreeView> Steuerelement an den entsprechenden Daten Quellentyp zu binden:  
  
-   Das <xref:System.Web.UI.WebControls.TreeView> -Steuerelement kann jedes Datenquellen-Steuerelement <xref:System.Web.UI.IHierarchicalDataSource> verwenden, das die- <xref:System.Web.UI.WebControls.XmlDataSource> Schnittstelle implementiert <xref:System.Web.UI.WebControls.SiteMapDataSource> , z. b. ein-Steuerelement Legen Sie zum Binden an ein Datenquellen-Steuer <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> Element die- <xref:System.Web.UI.WebControls.TreeView> Eigenschaft des- <xref:System.Web.UI.Control.ID%2A> Steuer Elements auf den Wert des Datenquellen-Steuer Elements fest. Das <xref:System.Web.UI.WebControls.TreeView> -Steuerelement bindet automatisch an das angegebene Datenquellen-Steuerelement. Dies ist die bevorzugte Methode, um Daten zu binden.  
  
-   Das <xref:System.Web.UI.WebControls.TreeView> -Steuerelement kann auch an ein <xref:System.Xml.XmlDocument> -Objekt oder <xref:System.Data.DataSet> ein-Objekt mit Beziehungen gebunden werden. Legen Sie die <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> -Eigenschaft <xref:System.Web.UI.WebControls.TreeView> des-Steuer Elements auf die Datenquelle fest, und klicken Sie dann auf die <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> -Methode, um eine Bindung an eine dieser Datenquellen herzustellen.  
  
 Beim Binden an eine Datenquelle, in der jedes Datenelement mehrere Eigenschaften enthält (z. b. ein XML-Element mit mehreren Attributen), zeigt ein Knoten den Wert `ToString` an, der von der-Methode des Datenelements standardmäßig zurückgegeben wird. Im Fall eines XML-Elements zeigt der Knoten den Elementnamen an, der die zugrunde liegende Struktur der Struktur anzeigt, ansonsten aber nicht sehr nützlich ist. Sie können einen Knoten an eine bestimmte Datenelement Eigenschaft binden, indem Sie Struktur Knoten Bindungen mithilfe <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> der-Auflistung angeben. Die <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> -Auflistung `TreeNodeBinding` enthält-Objekte, die die Beziehung zwischen einem Datenelement und dem Knoten definieren, an den er gebunden ist. Sie können die Kriterien für die Bindung und die Datenelement Eigenschaft angeben, die im Knoten angezeigt werden soll. Weitere Informationen zu Struktur Knoten Bindungen finden <xref:System.Web.UI.WebControls.TreeNodeBinding>Sie unter.  
  
> [!IMPORTANT]
>  Ein böswilliger Benutzer kann eine Rückruf Anforderung erstellen und Daten für die Knoten des <xref:System.Web.UI.WebControls.TreeView> Steuer Elements erhalten, die der Seiten Entwickler nicht anzeigt. Daher muss die Sicherheit der Daten von der Datenquelle implementiert werden. Verwenden Sie die <xref:System.Web.UI.WebControls.TreeView.MaxDataBindDepth%2A> -Eigenschaft nicht zum Ausblenden von Daten.  
  
<a name="dynamic_node_population"></a>   
## <a name="dynamic-node-population"></a>Dynamische Knoten Auffüllung  
 Manchmal ist es nicht praktikabel, die Struktur statisch zu definieren, da die Datenquelle zu viele Daten zurückgibt oder die anzuzeigenden Daten von Informationen abhängen, die Sie zur Laufzeit erhalten. Aus diesem Grund unterstützt <xref:System.Web.UI.WebControls.TreeView> das-Steuerelement die dynamische Knoten Auffüllung. Wenn die <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> -Eigenschaft für einen Knoten auf `true`festgelegt ist, wird dieser Knoten zur Laufzeit aufgefüllt, wenn der Knoten erweitert wird. Um einen Knoten dynamisch aufzufüllen, müssen Sie eine Ereignis Behandlungsmethode definieren, die die Logik zum Auffüllen eines Knotens für das <xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate> Ereignis enthält.  
  
 Browser, die Rückruf Skripts unterstützen, können auch die Client seitige Knoten Population nutzen. (Dies schließt Internet Explorer 5,5 und höher sowie einige andere Browser ein.) Durch die Client seitige Knoten Auffüllung <xref:System.Web.UI.WebControls.TreeView> kann das Steuerelement einen Knoten mithilfe eines Client Skripts auffüllen, wenn Benutzer den Knoten erweitern, ohne dass ein Roundtrip zum Server erforderlich ist. Weitere Informationen zur Client seitigen Knoten Population finden <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>Sie unter.  
  
<a name="customizing_the_user_interface"></a>   
## <a name="customizing-the-user-interface"></a>Anpassen der Benutzeroberfläche  
 Es gibt viele Möglichkeiten, die Darstellung des <xref:System.Web.UI.WebControls.TreeView> Steuer Elements anzupassen. Zuerst können Sie für jeden Knotentyp ein anderes Format angeben (z. b. Schriftart Größe und-Farbe).  
  
 Wenn Sie Cascading Stylesheets (CSS) verwenden, um die Darstellung des Steuer Elements anzupassen, verwenden Sie entweder Inline Stile oder eine separate CSS-Datei, aber nicht beides. Die Verwendung von Inline Formaten und einer separaten CSS-Datei kann zu unerwarteten Ergebnissen führen. Weitere Informationen zur Verwendung von Stylesheets mit Steuerelementen finden Sie unter [Webserver Steuerelemente und CSS-Stile](https://msdn.microsoft.com/library/782c2db6-fc9b-4243-8df9-a8ffe2f4cc42).  
  
 In der folgenden Tabelle sind die verfügbaren Knotenstile aufgeführt.  
  
|Knotenstil (Eigenschaft)|Beschreibung|  
|-------------------------|-----------------|  
|<xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>|Die Stileinstellungen für einen Knoten, wenn der Mauszeiger darauf positioniert ist.|  
|<xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>|Die Stileinstellungen für die Blattknoten.|  
|<xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>|Die Standardstil Einstellungen für einen Knoten.|  
|<xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>|Die Stileinstellungen für die übergeordneten Knoten.|  
|<xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>|Die Stileinstellungen für den Stamm Knoten.|  
|<xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>|Die Stileinstellungen für einen ausgewählten Knoten.|  
  
 Sie können auch den Stil der Knoten in einer bestimmten Tiefe innerhalb der Struktur steuern, indem <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> Sie die-Auflistung verwenden. Der erste Stil in der Auflistung entspricht dem Stil der Knoten auf der ersten Ebene in der Struktur. Der zweite Stil in der Auflistung entspricht dem Stil der Knoten auf der zweiten Ebene in der Struktur usw. Dies wird am häufigsten verwendet, um eine Tabelle mit Inhalts Stil-Navigationsmenüs zu generieren, in denen Knoten in einer bestimmten Tiefe die gleiche Darstellung aufweisen sollten, unabhängig davon, ob Sie über untergeordnete Knoten verfügen.  
  
> [!NOTE]
>  Wenn ein Stil für eine bestimmte tiefen Ebene mithilfe der <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> -Auflistung definiert ist, überschreibt dieser Stil alle Eigenschaften des Stamm Knotens, des übergeordneten Knotens oder des Blatt Knotens für die Knoten in dieser Tiefe.  
  
 Eine andere Möglichkeit, die Darstellung des Steuer Elements zu ändern, besteht darin, die im <xref:System.Web.UI.WebControls.TreeView> Steuerelement angezeigten Bilder anzupassen. Sie können einen eigenen benutzerdefinierten Satz von Bildern für die verschiedenen Teile des Steuer Elements angeben, indem Sie die in der folgenden Tabelle aufgeführten Eigenschaften festlegen.  
  
|Image-Eigenschaft|Beschreibung|  
|--------------------|-----------------|  
|<xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>|Die URL zu einem Bild, das für den Indikator des redusible-Knotens angezeigt wird. Bei diesem Bild handelt es sich normalerweise um ein Minuszeichen (-).|  
|<xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>|Die URL zu einem Bild, das für den Indikator des erweiterbaren Knotens angezeigt wird. Dieses Bild ist in der Regel ein Pluszeichen (+).|  
|<xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A>|Die URL zu dem Ordner, der die Linienbilder enthält, mit denen übergeordnete Knoten mit untergeordneten Knoten verbunden werden. Die <xref:System.Web.UI.WebControls.TreeView.ShowLines%2A> -Eigenschaft muss auch auf fest `true` gelegt werden, damit diese Eigenschaft einen Effekt hat.|  
|<xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>|Die URL zu einem Bild, das für den Indikator "nicht erweiterbare Knoten" angezeigt wird.|  
  
> [!NOTE]
>  Sie müssen nicht jede Bild Eigenschaft anpassen. Wenn eine Bild Eigenschaft nicht explizit festgelegt ist, wird das integrierte Standardbild verwendet.  
  
 Mit <xref:System.Web.UI.WebControls.TreeView> dem-Steuerelement können Sie auch ein Kontrollkästchen neben einem Knoten anzeigen. Wenn die <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> Eigenschaft auf einen anderen Wert als `TreeNodeTypes.None`festgelegt ist, werden neben den angegebenen Knoten Typen Kontrollkästchen angezeigt.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> -Eigenschaft kann auf eine bitweise Kombination <xref:System.Web.UI.WebControls.TreeNodeTypes> der Enumerationsmember-Werte festgelegt werden.  
  
 Jedes Mal, wenn die Seite an den Server gesendet wird <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A> , wird die Sammlung automatisch mit den ausgewählten Knoten aufgefüllt. Wenn Kontrollkästchen angezeigt werden, können Sie mit dem <xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged> -Ereignis eine benutzerdefinierte Routine ausführen, wenn sich der Zustand eines Kontrollkästchens zwischen den Beiträgen des Servers ändert.  
  
<a name="events"></a>   
## <a name="events"></a>Ereignisse  
 Das <xref:System.Web.UI.WebControls.TreeView> -Steuerelement stellt mehrere Ereignisse bereit, mit denen Sie programmieren können. Dies ermöglicht es Ihnen, eine benutzerdefinierte Routine immer dann auszuführen, wenn ein Ereignis auftritt. In der folgenden Tabelle sind die Ereignisse aufgelistet, die vom <xref:System.Web.UI.WebControls.TreeView> -Steuerelement unterstützt werden.  
  
|event|Beschreibung|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged>|Tritt auf, wenn die Kontrollkästchen <xref:System.Web.UI.WebControls.TreeView> des-Steuer Elements den Status zwischen den Beiträgen zum Server ändern.|  
|<xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>|Wird ausgelöst, wenn ein Knoten im <xref:System.Web.UI.WebControls.TreeView>-Steuerelement ausgewählt wird.|  
|<xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>|Wird ausgelöst, wenn ein Knoten im <xref:System.Web.UI.WebControls.TreeView>-Steuerelement erweitert wird.|  
|<xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed>|Wird ausgelöst, wenn ein Knoten im <xref:System.Web.UI.WebControls.TreeView>-Steuerelement reduziert wird.|  
|<xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>|Tritt ein, wenn ein Knoten, dessen <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>-Eigenschaft auf `true` festgelegt ist, im <xref:System.Web.UI.WebControls.TreeView>-Steuerelement erweitert wird.|  
|<xref:System.Web.UI.WebControls.TreeView.TreeNodeDataBound>|Wird ausgelöst, wenn ein Datenelement im <xref:System.Web.UI.WebControls.TreeView>-Steuerelement an einen Knoten gebunden wird.|  
  
<a name="scrolling"></a>   
## <a name="scrolling"></a>Scrollen  
 Das <xref:System.Web.UI.WebControls.TreeView> -Steuerelement verfügt über keinen integrierten Bildlauf. Um einen Bildlauf hinzuzufügen <xref:System.Web.UI.WebControls.TreeView> , platzieren Sie <xref:System.Web.UI.WebControls.Panel> das Steuerelement in einem Steuerelement <xref:System.Web.UI.WebControls.Panel> , und fügen Sie dem Steuerelement Scrollleisten Weitere Informationen finden Sie unter [Übersicht über das Panel-Webserver Steuer](https://msdn.microsoft.com/library/127b61ed-87f2-46f4-92a3-785166e7245b)Element.  
  
<a name="accessibility"></a>   
## <a name="accessibility"></a>Zugriff  
 Das standardmäßig für dieses Steuerelement gerenderte Markup entspricht möglicherweise nicht den Barrierefreiheits Standards. Ausführliche Informationen zur Unterstützung der Barrierefreiheit für dieses Steuerelement finden Sie unter [ASP.NET Controls and Accessibility](https://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Deklarative Syntax  
  
```  
<asp:TreeView  
    AccessKey="string"  
    AutoGenerateDataBindings="True|False"  
    BackColor="color name|#dddddd"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    CollapseImageToolTip="string"  
    CollapseImageUrl="uri"  
    CssClass="string"  
    DataSource="string"  
    DataSourceID="string"  
    EnableClientScript="True|False"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    ExpandDepth="string|FullyExpand|0|1|2|3|4|5|6|7|8|9|10|11|12|13|  
        14|15|16|17|18|19|20|21|22|23|24|25|26|27|28|29|30"  
    ExpandImageToolTip="string"  
    ExpandImageUrl="uri"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
       Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    Height="size"  
    ID="string"  
    ImageSet="Custom|XPFileExplorer|Msdn|WindowsHelp|Simple|Simple2|  
        BulletedList|BulletedList2|BulletedList3|BulletedList4|  
        Arrows|News|Contacts|Inbox|Events|Faq"  
    LineImagesFolder="string"  
    MaxDataBindDepth="integer"  
    NodeIndent="integer"  
    NodeWrap="True|False"  
    NoExpandImageUrl="uri"  
    OnDataBinding="DataBinding event handler"  
    OnDataBound="DataBound event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnSelectedNodeChanged="SelectedNodeChanged event handler"  
    OnTreeNodeCheckChanged="TreeNodeCheckChanged event handler"  
    OnTreeNodeCollapsed="TreeNodeCollapsed event handler"  
    OnTreeNodeDataBound="TreeNodeDataBound event handler"  
    OnTreeNodeExpanded="TreeNodeExpanded event handler"  
    OnTreeNodePopulate="TreeNodePopulate event handler"  
    OnUnload="Unload event handler"  
    PathSeparator="string"  
    PopulateNodesFromClient="True|False"  
    runat="server"  
    ShowCheckBoxes="None|Root|Parent|Leaf|All"  
    ShowExpandCollapse="True|False"  
    ShowLines="True|False"  
    SkinID="string"  
    SkipLinkText="string"  
    Style="string"  
    TabIndex="integer"  
    Target="string"  
    ToolTip="string"  
    Visible="True|False"  
    Width="size"  
>  
        <DataBindings>  
                <asp:TreeNodeBinding  
                    DataMember="string"  
                    Depth="integer"  
                    FormatString="string"  
                    ImageToolTip="string"  
                    ImageToolTipField="string"  
                    ImageUrl="uri"  
                    ImageUrlField="string"  
                    NavigateUrl="uri"  
                    NavigateUrlField="string"  
                    PopulateOnDemand="True|False"  
                    SelectAction="Select|Expand|SelectExpand|None"  
                    ShowCheckBox="string"  
                    Target="string"  
                    TargetField="string"  
                    Text="string"  
                    TextField="string"  
                    ToolTip="string"  
                    ToolTipField="string"  
                    Value="string"  
                    ValueField="string"  
                />  
        </DataBindings>  
        <HoverNodeStyle />  
        <LeafNodeStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            ChildNodesPadding="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ImageUrl="uri"  
            NodeSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <LevelStyles>  
                <asp:TreeNodeStyle  
                    BackColor="color name|#dddddd"  
                    BorderColor="color name|#dddddd"  
                    BorderStyle="NotSet|None|Dotted|Dashed|Solid|  
                        Double|Groove|Ridge|Inset|Outset"  
                    BorderWidth="size"  
                    ChildNodesPadding="size"  
                    CssClass="string"  
                    Font-Bold="True|False"  
                    Font-Italic="True|False"  
                    Font-Names="string"  
                    Font-Overline="True|False"  
                    Font-Size="string|Smaller|Larger|XX-Small|  
                        X-Small|Small|Medium|Large|X-Large|XX-Large"  
                    Font-Strikeout="True|False"  
                    Font-Underline="True|False"  
                    ForeColor="color name|#dddddd"  
                    Height="size"  
                    HorizontalPadding="size"  
                    ImageUrl="uri"  
                    NodeSpacing="size"  
                    OnDisposed="Disposed event handler"  
                    VerticalPadding="size"  
                    Width="size"  
                />  
        </LevelStyles>  
        <Nodes>  
                <asp:TreeNode  
                    Checked="True|False"  
                    Expanded="string"  
                    ImageToolTip="string"  
                    ImageUrl="uri"  
                    NavigateUrl="uri"  
                    PopulateOnDemand="True|False"  
                    SelectAction="Select|Expand|SelectExpand|None"  
                    Selected="True|False"  
                    ShowCheckBox="string"  
                    Target="string"  
                    Text="string"  
                    ToolTip="string"  
                    Value="string"  
>  
                </asp:TreeNode>  
        </Nodes>  
        <NodeStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            ChildNodesPadding="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ImageUrl="uri"  
            NodeSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <ParentNodeStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            ChildNodesPadding="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ImageUrl="uri"  
            NodeSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <RootNodeStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            ChildNodesPadding="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ImageUrl="uri"  
            NodeSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <SelectedNodeStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            ChildNodesPadding="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ImageUrl="uri"  
            NodeSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
</asp:TreeView>  
```  
  
   
  
## Examples  
 Dieser Abschnitt enthält sieben Codebeispiele:  
  
-   Im ersten Codebeispiel wird veranschaulicht, wie die Frames für das zweite Codebeispiel eingerichtet werden.  
  
-   Im zweiten Codebeispiel wird veranschaulicht, wie die deklarative Syntax verwendet wird, um statische <xref:System.Web.UI.WebControls.TreeView> Daten im-Steuerelement anzuzeigen.  
  
-   Im dritten Codebeispiel wird veranschaulicht, wie das <xref:System.Web.UI.WebControls.TreeView> -Steuerelement an eine XML-Datenquelle gebunden wird.  
  
-   Im vierten Codebeispiel werden Beispiel-XML-Daten für das dritte Codebeispiel bereitstellt.  
  
-   Im fünften Codebeispiel wird veranschaulicht, wie das <xref:System.Web.UI.WebControls.TreeView> -Steuerelement für die Website Navigation verwendet wird <xref:System.Web.UI.WebControls.SiteMapDataSource> , indem es an ein-Steuerelement gebunden wird  
  
-   Im sechsten Codebeispiel finden Sie Beispiel Daten zu Site Karten für das fünfte Codebeispiel.  
  
-   Im siebten Codebeispiel wird veranschaulicht, wie die Knoten im <xref:System.Web.UI.WebControls.TreeView> -Steuerelement vom Client aufgefüllt werden.  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie die Frames für das folgende Codebeispiel einrichten.  
  
 [!code-aspx-csharp[TreeViewFrameSet#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFrameSet/CS/framecs.aspx#1)]
 [!code-aspx-vb[TreeViewFrameSet#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFrameSet/VB/framevb.aspx#1)]  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie die deklarative Syntax verwendet wird, um statische <xref:System.Web.UI.WebControls.TreeView> Daten im-Steuerelement anzuzeigen. Dieses Beispiel wird im Frame-Satz des vorhergehenden Beispiels verwendet, um ein Inhaltsverzeichnis anzuzeigen.  
  
 [!code-aspx-csharp[TreeViewFrameExample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFrameExample/CS/treeviewframecs.aspx#1)]
 [!code-aspx-vb[TreeViewFrameExample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFrameExample/VB/treeviewframevb.aspx#1)]  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie das <xref:System.Web.UI.WebControls.TreeView> -Steuerelement an eine XML-Datenquelle gebunden wird. Damit dieses Beispiel ordnungsgemäß funktioniert, müssen Sie die Beispiel-XML-Daten, die nach diesem Codebeispiel bereitgestellt werden, in eine Datei namens "Book. xml" kopieren.  
  
 [!code-aspx-csharp[TreeViewXml#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewXml/CS/treeviewxmlcs.aspx#1)]
 [!code-aspx-vb[TreeViewXml#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewXml/VB/treeviewxmlvb.aspx#1)]  
  
 Das folgende Codebeispiel enthält Beispiel-XML-Daten für das vorherige Beispiel.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie das <xref:System.Web.UI.WebControls.TreeView> -Steuerelement für die Website Navigation verwendet wird <xref:System.Web.UI.WebControls.SiteMapDataSource> , indem es an ein Steuerelement gebunden wird. Damit dieses Beispiel ordnungsgemäß funktioniert, müssen Sie die Beispiel Daten der Site Map, die nach diesem Codebeispiel bereitgestellt werden, in eine Datei namens "Web. Sitemap" kopieren.  
  
 [!code-aspx-csharp[TreeViewAutoGenerateBindings#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewAutoGenerateBindings/CS/treeviewautogeneratebindingscs.aspx#1)]
 [!code-aspx-vb[TreeViewAutoGenerateBindings#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewAutoGenerateBindings/VB/treeviewautogeneratebindingsvb.aspx#1)]  
  
 Das folgende Codebeispiel stellt Beispiel Daten zu Site Karten für das vorherige Codebeispiel bereit.  
  
```  
<siteMap>  
    <siteMapNode title="Home" description="Home" url="default.aspx">  
        <siteMapNode title="Products" description="Products" url="Products.aspx">  
            <siteMapNode title="Computers" url="Computers.aspx"/>  
            <siteMapNode title="Accessories" url="Accessories.aspx"/>       
        </siteMapNode>  
    </siteMapNode>  
</siteMap>  
```  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie die Knoten im <xref:System.Web.UI.WebControls.TreeView> -Steuerelement vom Client aufgefüllt werden. Wenn die Client seitige Knoten Auffüllung aktiviert ist, werden die Knoten dynamisch auf dem Client aufgefüllt, ohne dass Sie an den Server zurückgesendet werden müssen.  
  
 [!code-aspx-csharp[TreeViewPopulateNodesFromClient#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/CS/treeviewpopulatenodesfromclientcs.aspx#1)]
 [!code-aspx-vb[TreeViewPopulateNodesFromClient#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/VB/treeviewpopulatenodesfromclientvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.WebControls.DataBoundControl.DataSourceID" />
    <altmember cref="P:System.Web.UI.WebControls.TreeView.DataBindings" />
    <altmember cref="P:System.Web.UI.WebControls.TreeView.EnableClientScript" />
    <altmember cref="T:System.Web.UI.IHierarchicalDataSource" />
    <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
    <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowCheckBoxes" />
    <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
    <altmember cref="T:System.Web.UI.WebControls.TreeNodeBinding" />
    <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
    <altmember cref="T:System.Web.UI.WebControls.TreeNodeCollection" />
    <altmember cref="T:System.Web.UI.WebControls.SiteMapDataSource" />
    <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged" />
    <altmember cref="E:System.Web.UI.WebControls.TreeView.SelectedNodeChanged" />
    <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeExpanded" />
    <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed" />
    <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" />
    <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeDataBound" />
    <related type="Article" href="https://msdn.microsoft.com/library/6b85a558-1df8-44cf-bea6-62e61bcc8d20">ASP.net Site Maps</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeView();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.TreeView" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.TreeView.%23ctor%2A> Konstruktor erstellt und initialisiert eine neue Instanz der dem <xref:System.Web.UI.WebControls.TreeView> Klasse. Um einer Seite <xref:System.Web.UI.WebControls.TreeView> ein-Steuerelement dynamisch hinzuzufügen, erstellen <xref:System.Web.UI.WebControls.TreeView> Sie ein neues-Objekt, legen Sie dessen Eigenschaften fest, <xref:System.Web.UI.Control.Controls%2A?displayProperty=nameWithType> und fügen Sie es der-Auflistung eines Container <xref:System.Web.UI.WebControls.PlaceHolder> Steuer Elements hinzu, z. b. das-Steuerelement.  
  
   
  
## Examples  
 Dieser Abschnitt enthält zwei Codebeispiele. Im ersten Codebeispiel wird veranschaulicht, wie der <xref:System.Web.UI.WebControls.TreeView.%23ctor%2A> -Konstruktor verwendet wird <xref:System.Web.UI.WebControls.TreeView> , um ein-Steuerelement dynamisch zu einer Seite hinzuzufügen. Im zweiten Codebeispiel werden Beispiel-XML-Daten für das erste Codebeispiel bereitstellt.  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie der <xref:System.Web.UI.WebControls.TreeView.%23ctor%2A> -Konstruktor verwendet wird <xref:System.Web.UI.WebControls.TreeView> , um ein-Steuerelement dynamisch zu einer Seite hinzuzufügen. Damit dieses Beispiel ordnungsgemäß funktioniert, müssen Sie die Beispiel-XML-Daten, die nach diesem Codebeispiel bereitgestellt werden, in eine Datei namens "Book. xml" kopieren.  
  
 [!code-aspx-csharp[TreeViewCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCtor/CS/treeviewctorcs.aspx#1)]
 [!code-aspx-vb[TreeViewCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCtor/VB/treeviewctorvb.aspx#1)]  
  
 Das folgende Codebeispiel enthält Beispiel-XML-Daten für das vorherige Beispiel.  
  
```  
<Book Title="Book Title">  
  <Chapter Heading="Chapter 1">  
    <Section Heading="Section 1">  
    </Section>  
    <Section Heading="Section 2">  
    </Section>  
  </Chapter>  
  <Chapter Heading="Chapter 2">  
    <Section Heading="Section 1">  
    </Section>  
  </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="T:System.Web.UI.WebControls.PlaceHolder" />
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.AddAttributesToRender : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="treeView.AddAttributesToRender writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Ein <see cref="T:System.Web.UI.HtmlTextWriter" />, der den Ausgabestream für das Rendering von HTML-Inhalten auf dem Client darstellt.</param>
        <summary>Fügt dem angegebenen <see cref="T:System.Web.UI.HtmlTextWriter" />-Steuerelement die darzustellenden HTML-Attribute und -Formatvorlagen hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.TreeView.AddAttributesToRender%2A> -Methode wird hauptsächlich von Steuerelement Entwicklern verwendet.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="AutoGenerateDataBindings">
      <MemberSignature Language="C#" Value="public bool AutoGenerateDataBindings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoGenerateDataBindings" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoGenerateDataBindings As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoGenerateDataBindings { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoGenerateDataBindings : bool with get, set" Usage="System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob das <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelement Strukturknotenbindungen automatisch generiert.</summary>
        <value><see langword="true" />, damit das <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelement automatisch Strukturknotenbindungen generiert, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Struktur Knoten Bindungen definieren die Beziehung zwischen einem Datenelement und dem Knoten, an den es gebunden wird. Beim Binden an eine Datenquelle, in der jedes Datenelement mehrere Eigenschaften enthält (z. b. ein XML-Element mit <xref:System.Web.UI.WebControls.TreeView> mehreren Attributen), muss das Steuerelement wissen, welche Daten <xref:System.Web.UI.WebControls.TreeNode> Element Eigenschaft an welche Eigenschaft gebunden werden soll. Wenn die <xref:System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings%2A> -Eigenschaft auf `true`festgelegt ist <xref:System.Web.UI.WebControls.TreeView> , generiert das-Steuerelement automatisch Standardstruktur <xref:System.Web.UI.WebControls.TreeNode> Knoten <xref:System.Web.UI.WebControls.TreeNode.Text%2A> Bindungen, die die-Eigenschaft des-Objekts, das der Bindung zugeordnet ist, mit dem Wert, der wird von der `ToString` -Methode des Datenelements zurückgegeben.  
  
> [!NOTE]
>  Die automatisch generierten Struktur Knoten Bindungen werden der <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> Auflistung nicht hinzugefügt.  
  
 Bei einem XML-Element ist der Wert, der von der `ToString` -Methode zurückgegeben wird, der Elementname, der die zugrunde liegende Struktur der XML-Datei anzeigt, aber andernfalls nicht sehr nützlich ist. Um eine nützlichere Struktur zu erstellen, müssen Sie eigene Struktur Knoten Bindungen definieren, indem Sie die <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> Auflistung auffüllen.  
  
> [!NOTE]
>  Wenn Sie eine <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> Auflistung definieren, verwendet <xref:System.Web.UI.WebControls.TreeView> das Steuerelement diese Werte anstelle von automatisch generierten Struktur Knoten Bindungen.  
  
 Der Wert dieser Eigenschaft wird im Ansichts Zustand gespeichert.  
  
   
  
## Examples  
 Dieser Abschnitt enthält zwei Codebeispiele. Im ersten Codebeispiel wird veranschaulicht, wie die automatische Generierung von Struktur Knoten Bindungen deaktiviert <xref:System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings%2A> wird, `false`indem die-Eigenschaft auf festgelegt wird. Im zweiten Codebeispiel werden Beispiel Daten zu Site Karten für das erste Codebeispiel bereitstellt.  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie die automatische Generierung von Struktur Knoten Bindungen deaktiviert <xref:System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings%2A> wird, `false`indem die-Eigenschaft auf festgelegt wird. Anschließend <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> wird eine Auflistung definiert, um die Beziehung zwischen den Datenelementen in einem <xref:System.Web.UI.WebControls.SiteMapDataSource> <xref:System.Web.UI.WebControls.TreeView> -Steuerelement und den Knoten des-Steuer Elements herzustellen. Damit dieses Beispiel ordnungsgemäß funktioniert, müssen Sie die Beispiel Daten der Site Map, die nach diesem Codebeispiel bereitgestellt werden, in eine Datei namens "Web. Sitemap" kopieren.  
  
 [!code-aspx-csharp[TreeViewAutoGenerateBindings#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewAutoGenerateBindings/CS/treeviewautogeneratebindingscs.aspx#1)]
 [!code-aspx-vb[TreeViewAutoGenerateBindings#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewAutoGenerateBindings/VB/treeviewautogeneratebindingsvb.aspx#1)]  
  
 Das folgende Codebeispiel stellt Beispiel Daten zu Site Karten für das vorherige Beispiel bereit.  
  
```  
<siteMap>  
    <siteMapNode title="Home" description="Home" url="default.aspx">  
        <siteMapNode title="Products" description="Products" url="Products.aspx">  
            <siteMapNode title="Computers" url="Computers.aspx"/>  
            <siteMapNode title="Accessories" url="Accessories.aspx"/>       
        </siteMapNode>  
    </siteMapNode>  
</siteMap>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.DataBindings" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeBinding" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" />
      </Docs>
    </Member>
    <Member MemberName="CheckedNodes">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeCollection CheckedNodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeCollection CheckedNodes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.CheckedNodes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CheckedNodes As TreeNodeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeCollection ^ CheckedNodes { System::Web::UI::WebControls::TreeNodeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CheckedNodes : System.Web.UI.WebControls.TreeNodeCollection" Usage="System.Web.UI.WebControls.TreeView.CheckedNodes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Auflistung von <see cref="T:System.Web.UI.WebControls.TreeNode" />-Objekten ab, die die Knoten im <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelement darstellen, bei denen ein aktiviertes Kontrollkästchen angezeigt wird.</summary>
        <value>Eine <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />, die die Knoten in der <see cref="T:System.Web.UI.WebControls.TreeView" /> enthält, bei denen ein aktiviertes Kontrollkästchen angezeigt wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn im <xref:System.Web.UI.WebControls.TreeView> -Steuerelement Kontrollkästchen angezeigt werden (durch Festlegen <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> der-Eigenschaft auf einen anderen `TreeNodeType.None`Wert als), <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A> verwenden Sie die-Eigenschaft, um zu bestimmen, welche Knoten ein ausgewähltes Kontrollkästchen anzeigen. Diese Auflistung wird häufig verwendet, um alle Knoten zu durchlaufen, für die ein aktivierter Kontrollkästchen in der Struktur aktiviert ist.  
  
 Das <xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged> -Ereignis wird ausgelöst, wenn die Kontrollkästchen <xref:System.Web.UI.WebControls.TreeView> des-Steuer Elements den Status zwischen den Beiträgen zum Server ändern. Dies ermöglicht es Ihnen, eine Ereignis Behandlungsmethode bereitzustellen, die eine benutzerdefinierte Routine ausführt, z. b. das Aktualisieren einer Datenbank oder des angezeigten Inhalts, wenn dieses Ereignis auftritt.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A> Sammlung wird mithilfe eines tiefen ersten Durchlaufs der Struktur aufgefüllt: jeder übergeordnete Knoten wird bis zu seinen untergeordneten Knoten verarbeitet, bevor der nächste übergeordnete Knoten aufgefüllt wird.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A> -Eigenschaft verwendet wird, um zu bestimmen, welche Knoten <xref:System.Web.UI.WebControls.TreeView> im-Steuerelement ein ausgewähltes Kontrollkästchen aufweisen.  
  
 [!code-aspx-csharp[TreeViewShowCheckBoxes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewShowCheckBoxes/CS/treeviewshowcheckboxescs.aspx#1)]
 [!code-aspx-vb[TreeViewShowCheckBoxes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewShowCheckBoxes/VB/treeviewshowcheckboxesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowCheckBoxes" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeCollection" />
      </Docs>
    </Member>
    <Member MemberName="CollapseAll">
      <MemberSignature Language="C#" Value="public void CollapseAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CollapseAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.CollapseAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub CollapseAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CollapseAll();" />
      <MemberSignature Language="F#" Value="member this.CollapseAll : unit -&gt; unit" Usage="treeView.CollapseAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Schließt jeden Knoten in der Struktur.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.TreeView.CollapseAll%2A> -Methode bietet eine bequeme Möglichkeit, jeden Knoten in der Struktur zu schließen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeView.CollapseAll%2A> -Methode verwendet wird, um alle Knoten <xref:System.Web.UI.WebControls.TreeView> im-Steuerelement gleichzeitig zu reduzieren.  
  
 [!code-aspx-csharp[TreeViewExpandAll#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewExpandAll/CS/treeviewexpandallcs.aspx#1)]
 [!code-aspx-vb[TreeViewExpandAll#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewExpandAll/VB/treeviewexpandallvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.ExpandAll" />
      </Docs>
    </Member>
    <Member MemberName="CollapseImageToolTip">
      <MemberSignature Language="C#" Value="public string CollapseImageToolTip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CollapseImageToolTip" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.CollapseImageToolTip" />
      <MemberSignature Language="VB.NET" Value="Public Property CollapseImageToolTip As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CollapseImageToolTip { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CollapseImageToolTip : string with get, set" Usage="System.Web.UI.WebControls.TreeView.CollapseImageToolTip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die QuickInfo für das Bild ab, das für den Indikator des reduzierbaren Knotens angezeigt wird, oder legt die QuickInfo fest.</summary>
        <value>Die QuickInfo für das für den Indikator des reduzierbaren Knotens angezeigte Bild.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.TreeView.CollapseImageToolTip%2A> die-Eigenschaft, um eine QuickInfo für das redusible-Bild anzugeben. Der von Ihnen angegebene Text bietet Hilfstechnologiegeräte mit einer Beschreibung des Bilds, das verwendet werden kann, um das Steuerelement leichter zugänglich zu machen.  
  
 Der Wert dieser Eigenschaft wird im Ansichts Zustand gespeichert.  
  
 Der Wert dieser Eigenschaft, wenn festgelegt, kann mithilfe eines Designers Tools automatisch zu einer Ressourcendatei gespeichert werden. Weitere Informationen finden Sie unter <xref:System.ComponentModel.LocalizableAttribute> und [Globalisierung und Lokalisierung](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeView.CollapseImageToolTip%2A> -Eigenschaft verwendet wird, um eine QuickInfo für ein Bild anzugeben, das für den Indikator des redusible-Knotens angezeigt wird.  
  
 [!code-aspx-csharp[TreeViewCustomImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCustomImage/CS/treeviewcustomimagecs.aspx#1)]
 [!code-aspx-vb[TreeViewCustomImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCustomImage/VB/treeviewcustomimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ImageSet" />
      </Docs>
    </Member>
    <Member MemberName="CollapseImageUrl">
      <MemberSignature Language="C#" Value="public string CollapseImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CollapseImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property CollapseImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CollapseImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CollapseImageUrl : string with get, set" Usage="System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die URL zu einem benutzerdefinierten Bild für den Indikator eines reduzierbaren Knotens ab oder legt diese fest.</summary>
        <value>Die URL zu einem benutzerdefinierten Bild, das für reduzierbare Knoten angezeigt werden soll. Der Standardwert ist eine leere Zeichenfolge (""), die das Standardbild mit dem Minuszeichen (-) anzeigt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> die-Eigenschaft, um ein benutzerdefiniertes Image für den Indikator "redusible Node" anzugeben. Dieses Bild wird neben einem redusible-Knoten angezeigt und ist in der Regel ein Minuszeichen (-).  
  
 Wenn die <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> -Eigenschaft auf `true`festgelegt ist <xref:System.Web.UI.WebControls.TreeView> , zeigt das Steuerelement ein Pluszeichen (+) oder ein Minuszeichen (-) oder ein Platzhalter Bild neben einem Knoten an, um anzugeben, ob der Knoten erweiterbar bzw. reduzierbar bzw. nicht erweiterbar ist. Sie können benutzerdefinierte Images angeben, indem Sie <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> zuerst die `TreeViewImageSet.Custom`-Eigenschaft auf festlegen und <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>dann <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>die Eigenschaften <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> , und auf die URLs für die benutzerdefinierten Images festlegen. Wenn keine Bilder angegeben sind, werden die Standardbilder verwendet. Um die Erweiterungs Knoten Indikatoren auszublenden, legen <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> Sie die `false`-Eigenschaft auf fest.  
  
> [!NOTE]
>  Stellen Sie sicher, dass alle von den <xref:System.Web.UI.WebControls.TreeView> <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>Eigenschaften, <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>und angegebenen Bilder die gleichen Dimensionen aufweisen, um sicherzustellen, dass die Knoten beim Verwenden von <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> benutzerdefinierten Images ordnungsgemäß im-Steuerelement ausgerichtet sind.  
  
 Wenn Sie ein benutzerdefiniertes Image für den Indikator des redusible-Knotens verwenden, <xref:System.Web.UI.WebControls.TreeView.CollapseImageToolTip%2A> sollten Sie auch die-Eigenschaft festlegen, um eine QuickInfo für das Bild anzugeben.  
  
 Der Wert dieser Eigenschaft wird im Ansichts Zustand gespeichert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> -Eigenschaft verwendet wird, um ein benutzerdefiniertes Image für den Indikator "redusible Node" anzugeben. Damit das Codebeispiel angezeigt wird und das Bild im-Steuerelement angezeigt wird, müssen Sie ein eigenes Bild bereitstellen <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> , und die-Eigenschaft `TreeNodeImageSet.Custom`muss auf festgelegt werden.  
  
 [!code-aspx-csharp[TreeViewCustomImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCustomImage/CS/treeviewcustomimagecs.aspx#1)]
 [!code-aspx-vb[TreeViewCustomImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCustomImage/VB/treeviewcustomimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowExpandCollapse" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ImageSet" />
        <altmember cref="T:System.Web.UI.WebControls.TreeViewImageSet" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NoExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageToolTip" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberSignature Language="F#" Value="override this.CreateControlCollection : unit -&gt; System.Web.UI.ControlCollection" Usage="treeView.CreateControlCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt eine Auflistung zum Speichern untergeordneter Steuerelemente.</summary>
        <returns>Gibt immer eine <see cref="T:System.Web.UI.EmptyControlCollection" /> zurück.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Web.UI.WebControls.TreeView> -Steuerelement unterstützt keine Einbettung von untergeordneten Steuerelementen. Diese Methode wurde überschrieben, um das Hinzufügen von untergeordneten Steuerelementen zu verhindern <xref:System.Web.UI.EmptyControlCollection?displayProperty=nameWithType> , und gibt immer ein-Objekt zurück.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.EmptyControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="CreateNode">
      <MemberSignature Language="C#" Value="protected internal virtual System.Web.UI.WebControls.TreeNode CreateNode ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Web.UI.WebControls.TreeNode CreateNode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.CreateNode" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreateNode () As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Web::UI::WebControls::TreeNode ^ CreateNode();" />
      <MemberSignature Language="F#" Value="abstract member CreateNode : unit -&gt; System.Web.UI.WebControls.TreeNode&#xA;override this.CreateNode : unit -&gt; System.Web.UI.WebControls.TreeNode" Usage="treeView.CreateNode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt eine neue Instanz der <see cref="T:System.Web.UI.WebControls.TreeNode" />-Klasse zurück. <see cref="M:System.Web.UI.WebControls.TreeView.CreateNode" /> ist eine Hilfsmethode.</summary>
        <returns>Eine neue Instanz der <see cref="T:System.Web.UI.WebControls.TreeNode" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei <xref:System.Web.UI.WebControls.TreeView.CreateNode%2A> der-Methode handelt es sich um eine Hilfsmethode, die <xref:System.Web.UI.WebControls.TreeNode> eine neue Instanz der-Klasse zurückgibt.  
  
 Die <xref:System.Web.UI.WebControls.TreeView.CreateNode%2A> -Methode wird hauptsächlich von Steuerelement Entwicklern verwendet. Steuerelement Entwickler, die die <xref:System.Web.UI.WebControls.TreeView> -Klasse durch Erweiterung der <xref:System.Web.UI.WebControls.TreeNode> -Klasse erweitern möchten, sollten diese Methode überschreiben, um ein <xref:System.Web.UI.WebControls.TreeNode>Objekt zurückzugeben, das von abgeleitet wird. Ein allgemeiner Grund zum Erweitern der <xref:System.Web.UI.WebControls.TreeNode> -Klasse ist das über <xref:System.Web.UI.WebControls.TreeNode.RenderPreText%2A> schreiben <xref:System.Web.UI.WebControls.TreeNode.RenderPostText%2A> der-Methode und der-Methode.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="public override sealed void DataBind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DataBind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.DataBind" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub DataBind ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void DataBind();" />
      <MemberSignature Language="F#" Value="override this.DataBind : unit -&gt; unit" Usage="treeView.DataBind " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft die <see cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" />-Methode der Basisklasse auf.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Daten gebundene Steuerelemente sollten die <xref:System.Web.UI.WebControls.TreeView.PerformDataBinding%2A> -Methode anstelle der <xref:System.Web.UI.WebControls.TreeView.DataBind%2A> -Methode überschreiben.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.PerformDataBinding" />
      </Docs>
    </Member>
    <Member MemberName="DataBindings">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeBindingCollection DataBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeBindingCollection DataBindings" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.DataBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataBindings As TreeNodeBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeBindingCollection ^ DataBindings { System::Web::UI::WebControls::TreeNodeBindingCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataBindings : System.Web.UI.WebControls.TreeNodeBindingCollection" Usage="System.Web.UI.WebControls.TreeView.DataBindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.TreeViewBindingsEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.TreeViewBindingsEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Auflistung von <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" />-Objekten ab, die die Beziehung zwischen einem Datenelement und dem Knoten, an den es gebunden werden soll, definieren.</summary>
        <value>Eine <see cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" />, die die Beziehung zwischen einem Datenelement und dem Knoten darstellt, an den es gebunden werden soll.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> -Auflistung <xref:System.Web.UI.WebControls.TreeNodeBinding> enthält-Objekte, die die Beziehung zwischen einem Datenelement und dem Knoten definieren, an den er gebunden ist. Beim Binden an eine Datenquelle, in der jedes Datenelement mehrere Eigenschaften enthält (z. b. ein XML-Element mit mehreren Attributen), zeigt ein Knoten den Wert `ToString` an, der von der-Methode des Datenelements standardmäßig zurückgegeben wird. Im Fall eines XML-Elements zeigt der Knoten den Elementnamen an, der die zugrunde liegende Struktur der Struktur anzeigt, aber andernfalls nicht sehr nützlich ist. Sie können einen Knoten an eine bestimmte Datenelement Eigenschaft binden, indem Sie Struktur Knoten Bindungen angeben.  
  
 Wenn Sie die Beziehung zwischen einem Datenelement und einem Knoten definieren, müssen Sie sowohl die Kriterien für die Bindung als auch die Werte angeben, die an <xref:System.Web.UI.WebControls.TreeNode> die Eigenschaften des Objekts gebunden werden sollen. Die Kriterien geben an, wann ein Datenelement an einen Knoten gebunden werden soll. Die Kriterien können mit einer Knoten Tiefe, einem Datenmember oder beidem angegeben werden. Eine Knoten Tiefe gibt die Knotenebene an, die gebunden wird. Wenn Sie z. b. eine Knoten Tiefe von 0 angeben, werden alle Knoten in der Baumstruktur auf Ebene 0 mithilfe der Struktur Knoten Bindung gebunden. Ein Datenmember gibt den Typ des Datenelements in der zugrunde liegenden Datenquelle an, kann jedoch unterschiedliche Informationen darstellen, abhängig von der Datenquelle. Der-Datenmember für ein XML-Element gibt z. b. den Namen des Elements an.  
  
 Wenn mehrere <xref:System.Web.UI.WebControls.TreeNodeBinding> Objekte definiert sind, die miteinander in Konflikt stehen, <xref:System.Web.UI.WebControls.TreeView> wendet das Steuerelement die Struktur Knoten Bindungen in der folgenden Rangfolge an:  
  
1.  Das <xref:System.Web.UI.WebControls.TreeNodeBinding> -Objekt, das eine Tiefe und einen Datenmember definiert.  
  
2.  Das <xref:System.Web.UI.WebControls.TreeNodeBinding> -Objekt, das nur die Tiefe definiert.  
  
3.  Das <xref:System.Web.UI.WebControls.TreeNodeBinding> -Objekt, das nur den Datenmember definiert.  
  
4.  Das <xref:System.Web.UI.WebControls.TreeNodeBinding> -Objekt, das weder die Tiefe noch den Datenmember definiert.  
  
 Wenn mehrere Bindungen angegeben werden, die dieselben Rang Folge Kriterien erfüllen, wird die erste Bindung in der Auflistung angewendet.  
  
 Nachdem Sie die Bindungs Kriterien festgelegt haben, können Sie eine Eigenschaft eines <xref:System.Web.UI.WebControls.TreeNode> -Objekts binden, die an einen-Wert gebunden werden kann. Sie können entweder eine Bindung an ein Attribut oder Feld eines Datenelements oder einen statischen Wert durchführen. Weitere Informationen zum Binden der Eigenschaften eines <xref:System.Web.UI.WebControls.TreeNode> -Objekts an einen-Wert finden <xref:System.Web.UI.WebControls.TreeNodeBinding>Sie unter.  
  
 Obwohl die <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> Auflistung Programm gesteuert aufgefüllt werden kann, wird Sie normalerweise deklarativ festgelegt. Um die Struktur Knoten Bindungen anzugeben, Schachteln Sie zuerst öffnende `<DataBindings>` und schließende Tags zwischen dem öffnenden und <xref:System.Web.UI.WebControls.TreeView> dem schließenden Tag des Steuer Elements. Platzieren `<asp:TreeNodeBinding>` Sie als nächstes Elemente zwischen den öffnenden `<DataBindings>` und schließenden Tags für jede Struktur Knoten Bindung, die Sie angeben möchten.  
  
 Wenn Daten Bindungen erstellt werden, indem die <xref:System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings%2A> -Eigenschaft <xref:System.Web.UI.WebControls.TreeView> des-Steuer `true`Elements auf festgelegt wird, wird bei <xref:System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand%2A> den erstellten Bindungen `true`die-Eigenschaft auf festgelegt. Daten Bindungen, die deklarativ erstellt werden, <xref:System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand%2A> haben die- `false`Eigenschaft auf festgelegt. Mithilfe der deklarativen Syntax können Sie das Verhalten einzelner Daten Bindungen steuern.  
  
   
  
## Examples  
 Dieser Abschnitt enthält zwei Codebeispiele. Im ersten Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> -Auflistung verwendet wird, um die Beziehung zwischen einem Datenelement und dem Knoten zu definieren, an den es gebunden wird. Im zweiten Codebeispiel werden Beispiel-XML-Daten für das erste Codebeispiel bereitstellt.  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> -Auflistung verwendet wird, um die Beziehung zwischen einem Datenelement und dem Knoten zu definieren, an den es gebunden wird. Damit dieses Beispiel ordnungsgemäß funktioniert, müssen Sie die Beispiel-XML-Daten, die nach diesem Codebeispiel bereitgestellt werden, in eine Datei namens "Book. xml" kopieren. In diesem Beispiel wird nur <xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A> die-Eigenschaft der Bindung angegeben. Ein geringfügiger Leistungsgewinn konnte durch Angeben der <xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A> -Eigenschaft hinzugefügt werden.  
  
 [!code-aspx-csharp[TreeViewXml#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewXml/CS/treeviewxmlcs.aspx#1)]
 [!code-aspx-vb[TreeViewXml#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewXml/VB/treeviewxmlvb.aspx#1)]  
  
 Das folgende Codebeispiel enthält Beispiel-XML-Daten für das vorherige Beispiel.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeBinding" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" />
      </Docs>
    </Member>
    <Member MemberName="EnableClientScript">
      <MemberSignature Language="C#" Value="public bool EnableClientScript { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableClientScript" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.EnableClientScript" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableClientScript As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableClientScript { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableClientScript : bool with get, set" Usage="System.Web.UI.WebControls.TreeView.EnableClientScript" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob das <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelement clientseitiges Skript zum Verarbeiten von Erweiterungs- oder Reduzierungsereignissen rendert.</summary>
        <value><see langword="true" />, um das clientseitige Skript in kompatiblen Browsern zu rendern, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A> die-Eigenschaft, um <xref:System.Web.UI.WebControls.TreeView> anzugeben, ob das-Steuerelement Client seitiges Skript in kompatiblen Browsern rendert, um das erweitern und reduzieren von Ereignissen zu verarbeiten Wenn diese Eigenschaft auf `true`festgelegt ist, führen kompatible Browser den Code aus, um Knoten auf dem Client zu erweitern und zu reduzieren. Die Struktur Knoten Daten müssen im Voraus bekannt sein, damit das Client seitige Skript funktioniert. Wenn ein Knoten erweitert oder reduziert wird, verhindert die Verwendung von Client Skripts, dass ein Postback an den Server erfolgt.  
  
 Wenn die Struktur Knoten Daten im Voraus nicht bekannt sind, können Knoten vom Client aufgefüllt werden, wenn die `PopulateNodesFromClient` -Eigenschaft auch auf `true`festgelegt ist. In diesem Szenario müssen Sie auch eine Ereignis Behandlungsmethode für das <xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate> -Ereignis bereitstellen, um die Knoten aufzufüllen. Weitere Informationen zur Client seitigen Knoten Population finden <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>Sie unter.  
  
> [!NOTE]
>  Wenn die <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A> -Eigenschaft auf `false`festgelegt ist <xref:System.Web.UI.WebControls.TreeView> , wird das Steuerelement jedes Mal an den Server zurückgesendet, wenn ein Knoten erweitert oder reduziert wird.  
  
 Der Wert dieser Eigenschaft wird im Ansichts Zustand gespeichert.  
  
 Diese Eigenschaft kann nicht durch Designs oder Stylesheetdesigns festgelegt werden. Weitere Informationen finden Sie unter <xref:System.Web.UI.ThemeableAttribute> und [ASP.NET-Designs und Skins](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 Dieser Abschnitt enthält zwei Codebeispiele. Im ersten Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A> -Eigenschaft zum Rendering des Client seitigen Skripts verwendet wird, mit dem Knoten in kompatiblen Browsern erweitert und reduziert werden. Im zweiten Codebeispiel werden Beispiel-XML-Daten für das erste Codebeispiel bereitstellt.  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A> -Eigenschaft zum Rendering des Client seitigen Skripts verwendet wird, mit dem Knoten in kompatiblen Browsern erweitert und reduziert werden. Beachten Sie, dass ein Post-Server zum Erweitern und reduzieren eines Knotens erforderlich ist <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A> , wenn die- `false`Eigenschaft auf festgelegt ist. Damit dieses Beispiel ordnungsgemäß funktioniert, müssen Sie die Beispiel-XML-Daten, die nach diesem Codebeispiel bereitgestellt werden, in eine Datei namens "Book. xml" kopieren.  
  
 [!code-aspx-csharp[TreeViewEnableClientScript#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewEnableClientScript/CS/treeviewenableclientscriptcs.aspx#1)]
 [!code-aspx-vb[TreeViewEnableClientScript#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewEnableClientScript/VB/treeviewenableclientscriptvb.aspx#1)]  
  
 Im folgenden Codebeispiel werden Beispiel-XML-Daten für das vorherige Codebeispiel bereitstellt.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient" />
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" />
      </Docs>
    </Member>
    <Member MemberName="ExpandAll">
      <MemberSignature Language="C#" Value="public void ExpandAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExpandAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.ExpandAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExpandAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExpandAll();" />
      <MemberSignature Language="F#" Value="member this.ExpandAll : unit -&gt; unit" Usage="treeView.ExpandAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Öffnet jeden Knoten in der Struktur.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.TreeView.ExpandAll%2A> -Methode stellt eine bequeme Möglichkeit dar, jeden Knoten in der Struktur zu öffnen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeView.ExpandAll%2A> -Methode verwendet wird, um alle Knoten <xref:System.Web.UI.WebControls.TreeView> im-Steuerelement gleichzeitig zu erweitern.  
  
 [!code-aspx-csharp[TreeViewExpandAll#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewExpandAll/CS/treeviewexpandallcs.aspx#1)]
 [!code-aspx-vb[TreeViewExpandAll#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewExpandAll/VB/treeviewexpandallvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.CollapseAll" />
      </Docs>
    </Member>
    <Member MemberName="ExpandDepth">
      <MemberSignature Language="C#" Value="public int ExpandDepth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ExpandDepth" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ExpandDepth" />
      <MemberSignature Language="VB.NET" Value="Public Property ExpandDepth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ExpandDepth { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ExpandDepth : int with get, set" Usage="System.Web.UI.WebControls.TreeView.ExpandDepth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.TreeView/TreeViewExpandDepthConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der Ebenen ab, die erweitert werden, wenn ein <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelement erstmals angezeigt wird, oder legt die Anzahl fest.</summary>
        <value>Die Tiefe, die angezeigt werden soll, wenn die <see cref="T:System.Web.UI.WebControls.TreeView" /> erstmals angezeigt wird. Der Standardwert ist -1, d. h., alle Knoten werden angezeigt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.TreeView.ExpandDepth%2A> die-Eigenschaft, um das Rendering <xref:System.Web.UI.WebControls.TreeView> des Steuer Elements bei der erstmaligen Anzeige zu steuern. Bei nachfolgenden Postbacks behalten die Knoten ihren aktuell erweiterten Zustand bei.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LevelStyles" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.ExpandAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.CollapseAll" />
      </Docs>
    </Member>
    <Member MemberName="ExpandImageToolTip">
      <MemberSignature Language="C#" Value="public string ExpandImageToolTip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ExpandImageToolTip" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ExpandImageToolTip" />
      <MemberSignature Language="VB.NET" Value="Public Property ExpandImageToolTip As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ExpandImageToolTip { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ExpandImageToolTip : string with get, set" Usage="System.Web.UI.WebControls.TreeView.ExpandImageToolTip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die QuickInfo für das Bild ab, das für den Indikator des erweiterbaren Knotens angezeigt wird, oder legt die QuickInfo fest.</summary>
        <value>Die QuickInfo für das für den Indikator des erweiterbaren Knotens angezeigte Bild.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.TreeView.ExpandImageToolTip%2A> die-Eigenschaft, um eine QuickInfo für das Bild anzugeben. Der von Ihnen angegebene Text bietet Hilfstechnologiegeräte mit einer Beschreibung des Bilds, das verwendet werden kann, um das Steuerelement leichter zugänglich zu machen.  
  
 Der Wert dieser Eigenschaft wird im Ansichts Zustand gespeichert.  
  
 Der Wert dieser Eigenschaft, wenn festgelegt, kann mithilfe eines Designers Tools automatisch zu einer Ressourcendatei gespeichert werden. Weitere Informationen finden Sie unter <xref:System.ComponentModel.LocalizableAttribute> und [Globalisierung und Lokalisierung](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeView.ExpandImageToolTip%2A> -Eigenschaft verwendet wird, um eine QuickInfo für ein Bild anzugeben, das für den Indikator des erweiterbaren Knotens angezeigt wird.  
  
 [!code-aspx-csharp[TreeViewCustomImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCustomImage/CS/treeviewcustomimagecs.aspx#1)]
 [!code-aspx-vb[TreeViewCustomImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCustomImage/VB/treeviewcustomimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ImageSet" />
      </Docs>
    </Member>
    <Member MemberName="ExpandImageUrl">
      <MemberSignature Language="C#" Value="public string ExpandImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ExpandImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property ExpandImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ExpandImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ExpandImageUrl : string with get, set" Usage="System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die URL zu einem benutzerdefinierten Bild für den Indikator eines erweiterbaren Knotens ab oder legt diese fest.</summary>
        <value>Die URL zu einem benutzerdefinierten Bild, das für erweiterbare Knoten angezeigt werden soll. Der Standardwert ist eine leere Zeichenfolge (""), die das Standardbild mit dem Pluszeichen (+) anzeigt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A> die-Eigenschaft, um ein benutzerdefiniertes Image für den Indikator des erweiterbaren Knotens anzugeben. Dieses Bild wird neben einem erweiterbaren Knoten angezeigt und ist in der Regel ein Pluszeichen (+).  
  
 Wenn die <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> -Eigenschaft auf `true`festgelegt ist <xref:System.Web.UI.WebControls.TreeView> , zeigt das Steuerelement ein Pluszeichen (+) oder Minuszeichen (-) oder ein Platzhalter Bild neben einem Knoten an, um anzugeben, ob der Knoten erweiterbar bzw. reduzierbar bzw. nicht erweiterbar ist. Sie können benutzerdefinierte Images angeben, indem Sie <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> zuerst die `TreeViewImageSet.Custom`-Eigenschaft auf festlegen und <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>dann <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>die Eigenschaften <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> , und auf die URLs für die benutzerdefinierten Images festlegen. Wenn keine Bilder angegeben sind, werden die Standardbilder verwendet. Um die Erweiterungs Knoten Indikatoren auszublenden, legen <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> Sie die `false`-Eigenschaft auf fest.  
  
> [!NOTE]
>  Stellen Sie sicher, dass alle von den <xref:System.Web.UI.WebControls.TreeView> <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>Eigenschaften, <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>und angegebenen Bilder die gleichen Dimensionen aufweisen, um sicherzustellen, dass die Knoten beim Verwenden von <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> benutzerdefinierten Images ordnungsgemäß im-Steuerelement ausgerichtet sind.  
  
 Wenn Sie ein benutzerdefiniertes Bild ordnungsgemäß anzeigen möchten, <xref:System.Web.UI.WebControls.TreeView.ShowLines%2A> müssen `false`Sie möglicherweise auf festlegen.  
  
 Wenn Sie ein benutzerdefiniertes Image für den Indikator des erweiterbaren Knotens verwenden, sollten <xref:System.Web.UI.WebControls.TreeView.ExpandImageToolTip%2A> Sie auch die-Eigenschaft festlegen, um eine QuickInfo für das Bild anzugeben.  
  
 Der Wert dieser Eigenschaft wird im Ansichts Zustand gespeichert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A> -Eigenschaft verwendet wird, um ein benutzerdefiniertes Image für den Indikator des erweiterbaren Knotens anzugeben. Damit das Codebeispiel angezeigt wird und das Bild im-Steuerelement angezeigt wird, müssen Sie ein eigenes Bild bereitstellen <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> , und die-Eigenschaft `TreeNodeImageSet.Custom`muss auf festgelegt werden.  
  
 [!code-aspx-csharp[TreeViewCustomImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCustomImage/CS/treeviewcustomimagecs.aspx#1)]
 [!code-aspx-vb[TreeViewCustomImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCustomImage/VB/treeviewcustomimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowExpandCollapse" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ImageSet" />
        <altmember cref="T:System.Web.UI.WebControls.TreeViewImageSet" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NoExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageToolTip" />
      </Docs>
    </Member>
    <Member MemberName="FindNode">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNode FindNode (string valuePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.WebControls.TreeNode FindNode(string valuePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.FindNode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindNode (valuePath As String) As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::WebControls::TreeNode ^ FindNode(System::String ^ valuePath);" />
      <MemberSignature Language="F#" Value="member this.FindNode : string -&gt; System.Web.UI.WebControls.TreeNode" Usage="treeView.FindNode valuePath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valuePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="valuePath">Der Wertpfad eines Knotens.</param>
        <summary>Ruft das <see cref="T:System.Web.UI.WebControls.TreeNode" />-Objekt im <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelement unter dem Pfad des angegebenen Werts ab.</summary>
        <returns>Der <see cref="T:System.Web.UI.WebControls.TreeNode" /> unter dem Pfad des angegebenen Werts.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.TreeView.FindNode%2A> die-Methode, um einen Knoten <xref:System.Web.UI.WebControls.TreeView> aus dem-Steuerelement am angegebenen Wert Pfad zu erhalten. Der Wertpfad enthält eine durch Trennzeichen getrennte Liste von Knoten Werten, die einen Pfad vom Stamm Knoten zum aktuellen Knoten bilden. Jeder Knoten speichert seinen Wertpfad in der <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> -Eigenschaft. Die <xref:System.Web.UI.WebControls.TreeView.PathSeparator%2A> -Eigenschaft gibt das Trennzeichen an, das zum Trennen der Knotenwerte verwendet wird.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeView.FindNode%2A> -Methode zum Abrufen eines Knotens <xref:System.Web.UI.WebControls.TreeView> aus dem-Steuerelement verwendet wird.  
  
> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[TreeViewFindNode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFindNode/CS/treeviewfindnodecs.aspx#1)]
 [!code-aspx-vb[TreeViewFindNode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFindNode/VB/treeviewfindnodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ValuePath" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.PathSeparator" />
      </Docs>
    </Member>
    <Member MemberName="GetCallbackResult">
      <MemberSignature Language="C#" Value="protected virtual string GetCallbackResult ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetCallbackResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.GetCallbackResult" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetCallbackResult () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetCallbackResult();" />
      <MemberSignature Language="F#" Value="abstract member GetCallbackResult : unit -&gt; string&#xA;override this.GetCallbackResult : unit -&gt; string" Usage="treeView.GetCallbackResult " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.ICallbackEventHandler.GetCallbackResult</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt das Ergebnis eines Rückrufereignisses zurück, das ein Steuerelement als Ziel hat.</summary>
        <returns>Die Ergebnisse des Rückrufs.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Web.UI.WebControls.TreeView> -Steuerelement <xref:System.Web.UI.ICallbackEventHandler> implementiert die-Schnitt <xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A> Stelle und verwendet zum Abrufen <xref:System.Web.UI.WebControls.TreeView.GetCallbackResult%2A> von Daten und zur-Methode, um die abgerufenen Daten an das Steuerelement zurückzugeben.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HoverNodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style HoverNodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style HoverNodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HoverNodeStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ HoverNodeStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HoverNodeStyle : System.Web.UI.WebControls.Style" Usage="System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf das <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" />-Objekt ab, mit dem Sie festlegen können, wie ein Knoten dargestellt wird, während ein Mauszeiger darauf positioniert ist.</summary>
        <value>Ein Verweis auf den <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" />, der den Stil eines Knotens darstellt, während der Mauszeiger über diesem positioniert ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A> die-Eigenschaft, um die Darstellung eines Knotens zu steuern, wenn der Mauszeiger darauf positioniert ist. Diese Eigenschaft ist schreibgeschützt. Sie können jedoch die Eigenschaften des <xref:System.Web.UI.WebControls.TreeNodeStyle> zurückgegebenen Objekts festlegen. Die `Property-Subproperty`Eigenschaften können deklarativ im Formular festgelegt werden, wobei `Subproperty` eine Eigenschaft des <xref:System.Web.UI.WebControls.TreeNodeStyle> Objekts ist (z `HoverNodeStyle-ForeColor`. b.). Die Eigenschaften können auch Programm gesteuert im Formular `Property.Subproperty` ( `HoverNodeStyle.ForeColor`z. b.) festgelegt werden. Diese Funktion wird nur auf Skript fähigen Clients unterstützt.  
  
> [!NOTE]
>  Wenn Sie die <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A> -Eigenschaft verwenden möchten, müssen `<head>` Sie ein- `runat="server"` Element mit einem-Attribut einschließen.  
  
 Zu den allgemeinen Einstellungen gehören normalerweise eine benutzerdefinierte Hintergrundfarbe, Vordergrundfarbe, Schriftart Eigenschaften und Knoten Abstände. Stileigenschaften werden in der folgenden Reihenfolge angewendet:  
  
1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>.  
  
2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A> oder <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A> , abhängig vom Knotentyp. Wenn die <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> Auflistung definiert ist, wird Sie zu diesem Zeitpunkt angewendet, wobei die anderen Eigenschaften des Knoten Stils außer Kraft gesetzt werden.  
  
3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>.  
  
4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>.  
  
> [!NOTE]
>  Die Stileinstellungen für die <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A> -Eigenschaft überschreiben alle entsprechenden Knotenstil Einstellungen in der <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>- <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A> <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>-,- <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A> ,-oder-Eigenschaft.  
  
 Die <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A> -Eigenschaft wird nicht für einen Knoten gerendert, dessen `TreeNodeSelectAction.None` <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> -Eigenschaft auf festgelegt ist.  
  
 Im Gegensatz <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A> zu den <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A> Eigenschaften und, bei <xref:System.Web.UI.WebControls.TreeNodeStyle> denen es sich um-Objekte <xref:System.Web.UI.WebControls.Style> handelt, ist die <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A> -Eigenschaft ein-Objekt  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A> -Eigenschaft verwendet wird, um die Darstellung eines Knotens zu steuern, wenn der Mauszeiger darauf positioniert ist. Damit dieses Beispiel funktioniert, müssen Sie ein `<head>` -Element mit einem `runat="server"` -Attribut einschließen.  
  
 [!code-aspx-csharp[TreeViewHoverNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewHoverNodeStyle/CS/treeviewhovernodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewHoverNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewHoverNodeStyle/VB/treeviewhovernodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LevelStyles" />
      </Docs>
    </Member>
    <Member MemberName="ImageSet">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeViewImageSet ImageSet { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.TreeViewImageSet ImageSet" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ImageSet" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageSet As TreeViewImageSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeViewImageSet ImageSet { System::Web::UI::WebControls::TreeViewImageSet get(); void set(System::Web::UI::WebControls::TreeViewImageSet value); };" />
      <MemberSignature Language="F#" Value="member this.ImageSet : System.Web.UI.WebControls.TreeViewImageSet with get, set" Usage="System.Web.UI.WebControls.TreeView.ImageSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeViewImageSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Gruppe von Bildern ab, die für das <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelement verwendet werden soll, oder legt diese fest.</summary>
        <value>Einer der <see cref="T:System.Web.UI.WebControls.TreeViewImageSet" />-Werte. Die Standardeinstellung ist <see langword="TreeViewImageSet.Custom" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> die-Eigenschaft, um die Gruppe von Bildern anzugeben, <xref:System.Web.UI.WebControls.TreeView> die für das Steuerelement verwendet werden sollen. Sie können entweder einen vordefinierten Satz von Bildern auswählen, um dem Steuerelement ein Standardmäßiges aussehen zu verschaffen, oder einen eigenen benutzerdefinierten Satz definieren.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> -Eigenschaft wirkt sich nicht auf Stileinstellungen für einen Knoten aus. Legen Sie die entsprechende Stil Eigenschaft fest, z <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A> . b. die-Eigenschaft, wenn Sie benutzerdefinierte Farben und Abstände hinzufügen möchten.  
  
 In der folgenden Tabelle werden die gültigen Werte für <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> die-Eigenschaft aufgelistet.  
  
|Bildmenge|Beschreibung|  
|---------------|-----------------|  
|`TreeViewImageSet.Arrows`|Ein vordefinierter Bildsatz, der Pfeil Bilder verwendet.|  
|`TreeViewImageSet.BulletedList`|Eine vordefinierte Bildmenge, die diamantförmige Aufzählungs Bilder verwendet.|  
|`TreeViewImageSet.BulletedList2`|Ein vordefinierter Bildsatz, der quadratische Aufzählungs Bilder verwendet.|  
|`TreeViewImageSet.BulletedList3`|Ein vordefinierter Satz von unterteilten, diamantförmigen Aufzählungszeichen.|  
|`TreeViewImageSet.BulletedList4`|Ein vordefinierter Satz von wechselnden unterteilten, diamantförmigen Aufzählungszeichen in Größen, die je nach Ebene variieren.|  
|`TreeViewImageSet.Contacts`|Ein vordefinierter Bildsatz, der MSN Messenger-Bilder verwendet.|  
|`TreeViewImageSet.Custom`|Ein benutzerdefinierter Bildsatz.|  
|`TreeViewImageSet.Events`|Ein vordefinierter Bildsatz, der Bilder im Ereignisprotokoll verwendet.|  
|`TreeViewImageSet.Faq`|Ein vordefinierter Bildsatz, der im FAQ-Stil Bilder verwendet.|  
|`TreeViewImageSet.Inbox`|Ein vordefinierter Bildsatz, der im e-Mail-Stil Bilder verwendet.|  
|`TreeViewImageSet.News`|Ein vordefinierter Bildsatz, der im Newsgroup-Stil Bilder verwendet.|  
|`TreeViewImageSet.Simple`|Ein vordefinierter Bildsatz, der einfache Form umrissen verwendet.|  
|`TreeViewImageSet.Simple2`|Ein vordefinierter Bildsatz, der einfache gefüllte Formen verwendet.|  
|`TreeViewImageSet.Msdn`|Ein vordefinierter Bildsatz, der MSDN-Images verwendet.|  
|`TreeViewImageSet.WindowsHelp`|Ein vordefinierter Bildsatz, der Microsoft Windows-Hilfe Images verwendet.|  
|`TreeViewImageSet.XPFileExplorer`|Ein vordefinierter Bildsatz, der in Microsoft Windows XP verfügbare Windows-Explorer-Images verwendet.|  
  
 Wenn Sie einen benutzerdefinierten Satz von Images definieren, sollten Sie ein Bild für jede der Eigenschaften in der folgenden Tabelle angeben. Andernfalls wird das Standardbild für diese Eigenschaft verwendet.  
  
|Eigenschaft|Beschreibung|  
|--------------|-----------------|  
|<xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>|Die URL zu einem benutzerdefinierten Bild für den Indikator des redusible-Knotens.|  
|<xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>|Die URL zu einem benutzerdefinierten Bild für den Indikator des erweiterbaren Knotens.|  
|<xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A>|Die URL zu einem Ordner, der benutzerdefinierte Images für die Zeilen enthält, die Knoten verbinden.|  
|<xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>|Die URL zu einem benutzerdefinierten Bild für den Indikator Indikator, der nicht erweiterbar ist.|  
  
 Der Wert dieser Eigenschaft wird im Ansichts Zustand gespeichert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> -Eigenschaft verwendet wird, um den Windows-Explorer- <xref:System.Web.UI.WebControls.TreeView> Satz von Bildern im-Steuerelement anzuzeigen.  
  
 [!code-aspx-csharp[TreeViewImageSet#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewImageSet/CS/treeviewimagesetcs.aspx#1)]
 [!code-aspx-vb[TreeViewImageSet#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewImageSet/VB/treeviewimagesetvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Die angegebene Gruppe von Bildern entspricht keinem der <see cref="T:System.Web.UI.WebControls.TreeViewImageSet" />-Werte.</exception>
        <altmember cref="T:System.Web.UI.WebControls.TreeViewImageSet" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NoExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LineImagesFolder" />
      </Docs>
    </Member>
    <Member MemberName="LeafNodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeStyle LeafNodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeStyle LeafNodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LeafNodeStyle As TreeNodeStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeStyle ^ LeafNodeStyle { System::Web::UI::WebControls::TreeNodeStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LeafNodeStyle : System.Web.UI.WebControls.TreeNodeStyle" Usage="System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf das <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" />-Objekt ab, mit dem Sie die Darstellung von Endknoten festlegen können.</summary>
        <value>Ein Verweis auf <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" />, der den Stil der Endknoten in <see cref="T:System.Web.UI.WebControls.TreeView" /> darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A> die-Eigenschaft, um die Darstellung der Blattknoten <xref:System.Web.UI.WebControls.TreeView> im-Steuerelement zu steuern. Diese Eigenschaft ist schreibgeschützt. Sie können jedoch die Eigenschaften des <xref:System.Web.UI.WebControls.TreeNodeStyle> zurückgegebenen Objekts festlegen. Die `Property-Subproperty`Eigenschaften können deklarativ im Formular festgelegt werden, wobei `Subproperty` eine Eigenschaft des <xref:System.Web.UI.WebControls.TreeNodeStyle> Objekts ist (z `LeafNodeStyle-ForeColor`. b.). Die Eigenschaften können auch Programm gesteuert im Formular `Property.Subproperty` ( `LeafNodeStyle.ForeColor`z. b.) festgelegt werden. Zu den allgemeinen Einstellungen gehören normalerweise eine benutzerdefinierte Hintergrundfarbe, Vordergrundfarbe, Schriftart Eigenschaften und Knoten Abstände. Stileigenschaften werden in der folgenden Rangfolge angewendet:  
  
1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>.  
  
2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A> oder <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A> , abhängig vom Knotentyp. Wenn die <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> Auflistung definiert ist, wird Sie zu diesem Zeitpunkt angewendet, wobei die anderen Eigenschaften des Knoten Stils außer Kraft gesetzt werden.  
  
3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>.  
  
4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>.  
  
 Wenn Sie Inhaltsverzeichnis-Navigationsmenüs generieren müssen, in denen Knoten auf einer bestimmten Ebene die gleiche Darstellung aufweisen sollen, unabhängig davon, ob Sie über untergeordnete Knoten verfügen, können Sie die <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> Verwendung der-Eigenschaft in Erwägung gezogen, anstatt die Einzelperson festzulegen. Stileigenschaften.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A> -Eigenschaft verwendet wird, um die Darstellung der Blattknoten <xref:System.Web.UI.WebControls.TreeView> im-Steuerelement zu steuern.  
  
 [!code-aspx-csharp[TreeViewLeafNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewLeafNodeStyle/CS/treeviewleafnodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewLeafNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewLeafNodeStyle/VB/treeviewleafnodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="LevelStyles">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeStyleCollection LevelStyles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeStyleCollection LevelStyles" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.LevelStyles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LevelStyles As TreeNodeStyleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeStyleCollection ^ LevelStyles { System::Web::UI::WebControls::TreeNodeStyleCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LevelStyles : System.Web.UI.WebControls.TreeNodeStyleCollection" Usage="System.Web.UI.WebControls.TreeView.LevelStyles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.TreeNodeStyleCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.TreeNodeStyleCollectionEditor,System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeStyleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Auflistung von <see cref="T:System.Web.UI.WebControls.Style" />-Objekten ab, die die Knotenstile auf den einzelnen Ebenen der Struktur darstellen.</summary>
        <value>Eine <see cref="T:System.Web.UI.WebControls.StyleCollection" />, die die Knotenstile auf den einzelnen Ebenen der Struktur darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> die-Auflistung als Alternative zu den einzelnen Stileigenschaften (z. <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A> b. die-Eigenschaft), um den Stil der Knoten auf den einzelnen Ebenen der Struktur zu steuern. Der erste Stil in der Auflistung entspricht dem Stil der Knoten auf der ersten Ebene der Struktur. Der zweite Stil in der Auflistung entspricht dem Stil der Knoten auf der zweiten Ebene der Struktur usw. Diese Eigenschaft wird am häufigsten verwendet, um eine Tabelle mit Inhalts Stil-Navigationsmenüs zu generieren, in denen Knoten auf einer bestimmten Ebene die gleiche Darstellung aufweisen sollten, unabhängig davon, ob Sie über untergeordnete Knoten verfügen.  
  
 Stileigenschaften werden in der folgenden Reihenfolge angewendet:  
  
1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>.  
  
2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A> oder <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A> , abhängig vom Knotentyp. Wenn die <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> Auflistung definiert ist, wird Sie zu diesem Zeitpunkt angewendet, wobei die anderen Eigenschaften des Knoten Stils außer Kraft gesetzt werden.  
  
3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>.  
  
4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> -Eigenschaft zum Erstellen eines Navigationsmenüs verwendet wird. Das Steuerelement wird immer vollständig erweitert, wobei die Erweiterungs Knoten Indikatoren und Bilder ausgeblendet sind. Außerdem wird die <xref:System.Web.UI.WebControls.TreeNodeStyle.ChildNodesPadding%2A> -Eigenschaft verwendet, um den Abstand der Knoten Ebenen zu steuern.  
  
 [!code-aspx-csharp[TreeViewLevelStyles#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewLevelStyles/CS/treeviewlevelstylescs.aspx#1)]
 [!code-aspx-vb[TreeViewLevelStyles#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewLevelStyles/VB/treeviewlevelstylesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="T:System.Web.UI.WebControls.StyleCollection" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="LineImagesFolder">
      <MemberSignature Language="C#" Value="public string LineImagesFolder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LineImagesFolder" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.LineImagesFolder" />
      <MemberSignature Language="VB.NET" Value="Public Property LineImagesFolder As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LineImagesFolder { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LineImagesFolder : string with get, set" Usage="System.Web.UI.WebControls.TreeView.LineImagesFolder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Pfad zu einem Ordner ab, der die Linienbilder enthält, mit denen untergeordnete Knoten mit übergeordneten Knoten verbunden werden, oder legt diesen fest.</summary>
        <value>Der Pfad zu einem Ordner, der die Linienbilder enthält, durch die Knoten miteinander verbunden werden. Der Standardwert ist eine leere Zeichenfolge (""), die angibt, dass die <see cref="P:System.Web.UI.WebControls.TreeView.LineImagesFolder" />-Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Web.UI.WebControls.TreeView> -Steuerelement kann Linien anzeigen, die untergeordnete Knoten mit über <xref:System.Web.UI.WebControls.TreeView.ShowLines%2A> geordneten Knoten verbinden, `true`wenn die-Eigenschaft auf festgelegt ist. Wenn Zeilen angezeigt werden, geben Sie <xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A> mithilfe der-Eigenschaft einen Ordner an, der auf das Internet zugreifen kann und den Satz von vorab gerenderten Images enthält, die für die Zeilen verwendet werden sollen. In der folgenden Tabelle werden die vom <xref:System.Web.UI.WebControls.TreeView> -Steuerelement verwendeten Images beschrieben.  
  
|Bild|Beschreibung|  
|-----------|-----------------|  
|Dash. gif|Ein Linien Bild, das neben dem Stamm Knoten angezeigt wird, wenn es nur einen Stamm Knoten in der Struktur und der Stamm Knoten ein Blatt ist.|  
|Dashminus. gif|Ein Minuszeichen (-) wird neben dem Stamm Knoten angezeigt, wenn nur ein Stamm Knoten in der Baumstruktur vorhanden ist, um anzugeben, dass der Stamm Knoten erweitert ist.|  
|Dashund GIF|Ein Pluszeichen (+)-Bild, das neben dem Stamm Knoten angezeigt wird, wenn nur ein Stamm Knoten in der Baumstruktur vorhanden ist, um anzugeben, dass der Stamm Knoten reduziert wird.|  
|I. gif|Ein Linien Bild, das zum Verbinden angrenzender Knoten angezeigt wird.|  
|L. gif|Ein Linien Bild, das neben dem letzten Knoten in einer Verzweigung angezeigt wird, wenn der Knoten ein Blatt ist.|  
|Lminus. gif|Ein Linien Bild, das neben dem letzten Knoten in einer Verzweigung angezeigt wird, um anzugeben, dass der Knoten erweitert ist.|  
|LPLUS. gif|Ein Linien Bild, das neben dem letzten Knoten in einer Verzweigung angezeigt wird, um anzugeben, dass der Knoten reduziert ist.|  
|Minus. gif|Ein Minuszeichen (-) wird neben dem ersten Stamm Knoten in einer Baumstruktur angezeigt, die mehrere Stamm Knoten enthält, um anzugeben, dass der Knoten erweitert ist. Dieses Bild enthält keine zusätzliche Zeile und wird erst angezeigt, nachdem der Stamm Knoten einmal reduziert wurde. Wenn die Seite zum ersten Mal geladen wird, wird das Bild "Rminus. gif" angezeigt.|  
|NOEXPAND. gif|Ein leeres Abstandshalter Bild, das neben einem Blattknoten angezeigt wird. Dieses Bild ermöglicht die vertikale Linie von Text.|  
|Und GIF|Ein Pluszeichen Bild (+), das neben dem ersten Stamm Knoten in einer Baumstruktur mit mehreren Stamm Knoten angezeigt wird, um anzugeben, dass der Knoten reduziert ist. Dieses Bild enthält keine zusätzliche Zeile und wird erst angezeigt, nachdem der Stamm Knoten einmal erweitert wurde. Wenn die Seite zum ersten Mal geladen wird, wird das Bild "Rplus. gif" angezeigt.|  
|R. gif|Ein Linien Bild, das neben dem ersten Stamm Knoten in einer Baumstruktur mit mehreren Stamm Knoten angezeigt wird, um anzugeben, dass der Knoten ein Blattknoten ist.|  
|Rminus. gif|Ein Minuszeichen (-) wird neben dem ersten Stamm Knoten in einer Baumstruktur angezeigt, die mehrere Stamm Knoten enthält, um anzugeben, dass der Knoten erweitert ist. Dieses Bild enthält eine zusätzliche Zeile und wird nur angezeigt, wenn die Seite zum ersten Mal geladen wird. Nachdem der Stamm Knoten einmal reduziert wurde, wird das Minus. GIF-Bild angezeigt.|  
|Rplus. gif|Ein Pluszeichen Bild (+), das neben dem ersten Stamm Knoten in einer Baumstruktur mit mehreren Stamm Knoten angezeigt wird, um anzugeben, dass der Knoten reduziert ist. Dieses Bild enthält eine zusätzliche Zeile und wird nur angezeigt, wenn die Seite zum ersten Mal geladen wird. Nachdem der Stamm Knoten einmal erweitert wurde, wird das Plus. GIF-Bild angezeigt.|  
|T. gif|Ein Linien Bild, das neben einem Knoten in der Mitte der Baumstruktur (bei einem t-Schnittpunkt) angezeigt wird, um anzugeben, dass der Knoten ein Blatt ist.|  
|Tminus. gif|Ein Minuszeichen (-)-Bild, das neben einem Knoten in der Mitte der Baumstruktur (bei einem t-Schnittpunkt) angezeigt wird, um anzugeben, dass der Knoten erweitert ist.|  
|TPlus. gif|Ein Pluszeichen (+)-Bild, das neben einem Knoten in der Mitte der Baumstruktur (bei einem t-Schnittpunkt) angezeigt wird, um anzugeben, dass der Knoten reduziert ist.|  
  
> [!NOTE]
>  Wenn die <xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A> Eigenschaft nicht festgelegt ist, <xref:System.Web.UI.WebControls.TreeView> verwendet das Steuerelement die integrierten Standardbilder (20 x 20 Pixel).  
  
 Einige visuelle Designer, z. b. Microsoft Visual Studio, stellen Tools zum Generieren von Linienbildern bereit.  
  
 Die Laufzeit gibt keine benutzerdefinierten Images für die Anzeige von rechts nach links aus. Um die Webseiten von links nach rechts und von rechts nach Links zu unterstützen, müssen Sie für beide Richtungen Bildsätze erstellen.  
  
 Der Wert dieser Eigenschaft wird im Ansichts Zustand gespeichert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A> -Eigenschaft verwendet wird, um den Ordner anzugeben, der die <xref:System.Web.UI.WebControls.TreeView> im-Steuerelement anzuzeigenden Linienbilder enthält. Wenn Sie mit diesem Beispiel arbeiten möchten, verwenden Sie das Linien-Designer-Tool im Vorfeld, um einen Satz von Linienbildern zu erstellen. Platzieren Sie Sie in einem Ordner mit dem Namen LineImages im Verzeichnis für die Beispielanwendung.  
  
 [!code-aspx-csharp[TreeViewLineImagesFolderUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewLineImagesFolderUrl/CS/treeviewlineimagesfolderurlcs.aspx#1)]
 [!code-aspx-vb[TreeViewLineImagesFolderUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewLineImagesFolderUrl/VB/treeviewlineimagesfolderurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowLines" />
        <altmember cref="T:System.Web.UI.WebControls.TreeViewImageSet" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NoExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="LoadPostData">
      <MemberSignature Language="C#" Value="protected virtual bool LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection);" />
      <MemberSignature Language="F#" Value="abstract member LoadPostData : string * System.Collections.Specialized.NameValueCollection -&gt; bool&#xA;override this.LoadPostData : string * System.Collections.Specialized.NameValueCollection -&gt; bool" Usage="treeView.LoadPostData (postDataKey, postCollection)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">Die Schlüsselkennung für das Steuerelement.</param>
        <param name="postCollection">Die Sammlung aller eingehenden Namenswerte.</param>
        <summary>Verarbeitet Postbackdaten für das <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelement.</summary>
        <returns><see langword="true" />, wenn sich der Zustand des <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelements aufgrund des Postbacks ändert, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das ASP.NET-Seiten Framework verfolgt alle Server Steuerelemente, `true` die <xref:System.Web.UI.WebControls.TreeView.LoadPostData%2A> vom-Methodenaufruf zurückgegeben werden, <xref:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent%2A> und ruft dann die-Methode für diese Steuerelemente auf.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="treeView.LoadViewState state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">Ein Objekt, das die gespeicherten Ansichtszustandswerte für das Steuerelement enthält.</param>
        <summary>Lädt den zuvor gespeicherten Ansichtszustand des <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxDataBindDepth">
      <MemberSignature Language="C#" Value="public int MaxDataBindDepth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxDataBindDepth" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.MaxDataBindDepth" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxDataBindDepth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxDataBindDepth { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxDataBindDepth : int with get, set" Usage="System.Web.UI.WebControls.TreeView.MaxDataBindDepth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die maximale Anzahl von Strukturebenen ab, die an das <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelement gebunden werden können, oder legt diese fest.</summary>
        <value>Die maximale Anzahl von Strukturebenen, die an das <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelement gebunden werden sollen. Der Standardwert ist -1, d. h., alle Strukturebenen in der Datenquelle werden an das Steuerelement gebunden.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie das <xref:System.Web.UI.WebControls.TreeView> Steuerelement an eine Datenquelle binden, <xref:System.Web.UI.WebControls.TreeView.MaxDataBindDepth%2A> verwenden Sie die-Eigenschaft, um die Anzahl der an das Steuerelement zu bindenden Struktur Ebenen einzuschränken. Wenn Sie diese Eigenschaft beispielsweise auf `2` festlegen, werden nur der Stamm Knoten und alle Knoten, die sich direkt unter dem Stamm <xref:System.Web.UI.WebControls.TreeView> Knoten befinden, an das-Steuerelement gebunden. Alle verbleibenden Knoten in der Datenquelle werden ignoriert.  
  
> [!IMPORTANT]
>  Ein böswilliger Benutzer kann eine Rückruf Anforderung erstellen und Daten für die Knoten des <xref:System.Web.UI.WebControls.TreeView> Steuer Elements erhalten, die der Seiten Entwickler nicht anzeigt. Daher muss die Sicherheit der Daten von der Datenquelle implementiert werden. Verwenden Sie die <xref:System.Web.UI.WebControls.TreeView.MaxDataBindDepth%2A> -Eigenschaft nicht zum Ausblenden von Daten.  
  
 Der Wert dieser Eigenschaft wird im Ansichts Zustand gespeichert.  
  
   
  
## Examples  
 Dieser Abschnitt enthält zwei Codebeispiele. Im ersten Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeView.MaxDataBindDepth%2A> -Eigenschaft verwendet wird, um nur die ersten beiden Knoten Ebenen (tiefen 0 und 1 <xref:System.Web.UI.WebControls.TreeView> ) an das-Steuerelement zu binden. Im zweiten Codebeispiel werden Beispiel-XML-Daten für das erste Codebeispiel bereitstellt.  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeView.MaxDataBindDepth%2A> -Eigenschaft verwendet wird, um nur die ersten beiden Knoten Ebenen (tiefen 0 und 1 <xref:System.Web.UI.WebControls.TreeView> ) an das-Steuerelement zu binden. Alle Knoten Ebenen in der Datenquelle werden ignoriert. Damit dieses Beispiel ordnungsgemäß funktioniert, müssen Sie die Beispiel-XML-Daten, die nach diesem Codebeispiel bereitgestellt werden, in eine Datei namens "Book. xml" kopieren.  
  
 [!code-aspx-csharp[TreeViewMaxDataBindDepth#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewMaxDataBindDepth/CS/treeviewmaxdatabinddepthcs.aspx#1)]
 [!code-aspx-vb[TreeViewMaxDataBindDepth#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewMaxDataBindDepth/VB/treeviewmaxdatabinddepthvb.aspx#1)]  
  
 Im folgenden Codebeispiel werden Beispiel-XML-Daten für das vorherige Codebeispiel bereitstellt.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der ausgewählte Wert ist kleiner als <see langword="-1" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandDepth" />
      </Docs>
    </Member>
    <Member MemberName="NodeIndent">
      <MemberSignature Language="C#" Value="public int NodeIndent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NodeIndent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.NodeIndent" />
      <MemberSignature Language="VB.NET" Value="Public Property NodeIndent As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NodeIndent { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.NodeIndent : int with get, set" Usage="System.Web.UI.WebControls.TreeView.NodeIndent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(20)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Einzugsgröße (in Pixel) für die untergeordneten Knoten des <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelements ab oder legt diese fest.</summary>
        <value>Der Abstand (in Pixel) zwischen dem linken Rand der untergeordneten Knoten und dem linken Rand ihrer übergeordneten Knoten. Die Standardeinstellung ist 20.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.TreeView.NodeIndent%2A> die-Eigenschaft, um den Abstand zwischen dem linken Rand eines untergeordneten Knotens und dem linken Rand des übergeordneten Knotens zu steuern.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.TreeView.NodeIndent%2A> Eigenschaft wirkt <xref:System.Web.UI.WebControls.TreeView> sich auf jeden untergeordneten Knoten im-Steuerelement aus. Es ist nicht möglich, die Einzugs Menge der einzelnen Knoten einzeln zu steuern.  
  
 Der Wert dieser Eigenschaft wird im Ansichts Zustand gespeichert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeView.NodeIndent%2A> -Eigenschaft verwendet wird, um den Einzug von untergeordneten Knoten zu steuern.  
  
 [!code-aspx-csharp[TreeViewNodeIndent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewNodeIndent/CS/treeviewnodeindentcs.aspx#1)]
 [!code-aspx-vb[TreeViewNodeIndent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewNodeIndent/VB/treeviewnodeindentvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeStyle.ChildNodesPadding" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeStyle.HorizontalPadding" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeStyle.NodeSpacing" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeStyle.VerticalPadding" />
      </Docs>
    </Member>
    <Member MemberName="Nodes">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeCollection Nodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeCollection Nodes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.Nodes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Nodes As TreeNodeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeCollection ^ Nodes { System::Web::UI::WebControls::TreeNodeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Nodes : System.Web.UI.WebControls.TreeNodeCollection" Usage="System.Web.UI.WebControls.TreeView.Nodes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.TreeNodeCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.TreeNodeCollectionEditor,System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Auflistung der <see cref="T:System.Web.UI.WebControls.TreeNode" />-Objekte ab, die die Stammknoten im <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelement darstellt.</summary>
        <value>Eine <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />, die die Stammknoten in der <see cref="T:System.Web.UI.WebControls.TreeView" /> enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> die-Eigenschaft, <xref:System.Web.UI.WebControls.TreeNodeCollection> um ein-Objekt zu erhalten, das alle Stamm Knoten in der Struktur enthält. Diese Auflistung wird häufig verwendet, um schnell alle Stamm Knoten zu durchlaufen oder um auf einen bestimmten Stamm Knoten in der Struktur zuzugreifen.  
  
> [!NOTE]
>  Eine typische Struktur hat nur einen Stamm Knoten. Sie können jedoch mehrere Stamm Knoten zum <xref:System.Web.UI.WebControls.TreeView> -Steuerelement hinzufügen.  
  
 Die <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> -Eigenschaft kann auch verwendet werden, um die Stamm Knoten in der Strukturprogramm gesteuert zu verwalten. Sie können-Objekte hinzufügen, einfügen, entfernen <xref:System.Web.UI.WebControls.TreeNode> und aus der Auflistung abrufen. Alle Aktualisierungen der Auflistung werden automatisch im <xref:System.Web.UI.WebControls.TreeView> -Steuerelement nach dem nächsten Roundtrip zum Server widergespiegelt.  
  
 Um auf die untergeordneten Knoten eines Stamm Knotens zuzugreifen, <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> verwenden Sie die-Eigenschaft des-Knotens. Verwenden Sie <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> die-Eigenschaft jedes nachfolgenden Knotens auf der übergeordneten Ebene, um die Knoten Ebenen zu navigieren.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> -Eigenschaft verwendet wird, um die Struktur zu durchlaufen.  
  
 [!code-aspx-csharp[TreeNodeCollectionCount#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionCount/CS/treenodecollectioncountcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionCount#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionCount/VB/treenodecollectioncountvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeCollection" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      </Docs>
    </Member>
    <Member MemberName="NodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeStyle NodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeStyle NodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NodeStyle As TreeNodeStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeStyle ^ NodeStyle { System::Web::UI::WebControls::TreeNodeStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NodeStyle : System.Web.UI.WebControls.TreeNodeStyle" Usage="System.Web.UI.WebControls.TreeView.NodeStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf das <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" />-Objekt ab, mit dem Sie die Standarddarstellung der Knoten im <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelement festlegen können.</summary>
        <value>Ein Verweis auf den <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" />, der den Standardstil eines Knotens darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A> die-Eigenschaft, um die Standarddarstellung eines Knotens <xref:System.Web.UI.WebControls.TreeView> im-Steuerelement zu steuern. Diese Eigenschaft ist schreibgeschützt. Sie können jedoch die Eigenschaften des <xref:System.Web.UI.WebControls.TreeNodeStyle> zurückgegebenen Objekts festlegen. Die `Property-Subproperty`Eigenschaften können deklarativ im Formular festgelegt werden, wobei `Subproperty` eine Eigenschaft des <xref:System.Web.UI.WebControls.TreeNodeStyle> Objekts ist (z `NodeStyle-ForeColor`. b.). Die Eigenschaften können auch Programm gesteuert im Formular `Property.Subproperty` ( `NodeStyle.ForeColor`z. b.) festgelegt werden. Zu den allgemeinen Einstellungen gehören normalerweise eine benutzerdefinierte Hintergrundfarbe, Vordergrundfarbe, Schriftart Eigenschaften und Knoten Abstände. Stileigenschaften werden in der folgenden Rangfolge angewendet:  
  
1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>.  
  
2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A> oder <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A> , abhängig vom Knotentyp. Wenn die <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> Auflistung definiert ist, wird Sie zu diesem Zeitpunkt angewendet, wobei die anderen Eigenschaften des Knoten Stils außer Kraft gesetzt werden.  
  
3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>.  
  
4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>.  
  
> [!NOTE]
>  Die entsprechenden Knotenstil Einstellungen in den <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>Eigenschaften <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>, oder <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A> überschreiben die Stileinstellungen der <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A> -Eigenschaft.  
  
 Wenn Sie Inhaltsverzeichnis-Navigationsmenüs generieren müssen, in denen Knoten auf einer bestimmten Ebene die gleiche Darstellung aufweisen sollen, unabhängig davon, ob Sie über untergeordnete Knoten verfügen, können Sie die <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> Verwendung der-Eigenschaft in Erwägung gezogen, anstatt die Einzelperson festzulegen. Stileigenschaften.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A> -Eigenschaft verwendet wird, um die Darstellung von <xref:System.Web.UI.WebControls.TreeView> Knoten im-Steuerelement zu steuern.  
  
 [!code-aspx-csharp[TreeViewNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewNodeStyle/CS/treeviewnodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewNodeStyle/VB/treeviewnodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="NodeWrap">
      <MemberSignature Language="C#" Value="public bool NodeWrap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NodeWrap" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.NodeWrap" />
      <MemberSignature Language="VB.NET" Value="Public Property NodeWrap As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NodeWrap { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NodeWrap : bool with get, set" Usage="System.Web.UI.WebControls.TreeView.NodeWrap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob Text in einem Knoten in die nächste Zeile umbrochen wird, wenn nicht genügend Platz vorhanden ist, oder legt diesen Wert fest.</summary>
        <value><see langword="true" />, wenn der Text umbrochen werden soll, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.TreeView.NodeWrap%2A> die-Eigenschaft, um anzugeben, ob der Text, der in jedem Knoten angezeigt wird, umbrochen wird, wenn der Speicherplatz nicht mehr  
  
 Der Wert dieser Eigenschaft wird im Ansichts Zustand gespeichert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeView.NodeWrap%2A> -Eigenschaft verwendet wird, um den <xref:System.Web.UI.WebControls.TreeView> Text des-Steuer Elements zu wrappen.  
  
 [!code-aspx-csharp[TreeViewNodeWrap#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewNodeWrap/CS/treeviewnodewrapcs.aspx#1)]
 [!code-aspx-vb[TreeViewNodeWrap#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewNodeWrap/VB/treeviewnodewrapvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Font" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeIndent" />
      </Docs>
    </Member>
    <Member MemberName="NoExpandImageUrl">
      <MemberSignature Language="C#" Value="public string NoExpandImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NoExpandImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.NoExpandImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property NoExpandImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NoExpandImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NoExpandImageUrl : string with get, set" Usage="System.Web.UI.WebControls.TreeView.NoExpandImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die URL zu einem benutzerdefinierten Bild für den Indikator eines nicht erweiterbaren Knotens ab oder legt diesen fest.</summary>
        <value>Die URL zu einem benutzerdefinierten Bild, das für nicht erweiterbare Knoten angezeigt werden soll. Der Standardwert ist eine leere Zeichenfolge (""), die das standardmäßige leere Bild anzeigt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A> die-Eigenschaft, um ein benutzerdefiniertes Image für den Indikator Indikator anzugeben, der nicht erweiterbar ist. Das Indikator Bild (oder der Spacer), das nicht erweiterbar ist, wird neben den Endknoten angezeigt (anstelle der Knoten "erweiterbarer Knoten" und "reduzierbarer Knoten"), um die Blattknoten mit übergeordneten Knoten oder Stamm Knoten auszurichten.  
  
 Wenn die <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> -Eigenschaft auf `true`festgelegt ist <xref:System.Web.UI.WebControls.TreeView> , zeigt das Steuerelement ein Pluszeichen (+) oder Minuszeichen (-) oder ein Platzhalter Bild neben einem Knoten an, um anzugeben, ob der Knoten erweiterbar bzw. reduzierbar bzw. nicht erweiterbar ist. Sie können benutzerdefinierte Images angeben, indem Sie <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> zuerst die `TreeViewImageSet.Custom`-Eigenschaft auf festlegen und <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>dann <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>die Eigenschaften <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> , und auf die URLs der benutzerdefinierten Images festlegen. Wenn keine Bilder angegeben sind, werden die Standardbilder verwendet. Um die Erweiterungs Knoten Indikatoren auszublenden, legen <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> Sie die `false`-Eigenschaft auf fest.  
  
> [!NOTE]
>  Stellen Sie sicher, dass alle von den <xref:System.Web.UI.WebControls.TreeView> <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>Eigenschaften, <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>und angegebenen Bilder die gleichen Dimensionen aufweisen, um sicherzustellen, dass die Knoten beim Verwenden von <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> benutzerdefinierten Images ordnungsgemäß im-Steuerelement ausgerichtet sind.  
  
 Der Wert dieser Eigenschaft wird im Ansichts Zustand gespeichert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A> -Eigenschaft verwendet wird, um ein benutzerdefiniertes Image für den Indikator Indikator anzugeben, der nicht erweiterbar ist. Damit das Codebeispiel angezeigt wird und das Bild im-Steuerelement angezeigt wird, müssen Sie ein eigenes Bild bereitstellen <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> , und die-Eigenschaft `TreeNodeImageSet.Custom`muss auf festgelegt werden.  
  
 [!code-aspx-csharp[TreeViewCustomImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCustomImage/CS/treeviewcustomimagecs.aspx#1)]
 [!code-aspx-vb[TreeViewCustomImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCustomImage/VB/treeviewcustomimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowExpandCollapse" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ImageSet" />
        <altmember cref="T:System.Web.UI.WebControls.TreeViewImageSet" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="treeView.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.Control.Init" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die-  <xref:System.Web.UI.WebControls.TreeView> Methode wird vom-Steuerelement aufgerufen, <xref:System.Web.UI.Control.Init> um das-Ereignis zu erhöhen. <xref:System.Web.UI.WebControls.TreeView.OnInit%2A> Sie wird in der Regel von Steuerelement Entwicklern verwendet <xref:System.Web.UI.WebControls.TreeView> , wenn die-Klasse erweitert wird.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Web.UI.WebControls.TreeView.OnInit%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie die <see cref="M:System.Web.UI.WebControls.TreeView.OnInit(System.EventArgs)" /> Methode in einer abgeleiteten Klasse überschreiben, stellen Sie <see cref="M:System.Web.UI.WebControls.TreeView.OnInit(System.EventArgs)" /> sicher, dass die-Methode für die Basisklasse aufgerufen wird, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="E:System.Web.UI.Control.Init" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="treeView.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.Control.PreRender" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.TreeView.OnPreRender%2A> -Methode wird für die Registrierung für Postbacks überschrieben. Wenn das Client Skript aktiviert ist, werden auch die erforderlichen Skripts und ausgeblendeten Felder gerendert.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Web.UI.WebControls.TreeView.OnPreRender%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie die <see cref="M:System.Web.UI.WebControls.TreeView.OnPreRender(System.EventArgs)" /> Methode in einer abgeleiteten Klasse überschreiben, stellen Sie <see cref="M:System.Web.UI.WebControls.TreeView.OnPreRender(System.EventArgs)" /> sicher, dass die-Methode für die Basisklasse aufgerufen wird, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="E:System.Web.UI.Control.PreRender" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectedNodeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectedNodeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectedNodeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectedNodeChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectedNodeChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelectedNodeChanged : EventArgs -&gt; unit&#xA;override this.OnSelectedNodeChanged : EventArgs -&gt; unit" Usage="treeView.OnSelectedNodeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.TreeView.SelectedNodeChanged" />-Ereignis des <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelements aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> -Ereignis wird ausgelöst, wenn ein Knoten <xref:System.Web.UI.WebControls.TreeView> im-Steuerelement ausgewählt wird. Dies ermöglicht es Ihnen, eine Ereignis Behandlungsmethode bereitzustellen, die eine benutzerdefinierte Routine ausführt, z. b. das Aktualisieren des angezeigten Inhalts, wenn dieses Ereignis auftritt.  
  
 Optional können Sie die <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> -Eigenschaft eines-Knotens festlegen, um anzugeben, welches Ereignis ausgelöst wird, wenn der Knoten ausgewählt wird.  
  
> [!NOTE]
>  Der <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A> wird nicht für einen Knoten gerendert <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> , dessen- `TreeNodeSelectAction.None`Eigenschaft auf festgelegt ist.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie die <see cref="M:System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged(System.EventArgs)" /> Methode in einer abgeleiteten Klasse überschreiben, stellen Sie <see cref="M:System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged(System.EventArgs)" /> sicher, dass die-Methode für die Basisklasse aufgerufen wird, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.TreeView.SelectedNodeChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnTreeNodeCheckChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnTreeNodeCheckChanged (System.Web.UI.WebControls.TreeNodeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTreeNodeCheckChanged(class System.Web.UI.WebControls.TreeNodeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTreeNodeCheckChanged (e As TreeNodeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTreeNodeCheckChanged(System::Web::UI::WebControls::TreeNodeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTreeNodeCheckChanged : System.Web.UI.WebControls.TreeNodeEventArgs -&gt; unit&#xA;override this.OnTreeNodeCheckChanged : System.Web.UI.WebControls.TreeNodeEventArgs -&gt; unit" Usage="treeView.OnTreeNodeCheckChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.TreeNodeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.TreeNodeEventArgs" />, das Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged" />-Ereignis des <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelements aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged> -Ereignis wird ausgelöst, wenn ein Kontrollkästchen <xref:System.Web.UI.WebControls.TreeView> im-Steuerelement den Status zwischen den Beiträgen zum Server ändert. Dies ermöglicht es Ihnen, eine Ereignis Behandlungsmethode bereitzustellen, die eine benutzerdefinierte Routine ausführt, z. b. das Aktualisieren einer Datenbank oder des angezeigten Inhalts, wenn dieses Ereignis auftritt.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Stellen Sie beim Überschreiben von <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged(System.Web.UI.WebControls.TreeNodeEventArgs)" /> in einer abgeleiteten Klasse sicher, dass die-Methode für die Basisklasse aufgerufen wird, damit registrierte Delegaten das Ereignis empfangen. <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged(System.Web.UI.WebControls.TreeNodeEventArgs)" /></para></block>
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnTreeNodeCollapsed">
      <MemberSignature Language="C#" Value="protected virtual void OnTreeNodeCollapsed (System.Web.UI.WebControls.TreeNodeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTreeNodeCollapsed(class System.Web.UI.WebControls.TreeNodeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTreeNodeCollapsed (e As TreeNodeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTreeNodeCollapsed(System::Web::UI::WebControls::TreeNodeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTreeNodeCollapsed : System.Web.UI.WebControls.TreeNodeEventArgs -&gt; unit&#xA;override this.OnTreeNodeCollapsed : System.Web.UI.WebControls.TreeNodeEventArgs -&gt; unit" Usage="treeView.OnTreeNodeCollapsed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.TreeNodeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.TreeNodeEventArgs" />, das Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed" />-Ereignis des <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelements aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed> -Ereignis wird ausgelöst, wenn ein Knoten <xref:System.Web.UI.WebControls.TreeView> im-Steuerelement reduziert wird. Dies ermöglicht es Ihnen, eine Ereignis Behandlungsmethode bereitzustellen, die immer dann eine benutzerdefinierte Routine ausführt, wenn dieses Ereignis auftritt.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie die <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed(System.Web.UI.WebControls.TreeNodeEventArgs)" /> Methode in einer abgeleiteten Klasse überschreiben, stellen Sie <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed(System.Web.UI.WebControls.TreeNodeEventArgs)" /> sicher, dass die-Methode für die Basisklasse aufgerufen wird, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed" />
      </Docs>
    </Member>
    <Member MemberName="OnTreeNodeDataBound">
      <MemberSignature Language="C#" Value="protected virtual void OnTreeNodeDataBound (System.Web.UI.WebControls.TreeNodeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTreeNodeDataBound(class System.Web.UI.WebControls.TreeNodeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTreeNodeDataBound (e As TreeNodeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTreeNodeDataBound(System::Web::UI::WebControls::TreeNodeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTreeNodeDataBound : System.Web.UI.WebControls.TreeNodeEventArgs -&gt; unit&#xA;override this.OnTreeNodeDataBound : System.Web.UI.WebControls.TreeNodeEventArgs -&gt; unit" Usage="treeView.OnTreeNodeDataBound e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.TreeNodeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.TreeNodeEventArgs" />, das Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.TreeView.TreeNodeDataBound" />-Ereignis des <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelements aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Web.UI.WebControls.TreeView.TreeNodeDataBound> -Ereignis wird ausgelöst, wenn ein Datenelement an einen Knoten <xref:System.Web.UI.WebControls.TreeView> im-Steuerelement gebunden ist. Dies ermöglicht es Ihnen, eine Ereignis Behandlungsmethode bereitzustellen, die immer dann eine benutzerdefinierte Routine ausführt, wenn dieses Ereignis auftritt.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie die <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound(System.Web.UI.WebControls.TreeNodeEventArgs)" /> Methode in einer abgeleiteten Klasse überschreiben, stellen Sie <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound(System.Web.UI.WebControls.TreeNodeEventArgs)" /> sicher, dass die-Methode für die Basisklasse aufgerufen wird, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeDataBound" />
      </Docs>
    </Member>
    <Member MemberName="OnTreeNodeExpanded">
      <MemberSignature Language="C#" Value="protected virtual void OnTreeNodeExpanded (System.Web.UI.WebControls.TreeNodeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTreeNodeExpanded(class System.Web.UI.WebControls.TreeNodeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTreeNodeExpanded (e As TreeNodeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTreeNodeExpanded(System::Web::UI::WebControls::TreeNodeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTreeNodeExpanded : System.Web.UI.WebControls.TreeNodeEventArgs -&gt; unit&#xA;override this.OnTreeNodeExpanded : System.Web.UI.WebControls.TreeNodeEventArgs -&gt; unit" Usage="treeView.OnTreeNodeExpanded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.TreeNodeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.TreeNodeEventArgs" />, das Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.TreeView.TreeNodeExpanded" />-Ereignis des <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelements aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> -Ereignis wird ausgelöst, wenn ein Knoten <xref:System.Web.UI.WebControls.TreeView> im-Steuerelement erweitert wird. Dies ermöglicht es Ihnen, eine Ereignis Behandlungsmethode bereitzustellen, die immer dann eine benutzerdefinierte Routine ausführt, wenn dieses Ereignis auftritt.  
  
> [!NOTE]
>  Wenn die <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> -Eigenschaft eines Knotens auf <xref:System.Web.UI.WebControls.TreeNodeSelectAction.Expand> oder <xref:System.Web.UI.WebControls.TreeNodeSelectAction.SelectExpand>festgelegt ist <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> , wird das- <xref:System.Web.UI.WebControls.TreeView> Ereignis auch ausgelöst, wenn auf diesen Knoten im-Steuerelement geklickt wird.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie die <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded(System.Web.UI.WebControls.TreeNodeEventArgs)" /> Methode in einer abgeleiteten Klasse überschreiben, stellen Sie <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded(System.Web.UI.WebControls.TreeNodeEventArgs)" /> sicher, dass die-Methode für die Basisklasse aufgerufen wird, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeExpanded" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.SelectAction" />
      </Docs>
    </Member>
    <Member MemberName="OnTreeNodePopulate">
      <MemberSignature Language="C#" Value="protected virtual void OnTreeNodePopulate (System.Web.UI.WebControls.TreeNodeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTreeNodePopulate(class System.Web.UI.WebControls.TreeNodeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnTreeNodePopulate(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTreeNodePopulate (e As TreeNodeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTreeNodePopulate(System::Web::UI::WebControls::TreeNodeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTreeNodePopulate : System.Web.UI.WebControls.TreeNodeEventArgs -&gt; unit&#xA;override this.OnTreeNodePopulate : System.Web.UI.WebControls.TreeNodeEventArgs -&gt; unit" Usage="treeView.OnTreeNodePopulate e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.TreeNodeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.TreeNodeEventArgs" />, das Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" />-Ereignis des <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelements aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In manchen Fällen ist es nicht praktikabel, die Struktur durch die Datengröße oder den benutzerdefinierten Inhalt, der von Benutzereingaben abhängt, statisch vorzudefinieren. Aus diesem Grund unterstützt <xref:System.Web.UI.WebControls.TreeView> das-Steuerelement die dynamische Knoten Auffüllung. Wenn die <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> -Eigenschaft für einen Knoten auf `true`festgelegt ist, wird dieser Knoten zur Laufzeit aufgefüllt, wenn der Knoten erweitert wird.  
  
 Um einen Knoten dynamisch aufzufüllen, legen Sie zuerst <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> die-Eigenschaft für den `true`Knoten auf fest. Definieren Sie als nächstes eine Ereignis Behandlungsmethode für <xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate> das Ereignis, das den Knotenprogramm gesteuert auffüllt. Eine typische Ereignis Behandlungsmethode ruft Knoten Daten aus einer Datenquelle ab, platziert die Daten in einer Knoten Struktur und fügt dann die Knoten Struktur <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> der Auflistung des Knotens hinzu, der aufgefüllt wird. Eine Knoten Struktur wird erstellt, indem <xref:System.Web.UI.WebControls.TreeNode> der <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> -Auflistung eines übergeordneten Knotens-Objekte hinzugefügt werden.  
  
> [!NOTE]
>  Wenn die <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> -Eigenschaft für einen Knoten auf `true`festgelegt ist, muss der Knoten dynamisch aufgefüllt werden. Es ist nicht möglich, einen anderen untergeordneten Knoten deklarativ zu schachteln. Andernfalls tritt ein Fehler auf der Seite auf.  
  
 Unterstützte Browser (Microsoft Internet Explorer 4,0-kompatible Browser und höher) können auch die Client seitige Knoten Population nutzen. Wenn diese Option aktiviert ist, <xref:System.Web.UI.WebControls.TreeView> kann das Steuerelement einen Knoten auf dem Client dynamisch auffüllen, wenn dieser Knoten erweitert wird. Dadurch wird verhindert, dass ein Postback an den Server erfolgt. Weitere Informationen zur Client seitigen Knoten Population finden <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>Sie unter.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Web.UI.WebControls.TreeView.OnTreeNodePopulate%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie die <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodePopulate(System.Web.UI.WebControls.TreeNodeEventArgs)" /> Methode in einer abgeleiteten Klasse überschreiben, stellen Sie <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodePopulate(System.Web.UI.WebControls.TreeNodeEventArgs)" /> sicher, dass die-Methode für die Basisklasse aufgerufen wird, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.PopulateOnDemand" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.EnableClientScript" />
      </Docs>
    </Member>
    <Member MemberName="ParentNodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeStyle ParentNodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeStyle ParentNodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParentNodeStyle As TreeNodeStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeStyle ^ ParentNodeStyle { System::Web::UI::WebControls::TreeNodeStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ParentNodeStyle : System.Web.UI.WebControls.TreeNodeStyle" Usage="System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf das <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" />-Objekt ab, mit dem Sie die Darstellung der übergeordneten Knoten im <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelement festlegen können.</summary>
        <value>Ein Verweis auf <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" />, der den Stil der übergeordneten Knoten in <see cref="T:System.Web.UI.WebControls.TreeView" /> darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A> die-Eigenschaft, um die Darstellung der übergeordneten Knoten <xref:System.Web.UI.WebControls.TreeView> im-Steuerelement zu steuern. Diese Eigenschaft ist schreibgeschützt. Sie können jedoch die Eigenschaften des <xref:System.Web.UI.WebControls.TreeNodeStyle> zurückgegebenen Objekts festlegen. Die `Property-Subproperty`Eigenschaften können deklarativ im Formular festgelegt werden, wobei `Subproperty` eine Eigenschaft des <xref:System.Web.UI.WebControls.TreeNodeStyle> Objekts ist (z `ParentNodeStyle-ForeColor`. b.). Die Eigenschaften können auch Programm gesteuert im Formular `Property.Subproperty` ( `ParentNodeStyle.ForeColor`z. b.) festgelegt werden. Zu den allgemeinen Einstellungen gehören normalerweise eine benutzerdefinierte Hintergrundfarbe, Vordergrundfarbe, Schriftart Eigenschaften und Knoten Abstände. Stileigenschaften werden in der folgenden Rangfolge angewendet:  
  
1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>.  
  
2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A> oder <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A> , abhängig vom Knotentyp. Wenn die <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> Auflistung definiert ist, wird Sie zu diesem Zeitpunkt angewendet, wobei die anderen Eigenschaften des Knoten Stils außer Kraft gesetzt werden.  
  
3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>.  
  
4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>.  
  
 Wenn Sie Inhaltsverzeichnis-Navigationsmenüs generieren müssen, in denen Knoten auf einer bestimmten Ebene die gleiche Darstellung aufweisen sollen, unabhängig davon, ob Sie über untergeordnete Knoten verfügen, können Sie die <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> Verwendung der-Eigenschaft in Erwägung gezogen, anstatt die Einzelperson festzulegen. Stileigenschaften.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A> -Eigenschaft verwendet wird, um die Darstellung der übergeordneten <xref:System.Web.UI.WebControls.TreeView> Knoten im-Steuerelement zu steuern.  
  
 [!code-aspx-csharp[TreeViewParentNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewParentNodeStyle/CS/treeviewparentnodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewParentNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewParentNodeStyle/VB/treeviewparentnodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="PathSeparator">
      <MemberSignature Language="C#" Value="public char PathSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char PathSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.PathSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property PathSeparator As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char PathSeparator { char get(); void set(char value); };" />
      <MemberSignature Language="F#" Value="member this.PathSeparator : char with get, set" Usage="System.Web.UI.WebControls.TreeView.PathSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue('/')</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Zeichen ab, mit dem die durch die <see cref="P:System.Web.UI.WebControls.TreeNode.ValuePath" />-Eigenschaft angegebenen Knotenwerte begrenzt werden, oder legt dieses Zeichen fest.</summary>
        <value>Das Zeichen, mit dem die in der <see cref="P:System.Web.UI.WebControls.TreeNode.ValuePath" />-Eigenschaft angegebenen Knotenwerte begrenzt werden. Der Standardwert ist ein Schrägstrich (/).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> -Eigenschaft enthält eine durch Trennzeichen getrennte Liste von Knoten Werten, die einen Pfad vom Stamm Knoten zum aktuellen Knoten bilden. Verwenden Sie <xref:System.Web.UI.WebControls.TreeView.PathSeparator%2A> die-Eigenschaft, um das Trennzeichen anzugeben, das zum Trennen der Knotenwerte verwendet wird. Dieser Wert wird häufig verwendet, wenn die Liste für die einzelnen Werte verarbeitet wird.  
  
 Abhängig von dem im <xref:System.Web.UI.WebControls.TreeView> -Steuerelement angezeigten Text muss das Trennzeichen möglicherweise geändert werden, um Konflikte zu vermeiden. Wenn Sie z. b. das Trennzeichen auf ein Komma setzen, sollte der angezeigte Text keine Kommas enthalten. Andernfalls kann die <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> -Eigenschaft nicht korrekt analysiert werden.  
  
 Der Wert dieser Eigenschaft wird im Ansichts Zustand gespeichert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeView.PathSeparator%2A> -Eigenschaft verwendet wird, um das Trennzeichen für <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> die-Eigenschaft eines Knotens anzugeben. Dieser Wert wird dann verwendet, um die <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> -Eigenschaft für die einzelnen Werte zu analysieren.  
  
 [!code-aspx-csharp[TreeViewPathSeparator2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewPathSeparator2/CS/treeviewpathseparatorcs.aspx#1)]
 [!code-aspx-vb[TreeViewPathSeparator2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewPathSeparator2/VB/treeviewpathseparatorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ValuePath" />
      </Docs>
    </Member>
    <Member MemberName="PerformDataBinding">
      <MemberSignature Language="C#" Value="protected internal override void PerformDataBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void PerformDataBinding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.PerformDataBinding" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub PerformDataBinding ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void PerformDataBinding();" />
      <MemberSignature Language="F#" Value="override this.PerformDataBinding : unit -&gt; unit" Usage="treeView.PerformDataBinding " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt alle auf der Datenquelle basierenden Knoten.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.TreeView.PerformDataBinding%2A> -Methode ist eine Hilfsmethode, die <xref:System.Web.UI.WebControls.TreeView> vom-Steuerelement aufgerufen wird, um die angegebene Datenquelle an das-Steuerelement zu binden.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Da die <see cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" /> -Methode versiegelt ist, sollten Sie die <see cref="M:System.Web.UI.WebControls.TreeView.PerformDataBinding" /> -Methode überschreiben, wenn Sie beim Binden von Daten weitere Aufgaben ausführen müssen.</para></block>
      </Docs>
    </Member>
    <Member MemberName="PopulateNodesFromClient">
      <MemberSignature Language="C#" Value="public bool PopulateNodesFromClient { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PopulateNodesFromClient" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient" />
      <MemberSignature Language="VB.NET" Value="Public Property PopulateNodesFromClient As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PopulateNodesFromClient { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PopulateNodesFromClient : bool with get, set" Usage="System.Web.UI.WebControls.TreeView.PopulateNodesFromClient" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob Knotendaten bei Bedarf vom Client aus aufgefüllt werden, oder legt diesen Wert fest.</summary>
        <value><see langword="true" />, um Strukturknotendaten bei Bedarf vom Client aus aufzufüllen, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In manchen Fällen ist es nicht praktikabel, die Struktur durch die Datengröße oder den benutzerdefinierten Inhalt, der von Benutzereingaben abhängt, statisch vorzudefinieren. Aus diesem Grund unterstützt <xref:System.Web.UI.WebControls.TreeView> das-Steuerelement die dynamische Knoten Auffüllung. Wenn die <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> -Eigenschaft für einen Knoten auf `true`festgelegt ist, wird dieser Knoten zur Laufzeit aufgefüllt, wenn der Knoten erweitert wird.  
  
 Neben dem bedarfsgesteuerten Auffüllen von Knoten ist es auch möglich, die Knoten direkt in einem unterstützten Client Browser aufzufüllen. Wenn die <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A> -Eigenschaft auf `true`festgelegt ist, wird ein-Dienst vom Client aufgerufen, um die Struktur Knoten aufzufüllen. dadurch ist es nicht mehr erforderlich, an den Server zurückzukehren. Andernfalls sendet das <xref:System.Web.UI.WebControls.TreeView> Steuerelement zurück an den Server, um die Knoten aufzufüllen.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A> -Eigenschaft muss auch auf `true` festgelegt werden, damit <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A> die-Eigenschaft auf `true`festgelegt wird.  
  
 Zum Auffüllen eines Knotens auf dem Client legen Sie zunächst die <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A> -Eigenschaft `true` auf fest, und <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> legen Sie dann die- `true`Eigenschaft für den Knoten auf fest. Definieren Sie als nächstes eine Ereignis Behandlungsmethode für <xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate> das Ereignis, das den Knotenprogramm gesteuert auffüllt. Eine typische Ereignis Behandlungsmethode ruft Knoten Daten aus einer Datenquelle ab, platziert die Daten in einer Knoten Struktur und fügt dann die Knoten Struktur <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> der Auflistung des Knotens hinzu, der aufgefüllt wird. Sie erstellen eine Knoten Struktur, indem <xref:System.Web.UI.WebControls.TreeNode> Sie der <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> -Auflistung eines übergeordneten Knotens-Objekte hinzufügen.  
  
> [!NOTE]
>  Wenn die <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> -Eigenschaft für einen Knoten auf `true`festgelegt ist, muss der Knoten dynamisch aufgefüllt werden. Es ist nicht möglich, einen anderen untergeordneten Knoten deklarativ zu schachteln. Andernfalls tritt ein Fehler auf der Seite auf.  
  
> [!NOTE]
>  Das Client seitige Knoten auffüllungs Feature wird in Browsern unterstützt, die Rückruf Skripts unterstützen. Verwenden Sie die <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A> -Eigenschaft <xref:System.Web.HttpBrowserCapabilities> der-Klasse, um zu überprüfen, ob ein Browser Rückruf Skripts unterstützt. Sie können über die <xref:System.Web.HttpBrowserCapabilities> <xref:System.Web.HttpRequest.Browser%2A> -Eigenschaft der <xref:System.Web.HttpRequest> -Klasse auf die Instanz der-Klasse für die aktuelle Anforderung zugreifen.  
  
 Der Wert dieser Eigenschaft wird im Ansichts Zustand gespeichert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A> -Eigenschaft verwendet wird, um die Client seitige Auffüllung der <xref:System.Web.UI.WebControls.TreeView> Knoten im-Steuerelement zu aktivieren. Beachten Sie Folgendes: Wenn die Client seitige Knoten Auffüllung aktiviert ist, werden die Knoten dynamisch auf dem Client aufgefüllt, ohne dass Sie an den Server zurückgesendet werden müssen.  
  
 [!code-aspx-csharp[TreeViewPopulateNodesFromClient#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/CS/treeviewpopulatenodesfromclientcs.aspx#1)]
 [!code-aspx-vb[TreeViewPopulateNodesFromClient#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/VB/treeviewpopulatenodesfromclientvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.EnableClientScript" />
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.PopulateOnDemand" />
      </Docs>
    </Member>
    <Member MemberName="RaiseCallbackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaiseCallbackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaiseCallbackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.RaiseCallbackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaiseCallbackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaiseCallbackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaiseCallbackEvent : string -&gt; unit&#xA;override this.RaiseCallbackEvent : string -&gt; unit" Usage="treeView.RaiseCallbackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Eine Zeichenfolge, die ein optionales Ereignisargument für die Übergabe an den Ereignishandler darstellt.</param>
        <summary>Löst das Rückrufereignis mit den angegebenen Argumenten aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei der <xref:System.Web.UI.WebControls.TreeView.RaiseCallbackEvent%2A>-Methode handelt es sich um eine Hilfsmethode für die <xref:System.Web.UI.WebControls.TreeView.System%23Web%23UI%23ICallbackEventHandler%23RaiseCallbackEvent%2A>-Methode.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaisePostBackEvent : string -&gt; unit&#xA;override this.RaisePostBackEvent : string -&gt; unit" Usage="treeView.RaisePostBackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Eine Zeichenfolge, die ein optionales Ereignisargument für die Übergabe an den Ereignishandler darstellt.</param>
        <summary>Ermöglicht dem <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelement die Verarbeitung eines Ereignisses, das ausgelöst wird, wenn ein Formular an den Server gesendet wird. Bei der <see cref="M:System.Web.UI.WebControls.TreeView.RaisePostBackEvent(System.String)" />-Methode handelt es sich um eine Hilfsmethode für die <see cref="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />-Methode.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Seite übergibt den Wert des `eventArgument` -Parameters an die <xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A> -Methode des Steuer Elements, <xref:System.Web.UI.IPostBackEventHandler?displayProperty=nameWithType> das die-Schnittstelle implementiert. Dieses <xref:System.Web.UI.WebControls.TreeView> Steuerelement rendert außerdem das HTML-Element, das bewirkt, dass das Post Back Ereignis auftritt. Wenn das-Steuerelement Client seitiges Skript zum Zurücksenden an den Server rendert, wird das-Argument aus dem Skript `eventArgument` im-Parameter übergeben. Wenn das Post Back Ereignis durch eine einfache Übermittlung an den Server verursacht wird, ist `eventArgument` `null`der-Parameter.  
  
 Die <xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A> -Methode stellt die Funktionalität für viele Ereignisse bereit, die von HTML-und Webserver-Steuerelementen implementiert werden.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostDataChangedEvent ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostDataChangedEvent();" />
      <MemberSignature Language="F#" Value="abstract member RaisePostDataChangedEvent : unit -&gt; unit&#xA;override this.RaisePostDataChangedEvent : unit -&gt; unit" Usage="treeView.RaisePostDataChangedEvent " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Signalisiert dem <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelement, die Anwendung ASP.NET darüber zu benachrichtigen, dass sich der Zustand des Steuerelements geändert hat.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Änderungs Ereignisse für das <xref:System.Web.UI.WebControls.TreeView> -Steuerelement werden von <xref:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent%2A> der-Methode ausgelöst.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeginTag">
      <MemberSignature Language="C#" Value="public override void RenderBeginTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderBeginTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RenderBeginTag (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RenderBeginTag(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderBeginTag : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="treeView.RenderBeginTag writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Ein <see cref="T:System.Web.UI.HtmlTextWriter" />, der den Ausgabestream für das Rendering von HTML-Inhalten auf dem Client darstellt.</param>
        <summary>Gibt das öffnende HTML-Tag des Steuerelements im angegebenen Writer wieder.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.TreeView.RenderBeginTag%2A> -Methode wird hauptsächlich von Steuerelement Entwicklern verwendet.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected internal override void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderContents (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderContents : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="treeView.RenderContents writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Das <see cref="T:System.Web.UI.HtmlTextWriter" />-Objekt, das den Ausgabestream darstellt, der zum Schreiben des Inhalts auf eine Webseite verwendet wird.</param>
        <summary>Gibt die Knoten im <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelement wieder.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.TreeView.RenderContents%2A> die-Methode, um die Knoten <xref:System.Web.UI.WebControls.TreeView> im-Steuerelement an den Client zu übergeben.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderEndTag">
      <MemberSignature Language="C#" Value="public override void RenderEndTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderEndTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RenderEndTag (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RenderEndTag(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderEndTag : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="treeView.RenderEndTag writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Ein <see cref="T:System.Web.UI.HtmlTextWriter" />, der den Ausgabestream für das Rendering von HTML-Inhalten auf dem Client darstellt.</param>
        <summary>Gibt das schließende HTML-Tag des Steuerelements im angegebenen Writer wieder.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.TreeView.RenderEndTag%2A> -Methode wird hauptsächlich von Steuerelement Entwicklern verwendet.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RootNodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeStyle RootNodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeStyle RootNodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RootNodeStyle As TreeNodeStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeStyle ^ RootNodeStyle { System::Web::UI::WebControls::TreeNodeStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RootNodeStyle : System.Web.UI.WebControls.TreeNodeStyle" Usage="System.Web.UI.WebControls.TreeView.RootNodeStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf das <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" />-Objekt ab, mit dem Sie die Darstellung des Stammknotens im <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelement festlegen können.</summary>
        <value>Ein Verweis auf <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" />, der den Stil des Stammknotens in <see cref="T:System.Web.UI.WebControls.TreeView" /> darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A> die-Eigenschaft, um die Darstellung des Stamm Knotens <xref:System.Web.UI.WebControls.TreeView> im-Steuerelement zu steuern. Diese Eigenschaft ist schreibgeschützt. Sie können jedoch die Eigenschaften des <xref:System.Web.UI.WebControls.TreeNodeStyle> zurückgegebenen Objekts festlegen. Die `Property-Subproperty`Eigenschaften können deklarativ im Formular festgelegt werden, wobei `Subproperty` eine Eigenschaft des <xref:System.Web.UI.WebControls.TreeNodeStyle> Objekts ist (z `RootNodeStyle-ForeColor`. b.). Die Eigenschaften können auch Programm gesteuert im Formular `Property.Subproperty` ( `RootNodeStyle.ForeColor`z. b.) festgelegt werden. Zu den allgemeinen Einstellungen gehören normalerweise eine benutzerdefinierte Hintergrundfarbe, Vordergrundfarbe, Schriftart Eigenschaften und Knoten Abstände. Stileigenschaften werden in der folgenden Rangfolge angewendet:  
  
1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>.  
  
2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A> oder <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A> , abhängig vom Knotentyp. Wenn die <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> Auflistung definiert ist, wird Sie zu diesem Zeitpunkt angewendet, wobei die anderen Eigenschaften des Knoten Stils außer Kraft gesetzt werden.  
  
3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>  
  
4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>.  
  
 Wenn Sie Inhaltsverzeichnis-Navigationsmenüs generieren müssen, in denen Knoten auf einer bestimmten Ebene die gleiche Darstellung aufweisen sollen, unabhängig davon, ob Sie über untergeordnete Knoten verfügen, können Sie die <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> Verwendung der-Eigenschaft in Erwägung gezogen, anstatt die Einzelperson festzulegen. Stileigenschaften.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A> -Eigenschaft verwendet wird, um die Darstellung des Stamm Knotens <xref:System.Web.UI.WebControls.TreeView> im-Steuerelement zu steuern.  
  
 [!code-aspx-csharp[TreeViewRootNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewRootNodeStyle/CS/treeviewrootnodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewRootNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewRootNodeStyle/VB/treeviewrootnodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="treeView.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Speichert den Zustand des <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelements.</summary>
        <returns>Der aktuelle Ansichtszustand des Serversteuerelements, andernfalls <see langword="null" />, wenn dem Steuerelement kein Ansichtszustand zugeordnet ist.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedNode">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNode SelectedNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNode SelectedNode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.SelectedNode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedNode As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNode ^ SelectedNode { System::Web::UI::WebControls::TreeNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedNode : System.Web.UI.WebControls.TreeNode" Usage="System.Web.UI.WebControls.TreeView.SelectedNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein <see cref="T:System.Web.UI.WebControls.TreeNode" />-Objekt ab, das den im <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelement ausgewählten Knoten darstellt.</summary>
        <value>Ein <see cref="T:System.Web.UI.WebControls.TreeNode" />, der den ausgewählten Knoten in <see cref="T:System.Web.UI.WebControls.TreeView" /> darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Text eines Knotens im <xref:System.Web.UI.WebControls.TreeView> -Steuerelement kann sich in einem von zwei Modi befinden: Auswahlmodus und Navigationsmodus. Standardmäßig befindet sich ein Knoten im Auswahlmodus. Um einen Knoten in den Navigationsmodus zu versetzen, <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> legen Sie die-Eigenschaft für den Knoten auf einen anderen Wert als eine leere Zeichenfolge ("") fest. Um einen Knoten in den Auswahlmodus zu versetzen, <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> legen Sie die-Eigenschaft für den Knoten auf eine leere Zeichenfolge ("") fest.  
  
 Wenn sich ein Knoten im Auswahlmodus befindet, kann der Benutzer einen Knoten auswählen, indem er auf den Text im Knoten klickt. Verwenden Sie <xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A> die-Eigenschaft, um zu bestimmen, welcher <xref:System.Web.UI.WebControls.TreeView> Knoten im-Steuerelement ausgewählt ist.  
  
> [!NOTE]
>  Ein Knoten kann nicht ausgewählt werden, <xref:System.Web.UI.WebControls.TreeView> wenn im Steuerelement Hyperlinks angezeigt werden. Wenn Hyperlinks angezeigt werden, gibt <xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A> die Eigenschaft immer `null`zurück.  
  
 Wenn der Benutzer durch Klicken auf den Text im <xref:System.Web.UI.WebControls.TreeView> neuen Knoten einen anderen Knoten im-Steuerelement auswählt <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> , wird das-Ereignis standardmäßig ausgelöst. Sie können ein anderes Ereignis angeben, indem Sie <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> die-Eigenschaft für die-Eigenschaft festlegen. In der folgenden Tabelle sind die verfügbaren Optionen aufgelistet.  
  
|Auswahl Aktion|Beschreibung|  
|----------------------|-----------------|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.Expand>|Schaltet den Knoten zwischen erweitert und reduziert um. Löst nach <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> Bedarf <xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed> das-Ereignis oder das-Ereignis aus.|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.None>|Löst keine Ereignisse aus, wenn ein Knoten ausgewählt wird.|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.Select>|Löst das <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>-Ereignis aus, wenn ein Knoten ausgewählt wird.|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.SelectExpand>|Löst das <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>-Ereignis und das <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>-Ereignis aus, wenn ein Knoten ausgewählt wird. Knoten werden nur erweitert und nie reduziert.|  
  
> [!NOTE]
>  Der <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A> wird nicht für einen Knoten gerendert <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> , dessen- `TreeNodeSelectAction.None`Eigenschaft auf festgelegt ist.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A> -Eigenschaft verwendet wird, um den Wert des ausgewählten Knotens <xref:System.Web.UI.WebControls.TreeView> im-Steuerelement zu bestimmen.  
  
 [!code-aspx-csharp[TreeViewSelectedNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewSelectedNodeStyle/CS/treeviewselectednodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewSelectedNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewSelectedNodeStyle/VB/treeviewselectednodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowCheckBoxes" />
        <altmember cref="E:System.Web.UI.WebControls.TreeView.SelectedNodeChanged" />
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeExpanded" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.SelectAction" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.SelectAction" />
      </Docs>
    </Member>
    <Member MemberName="SelectedNodeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SelectedNodeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectedNodeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.TreeView.SelectedNodeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectedNodeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SelectedNodeChanged;" />
      <MemberSignature Language="F#" Value="member this.SelectedNodeChanged : EventHandler " Usage="member this.SelectedNodeChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wird ausgelöst, wenn ein Knoten im <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelement ausgewählt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> -Ereignis wird ausgelöst, wenn ein Knoten <xref:System.Web.UI.WebControls.TreeView> im-Steuerelement ausgewählt wird. Dies ermöglicht es Ihnen, eine Ereignis Behandlungsmethode bereitzustellen, die eine benutzerdefinierte Routine ausführt, z. b. das Aktualisieren des angezeigten Inhalts, wenn dieses Ereignis auftritt.  
  
 Optional können Sie die <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> -Eigenschaft für einen Knoten festlegen, um anzugeben, welches Ereignis ausgelöst wird, wenn der Knoten ausgewählt wird. In der folgenden Tabelle sind die verfügbaren Optionen aufgelistet.  
  
|Auswahl Aktion|Beschreibung|  
|----------------------|-----------------|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.Expand>|Schaltet den Knoten zwischen erweitert und reduziert um. Löst nach <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> Bedarf <xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed> das-Ereignis oder das-Ereignis aus.|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.None>|Löst keine Ereignisse aus, wenn ein Knoten ausgewählt wird.|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.Select>|Löst das <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>-Ereignis aus, wenn ein Knoten ausgewählt wird.|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.SelectExpand>|Löst das <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>-Ereignis und das <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>-Ereignis aus, wenn ein Knoten ausgewählt wird. Knoten werden nur erweitert und nie reduziert.|  
  
> [!NOTE]
>  Der <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A> wird nicht für einen Knoten gerendert <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> , dessen- `TreeNodeSelectAction.None`Eigenschaft auf festgelegt ist.  
  
 Das <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> Ereignis wird nur beim Postback ausgelöst, wenn ein Benutzer auf einen Knoten klickt. Das-Ereignis wird nicht ausgelöst, <xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A> wenn die-Eigenschaft Programm gesteuert geändert wird.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie das <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> -Ereignis verwendet wird <xref:System.Web.UI.WebControls.Label> , um ein-Steuerelement zu aktualisieren <xref:System.Web.UI.WebControls.TreeView> , wenn ein Knoten im-Steuerelement ausgewählt wird.  
  
 [!code-aspx-csharp[TreeViewSelectedNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewSelectedNodeStyle/CS/treeviewselectednodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewSelectedNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewSelectedNodeStyle/VB/treeviewselectednodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="SelectedNodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeStyle SelectedNodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeStyle SelectedNodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedNodeStyle As TreeNodeStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeStyle ^ SelectedNodeStyle { System::Web::UI::WebControls::TreeNodeStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedNodeStyle : System.Web.UI.WebControls.TreeNodeStyle" Usage="System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" />-Objekt ab, das die Darstellung des ausgewählten Knotens im <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelement steuert.</summary>
        <value>Ein <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" />, der den Stil des ausgewählten Knotens im <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelement darstellt. Der Standardwert ist <see langword="null" /> und gibt an, dass die <see cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />-Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A> die-Eigenschaft, um die Darstellung des ausgewählten Knotens <xref:System.Web.UI.WebControls.TreeView> im-Steuerelement zu steuern. Diese Eigenschaft ist schreibgeschützt. Sie können jedoch die Eigenschaften des <xref:System.Web.UI.WebControls.TreeNodeStyle> zurückgegebenen Objekts festlegen. Die `Property-Subproperty`Eigenschaften können deklarativ im Formular festgelegt werden, wobei `Subproperty` eine Eigenschaft des <xref:System.Web.UI.WebControls.TreeNodeStyle> Objekts ist (z `SelectedNodeStyle-ForeColor`. b.). Die Eigenschaften können auch Programm gesteuert im Formular `Property.Subproperty` ( `SelectedNodeStyle.ForeColor`z. b.) festgelegt werden. Zu den allgemeinen Einstellungen gehören normalerweise eine benutzerdefinierte Hintergrundfarbe, Vordergrundfarbe, Schriftart Eigenschaften und Knoten Abstände. Stileigenschaften werden in der folgenden Rangfolge angewendet:  
  
1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>.  
  
2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A> oder <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A> , abhängig vom Knotentyp. Wenn die <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> Auflistung definiert ist, wird Sie zu diesem Zeitpunkt angewendet, wobei die anderen Eigenschaften des Knoten Stils außer Kraft gesetzt werden.  
  
3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>.  
  
4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A> -Eigenschaft verwendet wird, um die Darstellung des ausgewählten Knotens <xref:System.Web.UI.WebControls.TreeView> im-Steuerelement zu steuern.  
  
 [!code-aspx-csharp[TreeViewSelectedNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewSelectedNodeStyle/CS/treeviewselectednodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewSelectedNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewSelectedNodeStyle/VB/treeviewselectednodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="SelectedValue">
      <MemberSignature Language="C#" Value="public string SelectedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.SelectedValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectedValue { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedValue : string" Usage="System.Web.UI.WebControls.TreeView.SelectedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert des ausgewählten Knotens ab.</summary>
        <value>Der Wert des ausgewählten Knotens.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.TreeView.SelectedValue%2A> -Eigenschaft stellt eine bequeme Möglichkeit dar, den Wert des ausgewählten Knotens zu ermitteln. Diese Eigenschaft gibt einfach den Wert der <xref:System.Web.UI.WebControls.TreeNode.Value%2A> -Eigenschaft <xref:System.Web.UI.WebControls.TreeNode> des-Objekts zurück, auf das von der <xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A> -Eigenschaft verwiesen wird. Wenn derzeit kein Knoten im <xref:System.Web.UI.WebControls.TreeView> -Steuerelement ausgewählt ist, wird eine leere Zeichenfolge ("") zurückgegeben.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNode" />
      </Docs>
    </Member>
    <Member MemberName="SetNodeDataBound">
      <MemberSignature Language="C#" Value="protected void SetNodeDataBound (System.Web.UI.WebControls.TreeNode node, bool dataBound);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetNodeDataBound(class System.Web.UI.WebControls.TreeNode node, bool dataBound) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.SetNodeDataBound(System.Web.UI.WebControls.TreeNode,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetNodeDataBound (node As TreeNode, dataBound As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetNodeDataBound(System::Web::UI::WebControls::TreeNode ^ node, bool dataBound);" />
      <MemberSignature Language="F#" Value="member this.SetNodeDataBound : System.Web.UI.WebControls.TreeNode * bool -&gt; unit" Usage="treeView.SetNodeDataBound (node, dataBound)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.UI.WebControls.TreeNode" />
        <Parameter Name="dataBound" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="node">Die festzulegende <see cref="T:System.Web.UI.WebControls.TreeNode" />.</param>
        <param name="dataBound"><see langword="true" />, um den Knoten als datengebunden festzulegen, andernfalls <see langword="false" />.</param>
        <summary>Ermöglicht es einer abgeleiteten Klasse festzulegen, ob die Datenbindung des angegebenen <see cref="T:System.Web.UI.WebControls.TreeNode" />-Steuerelements vorgenommen wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.TreeView.SetNodeDataBound%2A> die-Methode, um anzugeben <xref:System.Web.UI.WebControls.TreeNode> , ob der angegebene Daten gebunden ist.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Die <see cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataBound(System.Web.UI.WebControls.TreeNode,System.Boolean)" /> -Methode wird bereitgestellt, damit ein Steuerelement, das <see cref="T:System.Web.UI.WebControls.TreeView" /> vom-Steuerelement <see cref="P:System.Web.UI.WebControls.TreeNode.DataBound" /> abgeleitet wird, die-Eigenschaft auf einem Knoten festlegen kann.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataItem(System.Web.UI.WebControls.TreeNode,System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataPath(System.Web.UI.WebControls.TreeNode,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SetNodeDataItem">
      <MemberSignature Language="C#" Value="protected void SetNodeDataItem (System.Web.UI.WebControls.TreeNode node, object dataItem);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetNodeDataItem(class System.Web.UI.WebControls.TreeNode node, object dataItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.SetNodeDataItem(System.Web.UI.WebControls.TreeNode,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetNodeDataItem (node As TreeNode, dataItem As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetNodeDataItem(System::Web::UI::WebControls::TreeNode ^ node, System::Object ^ dataItem);" />
      <MemberSignature Language="F#" Value="member this.SetNodeDataItem : System.Web.UI.WebControls.TreeNode * obj -&gt; unit" Usage="treeView.SetNodeDataItem (node, dataItem)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.UI.WebControls.TreeNode" />
        <Parameter Name="dataItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="node">Die festzulegende <see cref="T:System.Web.UI.WebControls.TreeNode" />.</param>
        <param name="dataItem">Das Datenelement für <see cref="T:System.Web.UI.WebControls.TreeNode" />.</param>
        <summary>Ermöglicht einer abgeleiteten Klasse, das Datenelement für das angegebene <see cref="T:System.Web.UI.WebControls.TreeNode" />-Steuerelement festzulegen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.TreeView.SetNodeDataItem%2A> die-Methode, um das Datenelement für <xref:System.Web.UI.WebControls.TreeNode> das angegebene Steuerelement anzugeben.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataBound(System.Web.UI.WebControls.TreeNode,System.Boolean)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataPath(System.Web.UI.WebControls.TreeNode,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SetNodeDataPath">
      <MemberSignature Language="C#" Value="protected void SetNodeDataPath (System.Web.UI.WebControls.TreeNode node, string dataPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetNodeDataPath(class System.Web.UI.WebControls.TreeNode node, string dataPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.SetNodeDataPath(System.Web.UI.WebControls.TreeNode,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetNodeDataPath (node As TreeNode, dataPath As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetNodeDataPath(System::Web::UI::WebControls::TreeNode ^ node, System::String ^ dataPath);" />
      <MemberSignature Language="F#" Value="member this.SetNodeDataPath : System.Web.UI.WebControls.TreeNode * string -&gt; unit" Usage="treeView.SetNodeDataPath (node, dataPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.UI.WebControls.TreeNode" />
        <Parameter Name="dataPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="node">Die festzulegende <see cref="T:System.Web.UI.WebControls.TreeNode" />.</param>
        <param name="dataPath">Der Datenpfad für <see cref="T:System.Web.UI.WebControls.TreeNode" />.</param>
        <summary>Ermöglicht einer abgeleiteten Klasse, den Datenpfad für das angegebene <see cref="T:System.Web.UI.WebControls.TreeNode" />-Steuerelement festzulegen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.TreeView.SetNodeDataPath%2A> die-Methode, um den Datenpfad für <xref:System.Web.UI.WebControls.TreeNode> das angegebene Steuerelement festzulegen.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataBound(System.Web.UI.WebControls.TreeNode,System.Boolean)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataItem(System.Web.UI.WebControls.TreeNode,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ShowCheckBoxes">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeTypes ShowCheckBoxes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.TreeNodeTypes ShowCheckBoxes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ShowCheckBoxes" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowCheckBoxes As TreeNodeTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeTypes ShowCheckBoxes { System::Web::UI::WebControls::TreeNodeTypes get(); void set(System::Web::UI::WebControls::TreeNodeTypes value); };" />
      <MemberSignature Language="F#" Value="member this.ShowCheckBoxes : System.Web.UI.WebControls.TreeNodeTypes with get, set" Usage="System.Web.UI.WebControls.TreeView.ShowCheckBoxes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, bei welchen Knotentypen ein Kontrollkästchen im <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelement angezeigt wird, oder legt diesen Wert fest.</summary>
        <value>Eine bitweise Kombination der <see cref="T:System.Web.UI.WebControls.TreeNodeTypes" />-Werte. Die Standardeinstellung ist <see langword="TreeNodeType.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zum Bereitstellen von Auswahl Unterstützung für mehrere Knoten <xref:System.Web.UI.WebControls.TreeView> im-Steuerelement können Sie Kontrollkästchen neben dem Bild für einen Knoten anzeigen. Verwenden Sie <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> die-Eigenschaft, um anzugeben, für welche Knoten Typen ein Kontrollkästchen angezeigt wird. Wenn diese Eigenschaft beispielsweise auf `TreeNodeType.Parent`festgelegt ist, werden für jeden übergeordneten Knoten in der Struktur Kontrollkästchen angezeigt. In der folgenden Tabelle sind die gültigen Werte für diese Eigenschaft aufgeführt.  
  
|Knotentyp|Beschreibung|  
|---------------|-----------------|  
|`TreeNodeType.All`|Kontrollkästchen für alle Knoten werden angezeigt.|  
|`TreeNodeType.Leaf`|Kontrollkästchen für alle Blattknoten werden angezeigt.|  
|`TreeNodeType.None`|Kontrollkästchen werden nicht angezeigt.|  
|`TreeNodeType.Parent`|Kontrollkästchen werden für alle übergeordneten Knoten angezeigt.|  
|`TreeNodeType.Root`|Kontrollkästchen werden für alle Stamm Knoten angezeigt.|  
  
 Der Enumerationstyp, der für die <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> -Eigenschaft verwendet wird, ist eine Flag-Enumeration, die es Ihnen ermöglicht, Werte durch bitweise Vorgänge zu kombinieren. Um z. b. Kontrollkästchen für die übergeordneten Knoten und die Blattknoten anzuzeigen, verwenden Sie den bitweisen or `TreeNodeType.Parent` - `TreeNodeType.Leaf` Operator, um die Werte und zu kombinieren.  
  
 Um zu ermitteln, für welche Knoten das Kontrollkästchen aktiviert ist, iterieren Sie die <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A> Knoten der Auflistung.  
  
> [!NOTE]
>  Sie können die <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> Einstellung überschreiben, indem <xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A> Sie die-Eigenschaft für jeden Knoten festlegen.  
  
 Wenn Sie nur Unterstützung für die einmalige Auswahl bereitstellen müssen, sollten <xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A> Sie die-Eigenschaft verwenden.  
  
 Der Wert dieser Eigenschaft wird im Ansichts Zustand gespeichert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> -Eigenschaft verwendet wird, um die Kontrollkästchen für die verschiedenen Knoten Typen anzuzeigen und auszublenden.  
  
 [!code-aspx-csharp[TreeViewShowCheckBoxes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewShowCheckBoxes/CS/treeviewshowcheckboxescs.aspx#1)]
 [!code-aspx-vb[TreeViewShowCheckBoxes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewShowCheckBoxes/VB/treeviewshowcheckboxesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der bitweise Kombinationswert liegt außerhalb des Bereichs der <see cref="T:System.Web.UI.WebControls.TreeNodeTypes" />-Enumeration.</exception>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeTypes" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNode" />
      </Docs>
    </Member>
    <Member MemberName="ShowExpandCollapse">
      <MemberSignature Language="C#" Value="public bool ShowExpandCollapse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowExpandCollapse" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ShowExpandCollapse" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowExpandCollapse As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowExpandCollapse { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowExpandCollapse : bool with get, set" Usage="System.Web.UI.WebControls.TreeView.ShowExpandCollapse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob Knotenerweiterungsindikatoren angezeigt werden, oder legt diesen Wert fest.</summary>
        <value><see langword="true" />, um die Knotenerweiterungsindikatoren anzuzeigen, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Erweiterungs Knoten Indikatoren werden verwendet, um anzuzeigen, ob ein Knoten erweitert, reduziert oder nicht erweiterbar ist. Verwenden Sie <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> die-Eigenschaft, um anzugeben, ob die Erweiterungs Knoten Indikatoren <xref:System.Web.UI.WebControls.TreeView> im-Steuerelement angezeigt werden.  
  
 Wenn die <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> -Eigenschaft auf `true`festgelegt ist <xref:System.Web.UI.WebControls.TreeView> , zeigt das Steuerelement ein Pluszeichen (+) oder Minuszeichen (-) oder ein Platzhalter Bild neben einem Knoten an, um anzugeben, ob der Knoten erweiterbar bzw. reduzierbar bzw. nicht erweiterbar ist. Sie können benutzerdefinierte Images angeben, indem Sie <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> zuerst die `TreeViewImageSet.Custom`-Eigenschaft auf festlegen und <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>dann <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>die Eigenschaften <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> , und auf die URLs der benutzerdefinierten Images festlegen. Wenn keine Bilder angegeben sind, werden die Standardbilder verwendet.  
  
 Der Wert dieser Eigenschaft wird im Ansichts Zustand gespeichert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> -Eigenschaft zum Anzeigen und Ausblenden der Erweiterungs Knoten Symbole verwendet wird.  
  
 [!code-aspx-csharp[TreeViewShowExpandCollapse#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewShowExpandCollapse/CS/treeviewshowexpandcollapsecs.aspx#1)]
 [!code-aspx-vb[TreeViewShowExpandCollapse#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewShowExpandCollapse/VB/treeviewshowexpandcollapsevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NoExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="ShowLines">
      <MemberSignature Language="C#" Value="public bool ShowLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowLines" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ShowLines" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowLines As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowLines { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowLines : bool with get, set" Usage="System.Web.UI.WebControls.TreeView.ShowLines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob Linien, die untergeordnete Knoten mit übergeordneten Knoten verbinden, angezeigt werden, oder legt diesen Wert fest.</summary>
        <value><see langword="true" />, um Linien anzuzeigen, die Knoten miteinander verbinden, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.TreeView.ShowLines%2A> die-Eigenschaft, um anzugeben, ob die Zeilen angezeigt werden, die untergeordnete Knoten mit übergeordneten Knoten verbinden. Wenn diese Eigenschaft auf `true`festgelegt ist, durchsucht das <xref:System.Web.UI.WebControls.TreeView> -Steuerelement den Ordner, auf den zugegriffen <xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A> werden kann, der von der-Eigenschaft für die Linienbilder angegeben wird.  
  
> [!NOTE]
>  Wenn die <xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A> Eigenschaft nicht festgelegt ist, <xref:System.Web.UI.WebControls.TreeView> verwendet das Steuerelement die integrierten Standardbilder (20 x 20 Pixel).  
  
 Der Wert dieser Eigenschaft wird im Ansichts Zustand gespeichert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeView.ShowLines%2A> -Eigenschaft zum Anzeigen von Linien verwendet wird <xref:System.Web.UI.WebControls.TreeView> , die Knoten im-Steuerelement verbinden. Stellen Sie sicher, dass Sie das Linien-Designer-Tool verwenden, um einen Satz von Linienbildern zu erstellen und in einem Ordner namens "LineImages" im Verzeichnis für die Beispielanwendung zu platzieren.  
  
 [!code-aspx-csharp[TreeViewLineImagesFolderUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewLineImagesFolderUrl/CS/treeviewlineimagesfolderurlcs.aspx#1)]
 [!code-aspx-vb[TreeViewLineImagesFolderUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewLineImagesFolderUrl/VB/treeviewlineimagesfolderurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LineImagesFolder" />
      </Docs>
    </Member>
    <Member MemberName="SkipLinkText">
      <MemberSignature Language="C#" Value="public string SkipLinkText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SkipLinkText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.SkipLinkText" />
      <MemberSignature Language="VB.NET" Value="Public Property SkipLinkText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SkipLinkText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SkipLinkText : string with get, set" Usage="System.Web.UI.WebControls.TreeView.SkipLinkText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab oder legt einen Wert fest, mit dem alternativer Text gerendert wird, sodass Bildschirmsprachausgaben den Inhalt des Steuerelements überspringen können.</summary>
        <value>Eine Zeichenfolge, die vom <see cref="T:System.Web.UI.WebControls.TreeView" /> als alternativer Text mit einem unsichtbaren Bild gerendert und als Hinweis für Bildschirmsprachausgaben verwendet wird. Der Standardwert lautet "Navigationslinks überspringen".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.TreeView.SkipLinkText%2A> -Eigenschaft ist eine Eigenschaft, die Sie festlegen können, um eine Webseite mehr oder weniger zugänglich zu machen. Webseiten, die Inhalte enthalten, die wiederholt werden, können einen Mechanismus bereitstellen, der es Benutzern von Bildschirmlesern ermöglicht, den Inhalt vor dem Lesen zu überspringen.  
  
 Das <xref:System.Web.UI.WebControls.TreeView> -Steuerelement <xref:System.Web.UI.WebControls.TreeView.SkipLinkText%2A> stellt die-Eigenschaft bereit, damit das gesamte Steuerelement von Sprachausgaben übersprungen werden kann. Wenn die <xref:System.Web.UI.WebControls.TreeView.SkipLinkText%2A> -Eigenschaft festgelegt ist, wird ein unsichtbares Bild mit einem alternativen Text gerendert, der dem Benutzer die Möglichkeit gibt, zum Ende des Steuer Elements zu springen. Sprachausgaben lesen den alternativen Text, während das Bild nur einen Pixel Bereich einnimmt. Legen Sie für die pixelgenaue Kontrolle über das Rendering der Seite die <xref:System.Web.UI.WebControls.TreeView.SkipLinkText%2A> -Eigenschaft auf eine leere Zeichenfolge ("") fest, und stellen Sie einen eigenen Mechanismus zum Überspringen der Struktur bereit.  
  
 Die <xref:System.Web.UI.WebControls.TreeView.SkipLinkText%2A> -Eigenschaft wird standardmäßig auf die leere Zeichenfolge festgelegt, wodurch die Sprachausgabe das Steuerelement nicht überspringt.  
  
 Der Wert dieser Eigenschaft wird im Ansichts Zustand gespeichert.  
  
 Der Wert dieser Eigenschaft, wenn festgelegt, kann mithilfe eines Designers Tools automatisch zu einer Ressourcendatei gespeichert werden. Weitere Informationen finden Sie unter <xref:System.ComponentModel.LocalizableAttribute> und [Globalisierung und Lokalisierung](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.ICallbackEventHandler.GetCallbackResult">
      <MemberSignature Language="C#" Value="string ICallbackEventHandler.GetCallbackResult ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Web.UI.ICallbackEventHandler.GetCallbackResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#GetCallbackResult" />
      <MemberSignature Language="VB.NET" Value="Function GetCallbackResult () As String Implements ICallbackEventHandler.GetCallbackResult" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.Web.UI.ICallbackEventHandler.GetCallbackResult() = System::Web::UI::ICallbackEventHandler::GetCallbackResult;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.ICallbackEventHandler.GetCallbackResult</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt das Ergebnis eines Rückrufereignisses zurück, das ein Steuerelement als Ziel hat.</summary>
        <returns>Die Ergebnisse des Rückrufs.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Web.UI.WebControls.TreeView> -Steuerelement <xref:System.Web.UI.ICallbackEventHandler> implementiert die-Schnitt <xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A> Stelle und verwendet zum Abrufen <xref:System.Web.UI.WebControls.TreeView.GetCallbackResult%2A> von Daten und zur-Methode, um die abgerufenen Daten an das Steuerelement zurückzugeben.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent">
      <MemberSignature Language="C#" Value="void ICallbackEventHandler.RaiseCallbackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaiseCallbackEvent (eventArgument As String) Implements ICallbackEventHandler.RaiseCallbackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System::String ^ eventArgument) = System::Web::UI::ICallbackEventHandler::RaiseCallbackEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Eine Zeichenfolge, die ein optionales Ereignisargument für die Übergabe an den Ereignishandler darstellt.</param>
        <summary>Löst das Rückrufereignis mit den angegebenen Argumenten aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Steuerelement Entwickler sollten die <xref:System.Web.UI.WebControls.TreeView.RaiseCallbackEvent%2A> -Methode überschreiben.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.LoadPostData">
      <MemberSignature Language="C#" Value="bool IPostBackDataHandler.LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Web.UI.IPostBackDataHandler.LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean Implements IPostBackDataHandler.LoadPostData" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Web.UI.IPostBackDataHandler.LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection) = System::Web::UI::IPostBackDataHandler::LoadPostData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">Die Schlüsselkennung für das Steuerelement.</param>
        <param name="postCollection">Die Sammlung aller eingehenden Namenswerte.</param>
        <summary>Verarbeitet Postbackdaten für das <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelement.</summary>
        <returns><see langword="true" />, wenn sich der Zustand des <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelements aufgrund des Postbacks ändert, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Steuerelement Entwickler sollten die <xref:System.Web.UI.WebControls.TreeView.LoadPostData%2A> -Methode überschreiben.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="void IPostBackDataHandler.RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostDataChangedEvent () Implements IPostBackDataHandler.RaisePostDataChangedEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() = System::Web::UI::IPostBackDataHandler::RaisePostDataChangedEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Signalisiert dem <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelement, die Anwendung ASP.NET darüber zu benachrichtigen, dass sich der Zustand des Steuerelements geändert hat.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Steuerelement Entwickler sollten die <xref:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent%2A> -Methode überschreiben.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostBackEvent (eventArgument As String) Implements IPostBackEventHandler.RaisePostBackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System::String ^ eventArgument) = System::Web::UI::IPostBackEventHandler::RaisePostBackEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Eine Zeichenfolge, die ein optionales Ereignisargument für die Übergabe an den Ereignishandler darstellt.</param>
        <summary>Ermöglicht dem <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelement die Verarbeitung eines Ereignisses, das ausgelöst wird, wenn ein Formular an den Server gesendet wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Steuerelement Entwickler sollten die <xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A> -Methode überschreiben.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); };" />
      <MemberSignature Language="F#" Value="member this.TagKey : System.Web.UI.HtmlTextWriterTag" Usage="System.Web.UI.WebControls.TreeView.TagKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den <see cref="T:System.Web.UI.HtmlTextWriterTag" />-Wert für das <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelement ab.</summary>
        <value>Gibt immer einen <see cref="F:System.Web.UI.HtmlTextWriterTag.Div" />-Wert zurück.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.TreeView.TagKey%2A> -Eigenschaft ermöglicht es dem Ausgabestream, die entsprechende HTML-Markierung <xref:System.Web.UI.WebControls.TreeView> für das Steuerelement zu schreiben.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Sie können die <see cref="P:System.Web.UI.WebControls.TreeView.TagKey" /> -Eigenschaft überschreiben, <see cref="T:System.Web.UI.HtmlTextWriterTag" /> um anzugeben, welcher Wert für das abgeleitete Steuerelement verwendet werden soll.</para></block>
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public string Target { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Target" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.Target" />
      <MemberSignature Language="VB.NET" Value="Public Property Target As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Target { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Target : string with get, set" Usage="System.Web.UI.WebControls.TreeView.Target" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Zielfenster oder den Zielframe ab, in dem die einem Knoten zugeordneten Webseiteninhalte angezeigt werden sollen, oder legt dieses Zielfenster bzw. den Zielframe fest.</summary>
        <value>Das Zielfenster oder der Zielframe, in dem der verknüpfte Webseiteninhalt angezeigt werden soll. Werte müssen mit einem Buchstaben von A bis Z (ohne Berücksichtigung der Groß- und Kleinschreibung) beginnen, mit Ausnahme der in folgender Tabelle aufgeführten speziellen Werte, die mit einem Unterstrich beginnen:  
  
 <list type="table"><listheader><term> Zielwert 
 </term><description> Rendern des Inhalts in 
 </description></listheader><item><term><see langword="_blank" /></term><description> Einem neuen Fenster ohne Frames.  
  
 </description></item><item><term><see langword="_parent" /></term><description> Dem unmittelbar übergeordneten Frameset.  
  
 </description></item><item><term><see langword="_search" /></term><description> Dem Suchbereich.  
  
 </description></item><item><term><see langword="_self" /></term><description> Dem Frame mit dem Fokus.  
  
 </description></item><item><term><see langword="_top" /></term><description> Dem gesamten Fenster ohne Frames.  
  
 </description></item></list><block subset="none" type="note"><para>  
 Sie können der Browserdokumentation entnehmen, ob der <see langword="_search" />-Wert unterstützt wird.  Beispielsweise unterstützt Microsoft Internet Explorer 5.0 und höher den <see langword="_search" />-Zielwert.  
  
</para></block>  
  
 Der Standardwert ist eine leere Zeichenfolge (""), die das Fenster oder den Frame mit dem Fokus aktualisiert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.TreeView.Target%2A> die-Eigenschaft, um das Fenster oder den Frame anzugeben, in dem der Webinhalt angezeigt werden soll, der mit einem Knoten verknüpft ist, wenn auf diesen Knoten geklickt wird.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.TreeView.Target%2A> Eigenschaft wird `target` als-Attribut gerendert. Das `target` -Attribut `anchor` für-Elemente ist in der XHTML 1,1-Dokumenttyp Definition nicht zulässig. Legen Sie die <xref:System.Web.UI.WebControls.TreeView.Target%2A> -Eigenschaft nicht fest, wenn die gerenderte Ausgabe für den <xref:System.Web.UI.WebControls.TreeView> XHTML 1,1-kompatibel sein muss. Weitere Informationen finden Sie unter [XHTML-Standards in Visual Studio und ASP.net](https://msdn.microsoft.com/library/1b78d416-66bb-43a5-ac77-c703aab55b97).  
>   
>  Wenn Sie barrierefreie Webseiten erstellen, sollten Sie die <xref:System.Web.UI.WebControls.TreeView.Target%2A> -Eigenschaft nicht verwenden, um ein anderes Fenster als Ziel zu verwenden. Weitere Informationen finden Sie unter [ASP.NET-Steuerelemente und Barrierefreiheit](https://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).  
  
 Der Wert dieser Eigenschaft wird im Ansichts Zustand gespeichert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeView.Target%2A> -Eigenschaft verwendet wird, um den Webinhalt anzuzeigen, der mit einem Knoten in einem neuen Fenster verknüpft ist, wenn auf diesen Knoten geklickt wird.  
  
 [!code-aspx-csharp[TreeViewTarget#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewTarget/CS/treeviewtargetcs.aspx#1)]
 [!code-aspx-vb[TreeViewTarget#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewTarget/VB/treeviewtargetvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Target" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="treeView.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Verfolgt die am Ansichtszustand des <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelements vorgenommenen Änderungen und speichert diese im <see cref="T:System.Web.UI.StateBag" />-Objekt des Steuerelements. Auf dieses <see cref="T:System.Web.UI.StateBag" />-Objekt kann über die <see cref="P:System.Web.UI.Control.ViewState" />-Eigenschaft zugegriffen werden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.TreeView.TrackViewState%2A> -Methode wird überschrieben, um den Startpunkt zu markieren, um mit dem Nachverfolgen und Speichern von Änderungen am Steuerelement als Teil des Ansichts Zustands des Steuer Elements zu beginnen.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="P:System.Web.UI.Control.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="TreeNodeCheckChanged">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeCheckChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeCheckChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TreeNodeCheckChanged As TreeNodeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::TreeNodeEventHandler ^ TreeNodeCheckChanged;" />
      <MemberSignature Language="F#" Value="member this.TreeNodeCheckChanged : System.Web.UI.WebControls.TreeNodeEventHandler " Usage="member this.TreeNodeCheckChanged : System.Web.UI.WebControls.TreeNodeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn sich der Zustand eines Kontrollkästchens im <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelement zwischen Übermittlungen an den Server ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged> -Ereignis wird ausgelöst, wenn ein Kontrollkästchen <xref:System.Web.UI.WebControls.TreeView> im-Steuerelement den Status zwischen den Beiträgen zum Server ändert. Dies ermöglicht es Ihnen, eine Ereignis Behandlungsmethode bereitzustellen, die eine benutzerdefinierte Routine ausführt, z. b. das Aktualisieren einer Datenbank oder des angezeigten Inhalts, wenn dieses Ereignis auftritt.  
  
 Obwohl das Ereignis <xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged> beim Postback ausgelöst wird, führt das Ändern eines Kontrollkästchens nicht zu einem Postback.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie das <xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged> -Ereignis verwendet wird <xref:System.Web.UI.WebControls.Label> , um ein-Steuerelement zu <xref:System.Web.UI.WebControls.TreeView> aktualisieren, wenn die Kontrollkästchen des-Steuer Elements den Zustand zwischen den Beiträgen zum Server ändern.  
  
 [!code-aspx-csharp[TreeViewCheckChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCheckChanged/CS/treeviewcheckchangedcs.aspx#1)]
 [!code-aspx-vb[TreeViewCheckChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCheckChanged/VB/treeviewcheckchangedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="TreeNodeCollapsed">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeCollapsed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeCollapsed" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TreeNodeCollapsed As TreeNodeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::TreeNodeEventHandler ^ TreeNodeCollapsed;" />
      <MemberSignature Language="F#" Value="member this.TreeNodeCollapsed : System.Web.UI.WebControls.TreeNodeEventHandler " Usage="member this.TreeNodeCollapsed : System.Web.UI.WebControls.TreeNodeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wird ausgelöst, wenn ein Knoten im <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelement reduziert wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed> -Ereignis wird ausgelöst, wenn ein Knoten <xref:System.Web.UI.WebControls.TreeView> im-Steuerelement reduziert wird. Dies ermöglicht es Ihnen, eine Ereignis Behandlungsmethode bereitzustellen, die immer dann eine benutzerdefinierte Routine ausführt, wenn dieses Ereignis auftritt.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie das <xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed> -Ereignis verwendet wird, um den <xref:System.Web.UI.WebControls.Label> Inhalt eines-Steuer Elements zu aktualisieren, wenn <xref:System.Web.UI.WebControls.TreeView> der Benutzer einen Knoten im-Steuerelement reduziert.  
  
 [!code-aspx-csharp[TreeViewTreeNodeExpand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewTreeNodeExpand/CS/treeviewtreenodeexpandcs.aspx#1)]
 [!code-aspx-vb[TreeViewTreeNodeExpand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewTreeNodeExpand/VB/treeviewtreenodeexpandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="TreeNodeDataBound">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeDataBound;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeDataBound" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.TreeView.TreeNodeDataBound" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TreeNodeDataBound As TreeNodeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::TreeNodeEventHandler ^ TreeNodeDataBound;" />
      <MemberSignature Language="F#" Value="member this.TreeNodeDataBound : System.Web.UI.WebControls.TreeNodeEventHandler " Usage="member this.TreeNodeDataBound : System.Web.UI.WebControls.TreeNodeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wird ausgelöst, wenn ein Datenelement im <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelement an einen Knoten gebunden wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Web.UI.WebControls.TreeView.TreeNodeDataBound> -Ereignis wird ausgelöst, wenn ein Datenelement an einen Knoten <xref:System.Web.UI.WebControls.TreeView> im-Steuerelement gebunden ist. Dies ermöglicht es Ihnen, eine Ereignis Behandlungsmethode bereitzustellen, die immer dann eine benutzerdefinierte Routine ausführt, wenn dieses Ereignis auftritt.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Dieser Abschnitt enthält zwei Codebeispiele. Im ersten Codebeispiel wird veranschaulicht, wie das <xref:System.Web.UI.WebControls.TreeView.TreeNodeDataBound> -Ereignis verwendet wird, um das Image für einen Knoten zu ändern, wenn eine bestimmte Bedingung erfüllt ist. Im zweiten Codebeispiel werden Beispiel-XML-Daten für das erste Codebeispiel bereitstellt.  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie das <xref:System.Web.UI.WebControls.TreeView.TreeNodeDataBound> -Ereignis verwendet wird, um das Bild für einen Knoten zu ändern, wenn eine bestimmte Bedingung erfüllt ist. Damit dieses Beispiel ordnungsgemäß funktioniert, müssen Sie die Beispiel-XML-Daten, die nach diesem Codebeispiel bereitgestellt werden, in eine Datei namens "Book. xml" kopieren. Stellen Sie außerdem sicher, dass Sie Ihre eigenen Images bereitstellen, die für dieses Beispiel angezeigt werden.  
  
 [!code-aspx-csharp[TreeViewTreeNodeDataBound#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewTreeNodeDataBound/CS/treeviewtreenodedataboundcs.aspx#1)]
 [!code-aspx-vb[TreeViewTreeNodeDataBound#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewTreeNodeDataBound/VB/treeviewtreenodedataboundvb.aspx#1)]  
  
 Im folgenden Codebeispiel werden Beispiel-XML-Daten für das vorherige Codebeispiel bereitstellt.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="TreeNodeExpanded">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeExpanded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeExpanded" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.TreeView.TreeNodeExpanded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TreeNodeExpanded As TreeNodeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::TreeNodeEventHandler ^ TreeNodeExpanded;" />
      <MemberSignature Language="F#" Value="member this.TreeNodeExpanded : System.Web.UI.WebControls.TreeNodeEventHandler " Usage="member this.TreeNodeExpanded : System.Web.UI.WebControls.TreeNodeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wird ausgelöst, wenn ein Knoten im <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelement erweitert wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> -Ereignis wird ausgelöst, wenn ein Knoten <xref:System.Web.UI.WebControls.TreeView> im-Steuerelement erweitert wird. Dies ermöglicht es Ihnen, eine Ereignis Behandlungsmethode bereitzustellen, die immer dann eine benutzerdefinierte Routine ausführt, wenn dieses Ereignis auftritt.  
  
> [!NOTE]
>  Wenn die <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> -Eigenschaft eines Knotens auf `TreeNodeSelectAction.Expand` oder `TreeNodeSelectAction.SelectExpand`festgelegt ist <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> , wird das- <xref:System.Web.UI.WebControls.TreeView> Ereignis auch ausgelöst, wenn auf diesen Knoten im-Steuerelement geklickt wird.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie das <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> -Ereignis verwendet wird, um den <xref:System.Web.UI.WebControls.Label> Inhalt eines-Steuer Elements zu aktualisieren, wenn <xref:System.Web.UI.WebControls.TreeView> der Benutzer einen Knoten im-Steuerelement erweitert.  
  
 [!code-aspx-csharp[TreeViewTreeNodeExpand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewTreeNodeExpand/CS/treeviewtreenodeexpandcs.aspx#1)]
 [!code-aspx-vb[TreeViewTreeNodeExpand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewTreeNodeExpand/VB/treeviewtreenodeexpandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded(System.Web.UI.WebControls.TreeNodeEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.SelectAction" />
      </Docs>
    </Member>
    <Member MemberName="TreeNodePopulate">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodePopulate;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.TreeNodeEventHandler TreeNodePopulate" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TreeNodePopulate As TreeNodeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::TreeNodeEventHandler ^ TreeNodePopulate;" />
      <MemberSignature Language="F#" Value="member this.TreeNodePopulate : System.Web.UI.WebControls.TreeNodeEventHandler " Usage="member this.TreeNodePopulate : System.Web.UI.WebControls.TreeNodeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn ein Knoten, dessen <see cref="P:System.Web.UI.WebControls.TreeNode.PopulateOnDemand" />-Eigenschaft auf <see langword="true" /> festgelegt ist, im <see cref="T:System.Web.UI.WebControls.TreeView" />-Steuerelement erweitert wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In manchen Fällen ist es nicht praktikabel, die Struktur durch die Datengröße oder den benutzerdefinierten Inhalt, der von Benutzereingaben abhängt, statisch vorzudefinieren. Aus diesem Grund unterstützt <xref:System.Web.UI.WebControls.TreeView> das-Steuerelement die dynamische Knoten Auffüllung. Wenn die <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> -Eigenschaft für einen Knoten auf `true`festgelegt ist, wird dieser Knoten zur Laufzeit aufgefüllt, wenn der Knoten erweitert wird.  
  
 Um einen Knoten dynamisch aufzufüllen, legen Sie zuerst <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> die-Eigenschaft für den `true`Knoten auf fest. Definieren Sie als nächstes eine Ereignis Behandlungsmethode für <xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate> das Ereignis, das den Knotenprogramm gesteuert füllt. Eine typische Ereignis Behandlungsmethode ruft Knoten Daten aus einer Datenquelle ab, platziert die Daten in einer Knoten Struktur und fügt dann die Knoten Struktur <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> der Auflistung des Knotens hinzu, der aufgefüllt wird. Eine Knoten Struktur wird erstellt, indem <xref:System.Web.UI.WebControls.TreeNode> der <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> -Auflistung eines übergeordneten Knotens-Objekte hinzugefügt werden.  
  
> [!NOTE]
>  Wenn die <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> -Eigenschaft für einen Knoten auf `true`festgelegt ist, muss der Knoten dynamisch aufgefüllt werden. Es ist nicht möglich, einen anderen untergeordneten Knoten deklarativ zu schachteln. Andernfalls tritt ein Fehler auf der Seite auf.  
  
 Unterstützte Browser (Microsoft Internet Explorer 4,0-kompatible Browser und höher) können auch die Client seitige Knoten Population nutzen. Wenn diese Option aktiviert ist, <xref:System.Web.UI.WebControls.TreeView> kann das Steuerelement einen Knoten dynamisch auf dem Client auffüllen, wenn dieser Knoten erweitert wird. Dadurch wird verhindert, dass ein Postback an den Server erfolgt. Weitere Informationen zur Client seitigen Knoten Population finden <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>Sie unter.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie das <xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate> -Ereignis verwendet wird, um die Knoten <xref:System.Web.UI.WebControls.TreeView> im-Steuerelement dynamisch auf dem Server aufzufüllen. Beachten Sie, <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A> dass die-Eigenschaft `false` auf festgelegt ist, um zu verhindern, dass erweiternde Knoten Ereignisse auf dem Client behandelt werden.  
  
 [!code-aspx-csharp[TreeViewTreeNodePopulate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewTreeNodePopulate/CS/treeviewtreenodepopulatecs.aspx#1)]
 [!code-aspx-vb[TreeViewTreeNodePopulate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewTreeNodePopulate/VB/treeviewtreenodepopulatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodePopulate(System.Web.UI.WebControls.TreeNodeEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.PopulateOnDemand" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient" />
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public override bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Visible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Visible : bool with get, set" Usage="System.Web.UI.WebControls.TreeView.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das Steuerelement als Benutzeroberfläche der Seite dargestellt wird, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn das Steuerelement auf der Seite sichtbar ist, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Web.UI.WebControls.TreeView.Visible%2A> -Eigenschaft auf `false`festgelegt ist, wird das-Steuerelement nicht gerendert.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
      </Docs>
    </Member>
  </Members>
</Type>
