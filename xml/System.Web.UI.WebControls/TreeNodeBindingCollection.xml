<Type Name="TreeNodeBindingCollection" FullName="System.Web.UI.WebControls.TreeNodeBindingCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="024eaa62373414ff488c04a7133814130aeb7584" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70688072" /></Metadata><TypeSignature Language="C#" Value="public sealed class TreeNodeBindingCollection : System.Web.UI.StateManagedCollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TreeNodeBindingCollection extends System.Web.UI.StateManagedCollection" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.TreeNodeBindingCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TreeNodeBindingCollection&#xA;Inherits StateManagedCollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class TreeNodeBindingCollection sealed : System::Web::UI::StateManagedCollection" />
  <TypeSignature Language="F#" Value="type TreeNodeBindingCollection = class&#xA;    inherit StateManagedCollection" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.StateManagedCollection</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt eine Auflistung von <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> -Objekten im <see cref="T:System.Web.UI.WebControls.TreeView" /> -Steuerelement dar. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> -Klasse wird verwendet, um eine Auflistung von <xref:System.Web.UI.WebControls.TreeNodeBinding> -Objekten im <xref:System.Web.UI.WebControls.TreeView> -Steuerelement zu speichern und zu verwalten. Das <xref:System.Web.UI.WebControls.TreeView> -Steuerelement <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> verwendet die- <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> Klasse für seine-Eigenschaft.  
  
 Die <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> -Eigenschaft <xref:System.Web.UI.WebControls.TreeNodeBinding> enthält-Objekte, die die Beziehung zwischen einem Datenelement und dem Knoten definieren, an den er gebunden wird. Beim Binden an eine Datenquelle, in der jedes Datenelement mehrere Eigenschaften enthält (z. b. ein XML-Element mit mehreren Attributen), zeigt ein Knoten den Wert `ToString` an, der von der-Methode des Datenelements standardmäßig zurückgegeben wird. Im Fall eines XML-Elements zeigt der Knoten den Elementnamen an, der die zugrunde liegende Struktur der Struktur anzeigt, ansonsten aber nicht sehr nützlich ist. Sie können einen Knoten an eine bestimmte Datenelement Eigenschaft binden, indem Sie Struktur Knoten Bindungen angeben. Obwohl die <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> Auflistung Programm gesteuert aufgefüllt werden kann, wird Sie normalerweise deklarativ festgelegt.  
  
 So legen Sie die Struktur Knoten Bindungen deklarativ fest:  
  
1.  `<DataBindings>` Schachteln <xref:System.Web.UI.WebControls.TreeView>  von öffnenden und schließenden Tags zwischen dem öffnenden und dem schließenden Tag des-Steuer Elements.  
  
2.  Platzieren `<asp:TreeNodeBinding>` Sie Elemente zwischen den öffnenden `<DataBindings>` und schließenden Tags für jede Struktur Knoten Bindung, die Sie angeben möchten.  
  
 Sie können eine <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> Programm gesteuert verwalten, indem Sie- <xref:System.Web.UI.WebControls.TreeNodeBinding> Objekte hinzufügen und entfernen. Um der Auflistung <xref:System.Web.UI.WebControls.TreeNodeBinding> ein-Objekt hinzuzufügen, verwenden <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Add%2A> Sie <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Insert%2A> die-Methode oder die-Methode. Verwenden Sie die <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Remove%2A>Methode, <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt%2A>oder <xref:System.Web.UI.StateManagedCollection.Clear%2A?displayProperty=nameWithType> , um Knoten aus der Auflistung zu entfernen.  
  
 Die <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> -Klasse unterstützt mehrere Möglichkeiten für den Zugriff auf die Elemente in der Auflistung:  
  
-   Verwenden Sie <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Item%2A> den Indexer, um <xref:System.Web.UI.WebControls.TreeNode> ein-Objekt direkt an einem bestimmten Null basierten Index abzurufen.  
  
-   Verwenden Sie <xref:System.Web.UI.StateManagedCollection.GetEnumerator%2A?displayProperty=nameWithType> die-Methode, um einen Enumerator zu erstellen, der zum Durchlaufen der Auflistung verwendet werden kann.  
  
   
  
## Examples  
 Dieser Abschnitt enthält zwei Codebeispiele. Im ersten Codebeispiel wird veranschaulicht, wie ein <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> -Objekt deklarativ aufgefüllt wird. Im zweiten Codebeispiel wird veranschaulicht, wie ein <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> -Objekt Programm gesteuert aufgefüllt wird.  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie ein <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> -Objekt deklarativ auffüllen. Damit dieses Beispiel ordnungsgemäß funktioniert, müssen Sie die XML-Daten, die sich am Ende dieses Abschnitts befinden, in eine Datei mit dem Namen "Book. xml" kopieren.  
  
 [!code-aspx-csharp[TreeViewXml#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewXml/CS/treeviewxmlcs.aspx#1)]
 [!code-aspx-vb[TreeViewXml#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewXml/VB/treeviewxmlvb.aspx#1)]  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie ein <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> -Objekt Programm gesteuert aufgefüllt wird. Damit dieses Beispiel ordnungsgemäß funktioniert, müssen Sie die XML-Beispiel Daten, die sich am Ende dieses Abschnitts befinden, in eine Datei mit dem Namen "Book. xml" kopieren.  
  
 [!code-aspx-csharp[TreeViewCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCtor/CS/treeviewctorcs.aspx#1)]
 [!code-aspx-vb[TreeViewCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCtor/VB/treeviewctorvb.aspx#1)]  
  
 Im folgenden werden die XML-Daten für die vorangehenden Codebeispiele aufgeführt.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
       <Section Heading="Section 1">  
       </Section>  
       <Section Heading="Section 2">  
       </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.TreeView" />
    <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
    <altmember cref="T:System.Web.UI.WebControls.TreeNodeBinding" />
    <altmember cref="P:System.Web.UI.WebControls.TreeView.DataBindings" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeBindingCollection.Add(System.Web.UI.WebControls.TreeNodeBinding)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeBindingCollection.Insert(System.Int32,System.Web.UI.WebControls.TreeNodeBinding)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeBindingCollection.Remove(System.Web.UI.WebControls.TreeNodeBinding)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt(System.Int32)" />
    <altmember cref="M:System.Web.UI.StateManagedCollection.Clear" />
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (System.Web.UI.WebControls.TreeNodeBinding binding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(class System.Web.UI.WebControls.TreeNodeBinding binding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeBindingCollection.Add(System.Web.UI.WebControls.TreeNodeBinding)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (binding As TreeNodeBinding) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::Web::UI::WebControls::TreeNodeBinding ^ binding);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Web.UI.WebControls.TreeNodeBinding -&gt; int" Usage="treeNodeBindingCollection.Add binding" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binding" Type="System.Web.UI.WebControls.TreeNodeBinding" />
      </Parameters>
      <Docs>
        <param name="binding">Die anzufügende <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" />.</param>
        <summary>Fügt das angegebene <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" />-Objekt an das Ende des <see cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" />-Objekts an.</summary>
        <returns>Der nullbasierte Index der Position des hinzugefügten <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> in der <see cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Add%2A> die-Methode, um das <xref:System.Web.UI.WebControls.TreeNodeBinding> angegebene Objekt <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> an das Ende des-Objekts anzufügen.  
  
 Als Alternative können Sie mithilfe der <xref:System.Web.UI.WebControls.TreeNodeBinding> <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Insert%2A> -Methode ein-Objekt <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> in einen bestimmten Index einfügen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Add%2A> -Methode verwendet wird, <xref:System.Web.UI.WebControls.TreeNodeBinding> um einem- <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> Objekt Programm gesteuert ein neues-Objekt hinzuzufügen. Damit dieses Beispiel ordnungsgemäß funktioniert, müssen Sie die XML-Daten, die sich am Ende dieses Abschnitts befinden, in eine Datei mit dem Namen "Book. xml" kopieren.  
  
 [!code-aspx-csharp[TreeNodeBindingCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeBindingCollectionAdd/CS/treenodebindingcollectionaddcs.aspx#1)]
 [!code-aspx-vb[TreeNodeBindingCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeBindingCollectionAdd/VB/treenodebindingcollectionaddvb.aspx#1)]  
  
 Im folgenden sind die XML-Daten für das vorherige Codebeispiel dargestellt.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1"  
            Subject="Subject 1">  
        </Section>  
        <Section Heading="Section 2"  
            Subject="Subject 1">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1"  
            Subject="Subject 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.DataBindings" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeBindingCollection.Insert(System.Int32,System.Web.UI.WebControls.TreeNodeBinding)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeBindingCollection.Remove(System.Web.UI.WebControls.TreeNodeBinding)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.Clear" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Web.UI.WebControls.TreeNodeBinding binding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Web.UI.WebControls.TreeNodeBinding binding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeBindingCollection.Contains(System.Web.UI.WebControls.TreeNodeBinding)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (binding As TreeNodeBinding) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Web::UI::WebControls::TreeNodeBinding ^ binding);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Web.UI.WebControls.TreeNodeBinding -&gt; bool" Usage="treeNodeBindingCollection.Contains binding" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binding" Type="System.Web.UI.WebControls.TreeNodeBinding" />
      </Parameters>
      <Docs>
        <param name="binding">Das zu suchende <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" />.</param>
        <summary>Bestimmt, ob das angegebene <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" />-Objekt in der Auflistung vorhanden ist.</summary>
        <returns><see langword="true" />, wenn sich der <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> in der Auflistung befindet, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Contains%2A> die-Methode, um <xref:System.Web.UI.WebControls.TreeNodeBinding> zu bestimmen, ob ein <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> -Objekt im-Objekt enthalten ist. Diese Methode wird häufig verwendet, um zu testen, ob ein <xref:System.Web.UI.WebControls.TreeNodeBinding> -Objekt vorhanden ist, bevor eine Aufgabe durchgeführt wird, <xref:System.Web.UI.WebControls.TreeNodeBinding> z. b. das Hinzufügen oder Entfernen eines aus der Auflistung.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeBinding" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeBindingCollection.IndexOf(System.Web.UI.WebControls.TreeNodeBinding)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Web.UI.WebControls.TreeNodeBinding[] bindingArray, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Web.UI.WebControls.TreeNodeBinding[] bindingArray, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeBindingCollection.CopyTo(System.Web.UI.WebControls.TreeNodeBinding[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (bindingArray As TreeNodeBinding(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Web::UI::WebControls::TreeNodeBinding ^&gt; ^ bindingArray, int index);" />
      <MemberSignature Language="F#" Value="override this.CopyTo : System.Web.UI.WebControls.TreeNodeBinding[] * int -&gt; unit" Usage="treeNodeBindingCollection.CopyTo (bindingArray, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingArray" Type="System.Web.UI.WebControls.TreeNodeBinding[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bindingArray">Ein nullbasiertes Array von <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" />-Objekten, das die kopierten Elemente aus der <see cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" /> aufnimmt.</param>
        <param name="index">Die Position im <paramref name="bindingArray" />, an der mit dem Empfang des kopierten Inhalts begonnen werden soll.</param>
        <summary>Kopiert alle Elemente aus dem <see cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" />-Objekt in ein kompatibles eindimensionales Array von <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" />-Objekten, wobei am angegebenen Index des Zielarrays begonnen wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.CopyTo%2A> die-Methode, um den Inhalt <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> des- `bindingArray`Objekts in zu kopieren. Elemente werden ab `index`kopiert. Anschließend können Sie das Array verwenden, um auf die Elemente in der Auflistung zuzugreifen.  
  
 Als Alternative können Sie die <xref:System.Web.UI.StateManagedCollection.GetEnumerator%2A> -Methode verwenden, um einen Enumerator zu erstellen, der für den Zugriff auf die Elemente in der Auflistung verwendet werden kann.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.CopyTo%2A> -Methode verwendet wird, um den <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> Inhalt der Auflistung in ein Array zu kopieren.  
  
 [!code-aspx-csharp[TreeNodeBindingCollectionCopyTo#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeBindingCollectionCopyTo/CS/treenodebindingcollectioncopytocs.aspx#1)]
 [!code-aspx-vb[TreeNodeBindingCollectionCopyTo#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeBindingCollectionCopyTo/VB/treenodebindingcollectioncopytovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeBinding" />
        <altmember cref="T:System.Array" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBindingCollection.Item(System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.CopyTo(System.Array)" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="CreateKnownType">
      <MemberSignature Language="C#" Value="protected override object CreateKnownType (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object CreateKnownType(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeBindingCollection.CreateKnownType(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateKnownType (index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ CreateKnownType(int index);" />
      <MemberSignature Language="F#" Value="override this.CreateKnownType : int -&gt; obj" Usage="treeNodeBindingCollection.CreateKnownType index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKnownTypes">
      <MemberSignature Language="C#" Value="protected override Type[] GetKnownTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Type[] GetKnownTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeBindingCollection.GetKnownTypes" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetKnownTypes () As Type()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;Type ^&gt; ^ GetKnownTypes();" />
      <MemberSignature Language="F#" Value="override this.GetKnownTypes : unit -&gt; Type[]" Usage="treeNodeBindingCollection.GetKnownTypes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Web.UI.WebControls.TreeNodeBinding binding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Web.UI.WebControls.TreeNodeBinding binding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeBindingCollection.IndexOf(System.Web.UI.WebControls.TreeNodeBinding)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (binding As TreeNodeBinding) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Web::UI::WebControls::TreeNodeBinding ^ binding);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Web.UI.WebControls.TreeNodeBinding -&gt; int" Usage="treeNodeBindingCollection.IndexOf binding" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binding" Type="System.Web.UI.WebControls.TreeNodeBinding" />
      </Parameters>
      <Docs>
        <param name="binding">Die zu suchende <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" />.</param>
        <summary>Bestimmt den Index des angegebenen <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" />-Objekts in der Auflistung.</summary>
        <returns>Der nullbasierte Index des ersten Vorkommens von <paramref name="binding" /> in der <see cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" />, sofern gefunden, andernfalls -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.IndexOf%2A> die-Methode, um den NULL basierten Index des angegebenen <xref:System.Web.UI.WebControls.TreeNodeBinding> Objekts im <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> -Objekt zu ermitteln. Wenn sich der Knoten nicht in der Auflistung befindet, gibt die Methode-1 zurück.  
  
> [!NOTE]
>  Wenn das angegebene <xref:System.Web.UI.WebControls.TreeNodeBinding> Objekt mehrmals in der Auflistung angezeigt wird, wird der Index des ersten Vorkommens zurückgegeben.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeBinding" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeBindingCollection.Contains(System.Web.UI.WebControls.TreeNodeBinding)" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Web.UI.WebControls.TreeNodeBinding binding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Web.UI.WebControls.TreeNodeBinding binding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeBindingCollection.Insert(System.Int32,System.Web.UI.WebControls.TreeNodeBinding)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, binding As TreeNodeBinding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::Web::UI::WebControls::TreeNodeBinding ^ binding);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * System.Web.UI.WebControls.TreeNodeBinding -&gt; unit" Usage="treeNodeBindingCollection.Insert (index, binding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="binding" Type="System.Web.UI.WebControls.TreeNodeBinding" />
      </Parameters>
      <Docs>
        <param name="index">Der Speicherort des nullbasierten Index, an dem <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> eingefügt werden soll.</param>
        <param name="binding">Der einzufügende <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" />.</param>
        <summary>Fügt das angegebene <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" />-Objekt in das <see cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" />-Objekt an der angegebenen Indexposition ein.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Insert%2A> die-Methode, um <xref:System.Web.UI.WebControls.TreeNodeBinding> das angegebene- <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> `index`Objekt in das-Objekt einzufügen.  
  
 Als Alternative können Sie <xref:System.Web.UI.WebControls.TreeNodeBinding> <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> mithilfe der <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Add%2A> -Methode ein-Objekt an das Ende der Anhängen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Insert%2A> -Methode verwendet wird, <xref:System.Web.UI.WebControls.TreeNodeBinding> um ein neues-Objekt <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> Programm gesteuert in ein-Objekt einzufügen. Damit dieses Beispiel ordnungsgemäß funktioniert, müssen Sie die XML-Daten, die sich am Ende dieses Abschnitts befinden, in eine Datei mit dem Namen "Book. xml" kopieren.  
  
 [!code-aspx-csharp[TreeNodeBindingCollectionInsert#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeBindingCollectionInsert/CS/treenodebindingcollectioninsertcs.aspx#1)]
 [!code-aspx-vb[TreeNodeBindingCollectionInsert#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeBindingCollectionInsert/VB/treenodebindingcollectioninsertvb.aspx#1)]  
  
 Im folgenden sind die XML-Daten für das vorherige Codebeispiel dargestellt.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1"  
            Subject="Subject 1">  
        </Section>  
        <Section Heading="Section 2"  
            Subject="Subject 1">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1"  
            Subject="Subject 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.DataBindings" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeBindingCollection.Add(System.Web.UI.WebControls.TreeNodeBinding)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeBindingCollection.Remove(System.Web.UI.WebControls.TreeNodeBinding)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.Clear" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeBinding this[int i] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeBinding Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNodeBindingCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(i As Integer) As TreeNodeBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeBinding ^ default[int] { System::Web::UI::WebControls::TreeNodeBinding ^ get(int i); void set(int i, System::Web::UI::WebControls::TreeNodeBinding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Web.UI.WebControls.TreeNodeBinding with get, set" Usage="System.Web.UI.WebControls.TreeNodeBindingCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Der nullbasierte Index des abzurufenden <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" />.</param>
        <summary>Ruft das <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" />-Objekt am angegebenen Index im <see cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" />-Objekt ab oder legt dieses fest.</summary>
        <value>Der <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> am angegebenen Index in der <see cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Item%2A> den Indexer, um <xref:System.Web.UI.WebControls.TreeNodeBinding> auf ein- <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> Objekt aus dem `i` Objekt zuzugreifen, das sich unter Verwendung der Array Notation befindet Der <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Item%2A> Indexer ermöglicht es Ihnen, ein <xref:System.Web.UI.WebControls.TreeNodeBinding> -Objekt in der Auflistung direkt zu ändern oder zu ersetzen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie der <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Item%2A> Indexer zum Zugreifen auf die Elemente in einem <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> -Objekt verwendet wird. Das <xref:System.Web.UI.WebControls.TreeNodeBinding> -Objekt für die Knoten der dritten Ebene wird Programm gesteuert mit neuen Werten aktualisiert. Damit dieses Beispiel ordnungsgemäß funktioniert, müssen Sie die XML-Daten, die sich am Ende dieses Abschnitts befinden, in eine Datei mit dem Namen "Book. xml" kopieren.  
  
 [!code-aspx-csharp[TreeNodeBindingCollectionIndexer#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeBindingCollectionIndexer/CS/treenodebindingcollectionindexercs.aspx#1)]
 [!code-aspx-vb[TreeNodeBindingCollectionIndexer#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeBindingCollectionIndexer/VB/treenodebindingcollectionindexervb.aspx#1)]  
  
 Im folgenden sind die XML-Daten für das vorherige Codebeispiel dargestellt.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1"  
            Subject="Subject 1">  
        </Section>  
        <Section Heading="Section 2"  
            Subject="Subject 1">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1"  
            Subject="Subject 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="OnClear">
      <MemberSignature Language="C#" Value="protected override void OnClear ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnClear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeBindingCollection.OnClear" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnClear ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnClear();" />
      <MemberSignature Language="F#" Value="override this.OnClear : unit -&gt; unit" Usage="treeNodeBindingCollection.OnClear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRemoveComplete">
      <MemberSignature Language="C#" Value="protected override void OnRemoveComplete (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnRemoveComplete(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeBindingCollection.OnRemoveComplete(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnRemoveComplete (index As Integer, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnRemoveComplete(int index, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.OnRemoveComplete : int * obj -&gt; unit" Usage="treeNodeBindingCollection.OnRemoveComplete (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnValidate">
      <MemberSignature Language="C#" Value="protected override void OnValidate (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnValidate(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeBindingCollection.OnValidate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnValidate (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnValidate(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.OnValidate : obj -&gt; unit" Usage="treeNodeBindingCollection.OnValidate value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Web.UI.WebControls.TreeNodeBinding binding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Web.UI.WebControls.TreeNodeBinding binding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeBindingCollection.Remove(System.Web.UI.WebControls.TreeNodeBinding)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (binding As TreeNodeBinding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Web::UI::WebControls::TreeNodeBinding ^ binding);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Web.UI.WebControls.TreeNodeBinding -&gt; unit" Usage="treeNodeBindingCollection.Remove binding" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binding" Type="System.Web.UI.WebControls.TreeNodeBinding" />
      </Parameters>
      <Docs>
        <param name="binding">Das zu entfernende <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" />-Element.</param>
        <summary>Entfernt das angegebene <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" />-Objekt aus dem <see cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" />-Objekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Remove%2A> die-Methode, um <xref:System.Web.UI.WebControls.TreeNodeBinding> das angegebene-Objekt aus der Auflistung zu entfernen. Alle Elemente, die diesem Knoten folgen, werden dann nach oben verschoben, um die freie Position auszufüllen. Die Indizes der verschoanderen Elemente werden ebenfalls aktualisiert.  
  
 Als Alternative können Sie mithilfe der <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt%2A> -Methode einen Knoten an einem bestimmten Index entfernen. Mithilfe der <xref:System.Web.UI.StateManagedCollection.Clear%2A> -Methode können Sie auch jeden Knoten in der Auflistung entfernen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Remove%2A> -Methode verwendet wird <xref:System.Web.UI.WebControls.TreeNodeBinding> , um ein-Objekt <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> Programm gesteuert aus einem-Objekt zu entfernen. Damit dieses Beispiel ordnungsgemäß funktioniert, müssen Sie die XML-Daten, die sich am Ende dieses Abschnitts befinden, in eine Datei mit dem Namen "Book. xml" kopieren.  
  
 [!code-aspx-csharp[TreeNodeBindingCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeBindingCollectionAdd/CS/treenodebindingcollectionaddcs.aspx#1)]
 [!code-aspx-vb[TreeNodeBindingCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeBindingCollectionAdd/VB/treenodebindingcollectionaddvb.aspx#1)]  
  
 Im folgenden sind die XML-Daten für das vorherige Codebeispiel dargestellt.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1"  
            Subject="Subject 1">  
        </Section>  
        <Section Heading="Section 2"  
            Subject="Subject 1">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1"  
            Subject="Subject 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.DataBindings" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeBindingCollection.Add(System.Web.UI.WebControls.TreeNodeBinding)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeBindingCollection.Insert(System.Int32,System.Web.UI.WebControls.TreeNodeBinding)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int -&gt; unit" Usage="treeNodeBindingCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Die nullbasierte Indexposition des zu entfernenden <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" />.</param>
        <summary>Entfernt das <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" />-Objekt an der angegebenen Indexposition aus dem <see cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" />-Objekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt%2A> die-Methode, <xref:System.Web.UI.WebControls.TreeNodeBinding> um das Objekt `index` aus einem <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> -Objekt zu entfernen. Alle Elemente, die diesem Knoten folgen, werden dann nach oben verschoben, um die freie Position auszufüllen. Die Indizes der verschoanderen Elemente werden ebenfalls aktualisiert.  
  
 Als Alternative können Sie ein bestimmtes <xref:System.Web.UI.WebControls.TreeNodeBinding> Objekt mithilfe der <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Remove%2A> -Methode entfernen. Sie können auch jeden Knoten in der Auflistung entfernen, indem Sie <xref:System.Web.UI.StateManagedCollection.Clear%2A> die-Methode verwenden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt%2A> -Methode verwendet wird <xref:System.Web.UI.WebControls.TreeNodeBinding> , um ein-Objekt <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> Programm gesteuert aus einem-Objekt zu entfernen. Damit dieses Beispiel ordnungsgemäß funktioniert, müssen Sie die XML-Daten, die sich am Ende dieses Abschnitts befinden, in eine Datei mit dem Namen "Book. xml" kopieren.  
  
 [!code-aspx-csharp[TreeNodeBindingCollectionInsert#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeBindingCollectionInsert/CS/treenodebindingcollectioninsertcs.aspx#1)]
 [!code-aspx-vb[TreeNodeBindingCollectionInsert#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeBindingCollectionInsert/VB/treenodebindingcollectioninsertvb.aspx#1)]  
  
 Im folgenden sind die XML-Daten für das vorherige Codebeispiel dargestellt.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1"  
            Subject="Subject 1">  
        </Section>  
        <Section Heading="Section 2"  
            Subject="Subject 1">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1"  
            Subject="Subject 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.DataBindings" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeBindingCollection.Add(System.Web.UI.WebControls.TreeNodeBinding)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeBindingCollection.Insert(System.Int32,System.Web.UI.WebControls.TreeNodeBinding)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeBindingCollection.Remove(System.Web.UI.WebControls.TreeNodeBinding)" />
      </Docs>
    </Member>
    <Member MemberName="SetDirtyObject">
      <MemberSignature Language="C#" Value="protected override void SetDirtyObject (object o);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetDirtyObject(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeBindingCollection.SetDirtyObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetDirtyObject (o As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetDirtyObject(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.SetDirtyObject : obj -&gt; unit" Usage="treeNodeBindingCollection.SetDirtyObject o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
