<Type Name="FormParameter" FullName="System.Web.UI.WebControls.FormParameter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0f8b3a12d64c2a4cdb1c157ad0a9108722a6b0db" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51904073" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FormParameter : System.Web.UI.WebControls.Parameter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FormParameter extends System.Web.UI.WebControls.Parameter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.FormParameter" />
  <TypeSignature Language="VB.NET" Value="Public Class FormParameter&#xA;Inherits Parameter" />
  <TypeSignature Language="C++ CLI" Value="public ref class FormParameter : System::Web::UI::WebControls::Parameter" />
  <TypeSignature Language="F#" Value="type FormParameter = class&#xA;    inherit Parameter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Parameter</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultProperty("FormField")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Bindet den Wert des <see cref="P:System.Web.HttpRequest.Form" />-Felds einer HTTP-Anforderung an ein Parameterobjekt.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Können Sie die <xref:System.Web.UI.WebControls.FormParameter> Klasse zum Binden des Werts einer Form-Variablen in der <xref:System.Web.HttpRequest.Form%2A> Auflistung in ein in eine parametrisierte Abfrage oder einen Befehl verwendeten Parameter. Steuerelemente, die Daten an den Parameter gebunden. eine Ausnahme auslösen können, wenn eine <xref:System.Web.UI.WebControls.FormParameter> angegeben ist, aber keine entsprechende Formularvariable übergeben wird. Sie können auch keine Daten angezeigt, wenn die Formularvariable ohne zugehörigen Wert übergeben wird. Legen Sie die <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> , diese Situationen zu vermeiden, falls zutreffend.  
  
 Die <xref:System.Web.UI.WebControls.FormParameter> -Klasse stellt die <xref:System.Web.UI.WebControls.FormParameter.FormField%2A> -Eigenschaft, die den Namen der Formularvariablen, zusätzlich zu den von geerbten binden identifiziert die <xref:System.Web.UI.WebControls.Parameter> Klasse.  
  
> [!IMPORTANT]
>  Die <xref:System.Web.UI.WebControls.FormParameter> überprüft nicht den Wert übergebener das Formularelement in keiner Weise; er verwendet den Rohwert. In den meisten Fällen können Sie überprüfen, den Wert des der <xref:System.Web.UI.WebControls.FormParameter> bevor er durch ein Datenquellen-Steuerelement verwendet wird, durch die Behandlung eines Ereignisses, z. B. die `Selecting`, `Updating`, `Inserting`, oder `Deleting` Ereignis, die von Ihnen verwendeten Datenquellen-Steuerelement verfügbar gemacht werden. Wenn der Wert des Parameters nicht Ihre Validierungstests bestanden hat, können Sie den Datenvorgang abbrechen, durch Festlegen der <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> Eigenschaft des zugeordneten <xref:System.ComponentModel.CancelEventArgs> -Klasse `true`.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Einfügen von Daten in einer Datenbank mithilfe der <xref:System.Web.UI.WebControls.SqlDataSource> -Steuerelement und einer einfachen ASP.NET Web-Seite. Die aktuellen Daten in der Datentabelle werden angezeigt, der <xref:System.Web.UI.WebControls.DropDownList> Steuerelement. Sie können neue Datensätze hinzufügen, indem Sie die Eingabe von Werten in der <xref:System.Web.UI.WebControls.TextBox> Steuerelemente und auf die Schaltfläche klicken. Wenn die Schaltfläche geklickt wird, werden die angegebenen Werte in die Datenbank eingefügt und die <xref:System.Web.UI.WebControls.DropDownList> aktualisiert wird.  
  
> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/CS/sql24cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/VB/sql24vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ControlParameter" />
    <altmember cref="T:System.Web.UI.WebControls.CookieParameter" />
    <altmember cref="T:System.Web.UI.WebControls.ProfileParameter" />
    <altmember cref="T:System.Web.UI.WebControls.QueryStringParameter" />
    <altmember cref="T:System.Web.UI.WebControls.SessionParameter" />
    <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">Verwenden von Parametern mit dem Datenquellen-Steuerelemente</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.FormParameter" />-Klasse.</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">Verwenden von Parametern mit dem Datenquellen-Steuerelemente</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormParameter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue unbenannte Instanz der <see cref="T:System.Web.UI.WebControls.FormParameter" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein <xref:System.Web.UI.WebControls.FormParameter> Objekt erstellt wurde, mit der <xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A> Konstruktor mit standardmäßigen Werten für alle zugehörigen Eigenschaften initialisiert wird. Die <xref:System.Web.UI.WebControls.FormParameter.FormField%2A> wird initialisiert <xref:System.String.Empty?displayProperty=nameWithType>. Darüber hinaus die <xref:System.Web.UI.WebControls.Parameter.Name%2A> Eigenschaft wird initialisiert, um <xref:System.String.Empty?displayProperty=nameWithType>, <xref:System.Web.UI.WebControls.Parameter.Type%2A> Eigenschaft wird initialisiert, um <xref:System.TypeCode.Object?displayProperty=nameWithType>, <xref:System.Web.UI.WebControls.Parameter.Direction%2A> Eigenschaft wird initialisiert, um <xref:System.Data.ParameterDirection.Input>, und die <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> -Eigenschaft wird initialisiert auf Null (`Nothing` in Visual Basic).  
  
   
  
## Examples  
  
> [!IMPORTANT]
>  Die <xref:System.Web.UI.WebControls.FormParameter> überprüft nicht den Wert übergebener das Formularelement in keiner Weise; er verwendet den Rohwert. In den meisten Fällen können Sie überprüfen, den Wert des der <xref:System.Web.UI.WebControls.FormParameter> bevor er durch ein Datenquellen-Steuerelement verwendet wird, durch die Behandlung eines Ereignisses, z. B. die `Selecting`, `Updating`, `Inserting`, oder `Deleting` Ereignis, die von Ihnen verwendeten Datenquellen-Steuerelement verfügbar gemacht werden. Wenn der Wert des Parameters nicht Ihre Validierungstests bestanden hat, können Sie den Datenvorgang abbrechen, durch Festlegen der <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> Eigenschaft des zugeordneten <xref:System.ComponentModel.CancelEventArgs> -Klasse `true`.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.FormParameter_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_1/CS/fp1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.FormParameter_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_1/VB/fp1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">Verwenden von Parametern mit dem Datenquellen-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected FormParameter (System.Web.UI.WebControls.FormParameter original);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.FormParameter original) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.#ctor(System.Web.UI.WebControls.FormParameter)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (original As FormParameter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; FormParameter(System::Web::UI::WebControls::FormParameter ^ original);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.FormParameter : System.Web.UI.WebControls.FormParameter -&gt; System.Web.UI.WebControls.FormParameter" Usage="new System.Web.UI.WebControls.FormParameter original" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="original" Type="System.Web.UI.WebControls.FormParameter" />
      </Parameters>
      <Docs>
        <param name="original">Eine <see cref="T:System.Web.UI.WebControls.FormParameter" />-Instanz, von der die aktuelle Instanz initialisiert wird.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.FormParameter" />-Klasse mit den Werten der Instanz, die vom <paramref name="original" />-Parameter angegeben wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A> Konstruktor ist eine `protected` Kopierkonstruktor zum Klonen verwendet eine <xref:System.Web.UI.WebControls.FormParameter> Instanz. Die Werte der <xref:System.Web.UI.WebControls.FormParameter>, einschließlich <xref:System.Web.UI.WebControls.FormParameter.FormField%2A>, <xref:System.Web.UI.WebControls.Parameter.Name%2A>, und <xref:System.Web.UI.WebControls.Parameter.Type%2A> alle in der neuen Instanz übertragen werden.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.FormParameter.Clone" />
        <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">Verwenden von Parametern mit dem Datenquellen-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormParameter (string name, string formField);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string formField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, formField As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormParameter(System::String ^ name, System::String ^ formField);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.FormParameter : string * string -&gt; System.Web.UI.WebControls.FormParameter" Usage="new System.Web.UI.WebControls.FormParameter (name, formField)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="formField" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Der Name des Parameters.</param>
        <param name="formField">Der Name der Formularvariablen, an die das Parameterobjekt gebunden ist. Der Standardwert ist <see cref="F:System.String.Empty" />.</param>
        <summary>Initialisiert eine neue benannte Instanz der <see cref="T:System.Web.UI.WebControls.FormParameter" />-Klasse, wobei die angegebene Zeichenfolge verwendet wird, um das Formularvariablenfeld zu identifizieren, an das die Bindung erfolgen soll.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein <xref:System.Web.UI.WebControls.FormParameter> Objekt erstellt wurde, mit der <xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A> Konstruktor initialisiert wird, mit dem angegebenen Parameternamen und die Zeichenfolge, die von die Formularvariable bezeichnet, die der Parameter gebunden wird. Die <xref:System.Web.UI.WebControls.Parameter.Type%2A> und <xref:System.Web.UI.WebControls.Parameter.Direction%2A> Eigenschaften werden mit Standardwerten initialisiert.  
  
   
  
## Examples  
  
> [!IMPORTANT]
>  Die <xref:System.Web.UI.WebControls.FormParameter> überprüft nicht den Wert übergebener das Formularelement in keiner Weise; er verwendet den Rohwert. In den meisten Fällen können Sie überprüfen, den Wert des der <xref:System.Web.UI.WebControls.FormParameter> bevor er durch ein Datenquellen-Steuerelement verwendet wird, durch die Behandlung eines Ereignisses, z. B. die `Selecting`, `Updating`, `Inserting`, oder `Deleting` Ereignis, die von Ihnen verwendeten Datenquellen-Steuerelement verfügbar gemacht werden. Wenn der Wert des Parameters nicht Ihre Validierungstests bestanden hat, können Sie den Datenvorgang abbrechen, durch Festlegen der <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> Eigenschaft des zugeordneten <xref:System.ComponentModel.CancelEventArgs> -Klasse `true`.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.FormParameter_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_2/CS/fp2cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.FormParameter_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_2/VB/fp2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Name" />
        <altmember cref="P:System.Web.UI.WebControls.FormParameter.FormField" />
        <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">Verwenden von Parametern mit dem Datenquellen-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormParameter (string name, System.Data.DbType dbType, string formField);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.DbType dbType, string formField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.Data.DbType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormParameter(System::String ^ name, System::Data::DbType dbType, System::String ^ formField);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.FormParameter : string * System.Data.DbType * string -&gt; System.Web.UI.WebControls.FormParameter" Usage="new System.Web.UI.WebControls.FormParameter (name, dbType, formField)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.DbType" />
        <Parameter Name="formField" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Der Name des Parameters.</param>
        <param name="dbType">Der Datenbanktyp des Parameters.</param>
        <param name="formField">Der Name der Formularvariablen, an die das Parameterobjekt gebunden ist.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.FormParameter" />-Klasse, wobei die angegebene Zeichenfolge verwendet wird, um das Formularvariablenfeld zu identifizieren, an das die Bindung erfolgen soll.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormParameter (string name, TypeCode type, string formField);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.TypeCode type, string formField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.TypeCode,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, type As TypeCode, formField As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormParameter(System::String ^ name, TypeCode type, System::String ^ formField);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.FormParameter : string * TypeCode * string -&gt; System.Web.UI.WebControls.FormParameter" Usage="new System.Web.UI.WebControls.FormParameter (name, type, formField)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.TypeCode" />
        <Parameter Name="formField" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Der Name des Parameters.</param>
        <param name="type">Der Typ, den der Parameter darstellt. Der Standardwert ist <see cref="F:System.TypeCode.Object" />.</param>
        <param name="formField">Der Name der Formularvariablen, an die das Parameterobjekt gebunden ist. Der Standardwert ist <see cref="F:System.String.Empty" />.</param>
        <summary>Initialisiert eine neue benannte und stark typisierte Instanz der <see cref="T:System.Web.UI.WebControls.FormParameter" />-Klasse, wobei die angegebene Zeichenfolge verwendet wird, um die Formularvariable zu identifizieren, an die die Bindung erfolgen soll.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein <xref:System.Web.UI.WebControls.FormParameter> Objekt erstellt wurde, mit der <xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A> Konstruktor wird mit dem angegebenen Parameternamen, initialisiert <xref:System.Web.UI.WebControls.Parameter.Type%2A>, und die Zeichenfolge, die von die Formularvariable bezeichnet, die der Parameter gebunden wird. Nur die <xref:System.Web.UI.WebControls.Parameter.Direction%2A> und <xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A> Eigenschaften werden mit Standardwerten initialisiert.  
  
   
  
## Examples  
  
> [!IMPORTANT]
>  Die <xref:System.Web.UI.WebControls.FormParameter> überprüft nicht den Wert übergebener das Formularelement in keiner Weise; er verwendet den Rohwert. In den meisten Fällen können Sie überprüfen, den Wert des der <xref:System.Web.UI.WebControls.FormParameter> bevor er durch ein Datenquellen-Steuerelement verwendet wird, durch die Behandlung eines Ereignisses, z. B. die `Selecting`, `Updating`, `Inserting`, oder `Deleting` Ereignis, die von Ihnen verwendeten Datenquellen-Steuerelement verfügbar gemacht werden. Wenn der Wert des Parameters nicht Ihre Validierungstests bestanden hat, können Sie den Datenvorgang abbrechen, durch Festlegen der <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> Eigenschaft des zugeordneten <xref:System.ComponentModel.CancelEventArgs> -Klasse `true`.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.FormParameter_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_3/CS/fp3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.FormParameter_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_3/VB/fp3vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Name" />
        <altmember cref="P:System.Web.UI.WebControls.FormParameter.FormField" />
        <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">Verwenden von Parametern mit dem Datenquellen-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.Parameter Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.Parameter Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.Clone" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function Clone () As Parameter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::Parameter ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Web.UI.WebControls.Parameter" Usage="formParameter.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Parameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt ein Duplikat der aktuellen <see cref="T:System.Web.UI.WebControls.FormParameter" />-Instanz zurück.</summary>
        <returns>Eine <see cref="T:System.Web.UI.WebControls.FormParameter" />-Instanz, die ein exaktes Duplikat der aktuellen Instanz ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormParameter.Clone%2A> Methodenaufrufe der <xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A> Copy-Konstruktor initialisiert eine neue Instanz der dem <xref:System.Web.UI.WebControls.FormParameter> -Klasse mit den Werten der aktuellen Instanz.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.FormParameter.#ctor(System.Web.UI.WebControls.FormParameter)" />
        <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">Verwenden von Parametern mit dem Datenquellen-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="protected internal override object Evaluate (System.Web.HttpContext context, System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object Evaluate(class System.Web.HttpContext context, class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ Evaluate(System::Web::HttpContext ^ context, System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="override this.Evaluate : System.Web.HttpContext * System.Web.UI.Control -&gt; obj" Usage="formParameter.Evaluate (context, control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="context">Der aktuelle <see cref="T:System.Web.HttpContext" /> der Anforderung.</param>
        <param name="control">Ein <see cref="T:System.Web.UI.Control" />, das der Seite zugeordnet ist, auf der <see cref="T:System.Web.UI.WebControls.FormParameter" /> verwendet wird.</param>
        <summary>Aktualisiert den Wert des <see cref="T:System.Web.UI.WebControls.FormParameter" />-Objekts und gibt ihn zurück.</summary>
        <returns>Ein Objekt, das den aktualisierten und aktuellen Wert des Parameters darstellt. Wenn der Kontext oder die Anforderung NULL ist (<see langword="Nothing" /> in Visual Basic), gibt die <see cref="M:System.Web.UI.WebControls.FormParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" />-Methode NULL zurück.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormParameter> versucht, die zum Binden an die Formularvariable jedes Mal die <xref:System.Web.UI.WebControls.FormParameter.Evaluate%2A> Methode wird aufgerufen.  
  
 Die `context` Parameter wird verwendet, durch die <xref:System.Web.UI.WebControls.FormParameter.Evaluate%2A> Methode, um den Wert des angegebenen Formularfelds in der Anforderung abzurufen. Die `control` Parameter wird ignoriert.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormParameter.FormField" />
        <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">Verwenden von Parametern mit dem Datenquellen-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="FormField">
      <MemberSignature Language="C#" Value="public string FormField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FormField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormParameter.FormField" />
      <MemberSignature Language="VB.NET" Value="Public Property FormField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FormField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FormField : string with get, set" Usage="System.Web.UI.WebControls.FormParameter.FormField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Formularvariablen ab, an die der Parameter gebunden ist, oder legt diesen fest.</summary>
        <value>Eine Zeichenfolge, mit der die Formularvariable bezeichnet wird, an die der Parameter gebunden ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormParameter.FormField%2A> Name/Wert-Paar, das übergeben wird identifiziert die <xref:System.Web.HttpRequest.Form%2A> Auflistung. Während der <xref:System.Web.UI.WebControls.FormParameter.FormField%2A> -Eigenschaft gibt den Namen des Paares, das <xref:System.Web.UI.WebControls.FormParameter> wird an den entsprechenden Wert zur Laufzeit gebunden. Wenn das erwartete Name/Wert-Paar für die Variable Zeichenfolge an die ASP.NET Web-Seite in der Auflistung nicht übergeben wird die <xref:System.Web.UI.WebControls.FormParameter.Evaluate%2A> Methode bindet den Parameter auf den Wert des der <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> -Eigenschaft, wenn sie festgelegt ist. Wenn die <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> nicht festgelegt ist, die <xref:System.Web.UI.WebControls.FormParameter.Evaluate%2A> Methode fehlschlägt, den Parameter auf einen Wert zu binden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Anzeigen von gefilterter Daten, die mit einer <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement und ein <xref:System.Web.UI.WebControls.FormParameter> zum Abrufen von Daten aus einem Geschäftsobjekt der mittleren Ebene und einem <xref:System.Web.UI.WebControls.GridView> Steuerelement zum Anzeigen der Ergebnisse.  
  
 Im Codebeispiel besteht aus einer <xref:System.Web.UI.WebControls.TextBox>, ein <xref:System.Web.UI.WebControls.GridView> -Steuerelement, das <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement, und eine Schaltfläche "Senden". In der Standardeinstellung die <xref:System.Web.UI.WebControls.TextBox> wird mit den Namen einer der Mitarbeiter Northwind Traders aufgefüllt. Die <xref:System.Web.UI.WebControls.GridView> zeigt Informationen über die Mitarbeiter, die durch den Namen in identifiziert die <xref:System.Web.UI.WebControls.TextBox>. Geben Sie zum Abrufen von Daten auf einem anderen Mitarbeiter den vollständigen Namen des Mitarbeiters in der <xref:System.Web.UI.WebControls.TextBox> , und klicken Sie auf die Schaltfläche.  
  
 Die <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> -Eigenschaft gibt einen Ausdruck, der zum Filtern der Daten abgerufen, indem die <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>. Diese Eigenschaft wird verwendet, Platzhalter für Parameter, die auf die in enthaltenen Parameter ausgewertet werden die <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> Auflistung. In diesem Beispiel wird der Parameterplatzhalter eine <xref:System.Web.UI.WebControls.FormParameter> gebunden, auf den Wert des der <xref:System.Web.UI.WebControls.TextBox> Steuerelement.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/objds9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/objds9vb.aspx#1)]  
  
 Im folgenden Codebeispiel wird veranschaulicht, der mittleren Ebene-Objekt, das im vorherigen Codebeispiel verwendet wird. In diesem Beispiel besteht aus zwei Basisklassen: die `EmployeeLogic` -Klasse kapselt die Geschäftslogik und die `NorthwindEmployee` -Klasse ist eine Modellklasse, die nur die grundlegende Funktionalität zum Laden und Beibehalten von Daten aus der Datenebene enthält. Der Einfachheit halber die `EmployeeLogic` Klasse erstellt einen statischen Satz von Daten, anstatt zum Abrufen der Daten aus der Datenebene. Es ist auch in diesem Beispiel hilfreich, da das Beispiel für den Benutzer zu den vollständigen Namen eines Mitarbeiters Northwind Traders zur Veranschaulichung Filtern verwendet. Ein vollständiges Beispiel für die Arbeit müssen Sie kompilieren und verwenden Sie diese Klassen mit den ASP.NET Code-Beispielen bereitgestellt.  
  
> [!IMPORTANT]
>  Die <xref:System.Web.UI.WebControls.FormParameter> überprüft nicht den Wert übergebener das Formularelement in keiner Weise; er verwendet den Rohwert. In den meisten Fällen können Sie überprüfen, den Wert des der <xref:System.Web.UI.WebControls.FormParameter> bevor er durch ein Datenquellen-Steuerelement verwendet wird, durch die Behandlung eines Ereignisses, z. B. die `Selecting`, `Updating`, `Inserting`, oder `Deleting` Ereignis, die von Ihnen verwendeten Datenquellen-Steuerelement verfügbar gemacht werden. Wenn der Wert des Parameters nicht Ihre Validierungstests bestanden hat, können Sie den Datenvorgang abbrechen, durch Festlegen der <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> Eigenschaft des zugeordneten <xref:System.ComponentModel.CancelEventArgs> -Klasse `true`.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/northwindemployee9.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/northwindemployee9.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.DefaultValue" />
        <altmember cref="M:System.Web.UI.WebControls.FormParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" />
        <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">Verwenden von Parametern mit dem Datenquellen-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="ValidateInput">
      <MemberSignature Language="C#" Value="public bool ValidateInput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidateInput" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormParameter.ValidateInput" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidateInput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidateInput { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValidateInput : bool with get, set" Usage="System.Web.UI.WebControls.FormParameter.ValidateInput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob die Clienteingabe in den Parametern überprüft wird.</summary>
        <value>
          <see langword="true" />, wenn die Clienteingabe überprüft wird; andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>