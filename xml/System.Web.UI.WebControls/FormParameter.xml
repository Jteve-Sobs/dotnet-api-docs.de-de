<Type Name="FormParameter" FullName="System.Web.UI.WebControls.FormParameter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8362afa3c85285133603433a7da33c2aeb7354d7" /><Meta Name="ms.sourcegitcommit" Value="f9576bf8c61e3d46834aeeff50f858359f2a99ba" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="02/09/2020" /><Meta Name="ms.locfileid" Value="77107069" /></Metadata><TypeSignature Language="C#" Value="public class FormParameter : System.Web.UI.WebControls.Parameter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FormParameter extends System.Web.UI.WebControls.Parameter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.FormParameter" />
  <TypeSignature Language="VB.NET" Value="Public Class FormParameter&#xA;Inherits Parameter" />
  <TypeSignature Language="C++ CLI" Value="public ref class FormParameter : System::Web::UI::WebControls::Parameter" />
  <TypeSignature Language="F#" Value="type FormParameter = class&#xA;    inherit Parameter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Parameter</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("FormField")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Bindet den Wert des <see cref="P:System.Web.HttpRequest.Form" />-Felds einer HTTP-Anforderung an ein Parameterobjekt.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 Sie können die <xref:System.Web.UI.WebControls.FormParameter>-Klasse verwenden, um den Wert einer Formularvariablen in der <xref:System.Web.HttpRequest.Form%2A> Auflistung an einen Parameter zu binden, der in einer parametrisierten Abfrage oder einem parametrisierten Befehl verwendet wird. Steuerelemente, die Daten an den-Parameter binden, lösen möglicherweise eine Ausnahme aus, wenn ein <xref:System.Web.UI.WebControls.FormParameter> angegeben wird, aber keine entsprechende Formular Variable übergeben wird. Möglicherweise werden auch keine Daten angezeigt, wenn die Formular Variable ohne entsprechenden Wert übermittelt wird. Legen Sie die <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> fest, um diese Situationen bei Bedarf zu vermeiden.

 Die <xref:System.Web.UI.WebControls.FormParameter>-Klasse stellt die <xref:System.Web.UI.WebControls.FormParameter.FormField%2A>-Eigenschaft bereit, die den Namen der Formularvariablen angibt, an die die Bindung erfolgen soll, zusätzlich zu den, die von der <xref:System.Web.UI.WebControls.Parameter>-Klasse geerbt werden.

> [!IMPORTANT]
>  Der-<xref:System.Web.UI.WebControls.FormParameter> überprüft nicht den Wert, der vom Formular Element in beliebiger Weise übermittelt wurde. Er verwendet den Rohwert. In den meisten Fällen können Sie den Wert der <xref:System.Web.UI.WebControls.FormParameter> überprüfen, bevor er von einem Datenquellen-Steuerelement verwendet wird, indem Sie ein Ereignis verarbeiten, z. b. die `Selecting`, `Updating`, `Inserting`oder `Deleting` Ereignis, das von dem verwendeten Datenquellen-Steuerelement verfügbar gemacht wird. Wenn der Wert des-Parameters die Validierungstests nicht besteht, können Sie den Daten Vorgang abbrechen, indem Sie die <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>-Eigenschaft der zugeordneten <xref:System.ComponentModel.CancelEventArgs> Klasse auf `true`festlegen.



## Examples
 Im folgenden Codebeispiel wird veranschaulicht, wie Daten mithilfe des <xref:System.Web.UI.WebControls.SqlDataSource>-Steuer Elements und einer einfachen ASP.NET-Webseite in eine Datenbank eingefügt werden. Die aktuellen Daten in der Datentabelle werden im <xref:System.Web.UI.WebControls.DropDownList> Steuerelement angezeigt. Sie können neue Datensätze hinzufügen, indem Sie Werte in die <xref:System.Web.UI.WebControls.TextBox> Steuerelemente eingeben und auf die Schaltfläche klicken. Wenn auf die Schaltfläche geklickt wird, werden die angegebenen Werte in die Datenbank eingefügt, und der <xref:System.Web.UI.WebControls.DropDownList> wird aktualisiert.

> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).

 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/CS/sql24cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/VB/sql24vb.aspx#1)]

 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ControlParameter" />
    <altmember cref="T:System.Web.UI.WebControls.CookieParameter" />
    <altmember cref="T:System.Web.UI.WebControls.ProfileParameter" />
    <altmember cref="T:System.Web.UI.WebControls.QueryStringParameter" />
    <altmember cref="T:System.Web.UI.WebControls.SessionParameter" />
    <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">Verwenden von Parametern mit Datenquellen-Steuerelementen</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.FormParameter" />-Klasse.</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">Verwenden von Parametern mit Datenquellen-Steuerelementen</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormParameter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue unbenannte Instanz der <see cref="T:System.Web.UI.WebControls.FormParameter" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Ein <xref:System.Web.UI.WebControls.FormParameter>-Objekt, das mit dem <xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A>-Konstruktor erstellt wird, wird mit Standardwerten für alle zugehörigen Eigenschaften initialisiert. Die <xref:System.Web.UI.WebControls.FormParameter.FormField%2A> wird mit <xref:System.String.Empty?displayProperty=nameWithType>initialisiert. Außerdem wird die <xref:System.Web.UI.WebControls.Parameter.Name%2A>-Eigenschaft mit <xref:System.String.Empty?displayProperty=nameWithType>initialisiert, die <xref:System.Web.UI.WebControls.Parameter.Type%2A>-Eigenschaft wird mit <xref:System.TypeCode.Object?displayProperty=nameWithType>initialisiert, die <xref:System.Web.UI.WebControls.Parameter.Direction%2A>-Eigenschaft wird mit <xref:System.Data.ParameterDirection.Input>initialisiert, und die <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>-Eigenschaft wird auf NULL (`Nothing` in Visual Basic) initialisiert.



## Examples

> [!IMPORTANT]
>  Der-<xref:System.Web.UI.WebControls.FormParameter> überprüft nicht den Wert, der vom Formular Element in beliebiger Weise übermittelt wurde. Er verwendet den Rohwert. In den meisten Fällen können Sie den Wert der <xref:System.Web.UI.WebControls.FormParameter> überprüfen, bevor er von einem Datenquellen-Steuerelement verwendet wird, indem Sie ein Ereignis verarbeiten, z. b. die `Selecting`, `Updating`, `Inserting`oder `Deleting` Ereignis, das von dem verwendeten Datenquellen-Steuerelement verfügbar gemacht wird. Wenn der Wert des-Parameters die Validierungstests nicht besteht, können Sie den Daten Vorgang abbrechen, indem Sie die <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>-Eigenschaft der zugeordneten <xref:System.ComponentModel.CancelEventArgs> Klasse auf `true`festlegen.

 [!code-aspx-csharp[System.Web.UI.WebControls.FormParameter_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_1/CS/fp1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.FormParameter_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_1/VB/fp1vb.aspx#1)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">Verwenden von Parametern mit Datenquellen-Steuerelementen</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected FormParameter (System.Web.UI.WebControls.FormParameter original);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.FormParameter original) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.#ctor(System.Web.UI.WebControls.FormParameter)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (original As FormParameter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; FormParameter(System::Web::UI::WebControls::FormParameter ^ original);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.FormParameter : System.Web.UI.WebControls.FormParameter -&gt; System.Web.UI.WebControls.FormParameter" Usage="new System.Web.UI.WebControls.FormParameter original" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="original" Type="System.Web.UI.WebControls.FormParameter" />
      </Parameters>
      <Docs>
        <param name="original">Eine <see cref="T:System.Web.UI.WebControls.FormParameter" />-Instanz, von der die aktuelle Instanz initialisiert wird.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.FormParameter" />-Klasse mit den Werten der Instanz, die vom <paramref name="original" />-Parameter angegeben wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Der <xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A>-Konstruktor ist ein `protected` Kopierkonstruktor, der zum Klonen einer <xref:System.Web.UI.WebControls.FormParameter> Instanz verwendet wird. Die Werte der <xref:System.Web.UI.WebControls.FormParameter>, einschließlich <xref:System.Web.UI.WebControls.FormParameter.FormField%2A>, <xref:System.Web.UI.WebControls.Parameter.Name%2A>und <xref:System.Web.UI.WebControls.Parameter.Type%2A>, werden alle an die neue Instanz übertragen.

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.FormParameter.Clone" />
        <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">Verwenden von Parametern mit Datenquellen-Steuerelementen</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormParameter (string name, string formField);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string formField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, formField As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormParameter(System::String ^ name, System::String ^ formField);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.FormParameter : string * string -&gt; System.Web.UI.WebControls.FormParameter" Usage="new System.Web.UI.WebControls.FormParameter (name, formField)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="formField" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Der Name des Parameters.</param>
        <param name="formField">Der Name der Formularvariablen, an die das Parameterobjekt gebunden ist. Der Standardwert ist <see cref="F:System.String.Empty" />.</param>
        <summary>Initialisiert eine neue benannte Instanz der <see cref="T:System.Web.UI.WebControls.FormParameter" />-Klasse, wobei die angegebene Zeichenfolge verwendet wird, um das Formularvariablenfeld zu identifizieren, an das die Bindung erfolgen soll.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Ein <xref:System.Web.UI.WebControls.FormParameter> Objekt, das mit dem <xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A>-Konstruktor erstellt wird, wird mit dem angegebenen Parameternamen und der angegebenen Zeichenfolge initialisiert, die die Formular Variable identifiziert, an die der Parameter gebunden ist Die Eigenschaften <xref:System.Web.UI.WebControls.Parameter.Type%2A> und <xref:System.Web.UI.WebControls.Parameter.Direction%2A> werden mit Standardwerten initialisiert.



## Examples

> [!IMPORTANT]
>  Der-<xref:System.Web.UI.WebControls.FormParameter> überprüft nicht den Wert, der vom Formular Element in beliebiger Weise übermittelt wurde. Er verwendet den Rohwert. In den meisten Fällen können Sie den Wert der <xref:System.Web.UI.WebControls.FormParameter> überprüfen, bevor er von einem Datenquellen-Steuerelement verwendet wird, indem Sie ein Ereignis verarbeiten, z. b. die `Selecting`, `Updating`, `Inserting`oder `Deleting` Ereignis, das von dem verwendeten Datenquellen-Steuerelement verfügbar gemacht wird. Wenn der Wert des-Parameters die Validierungstests nicht besteht, können Sie den Daten Vorgang abbrechen, indem Sie die <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>-Eigenschaft der zugeordneten <xref:System.ComponentModel.CancelEventArgs> Klasse auf `true`festlegen.

 [!code-aspx-csharp[System.Web.UI.WebControls.FormParameter_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_2/CS/fp2cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.FormParameter_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_2/VB/fp2vb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Name" />
        <altmember cref="P:System.Web.UI.WebControls.FormParameter.FormField" />
        <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">Verwenden von Parametern mit Datenquellen-Steuerelementen</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormParameter (string name, System.Data.DbType dbType, string formField);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.DbType dbType, string formField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.Data.DbType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormParameter(System::String ^ name, System::Data::DbType dbType, System::String ^ formField);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.FormParameter : string * System.Data.DbType * string -&gt; System.Web.UI.WebControls.FormParameter" Usage="new System.Web.UI.WebControls.FormParameter (name, dbType, formField)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.DbType" />
        <Parameter Name="formField" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Der Name des Parameters.</param>
        <param name="dbType">Der Datenbanktyp des Parameters.</param>
        <param name="formField">Der Name der Formularvariablen, an die das Parameterobjekt gebunden ist.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.FormParameter" />-Klasse, wobei die angegebene Zeichenfolge verwendet wird, um das Formularvariablenfeld zu identifizieren, an das die Bindung erfolgen soll.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormParameter (string name, TypeCode type, string formField);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.TypeCode type, string formField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.TypeCode,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, type As TypeCode, formField As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormParameter(System::String ^ name, TypeCode type, System::String ^ formField);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.FormParameter : string * TypeCode * string -&gt; System.Web.UI.WebControls.FormParameter" Usage="new System.Web.UI.WebControls.FormParameter (name, type, formField)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.TypeCode" />
        <Parameter Name="formField" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Der Name des Parameters.</param>
        <param name="type">Der Typ, den der Parameter darstellt. Der Standardwert ist <see cref="F:System.TypeCode.Object" />.</param>
        <param name="formField">Der Name der Formularvariablen, an die das Parameterobjekt gebunden ist. Der Standardwert ist <see cref="F:System.String.Empty" />.</param>
        <summary>Initialisiert eine neue benannte und stark typisierte Instanz der <see cref="T:System.Web.UI.WebControls.FormParameter" />-Klasse, wobei die angegebene Zeichenfolge verwendet wird, um die Formularvariable zu identifizieren, an die die Bindung erfolgen soll.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Ein <xref:System.Web.UI.WebControls.FormParameter>-Objekt, das mit dem <xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A>-Konstruktor erstellt wird, wird mit dem angegebenen Parameternamen, <xref:System.Web.UI.WebControls.Parameter.Type%2A>und der angegebenen Zeichenfolge initialisiert, die die Formular Variable identifiziert, an die der Parameter gebunden wird. Nur die Eigenschaften <xref:System.Web.UI.WebControls.Parameter.Direction%2A> und <xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A> werden mit Standardwerten initialisiert.



## Examples

> [!IMPORTANT]
>  Der-<xref:System.Web.UI.WebControls.FormParameter> überprüft nicht den Wert, der vom Formular Element in beliebiger Weise übermittelt wurde. Er verwendet den Rohwert. In den meisten Fällen können Sie den Wert der <xref:System.Web.UI.WebControls.FormParameter> überprüfen, bevor er von einem Datenquellen-Steuerelement verwendet wird, indem Sie ein Ereignis verarbeiten, z. b. die `Selecting`, `Updating`, `Inserting`oder `Deleting` Ereignis, das von dem verwendeten Datenquellen-Steuerelement verfügbar gemacht wird. Wenn der Wert des-Parameters die Validierungstests nicht besteht, können Sie den Daten Vorgang abbrechen, indem Sie die <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>-Eigenschaft der zugeordneten <xref:System.ComponentModel.CancelEventArgs> Klasse auf `true`festlegen.

 [!code-aspx-csharp[System.Web.UI.WebControls.FormParameter_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_3/CS/fp3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.FormParameter_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_3/VB/fp3vb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Name" />
        <altmember cref="P:System.Web.UI.WebControls.FormParameter.FormField" />
        <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">Verwenden von Parametern mit Datenquellen-Steuerelementen</related>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.Parameter Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.Parameter Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.Clone" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function Clone () As Parameter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::Parameter ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Web.UI.WebControls.Parameter" Usage="formParameter.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Parameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt ein Duplikat der aktuellen <see cref="T:System.Web.UI.WebControls.FormParameter" />-Instanz zurück.</summary>
        <returns>Eine <see cref="T:System.Web.UI.WebControls.FormParameter" />-Instanz, die ein exaktes Duplikat der aktuellen Instanz ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die <xref:System.Web.UI.WebControls.FormParameter.Clone%2A>-Methode ruft den <xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A> Kopierkonstruktor auf, um eine neue Instanz der <xref:System.Web.UI.WebControls.FormParameter>-Klasse mit den Werten der aktuellen Instanz zu initialisieren.

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.FormParameter.#ctor(System.Web.UI.WebControls.FormParameter)" />
        <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">Verwenden von Parametern mit Datenquellen-Steuerelementen</related>
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="protected override object Evaluate (System.Web.HttpContext context, System.Web.UI.Control control);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object Evaluate(class System.Web.HttpContext context, class System.Web.UI.Control control) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ Evaluate(System::Web::HttpContext ^ context, System::Web::UI::Control ^ control);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="F#" Value="override this.Evaluate : System.Web.HttpContext * System.Web.UI.Control -&gt; obj" Usage="formParameter.Evaluate (context, control)" />
      <MemberSignature Language="C#" Value="protected internal override object Evaluate (System.Web.HttpContext context, System.Web.UI.Control control);" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object Evaluate(class System.Web.HttpContext context, class System.Web.UI.Control control) cil managed" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ Evaluate(System::Web::HttpContext ^ context, System::Web::UI::Control ^ control);" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="context">Der aktuelle <see cref="T:System.Web.HttpContext" /> der Anforderung.</param>
        <param name="control">Ein <see cref="T:System.Web.UI.Control" />, das der Seite zugeordnet ist, auf der <see cref="T:System.Web.UI.WebControls.FormParameter" /> verwendet wird.</param>
        <summary>Aktualisiert den Wert des <see cref="T:System.Web.UI.WebControls.FormParameter" />-Objekts und gibt ihn zurück.</summary>
        <returns>Ein Objekt, das den aktualisierten und aktuellen Wert des Parameters darstellt. Wenn der Kontext oder die Anforderung NULL ist (<see langword="Nothing" /> in Visual Basic), gibt die <see cref="M:System.Web.UI.WebControls.FormParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" />-Methode NULL zurück.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Der <xref:System.Web.UI.WebControls.FormParameter> versucht jedes Mal, wenn die <xref:System.Web.UI.WebControls.FormParameter.Evaluate%2A>-Methode aufgerufen wird, an die Formular Variable zu binden.

 Der `context`-Parameter wird von der <xref:System.Web.UI.WebControls.FormParameter.Evaluate%2A>-Methode verwendet, um den Wert des angegebenen Formular Felds aus der Anforderung abzurufen. Der `control`-Parameter wird ignoriert.

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormParameter.FormField" />
        <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">Verwenden von Parametern mit Datenquellen-Steuerelementen</related>
      </Docs>
    </Member>
    <Member MemberName="FormField">
      <MemberSignature Language="C#" Value="public string FormField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FormField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormParameter.FormField" />
      <MemberSignature Language="VB.NET" Value="Public Property FormField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FormField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FormField : string with get, set" Usage="System.Web.UI.WebControls.FormParameter.FormField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Formularvariablen ab, an die der Parameter gebunden ist, oder legt diesen fest.</summary>
        <value>Eine Zeichenfolge, mit der die Formularvariable bezeichnet wird, an die der Parameter gebunden ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Der <xref:System.Web.UI.WebControls.FormParameter.FormField%2A> gibt ein Name-Wert-Paar an, das in der <xref:System.Web.HttpRequest.Form%2A> Auflistung übermittelt wird. Während die <xref:System.Web.UI.WebControls.FormParameter.FormField%2A>-Eigenschaft den Namen des Paars identifiziert, wird der <xref:System.Web.UI.WebControls.FormParameter> zur Laufzeit an den entsprechenden Wert gebunden. Wenn das erwartete Zeichen folgen Name-Wert-Paar der Form Variablen nicht an die ASP.NET-Webseite in der Auflistung übergeben wird, bindet die <xref:System.Web.UI.WebControls.FormParameter.Evaluate%2A>-Methode den-Parameter an den Wert der <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>-Eigenschaft, sofern diese festgelegt ist. Wenn die <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> nicht festgelegt ist, kann die <xref:System.Web.UI.WebControls.FormParameter.Evaluate%2A> Methode den Parameter nicht an einen Wert binden.



## Examples
 Im folgenden Codebeispiel wird veranschaulicht, wie gefilterte Daten mit einem <xref:System.Web.UI.WebControls.ObjectDataSource>-Steuerelement und einem <xref:System.Web.UI.WebControls.FormParameter> zum Abrufen von Daten aus einem Geschäftsobjekt der mittleren Ebene und einem <xref:System.Web.UI.WebControls.GridView>-Steuerelement zum Anzeigen der Ergebnisse angezeigt werden.

 Das Codebeispiel besteht aus einer <xref:System.Web.UI.WebControls.TextBox>, einem <xref:System.Web.UI.WebControls.GridView>-Steuerelement, dem <xref:System.Web.UI.WebControls.ObjectDataSource>-Steuerelement und einer Schaltfläche zum Senden. Standardmäßig wird die <xref:System.Web.UI.WebControls.TextBox> mit dem Namen eines der Northwind Traders-Mitarbeiter aufgefüllt. Die <xref:System.Web.UI.WebControls.GridView> zeigt Informationen zum Mitarbeiter an, der durch den Namen im <xref:System.Web.UI.WebControls.TextBox>identifiziert wird. Zum Abrufen von Daten auf einem anderen Mitarbeiter geben Sie den vollständigen Namen des Mitarbeiters in das <xref:System.Web.UI.WebControls.TextBox> ein, und klicken Sie auf die Schaltfläche.

 Die <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>-Eigenschaft gibt einen Ausdruck an, der zum Filtern der vom <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>abgerufenen Daten verwendet wird. Diese Eigenschaft verwendet Parameter Platzhalter, die für die Parameter ausgewertet werden, die in der <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> Auflistung enthalten sind. In diesem Beispiel ist der Parameter Platzhalter eine <xref:System.Web.UI.WebControls.FormParameter>, die an den Wert des <xref:System.Web.UI.WebControls.TextBox> Steuer Elements gebunden ist.

 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/objds9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/objds9vb.aspx#1)]

 Das folgende Codebeispiel zeigt das Geschäftsobjekt der mittleren Ebene, das im vorherigen Codebeispiel verwendet wurde. Dieses Beispiel besteht aus zwei grundlegenden Klassen: die `EmployeeLogic`-Klasse kapselt Geschäftslogik ein, und die `NorthwindEmployee`-Klasse ist eine Modell Klasse, die nur die grundlegenden Funktionen enthält, die zum Laden und Speichern von Daten aus der Datenebene erforderlich sind. Der Einfachheit halber erstellt die `EmployeeLogic`-Klasse einen statischen Satz von Daten, anstatt die Daten von einer Datenebene abzurufen. Dies ist auch für dieses Beispiel hilfreich, da das Beispiel darauf beruht, dass der Benutzer den vollständigen Namen eines Northwind Traders-Mitarbeiters bereitstellt, um die Filterung zu veranschaulichen. Ein umfassendes, funktionierendes Beispiel ist die Kompilierung und Verwendung dieser Klassen mit den bereitgestellten ASP.net-Codebeispielen.

> [!IMPORTANT]
>  Der-<xref:System.Web.UI.WebControls.FormParameter> überprüft nicht den Wert, der vom Formular Element in beliebiger Weise übermittelt wurde. Er verwendet den Rohwert. In den meisten Fällen können Sie den Wert der <xref:System.Web.UI.WebControls.FormParameter> überprüfen, bevor er von einem Datenquellen-Steuerelement verwendet wird, indem Sie ein Ereignis verarbeiten, z. b. die `Selecting`, `Updating`, `Inserting`oder `Deleting` Ereignis, das von dem verwendeten Datenquellen-Steuerelement verfügbar gemacht wird. Wenn der Wert des-Parameters die Validierungstests nicht besteht, können Sie den Daten Vorgang abbrechen, indem Sie die <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>-Eigenschaft der zugeordneten <xref:System.ComponentModel.CancelEventArgs> Klasse auf `true`festlegen.

 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/northwindemployee9.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/northwindemployee9.vb#2)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.DefaultValue" />
        <altmember cref="M:System.Web.UI.WebControls.FormParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" />
        <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">Verwenden von Parametern mit Datenquellen-Steuerelementen</related>
      </Docs>
    </Member>
    <Member MemberName="ValidateInput">
      <MemberSignature Language="C#" Value="public bool ValidateInput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidateInput" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormParameter.ValidateInput" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidateInput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidateInput { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValidateInput : bool with get, set" Usage="System.Web.UI.WebControls.FormParameter.ValidateInput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob die Clienteingabe in den Parametern überprüft wird.</summary>
        <value><see langword="true" />, wenn die Clienteingabe überprüft wird; andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
