<Type Name="QueryExtender" FullName="System.Web.UI.WebControls.QueryExtender">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cd6f07e52cdbcb56d1083579366949e8057e6c65" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53461007" /></Metadata><TypeSignature Language="C#" Value="public class QueryExtender : System.Web.UI.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit QueryExtender extends System.Web.UI.Control" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.QueryExtender" />
  <TypeSignature Language="VB.NET" Value="Public Class QueryExtender&#xA;Inherits Control" />
  <TypeSignature Language="C++ CLI" Value="public ref class QueryExtender : System::Web::UI::Control" />
  <TypeSignature Language="F#" Value="type QueryExtender = class&#xA;    inherit Control" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultProperty("TargetControlID")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.QueryExtenderDesigner, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Web.UI.WebControls.QueryExtender), "QueryExtender.bmp")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.NonVisualControl</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.ParseChildren(true, "Expressions")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.TargetControlType(typeof(System.Web.UI.WebControls.IQueryableDataSource))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Ermöglicht es, Daten aus einer Datenquelle ohne eine explizite <see langword="Where" />-Klausel in der Datenquelle zu filtern.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In diesem Thema:  
  
-   [Introduction (Einführung)](#Introduction)  
  
-   [Hintergrund](#background)  
  
-   [Filteroptionen](#filter_options)  
  
-   [Aufgaben](#Tasks)  
  
-   [Deklarative Syntax](#declarative_syntax)  
  
<a name="Introduction"></a>   
## <a name="introduction"></a>Einführung  
 Die <xref:System.Web.UI.WebControls.QueryExtender> Steuerelement wird verwendet, um Filter für Daten zu erstellen, die aus einer Datenquelle abgerufen werden, ohne eine explizite `Where` -Klausel in der Datenquelle. Die <xref:System.Web.UI.WebControls.QueryExtender> Steuerelement kann verwendet werden, um die Filterung mit deklarativer Syntax anzugeben.  
  
<a name="background"></a>   
## <a name="background"></a>Hintergrund  
 Filtern von Daten aus einer Datenquelle durch Anzeigen der nur die Datensätze, die bestimmte Kriterien erfüllen ausgeschlossen. Filtern, können Sie verschiedene Ansichten der Daten zu präsentieren, die in einem Dataset ohne Auswirkungen auf die Daten im DataSet.  
  
 Filtern in der Regel müssen Sie erstellen eine `Where` -Klausel, um auf den Befehl angewendet wird, die die Datenquelle abgefragt. Allerdings die `Where` -Eigenschaft des Datenquellen-Steuerelement kann den vollen Funktionsumfang, die verfügbar ist nicht verfügbar. Beispielsweise ermöglicht das QueryExtender-Steuerelement mit eine Tabelle Abfragen, durch Suchen nach Zeichenfolgen zu Beginn, beenden oder eine beliebige Stelle im Feld ".data".  
  
 Um die vollständige Funktionalität verfügbar zu machen, die in LINQ verfügbar ist und zum Filtern von Daten zu vereinfachen, [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] bietet die <xref:System.Web.UI.WebControls.QueryExtender> Steuerelement. Die <xref:System.Web.UI.WebControls.QueryExtender> kann die folgenden Vorteile:  
  
-   Es bietet eine umfangreichere Erfahrung für das Filtern als das Schreiben einer `Where` Klausel. Sie können z. B. eine Produkttabelle für boolesche Werte suchen, mit der <xref:System.Web.UI.WebControls.Expressions.PropertyExpression> Filter ohne das Schreiben einer Abfrage.  
  
-   Sie können Filter angeben, mit der gleichen Syntax für die <xref:System.Web.UI.WebControls.LinqDataSource> und <xref:System.Web.UI.WebControls.EntityDataSource> Steuerelemente und für alle anderen Datenquellen-, die Steuerelemente Sie verwenden.  
  
-   Sie können mit verwendet werden <xref:System.Web.UI.WebControls.LinqDataSource> -Steuerelement, mit einer <xref:System.Web.UI.WebControls.EntityDataSource> -Steuerelement, oder mit Datenquellen von Drittanbietern.  
  
<a name="filter_options"></a>   
## <a name="filter-options"></a>Filteroptionen  
 Die <xref:System.Web.UI.WebControls.QueryExtender> -Steuerelement unterstützt eine Vielzahl von Optionen, die Sie verwenden können, um Daten zu filtern. Das Steuerelement können Sie das Suchen von Zeichenfolgen, numerische Werte in einem angegebenen Bereich zu suchen und einen Eigenschaftswert in einer Tabelle mit einem angegebenen Wert vergleichen. Das Steuerelement können Sie die Daten sortiert und benutzerdefinierte Abfragen bereitstellen.  
  
 Diese Optionen werden bereitgestellt, wie LINQ-Ausdrücke in der <xref:System.Web.UI.WebControls.QueryExtender> Steuerelement. Die <xref:System.Web.UI.WebControls.QueryExtender> -Steuerelement unterstützt auch Ausdrücke, die spezifisch für [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] Dynamic Data-Anwendungen.  
  
 Die folgende Tabelle enthält die Optionen, die Sie, zum Filtern von Daten in verwenden können die <xref:System.Web.UI.WebControls.QueryExtender> Steuerelement.  
  
|Ausdruck|Beschreibung |  
|----------------|-----------------|  
|<xref:System.Web.DynamicData.ControlFilterExpression>|(Nur für dynamische Daten) Erstellt eine Datenbankabfrage mithilfe des Datenschlüssels, der in eine Quelle vom datengebundenen Steuerelement ausgewählt ist.<br /><br /> Informationen dazu, wie Sie diese Filteroption verwenden, finden Sie unter [Vorgehensweise: Filtertabelle Zeilen mit Werten aus einer übergeordneten Tabelle in Dynamic Data](https://msdn.microsoft.com/library/a5566986-7c30-4e71-b4a4-81cd16095749).|  
|<xref:System.Web.UI.WebControls.Expressions.CustomExpression>|Gibt einen benutzerdefinierten Ausdruck für eine Datenquelle. Der benutzerdefinierte LINQ-Ausdruck kann in einem Ereignishandler aufgerufen werden.|  
|<xref:System.Web.DynamicData.DynamicFilterExpression>|(Nur für dynamische Daten) Erstellt eine Datenbankabfrage mithilfe des angegebenen <xref:System.Web.DynamicData.DynamicFilter> Steuerelement.<br /><br /> Informationen dazu, wie Sie diese Filteroption verwenden, finden Sie unter [Vorgehensweise: Filtern von Tabellenzeilen mithilfe der Fremdschlüssel in Dynamic Data](https://msdn.microsoft.com/library/b774e56a-a5b9-41b7-b114-699313ef2056).|  
|<xref:System.Web.UI.WebControls.Expressions.MethodExpression>|Gibt eine benutzerdefinierte LINQ-Ausdruck für eine Datenquelle an. Der Ausdruck wird in einer Methode aufgerufen.|  
|<xref:System.Web.UI.WebControls.Expressions.OrderByExpression>|Übernimmt einen Sortierausdruck auf eine <xref:System.Linq.IQueryable> -Datenquellenobjekt. Nach dem Anwenden der <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> Wert können Sie zusätzliche Sortiervorgänge anwenden, durch Angeben einer <xref:System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions%2A> Wert.|  
|<xref:System.Web.UI.WebControls.Expressions.PropertyExpression>|Die Eigenschaften der Daten und die Eigenschaftswerte, die im angegebenen vergleicht die <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> Auflistung.|  
|<xref:System.Web.UI.WebControls.Expressions.RangeExpression>|Bestimmt, ob ein Wert größer als oder kleiner als ein angegebener Wert ist, oder gibt an, ob ein Wert zwischen zwei Werten liegt.|  
|<xref:System.Web.UI.WebControls.Expressions.SearchExpression>|Vergleicht Werte in ein Feld oder Felder in einen angegebenen Zeichenfolgenwert.|  
  
 Mit diesen Befehlen können <xref:System.Web.UI.WebControls.QueryExtender> Optionen einzeln oder Sie können kombinieren, um komplexe Filterung in einer Webseite bereitzustellen. Weitere Informationen finden Sie unter [Übersicht über das QueryExtender-Steuerelement](https://msdn.microsoft.com/library/b93e32b9-af41-4539-a009-6cbbe809c702). [Exemplarische Vorgehensweise: Filtern von Daten in eine Webseite, die mit deklarativer Syntax](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f)  
  
<a name="Tasks"></a>   
## <a name="tasks"></a>Aufgaben  
 Die folgende Tabelle enthält Aufgaben, die zeigen, wie Sie mit der <xref:System.Web.UI.WebControls.QueryExtender> Steuerelement zum Filtern von Daten.  
  
|Dokument|Aufgabe|  
|--------------|----------|  
|[Exemplarische Vorgehensweise: Filtern von Daten in eine Webseite, die mit deklarativer Syntax](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f)|Zeigt, wie Sie mithilfe des Filters "Optionen", die die <xref:System.Web.UI.WebControls.QueryExtender> gesteuert.|  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Deklarative Syntax  
  
```  
<asp:QueryExtender   
    EnableViewState="True|False"  
    ID="string"  
    OnDataBinding="DataBiding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="UnLoad event hadler"  
    Runat="server"  
    TargetControlID="string"  
    Visible="True|False"  
>  
        <asp:ControlFilterExpression   
            ControlD="string"  
            Column="string">   
        </asp:ControlFilterExpression>  
        <asp:DynamicFilterExpression  
            ControlD="string"  
        </asp:DynamicFilterExpression>  
        <asp:CustomExpression="string"  
            OnQuerying="OnQerying event handler">  
        </asp:CustomExpression>  
        <asp:OrderByExpression="string"  
            DataField="string"  
            Direction="string">  
            <asp:ThenByExpression  
                 DataField="string"  
                 Direction="string"  
            </asp:ThenBy>  
        </asp:OrderByExpression>  
        <asp:PropertyExpression="string">  
                <!-- child controls -->  
        </asp:PropertyExpression  
        >  
        <asp:RangeExpression="integer"  
            Datafield="string"  
            MaxType="Exclusive|Inclusive|None"  
            MinType="Exclusive|Inclusive|None">  
                <!--child controls-->  
        </asp:RangeExpression>  
        <asp:SearchExpression="string"  
            ComparisonType="CurrentCulture|CurrentCultureIgnoreCase|  
                InavariantCulture|InvariantCultureIgnoreCase|  
                Ordinal|OrdinalIgnoreCase"  
            DataField="string"  
            SearchType="Contains|EndsWith|StartsWith">  
                <!--child controls-->  
        </asp:SearchExpression>  
</asp:QueryExtender>  
```  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie mit der <xref:System.Web.UI.WebControls.QueryExtender> Steuerelement eine Suchfunktion auf einer Webseite bereitstellen. Die <xref:System.Web.UI.WebControls.QueryExtender> -Steuerelement verwendet, den Text, der eingegebenen der `TextBoxSearch` Steuerelement Inhalt in den Spalten ProductName und den Supplier.CompanyName einer Produkttabelle, in den Daten suchen, die von zurückgegeben wird die <xref:System.Web.UI.WebControls.LinqDataSource> Steuerelement. Die <xref:System.Web.UI.WebControls.Expressions.SearchExpression> Objekt wird verwendet, um die Suche auszuführen. Die <xref:System.Web.UI.WebControls.Expressions.SearchExpression.DataFields%2A> Eigenschaft gibt an, die Datenfelder zu suchen. Die <xref:System.Web.UI.WebControls.Expressions.SearchExpression.SearchType%2A> Eigenschaft gibt den Typ der durchzuführenden Suche an. Die <xref:System.Web.UI.WebControls.ControlParameter> -Element gibt an, das Steuerelement, das den Text für die Suche enthält. Dieses Codebeispiel ist Teil eines größeren Beispiels, die in bereitgestellt wird [Exemplarische Vorgehensweise: Filtern von Daten in eine Webseite, die mit deklarativer Syntax](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f).  
  
```  
<asp:LinqDataSource ID="dataSource" runat="server"   
    TableName="Products">  
</asp:LinqDataSource>  
<asp:QueryExtender TargetControlID="dataSource" runat="server">  
  <asp:SearchExpression DataFields="ProductName, Supplier.CompanyName"   
        SearchType="StartsWith">  
    <asp:ControlParameter ControlID="TextBoxSearch" />  
  </asp:SearchExpression>  
</asp:QueryExtender>  
```  
  
 Das folgende Beispiel zeigt, wie Sie mit der <xref:System.Web.UI.WebControls.QueryExtender> Steuerelement auf einer Webseite für Werte in einem angegebenen Bereich zu suchen. Die <xref:System.Web.UI.WebControls.QueryExtender> -Steuerelement verwendet die Werte, die Eingabe in die `TextBoxFrom` und `TextBoxTo` Steuerelemente für die Werte in den Spalten ProductName und den Supplier.CompanyName einer Produkttabelle, in den Daten suchen, die von zurückgegeben wird das <xref:System.Web.UI.WebControls.LinqDataSource> Steuerelement . Die <xref:System.Web.UI.WebControls.ControlParameter> Element gibt an, die Textfeld-Steuerelemente, die minimalen und maximalen Werte für Suchen im Bereich enthalten. Die <xref:System.Web.UI.WebControls.Expressions.RangeExpression.MinType%2A> und <xref:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType%2A> Eigenschaften angeben, dass die minimalen und maximalen Werte in den Daten enthalten sein müssen, die zurückgegeben wird. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels [Exemplarische Vorgehensweise: Filtern von Daten in eine Webseite, die mit deklarativer Syntax](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f).  
  
```  
<asp:LinqDataSource ID="dataSource" runat="server"   
    TableName="Products">  
</asp:LinqDataSource>  
<asp:QueryExtender TargetControlID="dataSource" runat="server">  
  <asp:RangeExpression DataField="UnitPrice" MinType="Inclusive"   
        MaxType="Inclusive">  
    <asp:ControlParameter ControlID="TextBoxFrom" />  
    <asp:ControlParameter ControlID="TexBoxTo" />  
  </asp:RangeExpression>  
</asp:QueryExtender>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.Expressions.QueryExpression" />
    <altmember cref="T:System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression" />
    <altmember cref="T:System.Web.UI.WebControls.Expressions.SearchType" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QueryExtender ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.QueryExtender.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; QueryExtender();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.QueryExtender" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.IQueryableDataSource DataSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.IQueryableDataSource DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.QueryExtender.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DataSource As IQueryableDataSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::IQueryableDataSource ^ DataSource { System::Web::UI::WebControls::IQueryableDataSource ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataSource : System.Web.UI.WebControls.IQueryableDataSource" Usage="System.Web.UI.WebControls.QueryExtender.DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.IQueryableDataSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Datenquellen-Steuerelement (<see cref="T:System.Web.UI.IDataSource" />-Objekt) zur Verwendung durch die Abfrage ab.</summary>
        <value>Das Datenquellensteuerelement, das für die Abfrage verwendet werden soll.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.QueryExtender> -Steuerelement unterstützt die <xref:System.Web.UI.WebControls.LinqDataSource> und <xref:System.Web.UI.WebControls.EntityDataSource> Steuerelemente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die <see cref="P:System.Web.UI.WebControls.QueryExtender.DataSource" />-Eigenschaft ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Expressions">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection Expressions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection Expressions" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.QueryExtender.Expressions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Expressions As DataSourceExpressionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Expressions::DataSourceExpressionCollection ^ Expressions { System::Web::UI::WebControls::Expressions::DataSourceExpressionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Expressions : System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection" Usage="System.Web.UI.WebControls.QueryExtender.Expressions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerDefaultProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Auflistung von Ausdrücken ab, die auf das <see cref="T:System.Web.UI.IDataSource" />-Steuerelement angewendet werden.</summary>
        <value>Die Auflistung von Ausdrücken, die auf das Datenquellensteuerelement angewendet werden.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.QueryExtender.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="queryExtender.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Ein Objekt, das den Zustand des <see cref="T:System.Web.UI.WebControls.QueryExtender" />-Steuerelements darstellt.</param>
        <summary>Lädt den Zustand der beizubehaltenden Werte im <see cref="T:System.Web.UI.WebControls.QueryExtender" />-Steuerelement.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.QueryExtender.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="queryExtender.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Ereignisdaten.</param>
        <summary>Tritt ein, wenn eine neue Instanz der <see cref="T:System.Web.UI.WebControls.QueryExtender" />-Klasse initialisiert wird.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.QueryExtender.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="queryExtender.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Speichert den aktuellen Ansichtszustand des <see cref="T:System.Web.UI.WebControls.QueryExtender" />-Steuerelements.</summary>
        <returns>Ein Objekt, das den gespeicherten Zustand des <see cref="T:System.Web.UI.WebControls.QueryExtender" />-Steuerelements enthält.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetControlID">
      <MemberSignature Language="C#" Value="public virtual string TargetControlID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TargetControlID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.QueryExtender.TargetControlID" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TargetControlID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ TargetControlID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TargetControlID : string with get, set" Usage="System.Web.UI.WebControls.QueryExtender.TargetControlID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.IDReferenceProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die ID des <see cref="T:System.Web.UI.IDataSource" />-Steuerelements ab, das für die Abfrage verwendet werden soll, oder legt diese fest.</summary>
        <value>Die ID des Datenquellensteuerelements, das für die Abfrage verwendet werden soll.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.QueryExtender.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="queryExtender.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Verfolgt Änderungen des Ansichtszustands des <see cref="T:System.Web.UI.WebControls.QueryExtender" />-Steuerelements, sodass die Änderungen im <see cref="T:System.Web.UI.StateBag" />-Objekt für das Steuerelement gespeichert werden können.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>