<Type Name="QueryExtender" FullName="System.Web.UI.WebControls.QueryExtender">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b2badb999d7a70d9ef0f0d24c6b2aa9bfbef874f" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70698742" /></Metadata><TypeSignature Language="C#" Value="public class QueryExtender : System.Web.UI.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit QueryExtender extends System.Web.UI.Control" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.QueryExtender" />
  <TypeSignature Language="VB.NET" Value="Public Class QueryExtender&#xA;Inherits Control" />
  <TypeSignature Language="C++ CLI" Value="public ref class QueryExtender : System::Web::UI::Control" />
  <TypeSignature Language="F#" Value="type QueryExtender = class&#xA;    inherit Control" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("TargetControlID")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.QueryExtenderDesigner, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Web.UI.WebControls.QueryExtender), "QueryExtender.bmp")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.NonVisualControl</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true, "Expressions")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.TargetControlType(typeof(System.Web.UI.WebControls.IQueryableDataSource))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Ermöglicht das Filtern von Daten in einer Datenquelle, ohne dass eine explizite <see langword="Where" />-Klausel in der Datenquelle vorhanden ist.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In diesem Thema:  
  
-   [Introduction (Einführung)](#Introduction)  
  
-   [Hintergrund](#background)  
  
-   [Filter Optionen](#filter_options)  
  
-   [Aufgaben](#Tasks)  
  
-   [Deklarative Syntax](#declarative_syntax)  
  
<a name="Introduction"></a>   
## <a name="introduction"></a>Einführung  
 Das <xref:System.Web.UI.WebControls.QueryExtender> -Steuerelement wird zum Erstellen von Filtern für Daten verwendet, die aus einer Datenquelle abgerufen werden, `Where` ohne dass eine explizite-Klausel in der Datenquelle verwendet wird. Das <xref:System.Web.UI.WebControls.QueryExtender> -Steuerelement kann verwendet werden, um die Filterung mithilfe deklarativer Syntax anzugeben.  
  
<a name="background"></a>   
## <a name="background"></a>Hintergrund  
 Beim Filtern werden Daten aus einer Datenquelle ausgeschlossen, indem nur die Datensätze angezeigt werden, die die angegebenen Kriterien erfüllen. Mithilfe von Filtern können Sie unterschiedliche Ansichten der Daten in einem DataSet darstellen, ohne dass sich dies auf die Daten im DataSet auswirkt.  
  
 Das Filtern erfordert in der Regel, `Where` dass Sie eine Klausel erstellen, die auf den Befehl angewendet wird, der die Datenquelle abfragt. Die `Where` -Eigenschaft des Datenquellen-Steuer Elements macht jedoch möglicherweise nicht die vollständige Funktionalität verfügbar, die verfügbar ist. Beispielsweise können Sie mit dem QueryExtender-Steuerelement eine Tabelle Abfragen, indem Sie am Anfang, am Ende oder an einer beliebigen Stelle im. Data-Feld nach Zeichen folgen suchen.  
  
 Um die vollständige Funktionalität verfügbar zu machen, die in LINQ verfügbar ist, und um [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] das Filtern <xref:System.Web.UI.WebControls.QueryExtender> von Daten zu vereinfachen, bietet das Steuerelement. Das <xref:System.Web.UI.WebControls.QueryExtender> -Steuerelement bietet die folgenden Vorteile:  
  
-   Sie bietet eine umfassendere Filterfunktion als das Schreiben `Where` einer-Klausel. Beispielsweise können Sie in einer Products-Tabelle nach booleschen Werten suchen, indem <xref:System.Web.UI.WebControls.Expressions.PropertyExpression> Sie den Filter verwenden, ohne eine Abfrage zu schreiben.  
  
-   Sie können Filter angeben, indem Sie die gleiche Syntax für die <xref:System.Web.UI.WebControls.LinqDataSource> Steuer <xref:System.Web.UI.WebControls.EntityDataSource> Elemente und sowie für alle anderen Datenquellen Steuerelemente verwenden, die Sie möglicherweise verwenden.  
  
-   Sie kann mit <xref:System.Web.UI.WebControls.LinqDataSource> Control, mit einem <xref:System.Web.UI.WebControls.EntityDataSource> -Steuerelement oder mit Datenquellen von Drittanbietern verwendet werden.  
  
<a name="filter_options"></a>   
## <a name="filter-options"></a>Filteroptionen  
 Das <xref:System.Web.UI.WebControls.QueryExtender> -Steuerelement unterstützt eine Vielzahl von Optionen, die Sie zum Filtern von Daten verwenden können. Mit dem-Steuerelement können Sie Zeichen folgen suchen, numerische Werte in einem angegebenen Bereich suchen und einen Eigenschafts Wert in einer Tabelle mit einem angegebenen Wert vergleichen. Mit dem-Steuerelement können Sie die Daten auch sortieren und benutzerdefinierte Abfragen bereitstellen.  
  
 Diese Optionen werden als LINQ-Ausdrücke im <xref:System.Web.UI.WebControls.QueryExtender> -Steuerelement bereitgestellt. Das <xref:System.Web.UI.WebControls.QueryExtender> -Steuerelement unterstützt auch Ausdrücke, [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] die für dynamische Daten-Anwendungen spezifisch sind.  
  
 In der folgenden Tabelle sind die Optionen aufgeführt, die Sie zum Filtern von Daten <xref:System.Web.UI.WebControls.QueryExtender> im-Steuerelement verwenden können.  
  
|Ausdruck|Beschreibung|  
|----------------|-----------------|  
|<xref:System.Web.DynamicData.ControlFilterExpression>|(Nur dynamische Daten) Erstellt eine Datenbankabfrage mithilfe des Daten Schlüssels, der in einem Daten gebundenen Quell Steuerelement ausgewählt ist.<br /><br /> Weitere Informationen zur Verwendung dieser Filteroption finden Sie unter Gewusst [wie: Filtern von Tabellenzeilen mithilfe von Werten aus einer übergeordneten Tabelle in dynamische Daten](https://msdn.microsoft.com/library/a5566986-7c30-4e71-b4a4-81cd16095749).|  
|<xref:System.Web.UI.WebControls.Expressions.CustomExpression>|Gibt einen benutzerdefinierten Ausdruck für eine Datenquelle an. Der benutzerdefinierte LINQ-Ausdruck kann in einem Ereignishandler aufgerufen werden.|  
|<xref:System.Web.DynamicData.DynamicFilterExpression>|(Nur dynamische Daten) Erstellt eine Datenbankabfrage mit dem angegebenen <xref:System.Web.DynamicData.DynamicFilter> -Steuerelement.<br /><br /> Weitere Informationen zur Verwendung dieser Filteroption finden Sie unter Gewusst [wie: Filtern von Tabellenzeilen mithilfe von Fremdschlüsseln in dynamische Daten](https://msdn.microsoft.com/library/b774e56a-a5b9-41b7-b114-699313ef2056).|  
|<xref:System.Web.UI.WebControls.Expressions.MethodExpression>|Gibt einen benutzerdefinierten LINQ-Ausdruck für eine Datenquelle an. Der Ausdruck wird in einer Methode aufgerufen.|  
|<xref:System.Web.UI.WebControls.Expressions.OrderByExpression>|Wendet einen Sortierungs Ausdruck auf <xref:System.Linq.IQueryable> ein Datenquellen Objekt an. Nachdem Sie den <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> Wert angewendet haben, können Sie zusätzliche Sortiervorgänge anwenden, indem <xref:System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions%2A> Sie einen Wert angeben.|  
|<xref:System.Web.UI.WebControls.Expressions.PropertyExpression>|Vergleicht die Eigenschaften des Daten Felds und der Eigenschaftswerte, die in <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> der-Auflistung angegeben werden.|  
|<xref:System.Web.UI.WebControls.Expressions.RangeExpression>|Bestimmt, ob ein Wert größer als oder kleiner als ein angegebener Wert ist oder ob ein Wert zwischen zwei Werten liegt.|  
|<xref:System.Web.UI.WebControls.Expressions.SearchExpression>|Vergleicht Werte in einem Feld oder in Feldern mit einem angegebenen Zeichen folgen Wert.|  
  
 Diese <xref:System.Web.UI.WebControls.QueryExtender> Optionen können einzeln verwendet werden, oder Sie können Sie kombinieren, um eine komplexe Filterung auf einer Webseite bereitzustellen. Weitere Informationen finden Sie unter [Übersicht über das QueryExtender-Webserver Steuer](https://msdn.microsoft.com/library/b93e32b9-af41-4539-a009-6cbbe809c702)Element. [Exemplarische Vorgehensweise: Filtern von Daten in einer Webseite mithilfe von deklarativer Syntax](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f)  
  
<a name="Tasks"></a>   
## <a name="tasks"></a>Aufgaben  
 In der folgenden Tabelle werden Aufgaben aufgelistet, die zeigen, <xref:System.Web.UI.WebControls.QueryExtender> wie das-Steuerelement zum Filtern von Daten verwendet wird.  
  
|Dokument|Aufgabe|  
|--------------|----------|  
|[Exemplarische Vorgehensweise: Filtern von Daten in einer Webseite mithilfe von deklarativer Syntax](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f)|Zeigt, wie die Filteroptionen verwendet werden, <xref:System.Web.UI.WebControls.QueryExtender> die das-Steuerelement bereitstellt.|  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Deklarative Syntax  
  
```  
<asp:QueryExtender   
    EnableViewState="True|False"  
    ID="string"  
    OnDataBinding="DataBiding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="UnLoad event handler"  
    Runat="server"  
    TargetControlID="string"  
    Visible="True|False"  
>  
        <asp:ControlFilterExpression   
            ControlD="string"  
            Column="string">   
        </asp:ControlFilterExpression>  
        <asp:DynamicFilterExpression  
            ControlD="string"  
        </asp:DynamicFilterExpression>  
        <asp:CustomExpression="string"  
            OnQuerying="OnQuerying event handler">  
        </asp:CustomExpression>  
        <asp:OrderByExpression="string"  
            DataField="string"  
            Direction="string">  
            <asp:ThenByExpression  
                 DataField="string"  
                 Direction="string"  
            </asp:ThenBy>  
        </asp:OrderByExpression>  
        <asp:PropertyExpression="string">  
                <!-- child controls -->  
        </asp:PropertyExpression  
        >  
        <asp:RangeExpression="integer"  
            Datafield="string"  
            MaxType="Exclusive|Inclusive|None"  
            MinType="Exclusive|Inclusive|None">  
                <!--child controls-->  
        </asp:RangeExpression>  
        <asp:SearchExpression="string"  
            ComparisonType="CurrentCulture|CurrentCultureIgnoreCase|  
                InvariantCulture|InvariantCultureIgnoreCase|  
                Ordinal|OrdinalIgnoreCase"  
            DataField="string"  
            SearchType="Contains|EndsWith|StartsWith">  
                <!--child controls-->  
        </asp:SearchExpression>  
</asp:QueryExtender>  
```  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie das <xref:System.Web.UI.WebControls.QueryExtender> -Steuerelement verwendet wird, um eine Suchfunktion in einer Webseite bereitzustellen. Das <xref:System.Web.UI.WebControls.QueryExtender> -Steuerelement verwendet den `TextBoxSearch` im-Steuerelement eingegebenen Text, um nach Inhalten in den Spalten ProductName und Supplier. CompanyName einer Products-Tabelle in den Daten zu suchen <xref:System.Web.UI.WebControls.LinqDataSource> , die vom-Steuerelement zurückgegeben werden. Das <xref:System.Web.UI.WebControls.Expressions.SearchExpression> -Objekt wird verwendet, um die Suche auszuführen. Die <xref:System.Web.UI.WebControls.Expressions.SearchExpression.DataFields%2A> -Eigenschaft gibt die zu durchsuchenden Datenfelder an. Die <xref:System.Web.UI.WebControls.Expressions.SearchExpression.SearchType%2A> -Eigenschaft gibt den Typ der durchzuführenden Suche an. Das <xref:System.Web.UI.WebControls.ControlParameter> -Element gibt das Steuerelement an, das den Text enthält, der für die Suche verwendet werden soll. Dieses Codebeispiel ist Teil eines größeren Beispiels, das in Exemplarische Vorgehensweise [: Filtern von Daten in einer Webseite mithilfe von deklarativer Syntax](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f)bereitgestellt wird.  
  
```  
<asp:LinqDataSource ID="dataSource" runat="server"   
    TableName="Products">  
</asp:LinqDataSource>  
<asp:QueryExtender TargetControlID="dataSource" runat="server">  
  <asp:SearchExpression DataFields="ProductName, Supplier.CompanyName"   
        SearchType="StartsWith">  
    <asp:ControlParameter ControlID="TextBoxSearch" />  
  </asp:SearchExpression>  
</asp:QueryExtender>  
```  
  
 Im folgenden Beispiel wird gezeigt, wie das <xref:System.Web.UI.WebControls.QueryExtender> -Steuerelement verwendet wird, um eine Webseite nach Werten in einem angegebenen Bereich zu durchsuchen. Das <xref:System.Web.UI.WebControls.QueryExtender> -Steuerelement verwendet die Werte, die in `TextBoxFrom` den `TextBoxTo` Steuerelementen und eingegeben werden, um Werte in den Spalten ProductName und Supplier. CompanyName einer Products-Tabelle <xref:System.Web.UI.WebControls.LinqDataSource> in den Daten zu suchen, die vom-Steuerelement zurückgegeben werden. . Das <xref:System.Web.UI.WebControls.ControlParameter> -Element gibt die Textfeld-Steuerelemente an, die die minimalen und maximalen Werte enthalten, die zum Durchsuchen des Bereichs verwendet werden. Die <xref:System.Web.UI.WebControls.Expressions.RangeExpression.MinType%2A> - <xref:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType%2A> Eigenschaft und die-Eigenschaft geben an, dass die minimalen und maximalen Werte in den zurückgegebenen Daten enthalten sein müssen. Dieses Codebeispiel ist Teil eines größeren Beispiels, das in Exemplarische Vorgehensweise [: Filtern von Daten in einer Webseite mithilfe von deklarativer Syntax](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f)bereitgestellt wird.  
  
```  
<asp:LinqDataSource ID="dataSource" runat="server"   
    TableName="Products">  
</asp:LinqDataSource>  
<asp:QueryExtender TargetControlID="dataSource" runat="server">  
  <asp:RangeExpression DataField="UnitPrice" MinType="Inclusive"   
        MaxType="Inclusive">  
    <asp:ControlParameter ControlID="TextBoxFrom" />  
    <asp:ControlParameter ControlID="TexBoxTo" />  
  </asp:RangeExpression>  
</asp:QueryExtender>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.Expressions.QueryExpression" />
    <altmember cref="T:System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression" />
    <altmember cref="T:System.Web.UI.WebControls.Expressions.SearchType" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QueryExtender ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.QueryExtender.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; QueryExtender();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.QueryExtender" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.IQueryableDataSource DataSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.IQueryableDataSource DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.QueryExtender.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DataSource As IQueryableDataSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::IQueryableDataSource ^ DataSource { System::Web::UI::WebControls::IQueryableDataSource ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataSource : System.Web.UI.WebControls.IQueryableDataSource" Usage="System.Web.UI.WebControls.QueryExtender.DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.IQueryableDataSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Datenquellen-Steuerelement (<see cref="T:System.Web.UI.IDataSource" />-Objekt) zur Verwendung durch die Abfrage ab.</summary>
        <value>Das Datenquellensteuerelement, das für die Abfrage verwendet werden soll.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Web.UI.WebControls.QueryExtender> -Steuerelement <xref:System.Web.UI.WebControls.LinqDataSource> unter <xref:System.Web.UI.WebControls.EntityDataSource> stützt die Steuerelemente und.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die <see cref="P:System.Web.UI.WebControls.QueryExtender.DataSource" />-Eigenschaft ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Expressions">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection Expressions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection Expressions" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.QueryExtender.Expressions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Expressions As DataSourceExpressionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Expressions::DataSourceExpressionCollection ^ Expressions { System::Web::UI::WebControls::Expressions::DataSourceExpressionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Expressions : System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection" Usage="System.Web.UI.WebControls.QueryExtender.Expressions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerDefaultProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Auflistung von Ausdrücken ab, die auf das <see cref="T:System.Web.UI.IDataSource" />-Steuerelement angewendet werden.</summary>
        <value>Die Auflistung von Ausdrücken, die auf das Datenquellensteuerelement angewendet werden.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.QueryExtender.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="queryExtender.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Ein Objekt, das den Zustand des <see cref="T:System.Web.UI.WebControls.QueryExtender" />-Steuerelements darstellt.</param>
        <summary>Lädt den Zustand der beizubehaltenden Werte im <see cref="T:System.Web.UI.WebControls.QueryExtender" />-Steuerelement.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.QueryExtender.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="queryExtender.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Ereignisdaten.</param>
        <summary>Tritt ein, wenn eine neue Instanz der <see cref="T:System.Web.UI.WebControls.QueryExtender" />-Klasse initialisiert wird.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.QueryExtender.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="queryExtender.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Speichert den aktuellen Ansichtszustand des <see cref="T:System.Web.UI.WebControls.QueryExtender" />-Steuerelements.</summary>
        <returns>Ein Objekt, das den gespeicherten Zustand des <see cref="T:System.Web.UI.WebControls.QueryExtender" />-Steuerelements enthält.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetControlID">
      <MemberSignature Language="C#" Value="public virtual string TargetControlID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TargetControlID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.QueryExtender.TargetControlID" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TargetControlID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ TargetControlID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TargetControlID : string with get, set" Usage="System.Web.UI.WebControls.QueryExtender.TargetControlID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.IDReferenceProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die ID des <see cref="T:System.Web.UI.IDataSource" />-Steuerelements ab, das für die Abfrage verwendet werden soll, oder legt diese fest.</summary>
        <value>Die ID des Datenquellensteuerelements, das für die Abfrage verwendet werden soll.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.QueryExtender.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="queryExtender.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Verfolgt Änderungen des Ansichtszustands des <see cref="T:System.Web.UI.WebControls.QueryExtender" />-Steuerelements, sodass die Änderungen im <see cref="T:System.Web.UI.StateBag" />-Objekt für das Steuerelement gespeichert werden können.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
