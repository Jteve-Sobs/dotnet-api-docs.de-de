<Type Name="FontNamesConverter" FullName="System.Web.UI.WebControls.FontNamesConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1fbb6ca723485fd3c8c187b2911e4896486408b7" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37535954" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FontNamesConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FontNamesConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.FontNamesConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class FontNamesConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class FontNamesConverter : System::ComponentModel::TypeConverter" />
  <TypeSignature Language="F#" Value="type FontNamesConverter = class&#xA;    inherit TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Führt Konvertierungen zwischen einer Zeichenfolge, die eine Liste von Schriftartnamen enthält, und einem Array von Zeichenfolgen, die die einzelnen Namen darstellen, durch.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom%2A> Methode dieser Klasse, die eine einzelne Zeichenfolge mit einer Liste von Schriftartnamen in ein Array von Zeichenfolgen, die mit den einzelnen Schriftartnamen konvertieren. Jeder Schriftartname in der Zeichenfolge muss durch ein Komma getrennt werden. Z. B. die Zeichenfolge "arial, neue roman, Verdana Timeout", konvertiert ein Array mit den Zeichenfolgen "arial", "Times new Roman" und "Verdana". Beachten Sie, dass die Kommas und Leerraum am Anfang oder Ende der Schriftartname entfernt werden. Leerzeichen in der Mitte Namen einer Schriftart wird nicht entfernt.  
  
 Die <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertTo%2A> Methode führt den umgekehrten Vorgang. Konvertiert ein Array von Zeichenfolgen, die auf eine einzelne Zeichenfolge mit einer Liste mit den Namen der einzelnen Schriftartnamen enthält. Ein Array mit den Zeichenfolgen "arial", "Times new Roman" und "Verdana" konvertiert z. B. auf die Zeichenfolge "arial, neue roman, Verdana Timeout". Beachten Sie, dass Trennzeichen automatisch zwischen den einzelnen Schriftartnamen ohne Leerraum eingefügt werden.  
  
 Rufen Sie die <xref:System.Web.UI.WebControls.FontNamesConverter.CanConvertFrom%2A> Methode, um sicherzustellen, dass die Konvertierung kann, vor dem Aufruf durchgeführt werden der <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom%2A> Methode.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.UI.WebControls.FontNamesConverter> Klasse, um eine Zeichenfolge mit einer Liste von Schriftartnamen in ein Array von Zeichenfolgen, die mit den einzelnen Schriftartnamen konvertieren. Das Array von Zeichenfolgen ist dann wieder in eine einzelne Zeichenfolge konvertiert und angezeigt.  
  
 [!code-aspx-csharp[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.TypeConverter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FontNamesConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FontNamesConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FontNamesConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.FontNamesConverter" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie sollten einen Typkonverter nie direkt zugreifen. Rufen Sie stattdessen den entsprechenden Konverter mithilfe einer <xref:System.ComponentModel.TypeDescriptor> Objekt. Weitere Informationen finden Sie in die Beispielen in <xref:System.ComponentModel.TypeConverter>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FontNamesConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="fontNamesConverter.CanConvertFrom (context, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />-Objekt, das Informationen über den Kontext eines Typkonverters bereitstellt. Für diesen Parameter kann optional <see langword="null" /> übergeben werden.</param>
        <param name="sourceType">Ein <see cref="T:System.Type" />, der den Ausgangsdatentyp der Konvertierung darstellt.</param>
        <summary>Bestimmt, ob dieser Konverter ein Objekt des angegebenen Datentyps in ein Array von Zeichenfolgen mit einzelnen Schriftartnamen konvertieren kann.</summary>
        <returns>
          <see langword="true" />, wenn der Typ konvertiert werden kann, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.FontNamesConverter.CanConvertFrom%2A> Methode, um zu bestimmen, ob auf ein Array von Zeichenfolgen, das einzelne Schriftartnamen enthält der angegebenen Datentyp konvertiert werden kann.  
  
> [!NOTE]
>  Mit diesem Konverter kann nur von konvertiert eine `string` -Datentyp. Die `sourceType` -Parameter muss vom Typ sein <xref:System.String>. Diese Methode andernfalls `false` , um anzugeben, dass der angegebene Datentyp kann nicht konvertiert werden.  
  
 Sie können optional übergeben `null` für die `context` Parameter.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt, wie Sie die <xref:System.Web.UI.WebControls.FontNamesConverter.CanConvertFrom%2A>-Methode verwenden. Im Beispiel wird bestimmt, ob der angegebene Datentyp in ein Array von Zeichenfolgen, die die einzelnen Schriftartnamen enthält, vor dem Ausführen der Konvertierung konvertiert werden kann.  
  
 [!code-aspx-csharp[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.Type" />
        <altmember cref="M:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.FontNamesConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj&#xA;override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="fontNamesConverter.ConvertFrom (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />-Objekt, das Informationen über den Kontext eines Typkonverters bereitstellt. Dieser Parameter wird bei dieser Methode nicht verwendet. Er ist für zukünftige Versionen der Methode vorgesehen. Für diesen Parameter kann optional <see langword="null" /> übergeben werden.</param>
        <param name="culture">Ein <see cref="T:System.Globalization.CultureInfo" />-Objekt, das Informationen über eine Kultur, beispielsweise Sprache, Kalendersystem usw., darstellt. Dieser Parameter wird bei dieser Methode nicht verwendet. Er ist für zukünftige Versionen der Methode vorgesehen. Für diesen Parameter kann optional <see langword="null" /> übergeben werden.</param>
        <param name="value">Eine <see cref="T:System.Object" />-Instanz, die die Quellzeichenfolge der Konvertierung darstellt.</param>
        <summary>Konvertiert eine Zeichenfolge, die eine Liste von Schriftartnamen darstellt, in ein Array von Zeichenfolgen, das einzelne Schriftartnamen enthält.</summary>
        <returns>Eine <see cref="T:System.Object" />-Instanz, die das Array von Zeichenfolgen mit den einzelnen Schriftartnamen darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom%2A> Methode zum Konvertieren einer Zeichenfolge mit einer Liste von Schriftartnamen in ein Array von Zeichenfolgen, die die einzelnen Namen enthält. Jeder Schriftartname in der Zeichenfolge muss durch ein Komma getrennt werden. Z. B. die Zeichenfolge "arial, neue roman, Verdana Timeout", konvertiert ein Array mit den Zeichenfolgen "arial", "Times new Roman" und "Verdana". Beachten Sie, dass die Kommas und Leerraum am Anfang oder Ende der Schriftartname entfernt werden. Leerzeichen in der Mitte Namen einer Schriftart wird nicht entfernt.  
  
> [!NOTE]
>  Die `context` und `culture` in dieser Version der Methode keine Parameter verwendet werden; sie sind reserviert für zukünftige Versionen von der Methode. Sie können optional übergeben `null` für diese Parameter.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom%2A> Methode, um eine Zeichenfolge mit einer Liste von Schriftartnamen in ein Array von Zeichenfolgen, die mit den einzelnen Schriftartnamen konvertieren.  
  
 [!code-aspx-csharp[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)">
          <paramref name="value" /> ist nicht vom Typ <see cref="T:System.String" />.</exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Object" />
        <altmember cref="M:System.Web.UI.WebControls.FontNamesConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        <altmember cref="M:System.Web.UI.WebControls.FontNamesConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FontNamesConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj&#xA;override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="fontNamesConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />-Objekt, das Informationen über den Kontext eines Typkonverters bereitstellt. Dieser Parameter wird bei dieser Methode nicht verwendet. Er ist für zukünftige Versionen der Methode vorgesehen. Für diesen Parameter kann optional <see langword="null" /> übergeben werden.</param>
        <param name="culture">Ein <see cref="T:System.Globalization.CultureInfo" />-Objekt, das Informationen über eine Kultur, beispielsweise Sprache, Kalendersystem usw., darstellt. Dieser Parameter wird bei dieser Methode nicht verwendet. Er ist für zukünftige Versionen der Methode vorgesehen. Für diesen Parameter kann optional <see langword="null" /> übergeben werden.</param>
        <param name="value">Ein Objekt, das das Ausgangsarray von Zeichenfolgen der Konvertierung darstellt.</param>
        <param name="destinationType">Ein <see cref="T:System.Object" />-Instanzobjekt, das den Datentyp darstellt, in den konvertiert werden soll. Dieser Parameter muss vom Typ <see cref="T:System.String" /> sein.</param>
        <summary>Erstellt eine Zeichenfolge, die eine Liste von Schriftartnamen darstellt, aus einem Array von Zeichenfolgen, das einzelne Schriftartnamen enthält.</summary>
        <returns>Eine <see cref="T:System.Object" />-Instanz, die eine Zeichenfolge mit einer Liste von Schriftartnamen darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertTo%2A> Methode, um ein Array von Zeichenfolgen, die mit in eine einzelne Zeichenfolge mit einer Liste mit den Namen der einzelnen Schriftartnamen konvertieren. Ein Array mit den Zeichenfolgen "arial", "Times new Roman" und "Verdana" konvertiert z. B. auf die Zeichenfolge "arial, neue roman, Verdana Timeout". Beachten Sie, dass Trennzeichen automatisch zwischen den einzelnen Schriftartnamen ohne Leerraum eingefügt werden.  
  
> [!NOTE]
>  Mit diesem Konverter kann nur für konvertiert eine `string` -Datentyp. Die `destinationType` -Parameter muss vom Typ sein <xref:System.String>.  
  
> [!NOTE]
>  Die `context` und `culture` in dieser Version der Methode keine Parameter verwendet werden; sie sind reserviert für zukünftige Versionen von der Methode. Sie können optional übergeben `null` für diese Parameter.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertTo%2A> -Methode zum Konvertieren in ein Array von Zeichenfolgen, die mit den einzelnen Namen in eine einzelne Zeichenfolge, die eine Liste von Schriftartnamen enthält.  
  
 [!code-aspx-csharp[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)">
          <paramref name="destinationType" /> ist nicht vom Typ <see cref="T:System.String" />.</exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.Type" />
        <altmember cref="M:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      </Docs>
    </Member>
  </Members>
</Type>