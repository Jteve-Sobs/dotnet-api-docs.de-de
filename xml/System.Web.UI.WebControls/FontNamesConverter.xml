<Type Name="FontNamesConverter" FullName="System.Web.UI.WebControls.FontNamesConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dec632f01db054f68ce53229d750929eb14c136b" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70462596" /></Metadata><TypeSignature Language="C#" Value="public class FontNamesConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FontNamesConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.FontNamesConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class FontNamesConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class FontNamesConverter : System::ComponentModel::TypeConverter" />
  <TypeSignature Language="F#" Value="type FontNamesConverter = class&#xA;    inherit TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Führt Konvertierungen zwischen einer Zeichenfolge, die eine Liste von Schriftartnamen enthält, und einem Array von Zeichenfolgen, die die einzelnen Namen darstellen, durch.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom%2A> die-Methode dieser Klasse, um eine einzelne Zeichenfolge, die eine Liste von Schriftart Namen enthält, in ein Zeichen folgen Array zu konvertieren, das die einzelnen Namen enthält. Jeder Schriftart Name in der Zeichenfolge muss durch ein Komma getrennt werden. Beispielsweise konvertiert die Zeichenfolge "Arial, Times New Roman, Verdana" in ein Array, das die Zeichen folgen "Arial", "Times New Roman" und "Verdana" enthält. Beachten Sie, dass die Kommas zusammen mit allen Leerzeichen am Anfang oder am Ende des Schriftart namens entfernt werden. Leerraum in der Mitte eines Schriftart namens wird nicht entfernt.  
  
 Die <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertTo%2A> -Methode führt den umgekehrten Vorgang aus. Ein Array von Zeichen folgen, das die einzelnen Schriftart Namen enthält, wird in eine einzelne Zeichenfolge konvertiert, die eine Liste mit den Namen enthält. Ein Array, das die Zeichen folgen "Arial", "Times New Roman" und "Verdana" enthält, wird z. b. in die Zeichenfolge "Arial, Times New Roman, Verdana" konvertiert. Beachten Sie, dass Kommas automatisch zwischen den Schriftart Namen ohne Leerzeichen eingefügt werden.  
  
 Rufen Sie <xref:System.Web.UI.WebControls.FontNamesConverter.CanConvertFrom%2A> die-Methode auf, um zu überprüfen, ob die <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom%2A> Konvertierung durchgeführt werden kann  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FontNamesConverter> -Klasse verwendet wird, um eine Zeichenfolge mit einer Liste von Schriftart Namen in ein Array von Zeichen folgen zu konvertieren, die die einzelnen Namen enthalten. Das Array von Zeichen folgen wird dann wieder in eine einzelne Zeichenfolge konvertiert und angezeigt.  
  
 [!code-aspx-csharp[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.TypeConverter" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ayybcxe5(v=vs.120)">Gewusst wie: Implementieren eines Typkonverters</related>
    <related type="Article" href="https://msdn.microsoft.com/library/bf3158fb-2fde-494f-bb77-a4645733e1ef">Typkonverterbeispiel</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FontNamesConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FontNamesConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FontNamesConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.FontNamesConverter" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie sollten niemals direkt auf einen Typkonverter zugreifen. Stattdessen können Sie den entsprechenden Konverter mithilfe eines <xref:System.ComponentModel.TypeDescriptor> -Objekts abrufen. Weitere Informationen finden Sie in den Beispielen unter <xref:System.ComponentModel.TypeConverter>.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ayybcxe5(v=vs.120)">Gewusst wie: Implementieren eines Typkonverters</related>
        <related type="Article" href="https://msdn.microsoft.com/library/bf3158fb-2fde-494f-bb77-a4645733e1ef">Typkonverterbeispiel</related>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FontNamesConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="fontNamesConverter.CanConvertFrom (context, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />-Objekt, das Informationen über den Kontext eines Typkonverters bereitstellt. Für diesen Parameter kann optional <see langword="null" /> übergeben werden.</param>
        <param name="sourceType">Ein <see cref="T:System.Type" />, der den Ausgangsdatentyp der Konvertierung darstellt.</param>
        <summary>Bestimmt, ob dieser Konverter ein Objekt des angegebenen Datentyps in ein Array von Zeichenfolgen mit einzelnen Schriftartnamen konvertieren kann.</summary>
        <returns><see langword="true" />, wenn der Typ konvertiert werden kann, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.FontNamesConverter.CanConvertFrom%2A> die-Methode, um zu bestimmen, ob der angegebene Datentyp in ein Zeichen folgen Array konvertiert werden kann, das einzelne Schriftart Namen enthält.  
  
> [!NOTE]
>  Dieser Konverter kann nur von einem `string` Datentyp konvertieren. Der `sourceType` -Parameter muss vom Typ <xref:System.String>sein. Andernfalls gibt diese Methode zurück `false` , um anzugeben, dass der angegebene Datentyp nicht konvertiert werden kann.  
  
 Optional können Sie `null` für den `context` -Parameter übergeben.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt, wie Sie die <xref:System.Web.UI.WebControls.FontNamesConverter.CanConvertFrom%2A>-Methode verwenden. Im Beispiel wird bestimmt, ob der angegebene Datentyp in ein Zeichen folgen Array konvertiert werden kann, das die einzelnen Schriftart Namen enthält, bevor die Konvertierung durchgeführt wird.  
  
 [!code-aspx-csharp[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.Type" />
        <altmember cref="M:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.FontNamesConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ayybcxe5(v=vs.120)">Gewusst wie: Implementieren eines Typkonverters</related>
        <related type="Article" href="https://msdn.microsoft.com/library/bf3158fb-2fde-494f-bb77-a4645733e1ef">Typkonverterbeispiel</related>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="fontNamesConverter.ConvertFrom (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />-Objekt, das Informationen über den Kontext eines Typkonverters bereitstellt. Dieser Parameter wird bei dieser Methode nicht verwendet. Er ist für zukünftige Versionen der Methode vorgesehen. Für diesen Parameter kann optional <see langword="null" /> übergeben werden.</param>
        <param name="culture">Ein <see cref="T:System.Globalization.CultureInfo" />-Objekt, das Informationen über eine Kultur, beispielsweise Sprache, Kalendersystem usw., darstellt. Dieser Parameter wird bei dieser Methode nicht verwendet. Er ist für zukünftige Versionen der Methode vorgesehen. Für diesen Parameter kann optional <see langword="null" /> übergeben werden.</param>
        <param name="value">Eine <see cref="T:System.Object" />-Instanz, die die Quellzeichenfolge der Konvertierung darstellt.</param>
        <summary>Konvertiert eine Zeichenfolge, die eine Liste von Schriftartnamen darstellt, in ein Array von Zeichenfolgen, das einzelne Schriftartnamen enthält.</summary>
        <returns>Eine <see cref="T:System.Object" />-Instanz, die das Array von Zeichenfolgen mit den einzelnen Schriftartnamen darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom%2A> die-Methode zum Konvertieren einer Zeichenfolge, die eine Liste von Schriftart Namen enthält, in ein Array von Zeichen folgen, die die einzelnen Namen enthalten. Jeder Schriftart Name in der Zeichenfolge muss durch ein Komma getrennt werden. Beispielsweise konvertiert die Zeichenfolge "Arial, Times New Roman, Verdana" in ein Array, das die Zeichen folgen "Arial", "Times New Roman" und "Verdana" enthält. Beachten Sie, dass die Kommas zusammen mit allen Leerzeichen am Anfang oder am Ende des Schriftart namens entfernt werden. Leerraum in der Mitte eines Schriftart namens wird nicht entfernt.  
  
> [!NOTE]
>  Der `context` - `culture` Parameter und der-Parameter werden in dieser Version der-Methode nicht verwendet. Sie sind für zukünftige Versionen der-Methode reserviert. Optional können Sie `null` für diese Parameter übergeben.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom%2A> -Methode verwendet wird, um eine Zeichenfolge mit einer Liste von Schriftart Namen in ein Array von Zeichen folgen zu konvertieren, die die einzelnen Namen enthalten.  
  
 [!code-aspx-csharp[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><paramref name="value" /> ist nicht vom Typ <see cref="T:System.String" />.</exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Object" />
        <altmember cref="M:System.Web.UI.WebControls.FontNamesConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        <altmember cref="M:System.Web.UI.WebControls.FontNamesConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ayybcxe5(v=vs.120)">Gewusst wie: Implementieren eines Typkonverters</related>
        <related type="Article" href="https://msdn.microsoft.com/library/bf3158fb-2fde-494f-bb77-a4645733e1ef">Typkonverterbeispiel</related>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FontNamesConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="fontNamesConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />-Objekt, das Informationen über den Kontext eines Typkonverters bereitstellt. Dieser Parameter wird bei dieser Methode nicht verwendet. Er ist für zukünftige Versionen der Methode vorgesehen. Für diesen Parameter kann optional <see langword="null" /> übergeben werden.</param>
        <param name="culture">Ein <see cref="T:System.Globalization.CultureInfo" />-Objekt, das Informationen über eine Kultur, beispielsweise Sprache, Kalendersystem usw., darstellt. Dieser Parameter wird bei dieser Methode nicht verwendet. Er ist für zukünftige Versionen der Methode vorgesehen. Für diesen Parameter kann optional <see langword="null" /> übergeben werden.</param>
        <param name="value">Ein Objekt, das das Ausgangsarray von Zeichenfolgen der Konvertierung darstellt.</param>
        <param name="destinationType">Ein <see cref="T:System.Object" />-Instanzobjekt, das den Datentyp darstellt, in den konvertiert werden soll. Dieser Parameter muss vom Typ <see cref="T:System.String" /> sein.</param>
        <summary>Erstellt eine Zeichenfolge, die eine Liste von Schriftartnamen darstellt, aus einem Array von Zeichenfolgen, das einzelne Schriftartnamen enthält.</summary>
        <returns>Eine <see cref="T:System.Object" />-Instanz, die eine Zeichenfolge mit einer Liste von Schriftartnamen darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertTo%2A> die-Methode, um ein Array von Zeichen folgen mit den einzelnen Schriftart Namen in eine einzelne Zeichenfolge zu konvertieren, die eine Liste mit den Namen enthält. Ein Array, das die Zeichen folgen "Arial", "Times New Roman" und "Verdana" enthält, wird z. b. in die Zeichenfolge "Arial, Times New Roman, Verdana" konvertiert. Beachten Sie, dass Kommas automatisch zwischen den Schriftart Namen ohne Leerzeichen eingefügt werden.  
  
> [!NOTE]
>  Dieser Konverter kann nur in einen `string` -Datentyp konvertieren. Der `destinationType` -Parameter muss vom Typ <xref:System.String>sein.  
  
> [!NOTE]
>  Der `context` - `culture` Parameter und der-Parameter werden in dieser Version der-Methode nicht verwendet. Sie sind für zukünftige Versionen der-Methode reserviert. Optional können Sie `null` für diese Parameter übergeben.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertTo%2A> -Methode verwendet wird, um ein Array von Zeichen folgen mit den einzelnen Namen in eine einzelne Zeichenfolge zu konvertieren, die eine Liste von Schriftart Namen enthält.  
  
 [!code-aspx-csharp[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><paramref name="destinationType" /> ist nicht vom Typ <see cref="T:System.String" />.</exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.Type" />
        <altmember cref="M:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ayybcxe5(v=vs.120)">Gewusst wie: Implementieren eines Typkonverters</related>
        <related type="Article" href="https://msdn.microsoft.com/library/bf3158fb-2fde-494f-bb77-a4645733e1ef">Typkonverterbeispiel</related>
      </Docs>
    </Member>
  </Members>
</Type>
