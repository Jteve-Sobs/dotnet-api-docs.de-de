<Type Name="ButtonColumn" FullName="System.Web.UI.WebControls.ButtonColumn">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="354fa70dbca44c43c72f8ea1cbbb4ac35bf8cb2b" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39888855" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ButtonColumn : System.Web.UI.WebControls.DataGridColumn" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ButtonColumn extends System.Web.UI.WebControls.DataGridColumn" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ButtonColumn" />
  <TypeSignature Language="VB.NET" Value="Public Class ButtonColumn&#xA;Inherits DataGridColumn" />
  <TypeSignature Language="C++ CLI" Value="public ref class ButtonColumn : System::Web::UI::WebControls::DataGridColumn" />
  <TypeSignature Language="F#" Value="type ButtonColumn = class&#xA;    inherit DataGridColumn" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.DataGridColumn</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Ein Spaltentyp für das <see cref="T:System.Web.UI.WebControls.DataGrid" />-Steuerelement, das eine benutzerdefinierte Schaltfläche enthält.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.ButtonColumn> -Klasse in eine <xref:System.Web.UI.WebControls.DataGrid> Steuerelement, das eine Schaltfläche erstellt, wobei jede Zeile in der <xref:System.Web.UI.WebControls.DataGrid> Steuerelement. Geben Sie die Beschriftung, die auf den Schaltflächen, indem angezeigt wird die <xref:System.Web.UI.WebControls.ButtonColumn.Text%2A> Eigenschaft. Setzen Sie die <xref:System.Web.UI.WebControls.ButtonColumn.Text%2A> -Eigenschaft, die alle Schaltflächen in der <xref:System.Web.UI.WebControls.ButtonColumn> -Objekt gemeinsam nutzen, die gleiche Beschriftung. Alternativ können Sie binden die <xref:System.Web.UI.WebControls.ButtonColumn> Schaltflächen auf ein Feld in einer Datenquelle. Dadurch können Sie verschiedene Beschriftungen für jede Schaltfläche angezeigt. Die Werte im angegebenen Feld sind für den Beschriftungstext verwendet. Legen Sie die <xref:System.Web.UI.WebControls.ButtonColumn.DataTextField%2A> Eigenschaft zum Binden der <xref:System.Web.UI.WebControls.ButtonColumn> auf ein Feld in einer Datenquelle.  
  
 Formatieren Sie die Beschriftungen, die auf den Schaltflächen, indem angezeigt werden die <xref:System.Web.UI.WebControls.ButtonColumn.DataTextField%2A> Eigenschaft mit einer Formatierungszeichenfolge.  
  
 Klicken Sie auf die Schaltflächen in der <xref:System.Web.UI.WebControls.ButtonColumn> löst die <xref:System.Web.UI.WebControls.DataGrid.ItemCommand> Ereignis. Sie können programmgesteuert steuern die Aktion, die ausgeführt wird, wenn die Schaltfläche geklickt wird, durch die Bereitstellung eines ereignishandlers für das <xref:System.Web.UI.WebControls.DataGrid.ItemCommand> Ereignis.  
  
 In der Standardeinstellung Validierung der Seite wird nicht ausgeführt, wenn auf eine Schaltfläche in der <xref:System.Web.UI.WebControls.ButtonColumn> geklickt wird. Validierung der Seite bestimmt, ob die Benutzereingabe-Steuerelemente, die mit einer Überprüfung verknüpft sind auf der Seite steuern, die alle Validierungsregeln übergeben, die durch das Validierungssteuerelement angegeben werden. Um eine seitenvalidierung ausgeführt werden, wenn eine Schaltfläche geklickt wird, legen Sie die <xref:System.Web.UI.WebControls.ButtonColumn.CausesValidation%2A> Eigenschaft `true`.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit <xref:System.Web.UI.WebControls.ButtonColumn> -Klasse in eine <xref:System.Web.UI.WebControls.DataGrid> Steuerelement erstellt **hinzufügen** Schaltflächen.  
  
 [!code-csharp[ButtonColumnButtonType#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonColumnButtonType/CS/source.cs#1)]
 [!code-vb[ButtonColumnButtonType#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonColumnButtonType/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
    <altmember cref="T:System.Web.UI.WebControls.DataGridColumn" />
    <altmember cref="T:System.Web.UI.WebControls.BoundColumn" />
    <altmember cref="T:System.Web.UI.WebControls.EditCommandColumn" />
    <altmember cref="T:System.Web.UI.WebControls.HyperLinkColumn" />
    <altmember cref="T:System.Web.UI.WebControls.TemplateColumn" />
    <altmember cref="T:System.Web.UI.WebControls.Button" />
    <altmember cref="T:System.Web.UI.WebControls.LinkButton" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ButtonColumn ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonColumn.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ButtonColumn();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.ButtonColumn" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.ButtonColumn.%23ctor%2A> Konstruktor erstellt und initialisiert eine neue Instanz der dem <xref:System.Web.UI.WebControls.ButtonColumn> Klasse.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie erstellt und initialisiert eine neue Instanz der dem <xref:System.Web.UI.WebControls.ButtonColumn> Klasse und fügen sie der <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> Auflistung.  
  
 [!code-csharp[ButtonColumnButtonType#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonColumnButtonType/CS/source.cs#1)]
 [!code-vb[ButtonColumnButtonType#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonColumnButtonType/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.Columns" />
      </Docs>
    </Member>
    <Member MemberName="ButtonType">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.ButtonColumnType ButtonType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ButtonColumnType ButtonType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonColumn.ButtonType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ButtonType As ButtonColumnType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::ButtonColumnType ButtonType { System::Web::UI::WebControls::ButtonColumnType get(); void set(System::Web::UI::WebControls::ButtonColumnType value); };" />
      <MemberSignature Language="F#" Value="member this.ButtonType : System.Web.UI.WebControls.ButtonColumnType with get, set" Usage="System.Web.UI.WebControls.ButtonColumn.ButtonType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Description("The type of button contained within the column.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ButtonColumnType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Typ der im <see cref="T:System.Web.UI.WebControls.ButtonColumn" />-Objekt anzuzeigenden Schaltfläche ab oder legt diesen fest.</summary>
        <value>Einer der <see cref="T:System.Web.UI.WebControls.ButtonColumnType" />-Werte. Der Standardwert ist <see langword="LinkButton" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.ButtonColumn.ButtonType%2A> Eigenschaft, um anzugeben, ob die Schaltflächen in der <xref:System.Web.UI.WebControls.ButtonColumn> Objekt als Link oder Schaltflächen angezeigt werden. Die folgende Tabelle enthält die möglichen Einstellungen.  
  
|Schaltflächentyp|Anzeige|  
|-----------------|-------------|  
|<xref:System.Web.UI.WebControls.ButtonColumnType.LinkButton>|Ein Link.|  
|<xref:System.Web.UI.WebControls.ButtonColumnType.PushButton>|Ein Schaltflächen-Steuerelement.|  
  
 Klicken Sie auf die Schaltflächen in der <xref:System.Web.UI.WebControls.ButtonColumn> löst die <xref:System.Web.UI.WebControls.DataGrid.ItemCommand> Ereignis. Sie können programmgesteuert steuern die Aktion, die ausgeführt wird, wenn die Schaltfläche geklickt wird, durch die Bereitstellung eines ereignishandlers für das <xref:System.Web.UI.WebControls.DataGrid.ItemCommand> Ereignis.  
  
 Der Wert dieser Eigenschaft wird im Ansichtszustand gespeichert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.ButtonColumn.ButtonType%2A> Eigenschaft, um anzugeben, dass die Schaltflächen in der <xref:System.Web.UI.WebControls.ButtonColumn> -Objekt als Schaltflächen angezeigt werden.  
  
 [!code-csharp[ButtonColumnButtonType#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonColumnButtonType/CS/source.cs#1)]
 [!code-vb[ButtonColumnButtonType#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonColumnButtonType/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der angegebene Spaltentyp ist keiner der <see cref="T:System.Web.UI.WebControls.ButtonColumnType" />-Werte.</exception>
        <altmember cref="T:System.Web.UI.WebControls.ButtonColumnType" />
        <altmember cref="E:System.Web.UI.WebControls.DataGrid.ItemCommand" />
      </Docs>
    </Member>
    <Member MemberName="CausesValidation">
      <MemberSignature Language="C#" Value="public virtual bool CausesValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CausesValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonColumn.CausesValidation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CausesValidation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CausesValidation { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CausesValidation : bool with get, set" Usage="System.Web.UI.WebControls.ButtonColumn.CausesValidation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob beim Klicken auf eine Schaltfläche im <see cref="T:System.Web.UI.WebControls.ButtonColumn" />-Objekt eine Validierung durchgeführt wird, oder legt diesen fest.</summary>
        <value>
          <see langword="true" />, wenn beim Klicken auf eine Schaltfläche in der <see cref="T:System.Web.UI.WebControls.ButtonColumn" /> eine Validierung durchgeführt wird, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In der Standardeinstellung Validierung der Seite wird nicht ausgeführt, wenn auf eine Schaltfläche in der <xref:System.Web.UI.WebControls.ButtonColumn> -Objekt geklickt wird. Validierung der Seite bestimmt, ob die Benutzereingabe-Steuerelemente, die mit einer Überprüfung verknüpft sind auf der Seite steuern, die alle Validierungsregeln übergeben, die durch das Validierungssteuerelement angegeben werden. Zum Ausführen der Validierung einer Schaltfläche in der Seite die <xref:System.Web.UI.WebControls.ButtonColumn> geklickt wird, legen Sie die <xref:System.Web.UI.WebControls.ButtonColumn.CausesValidation%2A> Eigenschaft, um `true`.  
  
 Wenn den Wert des der <xref:System.Web.UI.WebControls.ButtonColumn.CausesValidation%2A> -Eigenschaft ist `true`, können Sie auch die <xref:System.Web.UI.WebControls.ButtonColumn.ValidationGroup%2A> Eigenschaft, um den Namen der Validierungsgruppe für das Angeben der <xref:System.Web.UI.WebControls.ButtonColumn> eine Validierung veranlasst.  
  
 Der Wert dieser Eigenschaft wird im Ansichtszustand gespeichert.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.Validate" />
        <altmember cref="P:System.Web.UI.WebControls.ButtonColumn.ValidationGroup" />
      </Docs>
    </Member>
    <Member MemberName="CommandName">
      <MemberSignature Language="C#" Value="public virtual string CommandName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonColumn.CommandName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CommandName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CommandName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandName : string with get, set" Usage="System.Web.UI.WebControls.ButtonColumn.CommandName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Description("The command associated with the button.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Zeichenfolge ab, die den Befehl darstellt, der beim Klicken auf eine Schaltfläche im <see cref="T:System.Web.UI.WebControls.ButtonColumn" />-Objekt ausgeführt werden soll, oder legt diese Zeichenfolge fest.</summary>
        <value>Eine Zeichenfolge ab, die den Befehl darstellt, der beim Klicken auf eine Schaltfläche in <see cref="T:System.Web.UI.WebControls.ButtonColumn" /> ausgeführt werden soll. Der Standardwert ist eine leere Zeichenfolge ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.ButtonColumn.CommandName%2A> Eigenschaft, um einen Befehlsnamen, z. B. zuordnen `Add` oder `Remove`, mit einer Schaltfläche. Sie können festlegen, die <xref:System.Web.UI.WebControls.ButtonColumn.CommandName%2A> Eigenschaft auf eine beliebige Zeichenfolge, die die Aktion, wenn eine Schaltfläche im identifiziert die <xref:System.Web.UI.WebControls.ButtonColumn?displayProperty=nameWithType> -Objekt geklickt wird. Ermitteln Sie dann, Sie können programmgesteuert den Namen des Befehls im Ereignishandler für die <xref:System.Web.UI.WebControls.DataGrid.ItemCommand> Ereignis und die entsprechenden Aktionen ausführen.  
  
 Der Wert dieser Eigenschaft wird im Ansichtszustand gespeichert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.UI.WebControls.ButtonColumn.CommandName%2A> Eigenschaft eine Schaltfläche einen Befehlsnamen zugeordnet werden soll. Klicken Sie dann der Namen des Befehls von der angeklickten Schaltfläche richtet sich programmgesteuert in die Ereignishandler für die <xref:System.Web.UI.WebControls.DataGrid.ItemCommand> Ereignis und die entsprechende Aktion ausgeführt wird.  
  
 [!code-aspx-csharp[ButtonColumnCommandName#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonColumnCommandName/CS/ButtonColumnCommandNameCS.aspx#1)]
 [!code-aspx-vb[ButtonColumnCommandName#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonColumnCommandName/VB/ButtonColumnCommandNameVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.DataGrid.ItemCommand" />
        <altmember cref="F:System.String.Empty" />
      </Docs>
    </Member>
    <Member MemberName="DataTextField">
      <MemberSignature Language="C#" Value="public virtual string DataTextField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataTextField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonColumn.DataTextField" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataTextField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataTextField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataTextField : string with get, set" Usage="System.Web.UI.WebControls.ButtonColumn.DataTextField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Description("The field bound to the text property of the button.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen des Felds aus einer Datenquelle ab, das an das <see cref="T:System.Web.UI.WebControls.ButtonColumn" />-Objekt gebunden werden soll, oder legt diesen fest.</summary>
        <value>Der Name des Felds, das an <see cref="T:System.Web.UI.WebControls.ButtonColumn" /> gebunden werden soll. Der Standardwert ist eine leere Zeichenfolge ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.ButtonColumn.DataTextField%2A> -Eigenschaft an den Feldnamen aus der Datenquelle zum Binden an die <xref:System.Web.UI.WebControls.ButtonColumn.Text%2A> Eigenschaft die Schaltflächen in der <xref:System.Web.UI.WebControls.ButtonColumn> Objekt.  
  
 Binden die Spalte an ein Feld direkt festlegen, statt die <xref:System.Web.UI.WebControls.ButtonColumn.Text%2A> Eigenschaft können Sie zum Anzeigen von verschiedenen Beschriftungen für die Schaltflächen in der <xref:System.Web.UI.WebControls.ButtonColumn> mithilfe der Werte im angegebenen Feld.  
  
 Der Wert dieser Eigenschaft wird im Ansichtszustand gespeichert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.UI.WebControls.ButtonColumn.DataTextField%2A> Eigenschaft zum Binden der <xref:System.Web.UI.WebControls.ButtonColumn> Objekt, das ein Feld in einer Datenquelle.  
  
 [!code-aspx-csharp[ButtonColumnDataTextField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonColumnDataTextField/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[ButtonColumnDataTextField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonColumnDataTextField/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ButtonColumn.Text" />
      </Docs>
    </Member>
    <Member MemberName="DataTextFormatString">
      <MemberSignature Language="C#" Value="public virtual string DataTextFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataTextFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataTextFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataTextFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataTextFormatString : string with get, set" Usage="System.Web.UI.WebControls.ButtonColumn.DataTextFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Description("The formatting applied to the value bound to the Text property.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Zeichenfolge ab, die das Anzeigeformat der Beschriftung für jede Schaltfläche angibt, oder legt diese fest.</summary>
        <value>Die Zeichenfolge, die das Anzeigeformat der Beschriftung für jede Schaltfläche angibt. Der Standardwert ist eine leere Zeichenfolge ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString%2A> -Eigenschaft ein benutzerdefiniertes Format für die Beschriftung der Schaltflächen in der <xref:System.Web.UI.WebControls.ButtonColumn> Objekt.  
  
 Zeichenfolge für das Format besteht aus zwei Teilen, getrennt durch einen Doppelpunkt enthält, in der Form `{A:Bxx}`. Z. B. die Formatierungszeichenfolge `{0:F2}` formatiert die Zelle, um eine Festkommazahl mit zwei Dezimalstellen angezeigt.  
  
> [!NOTE]
>  In geschweifte Klammern, um anzugeben, dass es sich um eine Zeichenfolge und nicht um eine Literalzeichenfolge ist, muss die gesamte Zeichenfolge eingeschlossen werden. Beliebiger Text außerhalb der Klammern wird als Literaltext angezeigt.  
  
 Der Wert vor dem Doppelpunkt (`A` im allgemeinen Beispiel) gibt den Parameterindex in einer nullbasierten Parameter an.  
  
> [!NOTE]
>  Dieser Wert kann nur auf 0 festgelegt werden, da nur ein Wert in jeder Zelle vorhanden ist.  
  
 Die Zeichen nach dem Doppelpunkt (`B` im allgemeinen Beispiel) gibt das Format zum Anzeigen des Werts in an. Die folgende Tabelle enthält die gängigen Formaten.  
  
|Formatzeichen|Zeigt die numerischen Werte in|  
|----------------------|--------------------------------|  
|`C`|Währungsformat.|  
|`D`|Decimal-Format.|  
|`E`|Wissenschaftlicher (exponentieller)-Format.|  
|`F`|Festes Format.|  
|`G`|Allgemeines Format.|  
|`N`|Zahlenformat.|  
|`X`|Hexadezimalformat.|  
  
> [!NOTE]
>  Das Formatzeichen ist keine Groß-/Kleinschreibung beachtet, mit Ausnahme von `X`, woraufhin die hexadezimalen Zeichen im angegebenen Fall.  
  
 Der Wert nach dem Formatierungszeichen (`xx` im allgemeinen Beispiel) gibt die Anzahl der signifikanten Stellen oder Dezimalstellen an.  
  
 Der Wert dieser Eigenschaft wird im Ansichtszustand gespeichert.  
  
 Weitere Informationen zum Formatieren von Zeichenfolgen finden Sie unter [Formatierungstypen](~/docs/standard/base-types/formatting-types.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString%2A> Eigenschaft zum Anzeigen der Beschriftung der einzelnen Schaltflächen in der <xref:System.Web.UI.WebControls.ButtonColumn> Objekt im Währungsformat an.  
  
 [!code-aspx-csharp[ButtonColumnDataTextField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonColumnDataTextField/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[ButtonColumnDataTextField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonColumnDataTextField/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.String.Empty" />
      </Docs>
    </Member>
    <Member MemberName="FormatDataTextValue">
      <MemberSignature Language="C#" Value="protected virtual string FormatDataTextValue (object dataTextValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string FormatDataTextValue(object dataTextValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonColumn.FormatDataTextValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function FormatDataTextValue (dataTextValue As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ FormatDataTextValue(System::Object ^ dataTextValue);" />
      <MemberSignature Language="F#" Value="abstract member FormatDataTextValue : obj -&gt; string&#xA;override this.FormatDataTextValue : obj -&gt; string" Usage="buttonColumn.FormatDataTextValue dataTextValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTextValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dataTextValue">Der zu formatierende Wert.</param>
        <summary>Konvertiert den angegebenen Wert in das von der <see cref="P:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString" />-Eigenschaft angegebene Format.</summary>
        <returns>Der in das von der <see cref="P:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString" /> angegebene Format konvertierte <paramref name="dataTextValue" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.ButtonColumn.FormatDataTextValue%2A> Methode, um den angegebenen Wert in das Format zu konvertieren, die von angegeben wird die <xref:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString%2A> Eigenschaft.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.ButtonColumn.FormatDataTextValue%2A> -Methode gibt die Zeichenfolge uhrzeitentsprechung des Werts, wenn die <xref:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString%2A> Eigenschaft nicht festgelegt.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonColumn.Initialize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize();" />
      <MemberSignature Language="F#" Value="override this.Initialize : unit -&gt; unit" Usage="buttonColumn.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Setzt das <see cref="T:System.Web.UI.WebControls.ButtonColumn" />-Objekt auf den Ausgangszustand zurück.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.ButtonColumn.Initialize%2A> -Methode zum Zurücksetzen der <xref:System.Web.UI.WebControls.ButtonColumn> Objekt auf seinen ursprünglichen Zustand.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ButtonColumn.InitializeCell(System.Web.UI.WebControls.TableCell,System.Int32,System.Web.UI.WebControls.ListItemType)" />
      </Docs>
    </Member>
    <Member MemberName="InitializeCell">
      <MemberSignature Language="C#" Value="public override void InitializeCell (System.Web.UI.WebControls.TableCell cell, int columnIndex, System.Web.UI.WebControls.ListItemType itemType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InitializeCell(class System.Web.UI.WebControls.TableCell cell, int32 columnIndex, valuetype System.Web.UI.WebControls.ListItemType itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonColumn.InitializeCell(System.Web.UI.WebControls.TableCell,System.Int32,System.Web.UI.WebControls.ListItemType)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub InitializeCell (cell As TableCell, columnIndex As Integer, itemType As ListItemType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void InitializeCell(System::Web::UI::WebControls::TableCell ^ cell, int columnIndex, System::Web::UI::WebControls::ListItemType itemType);" />
      <MemberSignature Language="F#" Value="override this.InitializeCell : System.Web.UI.WebControls.TableCell * int * System.Web.UI.WebControls.ListItemType -&gt; unit" Usage="buttonColumn.InitializeCell (cell, columnIndex, itemType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.WebControls.TableCell" />
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="itemType" Type="System.Web.UI.WebControls.ListItemType" />
      </Parameters>
      <Docs>
        <param name="cell">Eine <see cref="T:System.Web.UI.WebControls.TableCell" />, die die zurückzusetzende Zelle darstellt.</param>
        <param name="columnIndex">Die Nummer der Spalte, in der sich die Zelle befindet.</param>
        <param name="itemType">Einer der <see cref="T:System.Web.UI.WebControls.ListItemType" />-Werte.</param>
        <summary>Setzt eine Zelle im <see cref="T:System.Web.UI.WebControls.ButtonColumn" />-Objekt auf den Ausgangszustand zurück.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ButtonColumn.InitializeCell%2A> Methode setzt die angegebene Zelle in der <xref:System.Web.UI.WebControls.ButtonColumn> Objekt auf seinen ursprünglichen Zustand.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ButtonColumn.Initialize" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public virtual string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonColumn.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Web.UI.WebControls.ButtonColumn.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Description("The text used for the button.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Beschriftung ab, die auf den Schaltflächen des <see cref="T:System.Web.UI.WebControls.ButtonColumn" />-Objekts angezeigt wird, oder legt diese fest.</summary>
        <value>Die auf den Schaltflächen von <see cref="T:System.Web.UI.WebControls.ButtonColumn" /> angezeigte Beschriftung. Der Standardwert ist eine leere Zeichenfolge ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.ButtonColumn.Text%2A> Eigenschaft angeben oder ermitteln die Beschriftung, die in der Schaltflächen des angezeigt wird der <xref:System.Web.UI.WebControls.ButtonColumn> Objekt.  
  
> [!NOTE]
>  Setzen Sie die <xref:System.Web.UI.WebControls.ButtonColumn.Text%2A> -Eigenschaft, die alle Schaltflächen in der <xref:System.Web.UI.WebControls.ButtonColumn> die gleiche Beschriftung.  
  
 Alternativ können Sie binden die <xref:System.Web.UI.WebControls.ButtonColumn> auf ein Feld in einer Datenquelle. Dadurch können Sie verschiedene Beschriftungen für die Schaltflächen in der Spalte, die mithilfe der Werte in das angegebene Feld anzuzeigen. Legen Sie die <xref:System.Web.UI.WebControls.ButtonColumn.DataTextField%2A> Eigenschaft zum Binden der <xref:System.Web.UI.WebControls.ButtonColumn> auf ein Feld in einer Datenquelle.  
  
 Der Wert dieser Eigenschaft wird im Ansichtszustand gespeichert.  
  
 Der Wert dieser Eigenschaft, wenn festgelegt, kann mithilfe eines Designers Tools automatisch zu einer Ressourcendatei gespeichert werden. Weitere Informationen finden Sie unter <xref:System.ComponentModel.LocalizableAttribute> und [Globalisierung und Lokalisierung](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.UI.WebControls.ButtonColumn.Text%2A> -Eigenschaft an die Beschriftung für die Schaltflächen in der <xref:System.Web.UI.WebControls.ButtonColumn> Objekt.  
  
 [!code-aspx-csharp[Classic ButtonColumn.ButtonType Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic ButtonColumn.ButtonType Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic ButtonColumn.ButtonType Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic ButtonColumn.ButtonType Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ButtonColumn.DataTextField" />
        <altmember cref="F:System.String.Empty" />
      </Docs>
    </Member>
    <Member MemberName="ValidationGroup">
      <MemberSignature Language="C#" Value="public virtual string ValidationGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValidationGroup" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonColumn.ValidationGroup" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ValidationGroup As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ValidationGroup { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ValidationGroup : string with get, set" Usage="System.Web.UI.WebControls.ButtonColumn.ValidationGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Gruppe von Validierungssteuerelementen ab, für die das <see cref="T:System.Web.UI.WebControls.ButtonColumn" />-Objekt eine Validierung bewirkt, wenn ein Postback an den Server ausgeführt wird, oder legt diese Gruppe fest.</summary>
        <value>Die Gruppe von Validierungssteuerelementen, für die das <see cref="T:System.Web.UI.WebControls.ButtonColumn" />-Objekt eine Validierung auslöst, wenn es ein Postback an den Server ausführt. Der Standardwert ist eine leere Zeichenfolge ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Validierungsgruppen können Sie Steuerelementen zur gültigkeitsprüfung auf einer Seite einer bestimmten Kategorie zuweisen. Jede Validierungsgruppe kann unabhängig von anderen Validierungsgruppen auf der Seite überprüft werden. Verwenden der <xref:System.Web.UI.WebControls.ButtonColumn.ValidationGroup%2A> Eigenschaft, um den Namen der Validierungsgruppe für das Angeben der <xref:System.Web.UI.WebControls.ButtonColumn> -Objekt eine Validierung auslöst, wenn es an den Server zurücksendet.  
  
 Die <xref:System.Web.UI.WebControls.ButtonColumn.ValidationGroup%2A> Eigenschaft wirkt sich nur, wenn der Wert des der <xref:System.Web.UI.WebControls.ButtonColumn.CausesValidation%2A> -Eigenschaftensatz auf `true`. Wenn geben Sie einen Wert für die <xref:System.Web.UI.WebControls.ButtonColumn.ValidationGroup%2A> -Eigenschaft, um nur die Validierungssteuerelemente, die Teil der angegebenen Gruppe sind werden überprüft, wenn die <xref:System.Web.UI.WebControls.ButtonColumn> Postback an den Server ausführt. Wenn Sie einen Wert für nicht angeben der <xref:System.Web.UI.WebControls.ButtonColumn.ValidationGroup%2A> Eigenschaft und die <xref:System.Web.UI.WebControls.ButtonColumn.CausesValidation%2A> -Eigenschaftensatz auf `true`, alle Validierungssteuerelemente auf der Seite, die eine Gruppe für die Überprüfung nicht zugewiesen sind, werden überprüft bei der <xref:System.Web.UI.WebControls.ButtonColumn> Postback an den Server ausführt.  
  
 Der Wert dieser Eigenschaft wird im Ansichtszustand gespeichert.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ButtonColumn.CausesValidation" />
        <altmember cref="T:System.Web.UI.WebControls.RequiredFieldValidator" />
      </Docs>
    </Member>
  </Members>
</Type>