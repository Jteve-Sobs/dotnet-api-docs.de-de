<Type Name="ObjectDataSourceDisposingEventArgs" FullName="System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4f3712716bbd4c98625e981b17485d74c8219312" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37591334" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ObjectDataSourceDisposingEventArgs : System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ObjectDataSourceDisposingEventArgs extends System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ObjectDataSourceDisposingEventArgs&#xA;Inherits CancelEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectDataSourceDisposingEventArgs : System::ComponentModel::CancelEventArgs" />
  <TypeSignature Language="F#" Value="type ObjectDataSourceDisposingEventArgs = class&#xA;    inherit CancelEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.CancelEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt Daten für das <see cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing" />-Ereignis des <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />-Steuerelements bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs> Klasse wird verwendet, der <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing%2A> Methode, um den Zugriff auf die Business-Objektinstanz nach Datenvorgänge bereitzustellen, das Verwenden der <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement und Business-Objekt ausgeführt werden, aber bevor das Geschäftsobjekt-Objekt zerstört wird. Das Geschäftsobjekt, das erfolgt mithilfe der <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance%2A> Eigenschaft. Durch Hinzufügen eines Delegaten behandeln die <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> Ereignis können Sie alle öffentlich verfügbar gemachte Member des Geschäftsobjekts abschließende Aufgaben oder bereinigen Sie zugreifen.  
  
 Die <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing%2A> Methode wird nicht aufgerufen, indem die <xref:System.Web.UI.WebControls.ObjectDataSource> zu steuern, wenn die Methode, die Datenoperationen ausführt, wird ein `static` Methode. Keine Business-Objektinstanz wird erstellt, wenn die Methode statisch ist.  
  
 Die <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement stellt viele Ereignisse, die Sie behandeln können, um mit den zugrunde liegenden Geschäftsobjekten zu verschiedenen Zeitpunkten im Lebenszyklus zu arbeiten. Die folgende Tabelle enthält die Ereignisse und den zugehörigen <xref:System.EventArgs> Klassen und Ereignishandlerdelegaten.  
  
|event|EventArgs|EventHandler|  
|-----------|---------------|------------------|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating><br /><br /> Tritt auf, unmittelbar bevor die Instanz das Geschäftsobjekt, das erstellt wird.|<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated><br /><br /> Tritt unmittelbar nach der Instanz das Geschäftsobjekt, das erstellt wird.|<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Selecting><br /><br /> Tritt auf, bevor die Daten abgerufen werden.|<xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Inserting>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> und <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting>.<br /><br /> Erfolgen Sie, bevor eine Insert, Update oder Delete-Vorgang ausgeführt wird.|<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Selected><br /><br /> Tritt auf, nachdem die Daten abgerufen werden.|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updated> und <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>.<br /><br /> Treten Sie auf, nachdem die INSERT-, Update- oder Delete-Vorgang abgeschlossen ist.|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing><br /><br /> Tritt auf, bevor ein Geschäftsobjekt zerstört wird.|<xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler>|  
  
   
  
## Examples  
 Dieser Abschnitt enthält zwei Codebeispiele. Im ersten Codebeispiel wird veranschaulicht, wie Sie mit einer <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement mit einem Geschäftsobjekt und <xref:System.Web.UI.WebControls.GridView> -Steuerelement zum Anzeigen von Informationen. Im zweiten Codebeispiel wird der mittleren Ebene Beispielgeschäftsobjekt bereitgestellt, das im ersten Codebeispiel wird verwendet.  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit einer <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement mit einem Geschäftsobjekt und <xref:System.Web.UI.WebControls.GridView> -Steuerelement zum Anzeigen von Informationen. Möglicherweise arbeiten Sie mit einem Geschäftsobjekt, das sehr teuer (als Zeit oder Ressourcen) für jeden Datenvorgang zu erstellen, die Ihre Webseite ausführt. Eine Möglichkeit zum Arbeiten mit der ein teures Objekt ist möglicherweise eine Instanz davon einmal erstellen, und klicken Sie dann für nachfolgende Vorgänge, anstatt zu erstellen und zerstören für jeden Datenvorgang zwischengespeichert. Dieses Beispiel veranschaulicht dieses Muster. Können Sie behandeln die <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> Ereignis, überprüfen Sie zunächst den Cache für ein Objekt, und dann eine Instanz erstellen, wenn noch keine zwischengespeichert wird. Behandeln Sie dann die <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> Ereignis Zwischenspeichern das Geschäftsobjekt, das für die zukünftige Verwendung, anstatt es zu löschen. In diesem Beispiel die <xref:System.ComponentModel.CancelEventArgs.Cancel?displayProperty=nameWithType> Eigenschaft der <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs> Objekt nastaven NA hodnotu `true`, leiten die <xref:System.Web.UI.WebControls.ObjectDataSource> nicht aufrufen, die <xref:System.IDisposable.Dispose%2A> Methode für die Instanz.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/CS/objds16cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/VB/objds16vb.aspx#1)]  
  
 Das folgende Codebeispiel enthält ein Beispiel-Middle-Tier-Business-Objekt, das im vorherigen Codebeispiel verwendet. Im Codebeispiel wird ein grundlegender geschäftlicher-Objekt, das definiert, indem Sie besteht aus den `EmployeeLogic` -Klasse, die eine Klasse ist, die verwaltet den Zustand und die Geschäftslogik kapselt. Ein vollständiges Arbeitsbeispiel müssen diesen Code als Bibliothek kompiliert, und klicken Sie dann verwenden Sie diese Klassen aus einer ASP-Seite.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_16#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/CS/northwindemployee16.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_16#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/VB/northwindemployee16.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler" />
    <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating" />
    <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectDataSourceDisposingEventArgs (object objectInstance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object objectInstance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (objectInstance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectDataSourceDisposingEventArgs(System::Object ^ objectInstance);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs : obj -&gt; System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs" Usage="new System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs objectInstance" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="objectInstance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="objectInstance">Das Geschäftsobjekt, mit dem die <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> interagiert, um Datenoperationen auszuführen.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs" />-Klasse unter Verwendung des angegebenen Objekts.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance" />
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="ObjectInstance">
      <MemberSignature Language="C#" Value="public object ObjectInstance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ObjectInstance" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ObjectInstance As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ObjectInstance { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ObjectInstance : obj" Usage="System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Objekt ab, das das Geschäftsobjekt darstellt, mit dem das <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />-Steuerelement Datenoperationen ausführt.</summary>
        <value>Das Geschäftsobjekt, das die <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> für Datenoperationen verwendet, andernfalls <see langword="null" />, wenn <see langword="null" /> an <see cref="T:System.Web.UI.WebControls.ObjectDataSourceEventArgs" /> weitergegeben wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die Datenmethoden-Vorgang (<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>, und <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>) sind Instanzmethoden, die eine Instanz des Unternehmens Objekt erstellt wird, bevor die Methode ausgeführt wird. Sie können verhindern, dass das Geschäftsobjekt, das für jeden Aufruf erstellt wird, die durch das Speichern des Objekts in der <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance%2A> -Eigenschaft in der <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> -Ereignishandler. In nachfolgenden <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> Ereignisse, Sie können das Geschäftsobjekt, das vom Abrufen der <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit einer <xref:System.Web.UI.WebControls.ObjectDataSource> -Steuerelement mit einem Geschäftsobjekt und <xref:System.Web.UI.WebControls.GridView> -Steuerelement zum Anzeigen von Informationen. Möglicherweise arbeiten Sie mit einem Geschäftsobjekt, das sehr teuer (als Zeit oder Ressourcen) für jeden Datenvorgang zu erstellen, die Ihre Webseite ausführt. Eine Möglichkeit zum Arbeiten mit der ein teures Objekt ist möglicherweise eine Instanz davon einmal erstellen, und klicken Sie dann für nachfolgende Vorgänge, anstatt zu erstellen und zerstören für jeden Datenvorgang zwischengespeichert. Dieses Beispiel veranschaulicht dieses Muster. Können Sie behandeln die <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> Ereignis, überprüfen Sie zunächst den Cache für ein Objekt, und dann eine Instanz erstellen, wenn noch keine zwischengespeichert wird. Behandeln Sie dann die <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> Ereignis Zwischenspeichern das Geschäftsobjekt, das für die zukünftige Verwendung, anstatt es zu löschen. In diesem Beispiel die <xref:System.ComponentModel.CancelEventArgs.Cancel?displayProperty=nameWithType> Eigenschaft der <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs> -Klasse festgelegt, dass `true`, leiten die <xref:System.Web.UI.WebControls.ObjectDataSource> nicht aufrufen, <xref:System.IDisposable.Dispose%2A> auf der Instanz.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/CS/objds16cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/VB/objds16vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance" />
      </Docs>
    </Member>
  </Members>
</Type>