<Type Name="TextBox" FullName="System.Web.UI.WebControls.TextBox">
  <Metadata><Meta Name="ms.openlocfilehash" Value="45ddee9c10a4d50de9cc93b16e248ef0d35d66d9" /><Meta Name="ms.sourcegitcommit" Value="a8ff98b48bda124cfcb2605f5da9b21bc6dcd791" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="02/14/2020" /><Meta Name="ms.locfileid" Value="77246435" /></Metadata><TypeSignature Language="C#" Value="public class TextBox : System.Web.UI.WebControls.WebControl, System.Web.UI.IEditableTextControl, System.Web.UI.IPostBackDataHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TextBox extends System.Web.UI.WebControls.WebControl implements class System.Web.UI.IEditableTextControl, class System.Web.UI.IPostBackDataHandler, class System.Web.UI.ITextControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.TextBox" />
  <TypeSignature Language="VB.NET" Value="Public Class TextBox&#xA;Inherits WebControl&#xA;Implements IEditableTextControl, IPostBackDataHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextBox : System::Web::UI::WebControls::WebControl, System::Web::UI::IEditableTextControl, System::Web::UI::IPostBackDataHandler" />
  <TypeSignature Language="F#" Value="type TextBox = class&#xA;    inherit WebControl&#xA;    interface IPostBackDataHandler&#xA;    interface IEditableTextControl&#xA;    interface ITextControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IEditableTextControl</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackDataHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.ITextControl</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("TextChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Text")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.PreviewControlDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlBuilder(typeof(System.Web.UI.WebControls.TextBoxControlBuilder))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.ControlValueProperty("Text")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.DataBindingHandler("System.Web.UI.Design.TextDataBindingHandler, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.ParseChildren(true, "Text")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ValidationProperty("Text")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.Web.UI.DataBindingHandler("System.Web.UI.Design.TextDataBindingHandler, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.Web.UI.ParseChildren(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.PreviewControlDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.Web.UI.DataBindingHandler("System.Web.UI.Design.TextDataBindingHandler, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Zeigt ein Textfeld-Steuerelement für Benutzereingaben an.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 Inhalte dieses Themas:

-   [Einführung](#introduction)

-   [Deklarative Syntax](#declarative_syntax)

<a name="introduction"></a>
## <a name="introduction"></a>Einführung
 Das <xref:System.Web.UI.WebControls.TextBox> Server-Steuerelement ist ein Eingabe Steuerelement, mit dem der Benutzer Text eingeben kann. Standardmäßig wird die <xref:System.Web.UI.WebControls.TextBox.TextMode%2A>-Eigenschaft des-Steuer Elements auf `TextBoxMode.SingleLine`festgelegt, wodurch ein einzeilige Textfeld angezeigt wird. Allerdings können Sie auch verwenden die <xref:System.Web.UI.WebControls.TextBox> -Steuerelement zum Anzeigen von einem mehrzeiligen Textfeld oder ein Textfeld, das eine Benutzereingabe Masken durch Ändern des Werts von der <xref:System.Web.UI.WebControls.TextBox.TextMode%2A> Eigenschaft, um `TextBoxMode.MultiLine` oder `TextBoxMode.Password`bzw. Der im <xref:System.Web.UI.WebControls.TextBox> Steuerelement angezeigte Text wird mit der <xref:System.Web.UI.WebControls.TextBox.Text%2A>-Eigenschaft angegeben oder festgelegt.

 Das <xref:System.Web.UI.WebControls.TextBox>-Steuerelement enthält mehrere Eigenschaften, mit denen Sie die Darstellung des Steuer Elements steuern können. Die Anzeigebreite des Textfelds in Zeichen wird durch seine <xref:System.Web.UI.WebControls.TextBox.Columns%2A>-Eigenschaft bestimmt. Wenn das <xref:System.Web.UI.WebControls.TextBox>-Steuerelement ein mehrzeilige Textfeld ist, wird die Anzahl der angezeigten Zeilen von der <xref:System.Web.UI.WebControls.TextBox.Rows%2A>-Eigenschaft bestimmt. Um Text anzuzeigen, der im <xref:System.Web.UI.WebControls.TextBox> Steuerelement umschlossen ist, legen Sie die Eigenschaft <xref:System.Web.UI.WebControls.TextBox.Wrap%2A> auf `true`fest.

 Sie können auch angeben, wie Daten im <xref:System.Web.UI.WebControls.TextBox> Steuerelement eingegeben werden, indem Sie einige Eigenschaften festlegen. Um zu verhindern, dass der im Steuerelement angezeigte Text geändert wird, legen Sie die <xref:System.Web.UI.WebControls.TextBox.ReadOnly%2A>-Eigenschaft auf `true`fest. Wenn Sie die Benutzereingabe auf eine angegebene Anzahl von Zeichen begrenzen möchten, legen Sie die <xref:System.Web.UI.WebControls.TextBox.MaxLength%2A>-Eigenschaft fest.

 Eine Liste der anfänglichen Eigenschaftswerte für eine Instanz von <xref:System.Web.UI.WebControls.TextBox>finden Sie im <xref:System.Web.UI.WebControls.TextBox.%23ctor%2A>-Konstruktor.

> [!CAUTION]
>  Dieses Steuerelement kann verwendet werden, um Benutzereingaben zu akzeptieren, die möglicherweise böswillige Client Skripts enthalten. Überprüfen Sie alle Informationen, die von einem Client für ausführbare Skripts, SQL-Anweisungen oder anderen Code gesendet werden, bevor Sie ihn in der Anwendung anzeigen. Sie können Validierungs Steuerelemente verwenden, um Benutzereingaben zu überprüfen, bevor Sie den Eingabetext in einem Steuerelement anzeigen. ASP.net bietet eine Überprüfungs Funktion für die Eingabe Anforderung zum Blockieren von Skripts und HTML in Benutzereingaben. Weitere Informationen finden Sie unter [Sichern von Standard Steuerelementen](https://docs.microsoft.com/previous-versions/aspnet/ms178270(v=vs.100)), Gewusst [wie: schützen vor Skript Exploits in einer Webanwendung durch Anwenden der HTML-Codierung auf](https://docs.microsoft.com/previous-versions/aspnet/a2a4yykt(v=vs.100))Zeichen folgen und [Validieren von Benutzereingaben in ASP.net Web Pages](https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).

<a name="declarative_syntax"></a>
## <a name="declarative-syntax"></a>Deklarative Syntax

```
<asp:TextBox
    AccessKey="string"
    AutoCompleteType="None|Disabled|Cellular|Company|Department|
        DisplayName|Email|FirstName|Gender|HomeCity|HomeCountryRegion|
        HomeFax|HomePhone|HomeState|HomeStreetAddress|HomeZipCode|
        Homepage|JobTitle|LastName|MiddleName|Notes|Office|Pager|
        BusinessCity|BusinessCountryRegion|BusinessFax|BusinessPhone|
        BusinessState|BusinessStreetAddress|BusinessUrl|
        BusinessZipCode|Search"
    AutoPostBack="True|False"
    BackColor="color name|#dddddd"
    BorderColor="color name|#dddddd"
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|
        Inset|Outset"
    BorderWidth="size"
    CausesValidation="True|False"
    Columns="integer"
    CssClass="string"
    Enabled="True|False"
    EnableTheming="True|False"
    EnableViewState="True|False"
    Font-Bold="True|False"
    Font-Italic="True|False"
    Font-Names="string"
    Font-Overline="True|False"
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|
        Large|X-Large|XX-Large"
    Font-Strikeout="True|False"
    Font-Underline="True|False"
    ForeColor="color name|#dddddd"
    Height="size"
    ID="string"
    MaxLength="integer"
    OnDataBinding="DataBinding event handler"
    OnDisposed="Disposed event handler"
    OnInit="Init event handler"
    OnLoad="Load event handler"
    OnPreRender="PreRender event handler"
    OnTextChanged="TextChanged event handler"
    OnUnload="Unload event handler"
    ReadOnly="True|False"
    Rows="integer"
    runat="server"
    SkinID="string"
    Style="string"
    TabIndex="integer"
    Text="string"
    TextMode="SingleLine|MultiLine|Password"
    ToolTip="string"
    ValidationGroup="string"
    Visible="True|False"
    Width="size"
    Wrap="True|False"
/>
```



## Examples
 Für dieses Thema steht ein Visual Studio-Website Projekt mit Quellcode zur Verfügung: [herunterladen](https://go.microsoft.com/fwlink/?LinkId=192423).

 Im folgenden Codebeispiel wird veranschaulicht, wie das <xref:System.Web.UI.WebControls.TextBox>-Steuerelement verwendet wird, um Benutzereingaben zu erhalten. Wenn der Benutzer auf die Schaltfläche **Hinzufügen** klickt, wird die Summe der in die Textfelder eingegebenen Werte angezeigt.

> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).

```csharp
<%@ Page Language="C#" AutoEventWireup="True" %>

<!DOCTYPE html>
<html>

<head>
    <title>TextBox Example</title>
    <script runat="server">
      protected void AddButton_Click(Object sender, EventArgs e)
      {
         int Answer;
         Answer = Convert.ToInt32(Value1.Text) + Convert.ToInt32(Value2.Text);
         AnswerMessage.Text = Answer.ToString();
      }
    </script>
</head>
<body>
  <form id="form1" runat="server">
    <h3> TextBox Example </h3>
    <p>
        <asp:TextBox ID="Value1" Columns="2" MaxLength="3" Text="1" runat="server"/>
        +
        <asp:TextBox ID="Value2" Columns="2" MaxLength="3" Text="1" runat="server"/>
        =
        <asp:Label ID="AnswerMessage" runat="server"/>
    </p>
    <p>
        <asp:Button ID="AddButton" Text="Add" OnClick="AddButton_Click" runat="server"/>
    </p>
    <p>
        <asp:RequiredFieldValidator ID="Value1RequiredValidator" ControlToValidate="Value1"
             ErrorMessage="Please enter a value.<br />" Display="Dynamic"
             runat="server"/>
        <asp:RequiredFieldValidator ID="Value2RequiredValidator" ControlToValidate="Value2"
             ErrorMessage="Please enter a value.<br />" Display="Dynamic"
             runat="server"/>
        <asp:RangeValidator ID="Value1RangeValidator" ControlToValidate="Value1"
             Type="Integer" MinimumValue="1" MaximumValue="100" Display="Dynamic"
             ErrorMessage="Please enter an integer <br /> between than 1 and 100.<br />"
             runat="server"/>
        <asp:RangeValidator ID="Value2RangeValidator" ControlToValidate="Value2"
             Type="Integer" MinimumValue="1" MaximumValue="100" Display="Dynamic"
             ErrorMessage="Please enter an integer <br /> between than 1 and 100.<br />"
             runat="server"/>
    </p>
  </form>
</body>
</html>
```

```vb
<%@ Page Language="vb" AutoEventWireup="false" %>

<!DOCTYPE html>
<html>

<head>
    <title>TextBox Example</title>
    <script runat="server">
        Protected Sub AddButton_Click(sender As Object, e As EventArgs)
            Dim Answer As Integer
            Answer = Convert.ToInt32(Value1.Text) + Convert.ToInt32(Value2.Text)
            AnswerMessage.Text = Answer.ToString()
        End Sub
    </script>
</head>
<body>
  <form id="form1" runat="server">
    <h3> TextBox Example </h3>
    <p>
        <asp:TextBox ID="Value1" Columns="2" MaxLength="3" Text="1" runat="server"/>
        +
        <asp:TextBox ID="Value2" Columns="2" MaxLength="3" Text="1" runat="server"/>
        =
        <asp:Label ID="AnswerMessage" runat="server"/>
    </p>
    <p>
        <asp:Button ID="AddButton" Text="Add" OnClick="AddButton_Click" runat="server"/>
    </p>
    <p>
        <asp:RequiredFieldValidator ID="Value1RequiredValidator" ControlToValidate="Value1"
             ErrorMessage="Please enter a value.<br />" Display="Dynamic"
             runat="server"/>
        <asp:RequiredFieldValidator ID="Value2RequiredValidator" ControlToValidate="Value2"
             ErrorMessage="Please enter a value.<br />" Display="Dynamic"
             runat="server"/>
        <asp:RangeValidator ID="Value1RangeValidator" ControlToValidate="Value1"
             Type="Integer" MinimumValue="1" MaximumValue="100" Display="Dynamic"
             ErrorMessage="Please enter an integer <br /> between than 1 and 100.<br />"
             runat="server"/>
        <asp:RangeValidator ID="Value2RangeValidator" ControlToValidate="Value2"
             Type="Integer" MinimumValue="1" MaximumValue="100" Display="Dynamic"
             ErrorMessage="Please enter an integer <br /> between than 1 and 100.<br />"
             runat="server"/>
    </p>
  </form>
</body>
</html>
```

 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.WebControls.TextBox.TextMode" />
    <altmember cref="P:System.Web.UI.WebControls.TextBox.Text" />
    <altmember cref="P:System.Web.UI.WebControls.TextBox.Columns" />
    <altmember cref="P:System.Web.UI.WebControls.TextBox.Rows" />
    <altmember cref="P:System.Web.UI.WebControls.TextBox.Wrap" />
    <altmember cref="P:System.Web.UI.WebControls.TextBox.ReadOnly" />
    <altmember cref="P:System.Web.UI.WebControls.TextBox.MaxLength" />
    <related type="Article" href="https://msdn.microsoft.com/library/ab354bc1-f23a-48fc-93d8-d4d7c1b7396f">Übersicht über das TextBox-Webserver Steuerelement</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)">Übersicht über Skript Exploits</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextBox ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TextBox.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextBox();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der Klasse <see cref="T:System.Web.UI.WebControls.TextBox" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Verwenden Sie diesen Konstruktor, um eine neue Instanz der <xref:System.Web.UI.WebControls.TextBox>-Klasse zu erstellen und zu initialisieren.

 In der folgenden Tabelle wird der anfängliche Eigenschafts Wert für eine Instanz von <xref:System.Web.UI.WebControls.TextBox>angezeigt.

|Eigenschaft|Anfangswert|
|--------------|-------------------|
|`TagKey`|`HtmlTextWriterTag.Input`|



## Examples
 Im folgenden Codebeispiel wird veranschaulicht, wie der <xref:System.Web.UI.WebControls.TextBox.%23ctor%2A>-Konstruktor verwendet wird, um der Seite dynamisch ein <xref:System.Web.UI.WebControls.TextBox>-Steuerelement hinzuzufügen.

> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).

 [!code-aspx-csharp[TextBox Constructor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TextBox Constructor/CS/textboxctorcs.aspx#1)]
 [!code-aspx-vb[TextBox Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TextBox Constructor/VB/textboxctorvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.TagKey" />
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TextBox.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.AddAttributesToRender : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="textBox.AddAttributesToRender writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Ein <see cref="T:System.Web.UI.HtmlTextWriter" />, der den Ausgabestream für das Rendering von HTML-Inhalten auf dem Client darstellt.</param>
        <summary>Fügt der angegebenen <see cref="T:System.Web.UI.HtmlTextWriter" />-Instanz die darzustellenden HTML-Attribute und -Formatvorlagen hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Diese Methode wird hauptsächlich von Steuerelement Entwicklern verwendet, um die zusätzlichen Attribute und Stile in den <xref:System.Web.UI.HtmlTextWriter> Ausgabestream für ein <xref:System.Web.UI.WebControls.TextBox> Steuerelement einzufügen. Diese Methode überschreibt <xref:System.Web.UI.WebControls.WebControl.AddAttributesToRender%2A?displayProperty=nameWithType>.



## Examples
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie die <xref:System.Web.UI.WebControls.TextBox.AddAttributesToRender%2A>-Methode in einem benutzerdefinierten Server Steuerelement überschreiben, sodass der <xref:System.Web.UI.WebControls.TextBox> Steuerelement Text immer fett angezeigt wird.

> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).

 [!code-aspx-csharp[CustomTextBoxAddAttributesToRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomTextBoxAddAttributesToRender/CS/custom_textbox_addattributestorendercs.aspx#1)]
 [!code-aspx-vb[CustomTextBoxAddAttributesToRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomTextBoxAddAttributesToRender/VB/custom_textbox_addattributestorendervb.aspx#1)]

 [!code-csharp[CustomTextBoxAddAttributesToRender#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomTextBoxAddAttributesToRender/CS/custom_textbox_addattributestorender.cs#2)]
 [!code-vb[CustomTextBoxAddAttributesToRender#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomTextBoxAddAttributesToRender/VB/custom_textbox_addattributestorender.vb#2)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddParsedSubObject">
      <MemberSignature Language="C#" Value="protected override void AddParsedSubObject (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddParsedSubObject(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TextBox.AddParsedSubObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddParsedSubObject (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddParsedSubObject(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.AddParsedSubObject : obj -&gt; unit" Usage="textBox.AddParsedSubObject obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Ein <see cref="T:System.Object" />, das das analysierte Element darstellt.</param>
        <summary>Wird überschrieben, um nur das Hinzufügen von literalen Steuerelementen als <see cref="P:System.Web.UI.WebControls.TextBox.Text" />-Eigenschaft zuzulassen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie die <xref:System.Web.UI.WebControls.TextBox.AddParsedSubObject%2A>-Methode in einem benutzerdefinierten Server Steuerelement überschreiben, sodass die <xref:System.Web.UI.WebControls.TextBox.Text%2A>-Eigenschaft immer auf die `Text`-Eigenschaft des analysierten Objekts festgelegt wird, wenn das analysierte Objekt ein <xref:System.Web.UI.WebControls.Literal> Steuerelement ist, und andernfalls eine Ausnahme auslöst.

> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).

 [!code-aspx-csharp[CustomTextBoxAddParsedSubObject#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomTextBoxAddParsedSubObject/CS/custom_textbox_addparsedsubobjectcs.aspx#1)]
 [!code-aspx-vb[CustomTextBoxAddParsedSubObject#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomTextBoxAddParsedSubObject/VB/custom_textbox_addparsedsubobjectvb.aspx#1)]

 [!code-csharp[CustomTextBoxAddParsedSubObject#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomTextBoxAddParsedSubObject/CS/custom_textbox_addparsedsubobject.cs#2)]
 [!code-vb[CustomTextBoxAddParsedSubObject#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomTextBoxAddParsedSubObject/VB/custom_textbox_addparsedsubobject.vb#2)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><paramref name="obj" /> ist nicht vom Typ <see cref="T:System.Web.UI.LiteralControl" />.</exception>
        <altmember cref="M:System.Web.UI.Control.AddParsedSubObject(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="AutoCompleteType">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.AutoCompleteType AutoCompleteType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.AutoCompleteType AutoCompleteType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TextBox.AutoCompleteType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AutoCompleteType As AutoCompleteType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::AutoCompleteType AutoCompleteType { System::Web::UI::WebControls::AutoCompleteType get(); void set(System::Web::UI::WebControls::AutoCompleteType value); };" />
      <MemberSignature Language="F#" Value="member this.AutoCompleteType : System.Web.UI.WebControls.AutoCompleteType with get, set" Usage="System.Web.UI.WebControls.TextBox.AutoCompleteType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.AutoCompleteType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der das Verhalten für AutoVervollständigen des <see cref="T:System.Web.UI.WebControls.TextBox" />-Steuerelements angibt, oder legt diesen fest.</summary>
        <value>Einer der <see cref="T:System.Web.UI.WebControls.AutoCompleteType" />-Enumerationswerte, der das AutoVervollständigungsverhalten für das <see cref="T:System.Web.UI.WebControls.TextBox" />-Steuerelement angibt. Standardwert: <see cref="F:System.Web.UI.WebControls.AutoCompleteType.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Um die Dateneingabe zu unterstützen, unterstützen Microsoft Internet Explorer 5 oder höher und einige andere Browser ein Feature, das als Auto Vervollständigen bezeichnet wird. AutoComplete überwacht ein Textfeld und erstellt eine Liste der Werte, die vom Benutzer eingegeben wurden. Wenn der Benutzer zu einem späteren Zeitpunkt in das Textfeld zurückkehrt, wird die Liste angezeigt. Anstatt einen zuvor eingegebenen Wert erneut einzugeben, kann der Benutzer einfach den Wert aus dieser Liste auswählen. Verwenden Sie die <xref:System.Web.UI.WebControls.TextBox.AutoCompleteType%2A>-Eigenschaft, um das Verhalten der Funktion "Auto Vervollständigen" für ein <xref:System.Web.UI.WebControls.TextBox> Steuerelement zu steuern. Die <xref:System.Web.UI.WebControls.AutoCompleteType?displayProperty=nameWithType>-Enumeration wird verwendet, um die Werte darzustellen, die Sie auf die <xref:System.Web.UI.WebControls.TextBox.AutoCompleteType%2A>-Eigenschaft anwenden können.

> [!NOTE]
>  Nicht alle Browser unterstützen die Funktion "autocomplete". Überprüfen Sie die Kompatibilität mit Ihrem Browser.

 Standardmäßig wird die <xref:System.Web.UI.WebControls.TextBox.AutoCompleteType%2A>-Eigenschaft für ein <xref:System.Web.UI.WebControls.TextBox>-Steuerelement auf `AutoCompleteType.None`festgelegt. Mit dieser Einstellung teilt das <xref:System.Web.UI.WebControls.TextBox>-Steuerelement die Liste mit anderen <xref:System.Web.UI.WebControls.TextBox>-Steuerelementen mit derselben <xref:System.Web.UI.Control.ID%2A>-Eigenschaft auf verschiedenen Seiten. Sie können eine Liste auch für <xref:System.Web.UI.WebControls.TextBox> Steuerelemente auf der Grundlage einer Kategorie freigeben, anstelle einer <xref:System.Web.UI.Control.ID%2A>-Eigenschaft. Wenn Sie die <xref:System.Web.UI.WebControls.TextBox.AutoCompleteType%2A>-Eigenschaft auf einen der Kategoriewerte (z. b. `AutoCompleteType.FirstName`, `AutoCompleteType.LastName`usw.) festlegen, haben alle <xref:System.Web.UI.WebControls.TextBox> Steuerelemente mit derselben Kategorie dieselbe Liste. Sie können die Funktion "Auto Vervollständigen" für ein <xref:System.Web.UI.WebControls.TextBox> Steuerelement deaktivieren, indem Sie die Eigenschaft <xref:System.Web.UI.WebControls.TextBox.AutoCompleteType%2A> auf `AutoCompleteType.Disabled`festlegen.

 Ausführliche Informationen zum Konfigurieren und Aktivieren der Funktion "autocomplete" finden Sie in der Browser Dokumentation. Um beispielsweise die Funktion "Auto Vervollständigen" in Internet Explorer Version 5 oder höher zu aktivieren, wählen Sie im **Menü Extras die** **Option Internet Optionen** aus, und wählen Sie dann die Registerkarte **Inhalt** aus. Klicken Sie auf die Schaltfläche **Auto Vervollständigen** , um die verschiedenen Browseroptionen für das Auto Vervollständigen-Feature anzuzeigen und zu ändern

 Weitere Informationen zur Funktion "autocomplete" in Internet Explorer finden [Sie unter Verwenden von AutoComplete in HTML-Formularen](https://go.microsoft.com/fwlink/?LinkId=163828) in der [MSDN Library](https://go.microsoft.com/fwlink/?linkid=37118).

 Diese Eigenschaft kann nicht durch Designs oder Stylesheetdesigns festgelegt werden. Weitere Informationen finden Sie unter <xref:System.Web.UI.ThemeableAttribute> und [ASP.NET-Designs und Skins](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100)).



## Examples
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.AutoCompleteType>-Enumeration verwendet wird, um die AutoComplete-Kategorie für ein <xref:System.Web.UI.WebControls.TextBox> Steuerelement anzugeben.

> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).

 [!code-aspx-csharp[AutoCompleteType#1](~/samples/snippets/csharp/VS_Snippets_WebNet/AutoCompleteType/CS/AutoCompleteTypecs.aspx#1)]
 [!code-aspx-vb[AutoCompleteType#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/AutoCompleteType/VB/AutoCompleteTypevb.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der ausgewählte Wert ist keiner der <see cref="T:System.Web.UI.WebControls.AutoCompleteType" />-Enumerationswerte.</exception>
        <altmember cref="T:System.Web.UI.WebControls.AutoCompleteType" />
      </Docs>
    </Member>
    <Member MemberName="AutoPostBack">
      <MemberSignature Language="C#" Value="public virtual bool AutoPostBack { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoPostBack" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TextBox.AutoPostBack" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AutoPostBack As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutoPostBack { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoPostBack : bool with get, set" Usage="System.Web.UI.WebControls.TextBox.AutoPostBack" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob ein automatisches Postback an den Server erfolgt, wenn das <see cref="T:System.Web.UI.WebControls.TextBox" />-Steuerelement den Fokus verliert, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn ein automatisches Postback auftritt, wenn das <see cref="T:System.Web.UI.WebControls.TextBox" />-Steuerelement den Fokus verliert, andernfalls <see langword="false" />. Der Standardwert lautet <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Verwenden Sie die <xref:System.Web.UI.WebControls.TextBox.AutoPostBack%2A>-Eigenschaft, um anzugeben, ob ein automatisches Postback an den Server erfolgt, wenn das <xref:System.Web.UI.WebControls.TextBox> Steuerelement den Fokus verliert. Das Drücken der EINGABETASTE oder der Tab-Taste im <xref:System.Web.UI.WebControls.TextBox> Steuerelement ist die gängigste Methode, um den Fokus zu ändern.

> [!NOTE]
>  Wenn der übergeordnete Container des <xref:System.Web.UI.WebControls.TextBox> Steuer Elements eine Schaltfläche enthält, die als Standard Schaltfläche markiert ist (z. b. wenn die <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A>-oder <xref:System.Web.UI.WebControls.Panel.DefaultButton%2A>-Eigenschaft des Containers festgelegt ist), wird das `Click` Ereignis der Standard Schaltfläche nicht als Antwort auf das automatische Postback ausgelöst.

 Diese Eigenschaft kann nicht durch Designs oder Stylesheetdesigns festgelegt werden. Weitere Informationen finden Sie unter <xref:System.Web.UI.ThemeableAttribute> und [ASP.NET-Designs und Skins](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100)).



## Examples
 Im folgenden Beispiel wird gezeigt, wie die <xref:System.Web.UI.WebControls.TextBox.AutoPostBack%2A>-Eigenschaft verwendet wird, um die Summe der in den Textfeldern eingegebenen Werte automatisch anzuzeigen, wenn das <xref:System.Web.UI.WebControls.TextBox> Steuerelement den Fokus verliert.

> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).

 [!code-aspx-csharp[TextBoxAutoPostBack#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TextBoxAutoPostBack/CS/textboxautopostbackcs.aspx#1)]
 [!code-aspx-vb[TextBoxAutoPostBack#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TextBoxAutoPostBack/VB/textboxautopostbackvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.TextBox.TextChanged" />
        <altmember cref="M:System.Web.UI.WebControls.TextBox.OnTextChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="CausesValidation">
      <MemberSignature Language="C#" Value="public virtual bool CausesValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CausesValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TextBox.CausesValidation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CausesValidation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CausesValidation { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CausesValidation : bool with get, set" Usage="System.Web.UI.WebControls.TextBox.CausesValidation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob eine Validierung durchgeführt wird, wenn das <see cref="T:System.Web.UI.WebControls.TextBox" />-Steuerelement so eingestellt ist, dass im Falle eines Postbacks eine Validierung erfolgt, oder legt diesen Wert fest.</summary>
        <value><see langword="true" />, wenn eine Validierung durchgeführt wird, wenn das <see cref="T:System.Web.UI.WebControls.TextBox" />-Steuerelement so eingestellt ist, dass im Falle eines Postbacks eine Validierung erfolgt, andernfalls <see langword="false" />. Standardwert: <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Verwenden Sie die <xref:System.Web.UI.WebControls.TextBox.CausesValidation%2A>-Eigenschaft, um zu bestimmen, ob die Überprüfung sowohl auf dem Client als auch auf dem Server ausgeführt wird, wenn ein <xref:System.Web.UI.WebControls.TextBox>-Steuerelement festgelegt ist, um die Überprüfung Die Seiten Validierung bestimmt, ob die Eingabe Steuerelemente, die einem Validierungs Steuerelement auf der Seite zugeordnet sind, die vom Validierungs Steuerelement angegebenen Validierungsregeln bestehen.

 Standardmäßig bewirkt ein <xref:System.Web.UI.WebControls.TextBox> Steuerelement keine Seiten Überprüfung, wenn das Steuerelement den Fokus verliert. Um das <xref:System.Web.UI.WebControls.TextBox> Steuerelement für die Überprüfung des Postbacks festzulegen, legen Sie die Eigenschaft <xref:System.Web.UI.WebControls.TextBox.CausesValidation%2A> auf `true` und die <xref:System.Web.UI.WebControls.TextBox.AutoPostBack%2A>-Eigenschaft auf `true`fest.

 Wenn der Wert der <xref:System.Web.UI.WebControls.TextBox.CausesValidation%2A>-Eigenschaft auf `true`festgelegt ist, können Sie auch die <xref:System.Web.UI.WebControls.TextBox.ValidationGroup%2A>-Eigenschaft verwenden, um den Namen der Validierungs Gruppe anzugeben, für die das <xref:System.Web.UI.WebControls.TextBox> Steuerelement eine Validierung veranlasst.

 Diese Eigenschaft kann nicht durch Designs oder Stylesheetdesigns festgelegt werden. Weitere Informationen finden Sie unter <xref:System.Web.UI.ThemeableAttribute> und [ASP.NET-Designs und Skins](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100)).

 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.Page.Validate" />
        <altmember cref="P:System.Web.UI.WebControls.CheckBox.ValidationGroup" />
      </Docs>
    </Member>
    <Member MemberName="Columns">
      <MemberSignature Language="C#" Value="public virtual int Columns { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Columns" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TextBox.Columns" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Columns As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Columns { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Columns : int with get, set" Usage="System.Web.UI.WebControls.TextBox.Columns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzeigebreite des Textfelds in Zeichen ab oder legt diese fest.</summary>
        <value>Die Anzeigebreite des Textfelds in Zeichen. Der Standardwert ist 0 (null) und bedeutet, dass die Eigenschaft nicht festgelegt wurde.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TextBox.Columns%2A>-Eigenschaft verwendet wird, um eine Breite von 2 Zeichen für das <xref:System.Web.UI.WebControls.TextBox> Steuerelement anzugeben.

> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).

 [!code-aspx-csharp[TextBox#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TextBox/CS/textboxcs.aspx#1)]
 [!code-aspx-vb[TextBox#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TextBox/VB/textboxvb.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der angegebene Wert ist kleiner als 0 (null).</exception>
        <altmember cref="P:System.Web.UI.WebControls.TextBox.Rows" />
        <altmember cref="P:System.Web.UI.WebControls.TextBox.MaxLength" />
      </Docs>
    </Member>
    <Member MemberName="LoadPostData">
      <MemberSignature Language="C#" Value="protected virtual bool LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TextBox.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection);" />
      <MemberSignature Language="F#" Value="abstract member LoadPostData : string * System.Collections.Specialized.NameValueCollection -&gt; bool&#xA;override this.LoadPostData : string * System.Collections.Specialized.NameValueCollection -&gt; bool" Usage="textBox.LoadPostData (postDataKey, postCollection)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="postDataKey">Der Index in der bereitgestellten Auflistung, die auf den zu ladenden Inhalt verweist.</param>
        <param name="postCollection">Die auf dem Server bereitgestellte Auflistung.</param>
        <summary>Verarbeitet die Postbackdaten für das <see cref="T:System.Web.UI.WebControls.TextBox" />-Steuerelement.</summary>
        <returns><see langword="true" />, wenn der gesendete Inhalt von der letzten Bereitstellung abweicht, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die <xref:System.Web.UI.WebControls.TextBox.LoadPostData%2A>-Methode überprüft, ob sich die Post Back Daten des <xref:System.Web.UI.WebControls.TextBox> Steuer Elements von dem vorherigen Wert unterscheiden, und wenn dies der Fall ist, lädt der Inhalt und gibt `true`zurück.

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IPostBackDataHandler" />
        <altmember cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      </Docs>
    </Member>
    <Member MemberName="MaxLength">
      <MemberSignature Language="C#" Value="public virtual int MaxLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TextBox.MaxLength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property MaxLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MaxLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxLength : int with get, set" Usage="System.Web.UI.WebControls.TextBox.MaxLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die maximal zulässige Anzahl von Zeichen im Textfeld ab oder legt diese fest.</summary>
        <value>Die maximal zulässige Anzahl von Zeichen im Textfeld. Der Standardwert ist 0 (null) und bedeutet, dass die Eigenschaft nicht festgelegt wurde.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Verwenden Sie die <xref:System.Web.UI.WebControls.TextBox.MaxLength%2A>-Eigenschaft, um die Anzahl von Zeichen einzuschränken, die im <xref:System.Web.UI.WebControls.TextBox> Steuerelement eingegeben werden können.

> [!NOTE]
>  Diese Eigenschaft ist nur anwendbar, wenn die <xref:System.Web.UI.WebControls.TextBox.TextMode%2A>-Eigenschaft auf `TextBoxMode.SingleLine` oder `TextBoxMode.Password`festgelegt ist.

 Diese Eigenschaft kann nicht durch Designs oder Stylesheetdesigns festgelegt werden. Weitere Informationen finden Sie unter <xref:System.Web.UI.ThemeableAttribute> und [ASP.NET-Designs und Skins](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100)).



## Examples
 Für dieses Thema steht ein Visual Studio-Website Projekt mit Quellcode zur Verfügung: [herunterladen](https://go.microsoft.com/fwlink/?LinkId=192423).

 Im folgenden Codebeispiel wird veranschaulicht, wie das <xref:System.Web.UI.WebControls.TextBox>-Steuerelement verwendet wird, um Benutzereingaben zu erhalten. Wenn der Benutzer auf die Schaltfläche **Hinzufügen** klickt, wird die Summe der in die Textfelder eingegebenen Werte angezeigt.

> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).

```csharp
<%@ Page Language="C#" AutoEventWireup="True" %>

<!DOCTYPE html>
<html>

<head>
    <title>TextBox Example</title>
    <script runat="server">
      protected void AddButton_Click(Object sender, EventArgs e)
      {
         int Answer;
         Answer = Convert.ToInt32(Value1.Text) + Convert.ToInt32(Value2.Text);
         AnswerMessage.Text = Answer.ToString();
      }
    </script>
</head>
<body>
  <form id="form1" runat="server">
    <h3> TextBox Example </h3>
    <p>
        <asp:TextBox ID="Value1" Columns="2" MaxLength="3" Text="1" runat="server"/>
        +
        <asp:TextBox ID="Value2" Columns="2" MaxLength="3" Text="1" runat="server"/>
        =
        <asp:Label ID="AnswerMessage" runat="server"/>
    </p>
    <p>
        <asp:Button ID="AddButton" Text="Add" OnClick="AddButton_Click" runat="server"/>
    </p>
    <p>
        <asp:RequiredFieldValidator ID="Value1RequiredValidator" ControlToValidate="Value1"
             ErrorMessage="Please enter a value.<br />" Display="Dynamic"
             runat="server"/>
        <asp:RequiredFieldValidator ID="Value2RequiredValidator" ControlToValidate="Value2"
             ErrorMessage="Please enter a value.<br />" Display="Dynamic"
             runat="server"/>
        <asp:RangeValidator ID="Value1RangeValidator" ControlToValidate="Value1"
             Type="Integer" MinimumValue="1" MaximumValue="100" Display="Dynamic"
             ErrorMessage="Please enter an integer <br /> between than 1 and 100.<br />"
             runat="server"/>
        <asp:RangeValidator ID="Value2RangeValidator" ControlToValidate="Value2"
             Type="Integer" MinimumValue="1" MaximumValue="100" Display="Dynamic"
             ErrorMessage="Please enter an integer <br /> between than 1 and 100.<br />"
             runat="server"/>
    </p>
  </form>
</body>
</html>
```

```vb
<%@ Page Language="vb" AutoEventWireup="false" %>

<!DOCTYPE html>
<html>

<head>
    <title>TextBox Example</title>
    <script runat="server">
        Protected Sub AddButton_Click(sender As Object, e As EventArgs)
            Dim Answer As Integer
            Answer = Convert.ToInt32(Value1.Text) + Convert.ToInt32(Value2.Text)
            AnswerMessage.Text = Answer.ToString()
        End Sub
    </script>
</head>
<body>
  <form id="form1" runat="server">
    <h3> TextBox Example </h3>
    <p>
        <asp:TextBox ID="Value1" Columns="2" MaxLength="3" Text="1" runat="server"/>
        +
        <asp:TextBox ID="Value2" Columns="2" MaxLength="3" Text="1" runat="server"/>
        =
        <asp:Label ID="AnswerMessage" runat="server"/>
    </p>
    <p>
        <asp:Button ID="AddButton" Text="Add" OnClick="AddButton_Click" runat="server"/>
    </p>
    <p>
        <asp:RequiredFieldValidator ID="Value1RequiredValidator" ControlToValidate="Value1"
             ErrorMessage="Please enter a value.<br />" Display="Dynamic"
             runat="server"/>
        <asp:RequiredFieldValidator ID="Value2RequiredValidator" ControlToValidate="Value2"
             ErrorMessage="Please enter a value.<br />" Display="Dynamic"
             runat="server"/>
        <asp:RangeValidator ID="Value1RangeValidator" ControlToValidate="Value1"
             Type="Integer" MinimumValue="1" MaximumValue="100" Display="Dynamic"
             ErrorMessage="Please enter an integer <br /> between than 1 and 100.<br />"
             runat="server"/>
        <asp:RangeValidator ID="Value2RangeValidator" ControlToValidate="Value2"
             Type="Integer" MinimumValue="1" MaximumValue="100" Display="Dynamic"
             ErrorMessage="Please enter an integer <br /> between than 1 and 100.<br />"
             runat="server"/>
    </p>
  </form>
</body>
</html>
```

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der angegebene Wert ist kleiner als 0 (null).</exception>
        <altmember cref="P:System.Web.UI.WebControls.TextBox.TextMode" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected override void OnPreRender (EventArgs e);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TextBox.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPreRender (e As EventArgs)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPreRender(EventArgs ^ e);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="textBox.OnPreRender e" />
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Eine <see cref="T:System.EventArgs" />-Klasse, die die Ereignisdaten enthält.</param>
        <summary>Registriert ein Clientskript für das Generieren von Postbackereignissen vor dem Rendern auf dem Client, wenn <see cref="P:System.Web.UI.WebControls.TextBox.AutoPostBack" /><see langword="true" /> ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TextBox.OnPreRender%2A>-Methode überschrieben wird, sodass Sie immer einen einpunktrahmen in einem benutzerdefinierten <xref:System.Web.UI.WebControls.TextBox> Server-Steuerelement anzeigt.

> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).

 [!code-aspx-csharp[CustomTextBoxOnPreRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomTextBoxOnPreRender/CS/custom_textbox_onprerendercs.aspx#1)]
 [!code-aspx-vb[CustomTextBoxOnPreRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomTextBoxOnPreRender/VB/custom_textbox_onprerendervb.aspx#1)]

 [!code-csharp[CustomTextBoxOnPreRender#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomTextBoxOnPreRender/CS/custom_textbox_onprerender.cs#2)]
 [!code-vb[CustomTextBoxOnPreRender#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomTextBoxOnPreRender/VB/custom_textbox_onprerender.vb#2)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTextChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnTextChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTextChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TextBox.OnTextChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTextChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTextChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTextChanged : EventArgs -&gt; unit&#xA;override this.OnTextChanged : EventArgs -&gt; unit" Usage="textBox.OnTextChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.TextBox.TextChanged" />-Ereignis aus. Dadurch können Sie das Ereignis direkt behandeln.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Das <xref:System.Web.UI.WebControls.TextBox.TextChanged>-Ereignis wird ausgelöst, wenn der Inhalt des Textfelds zwischen den Beiträgen zum Server geändert wird.

> [!NOTE]
>  Ein <xref:System.Web.UI.WebControls.TextBox>-Steuerelement muss einige Werte zwischen den Beiträgen auf dem Server beibehalten, damit dieses Ereignis ordnungsgemäß funktioniert. Stellen Sie sicher, dass der Ansichts Zustand für dieses Steuerelement aktiviert ist.

 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).

 Mit der <xref:System.Web.UI.WebControls.TextBox.OnTextChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.



## Examples
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TextBox.OnTextChanged%2A>-Methode überschrieben wird, sodass ein benutzerdefiniertes <xref:System.Web.UI.WebControls.TextBox> Server-Steuerelement immer als geändert markiert wird.

> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).

 [!code-aspx-csharp[CustomTextBoxOnTextChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomTextBoxOnTextChanged/CS/custom_textbox_ontextchangedcs.aspx#1)]
 [!code-aspx-vb[CustomTextBoxOnTextChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomTextBoxOnTextChanged/VB/custom_textbox_ontextchangedvb.aspx#1)]

 [!code-csharp[CustomTextBoxOnTextChanged#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomTextBoxOnTextChanged/CS/custom_textbox_ontextchanged.cs#2)]
 [!code-vb[CustomTextBoxOnTextChanged#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomTextBoxOnTextChanged/VB/custom_textbox_ontextchanged.vb#2)]

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Web.UI.WebControls.TextBox.OnTextChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Web.UI.WebControls.TextBox.OnTextChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.TextBox.TextChanged" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TextBox.RaisePostDataChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostDataChangedEvent ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostDataChangedEvent();" />
      <MemberSignature Language="F#" Value="abstract member RaisePostDataChangedEvent : unit -&gt; unit&#xA;override this.RaisePostDataChangedEvent : unit -&gt; unit" Usage="textBox.RaisePostDataChangedEvent " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft die <see cref="M:System.Web.UI.WebControls.TextBox.OnTextChanged(System.EventArgs)" />-Methode auf, wenn sich die bereitgestellten Daten für das <see cref="T:System.Web.UI.WebControls.TextBox" />-Steuerelement geändert haben.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die <xref:System.Web.UI.WebControls.TextBox.RaisePostDataChangedEvent%2A>-Methode ruft die <xref:System.Web.UI.WebControls.TextBox.OnTextChanged%2A>-Methode auf, wenn sich die übermittelten Daten für das <xref:System.Web.UI.WebControls.TextBox> Steuerelement geändert haben. Wenn die <xref:System.Web.UI.WebControls.TextBox.CausesValidation%2A>-Eigenschaft `true`ist, werden die Steuerelemente in der Validierungs Gruppe, die in der <xref:System.Web.UI.WebControls.TextBox.ValidationGroup%2A>-Eigenschaft festgelegt ist, überprüft.

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IPostBackDataHandler" />
        <altmember cref="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" />
        <altmember cref="M:System.Web.UI.WebControls.TextBox.OnTextChanged(System.EventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.TextBox.CausesValidation" />
        <altmember cref="P:System.Web.UI.WebControls.TextBox.ValidationGroup" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TextBox.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReadOnly : bool with get, set" Usage="System.Web.UI.WebControls.TextBox.ReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Inhalt des <see cref="T:System.Web.UI.WebControls.TextBox" />-Steuerelements geändert werden kann, oder legt diesen Wert fest.</summary>
        <value><see langword="true" />, wenn der Inhalt des <see cref="T:System.Web.UI.WebControls.TextBox" />-Steuerelements nicht geändert werden kann, andernfalls <see langword="false" />. Standardwert: <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Verwenden Sie die <xref:System.Web.UI.WebControls.TextBox.ReadOnly%2A>-Eigenschaft, um anzugeben, ob der Inhalt des <xref:System.Web.UI.WebControls.TextBox> Steuer Elements geändert werden kann. Wenn diese Eigenschaft auf `true` festgelegt wird, wird verhindert, dass Benutzer einen Wert eingeben oder den vorhandenen Wert ändern. Beachten Sie, dass der Benutzer des <xref:System.Web.UI.WebControls.TextBox>-Steuer Elements diese Eigenschaft nicht ändern kann. nur der Entwickler kann.

> [!IMPORTANT]
>  Der <xref:System.Web.UI.WebControls.TextBox.Text%2A> Wert eines <xref:System.Web.UI.WebControls.TextBox> Steuer Elements, bei dem die Eigenschaft <xref:System.Web.UI.WebControls.TextBox.ReadOnly%2A> auf `true` festgelegt ist, wird bei einem Postback an den Server gesendet. der Server verarbeitet jedoch kein Schreib geschütztes Textfeld. Dadurch wird verhindert, dass ein böswilliger Benutzer einen schreibgeschützten <xref:System.Web.UI.WebControls.TextBox.Text%2A> Wert ändert. Der Wert der <xref:System.Web.UI.WebControls.TextBox.Text%2A>-Eigenschaft wird im Ansichts Zustand zwischen Postbacks beibehalten, es sei denn, er wird durch serverseitigen Code geändert.

 Diese Eigenschaft kann nicht durch Designs oder Stylesheetdesigns festgelegt werden. Weitere Informationen finden Sie unter <xref:System.Web.UI.ThemeableAttribute> und [ASP.NET-Designs und Skins](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100)).



## Examples
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TextBox.ReadOnly%2A>-Eigenschaft verwendet wird, um Änderungen an dem im <xref:System.Web.UI.WebControls.TextBox>-Steuerelement angezeigten Text zu verhindern.

> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).

 [!code-aspx-csharp[TextBoxMultiLine#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TextBoxMultiLine/CS/multilinetextboxcs.aspx#1)]
 [!code-aspx-vb[TextBoxMultiLine#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TextBoxMultiLine/VB/multilinetextboxvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TextBox.MaxLength" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected override void Render (System.Web.UI.HtmlTextWriter writer);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TextBox.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Render (writer As HtmlTextWriter)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="textBox.Render writer" />
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Der <see cref="T:System.Web.UI.HtmlTextWriter" /> , der die gerenderte Ausgabe empfängt.</param>
        <summary>Rendert das <see cref="T:System.Web.UI.WebControls.TextBox" />-Steuerelement in das angegebene <see cref="T:System.Web.UI.HtmlTextWriter" />-Objekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die <xref:System.Web.UI.WebControls.TextBox.Render%2A>-Methode rendert das Starttag und das Endtag des <xref:System.Web.UI.WebControls.TextBox> Steuer Elements für die Ausgabe auf dem Client in das <xref:System.Web.UI.HtmlTextWriter>-Objekt. Wenn die <xref:System.Web.UI.WebControls.TextBox.TextMode%2A>-Eigenschaft auf <xref:System.Web.UI.WebControls.TextBoxMode.MultiLine>festgelegt ist, wird der Inhalt des <xref:System.Web.UI.WebControls.TextBox>-Steuer Elements als HTML-`<textarea>` Element gerendert.

 Die <xref:System.Web.UI.WebControls.TextBox.Render%2A>-Methode wird hauptsächlich von Steuerelement Entwicklern verwendet, die die Funktionalität des <xref:System.Web.UI.WebControls.TextBox> Steuer Elements erweitern.



## Examples
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie die <xref:System.Web.UI.WebControls.TextBox.Render%2A>-Methode in einem benutzerdefinierten Server Steuerelement überschreiben, damit das <xref:System.Web.UI.WebControls.TextBox>-Steuerelement immer mit einem Bild angezeigt wird.

> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).

 [!code-aspx-csharp[CustomTextBoxRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomTextBoxRender/CS/custom_textbox_rendercs.aspx#1)]
 [!code-aspx-vb[CustomTextBoxRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomTextBoxRender/VB/custom_textbox_rendervb.aspx#1)]

 [!code-csharp[CustomTextBoxRender#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomTextBoxRender/CS/custom_textbox_render.cs#2)]
 [!code-vb[CustomTextBoxRender#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomTextBoxRender/VB/custom_textbox_render.vb#2)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TextBox.TextMode" />
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="Rows">
      <MemberSignature Language="C#" Value="public virtual int Rows { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Rows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TextBox.Rows" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Rows As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Rows { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Rows : int with get, set" Usage="System.Web.UI.WebControls.TextBox.Rows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl von Zeilen ab, die in einem mehrzeiligen Textfeld angezeigt werden.</summary>
        <value>Die Anzahl von Zeilen in einem mehrzeiligen Textfeld. Der Standardwert ist 0 (null) und gilt für die Anzeige eines zweizeiligen Textfelds.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Verwenden Sie die <xref:System.Web.UI.WebControls.TextBox.Rows%2A>-Eigenschaft, um die Anzahl der Zeilen anzugeben, die in einem mehrzeiligen Textfeld angezeigt werden.

> [!NOTE]
>  Diese Eigenschaft ist nur anwendbar, wenn die <xref:System.Web.UI.WebControls.TextBox.TextMode%2A>-Eigenschaft auf `TextBoxMode.MultiLine`festgelegt ist.

 Diese Eigenschaft kann nicht durch Designs oder Stylesheetdesigns festgelegt werden. Weitere Informationen finden Sie unter <xref:System.Web.UI.ThemeableAttribute> und [ASP.NET-Designs und Skins](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100)).



## Examples
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TextBox.Rows%2A>-Eigenschaft verwendet wird, um eine Höhe von 5 Zeilen für ein mehrzeilige <xref:System.Web.UI.WebControls.TextBox> Steuerelement anzugeben.

> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).

 [!code-aspx-csharp[TextBoxMultiLine#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TextBoxMultiLine/CS/multilinetextboxcs.aspx#1)]
 [!code-aspx-vb[TextBoxMultiLine#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TextBoxMultiLine/VB/multilinetextboxvb.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der ausgewählte Wert ist kleiner als 0.</exception>
        <altmember cref="P:System.Web.UI.WebControls.TextBox.Columns" />
        <altmember cref="P:System.Web.UI.WebControls.TextBox.TextMode" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TextBox.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="textBox.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Speichert die Änderungen am Ansichtszustand des Textfelds ab dem Zeitpunkt, an dem die Seite an den Server zurückgesendet wurde.</summary>
        <returns>Das <see cref="T:System.Object" />, das die Änderungen am Ansichtszustand von <see cref="T:System.Web.UI.WebControls.TextBox" /> enthält. Wenn dem Objekt kein Ansichtszustand zugeordnet wurde, gibt diese Methode <see langword="null" /> zurück.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Diese Methode wird hauptsächlich von Steuerelemententwicklern verwendet.

 Der Ansichts Zustand ist die Ansammlung der Werte der Eigenschaften eines Server Steuer Elements. Diese Werte werden automatisch in der <xref:System.Web.UI.Control.ViewState%2A>-Eigenschaft des Server Steuer Elements platziert, bei der es sich um eine Instanz der <xref:System.Web.UI.StateBag>-Klasse handelt. Der Wert dieser Eigenschaft wird dann in einem String-Objekt nach der Phase Zustands speichern des Lebenszyklus des Server Steuer Elements persistent gespeichert. Weitere Informationen finden Sie unter [ASP.NET Application Lifecycle Overview for IIS 5,0 and 6,0](https://msdn.microsoft.com/library/de0d8a1c-b1bc-48e1-b246-26e32289a82f).

 Wenn der Ansichts Zustand gespeichert wird, wird dieses Zeichen folgen Objekt als Variable, die in einem ausgeblendeten HTML-Eingabe Element gespeichert ist, an den Client zurückgegeben. Wenn Sie benutzerdefinierte Server Steuerelemente erstellen, können Sie die Effizienz verbessern, indem Sie diese Methode überschreiben und die `ViewState`-Eigenschaft des Server Steuer Elements ändern. Weitere Informationen finden Sie unter [ASP.net State Management Overview](https://docs.microsoft.com/previous-versions/aspnet/75x4ha6s(v=vs.100)).

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebControl.LoadViewState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.LoadPostData">
      <MemberSignature Language="C#" Value="bool IPostBackDataHandler.LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Web.UI.IPostBackDataHandler.LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TextBox.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean Implements IPostBackDataHandler.LoadPostData" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Web.UI.IPostBackDataHandler.LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection) = System::Web::UI::IPostBackDataHandler::LoadPostData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">Der Index in der bereitgestellten Auflistung, die auf den zu ladenden Inhalt verweist.</param>
        <param name="postCollection">Die auf dem Server bereitgestellte Auflistung.</param>
        <summary>Lädt den bereitgestellten Textfeldinhalt, sofern sich dieser nach der letzten Übertragung geändert hat.</summary>
        <returns><see langword="true" />, wenn der gesendete Inhalt von der letzten Bereitstellung abweicht, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Dieser Member ist eine explizite Schnittstellen-Memberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.UI.WebControls.TextBox>-Instanz in eine <xref:System.Web.UI.IPostBackDataHandler>-Schnittstelle umgewandelt wird.

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IPostBackDataHandler" />
        <altmember cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="void IPostBackDataHandler.RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TextBox.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostDataChangedEvent () Implements IPostBackDataHandler.RaisePostDataChangedEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() = System::Web::UI::IPostBackDataHandler::RaisePostDataChangedEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft die <see cref="M:System.Web.UI.WebControls.TextBox.OnTextChanged(System.EventArgs)" />-Methode immer dann auf, wenn bereitgestellte Daten für das Textfeld geändert wurden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Dieser Member ist eine explizite Schnittstellen-Memberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.UI.WebControls.TextBox>-Instanz in eine <xref:System.Web.UI.IPostBackDataHandler>-Schnittstelle umgewandelt wird.

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IPostBackDataHandler" />
        <altmember cref="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" />
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TextBox.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); };" />
      <MemberSignature Language="F#" Value="member this.TagKey : System.Web.UI.HtmlTextWriterTag" Usage="System.Web.UI.WebControls.TextBox.TagKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das HTML-Tag für das Textfeld-Steuerelement ab. Diese Eigenschaft ist geschützt.</summary>
        <value><see cref="F:System.Web.UI.HtmlTextWriterTag.Textarea" />, wenn das Textfeld mehrzeilig ist, andernfalls <see cref="F:System.Web.UI.HtmlTextWriterTag.Input" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 Im folgenden Codebeispiel wird veranschaulicht, wie mit der <xref:System.Web.UI.WebControls.TextBox.TagKey%2A>-Eigenschaft ein benutzerdefiniertes Textfeld erstellt wird.

> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).

 [!code-aspx-csharp[CustomTextBoxTagKey#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomTextBoxTagKey/CS/custom_textbox_tagkeycs.aspx#1)]
 [!code-aspx-vb[CustomTextBoxTagKey#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomTextBoxTagKey/VB/custom_textbox_tagkeyvb.aspx#1)]

 [!code-csharp[CustomTextBoxTagKey#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomTextBoxTagKey/CS/custom_textbox_tagkey.cs#2)]
 [!code-vb[CustomTextBoxTagKey#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomTextBoxTagKey/VB/custom_textbox_tagkey.vb#2)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public virtual string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TextBox.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Web.UI.WebControls.TextBox.Text" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.ITextControl.Text</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.ComponentModel.Design.MultilineStringEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.EncodedInnerDefaultProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true, System.ComponentModel.BindingDirection.TwoWay)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.ComponentModel.Design.MultilineStringEditor,System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Textinhalt des <see cref="T:System.Web.UI.WebControls.TextBox" />-Steuerelements ab oder legt diesen fest.</summary>
        <value>Der im <see cref="T:System.Web.UI.WebControls.TextBox" />-Steuerelement angezeigte Text. Der Standardwert ist eine leere Zeichenfolge ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Verwenden Sie die <xref:System.Web.UI.WebControls.TextBox.Text%2A>-Eigenschaft, um den im <xref:System.Web.UI.WebControls.TextBox> Steuerelement angezeigten Text anzugeben oder zu bestimmen. Um die Anzahl von Zeichen einzuschränken, die vom Steuerelement akzeptiert werden, legen Sie die <xref:System.Web.UI.WebControls.TextBox.MaxLength%2A>-Eigenschaft fest. Wenn Sie verhindern möchten, dass der Text geändert wird, legen Sie die <xref:System.Web.UI.WebControls.TextBox.ReadOnly%2A>-Eigenschaft fest.

 Der Wert dieser Eigenschaft, wenn festgelegt, kann mithilfe eines Designers Tools automatisch zu einer Ressourcendatei gespeichert werden. Weitere Informationen finden Sie unter <xref:System.ComponentModel.LocalizableAttribute>-und [ASP.NET-Globalisierung und-Lokalisierung](https://docs.microsoft.com/previous-versions/aspnet/c6zyy3s9(v=vs.100)).

 Wenn das Textfeld gerendert wird, wird der Inhalt dieser Eigenschaft HTML-codiert. Wenn Sie diese Eigenschaft beispielsweise auf "\<b > Test\</b >" festlegen, wird im Browser "\<b > Test\</b >" und nicht "Test" in Fett Schrift angezeigt.



## Examples
 Im folgenden Codebeispiel wird veranschaulicht, wie das <xref:System.Web.UI.WebControls.TextBox>-Steuerelement verwendet wird, um Benutzereingaben zu erhalten. Wenn der Benutzer auf die Schaltfläche **Hinzufügen** klickt, wird die Summe der in die Textfelder eingegebenen Werte angezeigt.

> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).

```csharp
<%@ Page Language="C#" AutoEventWireup="True" %>

<!DOCTYPE html>
<html>

<head>
    <title>TextBox Example</title>
    <script runat="server">
      protected void AddButton_Click(Object sender, EventArgs e)
      {
         int Answer;
         Answer = Convert.ToInt32(Value1.Text) + Convert.ToInt32(Value2.Text);
         AnswerMessage.Text = Answer.ToString();
      }
    </script>
</head>
<body>
  <form id="form1" runat="server">
    <h3> TextBox Example </h3>
    <p>
        <asp:TextBox ID="Value1" Columns="2" MaxLength="3" Text="1" runat="server"/>
        +
        <asp:TextBox ID="Value2" Columns="2" MaxLength="3" Text="1" runat="server"/>
        =
        <asp:Label ID="AnswerMessage" runat="server"/>
    </p>
    <p>
        <asp:Button ID="AddButton" Text="Add" OnClick="AddButton_Click" runat="server"/>
    </p>
    <p>
        <asp:RequiredFieldValidator ID="Value1RequiredValidator" ControlToValidate="Value1"
             ErrorMessage="Please enter a value.<br />" Display="Dynamic"
             runat="server"/>
        <asp:RequiredFieldValidator ID="Value2RequiredValidator" ControlToValidate="Value2"
             ErrorMessage="Please enter a value.<br />" Display="Dynamic"
             runat="server"/>
        <asp:RangeValidator ID="Value1RangeValidator" ControlToValidate="Value1"
             Type="Integer" MinimumValue="1" MaximumValue="100" Display="Dynamic"
             ErrorMessage="Please enter an integer <br /> between than 1 and 100.<br />"
             runat="server"/>
        <asp:RangeValidator ID="Value2RangeValidator" ControlToValidate="Value2"
             Type="Integer" MinimumValue="1" MaximumValue="100" Display="Dynamic"
             ErrorMessage="Please enter an integer <br /> between than 1 and 100.<br />"
             runat="server"/>
    </p>
  </form>
</body>
</html>
```

```vb
<%@ Page Language="vb" AutoEventWireup="false" %>

<!DOCTYPE html>
<html>

<head>
    <title>TextBox Example</title>
    <script runat="server">
        Protected Sub AddButton_Click(sender As Object, e As EventArgs)
            Dim Answer As Integer
            Answer = Convert.ToInt32(Value1.Text) + Convert.ToInt32(Value2.Text)
            AnswerMessage.Text = Answer.ToString()
        End Sub
    </script>
</head>
<body>
  <form id="form1" runat="server">
    <h3> TextBox Example </h3>
    <p>
        <asp:TextBox ID="Value1" Columns="2" MaxLength="3" Text="1" runat="server"/>
        +
        <asp:TextBox ID="Value2" Columns="2" MaxLength="3" Text="1" runat="server"/>
        =
        <asp:Label ID="AnswerMessage" runat="server"/>
    </p>
    <p>
        <asp:Button ID="AddButton" Text="Add" OnClick="AddButton_Click" runat="server"/>
    </p>
    <p>
        <asp:RequiredFieldValidator ID="Value1RequiredValidator" ControlToValidate="Value1"
             ErrorMessage="Please enter a value.<br />" Display="Dynamic"
             runat="server"/>
        <asp:RequiredFieldValidator ID="Value2RequiredValidator" ControlToValidate="Value2"
             ErrorMessage="Please enter a value.<br />" Display="Dynamic"
             runat="server"/>
        <asp:RangeValidator ID="Value1RangeValidator" ControlToValidate="Value1"
             Type="Integer" MinimumValue="1" MaximumValue="100" Display="Dynamic"
             ErrorMessage="Please enter an integer <br /> between than 1 and 100.<br />"
             runat="server"/>
        <asp:RangeValidator ID="Value2RangeValidator" ControlToValidate="Value2"
             Type="Integer" MinimumValue="1" MaximumValue="100" Display="Dynamic"
             ErrorMessage="Please enter an integer <br /> between than 1 and 100.<br />"
             runat="server"/>
    </p>
  </form>
</body>
</html>
```

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TextBox.MaxLength" />
        <altmember cref="P:System.Web.UI.WebControls.TextBox.ReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="TextChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.TextBox.TextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TextChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TextChanged;" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="member this.TextChanged : EventHandler " Usage="member this.TextChanged : System.EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler ^ TextChanged;" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Web.UI.IEditableTextControl.TextChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn der Inhalt des Textfelds zwischen Übertragungen zum Server geändert wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Das <xref:System.Web.UI.WebControls.TextBox.TextChanged>-Ereignis wird ausgelöst, wenn der Inhalt des Textfelds zwischen den Beiträgen zum Server geändert wird. Das-Ereignis wird nur ausgelöst, wenn der Text vom Benutzer geändert wird. das-Ereignis wird nicht ausgelöst, wenn der Textprogramm gesteuert geändert wird.

> [!NOTE]
>  Ein <xref:System.Web.UI.WebControls.TextBox>-Steuerelement muss einige Werte zwischen den Beiträgen auf dem Server beibehalten, damit dieses Ereignis ordnungsgemäß funktioniert. Stellen Sie sicher, dass der Ansichts Zustand für dieses Steuerelement aktiviert ist.

 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).



## Examples
 Im folgenden Beispiel wird gezeigt, wie Sie mit diesem Ereignis auf Änderungen im <xref:System.Web.UI.WebControls.TextBox> Steuerelement reagieren können. Der Code zeigt den Inhalt der <xref:System.Web.UI.WebControls.TextBox.Text%2A>-Eigenschaft eines TextBox-Steuer Elements (textBox1) in einer Bezeichnung (so genannte Label1) an, wenn die `Text`-Eigenschaft geändert wird. Benutzereingaben auf einer Web Forms Seite können potenziell böswillige Client Skripts enthalten. Standardmäßig wird auf der Seite Web Forms überprüft, ob die Benutzereingabe keine Skript-oder HTML-Elemente enthält. Weitere Informationen finden Sie unter Gewusst [wie: schützen vor Skript Exploits in einer Webanwendung durch Anwenden der HTML-Codierung auf](https://docs.microsoft.com/previous-versions/aspnet/a2a4yykt(v=vs.100))Zeichen folgen.

```vb

Protected Sub TextBox1_TextChanged(ByVal sender As Object, _
        ByVal e As System.EventArgs) Handles TextBox1.TextChanged
   Label1.Text = Server.HtmlEncode(TextBox1.Text)
End Sub

```

```csharp
protected void TextBox1_TextChanged(object sender, EventArgs e)
{
   Label1.Text = Server.HtmlEncode(TextBox1.Text);
}

```

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TextBox.OnTextChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="TextMode">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TextBoxMode TextMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.TextBoxMode TextMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TextBox.TextMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TextMode As TextBoxMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TextBoxMode TextMode { System::Web::UI::WebControls::TextBoxMode get(); void set(System::Web::UI::WebControls::TextBoxMode value); };" />
      <MemberSignature Language="F#" Value="member this.TextMode : System.Web.UI.WebControls.TextBoxMode with get, set" Usage="System.Web.UI.WebControls.TextBox.TextMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TextBoxMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Verhaltensmodus (z.B. einzeilig, mehrzeilig oder Kennwort) des <see cref="T:System.Web.UI.WebControls.TextBox" />-Steuerelements ab oder legt diesen fest.</summary>
        <value>Einer der <see cref="T:System.Web.UI.WebControls.TextBoxMode" />-Enumerationswerte. Standardwert: <see langword="SingleLine" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Verwenden Sie die <xref:System.Web.UI.WebControls.TextBox.TextMode%2A>-Eigenschaft, um anzugeben, wie ein <xref:System.Web.UI.WebControls.TextBox> Steuerelement angezeigt wird. Drei allgemeine Optionen sind einzeilige, mehrzeilige oder Kennwort-Textfeld.

 Wenn sich das <xref:System.Web.UI.WebControls.TextBox> Steuerelement im mehrzeiligen Modus befindet, können Sie die Anzahl der angezeigten Zeilen steuern, indem Sie die <xref:System.Web.UI.WebControls.TextBox.Rows%2A>-Eigenschaft festlegen. Sie können auch angeben, ob der Text durch Festlegen der <xref:System.Web.UI.WebControls.TextBox.Wrap%2A>-Eigenschaft Wrap werden soll.

 Wenn sich das <xref:System.Web.UI.WebControls.TextBox> Steuerelement im Kenn Wort Modus befindet, werden alle Zeichen, die im Steuerelement eingegeben werden, maskiert.

 Diese Eigenschaft kann nicht durch Designs oder Stylesheetdesigns festgelegt werden. Weitere Informationen finden Sie unter <xref:System.Web.UI.ThemeableAttribute> und [ASP.NET-Designs und Skins](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100)).



## Examples
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TextBox.TextMode%2A>-Eigenschaft verwendet wird, um ein mehrzeilige Textfeld anzugeben.

> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).

 [!code-aspx-csharp[TextBoxMultiLine#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TextBoxMultiLine/CS/multilinetextboxcs.aspx#1)]
 [!code-aspx-vb[TextBoxMultiLine#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TextBoxMultiLine/VB/multilinetextboxvb.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der angegebene Modus gehört nicht zu den <see cref="T:System.Web.UI.WebControls.TextBoxMode" />-Enumerationswerten.</exception>
        <altmember cref="T:System.Web.UI.WebControls.TextBoxMode" />
        <altmember cref="P:System.Web.UI.WebControls.TextBox.Rows" />
        <altmember cref="P:System.Web.UI.WebControls.TextBox.Wrap" />
      </Docs>
    </Member>
    <Member MemberName="ValidationGroup">
      <MemberSignature Language="C#" Value="public virtual string ValidationGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValidationGroup" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TextBox.ValidationGroup" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ValidationGroup As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ValidationGroup { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ValidationGroup : string with get, set" Usage="System.Web.UI.WebControls.TextBox.ValidationGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Gruppe von Steuerelementen ab, für die das <see cref="T:System.Web.UI.WebControls.TextBox" />-Steuerelement eine Validierung erfordert, wenn es Daten an den Server zurücksendet, oder legt diese fest.</summary>
        <value>Die Gruppe von Steuerelementen, für die das <see cref="T:System.Web.UI.WebControls.TextBox" />-Steuerelement eine Validierung erfordert, wenn es Daten an den Server zurücksendet. Der Standardwert ist eine leere Zeichenfolge ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Validierungs Gruppen ermöglichen es Ihnen, Validierungs Steuerelemente auf einer Seite einer bestimmten Kategorie zuzuweisen. Jede Validierungs Gruppe kann unabhängig von anderen Validierungs Gruppen auf der Seite überprüft werden. Verwenden Sie die <xref:System.Web.UI.WebControls.TextBox.ValidationGroup%2A>-Eigenschaft, um den Namen der Validierungs Gruppe anzugeben, für die das <xref:System.Web.UI.WebControls.TextBox>-Steuerelement eine Validierung auslöst, wenn es an den Server zurückgesendet wird.

 Diese Eigenschaft hat nur dann Auswirkungen, wenn die <xref:System.Web.UI.WebControls.TextBox.CausesValidation%2A>-Eigenschaft auf `true`festgelegt ist. Wenn Sie einen Wert für die <xref:System.Web.UI.WebControls.TextBox.ValidationGroup%2A>-Eigenschaft angeben, werden nur die Validierungs Steuerelemente, die Teil der angegebenen Gruppe sind, überprüft, wenn der <xref:System.Web.UI.WebControls.TextBox> die Beiträge an den Server zurücksendet. Wenn Sie keinen Wert für diese Eigenschaft angeben und die <xref:System.Web.UI.WebControls.TextBox.CausesValidation%2A>-Eigenschaft auf `true`festgelegt ist, werden alle Validierungs Steuerelemente auf der Seite, die keiner Validierungs Gruppe zugewiesen sind, überprüft, wenn das Steuerelement an den Server zurückgesendet wird.

 Diese Eigenschaft kann nicht durch Designs oder Stylesheetdesigns festgelegt werden. Weitere Informationen finden Sie unter <xref:System.Web.UI.ThemeableAttribute> und [ASP.NET-Designs und Skins](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100)).

 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.Page.Validate" />
        <altmember cref="P:System.Web.UI.WebControls.TextBox.CausesValidation" />
        <altmember cref="T:System.Web.UI.WebControls.RequiredFieldValidator" />
      </Docs>
    </Member>
    <Member MemberName="Wrap">
      <MemberSignature Language="C#" Value="public virtual bool Wrap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Wrap" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TextBox.Wrap" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Wrap As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Wrap { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Wrap : bool with get, set" Usage="System.Web.UI.WebControls.TextBox.Wrap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Textinhalt in einem mehrzeiligen Textfeld umbrochen wird, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn der Textinhalt in einem mehrzeiligen Textfeld umbrochen wird, andernfalls <see langword="false" />. Der Standardwert lautet <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Verwenden Sie die <xref:System.Web.UI.WebControls.TextBox.Wrap%2A>-Eigenschaft, um anzugeben, ob der in einem mehrzeiligen <xref:System.Web.UI.WebControls.TextBox>-Steuerelement angezeigte Text automatisch in der nächsten Zeile fortgesetzt wird, wenn der Text das Ende des Steuer Elements erreicht.

> [!NOTE]
>  Diese Eigenschaft ist nur anwendbar, wenn die <xref:System.Web.UI.WebControls.TextBox.TextMode%2A>-Eigenschaft auf `TextBoxMode.MultiLine`festgelegt ist.



## Examples
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TextBox.Wrap%2A>-Eigenschaft verwendet wird, um den im <xref:System.Web.UI.WebControls.TextBox>-Steuerelement eingegebenen Text zu wrappen.

> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).

 [!code-aspx-csharp[TextBoxMultiLine#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TextBoxMultiLine/CS/multilinetextboxcs.aspx#1)]
 [!code-aspx-vb[TextBoxMultiLine#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TextBoxMultiLine/VB/multilinetextboxvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TextBox.TextMode" />
      </Docs>
    </Member>
  </Members>
</Type>
