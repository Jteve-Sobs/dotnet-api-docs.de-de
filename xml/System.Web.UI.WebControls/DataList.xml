<Type Name="DataList" FullName="System.Web.UI.WebControls.DataList">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f84d4dca5baa910c40952585c22d5f4148f67918" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37594870" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataList : System.Web.UI.WebControls.BaseDataList, System.Web.UI.INamingContainer, System.Web.UI.WebControls.IRepeatInfoUser" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataList extends System.Web.UI.WebControls.BaseDataList implements class System.Web.UI.INamingContainer, class System.Web.UI.WebControls.IRepeatInfoUser" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.DataList" />
  <TypeSignature Language="VB.NET" Value="Public Class DataList&#xA;Inherits BaseDataList&#xA;Implements INamingContainer, IRepeatInfoUser" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataList : System::Web::UI::WebControls::BaseDataList, System::Web::UI::INamingContainer, System::Web::UI::WebControls::IRepeatInfoUser" />
  <TypeSignature Language="F#" Value="type DataList = class&#xA;    inherit BaseDataList&#xA;    interface INamingContainer&#xA;    interface IRepeatInfoUser" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.BaseDataList</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.INamingContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IRepeatInfoUser</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.DataListDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataListComponentEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.ComponentEditor))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlValueProperty("SelectedValue")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Ein datengebundenes Listensteuerelement, das Elemente mithilfe von Vorlagen anzeigt.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In diesem Thema:  
  
-   [Introduction (Einführung)](#introduction)  
  
-   [Vorlagen](#templates)  
  
-   [Anpassen der Darstellung von dem DataList-Steuerelement](#customizing_the_appearance_of_the_datalist_control)  
  
-   [Anzeigen von Richtung und Layout](#display_direction_and_layout)  
  
-   [Sicherheit](#security)  
  
-   [Deklarative Syntax](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Einführung  
 Verwenden der <xref:System.Web.UI.WebControls.DataList> -Steuerelement zum Anzeigen der Vorlage definierten Daten gebundenen Liste. Die <xref:System.Web.UI.WebControls.DataList> -Steuerelement unterstützt wird, auswählen und bearbeiten.  
  
<a name="templates"></a>   
## <a name="templates"></a>Vorlagen  
 Den Inhalt der <xref:System.Web.UI.WebControls.DataList> Steuerelement mit Vorlagen bearbeitet werden kann. Die folgende Tabelle enthält die unterstützten Vorlagen.  
  
|Vorlagenname|Beschreibung |  
|-------------------|-----------------|  
|<xref:System.Web.UI.WebControls.DataList.AlternatingItemTemplate%2A>|Wenn definiert, stellt den Inhalt und Layout für abwechselnde Elemente im der <xref:System.Web.UI.WebControls.DataList>. Sofern nicht definiert, `ItemTemplate` verwendet wird.|  
|<xref:System.Web.UI.WebControls.DataList.EditItemTemplate%2A>|Wenn definiert, stellt den Inhalt und Layout für das Element, das gerade bearbeitet wird, der <xref:System.Web.UI.WebControls.DataList>. Sofern nicht definiert, `ItemTemplate` verwendet wird.|  
|<xref:System.Web.UI.WebControls.DataList.FooterTemplate%2A>|Wenn definiert, stellt den Inhalt und Layout für den Fußzeilenbereich des der <xref:System.Web.UI.WebControls.DataList>. Wenn Sie nicht definiert ist, wird ein Fußzeilenbereich nicht angezeigt.|  
|<xref:System.Web.UI.WebControls.DataList.HeaderTemplate%2A>|Wenn definiert, stellt den Inhalt und Layout für den Headerbereich des der <xref:System.Web.UI.WebControls.DataList>. Nicht definiert, wird ein Headerabschnitt nicht angezeigt werden.|  
|<xref:System.Web.UI.WebControls.DataList.ItemTemplate%2A>|Erforderliche Vorlage, die für Elemente im Inhalt und Layout bietet die <xref:System.Web.UI.WebControls.DataList>.|  
|<xref:System.Web.UI.WebControls.DataList.SelectedItemTemplate%2A>|Wenn definiert, stellt den Inhalt und Layout für das aktuell ausgewählte Element in der <xref:System.Web.UI.WebControls.DataList>. Sofern nicht definiert, <xref:System.Web.UI.WebControls.DataList.ItemTemplate%2A> verwendet wird.|  
|<xref:System.Web.UI.WebControls.DataList.SeparatorTemplate%2A>|Wenn definiert, stellt den Inhalt und Layout für das Trennzeichen zwischen Elementen in der <xref:System.Web.UI.WebControls.DataList>. Wenn Sie nicht definiert ist, wird eine Trennzeichen nicht angezeigt.|  
  
 Absolutes Minimum das <xref:System.Web.UI.WebControls.DataList.ItemTemplate%2A> muss definiert werden, um die Anzeige der Elemente im der <xref:System.Web.UI.WebControls.DataList> Steuerelement. Zusätzliche Vorlagen können verwendet werden, um ein benutzerdefiniertes Erscheinungsbild für bieten die <xref:System.Web.UI.WebControls.DataList> Steuerelement.  
  
<a name="customizing_the_appearance_of_the_datalist_control"></a>   
## <a name="customizing-the-appearance-of-the-datalist-control"></a>Anpassen der Darstellung von dem DataList-Steuerelement  
 Die Darstellung der <xref:System.Web.UI.WebControls.DataList> Steuerelement möglicherweise angepasst werden, indem Sie die Stileigenschaften für die verschiedenen Teile des Steuerelements festlegen. Die folgende Tabelle enthält die verschiedenen Stileigenschaften.  
  
|Style-Eigenschaft|Beschreibung |  
|--------------------|-----------------|  
|<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>|Gibt das Format für abwechselnde Elemente in der <xref:System.Web.UI.WebControls.DataList> Steuerelement.|  
|<xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A>|Gibt den Stil für das bearbeitete Element in der <xref:System.Web.UI.WebControls.DataList> Steuerelement.|  
|<xref:System.Web.UI.WebControls.DataList.FooterStyle%2A>|Gibt den Stil für die Fußzeile in die <xref:System.Web.UI.WebControls.DataList> Steuerelement.|  
|<xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A>|Gibt das Format für den Header in der <xref:System.Web.UI.WebControls.DataList> Steuerelement.|  
|<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>|Gibt das Format für die Elemente in der <xref:System.Web.UI.WebControls.DataList> Steuerelement.|  
|<xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A>|Gibt den Stil für das ausgewählte Element in der <xref:System.Web.UI.WebControls.DataList> Steuerelement.|  
|<xref:System.Web.UI.WebControls.DataList.SeparatorStyle%2A>|Gibt den Stil für das Trennzeichen zwischen den Elementen in der <xref:System.Web.UI.WebControls.DataList> Steuerelement.|  
  
 Sie können auch ein- oder Ausblenden von verschiedenen Teilen des Steuerelements. Die folgende Tabelle enthält die Eigenschaften, die steuern, welche Teile angezeigt oder ausgeblendet werden.  
  
|Eigenschaft|Beschreibung |  
|--------------|-----------------|  
|<xref:System.Web.UI.WebControls.DataList.ShowFooter%2A>|Anzeigen oder Ausblenden des Fußzeilenbereichs der <xref:System.Web.UI.WebControls.DataList> Steuerelement.|  
|<xref:System.Web.UI.WebControls.DataList.ShowHeader%2A>|Anzeigen oder Ausblenden des Kopfzeilenbereichs der <xref:System.Web.UI.WebControls.DataList> Steuerelement.|  
  
<a name="display_direction_and_layout"></a>   
## <a name="display-direction-and-layout"></a>Anzeigen von Richtung und Layout  
 Die anzeigerichtung der ein <xref:System.Web.UI.WebControls.DataList> -Steuerelemente werden können, vertikal oder horizontal. Legen Sie die <xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A> Eigenschaft, um die anzeigerichtung anzugeben.  
  
 Das Layout der <xref:System.Web.UI.WebControls.DataList> Steuerelement gesteuert wird, die mit der <xref:System.Web.UI.WebControls.DataList.RepeatLayout%2A> Eigenschaft. Festlegen dieser Eigenschaft auf `RepeatLayout.Table` zeigt die <xref:System.Web.UI.WebControls.DataList> in einem Tabellenformat während `RepeatLayout.Flow` zeigt die <xref:System.Web.UI.WebControls.DataList> ohne Tabellenstruktur.  
  
<a name="security"></a>   
## <a name="security"></a>Sicherheit  
 Die `DataList` Steuerelement kann die Steuerelemente, mit denen Benutzer zur Eingabe von Informationen enthalten.  
  
> [!CAUTION]
>  Dieses Steuerelement kann verwendet werden, zum Anzeigen von Benutzereingaben, u. u. bösartige Clientskripts enthalten können. Überprüfen Sie alle Informationen, die für das ausführbare Skript, SQL-Anweisungen oder anderen Code von einem Client gesendet wird, vor der Anzeige in Ihrer Anwendung. Sie können Steuerelemente zur gültigkeitsprüfung verwenden, um Benutzereingaben zu überprüfen, bevor der Eingabetext in einem Steuerelement angezeigt. ASP.NET bietet eine Funktion für den Überprüfung eingabeanforderung blockskript und HTML in einer Benutzereingabe.  
  
 Weitere Informationen zur Sicherheit finden Sie unter [Standardsteuerelemente Sichern](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [Vorgehensweise: Protect Against Script Exploits im Web-Apps durch Anwenden von HTML-Codierung Zeichenfolgen](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), und [ Überprüfen der Benutzereingabe in ASP.NET-Webseiten](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Deklarative Syntax  
  
```  
<asp:DataList  
    AccessKey="string"  
    BackColor="color name|#dddddd"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    Caption="string"  
    CaptionAlign="NotSet|Top|Bottom|Left|Right"  
    CellPadding="integer"  
    CellSpacing="integer"  
    CssClass="string"  
    DataKeyField="string"  
    DataMember="string"  
    DataSource="string"  
    DataSourceID="string"  
    EditItemIndex="integer"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    ExtractTemplateRows="True|False"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    GridLines="None|Horizontal|Vertical|Both"  
    Height="size"  
    HorizontalAlign="NotSet|Left|Center|Right|Justify"  
    ID="string"  
    OnCancelCommand="CancelCommand event handler"  
    OnDataBinding="DataBinding event handler"  
    OnDeleteCommand="DeleteCommand event handler"  
    OnDisposed="Disposed event handler"  
    OnEditCommand="EditCommand event handler"  
    OnInit="Init event handler"  
    OnItemCommand="ItemCommand event handler"  
    OnItemCreated="ItemCreated event handler"  
    OnItemDataBound="ItemDataBound event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnSelectedIndexChanged="SelectedIndexChanged event handler"  
    OnUnload="Unload event handler"  
    OnUpdateCommand="UpdateCommand event handler"  
    RepeatColumns="integer"  
    RepeatDirection="Horizontal|Vertical"  
    RepeatLayout="Table|Flow"  
    runat="server"  
    SelectedIndex="integer"  
    ShowFooter="True|False"  
    ShowHeader="True|False"  
    SkinID="string"  
    Style="string"  
    TabIndex="integer"  
    ToolTip="string"  
    UseAccessibleHeader="True|False"  
    Visible="True|False"  
    Width="size"  
>  
        <AlternatingItemStyle />  
        <AlternatingItemTemplate>  
            <!-- child controls -->  
        </AlternatingItemTemplate>  
        <EditItemStyle />  
        <EditItemTemplate>  
            <!-- child controls -->  
        </EditItemTemplate>  
        <FooterStyle />  
        <FooterTemplate>  
            <!-- child controls -->  
        </FooterTemplate>  
        <HeaderStyle />  
        <HeaderTemplate>  
            <!-- child controls -->  
        </HeaderTemplate>  
        <ItemStyle />  
        <ItemTemplate>  
            <!-- child controls -->  
        </ItemTemplate>  
        <SelectedItemStyle />  
        <SelectedItemTemplate>  
            <!-- child controls -->  
        </SelectedItemTemplate>  
        <SeparatorStyle />  
        <SeparatorTemplate>  
            <!-- child controls -->  
        </SeparatorTemplate>  
</asp:DataList>  
```  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit einem <xref:System.Web.UI.WebControls.DataList> -Steuerelement zum Anzeigen einer Liste von Elementen aus einer Datenquelle.  
  
> [!NOTE]
>  Im folgenden Codebeispiel wird das Codemodell von Einzeldatei-verwendet und möglicherweise nicht ordnungsgemäß ausgeführt werden, wenn direkt in einer Code-Behind-Datei kopiert. In diesem Codebeispiel wird, muss in eine leere Textdatei kopiert werden, die einer ASPX-Erweiterung. Weitere Informationen zu den Web Forms-Codemodell, finden Sie unter [ASP.NET Web Forms-Seite-Codemodell](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataList#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataList/CS/datalistcs.aspx#1)]
 [!code-aspx-vb[DataList#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataList/VB/datalistvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.BaseDataList" />
    <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
    <altmember cref="T:System.Web.UI.WebControls.Repeater" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataList();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.DataList" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diesen Konstruktor erstellt und initialisiert eine neue Instanz der dem <xref:System.Web.UI.WebControls.DataList> Klasse.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie erstellt und initialisiert eine neue Instanz der dem <xref:System.Web.UI.WebControls.DataList> Klasse.  
  
 [!code-csharp[Classic DataList.DataList Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataList.DataList Example/CS/source.cs#1)]
 [!code-vb[Classic DataList.DataList Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataList.DataList Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AlternatingItemStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle AlternatingItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle AlternatingItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.AlternatingItemStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AlternatingItemStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ AlternatingItemStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AlternatingItemStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.DataList.AlternatingItemStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Stileigenschaften für abwechselnde Elemente im <see cref="T:System.Web.UI.WebControls.DataList" />-Steuerelement ab.</summary>
        <value>Ein <see cref="T:System.Web.UI.WebControls.TableItemStyle" />-Objekt, das die Stileigenschaften für abwechselnde Elemente im <see cref="T:System.Web.UI.WebControls.DataList" />-Steuerelement darstellt. Der Standardwert ist ein leeres <see cref="T:System.Web.UI.WebControls.TableItemStyle" />-Objekt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> Eigenschaft bereit, dass einen benutzerdefinierten Stil der abwechselnden Elemente in der <xref:System.Web.UI.WebControls.DataList> Steuerelement. Allgemeine Stilattribute, die angepasst werden können, enthalten die Vordergrundfarbe, Hintergrundfarbe, Schriftart und Ausrichtung des Inhalts in der Zelle. Bereitstellen von einer anderen workflowart verbessert das Erscheinungsbild von der <xref:System.Web.UI.WebControls.DataList> Steuerelement.  
  
 Element Formateigenschaften in der <xref:System.Web.UI.WebControls.DataList> Steuerelement werden durch die Style-Eigenschaft für ein Element in eine andere durch eine Hierarchie geerbt. Die Stileigenschaften niedriger festgelegt, in der Hierarchie werden von Stileigenschaften, die in der Hierarchie höher geerbt. Z. B., wenn Sie angeben, dass eine rote Schriftart für die <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> -Eigenschaft, die alle anderen Stileigenschaften eines Elements in der <xref:System.Web.UI.WebControls.DataList> Steuerelement wird auch einen roten Schrift verfügen. Dadurch können Sie eine allgemeine Darstellung des Steuerelements zu ermöglichen, indem Sie eine einzelnes Element Style-Eigenschaft festlegen. Sie können die geerbte stileinstellungen für einen Artikel-Style-Eigenschaft überschreiben, die durch Festlegen der Style-Eigenschaften in der Hierarchie höher ist. Sie können beispielsweise angeben, eine blaue Schriftart für die <xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> -Eigenschaft, überschreiben die roten Schrift in angegebenen die <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> Eigenschaft. Die folgende Tabelle enthält die Reihenfolge der Datentyphierarchie von der höchsten zur niedrigsten.  
  
|Rangfolge|Style-Eigenschaft|  
|----------------|--------------------|  
|1|<xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A>|  
|2|<xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A>|  
|3|<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>|  
|4|<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>|  
|5|<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>|  
  
 Zum Angeben eines benutzerdefinierten Stils für abwechselnde Elemente fügen die `<AlternatingItemStyle>` Tags zwischen die öffnenden und schließenden Tags eines der <xref:System.Web.UI.WebControls.DataList> Steuerelement. Anschließend können Sie die Stilattribute innerhalb des öffnenden auflisten `<AlternatingItemStyle>` Tag.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> -Eigenschaft an eine andere Hintergrundfarbe für abwechselnde Elemente in der <xref:System.Web.UI.WebControls.DataList> Steuerelement.  
  
> [!NOTE]
>  Im folgenden Codebeispiel wird das Codemodell von Einzeldatei-verwendet und möglicherweise nicht ordnungsgemäß ausgeführt werden, wenn direkt in einer Code-Behind-Datei kopiert. In diesem Codebeispiel wird, muss in eine leere Textdatei kopiert werden, die einer ASPX-Erweiterung. Weitere Informationen zu den Web Forms-Codemodell, finden Sie unter [ASP.NET Web Forms-Seite-Codemodell](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListItemStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemStyle/CS/datalistitemstylecs.aspx#1)]
 [!code-aspx-vb[DataListItemStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemStyle/VB/datalistitemstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="AlternatingItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate AlternatingItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate AlternatingItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.AlternatingItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AlternatingItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ AlternatingItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AlternatingItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.DataList.AlternatingItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DataListItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Vorlage für abwechselnde Elemente in <see cref="T:System.Web.UI.WebControls.DataList" /> ab oder legt diese fest.</summary>
        <value>Ein <see cref="T:System.Web.UI.ITemplate" />-Objekt, das die Vorlage für abwechselnde Elemente im <see cref="T:System.Web.UI.WebControls.DataList" />-Steuerelement darstellt. Der Standardwert ist <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.DataList.AlternatingItemTemplate%2A> Eigenschaft, um den Inhalt der abwechselnde Elemente im Steuern der <xref:System.Web.UI.WebControls.DataList> Steuerelement. Die Darstellung der abwechselnden Elemente wird gesteuert, von der <xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> Eigenschaft.  
  
 Zum Angeben einer Vorlage für abwechselnde Elemente fügen die `<AlternatingItemTemplate>` Tags zwischen die öffnenden und schließenden Tags eines der <xref:System.Web.UI.WebControls.DataList> Steuerelement. Anschließend können Sie den Inhalt der Vorlage zwischen den öffnenden und schließenden auflisten `<AlternatingItemTemplate>` Tags.  
  
> [!CAUTION]
>  Dieses Steuerelement kann verwendet werden, zum Anzeigen von Benutzereingaben, u. u. bösartige Clientskripts enthalten können. Überprüfen Sie alle Informationen, die für das ausführbare Skript, SQL-Anweisungen oder anderen Code von einem Client gesendet wird, vor der Anzeige in Ihrer Anwendung. Sie können Steuerelemente zur gültigkeitsprüfung verwenden, um Benutzereingaben zu überprüfen, bevor der Eingabetext in einem Steuerelement angezeigt. ASP.NET bietet eine Funktion für den Überprüfung eingabeanforderung blockskript und HTML in einer Benutzereingabe. Weitere Informationen finden Sie unter [Standardsteuerelemente Sichern](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [Vorgehensweise: Protect Against Script Exploits im Web-Apps durch Anwenden von HTML-Codierung Zeichenfolgen](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), und [Validieren der Benutzereingabe in ASP.NET Web Pages](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.UI.WebControls.DataList.AlternatingItemTemplate%2A> Eigenschaft, um den Inhalt der abwechselnde Elemente im Steuern der <xref:System.Web.UI.WebControls.DataList> Steuerelement.  
  
> [!NOTE]
>  Im folgenden Codebeispiel wird das Codemodell von Einzeldatei-verwendet und möglicherweise nicht ordnungsgemäß ausgeführt werden, wenn direkt in einer Code-Behind-Datei kopiert. In diesem Codebeispiel wird, muss in eine leere Textdatei kopiert werden, die einer ASPX-Erweiterung. Weitere Informationen zu den Web Forms-Codemodell, finden Sie unter [ASP.NET Web Forms-Seite-Codemodell](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListAlternatingItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListAlternatingItemTemplate/CS/datalistaltitemtemplatecs.aspx#1)]
 [!code-aspx-vb[DataListAlternatingItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListAlternatingItemTemplate/VB/datalistaltitemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.AlternatingItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.ItemTemplate" />
        <altmember cref="T:System.Web.UI.ITemplate" />
      </Docs>
    </Member>
    <Member MemberName="CancelCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataListCommandEventHandler CancelCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataListCommandEventHandler CancelCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataList.CancelCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CancelCommand As DataListCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataListCommandEventHandler ^ CancelCommand;" />
      <MemberSignature Language="F#" Value="member this.CancelCommand : System.Web.UI.WebControls.DataListCommandEventHandler " Usage="member this.CancelCommand : System.Web.UI.WebControls.DataListCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn auf die Schaltfläche <see langword="Cancel" /> für ein Element im <see cref="T:System.Web.UI.WebControls.DataList" />-Steuerelement geklickt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.DataList.CancelCommand> Ereignis wird ausgelöst, wenn die `Cancel` geklickt wird für ein Element in der <xref:System.Web.UI.WebControls.DataList> Steuerelement.  
  
 Ein typischer Handler für die <xref:System.Web.UI.WebControls.DataList.CancelCommand> Gruppen der <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> Eigenschaft `-1` (um das Element zu deaktivieren) und klicken Sie dann die Daten, die Bindung der <xref:System.Web.UI.WebControls.DataList> Steuerelement.  
  
> [!CAUTION]
>  Text ist nicht HTML-codiert vor der Anzeige in der <xref:System.Web.UI.WebControls.DataList> Steuerelement. Dadurch können Skripts in HTML-Tags in den Text eingebettet. Wenn die Werte für das Steuerelement aus Benutzereingaben stammen, achten Sie darauf, dass Sie zum Überprüfen der Werte, um Sicherheitsrisiken zu verringern.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [wie: Behandeln von Ereignissen in einer Web Forms-Anwendung](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
> [!CAUTION]
>  Dieses Steuerelement kann verwendet werden, zum Anzeigen von Benutzereingaben, u. u. bösartige Clientskripts enthalten können. Überprüfen Sie alle Informationen, die für das ausführbare Skript, SQL-Anweisungen oder anderen Code von einem Client gesendet wird, vor der Anzeige in Ihrer Anwendung. Sie können Steuerelemente zur gültigkeitsprüfung verwenden, um Benutzereingaben zu überprüfen, bevor der Eingabetext in einem Steuerelement angezeigt. ASP.NET bietet eine Funktion für den Überprüfung eingabeanforderung blockskript und HTML in einer Benutzereingabe. Weitere Informationen finden Sie unter [Standardsteuerelemente Sichern](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [Vorgehensweise: Protect Against Script Exploits im Web-Apps durch Anwenden von HTML-Codierung Zeichenfolgen](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), und [Validieren der Benutzereingabe in ASP.NET Web Pages](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie angegeben und code für die <xref:System.Web.UI.WebControls.DataList.CancelCommand> Ereignis. Sie bricht alle Änderungen, die auf ein Element in der <xref:System.Web.UI.WebControls.DataList> steuern, wann die `Cancel` geklickt wird.  
  
> [!NOTE]
>  Im folgenden Codebeispiel wird das Codemodell von Einzeldatei-verwendet und möglicherweise nicht ordnungsgemäß ausgeführt werden, wenn direkt in einer Code-Behind-Datei kopiert. In diesem Codebeispiel wird, muss in eine leere Textdatei kopiert werden, die einer ASPX-Erweiterung. Weitere Informationen zu den Web Forms-Codemodell, finden Sie unter [ASP.NET Web Forms-Seite-Codemodell](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.DeleteCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.EditCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.UpdateCommand" />
      </Docs>
    </Member>
    <Member MemberName="CancelCommandName">
      <MemberSignature Language="C#" Value="public const string CancelCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string CancelCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataList.CancelCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Const CancelCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ CancelCommandName;" />
      <MemberSignature Language="F#" Value="val mutable CancelCommandName : string" Usage="System.Web.UI.WebControls.DataList.CancelCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Stellt den Namen des <see langword="Cancel" />-Befehls dar. Dieses Feld ist schreibgeschützt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.DataList.CancelCommandName> Feld zur Darstellung der `Cancel` Befehlsnamen.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.DataList.SelectCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.EditCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.DeleteCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.UpdateCommandName" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlHierarchy">
      <MemberSignature Language="C#" Value="protected override void CreateControlHierarchy (bool useDataSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CreateControlHierarchy(bool useDataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.CreateControlHierarchy(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CreateControlHierarchy (useDataSource As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CreateControlHierarchy(bool useDataSource);" />
      <MemberSignature Language="F#" Value="override this.CreateControlHierarchy : bool -&gt; unit" Usage="dataList.CreateControlHierarchy useDataSource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useDataSource" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useDataSource">
          <see langword="true" />, wenn die Datenquelle des Steuerelements verwendet werden soll, <see langword="false" />, wenn das Steuerelement aus dem Ansichtszustand neu erstellt wird und nicht datengebunden sein soll.</param>
        <summary>Erstellt die Steuerelementhierarchie, die zum Rendern des Datenlistensteuerelements mit oder ohne die angegebene Datenquelle verwendet wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A> Methode wird hauptsächlich von Steuerelemententwicklern verwendet, bei der Ableitung von einer benutzerdefinierten Implementierung von der <xref:System.Web.UI.WebControls.DataList> Steuerelement.  
  
 Die <xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A> -Methode verwendet die <xref:System.Web.UI.WebControls.DataList.CreateItem%2A> und <xref:System.Web.UI.WebControls.DataList.InitializeItem%2A> Methoden zum Erstellen von <xref:System.Web.UI.WebControls.DataListItem> Steuerelemente, die die Header, Footer, Trennzeichen und datengebundenen Elemente in der Liste darstellen. Sie erreichen die datengebundenen Elemente für die Liste der über die <xref:System.Web.UI.WebControls.DataList.Items%2A> Auflistung. Es stehen alle Elementtypen, einschließlich der Kopfzeile, Fußzeile und Trennzeichen für Elemente, über die <xref:System.Web.UI.WebControls.BaseDataList.Controls%2A> Auflistung.  
  
 Überschreiben der <xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A> Methode zum Anpassen wie <xref:System.Web.UI.WebControls.DataListItem> Steuerelemente erstellt oder hinzugefügt werden die <xref:System.Web.UI.WebControls.DataList> Steuerelement. Überschreiben der <xref:System.Web.UI.WebControls.DataList.InitializeItem%2A> Methode zum Anpassen von Vorlagen für eine <xref:System.Web.UI.WebControls.DataListItem> Steuerelement.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateControlStyle">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.Style CreateControlStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.Style CreateControlStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.CreateControlStyle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlStyle () As Style" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::Style ^ CreateControlStyle();" />
      <MemberSignature Language="F#" Value="override this.CreateControlStyle : unit -&gt; System.Web.UI.WebControls.Style" Usage="dataList.CreateControlStyle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt das Standardformatvorlagenobjekt, das von der <see cref="T:System.Web.UI.WebControls.DataList" />-Klasse intern zum Implementieren aller auf Formatvorlagen bezogenen Eigenschaften verwendet wird.</summary>
        <returns>Ein <see cref="T:System.Web.UI.WebControls.TableStyle" />, der die Standardstileigenschaften für das Steuerelement enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.DataList.CreateControlStyle%2A> Methode wird hauptsächlich von Entwicklern bei der Ableitung von einer benutzerdefinierten Implementierung von verwendet die <xref:System.Web.UI.WebControls.DataList> Steuerelement.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Überschreiben der <xref:System.Web.UI.WebControls.DataList.CreateControlStyle%2A> Methode in einem benutzerdefinierten Steuerelement, sodass diese immer ohne Zellenabstand in horizontale Rasterlinien anzeigt der <xref:System.Web.UI.WebControls.DataList> Steuerelement.  
  
 [!code-aspx-csharp[CustomDataListCreateControlStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomDataListCreateControlStyle/CS/custom_datalist_createcontrolstylecs.aspx#1)]
 [!code-aspx-vb[CustomDataListCreateControlStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomDataListCreateControlStyle/VB/custom_datalist_createcontrolstylevb.aspx#1)]  
[!code-csharp[CustomDataListCreateControlStyle#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomDataListCreateControlStyle/CS/custom_datalist_createcontrolstyle.cs#2)]
[!code-vb[CustomDataListCreateControlStyle#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomDataListCreateControlStyle/VB/custom_datalist_createcontrolstyle.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateItem">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.DataListItem CreateItem (int itemIndex, System.Web.UI.WebControls.ListItemType itemType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.DataListItem CreateItem(int32 itemIndex, valuetype System.Web.UI.WebControls.ListItemType itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.CreateItem(System.Int32,System.Web.UI.WebControls.ListItemType)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateItem (itemIndex As Integer, itemType As ListItemType) As DataListItem" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::DataListItem ^ CreateItem(int itemIndex, System::Web::UI::WebControls::ListItemType itemType);" />
      <MemberSignature Language="F#" Value="abstract member CreateItem : int * System.Web.UI.WebControls.ListItemType -&gt; System.Web.UI.WebControls.DataListItem&#xA;override this.CreateItem : int * System.Web.UI.WebControls.ListItemType -&gt; System.Web.UI.WebControls.DataListItem" Usage="dataList.CreateItem (itemIndex, itemType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemIndex" Type="System.Int32" />
        <Parameter Name="itemType" Type="System.Web.UI.WebControls.ListItemType" />
      </Parameters>
      <Docs>
        <param name="itemIndex">Die angegebene Position in der <see cref="T:System.Web.UI.WebControls.DataList" />, an der das erstellte Element platziert werden soll.</param>
        <param name="itemType">Ein <see cref="T:System.Web.UI.WebControls.ListItemType" />, der den angegebenen Typ des zu erstellenden Elements darstellt.</param>
        <summary>Erstellt ein <see cref="T:System.Web.UI.WebControls.DataListItem" />-Objekt.</summary>
        <returns>Ein neues <see cref="T:System.Web.UI.WebControls.DataListItem" />, das mit dem angegebenen Listenelementtyp erstellt wurde.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.DataList.CreateItem%2A> Methode wird hauptsächlich von Entwicklern beim Erstellen einer benutzerdefinierten Implementierung des verwendet die <xref:System.Web.UI.WebControls.DataList> Steuerelement. Die <xref:System.Web.UI.WebControls.DataList.CreateItem%2A> Methode entspricht funktionell dem Aufrufen der <xref:System.Web.UI.WebControls.DataListItem.%23ctor%2A> Konstruktor für eine <xref:System.Web.UI.WebControls.DataListItem>. Die <xref:System.Web.UI.WebControls.DataListItem.ItemIndex%2A> und <xref:System.Web.UI.WebControls.DataListItem.ItemType%2A> Eigenschaften werden für die neue initialisiert <xref:System.Web.UI.WebControls.DataListItem> mit den angegebenen Werten, aber das Element nicht eingelegt ist die <xref:System.Web.UI.WebControls.DataList>.  
  
 Die <xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A> -Methode verwendet die <xref:System.Web.UI.WebControls.DataList.CreateItem%2A> und <xref:System.Web.UI.WebControls.DataList.InitializeItem%2A> Methoden zum Erstellen von <xref:System.Web.UI.WebControls.DataListItem> Steuerelemente, die die Header, Footer, Trennzeichen und datengebundenen Elemente in der Liste darstellen. Sie erreichen die datengebundenen Elemente für die Liste der über die <xref:System.Web.UI.WebControls.DataList.Items%2A> Auflistung. Es stehen alle Elementtypen, einschließlich der Kopfzeile, Fußzeile und Trennzeichen für Elemente, über die <xref:System.Web.UI.WebControls.BaseDataList.Controls%2A> Auflistung.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Überschreiben diese Methode, um Ihre eigenen abgeleiteten erstellen <see cref="T:System.Web.UI.WebControls.DataListItem" /> Typ oder um zusätzliche Elementeigenschaften festzulegen Wenn eine <see cref="T:System.Web.UI.WebControls.DataListItem" /> erstellt wird.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.DataList.CreateControlHierarchy(System.Boolean)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.InitializeItem(System.Web.UI.WebControls.DataListItem)" />
      </Docs>
    </Member>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataListCommandEventHandler DeleteCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataListCommandEventHandler DeleteCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataList.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DeleteCommand As DataListCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataListCommandEventHandler ^ DeleteCommand;" />
      <MemberSignature Language="F#" Value="member this.DeleteCommand : System.Web.UI.WebControls.DataListCommandEventHandler " Usage="member this.DeleteCommand : System.Web.UI.WebControls.DataListCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn auf die Schaltfläche <see langword="Delete" /> für ein Element im <see cref="T:System.Web.UI.WebControls.DataList" />-Steuerelement geklickt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.DataList.DeleteCommand> Ereignis wird ausgelöst, wenn die `Delete` geklickt wird für ein Element in der <xref:System.Web.UI.WebControls.DataList> Steuerelement.  
  
 Ein typischer Handler für die <xref:System.Web.UI.WebControls.DataList.DeleteCommand> Ereignis entfernt das ausgewählte Element aus der Datenquelle, und Sie anschließend die Daten, die Bindung der <xref:System.Web.UI.WebControls.DataList> Steuerelement.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [wie: Behandeln von Ereignissen in einer Web Forms-Anwendung](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie angegeben und code für die <xref:System.Web.UI.WebControls.DataList.DeleteCommand> Ereignis. Löscht das ausgewählte Element in der <xref:System.Web.UI.WebControls.DataList> steuern, wann die `Delete` geklickt wird.  
  
> [!NOTE]
>  Im folgenden Codebeispiel wird das Codemodell von Einzeldatei-verwendet und möglicherweise nicht ordnungsgemäß ausgeführt werden, wenn direkt in einer Code-Behind-Datei kopiert. In diesem Codebeispiel wird, muss in eine leere Textdatei kopiert werden, die einer ASPX-Erweiterung. Weitere Informationen zu den Web Forms-Codemodell, finden Sie unter [ASP.NET Web Forms-Seite-Codemodell](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.CancelCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.EditCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.UpdateCommand" />
      </Docs>
    </Member>
    <Member MemberName="DeleteCommandName">
      <MemberSignature Language="C#" Value="public const string DeleteCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DeleteCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataList.DeleteCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Const DeleteCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ DeleteCommandName;" />
      <MemberSignature Language="F#" Value="val mutable DeleteCommandName : string" Usage="System.Web.UI.WebControls.DataList.DeleteCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Stellt den Namen des <see langword="Delete" />-Befehls dar. Dieses Feld ist schreibgeschützt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.DataList.DeleteCommandName> Feld zur Darstellung der `Delete` Befehlsnamen.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.DataList.SelectCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.EditCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.UpdateCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.CancelCommandName" />
      </Docs>
    </Member>
    <Member MemberName="EditCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataListCommandEventHandler EditCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataListCommandEventHandler EditCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataList.EditCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event EditCommand As DataListCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataListCommandEventHandler ^ EditCommand;" />
      <MemberSignature Language="F#" Value="member this.EditCommand : System.Web.UI.WebControls.DataListCommandEventHandler " Usage="member this.EditCommand : System.Web.UI.WebControls.DataListCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn auf die Schaltfläche <see langword="Edit" /> für ein Element im <see cref="T:System.Web.UI.WebControls.DataList" />-Steuerelement geklickt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.DataList.EditCommand> Ereignis wird ausgelöst, wenn die `Edit` geklickt wird für ein Element in der <xref:System.Web.UI.WebControls.DataList> Steuerelement.  
  
 Ein typischer Handler für die <xref:System.Web.UI.WebControls.DataList.EditCommand> Ereignis legt die <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> Eigenschaft, um die ausgewählte Zeile und klicken Sie dann die Daten, die Bindung der <xref:System.Web.UI.WebControls.DataList> Steuerelement.  
  
> [!CAUTION]
>  Text ist nicht HTML-codiert vor der Anzeige in der <xref:System.Web.UI.WebControls.DataList> Steuerelement. Dadurch können Skripts in HTML-Tags in den Text eingebettet. Wenn die Werte für das Steuerelement aus Benutzereingaben stammen, achten Sie darauf, dass Sie zum Überprüfen der Werte, um Sicherheitsrisiken zu verringern.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [wie: Behandeln von Ereignissen in einer Web Forms-Anwendung](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
> [!CAUTION]
>  Dieses Steuerelement kann verwendet werden, zum Anzeigen von Benutzereingaben, u. u. bösartige Clientskripts enthalten können. Überprüfen Sie alle Informationen, die für das ausführbare Skript, SQL-Anweisungen oder anderen Code von einem Client gesendet wird, vor der Anzeige in Ihrer Anwendung. Sie können Steuerelemente zur gültigkeitsprüfung verwenden, um Benutzereingaben zu überprüfen, bevor der Eingabetext in einem Steuerelement angezeigt. ASP.NET bietet eine Funktion für den Überprüfung eingabeanforderung blockskript und HTML in einer Benutzereingabe. Weitere Informationen finden Sie unter [Standardsteuerelemente Sichern](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [Vorgehensweise: Protect Against Script Exploits im Web-Apps durch Anwenden von HTML-Codierung Zeichenfolgen](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), und [Validieren der Benutzereingabe in ASP.NET Web Pages](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie angegeben und code für die <xref:System.Web.UI.WebControls.DataList.EditCommand> Ereignis. Dadurch, dass Sie so bearbeiten Sie das ausgewählte Element in der <xref:System.Web.UI.WebControls.DataList> steuern, wann die `Edit` geklickt wird.  
  
> [!NOTE]
>  Im folgenden Codebeispiel wird das Codemodell von Einzeldatei-verwendet und möglicherweise nicht ordnungsgemäß ausgeführt werden, wenn direkt in einer Code-Behind-Datei kopiert. In diesem Codebeispiel wird, muss in eine leere Textdatei kopiert werden, die einer ASPX-Erweiterung. Weitere Informationen zu den Web Forms-Codemodell, finden Sie unter [ASP.NET Web Forms-Seite-Codemodell](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.CancelCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.DeleteCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.UpdateCommand" />
      </Docs>
    </Member>
    <Member MemberName="EditCommandName">
      <MemberSignature Language="C#" Value="public const string EditCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string EditCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataList.EditCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Const EditCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ EditCommandName;" />
      <MemberSignature Language="F#" Value="val mutable EditCommandName : string" Usage="System.Web.UI.WebControls.DataList.EditCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Stellt den Namen des <see langword="Edit" />-Befehls dar. Dieses Feld ist schreibgeschützt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.DataList.EditCommandName> Feld zur Darstellung der `Edit` Befehlsnamen.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.DataList.SelectCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.DeleteCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.UpdateCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.CancelCommandName" />
      </Docs>
    </Member>
    <Member MemberName="EditItemIndex">
      <MemberSignature Language="C#" Value="public virtual int EditItemIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EditItemIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.EditItemIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EditItemIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int EditItemIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.EditItemIndex : int with get, set" Usage="System.Web.UI.WebControls.DataList.EditItemIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Indexnummer des im <see cref="T:System.Web.UI.WebControls.DataList" />-Steuerelement ausgewählten Elements ab, das bearbeitet werden soll, oder legt diese fest.</summary>
        <value>Die Indexnummer des im <see cref="T:System.Web.UI.WebControls.DataList" />-Steuerelement ausgewählten Elements, das bearbeitet werden soll.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> Eigenschaft, um das zu bearbeitende Element programmgesteuert anzugeben. Sie können auch diese Eigenschaft verwenden, um zu bestimmen, der Index des Elements, für die Bearbeitung ausgewählt.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> Eigenschaft ist nullbasiert.  
  
 Um ein Element zu deaktivieren, legen Sie die <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> Eigenschaft `-1`.  
  
> [!CAUTION]
>  Dieses Steuerelement kann verwendet werden, zum Anzeigen von Benutzereingaben, u. u. bösartige Clientskripts enthalten können. Überprüfen Sie alle Informationen, die für das ausführbare Skript, SQL-Anweisungen oder anderen Code von einem Client gesendet wird, vor der Anzeige in Ihrer Anwendung. Sie können Steuerelemente zur gültigkeitsprüfung verwenden, um Benutzereingaben zu überprüfen, bevor der Eingabetext in einem Steuerelement angezeigt. ASP.NET bietet eine Funktion für den Überprüfung eingabeanforderung blockskript und HTML in einer Benutzereingabe. Weitere Informationen finden Sie unter [Standardsteuerelemente Sichern](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [Vorgehensweise: Protect Against Script Exploits im Web-Apps durch Anwenden von HTML-Codierung Zeichenfolgen](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), und [Validieren der Benutzereingabe in ASP.NET Web Pages](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
 Die <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> Eigenschaft im Steuerelementzustand gespeichert ist.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> Eigenschaft, um die vom Benutzer zur Bearbeitung ausgewählte Element anzugeben.  
  
> [!NOTE]
>  Im folgenden Codebeispiel wird das Codemodell von Einzeldatei-verwendet und möglicherweise nicht ordnungsgemäß ausgeführt werden, wenn direkt in einer Code-Behind-Datei kopiert. In diesem Codebeispiel wird, muss in eine leere Textdatei kopiert werden, die einer ASPX-Erweiterung. Weitere Informationen zu den Web Forms-Codemodell, finden Sie unter [ASP.NET Web Forms-Seite-Codemodell](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der ausgewählte Wert ist kleiner als <see langword="0" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.DataList.EditItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.EditItemTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.EditCommand" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="EditItemStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle EditItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle EditItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.EditItemStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EditItemStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ EditItemStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EditItemStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.DataList.EditItemStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Stileigenschaften für das zur Bearbeitung im <see cref="T:System.Web.UI.WebControls.DataList" />-Steuerelement ausgewählte Element ab.</summary>
        <value>Ein <see cref="T:System.Web.UI.WebControls.TableItemStyle" />-Objekt, das die Stileigenschaften für das zur Bearbeitung im <see cref="T:System.Web.UI.WebControls.DataList" />-Steuerelement ausgewählte Element enthält. Der Standardwert ist ein leeres <see cref="T:System.Web.UI.WebControls.TableItemStyle" />-Objekt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A> Eigenschaft, um eine benutzerdefinierte Formatvorlage für das Element, das zur Bearbeitung im ausgewählten bereitzustellen der <xref:System.Web.UI.WebControls.DataList> Steuerelement. Allgemeine Stilattribute, die angepasst werden können, enthalten die Vordergrundfarbe, Hintergrundfarbe, Schriftart und Ausrichtung des Inhalts in der Zelle. Bereitstellen von einer anderen workflowart verbessert das Erscheinungsbild von der <xref:System.Web.UI.WebControls.DataList> Steuerelement.  
  
 Element Formateigenschaften in der <xref:System.Web.UI.WebControls.DataList> Steuerelement werden durch die Style-Eigenschaft für ein Element in eine andere durch eine Hierarchie geerbt. Die Stileigenschaften niedriger festgelegt, in der Hierarchie werden von Stileigenschaften, die in der Hierarchie höher geerbt. Z. B., wenn Sie angeben, dass eine rote Schriftart für die <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> -Eigenschaft, die alle anderen Stileigenschaften eines Elements in der <xref:System.Web.UI.WebControls.DataList> Steuerelement wird auch einen roten Schrift verfügen. Dadurch können Sie eine allgemeine Darstellung des Steuerelements zu ermöglichen, indem Sie eine einzelnes Element Style-Eigenschaft festlegen. Sie können die geerbte stileinstellungen für einen Artikel-Style-Eigenschaft überschreiben, die durch Festlegen der Style-Eigenschaften in der Hierarchie höher ist. Sie können beispielsweise angeben, eine blaue Schriftart für die <xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> -Eigenschaft, überschreiben die roten Schrift in angegebenen die <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> Eigenschaft. Die folgende Tabelle enthält die Reihenfolge der Datentyphierarchie von der höchsten zur niedrigsten.  
  
|Rangfolge|Style-Eigenschaft|  
|----------------|--------------------|  
|1|<xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A>|  
|2|<xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A>|  
|3|<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>|  
|4|<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>|  
|5|<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>|  
  
 Um einen benutzerdefinierten Stil für das zur Bearbeitung ausgewählte Element anzugeben, fügen die `<EditItemStyle>` Tags zwischen die öffnenden und schließenden Tags eines der <xref:System.Web.UI.WebControls.DataList> Steuerelement. Anschließend können Sie die Stilattribute innerhalb des öffnenden auflisten `<EditItemStyle>` Tag.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A> -Eigenschaft an eine andere Darstellung für das Element, das durch den Benutzer zur Bearbeitung ausgewählt.  
  
> [!NOTE]
>  Im folgenden Codebeispiel wird das Codemodell von Einzeldatei-verwendet und möglicherweise nicht ordnungsgemäß ausgeführt werden, wenn direkt in einer Code-Behind-Datei kopiert. In diesem Codebeispiel wird, muss in eine leere Textdatei kopiert werden, die einer ASPX-Erweiterung. Weitere Informationen zu den Web Forms-Codemodell, finden Sie unter [ASP.NET Web Forms-Seite-Codemodell](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.EditItemIndex" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.EditItemTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.EditCommand" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="EditItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate EditItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate EditItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.EditItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EditItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ EditItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EditItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.DataList.EditItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DataListItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Vorlage für das zur Bearbeitung im <see cref="T:System.Web.UI.WebControls.DataList" />-Steuerelement ausgewählte Element ab oder legt diese fest.</summary>
        <value>Ein <see cref="T:System.Web.UI.ITemplate" />-Objekt, das die Vorlage für das zur Bearbeitung im <see cref="T:System.Web.UI.WebControls.DataList" />-Steuerelement ausgewählte Element enthält. Der Standardwert ist <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.DataList.EditItemTemplate%2A> Eigenschaft, um den Inhalt des Elements zur Bearbeitung im ausgewählten steuern die <xref:System.Web.UI.WebControls.DataList> Steuerelement. Die Darstellung des ausgewählten Elements gewählt werden, für die Bearbeitung von gesteuert wird die <xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A> Eigenschaft.  
  
 Platzieren Sie zum Angeben einer Vorlage für das zur Bearbeitung ausgewählte Element die `<EditItemTemplate>` Tags zwischen die öffnenden und schließenden Tags eines der <xref:System.Web.UI.WebControls.DataList> Steuerelement. Anschließend können Sie den Inhalt der Vorlage zwischen den öffnenden und schließenden auflisten `<EditItemTemplate>` Tags.  
  
> [!CAUTION]
>  Dieses Steuerelement kann verwendet werden, zum Anzeigen von Benutzereingaben, u. u. bösartige Clientskripts enthalten können. Überprüfen Sie alle Informationen, die für das ausführbare Skript, SQL-Anweisungen oder anderen Code von einem Client gesendet wird, vor der Anzeige in Ihrer Anwendung. Sie können Steuerelemente zur gültigkeitsprüfung verwenden, um Benutzereingaben zu überprüfen, bevor der Eingabetext in einem Steuerelement angezeigt. ASP.NET bietet eine Funktion für den Überprüfung eingabeanforderung blockskript und HTML in einer Benutzereingabe. Weitere Informationen finden Sie unter [Standardsteuerelemente Sichern](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [Vorgehensweise: Protect Against Script Exploits im Web-Apps durch Anwenden von HTML-Codierung Zeichenfolgen](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), und [Validieren der Benutzereingabe in ASP.NET Web Pages](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.UI.WebControls.DataList.EditItemTemplate%2A> Eigenschaft, um den Inhalt des Elements vom Benutzer ausgewählt werden, für die Bearbeitung zu steuern.  
  
> [!NOTE]
>  Im folgenden Codebeispiel wird das Codemodell von Einzeldatei-verwendet und möglicherweise nicht ordnungsgemäß ausgeführt werden, wenn direkt in einer Code-Behind-Datei kopiert. In diesem Codebeispiel wird, muss in eine leere Textdatei kopiert werden, die einer ASPX-Erweiterung. Weitere Informationen zu den Web Forms-Codemodell, finden Sie unter [ASP.NET Web Forms-Seite-Codemodell](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.EditItemIndex" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.EditItemStyle" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.EditCommand" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="T:System.Web.UI.ITemplate" />
      </Docs>
    </Member>
    <Member MemberName="ExtractTemplateRows">
      <MemberSignature Language="C#" Value="public virtual bool ExtractTemplateRows { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExtractTemplateRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.ExtractTemplateRows" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ExtractTemplateRows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ExtractTemplateRows { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExtractTemplateRows : bool with get, set" Usage="System.Web.UI.WebControls.DataList.ExtractTemplateRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Zeilen eines <see cref="T:System.Web.UI.WebControls.Table" />-Steuerelements, die in den einzelnen Vorlagen eines <see cref="T:System.Web.UI.WebControls.DataList" />-Steuerelements definiert sind, extrahiert und angezeigt werden, oder legt diesen fest.</summary>
        <value>
          <see langword="true" />, wenn die Zeilen eines <see cref="T:System.Web.UI.WebControls.Table" />-Steuerelements, die in den einzelnen Vorlagen eines <see cref="T:System.Web.UI.WebControls.DataList" />-Steuerelements definiert sind, extrahiert und angezeigt werden, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Den Inhalt der <xref:System.Web.UI.WebControls.DataList> -Steuerelement mit Vorlagen angegeben sind. In der Regel Listen Sie die Steuerelemente, die in den Vorlagen angezeigt werden soll. Sie können auch Platzieren einer <xref:System.Web.UI.WebControls.Table> -Steuerelement in einer Vorlage und die Zeilen der Tabelle anzeigen.  
  
 Verwenden der <xref:System.Web.UI.WebControls.DataList.ExtractTemplateRows%2A> Eigenschaft, um anzugeben, ob die Zeilen einer <xref:System.Web.UI.WebControls.Table> -Steuerelements in den einzelnen Vorlagen definiert eine <xref:System.Web.UI.WebControls.DataList> Steuerelement extrahiert und angezeigt werden. Alle Zeilen aus den Vorlagen von extrahiert die <xref:System.Web.UI.WebControls.DataList> -Steuerelement in einer einzelnen Tabelle angezeigt werden. Dadurch können Sie eine einzelne Tabelle aus mehreren kleineren Tabellen erstellen und die Features des weiterhin beibehalten der <xref:System.Web.UI.WebControls.DataList> Steuerelement.  
  
> [!NOTE]
>  Wenn diese Eigenschaft auf festgelegt ist `true`, müssen Sie ein wohlgeformtes bereitstellen <xref:System.Web.UI.WebControls.Table> Steuerelement für jede Vorlage im enthalten sein sollen die <xref:System.Web.UI.WebControls.DataList> Steuerelement. Nur die Zeilen der Tabellen werden angezeigt. Alle anderen Inhalte in der Vorlage werden ignoriert. Verwenden Sie eine <xref:System.Web.UI.WebControls.Table> -Steuerelement für diese Funktion ordnungsgemäß funktioniert. Die <xref:System.Web.UI.HtmlControls.HtmlTable?displayProperty=nameWithType> Steuerelement ist nicht kompatibel mit dieser Eigenschaft.  
  
 Beim Erstellen einer Zelle für eine <xref:System.Web.UI.WebControls.Table> Steuerelement in einer Vorlage können Sie die <xref:System.Web.UI.WebControls.TableCell.ColumnSpan%2A> Eigenschaft der <xref:System.Web.UI.WebControls.TableCell> Objekt zum Steuern der Anzahl der Spalten, die Zelle erstreckt. Sie können auch die <xref:System.Web.UI.WebControls.TableCell.RowSpan%2A> Eigenschaft, um die Anzahl der Zeilen zu steuern, die Zelle erstreckt.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.DataList.RepeatColumns%2A>, <xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A>, und <xref:System.Web.UI.WebControls.DataList.RepeatLayout%2A> Eigenschaften wirken sich nicht auf die Darstellung der <xref:System.Web.UI.WebControls.DataList> steuern, wenn diese Eigenschaft auf festgelegt ist `true`.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie mit der <xref:System.Web.UI.WebControls.DataList.ExtractTemplateRows%2A> Eigenschaft zum Extrahieren und Anzeigen von Zeilen des <xref:System.Web.UI.WebControls.Table> Steuerelemente, die in den Vorlagen von den <xref:System.Web.UI.WebControls.DataList> Steuerelement.  
  
> [!NOTE]
>  Im folgenden Codebeispiel wird das Codemodell von Einzeldatei-verwendet und möglicherweise nicht ordnungsgemäß ausgeführt werden, wenn direkt in einer Code-Behind-Datei kopiert. In diesem Codebeispiel wird, muss in eine leere Textdatei kopiert werden, die einer ASPX-Erweiterung. Weitere Informationen zu den Web Forms-Codemodell, finden Sie unter [ASP.NET Web Forms-Seite-Codemodell](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[Classic DataList.ExtractTemplateRows Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataList.ExtractTemplateRows Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataList.ExtractTemplateRows Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataList.ExtractTemplateRows Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Table" />
        <altmember cref="T:System.Web.UI.WebControls.TableRow" />
        <altmember cref="T:System.Web.UI.WebControls.TableCell" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.AlternatingItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SeparatorTemplate" />
      </Docs>
    </Member>
    <Member MemberName="FooterStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle FooterStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle FooterStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.FooterStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FooterStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ FooterStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FooterStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.DataList.FooterStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Stileigenschaften für den Fußzeilenbereich des <see cref="T:System.Web.UI.WebControls.DataList" />-Steuerelements ab.</summary>
        <value>Ein <see cref="T:System.Web.UI.WebControls.TableItemStyle" />-Objekt, das die Stileigenschaften für den Fußzeilenbereich des <see cref="T:System.Web.UI.WebControls.DataList" />-Steuerelements enthält. Der Standardwert ist ein leeres <see cref="T:System.Web.UI.WebControls.TableItemStyle" />-Objekt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Geben Sie einen benutzerdefinierten Stil für den Fußzeilenbereich des mithilfe dieser Eigenschaft die <xref:System.Web.UI.WebControls.DataList> Steuerelement. Allgemeine Stilattribute, die angepasst werden können, enthalten die Vordergrundfarbe, Hintergrundfarbe, Schriftart und Ausrichtung des Inhalts in der Zelle. Bereitstellen von einer anderen workflowart verbessert das Erscheinungsbild von der <xref:System.Web.UI.WebControls.DataList> Steuerelement.  
  
 Die <xref:System.Web.UI.WebControls.DataList.FooterStyle%2A> Eigenschaft der <xref:System.Web.UI.WebControls.DataList> Steuerelement erbt von die stileinstellungen für den <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> Eigenschaft. Z. B., wenn Sie angeben, dass eine rote Schriftart für die <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> -Eigenschaft, die <xref:System.Web.UI.WebControls.DataList.FooterStyle%2A> Eigenschaft müssen ebenfalls einen roten Schrift. Dadurch können Sie eine allgemeine Darstellung des Steuerelements zu ermöglichen, indem Sie eine einzelne Style-Eigenschaft festlegen. Sie können die geerbte stileinstellungen außer Kraft setzen, durch Festlegen der <xref:System.Web.UI.WebControls.DataList.FooterStyle%2A> Eigenschaft. Sie können beispielsweise angeben, eine blaue Schriftart für die <xref:System.Web.UI.WebControls.DataList.FooterStyle%2A> -Eigenschaft, überschreiben die roten Schrift in angegebenen die <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> Eigenschaft.  
  
 Um einen benutzerdefinierten Stil für den Fußzeilenbereich anzugeben, fügen die `<FooterStyle>` Tags zwischen die öffnenden und schließenden Tags eines der <xref:System.Web.UI.WebControls.DataList> Steuerelement. Anschließend können Sie die Stilattribute innerhalb des öffnenden auflisten `<FooterStyle>` Tag.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.DataList.ShowFooter%2A> Eigenschaft muss festgelegt werden, um `true` für diese Eigenschaft angezeigt werden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.UI.WebControls.DataList.FooterStyle%2A> -Eigenschaft an eine benutzerdefinierte Hintergrundfarbe für den Fußzeilenbereich des der <xref:System.Web.UI.WebControls.DataList> Steuerelement.  
  
> [!NOTE]
>  Im folgenden Codebeispiel wird das Codemodell von Einzeldatei-verwendet und möglicherweise nicht ordnungsgemäß ausgeführt werden, wenn direkt in einer Code-Behind-Datei kopiert. In diesem Codebeispiel wird, muss in eine leere Textdatei kopiert werden, die einer ASPX-Erweiterung. Weitere Informationen zu den Web Forms-Codemodell, finden Sie unter [ASP.NET Web Forms-Seite-Codemodell](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListHeaderStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListHeaderStyle/CS/datalistheaderstylecs.aspx#1)]
 [!code-aspx-vb[DataListHeaderStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListHeaderStyle/VB/datalistheaderstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.ShowFooter" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="FooterTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate FooterTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate FooterTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.FooterTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property FooterTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ FooterTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FooterTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.DataList.FooterTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DataListItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Vorlage für den Fußzeilenbereich des <see cref="T:System.Web.UI.WebControls.DataList" />-Steuerelements ab oder legt diese fest.</summary>
        <value>Ein <see cref="T:System.Web.UI.ITemplate" />-Objekt, das die Vorlage für den Fußzeilenbereich des <see cref="T:System.Web.UI.WebControls.DataList" />-Steuerelements enthält. Der Standardwert ist <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.DataList.FooterTemplate%2A> Eigenschaft, um den Inhalt des Fußzeilenbereichs steuern. Die Darstellung des Fußzeilenbereichs wird gesteuert, indem die <xref:System.Web.UI.WebControls.DataList.FooterStyle%2A> Eigenschaft.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.DataList.ShowFooter%2A> Eigenschaft muss festgelegt werden, um `true` für diese Eigenschaft angezeigt werden.  
  
 Die <xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A> Eigenschaft der <xref:System.Web.UI.WebControls.DataList> Steuerelement erbt von die stileinstellungen für den <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> Eigenschaft. Z. B., wenn Sie angeben, dass eine rote Schriftart für die <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> -Eigenschaft, die <xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A> Eigenschaft müssen ebenfalls einen roten Schrift. Dadurch können Sie eine allgemeine Darstellung des Steuerelements zu ermöglichen, indem Sie eine einzelne Style-Eigenschaft festlegen. Sie können die geerbte stileinstellungen außer Kraft setzen, durch Festlegen der <xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A> Eigenschaft. Sie können beispielsweise angeben, eine blaue Schriftart für die <xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A> -Eigenschaft, überschreiben die roten Schrift in angegebenen die <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> Eigenschaft.  
  
 Platzieren Sie zum Angeben einer Vorlage für den Fußzeilenbereich der `<FooterTemplate>` Tags zwischen die öffnenden und schließenden Tags eines der <xref:System.Web.UI.WebControls.DataList> Steuerelement. Anschließend können Sie den Inhalt der Vorlage zwischen den öffnenden und schließenden auflisten `<FooterTemplate>` Tags.  
  
> [!CAUTION]
>  Dieses Steuerelement kann verwendet werden, zum Anzeigen von Benutzereingaben, u. u. bösartige Clientskripts enthalten können. Überprüfen Sie alle Informationen, die für das ausführbare Skript, SQL-Anweisungen oder anderen Code von einem Client gesendet wird, vor der Anzeige in Ihrer Anwendung. Sie können Steuerelemente zur gültigkeitsprüfung verwenden, um Benutzereingaben zu überprüfen, bevor der Eingabetext in einem Steuerelement angezeigt. ASP.NET bietet eine Funktion für den Überprüfung eingabeanforderung blockskript und HTML in einer Benutzereingabe. Weitere Informationen finden Sie unter [Standardsteuerelemente Sichern](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [Vorgehensweise: Protect Against Script Exploits im Web-Apps durch Anwenden von HTML-Codierung Zeichenfolgen](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), und [Validieren der Benutzereingabe in ASP.NET Web Pages](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.UI.WebControls.DataList.FooterTemplate%2A> Eigenschaft, um den Inhalt des Fußzeilenbereichs steuern die <xref:System.Web.UI.WebControls.DataList> Steuerelement.  
  
> [!NOTE]
>  Im folgenden Codebeispiel wird das Codemodell von Einzeldatei-verwendet und möglicherweise nicht ordnungsgemäß ausgeführt werden, wenn direkt in einer Code-Behind-Datei kopiert. In diesem Codebeispiel wird, muss in eine leere Textdatei kopiert werden, die einer ASPX-Erweiterung. Weitere Informationen zu den Web Forms-Codemodell, finden Sie unter [ASP.NET Web Forms-Seite-Codemodell](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListHeaderStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListHeaderStyle/CS/datalistheaderstylecs.aspx#1)]
 [!code-aspx-vb[DataListHeaderStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListHeaderStyle/VB/datalistheaderstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.ShowFooter" />
        <altmember cref="T:System.Web.UI.ITemplate" />
      </Docs>
    </Member>
    <Member MemberName="GridLines">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.GridLines GridLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.GridLines GridLines" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.GridLines" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property GridLines As GridLines" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::GridLines GridLines { System::Web::UI::WebControls::GridLines get(); void set(System::Web::UI::WebControls::GridLines value); };" />
      <MemberSignature Language="F#" Value="member this.GridLines : System.Web.UI.WebControls.GridLines with get, set" Usage="System.Web.UI.WebControls.DataList.GridLines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridLines</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Stil der Rasterlinien für das <see cref="T:System.Web.UI.WebControls.DataList" />-Steuerelement ab oder legt diesen fest, wenn die <see cref="P:System.Web.UI.WebControls.DataList.RepeatLayout" />-Eigenschaft auf <see langword="RepeatLayout.Table" /> festgelegt ist.</summary>
        <value>Einer der <see cref="T:System.Web.UI.WebControls.GridLines" />-Enumerationswerte. Der Standardwert ist <see langword="None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.DataList.GridLines%2A> -Eigenschaft an den Stil der Rasterlinien für die <xref:System.Web.UI.WebControls.DataList> Steuerelement. Die folgende Tabelle enthält die möglichen Formate.  
  
|Stil|Beschreibung |  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.GridLines.None>|Keine Rasterlinien.|  
|<xref:System.Web.UI.WebControls.GridLines.Horizontal>|Zeigt die horizontalen Rasterlinien an.|  
|<xref:System.Web.UI.WebControls.GridLines.Vertical>|Zeigt die vertikale Gitternetzlinie.|  
|<xref:System.Web.UI.WebControls.GridLines.Both>|Zeigt die horizontalen und vertikalen Rasterlinien an.|  
  
> [!NOTE]
>  Diese Eigenschaft gilt nur, wenn die <xref:System.Web.UI.WebControls.DataList.RepeatLayout%2A> -Eigenschaftensatz auf `RepeatLayout.Table`.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.UI.WebControls.DataList.GridLines%2A> Eigenschaft, um die vertikalen und horizontalen Rasterlinien der <xref:System.Web.UI.WebControls.DataList> Steuerelement.  
  
> [!NOTE]
>  Im folgenden Codebeispiel wird das Codemodell von Einzeldatei-verwendet und möglicherweise nicht ordnungsgemäß ausgeführt werden, wenn direkt in einer Code-Behind-Datei kopiert. In diesem Codebeispiel wird, muss in eine leere Textdatei kopiert werden, die einer ASPX-Erweiterung. Weitere Informationen zu den Web Forms-Codemodell, finden Sie unter [ASP.NET Web Forms-Seite-Codemodell](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListLayout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListLayout/CS/datalistlayoutcs.aspx#1)]
 [!code-aspx-vb[DataListLayout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListLayout/VB/datalistlayoutvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridLines" />
      </Docs>
    </Member>
    <Member MemberName="HeaderStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle HeaderStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle HeaderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.HeaderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HeaderStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ HeaderStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HeaderStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.DataList.HeaderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Stileigenschaften für den Kopfzeilenbereich des <see cref="T:System.Web.UI.WebControls.DataList" />-Steuerelements ab.</summary>
        <value>Ein <see cref="T:System.Web.UI.WebControls.TableItemStyle" />-Objekt, das die Stileigenschaften für den Kopfzeilenbereich des <see cref="T:System.Web.UI.WebControls.DataList" />-Steuerelements enthält. Der Standardwert ist ein leeres <see cref="T:System.Web.UI.WebControls.TableItemStyle" />-Objekt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mithilfe dieser Eigenschaft geben Sie einen benutzerdefinierten Stil für die Überschrift der <xref:System.Web.UI.WebControls.DataList> Steuerelement. Allgemeine Stilattribute, die angepasst werden können, enthalten die Vordergrundfarbe, Hintergrundfarbe, Schriftart und Ausrichtung des Inhalts in der Zelle. Bereitstellen von einer anderen workflowart verbessert das Erscheinungsbild von der <xref:System.Web.UI.WebControls.DataList> Steuerelement.  
  
 Um einen benutzerdefinierten Stil für den Kopfzeilenbereich anzugeben, fügen die `<HeaderStyle>` Tags zwischen die öffnenden und schließenden Tags eines der <xref:System.Web.UI.WebControls.DataList> Steuerelement. Anschließend können Sie die Stilattribute innerhalb des öffnenden auflisten `<HeaderStyle>` Tag.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.DataList.ShowHeader%2A> Eigenschaft muss festgelegt werden, um `true` für diese Eigenschaft angezeigt werden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A> -Eigenschaft an eine benutzerdefinierte Hintergrundfarbe für den Kopfzeilenbereich des der <xref:System.Web.UI.WebControls.DataList> Steuerelement.  
  
> [!NOTE]
>  Im folgenden Codebeispiel wird das Codemodell von Einzeldatei-verwendet und möglicherweise nicht ordnungsgemäß ausgeführt werden, wenn direkt in einer Code-Behind-Datei kopiert. In diesem Codebeispiel wird, muss in eine leere Textdatei kopiert werden, die einer ASPX-Erweiterung. Weitere Informationen zu den Web Forms-Codemodell, finden Sie unter [ASP.NET Web Forms-Seite-Codemodell](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListHeaderStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListHeaderStyle/CS/datalistheaderstylecs.aspx#1)]
 [!code-aspx-vb[DataListHeaderStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListHeaderStyle/VB/datalistheaderstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.ShowHeader" />
      </Docs>
    </Member>
    <Member MemberName="HeaderTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate HeaderTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate HeaderTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.HeaderTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HeaderTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ HeaderTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.DataList.HeaderTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DataListItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Vorlage für den Kopfzeilenbereich des <see cref="T:System.Web.UI.WebControls.DataList" />-Steuerelements ab oder legt diese fest.</summary>
        <value>Eine <see cref="T:System.Web.UI.ITemplate" />, die die Vorlage für den Kopfzeilenbereich des <see cref="T:System.Web.UI.WebControls.DataList" />-Steuerelements enthält. Der Standardwert ist <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.DataList.HeaderTemplate%2A> Eigenschaft, um den Inhalt des Headerbereichs steuern. Die Darstellung des Headerabschnitts wird gesteuert, indem die <xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A> Eigenschaft.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.DataList.ShowHeader%2A> Eigenschaft muss festgelegt werden, um `true` für diese Eigenschaft angezeigt werden.  
  
 Zum Angeben einer Vorlage für den Kopfzeilenbereich fügen Sie der `<HeaderTemplate>` Tags zwischen die öffnenden und schließenden Tags eines der <xref:System.Web.UI.WebControls.DataList> Steuerelement. Anschließend können Sie den Inhalt der Vorlage zwischen den öffnenden und schließenden auflisten `<HeaderTemplate>` Tags.  
  
> [!CAUTION]
>  Dieses Steuerelement kann verwendet werden, zum Anzeigen von Benutzereingaben, u. u. bösartige Clientskripts enthalten können. Überprüfen Sie alle Informationen, die für das ausführbare Skript, SQL-Anweisungen oder anderen Code von einem Client gesendet wird, vor der Anzeige in Ihrer Anwendung. Sie können Steuerelemente zur gültigkeitsprüfung verwenden, um Benutzereingaben zu überprüfen, bevor der Eingabetext in einem Steuerelement angezeigt. ASP.NET bietet eine Funktion für den Überprüfung eingabeanforderung blockskript und HTML in einer Benutzereingabe. Weitere Informationen finden Sie unter [Standardsteuerelemente Sichern](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [Vorgehensweise: Protect Against Script Exploits im Web-Apps durch Anwenden von HTML-Codierung Zeichenfolgen](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), und [Validieren der Benutzereingabe in ASP.NET Web Pages](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.UI.WebControls.DataList.HeaderTemplate%2A> Eigenschaft, um den Inhalt des Headerbereichs der steuern die <xref:System.Web.UI.WebControls.DataList> Steuerelement.  
  
> [!NOTE]
>  Im folgenden Codebeispiel wird das Codemodell von Einzeldatei-verwendet und möglicherweise nicht ordnungsgemäß ausgeführt werden, wenn direkt in einer Code-Behind-Datei kopiert. In diesem Codebeispiel wird, muss in eine leere Textdatei kopiert werden, die einer ASPX-Erweiterung. Weitere Informationen zu den Web Forms-Codemodell, finden Sie unter [ASP.NET Web Forms-Seite-Codemodell](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListLayout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListLayout/CS/datalistlayoutcs.aspx#1)]
 [!code-aspx-vb[DataListLayout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListLayout/VB/datalistlayoutvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.HeaderStyle" />
        <altmember cref="T:System.Web.UI.ITemplate" />
      </Docs>
    </Member>
    <Member MemberName="InitializeItem">
      <MemberSignature Language="C#" Value="protected virtual void InitializeItem (System.Web.UI.WebControls.DataListItem item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeItem(class System.Web.UI.WebControls.DataListItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.InitializeItem(System.Web.UI.WebControls.DataListItem)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitializeItem (item As DataListItem)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializeItem(System::Web::UI::WebControls::DataListItem ^ item);" />
      <MemberSignature Language="F#" Value="abstract member InitializeItem : System.Web.UI.WebControls.DataListItem -&gt; unit&#xA;override this.InitializeItem : System.Web.UI.WebControls.DataListItem -&gt; unit" Usage="dataList.InitializeItem item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Web.UI.WebControls.DataListItem" />
      </Parameters>
      <Docs>
        <param name="item">Die zu initialisierende <see cref="T:System.Web.UI.WebControls.DataListItem" />.</param>
        <summary>Initialisiert auf der Grundlage der angegebenen Vorlagen und Stile für den Listenelementtyp ein <see cref="T:System.Web.UI.WebControls.DataListItem" />-Objekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.DataList.InitializeItem%2A> Methode wird hauptsächlich von Steuerelemententwicklern verwendet, zum Erweitern der <xref:System.Web.UI.WebControls.DataList> Steuerelement.  
  
 Die <xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A> -Methode verwendet die <xref:System.Web.UI.WebControls.DataList.CreateItem%2A> und <xref:System.Web.UI.WebControls.DataList.InitializeItem%2A> Methoden zum Erstellen von <xref:System.Web.UI.WebControls.DataListItem> Steuerelemente, die die Header, Footer, Trennzeichen und datengebundenen Elemente in der Liste darstellen. Sie erreichen die datengebundenen Elemente für die Liste der über die <xref:System.Web.UI.WebControls.DataList.Items%2A> Auflistung. Es stehen alle Elementtypen, einschließlich der Kopfzeile, Fußzeile und Trennzeichen für Elemente, über die <xref:System.Web.UI.WebControls.BaseDataList.Controls%2A> Auflistung.  
  
 Überschreiben der <xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A> Methode zum Anpassen wie <xref:System.Web.UI.WebControls.DataListItem> Steuerelemente erstellt oder hinzugefügt werden die <xref:System.Web.UI.WebControls.DataList> Steuerelement. Überschreiben der <xref:System.Web.UI.WebControls.DataList.InitializeItem%2A> Methode zum Anpassen von Vorlagen für eine <xref:System.Web.UI.WebControls.DataListItem> Steuerelement.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataList.CreateItem(System.Int32,System.Web.UI.WebControls.ListItemType)" />
        <altmember cref="T:System.Web.UI.WebControls.ListItemType" />
      </Docs>
    </Member>
    <Member MemberName="ItemCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataListCommandEventHandler ItemCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataListCommandEventHandler ItemCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataList.ItemCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemCommand As DataListCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataListCommandEventHandler ^ ItemCommand;" />
      <MemberSignature Language="F#" Value="member this.ItemCommand : System.Web.UI.WebControls.DataListCommandEventHandler " Usage="member this.ItemCommand : System.Web.UI.WebControls.DataListCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn auf eine beliebige Schaltfläche im <see cref="T:System.Web.UI.WebControls.DataList" />-Steuerelement geklickt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.DataList.ItemCommand> Ereignis wird ausgelöst, wenn keine der Schaltflächen, in geklickt wird der <xref:System.Web.UI.WebControls.DataList> steuern und wird häufig verwendet, wenn Sie ein Schaltflächen-Steuerelement mit einem benutzerdefinierten haben `CommandName` Wert.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [wie: Behandeln von Ereignissen in einer Web Forms-Anwendung](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie angegeben und code für die <xref:System.Web.UI.WebControls.DataList.ItemCommand> Ereignis auf ein Element aus der <xref:System.Web.UI.WebControls.DataList> Steuerelement.  
  
> [!NOTE]
>  Im folgenden Codebeispiel wird das Codemodell von Einzeldatei-verwendet und möglicherweise nicht ordnungsgemäß ausgeführt werden, wenn direkt in einer Code-Behind-Datei kopiert. In diesem Codebeispiel wird, muss in eine leere Textdatei kopiert werden, die einer ASPX-Erweiterung. Weitere Informationen zu den Web Forms-Codemodell, finden Sie unter [ASP.NET Web Forms-Seite-Codemodell](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListItemCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCommand/CS/datalistitemcommandcs.aspx#1)]
 [!code-aspx-vb[DataListItemCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCommand/VB/datalistitemcommandvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListItemCommand2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCommand2/CS/datalistitemcommand2cs.aspx#1)]
 [!code-aspx-vb[DataListItemCommand2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCommand2/VB/datalistitemcommand2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnItemCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemCreated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataListItemEventHandler ItemCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataListItemEventHandler ItemCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataList.ItemCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemCreated As DataListItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataListItemEventHandler ^ ItemCreated;" />
      <MemberSignature Language="F#" Value="member this.ItemCreated : System.Web.UI.WebControls.DataListItemEventHandler " Usage="member this.ItemCreated : System.Web.UI.WebControls.DataListItemEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf dem Server ein, wenn im <see cref="T:System.Web.UI.WebControls.DataList" />-Steuerelement ein Element erstellt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.DataList.ItemCreated> Ereignis wird ausgelöst, wenn ein Element in der <xref:System.Web.UI.WebControls.DataList> Steuerelement erstellt wird, wird sowohl während der Roundtrips und zur Zeit Daten an das Steuerelement gebunden ist.  
  
 Die <xref:System.Web.UI.WebControls.DataList.ItemCreated> Ereignis wird häufig zum Steuern von Inhalt und Darstellung einer Zeile in der <xref:System.Web.UI.WebControls.DataList> Steuerelement.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [wie: Behandeln von Ereignissen in einer Web Forms-Anwendung](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie angegeben und code für die <xref:System.Web.UI.WebControls.DataList.ItemCreated> Ereignis, um die Reihenfolge angezeigt, in der die Elemente in der <xref:System.Web.UI.WebControls.DataList> Steuerelement erstellt werden.  
  
> [!NOTE]
>  Im folgenden Codebeispiel wird das Codemodell von Einzeldatei-verwendet und möglicherweise nicht ordnungsgemäß ausgeführt werden, wenn direkt in einer Code-Behind-Datei kopiert. In diesem Codebeispiel wird, muss in eine leere Textdatei kopiert werden, die einer ASPX-Erweiterung. Weitere Informationen zu den Web Forms-Codemodell, finden Sie unter [ASP.NET Web Forms-Seite-Codemodell](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListItemCreated#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCreated/CS/datalistitemcreatedcs.aspx#1)]
 [!code-aspx-vb[DataListItemCreated#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCreated/VB/datalistitemcreatedvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListItemCreated2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCreated2/CS/datalistitemcreated2cs.aspx#1)]
 [!code-aspx-vb[DataListItemCreated2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCreated2/VB/datalistitemcreated2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListItemEventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnItemCreated(System.Web.UI.WebControls.DataListItemEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemDataBound">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataListItemEventHandler ItemDataBound;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataListItemEventHandler ItemDataBound" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataList.ItemDataBound" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemDataBound As DataListItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataListItemEventHandler ^ ItemDataBound;" />
      <MemberSignature Language="F#" Value="member this.ItemDataBound : System.Web.UI.WebControls.DataListItemEventHandler " Usage="member this.ItemDataBound : System.Web.UI.WebControls.DataListItemEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn ein Element an das <see cref="T:System.Web.UI.WebControls.DataList" />-Steuerelement datengebunden wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.DataList.ItemDataBound> Ereignis wird ausgelöst, nachdem ein Element an Daten gebunden ist. die <xref:System.Web.UI.WebControls.DataList> Steuerelement. Dieses Ereignis bietet Ihnen die letzte Gelegenheit, die Daten zugreifen, wenn er auf dem Client angezeigt wird. Nachdem dieses Ereignis ausgelöst wurde, ist das Datenelement nicht mehr verfügbar.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [wie: Behandeln von Ereignissen in einer Web Forms-Anwendung](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie angegeben und code für die <xref:System.Web.UI.WebControls.DataList.ItemDataBound> Ereignis, um die Reihenfolge angezeigt, in der die Elemente in der <xref:System.Web.UI.WebControls.DataList> Steuerelement an das Steuerelement gebunden sind.  
  
> [!NOTE]
>  Im folgenden Codebeispiel wird das Codemodell von Einzeldatei-verwendet und möglicherweise nicht ordnungsgemäß ausgeführt werden, wenn direkt in einer Code-Behind-Datei kopiert. In diesem Codebeispiel wird, muss in eine leere Textdatei kopiert werden, die einer ASPX-Erweiterung. Weitere Informationen zu den Web Forms-Codemodell, finden Sie unter [ASP.NET Web Forms-Seite-Codemodell](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListItemDataBound#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemDataBound/CS/datalistitemdataboundcs.aspx#1)]
 [!code-aspx-vb[DataListItemDataBound#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemDataBound/VB/datalistitemdataboundvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListItemDataBound2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemDataBound2/CS/datalistitemdatabound2cs.aspx#1)]
 [!code-aspx-vb[DataListItemDataBound2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemDataBound2/VB/datalistitemdatabound2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListItemEventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnItemDataBound(System.Web.UI.WebControls.DataListItemEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataListItemCollection Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataListItemCollection Items" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.Items" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Items As DataListItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::DataListItemCollection ^ Items { System::Web::UI::WebControls::DataListItemCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : System.Web.UI.WebControls.DataListItemCollection" Usage="System.Web.UI.WebControls.DataList.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Auflistung von <see cref="T:System.Web.UI.WebControls.DataListItem" />-Objekten ab, die die einzelnen Elemente im Steuerelement darstellen.</summary>
        <value>Eine <see cref="T:System.Web.UI.WebControls.DataListItemCollection" />, die eine Auflistung von <see cref="T:System.Web.UI.WebControls.DataListItem" />-Objekten enthält, die die einzelnen Elemente im <see cref="T:System.Web.UI.WebControls.DataList" />-Steuerelement darstellen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.DataList.Items%2A> Auflistung programmgesteuert die Elemente in der <xref:System.Web.UI.WebControls.DataList> Steuerelement. Die <xref:System.Web.UI.WebControls.DataList.Items%2A> Auflistung bietet keine Methoden zum Hinzufügen oder Entfernen von Elementen in der Auflistung. Sie können jedoch den Inhalt eines Elements steuern, indem Sie die Bereitstellung eines Handlers für die <xref:System.Web.UI.WebControls.DataList.ItemCreated> Ereignis.  
  
> [!NOTE]
>  Nur Elemente, die an die Datenquelle gebunden sind in enthalten die <xref:System.Web.UI.WebControls.DataList.Items%2A> Auflistung. Die Kopfzeile, Fußzeile und Trennzeichen sind nicht in der Auflistung enthalten.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.UI.WebControls.DataList.Items%2A> Auflistung zum Anzeigen von Elementen in der <xref:System.Web.UI.WebControls.DataList> Steuerelement.  
  
> [!NOTE]
>  Im folgenden Codebeispiel wird das Codemodell von Einzeldatei-verwendet und möglicherweise nicht ordnungsgemäß ausgeführt werden, wenn direkt in einer Code-Behind-Datei kopiert. In diesem Codebeispiel wird, muss in eine leere Textdatei kopiert werden, die einer ASPX-Erweiterung. Weitere Informationen zu den Web Forms-Codemodell, finden Sie unter [ASP.NET Web Forms-Seite-Codemodell](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[Classic DataList.Items Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataList.Items Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataList.Items Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataList.Items Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListItem" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.ItemCreated" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnItemCreated(System.Web.UI.WebControls.DataListItemEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle ItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle ItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.ItemStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ItemStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ ItemStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.DataList.ItemStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Stileigenschaften für die Elemente im <see cref="T:System.Web.UI.WebControls.DataList" />-Steuerelement ab.</summary>
        <value>Ein <see cref="T:System.Web.UI.WebControls.TableItemStyle" />-Objekt, das die Stileigenschaften für die Elemente im <see cref="T:System.Web.UI.WebControls.DataList" />-Steuerelement enthält. Der Standardwert ist ein leeres <see cref="T:System.Web.UI.WebControls.TableItemStyle" />-Objekt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mithilfe dieser Eigenschaft geben Sie einen benutzerdefinierten Stil für die Elemente der <xref:System.Web.UI.WebControls.DataList> Steuerelement. Allgemeine Stilattribute, die angepasst werden können, enthalten die Vordergrundfarbe, Hintergrundfarbe, Schriftart und Ausrichtung des Inhalts in der Zelle. Bereitstellen von einer anderen workflowart verbessert das Erscheinungsbild von der <xref:System.Web.UI.WebControls.DataList> Steuerelement.  
  
 Element Formateigenschaften in der <xref:System.Web.UI.WebControls.DataList> Steuerelement werden durch die Style-Eigenschaft für ein Element in eine andere durch eine Hierarchie geerbt. Die Stileigenschaften niedriger festgelegt, in der Hierarchie werden von Stileigenschaften, die in der Hierarchie höher geerbt. Z. B., wenn Sie angeben, dass eine rote Schriftart für die <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> -Eigenschaft, die alle anderen Stileigenschaften eines Elements in der <xref:System.Web.UI.WebControls.DataList> Steuerelement wird auch einen roten Schrift verfügen. Dadurch können Sie eine allgemeine Darstellung des Steuerelements zu ermöglichen, indem Sie eine einzelnes Element Style-Eigenschaft festlegen. Sie können die geerbte stileinstellungen für einen Artikel-Style-Eigenschaft überschreiben, die durch Festlegen der Style-Eigenschaften in der Hierarchie höher ist. Sie können beispielsweise angeben, eine blaue Schriftart für die <xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> -Eigenschaft, überschreiben die roten Schrift in angegebenen die <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> Eigenschaft. Die folgende Tabelle enthält die Reihenfolge der Datentyphierarchie von der höchsten zur niedrigsten.  
  
|Rangfolge|Style-Eigenschaft|  
|----------------|--------------------|  
|1|<xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A>|  
|2|<xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A>|  
|3|<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>|  
|4|<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>|  
|5|<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>|  
  
 An einen benutzerdefinierten Stil für die Elemente der <xref:System.Web.UI.WebControls.DataList> steuern, platzieren Sie die `<ItemStyle>` Tags zwischen die öffnenden und schließenden Tags eines der <xref:System.Web.UI.WebControls.DataList> Steuerelement. Anschließend können Sie die Stilattribute innerhalb des öffnenden auflisten `<ItemStyle>` Tag.  
  
 Sie können auch die <xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> Eigenschaft geben Sie eine andere Darstellung für das abwechselnde Elemente im der <xref:System.Web.UI.WebControls.DataList> Steuerelement.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> -Eigenschaft an eine andere Hintergrundfarbe für die Elemente in der <xref:System.Web.UI.WebControls.DataList> Steuerelement.  
  
> [!NOTE]
>  Im folgenden Codebeispiel wird das Codemodell von Einzeldatei-verwendet und möglicherweise nicht ordnungsgemäß ausgeführt werden, wenn direkt in einer Code-Behind-Datei kopiert. In diesem Codebeispiel wird, muss in eine leere Textdatei kopiert werden, die einer ASPX-Erweiterung. Weitere Informationen zu den Web Forms-Codemodell, finden Sie unter [ASP.NET Web Forms-Seite-Codemodell](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListItemStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemStyle/CS/datalistitemstylecs.aspx#1)]
 [!code-aspx-vb[DataListItemStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemStyle/VB/datalistitemstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.AlternatingItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="ItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate ItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.ItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ ItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.DataList.ItemTemplate" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IWizardSideBarListControl.ItemTemplate</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DataListItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Vorlage für die Elemente im <see cref="T:System.Web.UI.WebControls.DataList" />-Steuerelement ab oder legt diese fest.</summary>
        <value>Eine <see cref="T:System.Web.UI.ITemplate" />, die die Vorlage für die Elemente im <see cref="T:System.Web.UI.WebControls.DataList" />-Steuerelement darstellt. Der Standardwert ist <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.DataList.ItemTemplate%2A> Eigenschaft, um den Inhalt der Elemente im Steuern der <xref:System.Web.UI.WebControls.DataList> Steuerelement. Die Darstellung der Elemente in der <xref:System.Web.UI.WebControls.DataList> Steuerelement wird gesteuert, indem die <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> Eigenschaft.  
  
 Zum Angeben einer Vorlage für die Elemente der <xref:System.Web.UI.WebControls.DataList> steuern, platzieren Sie die `<ItemTemplate>` Tags zwischen die öffnenden und schließenden Tags eines der <xref:System.Web.UI.WebControls.DataList> Steuerelement. Anschließend können Sie den Inhalt der Vorlage zwischen den öffnenden und schließenden auflisten `<ItemTemplate>` Tags.  
  
 Optional können Sie die <xref:System.Web.UI.WebControls.DataList.AlternatingItemTemplate%2A> Eigenschaft geben Sie eine andere Darstellung für das abwechselnde Elemente in der <xref:System.Web.UI.WebControls.DataList> Steuerelement.  
  
> [!CAUTION]
>  Dieses Steuerelement kann verwendet werden, zum Anzeigen von Benutzereingaben, u. u. bösartige Clientskripts enthalten können. Überprüfen Sie alle Informationen, die für das ausführbare Skript, SQL-Anweisungen oder anderen Code von einem Client gesendet wird, vor der Anzeige in Ihrer Anwendung. Sie können Steuerelemente zur gültigkeitsprüfung verwenden, um Benutzereingaben zu überprüfen, bevor der Eingabetext in einem Steuerelement angezeigt. ASP.NET bietet eine Funktion für den Überprüfung eingabeanforderung blockskript und HTML in einer Benutzereingabe. Weitere Informationen finden Sie unter [Standardsteuerelemente Sichern](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [Vorgehensweise: Protect Against Script Exploits im Web-Apps durch Anwenden von HTML-Codierung Zeichenfolgen](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), und [Validieren der Benutzereingabe in ASP.NET Web Pages](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.UI.WebControls.DataList.ItemTemplate%2A> Eigenschaft, um den Inhalt der Elemente im Steuern der <xref:System.Web.UI.WebControls.DataList> Steuerelement.  
  
> [!NOTE]
>  Im folgenden Codebeispiel wird das Codemodell von Einzeldatei-verwendet und möglicherweise nicht ordnungsgemäß ausgeführt werden, wenn direkt in einer Code-Behind-Datei kopiert. In diesem Codebeispiel wird, muss in eine leere Textdatei kopiert werden, die einer ASPX-Erweiterung. Weitere Informationen zu den Web Forms-Codemodell, finden Sie unter [ASP.NET Web Forms-Seite-Codemodell](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListLayout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListLayout/CS/datalistlayoutcs.aspx#1)]
 [!code-aspx-vb[DataListLayout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListLayout/VB/datalistlayoutvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.AlternatingItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.ItemStyle" />
        <altmember cref="T:System.Web.UI.ITemplate" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="dataList.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Ein Objekt, das den Zustand von <see cref="T:System.Web.UI.WebControls.DataList" /> darstellt.</param>
        <summary>Lädt den zuvor gespeicherten Ansichtszustand des <see cref="T:System.Web.UI.WebControls.DataList" />-Steuerelements.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird in erster Linie durch die .NET Framework-Infrastruktur verwendet und nicht direkt aus Ihrem Code verwendet werden soll.  Allerdings können Entwickler von Steuerelementen außer Kraft setzen diese Methode, um anzugeben, wie ein benutzerdefiniertes Serversteuerelement seinen Ansichtszustand wiederherstellt. Weitere Informationen finden Sie unter [ASP.NET State Management Overview](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce).  
  
 Die <xref:System.Web.UI.WebControls.DataList.LoadViewState%2A> Methode stellt die Ansichtszustandsinformationen für das <xref:System.Web.UI.WebControls.DataList> -Steuerelement aus einer früheren Seitenanforderung, die von gespeichert wurde die <xref:System.Web.UI.WebControls.DataList.SaveViewState%2A> Methode.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataList.SaveViewState" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="OnBubbleEvent">
      <MemberSignature Language="C#" Value="protected override bool OnBubbleEvent (object source, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnBubbleEvent(object source, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnBubbleEvent(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnBubbleEvent (source As Object, e As EventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnBubbleEvent(System::Object ^ source, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnBubbleEvent : obj * EventArgs -&gt; bool" Usage="dataList.OnBubbleEvent (source, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">Die Quelle des Ereignisses.</param>
        <param name="e">Die Ereignisdaten.</param>
        <summary>Bestimmt, ob das Ereignis für das Serversteuerelement in der UI-Serversteuerelementhierarchie der Seite nach oben übergeben wird.</summary>
        <returns>
          <see langword="true" />, wenn das Ereignis abgebrochen wurde, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnCancelCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnCancelCommand (System.Web.UI.WebControls.DataListCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCancelCommand(class System.Web.UI.WebControls.DataListCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCancelCommand (e As DataListCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCancelCommand(System::Web::UI::WebControls::DataListCommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCancelCommand : System.Web.UI.WebControls.DataListCommandEventArgs -&gt; unit&#xA;override this.OnCancelCommand : System.Web.UI.WebControls.DataListCommandEventArgs -&gt; unit" Usage="dataList.OnCancelCommand e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" />, das Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.DataList.CancelCommand" />-Ereignis aus. Dadurch können Sie einen benutzerdefinierten Handler für das Ereignis bereitstellen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.DataList.OnCancelCommand%2A> Methode zum Bereitstellen eines benutzerdefinierten Handlers für die <xref:System.Web.UI.WebControls.DataList.CancelCommand> Ereignis.  
  
 Die <xref:System.Web.UI.WebControls.DataList.CancelCommand> Ereignis wird ausgelöst, wenn die `Cancel` geklickt wird für ein Element in der <xref:System.Web.UI.WebControls.DataList> Steuerelement.  
  
 Ein typischer Handler für die <xref:System.Web.UI.WebControls.DataList.CancelCommand> Gruppen der <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> Eigenschaft `-1` (um das Element zu deaktivieren) und klicken Sie dann die Daten, die Bindung der <xref:System.Web.UI.WebControls.DataList> Steuerelement.  
  
> [!CAUTION]
>  Dieses Steuerelement kann verwendet werden, zum Anzeigen von Benutzereingaben, u. u. bösartige Clientskripts enthalten können. Überprüfen Sie alle Informationen, die für das ausführbare Skript, SQL-Anweisungen oder anderen Code von einem Client gesendet wird, vor der Anzeige in Ihrer Anwendung. Sie können Steuerelemente zur gültigkeitsprüfung verwenden, um Benutzereingaben zu überprüfen, bevor der Eingabetext in einem Steuerelement angezeigt. ASP.NET bietet eine Funktion für den Überprüfung eingabeanforderung blockskript und HTML in einer Benutzereingabe. Weitere Informationen finden Sie unter [Standardsteuerelemente Sichern](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [Vorgehensweise: Protect Against Script Exploits im Web-Apps durch Anwenden von HTML-Codierung Zeichenfolgen](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), und [Validieren der Benutzereingabe in ASP.NET Web Pages](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [wie: Behandeln von Ereignissen in einer Web Forms-Anwendung](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
 Mit der <xref:System.Web.UI.WebControls.DataList.OnCancelCommand%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie angegeben und code für die <xref:System.Web.UI.WebControls.DataList.CancelCommand> Ereignis. Sie bricht alle Änderungen, die auf ein Element in der <xref:System.Web.UI.WebControls.DataList> steuern, wann die `Cancel` geklickt wird.  
  
> [!NOTE]
>  Im folgenden Codebeispiel wird das Codemodell von Einzeldatei-verwendet und möglicherweise nicht ordnungsgemäß ausgeführt werden, wenn direkt in einer Code-Behind-Datei kopiert. In diesem Codebeispiel wird, muss in eine leere Textdatei kopiert werden, die einer ASPX-Erweiterung. Weitere Informationen zu den Web Forms-Codemodell, finden Sie unter [ASP.NET Web Forms-Seite-Codemodell](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Beim Überschreiben von <see cref="M:System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> in einer abgeleiteten Klasse, werden Sie sicher, dass der Basisklasse aufrufen <see cref="M:System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.DataList.CancelCommand" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnDeleteCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnDeleteCommand (System.Web.UI.WebControls.DataListCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDeleteCommand(class System.Web.UI.WebControls.DataListCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDeleteCommand (e As DataListCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDeleteCommand(System::Web::UI::WebControls::DataListCommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDeleteCommand : System.Web.UI.WebControls.DataListCommandEventArgs -&gt; unit&#xA;override this.OnDeleteCommand : System.Web.UI.WebControls.DataListCommandEventArgs -&gt; unit" Usage="dataList.OnDeleteCommand e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" />, das Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.DataList.DeleteCommand" />-Ereignis aus. Dadurch können Sie einen benutzerdefinierten Handler für das Ereignis bereitstellen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.DataList.OnDeleteCommand%2A> Methode zum Bereitstellen eines benutzerdefinierten Handlers für die <xref:System.Web.UI.WebControls.DataList.DeleteCommand> Ereignis.  
  
 Die <xref:System.Web.UI.WebControls.DataList.DeleteCommand> Ereignis wird ausgelöst, wenn die `Delete` geklickt wird für ein Element in der <xref:System.Web.UI.WebControls.DataList> Steuerelement.  
  
 Ein typischer Handler für die <xref:System.Web.UI.WebControls.DataList.DeleteCommand> Ereignis entfernt das ausgewählte Element aus der Datenquelle, und Sie anschließend die Daten, die Bindung der <xref:System.Web.UI.WebControls.DataList> Steuerelement.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [wie: Behandeln von Ereignissen in einer Web Forms-Anwendung](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
 Mit der <xref:System.Web.UI.WebControls.DataList.OnDeleteCommand%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie angegeben und code für die <xref:System.Web.UI.WebControls.DataList.DeleteCommand> Ereignis. Löscht das ausgewählte Element in der <xref:System.Web.UI.WebControls.DataList> steuern, wann die `Delete` geklickt wird.  
  
> [!NOTE]
>  Im folgenden Codebeispiel wird das Codemodell von Einzeldatei-verwendet und möglicherweise nicht ordnungsgemäß ausgeführt werden, wenn direkt in einer Code-Behind-Datei kopiert. In diesem Codebeispiel wird, muss in eine leere Textdatei kopiert werden, die einer ASPX-Erweiterung. Weitere Informationen zu den Web Forms-Codemodell, finden Sie unter [ASP.NET Web Forms-Seite-Codemodell](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Beim Überschreiben von <see cref="M:System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> in einer abgeleiteten Klasse, werden Sie sicher, dass der Basisklasse aufrufen <see cref="M:System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.DataList.DeleteCommand" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnEditCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnEditCommand (System.Web.UI.WebControls.DataListCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEditCommand(class System.Web.UI.WebControls.DataListCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEditCommand (e As DataListCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEditCommand(System::Web::UI::WebControls::DataListCommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnEditCommand : System.Web.UI.WebControls.DataListCommandEventArgs -&gt; unit&#xA;override this.OnEditCommand : System.Web.UI.WebControls.DataListCommandEventArgs -&gt; unit" Usage="dataList.OnEditCommand e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" />, das Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.DataList.EditCommand" />-Ereignis aus. Dadurch können Sie einen benutzerdefinierten Handler für das Ereignis bereitstellen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.DataList.OnEditCommand%2A> Methode zum Bereitstellen eines benutzerdefinierten Handlers für die <xref:System.Web.UI.WebControls.DataList.EditCommand> Ereignis.  
  
 Die <xref:System.Web.UI.WebControls.DataList.EditCommand> Ereignis wird ausgelöst, wenn die `Edit` geklickt wird für ein Element in der <xref:System.Web.UI.WebControls.DataList> Steuerelement.  
  
 Ein typischer Handler für die <xref:System.Web.UI.WebControls.DataList.EditCommand> Ereignis legt die <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> Eigenschaft, um die ausgewählte Zeile und klicken Sie dann die Daten, die Bindung der <xref:System.Web.UI.WebControls.DataList> Steuerelement.  
  
> [!CAUTION]
>  Dieses Steuerelement kann verwendet werden, zum Anzeigen von Benutzereingaben, u. u. bösartige Clientskripts enthalten können. Überprüfen Sie alle Informationen, die für das ausführbare Skript, SQL-Anweisungen oder anderen Code von einem Client gesendet wird, vor der Anzeige in Ihrer Anwendung. Sie können Steuerelemente zur gültigkeitsprüfung verwenden, um Benutzereingaben zu überprüfen, bevor der Eingabetext in einem Steuerelement angezeigt. ASP.NET bietet eine Funktion für den Überprüfung eingabeanforderung blockskript und HTML in einer Benutzereingabe. Weitere Informationen finden Sie unter [Standardsteuerelemente Sichern](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [Vorgehensweise: Protect Against Script Exploits im Web-Apps durch Anwenden von HTML-Codierung Zeichenfolgen](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), und [Validieren der Benutzereingabe in ASP.NET Web Pages](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [wie: Behandeln von Ereignissen in einer Web Forms-Anwendung](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
 Mit der <xref:System.Web.UI.WebControls.DataList.OnEditCommand%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie angegeben und code für die <xref:System.Web.UI.WebControls.DataList.EditCommand> Ereignis. Dadurch, dass Sie so bearbeiten Sie das ausgewählte Element in der <xref:System.Web.UI.WebControls.DataList> steuern, wann die `Edit` geklickt wird.  
  
> [!NOTE]
>  Im folgenden Codebeispiel wird das Codemodell von Einzeldatei-verwendet und möglicherweise nicht ordnungsgemäß ausgeführt werden, wenn direkt in einer Code-Behind-Datei kopiert. In diesem Codebeispiel wird, muss in eine leere Textdatei kopiert werden, die einer ASPX-Erweiterung. Weitere Informationen zu den Web Forms-Codemodell, finden Sie unter [ASP.NET Web Forms-Seite-Codemodell](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Beim Überschreiben von <see cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> in einer abgeleiteten Klasse, werden Sie sicher, dass der Basisklasse aufrufen <see cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.DataList.EditCommand" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="dataList.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.Control.Init" />-Ereignis für das <see cref="T:System.Web.UI.WebControls.DataList" />-Steuerelement aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.DataList.OnInit%2A> Methode benachrichtigt den <xref:System.Web.UI.WebControls.DataList> Steuerelement an alle Initialisierungsschritte auszuführen, die zum Erstellen und richten Sie eine Instanz erforderlich sind.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.OnInit(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnItemCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCommand (System.Web.UI.WebControls.DataListCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCommand(class System.Web.UI.WebControls.DataListCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnItemCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemCommand (e As DataListCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemCommand(System::Web::UI::WebControls::DataListCommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemCommand : System.Web.UI.WebControls.DataListCommandEventArgs -&gt; unit&#xA;override this.OnItemCommand : System.Web.UI.WebControls.DataListCommandEventArgs -&gt; unit" Usage="dataList.OnItemCommand e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" />, das Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.DataList.ItemCommand" />-Ereignis aus. Dadurch können Sie einen benutzerdefinierten Handler für das Ereignis bereitstellen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.DataList.OnItemCommand%2A> Methode zum Bereitstellen eines benutzerdefinierten Handlers für die <xref:System.Web.UI.WebControls.DataList.ItemCommand> Ereignis.  
  
 Die <xref:System.Web.UI.WebControls.DataList.ItemCommand> Ereignis wird ausgelöst, wenn keine der Schaltflächen, in geklickt wird der <xref:System.Web.UI.WebControls.DataList> steuern und wird häufig verwendet, wenn Sie ein Schaltflächen-Steuerelement mit einem benutzerdefinierten haben `CommandName` Wert, z. B. `Add`in die <xref:System.Web.UI.WebControls.DataList> Steuerelement.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [wie: Behandeln von Ereignissen in einer Web Forms-Anwendung](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
 Mit der <xref:System.Web.UI.WebControls.DataList.OnItemCommand%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie angegeben und code für die <xref:System.Web.UI.WebControls.DataList.ItemCommand> Ereignis auf ein Element aus der <xref:System.Web.UI.WebControls.DataList> Steuerelement.  
  
> [!NOTE]
>  Im folgenden Codebeispiel wird das Codemodell von Einzeldatei-verwendet und möglicherweise nicht ordnungsgemäß ausgeführt werden, wenn direkt in einer Code-Behind-Datei kopiert. In diesem Codebeispiel wird, muss in eine leere Textdatei kopiert werden, die einer ASPX-Erweiterung. Weitere Informationen zu den Web Forms-Codemodell, finden Sie unter [ASP.NET Web Forms-Seite-Codemodell](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListItemCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCommand/CS/datalistitemcommandcs.aspx#1)]
 [!code-aspx-vb[DataListItemCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCommand/VB/datalistitemcommandvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListItemCommand2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCommand2/CS/datalistitemcommand2cs.aspx#1)]
 [!code-aspx-vb[DataListItemCommand2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCommand2/VB/datalistitemcommand2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Beim Überschreiben von <see cref="M:System.Web.UI.WebControls.DataList.OnItemCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> in einer abgeleiteten Klasse, werden Sie sicher, dass der Basisklasse aufrufen <see cref="M:System.Web.UI.WebControls.DataList.OnItemCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.DataList.ItemCommand" />
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCreated (System.Web.UI.WebControls.DataListItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCreated(class System.Web.UI.WebControls.DataListItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnItemCreated(System.Web.UI.WebControls.DataListItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemCreated (e As DataListItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemCreated(System::Web::UI::WebControls::DataListItemEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemCreated : System.Web.UI.WebControls.DataListItemEventArgs -&gt; unit&#xA;override this.OnItemCreated : System.Web.UI.WebControls.DataListItemEventArgs -&gt; unit" Usage="dataList.OnItemCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataListItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.DataListItemEventArgs" />, das Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.DataList.ItemCreated" />-Ereignis aus. Dadurch können Sie einen benutzerdefinierten Handler für das Ereignis bereitstellen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.DataList.OnItemCreated%2A> Methode zum Bereitstellen eines benutzerdefinierten Handlers für die <xref:System.Web.UI.WebControls.DataList.ItemCreated> Ereignis.  
  
 Die <xref:System.Web.UI.WebControls.DataList.ItemCreated> Ereignis wird ausgelöst, wenn ein Element in der <xref:System.Web.UI.WebControls.DataList> Steuerelement erstellt wird, wird sowohl während der Roundtrips und zur Zeit Daten an das Steuerelement gebunden ist.  
  
 Die <xref:System.Web.UI.WebControls.DataList.ItemCreated> Ereignis wird häufig zum Steuern von Inhalt und Darstellung einer Zeile in der <xref:System.Web.UI.WebControls.DataList> Steuerelement.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [wie: Behandeln von Ereignissen in einer Web Forms-Anwendung](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
 Mit der <xref:System.Web.UI.WebControls.DataList.OnItemCreated%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie angegeben und code für die <xref:System.Web.UI.WebControls.DataList.ItemCreated> Ereignis, um die Reihenfolge angezeigt, in der die Elemente in der <xref:System.Web.UI.WebControls.DataList> Steuerelement erstellt werden.  
  
> [!NOTE]
>  Im folgenden Codebeispiel wird das Codemodell von Einzeldatei-verwendet und möglicherweise nicht ordnungsgemäß ausgeführt werden, wenn direkt in einer Code-Behind-Datei kopiert. In diesem Codebeispiel wird, muss in eine leere Textdatei kopiert werden, die einer ASPX-Erweiterung. Weitere Informationen zu den Web Forms-Codemodell, finden Sie unter [ASP.NET Web Forms-Seite-Codemodell](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListItemCreated#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCreated/CS/datalistitemcreatedcs.aspx#1)]
 [!code-aspx-vb[DataListItemCreated#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCreated/VB/datalistitemcreatedvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListItemCreated2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCreated2/CS/datalistitemcreated2cs.aspx#1)]
 [!code-aspx-vb[DataListItemCreated2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCreated2/VB/datalistitemcreated2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Beim Überschreiben von <see cref="M:System.Web.UI.WebControls.DataList.OnItemCreated(System.Web.UI.WebControls.DataListItemEventArgs)" /> in einer abgeleiteten Klasse, werden Sie sicher, dass der Basisklasse aufrufen <see cref="M:System.Web.UI.WebControls.DataList.OnItemCreated(System.Web.UI.WebControls.DataListItemEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.DataList.ItemCreated" />
        <altmember cref="T:System.Web.UI.WebControls.DataListItemEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemDataBound">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDataBound (System.Web.UI.WebControls.DataListItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemDataBound(class System.Web.UI.WebControls.DataListItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnItemDataBound(System.Web.UI.WebControls.DataListItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemDataBound (e As DataListItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemDataBound(System::Web::UI::WebControls::DataListItemEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemDataBound : System.Web.UI.WebControls.DataListItemEventArgs -&gt; unit&#xA;override this.OnItemDataBound : System.Web.UI.WebControls.DataListItemEventArgs -&gt; unit" Usage="dataList.OnItemDataBound e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataListItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.DataListItemEventArgs" />, das Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.DataList.ItemDataBound" />-Ereignis aus. Dadurch können Sie einen benutzerdefinierten Handler für das Ereignis bereitstellen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.DataList.OnItemDataBound%2A> Methode zum Bereitstellen eines benutzerdefinierten Handlers für die <xref:System.Web.UI.WebControls.DataList.ItemDataBound> Ereignis.  
  
 Die <xref:System.Web.UI.WebControls.DataList.ItemDataBound> Ereignis wird ausgelöst, nachdem ein Element an Daten gebunden ist. die <xref:System.Web.UI.WebControls.DataList> Steuerelement. Dieses Ereignis bietet Ihnen die letzte Gelegenheit, die Daten zugreifen, wenn er auf dem Client angezeigt wird. Nachdem dieses Ereignis ausgelöst wurde, ist das Datenelement nicht mehr verfügbar.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [wie: Behandeln von Ereignissen in einer Web Forms-Anwendung](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
 Mit der <xref:System.Web.UI.WebControls.DataList.OnItemDataBound%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie angegeben und code für die <xref:System.Web.UI.WebControls.DataList.ItemDataBound> Ereignis, um die Reihenfolge angezeigt, in der die Elemente in der <xref:System.Web.UI.WebControls.DataList> Steuerelement an das Steuerelement gebunden sind.  
  
> [!NOTE]
>  Im folgenden Codebeispiel wird das Codemodell von Einzeldatei-verwendet und möglicherweise nicht ordnungsgemäß ausgeführt werden, wenn direkt in einer Code-Behind-Datei kopiert. In diesem Codebeispiel wird, muss in eine leere Textdatei kopiert werden, die einer ASPX-Erweiterung. Weitere Informationen zu den Web Forms-Codemodell, finden Sie unter [ASP.NET Web Forms-Seite-Codemodell](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListItemDataBound#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemDataBound/CS/datalistitemdataboundcs.aspx#1)]
 [!code-aspx-vb[DataListItemDataBound#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemDataBound/VB/datalistitemdataboundvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListItemDataBound2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemDataBound2/CS/datalistitemdatabound2cs.aspx#1)]
 [!code-aspx-vb[DataListItemDataBound2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemDataBound2/VB/datalistitemdatabound2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Beim Überschreiben von <see cref="M:System.Web.UI.WebControls.DataList.OnItemDataBound(System.Web.UI.WebControls.DataListItemEventArgs)" /> in einer abgeleiteten Klasse, werden Sie sicher, dass der Basisklasse aufrufen <see cref="M:System.Web.UI.WebControls.DataList.OnItemDataBound(System.Web.UI.WebControls.DataListItemEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.DataList.ItemDataBound" />
        <altmember cref="T:System.Web.UI.WebControls.DataListItemEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnUpdateCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnUpdateCommand (System.Web.UI.WebControls.DataListCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUpdateCommand(class System.Web.UI.WebControls.DataListCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUpdateCommand (e As DataListCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUpdateCommand(System::Web::UI::WebControls::DataListCommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUpdateCommand : System.Web.UI.WebControls.DataListCommandEventArgs -&gt; unit&#xA;override this.OnUpdateCommand : System.Web.UI.WebControls.DataListCommandEventArgs -&gt; unit" Usage="dataList.OnUpdateCommand e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.DataListItemEventArgs" />, das Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.DataList.UpdateCommand" />-Ereignis aus. Dadurch können Sie einen benutzerdefinierten Handler für das Ereignis bereitstellen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.DataList.OnUpdateCommand%2A> Methode zum Bereitstellen eines benutzerdefinierten Handlers für die <xref:System.Web.UI.WebControls.DataList.UpdateCommand> Ereignis.  
  
 Die <xref:System.Web.UI.WebControls.DataList.UpdateCommand> Ereignis wird ausgelöst, wenn die `Update` Schaltfläche für ein Element geklickt wird.  
  
 Ein typischer Handler für die <xref:System.Web.UI.WebControls.DataList.UpdateCommand> Ereignis aktualisiert die Daten, legt die <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> Eigenschaft `-1` (um das Element zu deaktivieren), und klicken Sie dann die Daten, die Bindung der <xref:System.Web.UI.WebControls.DataList> Steuerelement.  
  
> [!CAUTION]
>  Dieses Steuerelement kann verwendet werden, zum Anzeigen von Benutzereingaben, u. u. bösartige Clientskripts enthalten können. Überprüfen Sie alle Informationen, die für das ausführbare Skript, SQL-Anweisungen oder anderen Code von einem Client gesendet wird, vor der Anzeige in Ihrer Anwendung. Sie können Steuerelemente zur gültigkeitsprüfung verwenden, um Benutzereingaben zu überprüfen, bevor der Eingabetext in einem Steuerelement angezeigt. ASP.NET bietet eine Funktion für den Überprüfung eingabeanforderung blockskript und HTML in einer Benutzereingabe. Weitere Informationen finden Sie unter [Standardsteuerelemente Sichern](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [Vorgehensweise: Protect Against Script Exploits im Web-Apps durch Anwenden von HTML-Codierung Zeichenfolgen](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), und [Validieren der Benutzereingabe in ASP.NET Web Pages](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [wie: Behandeln von Ereignissen in einer Web Forms-Anwendung](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
 Mit der <xref:System.Web.UI.WebControls.DataList.OnUpdateCommand%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie angegeben und code für die <xref:System.Web.UI.WebControls.DataList.UpdateCommand> Ereignis. Können Sie das ausgewählte Element im Aktualisieren der <xref:System.Web.UI.WebControls.DataList> Steuerelement mit den neuen Werten, die vom Benutzer eingegebene bei der `Update` geklickt wird.  
  
> [!NOTE]
>  Im folgenden Codebeispiel wird das Codemodell von Einzeldatei-verwendet und möglicherweise nicht ordnungsgemäß ausgeführt werden, wenn direkt in einer Code-Behind-Datei kopiert. In diesem Codebeispiel wird, muss in eine leere Textdatei kopiert werden, die einer ASPX-Erweiterung. Weitere Informationen zu den Web Forms-Codemodell, finden Sie unter [ASP.NET Web Forms-Seite-Codemodell](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Beim Überschreiben von <see cref="M:System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> in einer abgeleiteten Klasse, werden Sie sicher, dass der Basisklasse aufrufen <see cref="M:System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.DataList.UpdateCommand" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="PrepareControlHierarchy">
      <MemberSignature Language="C#" Value="protected internal override void PrepareControlHierarchy ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void PrepareControlHierarchy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.PrepareControlHierarchy" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub PrepareControlHierarchy ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void PrepareControlHierarchy();" />
      <MemberSignature Language="F#" Value="override this.PrepareControlHierarchy : unit -&gt; unit" Usage="dataList.PrepareControlHierarchy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Bereitet die Steuerelementhierarchie für das Rendern im <see cref="T:System.Web.UI.WebControls.DataList" />-Steuerelement vor.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.DataList.PrepareControlHierarchy%2A> Methode wird hauptsächlich von Steuerelemententwicklern verwendet, wenn Ableiten eines benutzerdefinierten Steuerelements aus der <xref:System.Web.UI.WebControls.DataList> Steuerelement.  
  
 Die <xref:System.Web.UI.WebControls.DataList.PrepareControlHierarchy%2A> bereitet die Steuerelementhierarchie vor, und legt die Stile fest, für die enthaltenen <xref:System.Web.UI.WebControls.DataListItem> steuert, bevor die untergeordneten Steuerelemente gerendert werden.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Überschreiben der <see cref="M:System.Web.UI.WebControls.DataList.PrepareControlHierarchy" /> Methode zum Anpassen der Stile für Steuerelemente, die innerhalb der <see cref="T:System.Web.UI.WebControls.DataList" /> , bevor sie gerendert werden.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.DataList.RenderContents(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected internal override void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderContents (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderContents : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="dataList.RenderContents writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Ein <see cref="T:System.Web.UI.HtmlTextWriter" />, der den Ausgabestream zum Rendern des HTML-Inhalts auf dem Client darstellt.</param>
        <summary>Gibt die Listenelemente im <see cref="T:System.Web.UI.WebControls.DataList" />-Steuerelement wieder.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.DataList.RenderContents%2A> Methode dient hauptsächlich von Steuerelemententwicklern, beim Ableiten eines benutzerdefinierten Steuerelements aus der <xref:System.Web.UI.WebControls.DataList> Steuerelement.  
  
 Die <xref:System.Web.UI.WebControls.DataList.RenderContents%2A> -Methode rendert die inneren Inhalt der <xref:System.Web.UI.WebControls.DataList> Steuerelement, einschließlich der enthaltenen <xref:System.Web.UI.WebControls.DataListItem> Steuerelemente.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Überschreiben der <xref:System.Web.UI.WebControls.DataList.RenderContents%2A> Methode in einem benutzerdefinierten Steuerelement, sodass Text vorangestellt ist die <xref:System.Web.UI.WebControls.DataList> Objekt.  
  
 [!code-aspx-csharp[CustomDataListRenderContents#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomDataListRenderContents/CS/custom_datalist_rendercontentscs.aspx#1)]
 [!code-aspx-vb[CustomDataListRenderContents#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomDataListRenderContents/VB/custom_datalist_rendercontentsvb.aspx#1)]  
[!code-csharp[CustomDataListRenderContents#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomDataListRenderContents/CS/custom_datalist_rendercontents.cs#2)]
[!code-vb[CustomDataListRenderContents#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomDataListRenderContents/VB/custom_datalist_rendercontents.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RepeatColumns">
      <MemberSignature Language="C#" Value="public virtual int RepeatColumns { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RepeatColumns" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.RepeatColumns" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RepeatColumns As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int RepeatColumns { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.RepeatColumns : int with get, set" Usage="System.Web.UI.WebControls.DataList.RepeatColumns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der Spalten ab, die im <see cref="T:System.Web.UI.WebControls.DataList" />-Steuerelement angezeigt werden, oder legt diese fest.</summary>
        <value>Die Anzahl der Spalten, die im <see cref="T:System.Web.UI.WebControls.DataList" />-Steuerelement angezeigt werden. Der Standardwert ist <see langword="0" /> und gibt an, dass die Elemente im <see cref="T:System.Web.UI.WebControls.DataList" />-Steuerelement abhängig vom Wert der <see cref="P:System.Web.UI.WebControls.DataList.RepeatDirection" />-Eigenschaft in einer einzelnen Zeile oder Spalte angezeigt werden.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit dieser Eigenschaft können Sie die Anzahl der Spalten angeben, die anzeigen, Elemente in der <xref:System.Web.UI.WebControls.DataList> Steuerelement. Wenn Sie diese Eigenschaft festlegen, um z. B. `5`, <xref:System.Web.UI.WebControls.DataList> Steuerelement zeigt die Elemente in fünf Spalten.  
  
> [!NOTE]
>  Wenn diese Eigenschaft, um festgelegt wird `0`, <xref:System.Web.UI.WebControls.DataList> Steuerelement werden die Elemente in einer einzelnen Zeile oder Spalte basierend auf den Wert des der <xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A> Eigenschaft. Wenn die <xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A> -Eigenschaftensatz auf `RepeatDirection.Horizontal`, werden die Elemente in einer einzelnen Zeile angezeigt. Wenn die <xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A> -Eigenschaftensatz auf `RepeatDirection.Vertical`, die Elemente in einer einzelnen Spalte angezeigt werden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.UI.WebControls.DataList.RepeatColumns%2A> -Eigenschaft an die Anzahl der Spalten für die Anzeige in der <xref:System.Web.UI.WebControls.DataList> Steuerelement.  
  
> [!NOTE]
>  Im folgenden Codebeispiel wird das Codemodell von Einzeldatei-verwendet und möglicherweise nicht ordnungsgemäß ausgeführt werden, wenn direkt in einer Code-Behind-Datei kopiert. In diesem Codebeispiel wird, muss in eine leere Textdatei kopiert werden, die einer ASPX-Erweiterung. Weitere Informationen zu den Web Forms-Codemodell, finden Sie unter [ASP.NET Web Forms-Seite-Codemodell](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListLayout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListLayout/CS/datalistlayoutcs.aspx#1)]
 [!code-aspx-vb[DataListLayout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListLayout/VB/datalistlayoutvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Die angegebene Anzahl von Spalten ist ein negativer Wert.</exception>
        <altmember cref="P:System.Web.UI.WebControls.DataList.RepeatDirection" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.RepeatLayout" />
      </Docs>
    </Member>
    <Member MemberName="RepeatDirection">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.RepeatDirection RepeatDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.RepeatDirection RepeatDirection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.RepeatDirection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RepeatDirection As RepeatDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::RepeatDirection RepeatDirection { System::Web::UI::WebControls::RepeatDirection get(); void set(System::Web::UI::WebControls::RepeatDirection value); };" />
      <MemberSignature Language="F#" Value="member this.RepeatDirection : System.Web.UI.WebControls.RepeatDirection with get, set" Usage="System.Web.UI.WebControls.DataList.RepeatDirection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.RepeatDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt fest, ob das <see cref="T:System.Web.UI.WebControls.DataList" />-Steuerelement vertikal oder horizontal angezeigt wird.</summary>
        <value>Einer der <see cref="T:System.Web.UI.WebControls.RepeatDirection" />-Werte. Der Standardwert ist <see langword="Vertical" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A> -Eigenschaft die anzeigerichtung der an die <xref:System.Web.UI.WebControls.DataList> Steuerelement.  
  
> [!NOTE]
>  Die Anzahl der angezeigten Spalten richtet sich immer nach der <xref:System.Web.UI.WebControls.DataList.RepeatColumns%2A> Eigenschaft.  
  
 Wenn diese Eigenschaft, um festgelegt wird `RepeatDirection.Vertical`, die Elemente in der Liste angezeigt, die in Spalten von oben nach unten geladen werden, und dann von links nach rechts, bis alle Elemente gerendert sind. Z. B. wenn die <xref:System.Web.UI.WebControls.DataList.RepeatColumns%2A> -Eigenschaftensatz auf `3`, die Elemente in der <xref:System.Web.UI.WebControls.DataList> -Steuerelement in drei Spalten, wie in der folgenden Tabelle angezeigt werden.  
  
||||  
|-|-|-|  
|1|4|7|  
|2|5|8|  
|3|6|9|  
  
 Wenn diese Eigenschaft, um festgelegt wird `RepeatDirection.Horizontal`, werden die Elemente in der Liste angezeigt, in Zeilen von links nach rechts geladen, dann von oben nach unten, bis alle Elemente gerendert sind. Z. B. wenn die <xref:System.Web.UI.WebControls.DataList.RepeatColumns%2A> -Eigenschaftensatz auf `3`, die Elemente der <xref:System.Web.UI.WebControls.DataList> -Steuerelement in Zeilen mit drei Elementen, wie in der folgenden Tabelle angezeigt werden.  
  
||||  
|-|-|-|  
|1|2|3|  
|4|5|6|  
|7|8|9|  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A> Eigenschaft zum Angeben der navigationsrichtung in dem die <xref:System.Web.UI.WebControls.DataList> -Steuerelements angezeigt wird.  
  
> [!NOTE]
>  Im folgenden Codebeispiel wird das Codemodell von Einzeldatei-verwendet und möglicherweise nicht ordnungsgemäß ausgeführt werden, wenn direkt in einer Code-Behind-Datei kopiert. In diesem Codebeispiel wird, muss in eine leere Textdatei kopiert werden, die einer ASPX-Erweiterung. Weitere Informationen zu den Web Forms-Codemodell, finden Sie unter [ASP.NET Web Forms-Seite-Codemodell](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListLayout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListLayout/CS/datalistlayoutcs.aspx#1)]
 [!code-aspx-vb[DataListLayout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListLayout/VB/datalistlayoutvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der angegebene Wert ist keiner der <see cref="T:System.Web.UI.WebControls.RepeatDirection" />-Werte.</exception>
        <altmember cref="T:System.Web.UI.WebControls.RepeatDirection" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.RepeatColumns" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.RepeatLayout" />
      </Docs>
    </Member>
    <Member MemberName="RepeatLayout">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.RepeatLayout RepeatLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.RepeatLayout RepeatLayout" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.RepeatLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RepeatLayout As RepeatLayout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::RepeatLayout RepeatLayout { System::Web::UI::WebControls::RepeatLayout get(); void set(System::Web::UI::WebControls::RepeatLayout value); };" />
      <MemberSignature Language="F#" Value="member this.RepeatLayout : System.Web.UI.WebControls.RepeatLayout with get, set" Usage="System.Web.UI.WebControls.DataList.RepeatLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.RepeatLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt fest, ob das Steuerelement im Tabellen- oder Flusslayout angezeigt wird.</summary>
        <value>Ein Wert, der angibt, ob das Steuerelement in einer Tabelle oder in einem Flusslayout angezeigt wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.DataList.RepeatLayout%2A> Eigenschaft, um anzugeben, ob die Elemente in der <xref:System.Web.UI.WebControls.DataList> -Steuerelement in einer Tabelle angezeigt werden. Die einzige <xref:System.Web.UI.WebControls.RepeatLayout> Werte, die von Microsoft Intune die <xref:System.Web.UI.WebControls.DataList> sind <xref:System.Web.UI.WebControls.RepeatLayout.Table> und <xref:System.Web.UI.WebControls.RepeatLayout.Flow>.  
  
 Wenn diese Eigenschaft, um festgelegt wird `RepeatLayout.Table`, die Elemente in der Liste in einer Tabelle angezeigt werden. Wenn diese Eigenschaft, um festgelegt wird `RepeatLayout.Flow`, die Elemente in der Liste werden ohne Tabellenstruktur angezeigt.  
  
 Wenn die <xref:System.Web.UI.WebControls.DataList> -Steuerelements in einer Tabelle angezeigt wird, können Sie mit der <xref:System.Web.UI.WebControls.DataList.GridLines%2A> -Eigenschaft Stil der Rasterlinien an.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.UI.WebControls.DataList.RepeatLayout%2A> Eigenschaft, um den Layoutstil eines geben die <xref:System.Web.UI.WebControls.DataList> Steuerelement.  
  
> [!NOTE]
>  Im folgenden Codebeispiel wird das Codemodell von Einzeldatei-verwendet und möglicherweise nicht ordnungsgemäß ausgeführt werden, wenn direkt in einer Code-Behind-Datei kopiert. In diesem Codebeispiel wird, muss in eine leere Textdatei kopiert werden, die einer ASPX-Erweiterung. Weitere Informationen zu den Web Forms-Codemodell, finden Sie unter [ASP.NET Web Forms-Seite-Codemodell](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListLayout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListLayout/CS/datalistlayoutcs.aspx#1)]
 [!code-aspx-vb[DataListLayout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListLayout/VB/datalistlayoutvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der angegebene Wert ist keiner der unterstützten <see cref="T:System.Web.UI.WebControls.RepeatLayout" />-Werte.</exception>
        <altmember cref="T:System.Web.UI.WebControls.RepeatLayout" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.RepeatColumns" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.RepeatDirection" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.GridLines" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="dataList.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Speichert die Änderungen am Ansichtszustand des Steuerelements ab dem Zeitpunkt, an dem die Seite an den Server zurückgesendet wurde.</summary>
        <returns>Das Objekt, das die Änderungen am Ansichtszustand der <see cref="T:System.Web.UI.WebControls.DataList" /> enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.DataList.SaveViewState%2A> Methode wird hauptsächlich von Steuerelemententwicklern verwendet.  
  
 Ansichtszustand besteht in der Ansammlung der Werte der Eigenschaften eines Serversteuerelements. Diese Werte werden automatisch in des Serversteuerelements platziert <xref:System.Web.UI.Control.ViewState%2A> -Eigenschaft, die eine Instanz von der <xref:System.Web.UI.StateBag> Klasse. Die <xref:System.Web.UI.Control.ViewState%2A> Eigenschaftswert wird dann für ein Zeichenfolgenobjekt, das nach dem gespeicherten Zustand Phase des Lebenszyklus des Serversteuerelements beibehalten. Weitere Informationen finden Sie unter [ASP.NET Page Life Cycle Overview](http://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991).  
  
 Wenn der Ansichtszustand gespeichert wird, wird dieser String-Objekt als Variable an den Client zurückgegeben, die in ein verborgenes HTML-Eingabeelement gespeichert ist. Wenn Sie benutzerdefinierte Steuerelemente erstellen, können Sie die Effizienz steigern, durch Überschreiben der <xref:System.Web.UI.WebControls.DataList.SaveViewState%2A> Methode, und Ändern der <xref:System.Web.UI.Control.ViewState%2A> Eigenschaft für das Serversteuerelement. Weitere Informationen finden Sie unter [Entwickeln von benutzerdefinierten ASP.NET-Serversteuerelementen](http://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef) und [ASP.NET State Management Overview](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataList.TrackViewState" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.LoadViewState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="SelectCommandName">
      <MemberSignature Language="C#" Value="public const string SelectCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SelectCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataList.SelectCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Const SelectCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ SelectCommandName;" />
      <MemberSignature Language="F#" Value="val mutable SelectCommandName : string" Usage="System.Web.UI.WebControls.DataList.SelectCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Stellt den Namen des <see langword="Select" />-Befehls dar. Dieses Feld ist schreibgeschützt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.DataList.SelectCommandName> Feld zur Darstellung der `Select` Befehlsnamen.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.DataList.EditCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.DeleteCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.UpdateCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.CancelCommandName" />
      </Docs>
    </Member>
    <Member MemberName="SelectedIndex">
      <MemberSignature Language="C#" Value="public virtual int SelectedIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectedIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.SelectedIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SelectedIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int SelectedIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedIndex : int with get, set" Usage="System.Web.UI.WebControls.DataList.SelectedIndex" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IWizardSideBarListControl.SelectedIndex</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Index des ausgewählten Elements im <see cref="T:System.Web.UI.WebControls.DataList" />-Steuerelement ab oder legt diesen fest.</summary>
        <value>Der Index des ausgewählten Elements im <see cref="T:System.Web.UI.WebControls.DataList" />-Steuerelement.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.DataList.SelectedIndex%2A> -Eigenschaft programmgesteuert in das ausgewählte Element an der <xref:System.Web.UI.WebControls.DataList> Steuerelement. Sie können diese Eigenschaft auch verwenden, auf um den Index des ausgewählten Elements zu bestimmen.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.DataList.SelectedIndex%2A> Eigenschaft ist nullbasiert.  
  
 Um ein Element zu deaktivieren, legen Sie die <xref:System.Web.UI.WebControls.DataList.SelectedIndex%2A> Eigenschaft `-1`.  
  
 Die <xref:System.Web.UI.WebControls.DataList.SelectedIndex%2A> Eigenschaft im Steuerelementzustand gespeichert ist.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.UI.WebControls.DataList.SelectedIndex%2A> -Eigenschaft an das ausgewählte Element in der <xref:System.Web.UI.WebControls.DataList> Steuerelement.  
  
> [!NOTE]
>  Im folgenden Codebeispiel wird das Codemodell von Einzeldatei-verwendet und möglicherweise nicht ordnungsgemäß ausgeführt werden, wenn direkt in einer Code-Behind-Datei kopiert. In diesem Codebeispiel wird, muss in eine leere Textdatei kopiert werden, die einer ASPX-Erweiterung. Weitere Informationen zu den Web Forms-Codemodell, finden Sie unter [ASP.NET Web Forms-Seite-Codemodell](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListItemCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCommand/CS/datalistitemcommandcs.aspx#1)]
 [!code-aspx-vb[DataListItemCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCommand/VB/datalistitemcommandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der angegebene Wert ist kleiner als <see langword="-1" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItem" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItemTemplate" />
      </Docs>
    </Member>
    <Member MemberName="SelectedItem">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataListItem SelectedItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataListItem SelectedItem" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.SelectedItem" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SelectedItem As DataListItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::DataListItem ^ SelectedItem { System::Web::UI::WebControls::DataListItem ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedItem : System.Web.UI.WebControls.DataListItem" Usage="System.Web.UI.WebControls.DataList.SelectedItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das im <see cref="T:System.Web.UI.WebControls.DataList" />-Steuerelement ausgewählte Element ab.</summary>
        <value>Ein <see cref="T:System.Web.UI.WebControls.DataListItem" />, das das im <see cref="T:System.Web.UI.WebControls.DataList" />-Steuerelement ausgewählte Element darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.DataList.SelectedItem%2A> die abzurufende Eigenschaft eine <xref:System.Web.UI.WebControls.DataListItem> -Objekt, das ausgewählte Element im darstellt, der <xref:System.Web.UI.WebControls.DataList> Steuerelement. Dieses Objekt kann dann verwendet werden, den Zugriff auf die Eigenschaften des ausgewählten Elements.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.UI.WebControls.DataList.SelectedItem%2A> Eigenschaft Anzeigen der Inhalte des ausgewählten Elements in der <xref:System.Web.UI.WebControls.DataList> Steuerelement.  
  
> [!NOTE]
>  Im folgenden Codebeispiel wird das Codemodell von Einzeldatei-verwendet und möglicherweise nicht ordnungsgemäß ausgeführt werden, wenn direkt in einer Code-Behind-Datei kopiert. In diesem Codebeispiel wird, muss in eine leere Textdatei kopiert werden, die einer ASPX-Erweiterung. Weitere Informationen zu den Web Forms-Codemodell, finden Sie unter [ASP.NET Web Forms-Seite-Codemodell](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[Classic DataList.SelectedItem Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataList.SelectedItem Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataList.SelectedItem Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataList.SelectedItem Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListItem" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedIndex" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItemTemplate" />
      </Docs>
    </Member>
    <Member MemberName="SelectedItemStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle SelectedItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle SelectedItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.SelectedItemStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SelectedItemStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ SelectedItemStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedItemStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.DataList.SelectedItemStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Stileigenschaften für das im <see cref="T:System.Web.UI.WebControls.DataList" />-Steuerelement ausgewählte Element ab.</summary>
        <value>Ein <see cref="T:System.Web.UI.WebControls.TableItemStyle" />-Objekt, das die Stileigenschaften für das im <see cref="T:System.Web.UI.WebControls.DataList" />-Steuerelement ausgewählte Element enthält. Der Standardwert ist ein leeres <see cref="T:System.Web.UI.WebControls.TableItemStyle" />-Objekt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mithilfe dieser Eigenschaft geben Sie einen benutzerdefinierten Stil für das ausgewählte Element in der <xref:System.Web.UI.WebControls.DataList> Steuerelement. Allgemeine Stilattribute, die angepasst werden können, enthalten die Vordergrundfarbe, Hintergrundfarbe, Schriftart und Ausrichtung des Inhalts in der Zelle. Bereitstellen von einer anderen workflowart verbessert das Erscheinungsbild von der <xref:System.Web.UI.WebControls.DataList> Steuerelement.  
  
 Element Formateigenschaften in der <xref:System.Web.UI.WebControls.DataList> Steuerelement werden durch die Style-Eigenschaft für ein Element in eine andere durch eine Hierarchie geerbt. Die Stileigenschaften niedriger festgelegt, in der Hierarchie werden von Stileigenschaften, die in der Hierarchie höher geerbt. Z. B., wenn Sie angeben, dass eine rote Schriftart für die <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> -Eigenschaft, die alle anderen Stileigenschaften eines Elements in der <xref:System.Web.UI.WebControls.DataList> Steuerelement wird auch einen roten Schrift verfügen. Dadurch können Sie eine allgemeine Darstellung des Steuerelements zu ermöglichen, indem Sie eine einzelnes Element Style-Eigenschaft festlegen. Sie können die geerbte stileinstellungen für einen Artikel-Style-Eigenschaft überschreiben, die durch Festlegen der Style-Eigenschaften in der Hierarchie höher ist. Sie können beispielsweise angeben, eine blaue Schriftart für die <xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> -Eigenschaft, überschreiben die roten Schrift in angegebenen die <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> Eigenschaft. Die folgende Tabelle enthält die Reihenfolge der Datentyphierarchie von der höchsten zur niedrigsten.  
  
|Rangfolge|Style-Eigenschaft|  
|----------------|--------------------|  
|1|<xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A>|  
|2|<xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A>|  
|3|<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>|  
|4|<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>|  
|5|<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>|  
  
 Um einen benutzerdefinierten Stil für das ausgewählte Element anzugeben, fügen die `<SelectedItemStyle>` Tags zwischen die öffnenden und schließenden Tags eines der <xref:System.Web.UI.WebControls.DataList> Steuerelement. Anschließend können Sie die Stilattribute innerhalb des öffnenden auflisten `<SelectedItemStyle>` Tag.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A> -Eigenschaft an eine benutzerdefinierte Hintergrundfarbe für das ausgewählte Element in der <xref:System.Web.UI.WebControls.DataList> Steuerelement.  
  
> [!NOTE]
>  Im folgenden Codebeispiel wird das Codemodell von Einzeldatei-verwendet und möglicherweise nicht ordnungsgemäß ausgeführt werden, wenn direkt in einer Code-Behind-Datei kopiert. In diesem Codebeispiel wird, muss in eine leere Textdatei kopiert werden, die einer ASPX-Erweiterung. Weitere Informationen zu den Web Forms-Codemodell, finden Sie unter [ASP.NET Web Forms-Seite-Codemodell](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListItemCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCommand/CS/datalistitemcommandcs.aspx#1)]
 [!code-aspx-vb[DataListItemCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCommand/VB/datalistitemcommandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedIndex" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItem" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItemTemplate" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="SelectedItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate SelectedItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate SelectedItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.SelectedItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SelectedItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ SelectedItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.DataList.SelectedItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DataListItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Vorlage für das im <see cref="T:System.Web.UI.WebControls.DataList" />-Steuerelement ausgewählte Element ab oder legt diese fest.</summary>
        <value>Eine <see cref="T:System.Web.UI.ITemplate" />, die die Vorlage für das im <see cref="T:System.Web.UI.WebControls.DataList" />-Steuerelement ausgewählte Element darstellt. Der Standardwert ist <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.DataList.SelectedItemTemplate%2A> Eigenschaft, um den Inhalt des ausgewählten Elements steuern. Die Darstellung des ausgewählten Elements wird gesteuert, indem die <xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A> Eigenschaft.  
  
 Platzieren Sie zum Angeben einer Vorlage für das ausgewählte Element die `<SelectedItemTemplate>` Tags zwischen die öffnenden und schließenden Tags eines der <xref:System.Web.UI.WebControls.DataList> Steuerelement. Anschließend können Sie den Inhalt der Vorlage zwischen den öffnenden und schließenden auflisten `<SelectedItemTemplate>` Tags.  
  
> [!CAUTION]
>  Dieses Steuerelement kann verwendet werden, zum Anzeigen von Benutzereingaben, u. u. bösartige Clientskripts enthalten können. Überprüfen Sie alle Informationen, die für das ausführbare Skript, SQL-Anweisungen oder anderen Code von einem Client gesendet wird, vor der Anzeige in Ihrer Anwendung. Sie können Steuerelemente zur gültigkeitsprüfung verwenden, um Benutzereingaben zu überprüfen, bevor der Eingabetext in einem Steuerelement angezeigt. ASP.NET bietet eine Funktion für den Überprüfung eingabeanforderung blockskript und HTML in einer Benutzereingabe. Weitere Informationen finden Sie unter [Standardsteuerelemente Sichern](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [Vorgehensweise: Protect Against Script Exploits im Web-Apps durch Anwenden von HTML-Codierung Zeichenfolgen](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), und [Validieren der Benutzereingabe in ASP.NET Web Pages](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.UI.WebControls.DataList.SelectedItemTemplate%2A> Eigenschaft, um den Inhalt des ausgewählten Elements im Steuern der <xref:System.Web.UI.WebControls.DataList> Steuerelement.  
  
> [!NOTE]
>  Im folgenden Codebeispiel wird das Codemodell von Einzeldatei-verwendet und möglicherweise nicht ordnungsgemäß ausgeführt werden, wenn direkt in einer Code-Behind-Datei kopiert. In diesem Codebeispiel wird, muss in eine leere Textdatei kopiert werden, die einer ASPX-Erweiterung. Weitere Informationen zu den Web Forms-Codemodell, finden Sie unter [ASP.NET Web Forms-Seite-Codemodell](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListItemCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCommand/CS/datalistitemcommandcs.aspx#1)]
 [!code-aspx-vb[DataListItemCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCommand/VB/datalistitemcommandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedIndex" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItem" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItemStyle" />
      </Docs>
    </Member>
    <Member MemberName="SelectedValue">
      <MemberSignature Language="C#" Value="public object SelectedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SelectedValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.SelectedValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SelectedValue { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedValue : obj" Usage="System.Web.UI.WebControls.DataList.SelectedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert des Schlüsselfelds für das ausgewählte Datenlistenelement ab.</summary>
        <value>Der Schlüsselfeldwert für das ausgewählte Datenlistenelement. Der Standardwert ist <see langword="null" /> und gibt an, dass derzeit kein Datenlistenelement ausgewählt ist.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Die <see cref="P:System.Web.UI.WebControls.BaseDataList.DataKeyField" />-Eigenschaft wurde nicht festgelegt.</exception>
        <altmember cref="P:System.Web.UI.WebControls.BaseDataList.DataKeyField" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedIndex" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItem" />
      </Docs>
    </Member>
    <Member MemberName="SeparatorStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle SeparatorStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle SeparatorStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.SeparatorStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SeparatorStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ SeparatorStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SeparatorStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.DataList.SeparatorStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Stileigenschaften des Trennzeichens zwischen den Elementen im <see cref="T:System.Web.UI.WebControls.DataList" />-Steuerelement ab.</summary>
        <value>Ein <see cref="T:System.Web.UI.WebControls.TableItemStyle" />-Objekt, das die Stileigenschaften des Trennzeichens zwischen den Elementen im <see cref="T:System.Web.UI.WebControls.DataList" />-Steuerelement enthält. Der Standardwert ist ein leeres <see cref="T:System.Web.UI.WebControls.TableItemStyle" />-Objekt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.DataList.SeparatorStyle%2A> Eigenschaft geben Sie einen benutzerdefinierten Stil für das Trennzeichen zwischen jedem Element in der <xref:System.Web.UI.WebControls.DataList> Steuerelement. Das Trennzeichen können Sie ein Element mit den benutzerdefinierten Inhalt zwischen den Elementen im Einfügen der <xref:System.Web.UI.WebControls.DataList> Steuerelement. Allgemeine Stilattribute, die angepasst werden können, enthalten die Vordergrundfarbe, Hintergrundfarbe, Schriftart und Ausrichtung des Inhalts in der Zelle. Bereitstellen von einer anderen workflowart verbessert das Erscheinungsbild von der <xref:System.Web.UI.WebControls.DataList> Steuerelement.  
  
 Um einen benutzerdefinierten Stil für das Trennzeichen angeben möchten, platzieren Sie die `<SeparatorStyle>` Tags zwischen die öffnenden und schließenden Tags eines der <xref:System.Web.UI.WebControls.DataList> Steuerelement. Anschließend können Sie die Stilattribute innerhalb des öffnenden auflisten `<SeparatorStyle>` Tag.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.UI.WebControls.DataList.SeparatorStyle%2A> -Eigenschaft an eine benutzerdefinierte Hintergrundfarbe für das Trennzeichen zwischen jedem Element in der <xref:System.Web.UI.WebControls.DataList> Steuerelement.  
  
> [!NOTE]
>  Im folgenden Codebeispiel wird das Codemodell von Einzeldatei-verwendet und möglicherweise nicht ordnungsgemäß ausgeführt werden, wenn direkt in einer Code-Behind-Datei kopiert. In diesem Codebeispiel wird, muss in eine leere Textdatei kopiert werden, die einer ASPX-Erweiterung. Weitere Informationen zu den Web Forms-Codemodell, finden Sie unter [ASP.NET Web Forms-Seite-Codemodell](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListSeparatorStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListSeparatorStyle/CS/datalistseparatorstylecs.aspx#1)]
 [!code-aspx-vb[DataListSeparatorStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListSeparatorStyle/VB/datalistseparatorstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.SeparatorTemplate" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="SeparatorTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate SeparatorTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate SeparatorTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.SeparatorTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SeparatorTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ SeparatorTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SeparatorTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.DataList.SeparatorTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DataListItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Vorlage für das Trennzeichen zwischen den Elementen im <see cref="T:System.Web.UI.WebControls.DataList" />-Steuerelement ab oder legt diese fest.</summary>
        <value>Eine <see cref="T:System.Web.UI.ITemplate" />, die die Vorlage für das Trennzeichen zwischen den Elementen im <see cref="T:System.Web.UI.WebControls.DataList" />-Steuerelement darstellt. Der Standardwert ist <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.DataList.SeparatorTemplate%2A> Eigenschaft, um den Inhalt des Trennzeichens zwischen den Elementen steuern die <xref:System.Web.UI.WebControls.DataList> Steuerelement. Das Trennzeichen können Sie ein Element mit den benutzerdefinierten Inhalt zwischen den Elementen im Einfügen der <xref:System.Web.UI.WebControls.DataList> Steuerelement. Die Darstellung des Trennzeichens zwischen den Elementen der <xref:System.Web.UI.WebControls.DataList> Steuerelement wird gesteuert, indem die <xref:System.Web.UI.WebControls.DataList.SeparatorStyle%2A> Eigenschaft.  
  
 Platzieren Sie zum Angeben einer Vorlage für das Trennzeichen für die `<SeparatorTemplate>` Tags zwischen die öffnenden und schließenden Tags eines der <xref:System.Web.UI.WebControls.DataList> Steuerelement. Anschließend können Sie den Inhalt der Vorlage zwischen den öffnenden und schließenden auflisten `<SeparatorTemplate>` Tags.  
  
> [!CAUTION]
>  Dieses Steuerelement kann verwendet werden, zum Anzeigen von Benutzereingaben, u. u. bösartige Clientskripts enthalten können. Überprüfen Sie alle Informationen, die für das ausführbare Skript, SQL-Anweisungen oder anderen Code von einem Client gesendet wird, vor der Anzeige in Ihrer Anwendung. Sie können Steuerelemente zur gültigkeitsprüfung verwenden, um Benutzereingaben zu überprüfen, bevor der Eingabetext in einem Steuerelement angezeigt. ASP.NET bietet eine Funktion für den Überprüfung eingabeanforderung blockskript und HTML in einer Benutzereingabe. Weitere Informationen finden Sie unter [Standardsteuerelemente Sichern](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [Vorgehensweise: Protect Against Script Exploits im Web-Apps durch Anwenden von HTML-Codierung Zeichenfolgen](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), und [Validieren der Benutzereingabe in ASP.NET Web Pages](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.UI.WebControls.DataList.SeparatorTemplate%2A> Eigenschaft, um den Inhalt des Trennzeichens zwischen den Elementen im Steuern der <xref:System.Web.UI.WebControls.DataList> Steuerelement.  
  
> [!NOTE]
>  Im folgenden Codebeispiel wird das Codemodell von Einzeldatei-verwendet und möglicherweise nicht ordnungsgemäß ausgeführt werden, wenn direkt in einer Code-Behind-Datei kopiert. In diesem Codebeispiel wird, muss in eine leere Textdatei kopiert werden, die einer ASPX-Erweiterung. Weitere Informationen zu den Web Forms-Codemodell, finden Sie unter [ASP.NET Web Forms-Seite-Codemodell](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListSeparatorStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListSeparatorStyle/CS/datalistseparatorstylecs.aspx#1)]
 [!code-aspx-vb[DataListSeparatorStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListSeparatorStyle/VB/datalistseparatorstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SeparatorStyle" />
      </Docs>
    </Member>
    <Member MemberName="ShowFooter">
      <MemberSignature Language="C#" Value="public virtual bool ShowFooter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowFooter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.ShowFooter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ShowFooter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ShowFooter { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowFooter : bool with get, set" Usage="System.Web.UI.WebControls.DataList.ShowFooter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Fußzeilenbereich im <see cref="T:System.Web.UI.WebControls.DataList" />-Steuerelement angezeigt wird, oder legt diesen fest.</summary>
        <value>
          <see langword="true" />, wenn der Fußzeilenbereich angezeigt wird, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />. Diese Eigenschaft wird aber nur überprüft, wenn die <see cref="P:System.Web.UI.WebControls.DataList.FooterTemplate" />-Eigenschaft nicht <see langword="null" /> ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.DataList.ShowFooter%2A> Eigenschaft, um anzugeben, ob der Fußzeilenbereich, in angezeigt wird der <xref:System.Web.UI.WebControls.DataList> Steuerelement.  
  
 Sie können die Darstellung des Fußzeilenbereichs steuern, durch Festlegen der <xref:System.Web.UI.WebControls.DataList.FooterStyle%2A> Eigenschaft. Der Inhalt des Fußzeilenbereichs wird gesteuert, von der <xref:System.Web.UI.WebControls.DataList.FooterTemplate%2A> Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.UI.WebControls.DataList.ShowFooter%2A> Eigenschaft zum Anzeigen des Fußzeilenbereichs im der <xref:System.Web.UI.WebControls.DataList> Steuerelement.  
  
> [!NOTE]
>  Im folgenden Codebeispiel wird das Codemodell von Einzeldatei-verwendet und möglicherweise nicht ordnungsgemäß ausgeführt werden, wenn direkt in einer Code-Behind-Datei kopiert. In diesem Codebeispiel wird, muss in eine leere Textdatei kopiert werden, die einer ASPX-Erweiterung. Weitere Informationen zu den Web Forms-Codemodell, finden Sie unter [ASP.NET Web Forms-Seite-Codemodell](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListShowHeader#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListShowHeader/CS/datalistshowheadercs.aspx#1)]
 [!code-aspx-vb[DataListShowHeader#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListShowHeader/VB/datalistshowheadervb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.FooterTemplate" />
      </Docs>
    </Member>
    <Member MemberName="ShowHeader">
      <MemberSignature Language="C#" Value="public virtual bool ShowHeader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowHeader" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.ShowHeader" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ShowHeader As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ShowHeader { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowHeader : bool with get, set" Usage="System.Web.UI.WebControls.DataList.ShowHeader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Headerbereich im <see cref="T:System.Web.UI.WebControls.DataList" />-Steuerelement angezeigt wird, oder legt diesen fest.</summary>
        <value>
          <see langword="true" />, wenn der Header angezeigt wird, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />. Diese Eigenschaft wird aber nur überprüft, wenn die <see cref="P:System.Web.UI.WebControls.DataList.HeaderTemplate" />-Eigenschaft nicht <see langword="null" /> ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.DataList.ShowHeader%2A> Eigenschaft, um anzugeben, ob der Headerbereich, in angezeigt wird der <xref:System.Web.UI.WebControls.DataList> Steuerelement.  
  
 Sie können die Darstellung des Headerabschnitts steuern, durch Festlegen der <xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A> Eigenschaft. Der Inhalt des Headerbereichs wird gesteuert, von der <xref:System.Web.UI.WebControls.DataList.HeaderTemplate%2A> Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.UI.WebControls.DataList.ShowHeader%2A> Eigenschaft zum Anzeigen der Headerbereich in die <xref:System.Web.UI.WebControls.DataList> Steuerelement.  
  
> [!NOTE]
>  Im folgenden Codebeispiel wird das Codemodell von Einzeldatei-verwendet und möglicherweise nicht ordnungsgemäß ausgeführt werden, wenn direkt in einer Code-Behind-Datei kopiert. In diesem Codebeispiel wird, muss in eine leere Textdatei kopiert werden, die einer ASPX-Erweiterung. Weitere Informationen zu den Web Forms-Codemodell, finden Sie unter [ASP.NET Web Forms-Seite-Codemodell](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListShowHeader#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListShowHeader/CS/datalistshowheadercs.aspx#1)]
 [!code-aspx-vb[DataListShowHeader#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListShowHeader/VB/datalistshowheadervb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.HeaderTemplate" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.Style IRepeatInfoUser.GetItemStyle (System.Web.UI.WebControls.ListItemType itemType, int repeatIndex);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Web.UI.WebControls.Style System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle(valuetype System.Web.UI.WebControls.ListItemType itemType, int32 repeatIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#GetItemStyle(System.Web.UI.WebControls.ListItemType,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Function GetItemStyle (itemType As ListItemType, repeatIndex As Integer) As Style Implements IRepeatInfoUser.GetItemStyle" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Web::UI::WebControls::Style ^ System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle(System::Web::UI::WebControls::ListItemType itemType, int repeatIndex) = System::Web::UI::WebControls::IRepeatInfoUser::GetItemStyle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle(System.Web.UI.WebControls.ListItemType,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.Web.UI.WebControls.ListItemType" />
        <Parameter Name="repeatIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="itemType">Einer der <see cref="T:System.Web.UI.WebControls.ListItemType" />-Enumerationswerte.</param>
        <param name="repeatIndex">Der Index des Elements im Listensteuerelement.</param>
        <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle(System.Web.UI.WebControls.ListItemType,System.Int32)" />.</summary>
        <returns>Ein <see cref="T:System.Web.UI.WebControls.Style" />, der den Stil des angegebenen Elementtyps am angegebenen Index im Listensteuerelement darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.UI.WebControls.DataList>-Instanz in eine <xref:System.Web.UI.WebControls.IRepeatInfoUser>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IRepeatInfoUser.HasFooter">
      <MemberSignature Language="C#" Value="bool System.Web.UI.WebControls.IRepeatInfoUser.HasFooter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.WebControls.IRepeatInfoUser.HasFooter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#HasFooter" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property HasFooter As Boolean Implements IRepeatInfoUser.HasFooter" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Web.UI.WebControls.IRepeatInfoUser.HasFooter { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.DataList.System.Web.UI.WebControls.IRepeatInfoUser.HasFooter" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IRepeatInfoUser.HasFooter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.Web.UI.WebControls.IRepeatInfoUser.HasFooter" />.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.UI.WebControls.DataList>-Instanz in eine <xref:System.Web.UI.WebControls.IRepeatInfoUser>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IRepeatInfoUser.HasHeader">
      <MemberSignature Language="C#" Value="bool System.Web.UI.WebControls.IRepeatInfoUser.HasHeader { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.WebControls.IRepeatInfoUser.HasHeader" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#HasHeader" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property HasHeader As Boolean Implements IRepeatInfoUser.HasHeader" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Web.UI.WebControls.IRepeatInfoUser.HasHeader { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.DataList.System.Web.UI.WebControls.IRepeatInfoUser.HasHeader" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IRepeatInfoUser.HasHeader</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.Web.UI.WebControls.IRepeatInfoUser.HasHeader" />.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Kann verwendet werden nur dann, wenn die <xref:System.Web.UI.WebControls.DataList> umgewandelt wird ein <xref:System.Web.UI.WebControls.IRepeatInfoUser> Schnittstelle.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators">
      <MemberSignature Language="C#" Value="bool System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#HasSeparators" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property HasSeparators As Boolean Implements IRepeatInfoUser.HasSeparators" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.DataList.System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators" />.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.UI.WebControls.DataList>-Instanz in eine <xref:System.Web.UI.WebControls.IRepeatInfoUser>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IRepeatInfoUser.RenderItem">
      <MemberSignature Language="C#" Value="void IRepeatInfoUser.RenderItem (System.Web.UI.WebControls.ListItemType itemType, int repeatIndex, System.Web.UI.WebControls.RepeatInfo repeatInfo, System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.WebControls.IRepeatInfoUser.RenderItem(valuetype System.Web.UI.WebControls.ListItemType itemType, int32 repeatIndex, class System.Web.UI.WebControls.RepeatInfo repeatInfo, class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#RenderItem(System.Web.UI.WebControls.ListItemType,System.Int32,System.Web.UI.WebControls.RepeatInfo,System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.WebControls.IRepeatInfoUser.RenderItem(System::Web::UI::WebControls::ListItemType itemType, int repeatIndex, System::Web::UI::WebControls::RepeatInfo ^ repeatInfo, System::Web::UI::HtmlTextWriter ^ writer) = System::Web::UI::WebControls::IRepeatInfoUser::RenderItem;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.WebControls.IRepeatInfoUser.RenderItem(System.Web.UI.WebControls.ListItemType,System.Int32,System.Web.UI.WebControls.RepeatInfo,System.Web.UI.HtmlTextWriter)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.Web.UI.WebControls.ListItemType" />
        <Parameter Name="repeatIndex" Type="System.Int32" />
        <Parameter Name="repeatInfo" Type="System.Web.UI.WebControls.RepeatInfo" />
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="itemType">Der Elementtyp.</param>
        <param name="repeatIndex">Der Index des Elements.</param>
        <param name="repeatInfo">Die Informationen, die zum Rendern des Elements verwendet werden.</param>
        <param name="writer">Das <see cref="T:System.Web.UI.HtmlTextWriter" />-Objekt zum Rendern des Elements.</param>
        <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Web.UI.WebControls.IRepeatInfoUser.RenderItem(System.Web.UI.WebControls.ListItemType,System.Int32,System.Web.UI.WebControls.RepeatInfo,System.Web.UI.HtmlTextWriter)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.UI.WebControls.DataList>-Instanz in eine <xref:System.Web.UI.WebControls.IRepeatInfoUser>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount">
      <MemberSignature Language="C#" Value="int System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#RepeatedItemCount" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property RepeatedItemCount As Integer Implements IRepeatInfoUser.RepeatedItemCount" />
      <MemberSignature Language="C++ CLI" Value="property int System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.DataList.System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount" />.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.UI.WebControls.DataList>-Instanz in eine <xref:System.Web.UI.WebControls.IRepeatInfoUser>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); };" />
      <MemberSignature Language="F#" Value="member this.TagKey : System.Web.UI.HtmlTextWriterTag" Usage="System.Web.UI.WebControls.DataList.TagKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruf das HTML-Tag ab, das zum Rendern des <see cref="T:System.Web.UI.WebControls.DataList" />-Steuerelements verwendet wird.</summary>
        <value>Gibt das <see cref="F:System.Web.UI.HtmlTextWriterTag.Table" />-Tag zurück, wenn <see cref="P:System.Web.UI.WebControls.DataList.RepeatLayout" /> auf <see cref="F:System.Web.UI.WebControls.RepeatLayout.Table" /> festgelegt wird, andernfalls wird das <see cref="F:System.Web.UI.HtmlTextWriterTag.Span" />-Tag zurückgegeben. Der Standardwert ist <see cref="F:System.Web.UI.WebControls.RepeatLayout.Table" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.DataList.TagKey%2A> Eigenschaft, um zu bestimmen, die <xref:System.Web.UI.HtmlTextWriterTag> -Wert, der zugeordnet ist eine <xref:System.Web.UI.WebControls.DataList> Steuerelement. Die <xref:System.Web.UI.WebControls.DataList.TagKey%2A> Eigenschaft wird hauptsächlich von Steuerelemententwicklern verwendet.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="dataList.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Verfolgt die am Ansichtszustand des <see cref="T:System.Web.UI.WebControls.DataList" />-Steuerelements vorgenommenen Änderungen und speichert diese in der <see cref="P:System.Web.UI.Control.ViewState" />-Eigenschaft des Steuerelements.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.DataList.TrackViewState%2A> Methode wird überschrieben, um den Ausgangspunkt zu markieren, ab dem Nachverfolgen und Speichern von an das Steuerelement im Rahmen des Ansichtszustands des Steuerelements Änderungen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataListCommandEventHandler UpdateCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataListCommandEventHandler UpdateCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataList.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UpdateCommand As DataListCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataListCommandEventHandler ^ UpdateCommand;" />
      <MemberSignature Language="F#" Value="member this.UpdateCommand : System.Web.UI.WebControls.DataListCommandEventHandler " Usage="member this.UpdateCommand : System.Web.UI.WebControls.DataListCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn auf die Schaltfläche <see langword="Update" /> für ein Element im <see cref="T:System.Web.UI.WebControls.DataList" />-Steuerelement geklickt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.DataList.UpdateCommand> Ereignis wird ausgelöst, wenn die `Update` Schaltfläche für ein Element geklickt wird.  
  
 Ein typischer Handler für die <xref:System.Web.UI.WebControls.DataList.UpdateCommand> Ereignis aktualisiert die Daten, legt die <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> Eigenschaft `-1` (um das Element zu deaktivieren), und klicken Sie dann die Daten, die Bindung der <xref:System.Web.UI.WebControls.DataList> Steuerelement.  
  
> [!CAUTION]
>  Dieses Steuerelement kann verwendet werden, zum Anzeigen von Benutzereingaben, u. u. bösartige Clientskripts enthalten können. Überprüfen Sie alle Informationen, die für das ausführbare Skript, SQL-Anweisungen oder anderen Code von einem Client gesendet wird, vor der Anzeige in Ihrer Anwendung. Sie können Steuerelemente zur gültigkeitsprüfung verwenden, um Benutzereingaben zu überprüfen, bevor der Eingabetext in einem Steuerelement angezeigt. ASP.NET bietet eine Funktion für den Überprüfung eingabeanforderung blockskript und HTML in einer Benutzereingabe. Weitere Informationen finden Sie unter [Standardsteuerelemente Sichern](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [Vorgehensweise: Protect Against Script Exploits im Web-Apps durch Anwenden von HTML-Codierung Zeichenfolgen](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), und [Validieren der Benutzereingabe in ASP.NET Web Pages](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [wie: Behandeln von Ereignissen in einer Web Forms-Anwendung](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie angegeben und code für die <xref:System.Web.UI.WebControls.DataList.UpdateCommand> Ereignis. Können Sie das ausgewählte Element im Aktualisieren der <xref:System.Web.UI.WebControls.DataList> Steuerelement mit den neuen Werten, die vom Benutzer eingegebene bei der `Update` geklickt wird.  
  
> [!NOTE]
>  Im folgenden Codebeispiel wird das Codemodell von Einzeldatei-verwendet und möglicherweise nicht ordnungsgemäß ausgeführt werden, wenn direkt in einer Code-Behind-Datei kopiert. In diesem Codebeispiel wird, muss in eine leere Textdatei kopiert werden, die einer ASPX-Erweiterung. Weitere Informationen zu den Web Forms-Codemodell, finden Sie unter [ASP.NET Web Forms-Seite-Codemodell](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.CancelCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.DeleteCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.EditCommand" />
      </Docs>
    </Member>
    <Member MemberName="UpdateCommandName">
      <MemberSignature Language="C#" Value="public const string UpdateCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string UpdateCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataList.UpdateCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Const UpdateCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ UpdateCommandName;" />
      <MemberSignature Language="F#" Value="val mutable UpdateCommandName : string" Usage="System.Web.UI.WebControls.DataList.UpdateCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Stellt den Namen des <see langword="Update" />-Befehls dar. Dieses Feld ist schreibgeschützt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.DataList.UpdateCommandName> Feld zur Darstellung der `Update` Befehlsnamen.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.DataList.SelectCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.EditCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.DeleteCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.CancelCommandName" />
      </Docs>
    </Member>
  </Members>
</Type>