<Type Name="CommandEventArgs" FullName="System.Web.UI.WebControls.CommandEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6b0be4890f6a8e5819813e6f7766f62df871757e" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70637412" /></Metadata><TypeSignature Language="C#" Value="public class CommandEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CommandEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.CommandEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class CommandEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class CommandEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type CommandEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt Daten für das <see langword="Command" />-Ereignis bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das `Command` Ereignis wird ausgelöst, wenn <xref:System.Web.UI.WebControls.Button> auf <xref:System.Web.UI.WebControls.ImageButton> ein-oder-Steuerelement geklickt wird.  
  
 Das <xref:System.Web.UI.WebControls.CommandEventArgs> -Objekt enthält Daten über `Command` das Ereignis, auf das im-Ereignishandler zugegriffen werden kann. Mithilfe der in der <xref:System.Web.UI.WebControls.CommandEventArgs> -Klasse verfügbaren Eigenschaften können Sie den Namen des auszuführenden Befehls, `Sort`z `Ascending`. b., zusätzlich zu einem optionalen Argument, das den Befehl ergänzt, wie z. b., bestimmen.  
  
 Eine Liste der anfänglichen Eigenschaftswerte für eine Instanz von <xref:System.Web.UI.WebControls.CommandEventArgs>finden Sie im <xref:System.Web.UI.WebControls.CommandEventArgs.%23ctor%2A> -Konstruktor.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Das folgende Beispiel veranschaulicht den Zugriff auf die Eigenschaften in <xref:System.Web.UI.WebControls.CommandEventArgs> , um den auszuführenden Befehl zu ermitteln. In diesem Beispiel wird der Ereignishandler deklarativ mithilfe der <xref:System.Web.UI.WebControls.Button.OnClick%2A> -Eigenschaft <xref:System.Web.UI.WebControls.Button> des-Steuer Elements angegeben.  
  
 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie den-Ereignishandler angeben und ihn Programm gesteuert dem-Ereignis `Page_Load` in der-Methode hinzufügen.  
  
 [!code-aspx-csharp[ButtonCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommand/CS/buttoncommandcs.aspx#1)]
 [!code-aspx-vb[ButtonCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommand/VB/buttoncommandvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.CommandEventHandler" />
    <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
    <altmember cref="E:System.Web.UI.WebControls.ImageButton.Command" />
    <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Übersicht über Schaltflächen-Webserver Steuerelemente</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.CommandEventArgs" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommandEventArgs (System.Web.UI.WebControls.CommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.CommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.CommandEventArgs.#ctor(System.Web.UI.WebControls.CommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (e As CommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CommandEventArgs(System::Web::UI::WebControls::CommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.CommandEventArgs : System.Web.UI.WebControls.CommandEventArgs -&gt; System.Web.UI.WebControls.CommandEventArgs" Usage="new System.Web.UI.WebControls.CommandEventArgs e" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.CommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.CommandEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.CommandEventArgs" />-Klasse mit einem weiteren <see cref="T:System.Web.UI.WebControls.CommandEventArgs" />-Objekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diesen Konstruktor, um eine neue Instanz der <xref:System.Web.UI.WebControls.CommandEventArgs> -Klasse mithilfe des angegebenen <xref:System.Web.UI.WebControls.CommandEventArgs> -Objekts zu erstellen und zu initialisieren.  
  
 Wenn eine Instanz von <xref:System.Web.UI.WebControls.CommandEventArgs> durch einen-Befehl für diesen Konstruktor erstellt wird, werden die folgenden Eigenschaften auf die angegebenen Werte initialisiert.  
  
|Eigenschaft|Anfangswert|  
|--------------|-------------------|  
|CommandName|Der `e.CommandName`-Parameter.|  
|CommandArgument|Der `e.CommandArgument`-Parameter.|  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie eine neue Instanz der <xref:System.Web.UI.WebControls.CommandEventArgs> -Klasse mithilfe des angegebenen <xref:System.Web.UI.WebControls.CommandEventArgs> -Objekts erstellt und initialisiert wird.  
  
 [!code-csharp[Classic CommandEventArgs.CommandEventArgs Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CommandEventArgs.CommandEventArgs Example/CS/source.cs#1)]
 [!code-vb[Classic CommandEventArgs.CommandEventArgs Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CommandEventArgs.CommandEventArgs Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Übersicht über Schaltflächen-Webserver Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommandEventArgs (string commandName, object argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string commandName, object argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.CommandEventArgs.#ctor(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (commandName As String, argument As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CommandEventArgs(System::String ^ commandName, System::Object ^ argument);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.CommandEventArgs : string * obj -&gt; System.Web.UI.WebControls.CommandEventArgs" Usage="new System.Web.UI.WebControls.CommandEventArgs (commandName, argument)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="commandName" Type="System.String" />
        <Parameter Name="argument" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="commandName">Der Name des Befehls.</param>
        <param name="argument">Ein <see cref="T:System.Object" />, das die Argumente für den Befehl enthält.</param>
        <summary>Initialisiert mit dem angegebenen Befehlsnamen und -argument eine neue Instanz der <see cref="T:System.Web.UI.WebControls.CommandEventArgs" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diesen Konstruktor, um eine neue Instanz der <xref:System.Web.UI.WebControls.CommandEventArgs> -Klasse mit dem angegebenen Befehlsnamen und dem angegebenen Argument zu erstellen und zu initialisieren.  
  
 Wenn eine Instanz von <xref:System.Web.UI.WebControls.CommandEventArgs> durch einen-Befehl für diesen Konstruktor erstellt wird, werden die folgenden Eigenschaften auf die angegebenen Werte initialisiert.  
  
|Eigenschaft|Anfangswert|  
|--------------|-------------------|  
|CommandName|Der Wert des `commandName`-Parameters.|  
|CommandArgument|Der Wert des `argument`-Parameters.|  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie eine neue Instanz der <xref:System.Web.UI.WebControls.CommandEventArgs> -Klasse mit dem angegebenen Befehlsnamen und dem angegebenen Argument erstellt und initialisiert wird.  
  
 [!code-csharp[Classic CommandEventArgs.CommandEventArgs1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CommandEventArgs.CommandEventArgs1 Example/CS/source.cs#1)]
 [!code-vb[Classic CommandEventArgs.CommandEventArgs1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CommandEventArgs.CommandEventArgs1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Übersicht über Schaltflächen-Webserver Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="CommandArgument">
      <MemberSignature Language="C#" Value="public object CommandArgument { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CommandArgument" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CommandEventArgs.CommandArgument" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandArgument As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CommandArgument { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommandArgument : obj" Usage="System.Web.UI.WebControls.CommandEventArgs.CommandArgument" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Argument für den Befehl ab.</summary>
        <value>Ein <see cref="T:System.Object" />, das das Argument für den Befehl enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> Kann jede beliebige Zeichenfolge enthalten, die vom Programmierer festgelegt wurde. Die <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> -Eigenschaft ergänzt <xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A> die-Eigenschaft, indem Sie zusätzliche Informationen für den Befehl bereitstellen können. Beispiels <xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A> Weise können Sie die-Eigenschaft auf `Sort` festlegen und die <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> -Eigenschaft auf `Ascending` festlegen, um einen Befehl anzugeben, der in aufsteigender Reihenfolge sortiert werden soll.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> -Eigenschaft verwendet wird, um ergänzende Informationen zu bestimmen, die der Befehl ausführen soll.  
  
 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Button.CommandArgument" />
        <altmember cref="P:System.Web.UI.WebControls.ImageButton.CommandArgument" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Übersicht über Schaltflächen-Webserver Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="CommandName">
      <MemberSignature Language="C#" Value="public string CommandName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CommandEventArgs.CommandName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CommandName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommandName : string" Usage="System.Web.UI.WebControls.CommandEventArgs.CommandName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen des Befehls ab.</summary>
        <value>Der Name des auszuführenden Befehls.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A> die-Eigenschaft, um den auszuführenden Befehl zu bestimmen. Die <xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A> -Eigenschaft kann jede vom Programmierer festgelegte Zeichenfolge enthalten. Der Programmierer kann dann den Befehlsnamen im Code identifizieren und die entsprechenden Tasks ausführen.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A> -Eigenschaft verwendet wird, um den auszuführenden Befehl Programm gesteuert zu bestimmen.  
  
 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Button.CommandName" />
        <altmember cref="P:System.Web.UI.WebControls.ImageButton.CommandName" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Übersicht über Schaltflächen-Webserver Steuerelemente</related>
      </Docs>
    </Member>
  </Members>
</Type>
