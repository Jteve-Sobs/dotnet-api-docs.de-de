<Type Name="SendMailErrorEventHandler" FullName="System.Web.UI.WebControls.SendMailErrorEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6471ea1d0920328980c5483015c25f31560453c1" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73396409" /></Metadata><TypeSignature Language="C#" Value="public delegate void SendMailErrorEventHandler(object sender, SendMailErrorEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SendMailErrorEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.SendMailErrorEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub SendMailErrorEventHandler(sender As Object, e As SendMailErrorEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void SendMailErrorEventHandler(System::Object ^ sender, SendMailErrorEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type SendMailErrorEventHandler = delegate of obj * SendMailErrorEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Web.UI.WebControls.SendMailErrorEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">Die Quelle des Ereignisses.</param>
    <param name="e">Ein <see cref="T:System.Web.UI.WebControls.SendMailErrorEventArgs" />-Objekt, das die Ereignisdaten enthält.</param>
    <summary>Stellt die Methode dar, die das <see langword="SendMailError" />-Ereignis der Steuerelemente behandelt, wie beispielsweise das <see cref="T:System.Web.UI.WebControls.ChangePassword" />-Steuerelement, das <see cref="T:System.Web.UI.WebControls.CreateUserWizard" />-Steuerelement und das <see cref="T:System.Web.UI.WebControls.PasswordRecovery" />-Steuerelement.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Beim Erstellen eines <xref:System.Web.UI.WebControls.SendMailErrorEventHandler>-Delegaten bestimmen Sie die Methode für die Ereignisbehandlung. Um das Ereignis dem-Ereignishandler zuzuordnen, fügen Sie dem-Ereignis eine Instanz des-Delegaten hinzu. Der Ereignishandler wird immer dann aufgerufen, wenn das-Ereignis auftritt, es sei denn, Sie entfernen den Delegaten aus dem Ereignis. Weitere Informationen zu Ereignishandlerdelegaten finden Sie unter [Server Ereignis Behandlung auf ASP.net-Web Forms Seiten](https://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9).  
  
 Wenn Sie das `SendMailError`-Ereignis behandeln, kann die Webanwendung weiterhin ausgeführt werden, auch wenn eine Ausnahme auftritt, wenn versucht wird, eine e-Mail zu senden. Dies ist beispielsweise hilfreich, wenn die Ausnahme auftritt, wenn ein Benutzer einen mehrstufigen Assistenten durchläuft. Es ist vorzuziehen, den Fehler zu protokollieren, dem Benutzer eine informative Meldung anzuzeigen und dem Benutzer zu ermöglichen, den Assistenten abzuschließen, anstatt die Anwendung zu beenden.  
  
 Wenn Sie keinen Ereignishandler für das <xref:System.Web.UI.WebControls.ChangePassword.SendMailError>-Ereignis erstellen, oder wenn Sie einen Ereignishandler erstellen, aber die Eigenschaft <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> auf `false` festgelegt haben, wird die Ausführung der Webanwendung beendet, wenn beim Senden einer e-Mail-Nachricht ein Fehler auftritt, und ASP.net zeigt einen Fehler an. Nachricht.  
  
 Die <xref:System.Web.UI.WebControls.ChangePassword.OnSendMailError%2A>-Methode ermöglicht es abgeleiteten Klassen auch, das Ereignis anstelle von <xref:System.Web.UI.WebControls.SendMailErrorEventHandler> zu behandeln. Dies ist die bevorzugte Methode für die Behandlung des Ereignisses in einer Klasse, die von <xref:System.Web.UI.WebControls.ChangePassword> oder <xref:System.Web.UI.WebControls.CreateUserWizard> abgeleitet ist.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [Server Ereignis Behandlung auf ASP.net-Web Forms Seiten](https://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine ASP.NET-Seite veranschaulicht, die ein <xref:System.Web.UI.WebControls.ChangePassword>-websteuer Element verwendet und einen Ereignishandler für das <xref:System.Web.UI.WebControls.ChangePassword.SendMailError>-Ereignis mit dem Namen `SendMailError` enthält. Im Codebeispiel wird davon ausgegangen, dass die ASP.NET-Website für die Verwendung der ASP.NET-Mitgliedschaft und Formular Authentifizierung konfiguriert wurde und dass ein Benutzer erstellt wurde, dessen Name und Kennwort Ihnen bekannt sind. Weitere Informationen finden Sie unter Gewusst [wie: Implementieren einer einfachen Formular Authentifizierung](https://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e).  
  
 Wenn die Kenn Wort Änderung erfolgreich ist, versucht der Code, mithilfe von SMTP eine e-Mail-Nachricht an den Benutzer zu senden, um die Änderung zu bestätigen. Dies erfolgt im `SendingMail`-Ereignishandler. Informationen zum Konfigurieren eines SMTP-Servers finden Sie unter Vorgehens [Weise: Installieren und Konfigurieren virtueller SMTP-Server in IIS 6,0](https://docs.microsoft.com/previous-versions/aspnet/8b83ac7t(v=vs.100)). Im Rahmen dieses Beispiels ist es nicht erforderlich, einen SMTP-Server zu konfigurieren. Das Beispiel wird erstellt, um zu testen, dass ein Fehler beim Senden einer e-Mail-Nachricht vorliegt.  
  
 Wenn ein Mailserver nicht ordnungsgemäß konfiguriert ist oder ein anderer Fehler auftritt und die e-Mail-Nachricht nicht gesendet werden kann, wird die `SendMailError`-Funktion aufgerufen. Dem Benutzer wird eine Meldung angezeigt. Außerdem wird ein Ereignis im Windows-Anwendungs Ereignisprotokoll mit der Annahme protokolliert, dass eine Ereignis Quelle mit dem Namen MySamplesSite bereits vorhanden ist. Weitere Informationen finden Sie im folgenden Codebeispiel, um die angegebene Ereignis Quelle zu erstellen. Weitere Informationen zum Erstellen einer Ereignis Quelle finden Sie unter [Server Ereignis Behandlung auf ASP.net-Web Forms Seiten](https://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9). Die <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A>-Eigenschaft des <xref:System.Web.UI.WebControls.SendMailErrorEventArgs>-Objekts wird auf `true` festgelegt, um anzugeben, dass der Fehler behandelt wurde.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 Verwenden Sie das folgende Codebeispiel, wenn Sie die Ereignis Quelle namens MySamplesSite Programm gesteuert dem Anwendungsprotokoll hinzufügen müssen. Diese Ereignis Quelle muss vorhanden sein, damit das erste Codebeispiel ordnungsgemäß funktioniert. Für das folgende Codebeispiel sind Administrator Rechte erforderlich.  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="E:System.Web.UI.WebControls.CreateUserWizard.SendMailError" />
    <altmember cref="E:System.Web.UI.WebControls.ChangePassword.SendMailError" />
    <altmember cref="E:System.Web.UI.WebControls.PasswordRecovery.SendMailError" />
    <altmember cref="T:System.Net.Mail.MailMessage" />
    <altmember cref="T:System.Web.Mail.SmtpMail" />
    <related type="Article" href="https://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9">Behandlung von Server Ereignissen in ASP.net Web Pages</related>
    <related type="Article" href="https://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f">Behandeln und Auslösen von Ereignissen</related>
    <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/smtp-element-network-settings.md">SMTP-Element (Netzwerkeinstellungen)</related>
    <related type="Article" href="https://msdn.microsoft.com/library/448f7802-0aa8-4304-abf7-82e138877dc8">Registerkarte "Websiteverwaltungs-Tool Anwendung"</related>
    <related type="Article" href="https://msdn.microsoft.com/library/d85075bc-9c1a-4453-8a0c-539b10853c9c">Sichern von Anmelde Steuerelementen</related>
    <related type="Article" href="https://msdn.microsoft.com/library/3eeeee9e-b09f-4c7f-8ce5-d9ca1f9322ad">Grundlegende Sicherheitsmethoden für Webanwendungen</related>
  </Docs>
</Type>
