<Type Name="TemplateField" FullName="System.Web.UI.WebControls.TemplateField">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2d9b1bdc87976bab135fdc350d6e01d3ead29e87" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86657399" /></Metadata><TypeSignature Language="C#" Value="public class TemplateField : System.Web.UI.WebControls.DataControlField" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TemplateField extends System.Web.UI.WebControls.DataControlField" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.TemplateField" />
  <TypeSignature Language="VB.NET" Value="Public Class TemplateField&#xA;Inherits DataControlField" />
  <TypeSignature Language="C++ CLI" Value="public ref class TemplateField : System::Web::UI::WebControls::DataControlField" />
  <TypeSignature Language="F#" Value="type TemplateField = class&#xA;    inherit DataControlField" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.DataControlField</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt ein Feld dar, das benutzerdefinierten Inhalt in einem datengebundenen Steuerelement anzeigt.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.TemplateField> -Klasse wird von Daten gebundenen Steuerelementen (z. b. <xref:System.Web.UI.WebControls.GridView> und <xref:System.Web.UI.WebControls.DetailsView> ) verwendet, um benutzerdefinierten Inhalt für jeden angezeigten Datensatz anzuzeigen. Wenn Sie Inhalt in einem Daten gebundenen Steuerelement anzeigen müssen, das nicht von einem der vordefinierten Daten Steuerungs Felder (z. b.) bereitgestellt wird <xref:System.Web.UI.WebControls.BoundField> , verwenden Sie die-Klasse, um die Benutzer <xref:System.Web.UI.WebControls.TemplateField> definierte Benutzeroberfläche (UI) zu erstellen. Das <xref:System.Web.UI.WebControls.TemplateField> Objekt wird unterschiedlich angezeigt, je nach dem Daten gebundenen Steuerelement, in dem es verwendet wird. Das <xref:System.Web.UI.WebControls.GridView> -Steuerelement zeigt z <xref:System.Web.UI.WebControls.TemplateField> . b. ein-Objekt als-Spalte an, und das- <xref:System.Web.UI.WebControls.DetailsView> Steuerelement zeigt es als Zeile an.  
  
 <xref:System.Web.UI.WebControls.TemplateField>Mithilfe der in der folgenden Tabelle aufgeführten Vorlagen können Sie eine benutzerdefinierte Vorlage für die verschiedenen Teile des-Objekts definieren.  
  
|Vorlage|BESCHREIBUNG|  
|--------------|-----------------|  
|<xref:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate%2A>|Gibt den Inhalt an, der für die abwechselnden Elemente in einem-Objekt angezeigt werden soll <xref:System.Web.UI.WebControls.TemplateField> .|  
|<xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A>|Gibt den Inhalt an, der für ein Element im Bearbeitungsmodus in einem-Objekt angezeigt werden soll <xref:System.Web.UI.WebControls.TemplateField> .|  
|<xref:System.Web.UI.WebControls.TemplateField.FooterTemplate%2A>|Gibt den Inhalt an, der für den Footerbereich eines-Objekts angezeigt werden soll <xref:System.Web.UI.WebControls.TemplateField> .|  
|<xref:System.Web.UI.WebControls.TemplateField.HeaderTemplate%2A>|Gibt den Inhalt an, der für den Header Abschnitt eines-Objekts angezeigt werden soll <xref:System.Web.UI.WebControls.TemplateField> .|  
|<xref:System.Web.UI.WebControls.TemplateField.InsertItemTemplate%2A>|Gibt den Inhalt an, der für ein Element im Einfügemodus in einem-Objekt angezeigt werden soll <xref:System.Web.UI.WebControls.TemplateField> . Diese Vorlage wird nur vom-Steuerelement unterstützt <xref:System.Web.UI.WebControls.DetailsView> .|  
|<xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A>|Gibt den Inhalt an, der für die Elemente in einem-Objekt angezeigt werden soll <xref:System.Web.UI.WebControls.TemplateField> .|  
  
 Sie können ein- <xref:System.Web.UI.WebControls.TemplateField> Objekt in einem Daten gebundenen Steuerelement ausblenden, indem Sie die- <xref:System.Web.UI.WebControls.DataControlField.Visible%2A> Eigenschaft auf festlegen `false` .  
  
 Als Alternative zum Definieren einer benutzerdefinierten <xref:System.Web.UI.WebControls.TemplateField.HeaderTemplate%2A> Vorlage oder einer <xref:System.Web.UI.WebControls.TemplateField.FooterTemplate%2A> Vorlage können Sie die Kopf-und Fußzeilen Abschnitte eines-Objekts anpassen, <xref:System.Web.UI.WebControls.TemplateField> indem Sie andere Eigenschaften des- <xref:System.Web.UI.WebControls.TemplateField> Objekts festlegen. Um eine Beschriftung in der Kopf- oder Fußzeile Abschnitten anzuzeigen, legen die <xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A> oder die <xref:System.Web.UI.WebControls.DataControlField.FooterText%2A> Eigenschaft bzw. Anstatt Text im Header Abschnitt anzuzeigen, können Sie ein Bild anzeigen, indem Sie die- <xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A> Eigenschaft festlegen. Der Header Abschnitt kann im-Objekt ausgeblendet werden <xref:System.Web.UI.WebControls.TemplateField> , indem die-Eigenschaft auf festgelegt wird <xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A> `false` .  
  
> [!NOTE]
>  Einige Daten gebundene Steuerelemente (z. b. das- <xref:System.Web.UI.WebControls.GridView> Steuerelement) können nur den gesamten Header Abschnitt des Steuer Elements anzeigen oder ausblenden. Diese Daten gebundenen Steuerelemente unterstützen die- <xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A> Eigenschaft für ein einzelnes gebundenes Feld nicht. Um den gesamten Header Abschnitt eines Daten gebundenen Steuer Elements anzuzeigen oder auszublenden, verwenden Sie die-Eigenschaft des-Steuer Elements `ShowHeader` (falls verfügbar).  
  
 Sie können auch die Darstellung des <xref:System.Web.UI.WebControls.TemplateField> Objekts (Schriftfarbe, Hintergrundfarbe usw.) anpassen, indem Sie die Stileigenschaften für die verschiedenen Teile des Felds festlegen. In der folgenden Tabelle werden die verschiedenen Stileigenschaften aufgelistet.  
  
|Style-Eigenschaft|BESCHREIBUNG|  
|--------------------|-----------------|  
|<xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A>|Die Stileinstellungen für die untergeordneten Webserver-Steuerelemente des- <xref:System.Web.UI.WebControls.TemplateField> Objekts.|  
|<xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A>|Die Stileinstellungen für den Footerbereich des- <xref:System.Web.UI.WebControls.TemplateField> Objekts.|  
|<xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A>|Die Stileinstellungen für den Header Abschnitt des- <xref:System.Web.UI.WebControls.TemplateField> Objekts.|  
|<xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A>|Die Stileinstellungen für die Datenelemente im- <xref:System.Web.UI.WebControls.TemplateField> Objekt.|  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie ein benutzerdefiniertes-Objekt erstellt wird <xref:System.Web.UI.WebControls.TemplateField> , das zwei Felder in derselben Zelle anzeigt. Die Felder "Vorname" und "Nachname" werden in demselben <xref:System.Web.UI.WebControls.TemplateField> Objekt kombiniert.  
  
 [!code-aspx-csharp[TemplateField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TemplateField/CS/templatefieldcs.aspx#1)]
 [!code-aspx-vb[TemplateField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TemplateField/VB/templatefieldvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.GridView" />
    <altmember cref="P:System.Web.UI.WebControls.GridView.Columns" />
    <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
    <altmember cref="P:System.Web.UI.WebControls.DetailsView.Fields" />
    <altmember cref="T:System.Web.UI.WebControls.BoundField" />
    <altmember cref="T:System.Web.UI.WebControls.ButtonField" />
    <altmember cref="T:System.Web.UI.WebControls.CheckBoxField" />
    <altmember cref="T:System.Web.UI.WebControls.CommandField" />
    <altmember cref="T:System.Web.UI.WebControls.DataControlField" />
    <altmember cref="T:System.Web.UI.WebControls.HyperLinkField" />
    <altmember cref="P:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.TemplateField.EditItemTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.TemplateField.FooterTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.TemplateField.HeaderTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.TemplateField.InsertItemTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.TemplateField.ItemTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.DataControlField.Visible" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TemplateField ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TemplateField.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TemplateField();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.TemplateField" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diesen Konstruktor, um eine neue Instanz der-Klasse zu initialisieren <xref:System.Web.UI.WebControls.TemplateField> . Dieser Konstruktor wird häufig verwendet, wenn einem dynamisch erstellten Daten gebundenen Steuerelement Felder hinzugefügt werden.  
  
 Wenn Sie einem Daten gebundenen Steuerelement ein-Objekt dynamisch hinzufügen möchten <xref:System.Web.UI.WebControls.TemplateField> , erstellen Sie ein neues- <xref:System.Web.UI.WebControls.TemplateField> Objekt, definieren Sie die entsprechenden Vorlagen, und fügen Sie es dann der Feld Auflistung des Daten gebundenen Steuer Elements hinzu. Wenn Sie z. b. das-Steuerelement verwenden, fügen Sie das-Objekt der-Auflistung <xref:System.Web.UI.WebControls.GridView> hinzu <xref:System.Web.UI.WebControls.TemplateField> <xref:System.Web.UI.WebControls.GridView.Columns%2A> .  
  
> [!NOTE]
>  Obwohl Sie Felder einem Daten gebundenen Steuerelement dynamisch hinzufügen können, wird dringend empfohlen, dass Felder statisch deklariert und dann nach Bedarf angezeigt oder ausgeblendet werden. Wenn Sie alle Felder statisch deklarieren, verringert sich die Größe des Ansichts Zustands für das übergeordnete Daten gebundene Steuerelement.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie der-Konstruktor verwendet wird, um einem-Steuerelement dynamisch eine <xref:System.Web.UI.WebControls.TemplateField> Feld Spalte hinzuzufügen <xref:System.Web.UI.WebControls.GridView> .  
  
 [!code-aspx-csharp[TemplateFieldCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TemplateFieldCtor/CS/templatefieldctorcs.aspx#1)]
 [!code-aspx-vb[TemplateFieldCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TemplateFieldCtor/VB/templatefieldctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.Columns" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.Fields" />
      </Docs>
    </Member>
    <Member MemberName="AlternatingItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate AlternatingItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate AlternatingItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AlternatingItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ AlternatingItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AlternatingItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.TemplateContainer(typeof(System.Web.UI.IDataItemContainer), System.ComponentModel.BindingDirection.TwoWay)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.TemplateContainer(typeof(System.Web.UI.IDataItemContainer), System.ComponentModel.BindingDirection.TwoWay)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Vorlage zum Anzeigen der abwechselnden Elemente in einem <see cref="T:System.Web.UI.WebControls.TemplateField" />-Objekt ab oder legt diese fest.</summary>
        <value>Ein in <see cref="T:System.Web.UI.ITemplate" /> implementiertes Objekt, das die Vorlage zum Anzeigen der abwechselnden Elemente in <see cref="T:System.Web.UI.WebControls.TemplateField" /> enthält. Der Standardwert ist <see langword="null" /> und gibt an, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die- <xref:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate%2A> Eigenschaft, um den benutzerdefinierten Inhalt anzugeben, der für die wechselnden Elemente in einem-Objekt angezeigt wird <xref:System.Web.UI.WebControls.TemplateField> Definieren Sie den Inhalt, indem Sie eine Vorlage erstellen, die angibt, wie abwechselnde Elemente gerendert werden.  
  
> [!NOTE]
>  Die- <xref:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate%2A> Eigenschaft wird häufig in Kombination mit der- <xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A> Eigenschaft verwendet, um für jedes andere Element im Daten gebundenen Steuerelement eine andere Darstellung zu erstellen.  
  
 Um eine Vorlage anzugeben, platzieren Sie zunächst öffnende und schließende `<AlternatingItemTemplate>` Tags zwischen dem öffnenden und dem schließenden Tag des `<TemplateField>` Elements. Fügen Sie als nächstes den benutzerdefinierten Inhalt zwischen den öffnenden und schließenden `<AlternatingItemTemplate>` Tags hinzu. Der Inhalt kann so einfach wie nur-Text oder eine komplexere (Einbetten von anderen Steuerelementen in der Vorlage, z. B.) sein.  
  
 Zum programmgesteuerten Zugriff auf ein Steuerelement, das in einer Vorlage definiert ist, legen Sie zunächst fest, welches <xref:System.Web.UI.WebControls.TableCell> Objekt im Daten gebundenen Steuerelement das Steuerelement enthält. Verwenden Sie als nächstes die-Auflistung <xref:System.Web.UI.Control.Controls%2A> des- <xref:System.Web.UI.WebControls.TableCell> Objekts, um auf das Steuerelement zuzugreifen. Können Sie auch die <xref:System.Web.UI.Control.FindControl%2A> Methode der <xref:System.Web.UI.WebControls.TableCell> Objekt, das dem Steuerelement zu suchen, wenn das Steuerelement besitzt eine <xref:System.Web.UI.Control.ID%2A> angegebene Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die-Eigenschaft verwendet wird <xref:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate%2A> , um eine benutzerdefinierte Vorlage für abwechselnde Elemente in einer <xref:System.Web.UI.WebControls.TemplateField> Feld Spalte eines-Steuer Elements zu erstellen <xref:System.Web.UI.WebControls.GridView> . Die Vorlage ist eine Variation der von der-Eigenschaft angegebenen Vorlage <xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A> , in der ein Bild auf der gegenüberliegenden Seite der Zelle angezeigt wird.  
  
 [!code-aspx-csharp[TemplateFieldAlternatingItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TemplateFieldAlternatingItemTemplate/CS/templatefieldalternatingitemtemplatecs.aspx#1)]
 [!code-aspx-vb[TemplateFieldAlternatingItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TemplateFieldAlternatingItemTemplate/VB/templatefieldalternatingitemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.ItemTemplate" />
      </Docs>
    </Member>
    <Member MemberName="ConvertEmptyStringToNull">
      <MemberSignature Language="C#" Value="public virtual bool ConvertEmptyStringToNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConvertEmptyStringToNull" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TemplateField.ConvertEmptyStringToNull" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ConvertEmptyStringToNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ConvertEmptyStringToNull { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ConvertEmptyStringToNull : bool with get, set" Usage="System.Web.UI.WebControls.TemplateField.ConvertEmptyStringToNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob der Wert, an den das <see cref="T:System.Web.UI.WebControls.TemplateField" />-Objekt gebunden ist, nach <see langword="null" /> konvertiert werden soll, wenn er <see cref="F:System.String.Empty" /> ist.</summary>
        <value><see langword="true" />, wenn der Wert, an den der <see cref="T:System.Web.UI.WebControls.TemplateField" /> gebunden ist, nach <see langword="null" /> konvertiert werden soll, wenn er <see cref="F:System.String.Empty" /> ist, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft gilt für bidirektionale Daten Bindungs Anweisungen, die in der Vorlage vorgenommen werden. Die Konvertierung erfolgt nach dem Extrahieren der Werte aus der bidirektionalen gebundenen Vorlage und vor dem übergeben der Werte an die Datenquelle für einen Aktualisierungs-oder Einfügevorgang.  
  
 Beispielsweise kann ein Benutzer beim Aktualisieren oder Einfügen von Datensätzen eine leere Zeichenfolge ("") für einen Feldwert eingeben. Verwenden Sie die- <xref:System.Web.UI.WebControls.TemplateField.ConvertEmptyStringToNull%2A> Eigenschaft, um anzugeben, ob ein leerer Zeichen folgen Wert automatisch in konvertiert wird, `null` Wenn das Datenfeld in der Datenquelle aktualisiert wird.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TemplateField" />
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
      </Docs>
    </Member>
    <Member MemberName="CopyProperties">
      <MemberSignature Language="C#" Value="protected override void CopyProperties (System.Web.UI.WebControls.DataControlField newField);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CopyProperties(class System.Web.UI.WebControls.DataControlField newField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TemplateField.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CopyProperties (newField As DataControlField)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CopyProperties(System::Web::UI::WebControls::DataControlField ^ newField);" />
      <MemberSignature Language="F#" Value="override this.CopyProperties : System.Web.UI.WebControls.DataControlField -&gt; unit" Usage="templateField.CopyProperties newField" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newField" Type="System.Web.UI.WebControls.DataControlField" />
      </Parameters>
      <Docs>
        <param name="newField">Das <see cref="T:System.Web.UI.WebControls.DataControlField" />, in das die Eigenschaften des aktuellen <see cref="T:System.Web.UI.WebControls.TemplateField" /> kopiert werden sollen.</param>
        <summary>Kopiert die Eigenschaften des aktuellen, aus <see cref="T:System.Web.UI.WebControls.TemplateField" /> abgeleiteten Objekts in das angegebene <see cref="T:System.Web.UI.WebControls.DataControlField" />-Objekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die- <xref:System.Web.UI.WebControls.TemplateField.CopyProperties%2A> Methode ist eine Hilfsmethode, mit der die Eigenschaften des aktuellen <xref:System.Web.UI.WebControls.TemplateField> , von abgeleiteten Objekts in das <xref:System.Web.UI.WebControls.DataControlField> von der-Methode erstellte-Objekt kopiert werden.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Stellen Sie beim Überschreiben <see cref="M:System.Web.UI.WebControls.TemplateField.CopyProperties(System.Web.UI.WebControls.DataControlField)" /> in einer abgeleiteten Klasse sicher, dass Sie die-Methode der Basisklasse aufzurufen <see cref="M:System.Web.UI.WebControls.DataControlField.CopyProperties(System.Web.UI.WebControls.DataControlField)" /> .</para></block>
        <altmember cref="T:System.Web.UI.WebControls.TemplateField" />
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
      </Docs>
    </Member>
    <Member MemberName="CreateField">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.DataControlField CreateField ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.DataControlField CreateField() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TemplateField.CreateField" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateField () As DataControlField" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::DataControlField ^ CreateField();" />
      <MemberSignature Language="F#" Value="override this.CreateField : unit -&gt; System.Web.UI.WebControls.DataControlField" Usage="templateField.CreateField " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataControlField</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt ein neues <see cref="T:System.Web.UI.WebControls.TemplateField" />-Objekt.</summary>
        <returns>Gibt immer ein neues <see cref="T:System.Web.UI.WebControls.TemplateField" /> zurück.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die- <xref:System.Web.UI.WebControls.TemplateField.CreateField%2A> Methode überschreibt die Basis Methode, um ein-Objekt zurückzugeben <xref:System.Web.UI.WebControls.TemplateField> .  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn <see cref="M:System.Web.UI.WebControls.TemplateField.CreateField" /> Sie in einer abgeleiteten Klasse überschreiben, stellen Sie sicher, dass Sie eine neue Instanz des Typs erstellen und nicht die Basis Methode aufzurufen.</para></block>
        <altmember cref="T:System.Web.UI.WebControls.TemplateField" />
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
      </Docs>
    </Member>
    <Member MemberName="EditItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate EditItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate EditItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TemplateField.EditItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EditItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ EditItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EditItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.TemplateField.EditItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.TemplateContainer(typeof(System.Web.UI.IDataItemContainer), System.ComponentModel.BindingDirection.TwoWay)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.TemplateContainer(typeof(System.Web.UI.IDataItemContainer), System.ComponentModel.BindingDirection.TwoWay)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Vorlage ab, mit der ein Element im Bearbeitungsmodus in einem <see cref="T:System.Web.UI.WebControls.TemplateField" />-Objekt angezeigt wird, oder legt diese Vorlage fest.</summary>
        <value>Ein in <see cref="T:System.Web.UI.ITemplate" /> implementiertes Objekt, das die Vorlage zum Anzeigen eines Elements im Bearbeitungsmodus in <see cref="T:System.Web.UI.WebControls.TemplateField" /> enthält. Der Standardwert ist <see langword="null" /> und gibt an, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die- <xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A> Eigenschaft, um den benutzerdefinierten Inhalt anzugeben, der für ein Element im Bearbeitungsmodus in einem-Objekt angezeigt wird <xref:System.Web.UI.WebControls.TemplateField> . Definieren Sie den Inhalt, indem Sie eine Vorlage erstellen, die angibt, wie ein Element im Bearbeitungsmodus gerendert wird. Die- <xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A> Eigenschaft enthält in der Regel Eingabe Steuerelemente für den Benutzer, um einen Wert in einer Datenquelle zu ändern.  
  
 Um eine Vorlage anzugeben, platzieren Sie zunächst öffnende und schließende `<EditItemTemplate>` Tags zwischen dem öffnenden und dem schließenden Tag des `<TemplateField>` Elements. Fügen Sie als nächstes den benutzerdefinierten Inhalt zwischen den öffnenden und schließenden `<EditItemTemplate>` Tags hinzu. Der Inhalt kann so einfach wie nur-Text oder eine komplexere (Einbetten von anderen Steuerelementen in der Vorlage, z. B.) sein.  
  
 Zum programmgesteuerten Zugriff auf ein Steuerelement, das in einer Vorlage definiert ist, legen Sie zunächst fest, welches <xref:System.Web.UI.WebControls.TableCell> Objekt im Daten gebundenen Steuerelement das Steuerelement enthält. Verwenden Sie als nächstes die-Auflistung <xref:System.Web.UI.Control.Controls%2A> des- <xref:System.Web.UI.WebControls.TableCell> Objekts, um auf das Steuerelement zuzugreifen. Können Sie auch die <xref:System.Web.UI.Control.FindControl%2A> Methode der <xref:System.Web.UI.WebControls.TableCell> Objekt, das dem Steuerelement zu suchen, wenn das Steuerelement besitzt eine <xref:System.Web.UI.Control.ID%2A> angegebene Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die-Eigenschaft verwendet wird <xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A> , um eine benutzerdefinierte Vorlage für ein Element im Bearbeitungsmodus in einer <xref:System.Web.UI.WebControls.TemplateField> Feld Spalte eines-Steuer Elements zu erstellen <xref:System.Web.UI.WebControls.GridView> . Die Vorlage enthält Validierungsserver Steuerelemente, um zu verhindern, dass ein Benutzer ein Wertfeld leer lässt.  
  
 [!code-aspx-csharp[TemplateFieldEditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TemplateFieldEditItemTemplate/CS/templatefieldedititemtemplatecs.aspx#1)]
 [!code-aspx-vb[TemplateFieldEditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TemplateFieldEditItemTemplate/VB/templatefieldedititemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.ItemTemplate" />
      </Docs>
    </Member>
    <Member MemberName="ExtractValuesFromCell">
      <MemberSignature Language="C#" Value="public override void ExtractValuesFromCell (System.Collections.Specialized.IOrderedDictionary dictionary, System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ExtractValuesFromCell(class System.Collections.Specialized.IOrderedDictionary dictionary, class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TemplateField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ExtractValuesFromCell (dictionary As IOrderedDictionary, cell As DataControlFieldCell, rowState As DataControlRowState, includeReadOnly As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ExtractValuesFromCell(System::Collections::Specialized::IOrderedDictionary ^ dictionary, System::Web::UI::WebControls::DataControlFieldCell ^ cell, System::Web::UI::WebControls::DataControlRowState rowState, bool includeReadOnly);" />
      <MemberSignature Language="F#" Value="override this.ExtractValuesFromCell : System.Collections.Specialized.IOrderedDictionary * System.Web.UI.WebControls.DataControlFieldCell * System.Web.UI.WebControls.DataControlRowState * bool -&gt; unit" Usage="templateField.ExtractValuesFromCell (dictionary, cell, rowState, includeReadOnly)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Specialized.IOrderedDictionary" />
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
        <Parameter Name="includeReadOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dictionary"><see cref="T:System.Collections.Specialized.IOrderedDictionary" />.</param>
        <param name="cell">Eine <see cref="T:System.Web.UI.WebControls.DataControlFieldCell" />, die den Text oder die Steuerelemente von <see cref="T:System.Web.UI.WebControls.TemplateField" /> enthält.</param>
        <param name="rowState">Einer der <see cref="T:System.Web.UI.WebControls.DataControlRowState" />-Werte.</param>
        <param name="includeReadOnly"><see langword="true" />, um anzugeben, dass die Werte schreibgeschützter Felder in der <paramref name="dictionary" />-Auflistung enthalten sind, andernfalls <see langword="false" />.</param>
        <summary>Extrahiert gemäß den Angaben durch eine oder mehrere Anweisungen zur bidirektionalen Datenbindung (<see langword="DataBind" />) die Werte der Datensteuerelementfelder aus der aktuellen Tabellenzelle und fügt diese Werte der angegebenen <see cref="T:System.Collections.Specialized.IOrderedDictionary" />-Auflistung hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die- <xref:System.Web.UI.WebControls.TemplateField.ExtractValuesFromCell%2A> Methode wird von Typen implementiert, die von abgeleitet <xref:System.Web.UI.WebControls.DataControlField> werden, z <xref:System.Web.UI.WebControls.TemplateField> . b.. Diese Methode wird aufgerufen, um die Werte von bidirektionalen Daten gebundenen Feldern in der Vorlage zu extrahieren und Wörter aufzufüllen, die an die Datenquelle für einen Aktualisierungs-, Einfüge-oder Löschvorgang übermittelt werden sollen. Das Feld-Wert-Paar wird in der Dictionary-Auflistung gespeichert, die an die-Methode übermittelt wird. Die <xref:System.Web.UI.WebControls.TemplateField.ExtractValuesFromCell%2A> -Methode wird von der `ExtractRowValues` -Methode von Daten Steuerelementen aufgerufen, z <xref:System.Web.UI.WebControls.DetailsView> <xref:System.Web.UI.WebControls.GridView> . b. und.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FooterTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate FooterTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate FooterTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TemplateField.FooterTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property FooterTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ FooterTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FooterTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.TemplateField.FooterTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.TemplateContainer(typeof(System.Web.UI.IDataItemContainer))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.TemplateContainer(typeof(System.Web.UI.IDataItemContainer))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Vorlage zum Anzeigen des Fußzeilenbereichs eines <see cref="T:System.Web.UI.WebControls.TemplateField" />-Objekts ab oder legt diese fest.</summary>
        <value>Ein in <see cref="T:System.Web.UI.ITemplate" /> implementiertes Objekt, das die Vorlage zum Anzeigen des Fußzeilenbereichs einer <see cref="T:System.Web.UI.WebControls.TemplateField" /> enthält. Der Standardwert ist <see langword="null" /> und gibt an, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die- <xref:System.Web.UI.WebControls.TemplateField.FooterTemplate%2A> Eigenschaft, um den benutzerdefinierten Inhalt anzugeben, der im Footerbereich eines-Objekts angezeigt wird <xref:System.Web.UI.WebControls.TemplateField> . Definieren Sie den Inhalt, indem Sie eine Vorlage erstellen, die angibt, wie der Footerabschnitt gerendert wird.  
  
 Um eine Vorlage anzugeben, platzieren Sie zunächst öffnende und schließende `<FooterTemplate>` Tags zwischen dem öffnenden und dem schließenden Tag des `<TemplateField>` Elements. Fügen Sie als nächstes den benutzerdefinierten Inhalt zwischen den öffnenden und schließenden `<FooterTemplate>` Tags hinzu. Der Inhalt kann so einfach wie nur-Text oder eine komplexere (Einbetten von anderen Steuerelementen in der Vorlage, z. B.) sein.  
  
 Zum programmgesteuerten Zugriff auf ein Steuerelement, das in einer Vorlage definiert ist, legen Sie zunächst fest, welches <xref:System.Web.UI.WebControls.TableCell> Objekt im Daten gebundenen Steuerelement das Steuerelement enthält. Verwenden Sie als nächstes die-Auflistung <xref:System.Web.UI.Control.Controls%2A> des- <xref:System.Web.UI.WebControls.TableCell> Objekts, um auf das Steuerelement zuzugreifen. Können Sie auch die <xref:System.Web.UI.Control.FindControl%2A> Methode der <xref:System.Web.UI.WebControls.TableCell> Objekt, das dem Steuerelement zu suchen, wenn das Steuerelement besitzt eine <xref:System.Web.UI.Control.ID%2A> angegebene Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die-Eigenschaft verwendet wird <xref:System.Web.UI.WebControls.TemplateField.FooterTemplate%2A> , um eine benutzerdefinierte Vorlage für den Footerbereich einer <xref:System.Web.UI.WebControls.TemplateField> Feld Spalte in einem-Steuerelement zu erstellen <xref:System.Web.UI.WebControls.GridView> . Die Vorlage zeigt die Summe der Werte in der <xref:System.Web.UI.WebControls.TemplateField> Spalte Feld an.  
  
 [!code-aspx-csharp[TemplateFieldFooterTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TemplateFieldFooterTemplate/CS/templatefieldfootertemplatecs.aspx#1)]
 [!code-aspx-vb[TemplateFieldFooterTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TemplateFieldFooterTemplate/VB/templatefieldfootertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.ItemTemplate" />
      </Docs>
    </Member>
    <Member MemberName="HeaderTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate HeaderTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate HeaderTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TemplateField.HeaderTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HeaderTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ HeaderTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.TemplateField.HeaderTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.TemplateContainer(typeof(System.Web.UI.IDataItemContainer))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.TemplateContainer(typeof(System.Web.UI.IDataItemContainer))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Vorlage zum Anzeigen des Kopfzeilenbereichs eines <see cref="T:System.Web.UI.WebControls.TemplateField" />-Objekts ab oder legt diese fest.</summary>
        <value>Ein in <see cref="T:System.Web.UI.ITemplate" /> implementiertes Objekt, das die Vorlage zum Anzeigen des Kopfzeilenbereichs eines <see cref="T:System.Web.UI.WebControls.TemplateField" /> in einem datengebundenen Steuerelement enthält. Der Standardwert ist <see langword="null" /> und gibt an, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die- <xref:System.Web.UI.WebControls.TemplateField.HeaderTemplate%2A> Eigenschaft, um den benutzerdefinierten Inhalt anzugeben, der für den Header Abschnitt eines-Objekts angezeigt wird <xref:System.Web.UI.WebControls.TemplateField> . Definieren Sie den Inhalt, indem Sie eine Vorlage erstellen, die angibt, wie der Header Abschnitt gerendert wird.  
  
 Um eine Vorlage anzugeben, platzieren Sie zunächst öffnende und schließende `<HeaderTemplate>` Tags zwischen dem öffnenden und dem schließenden Tag des `<TemplateField>` Elements. Fügen Sie als nächstes den benutzerdefinierten Inhalt zwischen den öffnenden und schließenden `<HeaderTemplate>` Tags hinzu. Der Inhalt kann so einfach wie nur-Text oder eine komplexere (Einbetten von anderen Steuerelementen in der Vorlage, z. B.) sein.  
  
 Zum programmgesteuerten Zugriff auf ein Steuerelement, das in einer Vorlage definiert ist, legen Sie zunächst fest, welches <xref:System.Web.UI.WebControls.TableCell> Objekt im Daten gebundenen Steuerelement das Steuerelement enthält. Verwenden Sie als nächstes die-Auflistung <xref:System.Web.UI.Control.Controls%2A> des- <xref:System.Web.UI.WebControls.TableCell> Objekts, um auf das Steuerelement zuzugreifen. Können Sie auch die <xref:System.Web.UI.Control.FindControl%2A> Methode der <xref:System.Web.UI.WebControls.TableCell> Objekt, das dem Steuerelement zu suchen, wenn das Steuerelement besitzt eine <xref:System.Web.UI.Control.ID%2A> angegebene Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die-Eigenschaft verwendet wird <xref:System.Web.UI.WebControls.TemplateField.HeaderTemplate%2A> , um eine benutzerdefinierte Vorlage für den Header Abschnitt einer <xref:System.Web.UI.WebControls.TemplateField> Feld Spalte in einem-Steuerelement zu erstellen <xref:System.Web.UI.WebControls.GridView> . Die Vorlage zeigt ein Kontrollkästchen an, mit dem der Benutzer die Zeilen des-Steuer Elements anzeigen oder ausblenden kann <xref:System.Web.UI.WebControls.GridView> .  
  
 [!code-aspx-csharp[TemplateFieldHeaderTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TemplateFieldHeaderTemplate/CS/templatefieldheadertemplatecs.aspx#1)]
 [!code-aspx-vb[TemplateFieldHeaderTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TemplateFieldHeaderTemplate/VB/templatefieldheadertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.ItemTemplate" />
      </Docs>
    </Member>
    <Member MemberName="InitializeCell">
      <MemberSignature Language="C#" Value="public override void InitializeCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InitializeCell(class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlCellType cellType, valuetype System.Web.UI.WebControls.DataControlRowState rowState, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TemplateField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub InitializeCell (cell As DataControlFieldCell, cellType As DataControlCellType, rowState As DataControlRowState, rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void InitializeCell(System::Web::UI::WebControls::DataControlFieldCell ^ cell, System::Web::UI::WebControls::DataControlCellType cellType, System::Web::UI::WebControls::DataControlRowState rowState, int rowIndex);" />
      <MemberSignature Language="F#" Value="override this.InitializeCell : System.Web.UI.WebControls.DataControlFieldCell * System.Web.UI.WebControls.DataControlCellType * System.Web.UI.WebControls.DataControlRowState * int -&gt; unit" Usage="templateField.InitializeCell (cell, cellType, rowState, rowIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="cellType" Type="System.Web.UI.WebControls.DataControlCellType" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cell">Eine <see cref="T:System.Web.UI.WebControls.DataControlFieldCell" />, die den Text oder die Steuerelemente von <see cref="T:System.Web.UI.WebControls.DataControlField" /> enthält.</param>
        <param name="cellType">Einer der <see cref="T:System.Web.UI.WebControls.DataControlCellType" />-Werte.</param>
        <param name="rowState">Einer der <see cref="T:System.Web.UI.WebControls.DataControlRowState" />-Werte, der den Zustand der Zeile angibt, die <see cref="T:System.Web.UI.WebControls.DataControlFieldCell" /> enthält.</param>
        <param name="rowIndex">Der Index der Zeile, in dem <see cref="T:System.Web.UI.WebControls.DataControlFieldCell" /> enthalten ist.</param>
        <summary>Fügt der Steuerelementauflistung einer Zelle Text oder Steuerelemente hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie ein benutzerdefiniertes Daten gebundenes Steuerelement erstellen, das- <xref:System.Web.UI.WebControls.DataControlFieldCell> Objekte verwendet, um die Zellen der Tabellenstruktur mit Daten oder Steuerelementen zu initialisieren, wird diese Methode aufgerufen.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TemplateField" />
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
      </Docs>
    </Member>
    <Member MemberName="InsertItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate InsertItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate InsertItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TemplateField.InsertItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InsertItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ InsertItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.TemplateField.InsertItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.TemplateContainer(typeof(System.Web.UI.IDataItemContainer), System.ComponentModel.BindingDirection.TwoWay)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.TemplateContainer(typeof(System.Web.UI.IDataItemContainer), System.ComponentModel.BindingDirection.TwoWay)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Vorlage ab, mit der ein Element im Einfügemodus in einem <see cref="T:System.Web.UI.WebControls.TemplateField" />-Objekt angezeigt wird, oder legt diese Vorlage fest.</summary>
        <value>Ein in <see cref="T:System.Web.UI.ITemplate" /> implementiertes Objekt, das die Vorlage zum Anzeigen eines Elements im Einfügemodus in <see cref="T:System.Web.UI.WebControls.TemplateField" /> enthält. Der Standardwert ist <see langword="null" /> und gibt an, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die- <xref:System.Web.UI.WebControls.TemplateField.InsertItemTemplate%2A> Eigenschaft, um den für ein Element im Einfügemodus in einem-Objekt angezeigten benutzerdefinierten Inhalt anzugeben <xref:System.Web.UI.WebControls.TemplateField> . Definieren Sie den Inhalt durch Erstellen einer Vorlage, die angibt, wie das Element im Einfügemodus gerendert wird.  
  
 Um eine Vorlage anzugeben, platzieren Sie zunächst öffnende und schließende `<InsertItemTemplate>` Tags zwischen dem öffnenden und dem schließenden Tag des `<TemplateField>` Elements. Fügen Sie als nächstes den benutzerdefinierten Inhalt zwischen den öffnenden und schließenden `<InsertItemTemplate>` Tags hinzu. Der Inhalt kann so einfach wie nur-Text oder eine komplexere (Einbetten von anderen Steuerelementen in der Vorlage, z. B.) sein.  
  
 Zum programmgesteuerten Zugriff auf ein Steuerelement, das in einer Vorlage definiert ist, legen Sie zunächst fest, welches <xref:System.Web.UI.WebControls.TableCell> Objekt im Daten gebundenen Steuerelement das Steuerelement enthält. Verwenden Sie als nächstes die-Auflistung <xref:System.Web.UI.Control.Controls%2A> des- <xref:System.Web.UI.WebControls.TableCell> Objekts, um auf das Steuerelement zuzugreifen. Können Sie auch die <xref:System.Web.UI.Control.FindControl%2A> Methode der <xref:System.Web.UI.WebControls.TableCell> Objekt, das dem Steuerelement zu suchen, wenn das Steuerelement besitzt eine <xref:System.Web.UI.Control.ID%2A> angegebene Eigenschaft.  
  
> [!NOTE]
>  Nicht alle Daten gebundenen Steuerelemente unterstützen diese Vorlage. diese Vorlage wird nur von Daten gebundenen Steuerelementen unterstützt, die es Ihnen ermöglichen, einen Datensatz einzufügen, z. b. das- <xref:System.Web.UI.WebControls.DetailsView> Steuerelement.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die-Eigenschaft verwendet wird <xref:System.Web.UI.WebControls.TemplateField.InsertItemTemplate%2A> , um eine benutzerdefinierte Vorlage für ein Element im Einfügemodus in einer <xref:System.Web.UI.WebControls.TemplateField> Feld Zeile in einem-Steuerelement zu erstellen <xref:System.Web.UI.WebControls.DetailsView> . Die Vorlage zeigt ein <xref:System.Web.UI.WebControls.DropDownList> Steuerelement an, das es dem Benutzer ermöglicht, einen Wert aus einer vordefinierten Liste auszuwählen.  
  
 [!code-aspx-csharp[TemplateFieldInsertItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TemplateFieldInsertItemTemplate/CS/templatefieldinsertitemtemplatecs.aspx#1)]
 [!code-aspx-vb[TemplateFieldInsertItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TemplateFieldInsertItemTemplate/VB/templatefieldinsertitemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.ItemTemplate" />
      </Docs>
    </Member>
    <Member MemberName="ItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate ItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TemplateField.ItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ ItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.TemplateField.ItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.TemplateContainer(typeof(System.Web.UI.IDataItemContainer), System.ComponentModel.BindingDirection.TwoWay)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.TemplateContainer(typeof(System.Web.UI.IDataItemContainer), System.ComponentModel.BindingDirection.TwoWay)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Vorlage ab, mit der ein Element in einem datengebundenen Steuerelement angezeigt wird, oder legt diese fest.</summary>
        <value>Ein in <see cref="T:System.Web.UI.ITemplate" /> implementiertes Objekt, das die Vorlage zum Anzeigen eines Elements in <see cref="T:System.Web.UI.WebControls.TemplateField" /> enthält. Der Standardwert ist <see langword="null" /> und gibt an, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die- <xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A> Eigenschaft, um den benutzerdefinierten Inhalt anzugeben, der für die Elemente eines-Objekts angezeigt wird <xref:System.Web.UI.WebControls.TemplateField> . Definieren Sie den Inhalt, indem Sie eine Vorlage erstellen, die angibt, wie die Elemente gerendert werden.  
  
> [!NOTE]
>  Optional können Sie die- <xref:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate%2A> Eigenschaft in Kombination mit der- <xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A> Eigenschaft definieren, um für jedes andere Element im Daten gebundenen Steuerelement eine andere Darstellung zu erstellen.  
  
 Um eine Vorlage anzugeben, platzieren Sie zunächst öffnende und schließende `<ItemTemplate>` Tags zwischen dem öffnenden und dem schließenden Tag des `<TemplateField>` Elements. Fügen Sie als nächstes den benutzerdefinierten Inhalt zwischen den öffnenden und schließenden `<ItemTemplate>` Tags hinzu. Der Inhalt kann so einfach wie nur-Text oder eine komplexere (Einbetten von anderen Steuerelementen in der Vorlage, z. B.) sein.  
  
 Zum programmgesteuerten Zugriff auf ein Steuerelement, das in einer Vorlage definiert ist, legen Sie zunächst fest, welches <xref:System.Web.UI.WebControls.TableCell> Objekt im Daten gebundenen Steuerelement das Steuerelement enthält. Verwenden Sie als nächstes die-Auflistung <xref:System.Web.UI.Control.Controls%2A> des- <xref:System.Web.UI.WebControls.TableCell> Objekts, um auf das Steuerelement zuzugreifen. Können Sie auch die <xref:System.Web.UI.Control.FindControl%2A> Methode der <xref:System.Web.UI.WebControls.TableCell> Objekt, das dem Steuerelement zu suchen, wenn das Steuerelement besitzt eine <xref:System.Web.UI.Control.ID%2A> angegebene Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die-Eigenschaft verwendet wird <xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A> , um eine benutzerdefinierte Vorlage für die Elemente eines <xref:System.Web.UI.WebControls.TemplateField> Felds in einem-Steuerelement zu erstellen <xref:System.Web.UI.WebControls.GridView> . Die Vorlage zeigt den Wert des Felds in einem-Steuerelement an <xref:System.Web.UI.WebControls.RadioButtonList> .  
  
 [!code-aspx-csharp[TemplateFieldItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TemplateFieldItemTemplate/CS/templatefielditemtemplatecs.aspx#1)]
 [!code-aspx-vb[TemplateFieldItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TemplateFieldItemTemplate/VB/templatefielditemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.InsertItemTemplate" />
      </Docs>
    </Member>
    <Member MemberName="ValidateRequestMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.ValidateRequestMode ValidateRequestMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ValidateRequestMode ValidateRequestMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TemplateField.ValidateRequestMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidateRequestMode As ValidateRequestMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ValidateRequestMode ValidateRequestMode { System::Web::UI::ValidateRequestMode get(); void set(System::Web::UI::ValidateRequestMode value); };" />
      <MemberSignature Language="F#" Value="member this.ValidateRequestMode : System.Web.UI.ValidateRequestMode with get, set" Usage="System.Web.UI.WebControls.TemplateField.ValidateRequestMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ValidateRequestMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob das Steuerelement Clienteingaben überprüft.</summary>
        <value><see langword="true" />, wenn das Steuerelement Client-Eingaben überprüft; andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateSupportsCallback">
      <MemberSignature Language="C#" Value="public override void ValidateSupportsCallback ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ValidateSupportsCallback() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TemplateField.ValidateSupportsCallback" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ValidateSupportsCallback ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ValidateSupportsCallback();" />
      <MemberSignature Language="F#" Value="override this.ValidateSupportsCallback : unit -&gt; unit" Usage="templateField.ValidateSupportsCallback " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Bestimmt, ob die in einem <see cref="T:System.Web.UI.WebControls.TemplateField" />-Objekt enthaltenen Steuerelemente Seitenrückrufe unterstützen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.TemplateField.ValidateSupportsCallback%2A> -Methode wird für diese Klasse nicht unterstützt und löst immer eine- <xref:System.NotSupportedException> Ausnahme aus.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Die Standardimplementierung dieser Methode wird aufgerufen.</exception>
        <block subset="none" type="overrides"><para>Klassen, die von der- <see cref="T:System.Web.UI.WebControls.TemplateField" /> Klasse abgeleitet werden, können diese Methode überschreiben, um anzugeben, ob die im Feld enthaltenen Steuerelemente Rückrufe unterstützen. Um anzugeben, dass Rückrufe unterstützt werden, implementieren Sie diese Methode als leere Methode, die keine Ausnahme auslöst. Andernfalls lösen Sie eine Ausnahme mit einer nützlichen Meldung aus, die beschreibt, warum Rückrufe nicht unterstützt werden.</para></block>
        <altmember cref="T:System.Web.UI.WebControls.TemplateField" />
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
      </Docs>
    </Member>
  </Members>
</Type>
