<Type Name="LinqDataSourceView" FullName="System.Web.UI.WebControls.LinqDataSourceView">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0dba5c3541cac0c1f90d75e0c0468ab4734cda10" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37534875" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class LinqDataSourceView : System.Web.UI.WebControls.ContextDataSourceView" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LinqDataSourceView extends System.Web.UI.WebControls.ContextDataSourceView" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.LinqDataSourceView" />
  <TypeSignature Language="VB.NET" Value="Public Class LinqDataSourceView&#xA;Inherits ContextDataSourceView" />
  <TypeSignature Language="C++ CLI" Value="public ref class LinqDataSourceView : System::Web::UI::WebControls::ContextDataSourceView" />
  <TypeSignature Language="F#" Value="type LinqDataSourceView = class&#xA;    inherit ContextDataSourceView" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.ContextDataSourceView</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-3.5">System.Web.UI.DataSourceView</BaseTypeName>
  </Base>
  <Interfaces></Interfaces>
  <Docs>
    <summary>Unterstützt das <see cref="T:System.Web.UI.WebControls.LinqDataSource" />-Steuerelement und stellt eine Schnittstelle für datengebundene Steuerelemente zum Ausführen von LINQ-Datenvorgängen bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.LinqDataSourceView> Klasse dient in erster Linie, die von datengebundenen Steuerelementen und nicht als programmierbares Objekt im Code der Seite verwendet werden soll. Seitenentwickler, die in der Regel verwenden Sie die <xref:System.Web.UI.WebControls.LinqDataSource> Steuerelement mit Daten interagieren.  
  
 ASP.NET Datenquellen-Steuerelemente enthalten eine oder mehrere Listen mit Daten, die vom Datenquellensicht-Objekte dargestellt. Die <xref:System.Web.UI.WebControls.LinqDataSourceView> -Klasse erweitert die <xref:System.Web.UI.DataSourceView> Klasse. Es definiert die Fähigkeiten der <xref:System.Web.UI.WebControls.LinqDataSource> -Steuerelements verknüpft ist, und implementiert die grundlegende Funktionalität für das Datenquellen-Steuerelement. Die <xref:System.Web.UI.WebControls.LinqDataSourceView> -Klasse implementiert die <xref:System.Web.UI.WebControls.LinqDataSourceView.Select%2A>, [Update](<xref:System.Web.UI.WebControls.LinqDataSourceView.UpdateDataObject%2A>), [einfügen](<xref:System.Web.UI.WebControls.LinqDataSourceView.InsertDataObject%2A>), und [löschen](<xref:System.Web.UI.WebControls.LinqDataSourceView.DeleteDataObject%2A>) Vorgänge. Es implementiert auch sortieren, Filtern und Verwalten von Einstellungen, die in der Ansicht der Zustand gespeichert werden.  
  
 Obwohl die <xref:System.Web.UI.WebControls.LinqDataSourceView> Objekt nicht direkt verfügbar gemacht wird für Seitenentwickler, die viele der zugehörigen Eigenschaften und Methoden können zugegriffen werden, über die <xref:System.Web.UI.WebControls.LinqDataSource> Steuerelement. Die <xref:System.Web.UI.WebControls.LinqDataSourceView> Steuerelement implementiert die folgenden Methoden zum Datenabruf und die Ereignisse und macht sie verfügbar, Entwickler von Seiten und andere Aufrufer über die zugeordnete <xref:System.Web.UI.WebControls.LinqDataSource> Steuerelement:  
  
-   Die <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>-Eigenschaft  
  
-   Die <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> Ereignis.  
  
-   Die <xref:System.Web.UI.WebControls.LinqDataSource.Selected> Ereignis.  
  
-   Die <xref:System.Web.UI.WebControls.LinqDataSource.Update%2A>-Methode.  
  
-   Die <xref:System.Web.UI.WebControls.LinqDataSource.Updating> Ereignis.  
  
-   Die <xref:System.Web.UI.WebControls.LinqDataSource.Updated> Ereignis.  
  
-   Die <xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A>-Methode.  
  
-   Die <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> Ereignis.  
  
-   Die <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> Ereignis.  
  
-   Die <xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A>-Methode.  
  
-   Die <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> Ereignis.  
  
-   Die <xref:System.Web.UI.WebControls.LinqDataSource.Deleted> Ereignis.  
  
 Sie können die Daten, die Sie mit abrufen Sortieren der <xref:System.Web.UI.WebControls.LinqDataSource> Kontrolle durch das Hinzufügen einer `OrderBy` Klausel. Sie bieten einen Sortierungsausdruck für die <xref:System.Web.UI.WebControls.LinqDataSourceView> Instanz durch Festlegen der <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A> Eigenschaft der <xref:System.Web.UI.DataSourceSelectArguments> -Objekt, das an die <xref:System.Web.UI.WebControls.LinqDataSourceView.Select%2A> Methode. Die Syntax für die <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A> Eigenschaft ist identisch mit der Syntax für eine <xref:System.Data.DataView.Sort%2A?displayProperty=nameWithType> Eigenschaft.  
  
 Die <xref:System.Web.UI.WebControls.LinqDataSourceView> -Steuerelement implementiert die <xref:System.Web.UI.IStateManager> -Schnittstelle und die Verwendung des Ansichtszustands der Status aller Seiten-Anforderungen nachzuverfolgen. Implementierungen der <xref:System.Web.UI.WebControls.QueryableDataSourceView.IsTrackingViewState%2A> Eigenschaft und die <xref:System.Web.UI.WebControls.QueryableDataSourceView.LoadViewState%2A>, <xref:System.Web.UI.WebControls.QueryableDataSourceView.SaveViewState%2A>, und <xref:System.Web.UI.WebControls.QueryableDataSourceView.TrackViewState%2A> werden Methoden bereitgestellt für die um Überwachung der Ansichtszustand für das Steuerelement zu aktivieren. Weitere Informationen finden Sie unter [ASP.NET State Management Overview](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceView (System.Web.UI.WebControls.LinqDataSource owner, string name, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.LinqDataSource owner, string name, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.#ctor(System.Web.UI.WebControls.LinqDataSource,System.String,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As LinqDataSource, name As String, context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceView(System::Web::UI::WebControls::LinqDataSource ^ owner, System::String ^ name, System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.LinqDataSourceView : System.Web.UI.WebControls.LinqDataSource * string * System.Web.HttpContext -&gt; System.Web.UI.WebControls.LinqDataSourceView" Usage="new System.Web.UI.WebControls.LinqDataSourceView (owner, name, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.WebControls.LinqDataSource" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="owner">Das dem <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" />-Objekt zugeordnete Datenquellen-Steuerelement.</param>
        <param name="name">Ein eindeutiger Name für die Datenquellenansicht, die innerhalb des Gültigkeitsbereichs des besitzenden Datenquellen-Steuerelements liegt.</param>
        <param name="context">Die aktuelle <see cref="T:System.Web.HttpContext" />-Instanz.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" />-Klasse, die das angegebene <see cref="T:System.Web.UI.WebControls.LinqDataSource" />-Steuerelement als Besitzer der aktuellen Ansicht festlegt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.LinqDataSourceView.%23ctor%2A> Konstruktor wird aufgerufen, indem die [LinqDataSource.GetView](<xref:System.Web.UI.WebControls.QueryableDataSource.GetView%2A>) Methode, um eine neue Instanz der einer Datenquellensicht mit dem angegebenen zurückzugeben `name` Parameter. Nur ein <xref:System.Web.UI.WebControls.LinqDataSourceView> Objekt zugeordnet ist eine <xref:System.Web.UI.WebControls.LinqDataSource> Steuerelement zu einem Zeitpunkt. Der Name des der <xref:System.Web.UI.WebControls.LinqDataSourceView> Objekt ist immer `DefaultView`, obwohl diese jeweils ist die <xref:System.Web.UI.WebControls.LinqDataSource> zu steuern, nicht von der <xref:System.Web.UI.WebControls.LinqDataSourceView> Steuerelement. Sie können außer Kraft setzen der [LinqDataSource.GetView](<xref:System.Web.UI.WebControls.QueryableDataSource.GetView%2A>) Methode, um Ansichten zu unterstützen, die eine andere Benennungskonvention zu verwenden.  
  
 Die <xref:System.Web.HttpContext> -Instanz, die übergeben wird, durch die `context` Parameter wird von der Datenquellensicht auf parameterauflistungen Zugriff verwendet.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoGenerateOrderByClause">
      <MemberSignature Language="C#" Value="public bool AutoGenerateOrderByClause { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoGenerateOrderByClause" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceView.AutoGenerateOrderByClause" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoGenerateOrderByClause As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoGenerateOrderByClause { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoGenerateOrderByClause : bool with get, set" Usage="System.Web.UI.WebControls.LinqDataSourceView.AutoGenerateOrderByClause" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoGenerateWhereClause">
      <MemberSignature Language="C#" Value="public bool AutoGenerateWhereClause { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoGenerateWhereClause" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceView.AutoGenerateWhereClause" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoGenerateWhereClause As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoGenerateWhereClause { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoGenerateWhereClause : bool with get, set" Usage="System.Web.UI.WebControls.LinqDataSourceView.AutoGenerateWhereClause" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoPage">
      <MemberSignature Language="C#" Value="public bool AutoPage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoPage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceView.AutoPage" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoPage As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoPage { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoPage : bool with get, set" Usage="System.Web.UI.WebControls.LinqDataSourceView.AutoPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSort">
      <MemberSignature Language="C#" Value="public bool AutoSort { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoSort" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceView.AutoSort" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoSort As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoSort { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoSort : bool with get, set" Usage="System.Web.UI.WebControls.LinqDataSourceView.AutoSort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanDelete">
      <MemberSignature Language="C#" Value="public override bool CanDelete { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanDelete" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceView.CanDelete" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanDelete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanDelete { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanDelete : bool" Usage="System.Web.UI.WebControls.LinqDataSourceView.CanDelete" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" />-Objekt, das dem aktuellen <see cref="T:System.Web.UI.WebControls.LinqDataSource" />-Steuerelement zugeordnet ist, den Löschvorgang unterstützt.</summary>
        <value>
          <see langword="true" />, wenn der Vorgang unterstützt wird, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.LinqDataSourceView.CanDelete%2A> -Eigenschaft gibt `true` Wenn die <xref:System.Web.UI.WebControls.LinqDataSourceView.EnableDelete%2A> -Eigenschaftensatz auf `true`. Ein Löschvorgang kann jedoch dennoch fehlschlagen, wenn die Eigenschaften der zugeordneten Daten nicht festgelegt sind oder nicht ordnungsgemäß festgelegt wurden.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.LinqDataSource.EnableDelete" />
      </Docs>
    </Member>
    <Member MemberName="CanInsert">
      <MemberSignature Language="C#" Value="public override bool CanInsert { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanInsert" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceView.CanInsert" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanInsert As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanInsert { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanInsert : bool" Usage="System.Web.UI.WebControls.LinqDataSourceView.CanInsert" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" />-Objekt, das dem aktuellen <see cref="T:System.Web.UI.WebControls.LinqDataSource" />-Steuerelement zugeordnet ist, den Einfügevorgang unterstützt.</summary>
        <value>
          <see langword="true" />, wenn der Vorgang unterstützt wird, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.LinqDataSourceView.CanInsert%2A> -Eigenschaft gibt `true` Wenn die <xref:System.Web.UI.WebControls.LinqDataSourceView.EnableInsert%2A> -Eigenschaftensatz auf `true`. Ein Insert-Vorgang kann jedoch dennoch fehlschlagen, wenn die Eigenschaften der zugeordneten Daten nicht festgelegt sind oder nicht ordnungsgemäß festgelegt wurden.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.LinqDataSource.EnableInsert" />
      </Docs>
    </Member>
    <Member MemberName="CanPage">
      <MemberSignature Language="C#" Value="public override bool CanPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanPage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceView.CanPage" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanPage As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanPage { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanPage : bool" Usage="System.Web.UI.WebControls.LinqDataSourceView.CanPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" />-Objekt, das dem aktuellen <see cref="T:System.Web.UI.WebControls.LinqDataSource" />-Steuerelement zugeordnet ist, das Paging der abgerufenen Daten unterstützt.</summary>
        <value>
          <see langword="true" />
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.LinqDataSourceView> Objekt immer Paging unterstützt, auch wenn das Datendarstellungssteuerelement kein Paging verwendet. Wenn die [LinqDataSourceView.AutoPage](<xref:System.Web.UI.WebControls.QueryableDataSourceView.AutoPage%2A>) -Eigenschaftensatz auf `false`, Sie können manuell die Seite der Daten in die <xref:System.Web.UI.WebControls.LinqDataSourceView.Selecting> Ereignis.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.LinqDataSource.AutoPage" />
      </Docs>
    </Member>
    <Member MemberName="CanRetrieveTotalRowCount">
      <MemberSignature Language="C#" Value="public override bool CanRetrieveTotalRowCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRetrieveTotalRowCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceView.CanRetrieveTotalRowCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRetrieveTotalRowCount As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRetrieveTotalRowCount { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRetrieveTotalRowCount : bool" Usage="System.Web.UI.WebControls.LinqDataSourceView.CanRetrieveTotalRowCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" />-Objekt, das dem aktuellen <see cref="T:System.Web.UI.WebControls.LinqDataSource" />-Steuerelement zugeordnet ist, das Abrufen der Gesamtanzahl der Datenzeilen (zusätzlich zum Abrufen der Daten) unterstützt.</summary>
        <value>
          <see langword="true" />
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Datengebundene Steuerelemente verwenden, die Gesamtzahl der Zeilen, die ausgelagert werden kann, um zu bestimmen, wie Paging-Steuerelemente gerendert wird. Dieser Wert wird z. B. verwendet, um zu bestimmen, wie viele numerischer Pager-Schaltflächen zum Rendern in einem <xref:System.Web.UI.WebControls.GridView> Pager-Steuerelement. Wenn die [LinqDataSourceView.AutoPage](<xref:System.Web.UI.WebControls.QueryableDataSourceView.AutoPage%2A>) -Eigenschaftensatz auf `false`, legen Sie die gesamte Zeilenanzahl manuell in die <xref:System.Web.UI.WebControls.LinqDataSourceView.Selecting> Ereignis.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSort">
      <MemberSignature Language="C#" Value="public override bool CanSort { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSort" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceView.CanSort" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSort As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSort { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSort : bool" Usage="System.Web.UI.WebControls.LinqDataSourceView.CanSort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" />-Objekt, das dem aktuellen <see cref="T:System.Web.UI.WebControls.LinqDataSource" />-Steuerelement zugeordnet ist, eine sortierte Ansicht der abgerufenen Daten unterstützt.</summary>
        <value>
          <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.LinqDataSourceView> Objekt immer unterstützt sortieren, auch wenn wird keine Sortierung verwendet. Wenn die [LinqDataSourceView.AutoSort](<xref:System.Web.UI.WebControls.QueryableDataSourceView.AutoSort%2A>) -Eigenschaftensatz auf `false`, Sie können manuell sortieren, die Daten in die <xref:System.Web.UI.WebControls.LinqDataSourceView.Selecting> Ereignis.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.SortExpression" />
        <altmember cref="P:System.Web.UI.WebControls.LinqDataSource.AutoSort" />
      </Docs>
    </Member>
    <Member MemberName="CanUpdate">
      <MemberSignature Language="C#" Value="public override bool CanUpdate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanUpdate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceView.CanUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanUpdate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanUpdate { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanUpdate : bool" Usage="System.Web.UI.WebControls.LinqDataSourceView.CanUpdate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" />-Objekt, das dem aktuellen <see cref="T:System.Web.UI.WebControls.LinqDataSource" />-Steuerelement zugeordnet ist, den Aktualisierungsvorgang unterstützt.</summary>
        <value>
          <see langword="true" />, wenn der Vorgang unterstützt wird, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.LinqDataSourceView.CanUpdate%2A> -Eigenschaft gibt den Wert, der die <xref:System.Web.UI.WebControls.LinqDataSourceView.EnableUpdate%2A> Eigenschaft. Ein Update-Vorgang kann jedoch dennoch fehlschlagen, wenn die Eigenschaften der zugeordneten Daten nicht festgelegt sind oder nicht ordnungsgemäß festgelegt wurden.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.LinqDataSource.EnableUpdate" />
      </Docs>
    </Member>
    <Member MemberName="ContextCreated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; ContextCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; ContextCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LinqDataSourceView.ContextCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ContextCreated As EventHandler(Of LinqDataSourceStatusEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::LinqDataSourceStatusEventArgs ^&gt; ^ ContextCreated;" />
      <MemberSignature Language="F#" Value="member this.ContextCreated : EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; " Usage="member this.ContextCreated : System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, nachdem eine Instanz des Kontexttypobjekts erstellt wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Behandeln Sie dieses Ereignis, wenn das Datenkontextobjekt überprüft werden sollen, oder sollten Sie Ausnahmen zu behandeln, die während der kontexterstellung ausgelöst wurden. Weitere Informationen finden Sie beim <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated?displayProperty=nameWithType>-Ereignis.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextCreating">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceContextEventArgs&gt; ContextCreating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.LinqDataSourceContextEventArgs&gt; ContextCreating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LinqDataSourceView.ContextCreating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ContextCreating As EventHandler(Of LinqDataSourceContextEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::LinqDataSourceContextEventArgs ^&gt; ^ ContextCreating;" />
      <MemberSignature Language="F#" Value="member this.ContextCreating : EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceContextEventArgs&gt; " Usage="member this.ContextCreating : System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceContextEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceContextEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, bevor eine Instanz des Kontexttypobjekts erstellt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Behandeln Sie dieses Ereignis, wenn Sie das Datenkontextobjekt manuell erstellen möchten. Weitere Informationen finden Sie beim <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating?displayProperty=nameWithType>-Ereignis.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextDisposing">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs&gt; ContextDisposing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs&gt; ContextDisposing" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LinqDataSourceView.ContextDisposing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ContextDisposing As EventHandler(Of LinqDataSourceDisposeEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::LinqDataSourceDisposeEventArgs ^&gt; ^ ContextDisposing;" />
      <MemberSignature Language="F#" Value="member this.ContextDisposing : EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs&gt; " Usage="member this.ContextDisposing : System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt vor dem Freigeben des Kontexttypobjekts auf.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Behandeln Sie dieses Ereignis, auf den Kontext vor der Freigabe oder Bereinigung ausführen, die spezifisch für das Objekt ist, bevor das Objekt zerstört wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextType">
      <MemberSignature Language="C#" Value="public override Type ContextType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ContextType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceView.ContextType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ContextType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ ContextType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContextType : Type" Usage="System.Web.UI.WebControls.LinqDataSourceView.ContextType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Typ der Datenkontextklasse ab.</summary>
        <value>Der Typ, der der in der <see cref="P:System.Web.UI.WebControls.LinqDataSourceView.ContextTypeName" />-Eigenschaft angegebenen Datenkontextklasse zugeordnet ist.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextTypeName">
      <MemberSignature Language="C#" Value="public override string ContextTypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContextTypeName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceView.ContextTypeName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ContextTypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ContextTypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContextTypeName : string with get, set" Usage="System.Web.UI.WebControls.LinqDataSourceView.ContextTypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Datenkontextklasse ab, die das Feld bzw. die Eigenschaft enthält, welche(s) in der <see cref="P:System.Web.UI.WebControls.LinqDataSourceView.TableName" />-Eigenschaft angegeben ist, oder legt diesen fest.</summary>
        <value>Der Name der Datenkontextklasse.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Beim Festlegen der <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> Eigenschaft der <xref:System.Web.UI.WebControls.LinqDataSource> steuern, dass der Wert auch für festgelegt ist die <xref:System.Web.UI.WebControls.LinqDataSourceView.ContextTypeName%2A> Eigenschaft der <xref:System.Web.UI.WebControls.LinqDataSourceView> Steuerelement. Weitere Informationen finden Sie unter den <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A?displayProperty=nameWithType> Objekt.  
  
 Diese Eigenschaft muss angegeben werden, es sei denn, die Abfragen von Daten während der angegeben werden die <xref:System.Web.UI.WebControls.LinqDataSourceView.Selecting> Ereignis oder sofern der Kontext manuell, während erstellt wird die <xref:System.Web.UI.WebControls.LinqDataSourceView.ContextCreating> Ereignis.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.LinqDataSource.ContextTypeName" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateContext">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Erstellt eine Instanz des Datenkontexttyps.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateContext">
      <MemberSignature Language="C#" Value="protected virtual object CreateContext (Type contextType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object CreateContext(class System.Type contextType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.CreateContext(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateContext (contextType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ CreateContext(Type ^ contextType);" />
      <MemberSignature Language="F#" Value="override this.CreateContext : Type -&gt; obj" Usage="linqDataSourceView.CreateContext contextType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contextType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="contextType">Der Typ des zu erstellenden Datenkontexts.</param>
        <summary>Erstellt eine Instanz des Datenkontexttyps.</summary>
        <returns>Eine Instanz des Datenkontexttyps.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateContext">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.ContextDataSourceContextData CreateContext (System.Web.UI.DataSourceOperation operation);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.ContextDataSourceContextData CreateContext(valuetype System.Web.UI.DataSourceOperation operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.CreateContext(System.Web.UI.DataSourceOperation)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateContext (operation As DataSourceOperation) As ContextDataSourceContextData" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::ContextDataSourceContextData ^ CreateContext(System::Web::UI::DataSourceOperation operation);" />
      <MemberSignature Language="F#" Value="override this.CreateContext : System.Web.UI.DataSourceOperation -&gt; System.Web.UI.WebControls.ContextDataSourceContextData" Usage="linqDataSourceView.CreateContext operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ContextDataSourceContextData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="System.Web.UI.DataSourceOperation" />
      </Parameters>
      <Docs>
        <param name="operation">Der zu verwendende Datenquellenvorgang.</param>
        <summary>Erstellt mit dem angegebenen Datenquellenvorgang eine Instanz des Datenkontexttyps.</summary>
        <returns>Eine Instanz des Datenkontexts.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public int Delete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Delete(class System.Collections.IDictionary keys, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function Delete (keys As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Delete(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ oldValues);" />
      <MemberSignature Language="F#" Value="override this.Delete : System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="linqDataSourceView.Delete (keys, oldValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys">To be added.</param>
        <param name="oldValues">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; Deleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; Deleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LinqDataSourceView.Deleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleted As EventHandler(Of LinqDataSourceStatusEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::LinqDataSourceStatusEventArgs ^&gt; ^ Deleted;" />
      <MemberSignature Language="F#" Value="member this.Deleted : EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; " Usage="member this.Deleted : System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn ein Löschvorgang abgeschlossen ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Behandeln Sie dieses Ereignis zum Abfangen von Ausnahmen, die während des Löschvorgangs ausgelöst wurden, oder untersuchen Sie die Werte der Output-Parameter aus, nachdem ein Löschvorgang abgeschlossen ist. Sie können die Output-Parameter von Abrufen der <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> Objekt, das dem Ereignis zugeordnet ist.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.LinqDataSource.Deleted" />
        <altmember cref="E:System.Web.UI.WebControls.LinqDataSourceView.Deleting" />
      </Docs>
    </Member>
    <Member MemberName="DeleteDataObject">
      <MemberSignature Language="C#" Value="protected virtual void DeleteDataObject (object dataContext, object table, object oldDataObject);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DeleteDataObject(object dataContext, object table, object oldDataObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.DeleteDataObject(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub DeleteDataObject (dataContext As Object, table As Object, oldDataObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void DeleteDataObject(System::Object ^ dataContext, System::Object ^ table, System::Object ^ oldDataObject);" />
      <MemberSignature Language="F#" Value="abstract member DeleteDataObject : obj * obj * obj -&gt; unit&#xA;override this.DeleteDataObject : obj * obj * obj -&gt; unit" Usage="linqDataSourceView.DeleteDataObject (dataContext, table, oldDataObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataContext" Type="System.Object" />
        <Parameter Name="table" Type="System.Object" />
        <Parameter Name="oldDataObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dataContext">Der Datenkontext des zu löschenden Objekts.</param>
        <param name="table">Die Tabelle, die das zu löschende Objekt enthält.</param>
        <param name="oldDataObject">Das zu löschende Objekt.</param>
        <summary>Löscht ein Datenobjekt aus einer Tabelle.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteObject">
      <MemberSignature Language="C#" Value="protected override int DeleteObject (object oldEntity);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 DeleteObject(object oldEntity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.DeleteObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function DeleteObject (oldEntity As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int DeleteObject(System::Object ^ oldEntity);" />
      <MemberSignature Language="F#" Value="override this.DeleteObject : obj -&gt; int" Usage="linqDataSourceView.DeleteObject oldEntity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldEntity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="oldEntity">Das zu löschende Datenobjekt.</param>
        <summary>Löscht ein Datenobjekt aus einer Tabelle.</summary>
        <returns>Die Anzahl der gelöschten Datenobjekte.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection DeleteParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceView.DeleteParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeleteParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ DeleteParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeleteParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.LinqDataSourceView.DeleteParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deleting">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&gt; Deleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&gt; Deleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LinqDataSourceView.Deleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleting As EventHandler(Of LinqDataSourceDeleteEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::LinqDataSourceDeleteEventArgs ^&gt; ^ Deleting;" />
      <MemberSignature Language="F#" Value="member this.Deleting : EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&gt; " Usage="member this.Deleting : System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt vor einem Löschvorgang ein.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Behandeln der <xref:System.Web.UI.WebControls.LinqDataSourceView.Deleting> Ereignis zur Überprüfung dieses Objekts gelöscht werden soll, den Wert vor dem Löschvorgang zu ändern oder um den Löschvorgang abzubrechen.  
  
 Weitere Informationen finden Sie beim <xref:System.Web.UI.WebControls.LinqDataSource.Deleting?displayProperty=nameWithType>-Ereignis.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.LinqDataSourceView.Deleted" />
      </Docs>
    </Member>
    <Member MemberName="DisposeContext">
      <MemberSignature Language="C#" Value="protected override void DisposeContext (object dataContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void DisposeContext(object dataContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.DisposeContext(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub DisposeContext (dataContext As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void DisposeContext(System::Object ^ dataContext);" />
      <MemberSignature Language="F#" Value="override this.DisposeContext : obj -&gt; unit" Usage="linqDataSourceView.DisposeContext dataContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataContext" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dataContext">Der zu löschende Datenkontext.</param>
        <summary>Löscht den Datenkontext.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableDelete">
      <MemberSignature Language="C#" Value="public bool EnableDelete { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableDelete" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceView.EnableDelete" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableDelete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableDelete { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableDelete : bool with get, set" Usage="System.Web.UI.WebControls.LinqDataSourceView.EnableDelete" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Datenquellenansicht das Löschen von Zeilen unterstützt, oder legt diesen fest.</summary>
        <value>
          <see langword="true" />, wenn die Datenquellenansicht das Löschen von Zeilen unterstützt, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Beim Festlegen der <xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A> Eigenschaft der <xref:System.Web.UI.WebControls.LinqDataSource> steuern, dass der Wert auch für festgelegt ist die <xref:System.Web.UI.WebControls.LinqDataSourceView.EnableDelete%2A> Eigenschaft der <xref:System.Web.UI.WebControls.LinqDataSourceView> Steuerelement.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableInsert">
      <MemberSignature Language="C#" Value="public bool EnableInsert { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableInsert" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceView.EnableInsert" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableInsert As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableInsert { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableInsert : bool with get, set" Usage="System.Web.UI.WebControls.LinqDataSourceView.EnableInsert" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Datenquellenansicht das Hinzufügen von neuen Zeilen unterstützt, oder legt diesen fest.</summary>
        <value>
          <see langword="true" />, wenn die Ansicht das Einfügen von Zeilen unterstützt, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Beim Festlegen der <xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A> Eigenschaft der <xref:System.Web.UI.WebControls.LinqDataSource> steuern, dass der Wert auch für festgelegt ist die <xref:System.Web.UI.WebControls.LinqDataSourceView.EnableInsert%2A> Eigenschaft der <xref:System.Web.UI.WebControls.LinqDataSourceView> Steuerelement.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableObjectTracking">
      <MemberSignature Language="C#" Value="public bool EnableObjectTracking { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableObjectTracking" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceView.EnableObjectTracking" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableObjectTracking As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableObjectTracking { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableObjectTracking : bool with get, set" Usage="System.Web.UI.WebControls.LinqDataSourceView.EnableObjectTracking" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob Änderungen am Datenkontextobjekt nachverfolgt werden, oder legt diesen fest.</summary>
        <value>
          <see langword="true" />, wenn Änderungen am Datenkontextobjekt nachverfolgt werden; andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen finden Sie in den Ausführungen zur <xref:System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking%2A?displayProperty=nameWithType>-Eigenschaft.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableUpdate">
      <MemberSignature Language="C#" Value="public bool EnableUpdate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableUpdate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceView.EnableUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableUpdate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableUpdate { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableUpdate : bool with get, set" Usage="System.Web.UI.WebControls.LinqDataSourceView.EnableUpdate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Datenquellenansicht das Aktualisieren von Zeilen unterstützt, oder legt diesen fest.</summary>
        <value>
          <see langword="true" />, wenn die Ansicht das Aktualisieren von Zeilen unterstützt, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Beim Festlegen der <xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A> Eigenschaft der <xref:System.Web.UI.WebControls.LinqDataSource> steuern, dass der Wert auch für festgelegt ist die <xref:System.Web.UI.WebControls.LinqDataSourceView.EnableUpdate%2A> Eigenschaft der <xref:System.Web.UI.WebControls.LinqDataSourceView> Steuerelement.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteDelete">
      <MemberSignature Language="C#" Value="protected override int ExecuteDelete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 ExecuteDelete(class System.Collections.IDictionary keys, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteDelete (keys As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int ExecuteDelete(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ oldValues);" />
      <MemberSignature Language="F#" Value="override this.ExecuteDelete : System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="linqDataSourceView.ExecuteDelete (keys, oldValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys">Die Zeilenschlüsselwerte für die zu löschenden Datensätze.</param>
        <param name="oldValues">Die Zeilenwerte, die ausgewertet werden, um Datenkonflikte zu erkennen.</param>
        <summary>Führt mithilfe der angegebenen Schlüssel und alten Werte einen Löschvorgang aus.</summary>
        <returns>Die Anzahl der Objekte oder Zeilen, die aus der zugrunde liegenden Datenquelle gelöscht wurden.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Informationen zum Löschen von Daten über eine <xref:System.Web.UI.WebControls.LinqDataSource> steuern, finden Sie unter der <xref:System.Web.UI.WebControls.LinqDataSource.Delete%28System.Collections.IDictionary%2CSystem.Collections.IDictionary%29> Methode der <xref:System.Web.UI.WebControls.LinqDataSource> Klasse.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteInsert">
      <MemberSignature Language="C#" Value="protected override int ExecuteInsert (System.Collections.IDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 ExecuteInsert(class System.Collections.IDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteInsert (values As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int ExecuteInsert(System::Collections::IDictionary ^ values);" />
      <MemberSignature Language="F#" Value="override this.ExecuteInsert : System.Collections.IDictionary -&gt; int" Usage="linqDataSourceView.ExecuteInsert values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="values">Die Zeilenwerte, die in die Datenquelle eingefügt werden sollen.</param>
        <summary>Führt mit den Werten in einer angegebenen Auflistung einen Einfügevorgang aus.</summary>
        <returns>Die Anzahl der Objekte oder Zeilen, die in die Datenquelle eingefügt wurden.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Informationen zum Einfügen von Daten über eine <xref:System.Web.UI.WebControls.LinqDataSource> steuern, finden Sie unter der <xref:System.Web.UI.WebControls.LinqDataSource.Insert%28System.Collections.IDictionary%29> Methode der <xref:System.Web.UI.WebControls.LinqDataSource> Klasse.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteSelect">
      <MemberSignature Language="C#" Value="protected internal override System.Collections.IEnumerable ExecuteSelect (System.Web.UI.DataSourceSelectArguments arguments);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.Collections.IEnumerable ExecuteSelect(class System.Web.UI.DataSourceSelectArguments arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function ExecuteSelect (arguments As DataSourceSelectArguments) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Collections::IEnumerable ^ ExecuteSelect(System::Web::UI::DataSourceSelectArguments ^ arguments);" />
      <MemberSignature Language="F#" Value="override this.ExecuteSelect : System.Web.UI.DataSourceSelectArguments -&gt; System.Collections.IEnumerable" Usage="linqDataSourceView.ExecuteSelect arguments" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Web.UI.DataSourceSelectArguments" />
      </Parameters>
      <Docs>
        <param name="arguments">Ein Objekt, mit dem Datenvorgänge angefordert werden, die über grundlegende Datenabrufvorgänge hinausgehen.</param>
        <summary>Führt einen Datenabrufvorgang durch.</summary>
        <returns>Eine Liste der Datenobjekte bzw. -zeilen.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.WebControls.LinqDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteUpdate">
      <MemberSignature Language="C#" Value="protected override int ExecuteUpdate (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 ExecuteUpdate(class System.Collections.IDictionary keys, class System.Collections.IDictionary values, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteUpdate (keys As IDictionary, values As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int ExecuteUpdate(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values, System::Collections::IDictionary ^ oldValues);" />
      <MemberSignature Language="F#" Value="override this.ExecuteUpdate : System.Collections.IDictionary * System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="linqDataSourceView.ExecuteUpdate (keys, values, oldValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys">Die Zeilenschlüsselwerte für die zu aktualisierenden Datensätze.</param>
        <param name="values">Die Zeilenwerte, die in der Datenquelle aktualisiert werden sollen.</param>
        <param name="oldValues">Die Zeilenwerte, die ausgewertet werden, um Datenkonflikte zu erkennen.</param>
        <summary>Führt einen Aktualisierungsvorgang aus.</summary>
        <returns>Die Anzahl der Zeilen, die in der Datenquelle aktualisiert wurden.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Informationen zum Aktualisieren von Daten über eine <xref:System.Web.UI.WebControls.LinqDataSource> steuern, finden Sie unter der <xref:System.Web.UI.WebControls.LinqDataSource.Update%28System.Collections.IDictionary%2CSystem.Collections.IDictionary%2CSystem.Collections.IDictionary%29> Methode der <xref:System.Web.UI.WebControls.LinqDataSource> Klasse.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.LinqDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="GetDataObjectType">
      <MemberSignature Language="C#" Value="protected virtual Type GetDataObjectType (Type tableType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Type GetDataObjectType(class System.Type tableType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.GetDataObjectType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetDataObjectType (tableType As Type) As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual Type ^ GetDataObjectType(Type ^ tableType);" />
      <MemberSignature Language="F#" Value="abstract member GetDataObjectType : Type -&gt; Type&#xA;override this.GetDataObjectType : Type -&gt; Type" Usage="linqDataSourceView.GetDataObjectType tableType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tableType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="tableType">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSource">
      <MemberSignature Language="C#" Value="protected override object GetSource (System.Web.UI.WebControls.QueryContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object GetSource(class System.Web.UI.WebControls.QueryContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.GetSource(System.Web.UI.WebControls.QueryContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetSource (context As QueryContext) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ GetSource(System::Web::UI::WebControls::QueryContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetSource : System.Web.UI.WebControls.QueryContext -&gt; obj" Usage="linqDataSourceView.GetSource context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.UI.WebControls.QueryContext" />
      </Parameters>
      <Docs>
        <param name="context">Der Datenkontext, auf den die Abfrage angewendet werden soll.</param>
        <summary>Gibt die Datenquelle zurück, auf die eine Abfrage angewendet werden soll.</summary>
        <returns>Die Datenquelle, auf die die Abfrage angewendet werden soll.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTableMemberInfo">
      <MemberSignature Language="C#" Value="protected virtual System.Reflection.MemberInfo GetTableMemberInfo (Type contextType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.MemberInfo GetTableMemberInfo(class System.Type contextType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.GetTableMemberInfo(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetTableMemberInfo (contextType As Type) As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Reflection::MemberInfo ^ GetTableMemberInfo(Type ^ contextType);" />
      <MemberSignature Language="F#" Value="abstract member GetTableMemberInfo : Type -&gt; System.Reflection.MemberInfo&#xA;override this.GetTableMemberInfo : Type -&gt; System.Reflection.MemberInfo" Usage="linqDataSourceView.GetTableMemberInfo contextType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contextType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="contextType">Ein Objekt, das die Datenkontextklasse darstellt.</param>
        <summary>Ruft Metadaten zu der Datenauflistung ab.</summary>
        <returns>Ein Objekt, das die Typmetadaten für die Datenauflistung enthält.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy">
      <MemberSignature Language="C#" Value="public string GroupBy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string GroupBy" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceView.GroupBy" />
      <MemberSignature Language="VB.NET" Value="Public Property GroupBy As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ GroupBy { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.GroupBy : string with get, set" Usage="System.Web.UI.WebControls.LinqDataSourceView.GroupBy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupByParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection GroupByParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection GroupByParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceView.GroupByParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GroupByParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ GroupByParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.GroupByParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.LinqDataSourceView.GroupByParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleValidationErrors">
      <MemberSignature Language="C#" Value="protected override void HandleValidationErrors (System.Collections.Generic.IDictionary&lt;string,Exception&gt; errors, System.Web.UI.DataSourceOperation operation);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void HandleValidationErrors(class System.Collections.Generic.IDictionary`2&lt;string, class System.Exception&gt; errors, valuetype System.Web.UI.DataSourceOperation operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.HandleValidationErrors(System.Collections.Generic.IDictionary{System.String,System.Exception},System.Web.UI.DataSourceOperation)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub HandleValidationErrors (errors As IDictionary(Of String, Exception), operation As DataSourceOperation)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void HandleValidationErrors(System::Collections::Generic::IDictionary&lt;System::String ^, Exception ^&gt; ^ errors, System::Web::UI::DataSourceOperation operation);" />
      <MemberSignature Language="F#" Value="override this.HandleValidationErrors : System.Collections.Generic.IDictionary&lt;string, Exception&gt; * System.Web.UI.DataSourceOperation -&gt; unit" Usage="linqDataSourceView.HandleValidationErrors (errors, operation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errors" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Exception&gt;" />
        <Parameter Name="operation" Type="System.Web.UI.DataSourceOperation" />
      </Parameters>
      <Docs>
        <param name="errors">Die vom System generierten, feldspezifischen Ausnahmen, die aufgetreten sind.</param>
        <param name="operation">Der Datenvorgang, durch den die Ausnahme verursacht wurde.</param>
        <summary>Behandelt alle Ausnahmen, die auftreten, wenn beim Erstellen eines Datenobjekts Fehler bei einem Datenvorgang auftreten.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public int Insert (System.Collections.IDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Insert(class System.Collections.IDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.Insert(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (values As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Insert(System::Collections::IDictionary ^ values);" />
      <MemberSignature Language="F#" Value="override this.Insert : System.Collections.IDictionary -&gt; int" Usage="linqDataSourceView.Insert values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="values">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertDataObject">
      <MemberSignature Language="C#" Value="protected virtual void InsertDataObject (object dataContext, object table, object newDataObject);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InsertDataObject(object dataContext, object table, object newDataObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.InsertDataObject(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InsertDataObject (dataContext As Object, table As Object, newDataObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InsertDataObject(System::Object ^ dataContext, System::Object ^ table, System::Object ^ newDataObject);" />
      <MemberSignature Language="F#" Value="abstract member InsertDataObject : obj * obj * obj -&gt; unit&#xA;override this.InsertDataObject : obj * obj * obj -&gt; unit" Usage="linqDataSourceView.InsertDataObject (dataContext, table, newDataObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataContext" Type="System.Object" />
        <Parameter Name="table" Type="System.Object" />
        <Parameter Name="newDataObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dataContext">Der Datenkontext des Objekts.</param>
        <param name="table">Die Tabelle, in der die Daten eingefügt werden.</param>
        <param name="newDataObject">Das einzufügende Objekt.</param>
        <summary>Fügt ein Datenobjekt in eine Tabelle ein.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Inserted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; Inserted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; Inserted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LinqDataSourceView.Inserted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserted As EventHandler(Of LinqDataSourceStatusEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::LinqDataSourceStatusEventArgs ^&gt; ^ Inserted;" />
      <MemberSignature Language="F#" Value="member this.Inserted : EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; " Usage="member this.Inserted : System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn ein Einfügevorgang abgeschlossen wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Behandeln Sie dieses Ereignis zum Abfangen von Ausnahmen, die während des Einfügevorgangs ausgelöst wurden, oder um die Werte zu überprüfen, nachdem ein Insert-Vorgang abgeschlossen wurde. Weitere Informationen finden Sie beim <xref:System.Web.UI.WebControls.LinqDataSource.Inserted?displayProperty=nameWithType>-Ereignis.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.LinqDataSourceView.Insert(System.Collections.IDictionary)" />
        <altmember cref="E:System.Web.UI.WebControls.LinqDataSourceView.Inserting" />
      </Docs>
    </Member>
    <Member MemberName="Inserting">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt; Inserting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt; Inserting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LinqDataSourceView.Inserting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserting As EventHandler(Of LinqDataSourceInsertEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::LinqDataSourceInsertEventArgs ^&gt; ^ Inserting;" />
      <MemberSignature Language="F#" Value="member this.Inserting : EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt; " Usage="member this.Inserting : System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt vor einem Einfügevorgang ein.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Behandeln der <xref:System.Web.UI.WebControls.LinqDataSourceView.Inserting> Ereignis, um das Objekt eingefügt werden soll, den Wert vor dem Einfügevorgang zu ändern oder zum Abbrechen des Insert-Vorgangs zu validieren. Weitere Informationen finden Sie beim <xref:System.Web.UI.WebControls.LinqDataSource.Inserting?displayProperty=nameWithType>-Ereignis.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.LinqDataSourceView.Insert(System.Collections.IDictionary)" />
        <altmember cref="E:System.Web.UI.WebControls.LinqDataSourceView.Inserted" />
      </Docs>
    </Member>
    <Member MemberName="InsertObject">
      <MemberSignature Language="C#" Value="protected override int InsertObject (object newEntity);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 InsertObject(object newEntity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.InsertObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function InsertObject (newEntity As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int InsertObject(System::Object ^ newEntity);" />
      <MemberSignature Language="F#" Value="override this.InsertObject : obj -&gt; int" Usage="linqDataSourceView.InsertObject newEntity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newEntity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="newEntity">Das einzufügende Datenobjekt.</param>
        <summary>Fügt ein Datenobjekt in ein <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" />-Objekt ein.</summary>
        <returns>Die Anzahl der Objekte, die in die Datenquellenansicht eingefügt wurden.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection InsertParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection InsertParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceView.InsertParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InsertParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ InsertParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InsertParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.LinqDataSourceView.InsertParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTrackingViewState">
      <MemberSignature Language="C#" Value="protected bool IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceView.IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsTrackingViewState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsTrackingViewState { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsTrackingViewState : bool" Usage="System.Web.UI.WebControls.LinqDataSourceView.IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected virtual void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="abstract member LoadViewState : obj -&gt; unit&#xA;override this.LoadViewState : obj -&gt; unit" Usage="linqDataSourceView.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnContextCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnContextCreated (System.Web.UI.WebControls.LinqDataSourceStatusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContextCreated(class System.Web.UI.WebControls.LinqDataSourceStatusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.OnContextCreated(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContextCreated (e As LinqDataSourceStatusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContextCreated(System::Web::UI::WebControls::LinqDataSourceStatusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnContextCreated : System.Web.UI.WebControls.LinqDataSourceStatusEventArgs -&gt; unit&#xA;override this.OnContextCreated : System.Web.UI.WebControls.LinqDataSourceStatusEventArgs -&gt; unit" Usage="linqDataSourceView.OnContextCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Ereignisdaten.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.LinqDataSourceView.ContextCreated" />-Ereignis aus.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Web.UI.WebControls.LinqDataSource.ContextCreated" />
      </Docs>
    </Member>
    <Member MemberName="OnContextCreating">
      <MemberSignature Language="C#" Value="protected virtual void OnContextCreating (System.Web.UI.WebControls.LinqDataSourceContextEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContextCreating(class System.Web.UI.WebControls.LinqDataSourceContextEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.OnContextCreating(System.Web.UI.WebControls.LinqDataSourceContextEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContextCreating (e As LinqDataSourceContextEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContextCreating(System::Web::UI::WebControls::LinqDataSourceContextEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnContextCreating : System.Web.UI.WebControls.LinqDataSourceContextEventArgs -&gt; unit&#xA;override this.OnContextCreating : System.Web.UI.WebControls.LinqDataSourceContextEventArgs -&gt; unit" Usage="linqDataSourceView.OnContextCreating e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.LinqDataSourceContextEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Ereignisdaten.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.LinqDataSourceView.ContextCreating" />-Ereignis aus.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Web.UI.WebControls.LinqDataSource.ContextCreating" />
      </Docs>
    </Member>
    <Member MemberName="OnContextDisposing">
      <MemberSignature Language="C#" Value="protected virtual void OnContextDisposing (System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContextDisposing(class System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.OnContextDisposing(System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContextDisposing (e As LinqDataSourceDisposeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContextDisposing(System::Web::UI::WebControls::LinqDataSourceDisposeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnContextDisposing : System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs -&gt; unit&#xA;override this.OnContextDisposing : System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs -&gt; unit" Usage="linqDataSourceView.OnContextDisposing e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Ereignisdaten.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.LinqDataSourceView.ContextDisposing" />-Ereignis aus.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Web.UI.WebControls.LinqDataSource.ContextDisposing" />
      </Docs>
    </Member>
    <Member MemberName="OnDeleted">
      <MemberSignature Language="C#" Value="protected virtual void OnDeleted (System.Web.UI.WebControls.LinqDataSourceStatusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDeleted(class System.Web.UI.WebControls.LinqDataSourceStatusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.OnDeleted(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDeleted (e As LinqDataSourceStatusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDeleted(System::Web::UI::WebControls::LinqDataSourceStatusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDeleted : System.Web.UI.WebControls.LinqDataSourceStatusEventArgs -&gt; unit&#xA;override this.OnDeleted : System.Web.UI.WebControls.LinqDataSourceStatusEventArgs -&gt; unit" Usage="linqDataSourceView.OnDeleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Ereignisdaten.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.LinqDataSourceView.Deleted" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [NIB: Nutzen von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 Die <xref:System.Web.UI.WebControls.LinqDataSourceView.OnDeleted%2A> Methode ermöglicht auch die abgeleiteten Klassen, die das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Beim Überschreiben der <see cref="M:System.Web.UI.WebControls.LinqDataSourceView.OnDeleted(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)" /> -Methode in einer abgeleiteten Klasse, stellen Sie sicher, dass Sie beim Aufrufen der <see cref="M:System.Web.UI.WebControls.LinqDataSourceView.OnDeleted(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)" /> Methode für die Basisklasse, damit Delegaten registrierte das Ereignis empfangen.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.LinqDataSource.Deleted" />
      </Docs>
    </Member>
    <Member MemberName="OnDeleting">
      <MemberSignature Language="C#" Value="protected virtual void OnDeleting (System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDeleting(class System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.OnDeleting(System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDeleting (e As LinqDataSourceDeleteEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDeleting(System::Web::UI::WebControls::LinqDataSourceDeleteEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDeleting : System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs -&gt; unit&#xA;override this.OnDeleting : System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs -&gt; unit" Usage="linqDataSourceView.OnDeleting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Ereignisdaten.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.LinqDataSourceView.Deleting" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [NIB: Nutzen von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 Die <xref:System.Web.UI.WebControls.LinqDataSourceView.OnDeleting%2A> Methode ermöglicht auch die abgeleiteten Klassen, die das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Beim Überschreiben der <see cref="M:System.Web.UI.WebControls.LinqDataSourceView.OnDeleting(System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs)" /> -Methode in einer abgeleiteten Klasse, stellen Sie sicher, dass Sie beim Aufrufen der <see cref="M:System.Web.UI.WebControls.LinqDataSourceView.OnDeleting(System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs)" /> Methode für die Basisklasse, damit Delegaten registrierte das Ereignis empfangen.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.LinqDataSource.Deleting" />
      </Docs>
    </Member>
    <Member MemberName="OnException">
      <MemberSignature Language="C#" Value="protected virtual void OnException (System.Web.DynamicData.DynamicValidatorEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnException(class System.Web.DynamicData.DynamicValidatorEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.OnException(System.Web.DynamicData.DynamicValidatorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnException (e As DynamicValidatorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnException(System::Web::DynamicData::DynamicValidatorEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnException : System.Web.DynamicData.DynamicValidatorEventArgs -&gt; unit&#xA;override this.OnException : System.Web.DynamicData.DynamicValidatorEventArgs -&gt; unit" Usage="linqDataSourceView.OnException e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.DynamicData.DynamicValidatorEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Ereignisdaten.</param>
        <summary>Löst das <see cref="E:System.Web.DynamicData.IDynamicDataSource.Exception" />-Ereignis aus, wenn in einem Datenvorgang ein Fehler ausgelöst wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das dynamic Data-Framework verwendet die <xref:System.Web.UI.WebControls.LinqDataSourceView.OnException%2A> -Ereignishandler zum Behandeln von Validierungsausnahmen beim Aktualisieren von Daten oder Einfügen von Daten.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInserted">
      <MemberSignature Language="C#" Value="protected virtual void OnInserted (System.Web.UI.WebControls.LinqDataSourceStatusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInserted(class System.Web.UI.WebControls.LinqDataSourceStatusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.OnInserted(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInserted (e As LinqDataSourceStatusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInserted(System::Web::UI::WebControls::LinqDataSourceStatusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnInserted : System.Web.UI.WebControls.LinqDataSourceStatusEventArgs -&gt; unit&#xA;override this.OnInserted : System.Web.UI.WebControls.LinqDataSourceStatusEventArgs -&gt; unit" Usage="linqDataSourceView.OnInserted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Ereignisdaten.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.LinqDataSourceView.Inserted" />-Ereignis aus, nachdem das <see cref="T:System.Web.UI.WebControls.LinqDataSource" />-Steuerelement einen Einfügevorgang abgeschlossen hat.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [NIB: Nutzen von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 Die <xref:System.Web.UI.WebControls.LinqDataSourceView.OnInserted%2A> Methode ermöglicht auch die abgeleiteten Klassen, die das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Beim Überschreiben der <see cref="M:System.Web.UI.WebControls.LinqDataSourceView.OnInserted(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)" /> -Methode in einer abgeleiteten Klasse, stellen Sie sicher, dass Sie beim Aufrufen der <see cref="M:System.Web.UI.WebControls.LinqDataSourceView.OnInserted(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)" /> Methode für die Basisklasse, damit Delegaten registrierte das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnInserting">
      <MemberSignature Language="C#" Value="protected virtual void OnInserting (System.Web.UI.WebControls.LinqDataSourceInsertEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInserting(class System.Web.UI.WebControls.LinqDataSourceInsertEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.OnInserting(System.Web.UI.WebControls.LinqDataSourceInsertEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInserting (e As LinqDataSourceInsertEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInserting(System::Web::UI::WebControls::LinqDataSourceInsertEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnInserting : System.Web.UI.WebControls.LinqDataSourceInsertEventArgs -&gt; unit&#xA;override this.OnInserting : System.Web.UI.WebControls.LinqDataSourceInsertEventArgs -&gt; unit" Usage="linqDataSourceView.OnInserting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Ereignisdaten.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.LinqDataSourceView.Inserting" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [NIB: Nutzen von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 Die <xref:System.Web.UI.WebControls.LinqDataSourceView.OnInserting%2A> Methode ermöglicht auch die abgeleiteten Klassen, die das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Beim Überschreiben der <see cref="M:System.Web.UI.WebControls.LinqDataSourceView.OnInserting(System.Web.UI.WebControls.LinqDataSourceInsertEventArgs)" /> -Methode in einer abgeleiteten Klasse, stellen Sie sicher, dass Sie beim Aufrufen der <see cref="M:System.Web.UI.WebControls.LinqDataSourceView.OnInserting(System.Web.UI.WebControls.LinqDataSourceInsertEventArgs)" /> Methode für die Basisklasse, damit Delegaten registrierte das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnSelected">
      <MemberSignature Language="C#" Value="protected virtual void OnSelected (System.Web.UI.WebControls.LinqDataSourceStatusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelected(class System.Web.UI.WebControls.LinqDataSourceStatusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.OnSelected(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelected (e As LinqDataSourceStatusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelected(System::Web::UI::WebControls::LinqDataSourceStatusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelected : System.Web.UI.WebControls.LinqDataSourceStatusEventArgs -&gt; unit&#xA;override this.OnSelected : System.Web.UI.WebControls.LinqDataSourceStatusEventArgs -&gt; unit" Usage="linqDataSourceView.OnSelected e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Ereignisdaten.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.LinqDataSourceView.Selected" />-Ereignis aus, nachdem das <see cref="T:System.Web.UI.WebControls.LinqDataSource" />-Steuerelement einen Datenabrufvorgang abgeschlossen hat.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [NIB: Nutzen von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 Die <xref:System.Web.UI.WebControls.LinqDataSourceView.OnSelected%2A> Methode ermöglicht auch die abgeleiteten Klassen, die das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Beim Überschreiben der <see cref="M:System.Web.UI.WebControls.LinqDataSourceView.OnSelected(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)" /> -Methode in einer abgeleiteten Klasse, stellen Sie sicher, dass Sie beim Aufrufen der <see cref="M:System.Web.UI.WebControls.LinqDataSourceView.OnSelected(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)" /> Methode für die Basisklasse, damit Delegaten registrierte das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnSelecting">
      <MemberSignature Language="C#" Value="protected virtual void OnSelecting (System.Web.UI.WebControls.LinqDataSourceSelectEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelecting(class System.Web.UI.WebControls.LinqDataSourceSelectEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.OnSelecting(System.Web.UI.WebControls.LinqDataSourceSelectEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelecting (e As LinqDataSourceSelectEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelecting(System::Web::UI::WebControls::LinqDataSourceSelectEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelecting : System.Web.UI.WebControls.LinqDataSourceSelectEventArgs -&gt; unit&#xA;override this.OnSelecting : System.Web.UI.WebControls.LinqDataSourceSelectEventArgs -&gt; unit" Usage="linqDataSourceView.OnSelecting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.LinqDataSourceSelectEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Ereignisdaten.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.LinqDataSourceView.Selecting" />-Ereignis aus, bevor das <see cref="T:System.Web.UI.WebControls.LinqDataSource" />-Steuerelement einen Datenabrufvorgang ausführt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [NIB: Nutzen von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 Die <xref:System.Web.UI.WebControls.LinqDataSourceView.OnSelecting%2A> Methode ermöglicht auch die abgeleiteten Klassen, die das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Beim Überschreiben der <see cref="M:System.Web.UI.WebControls.LinqDataSourceView.OnSelecting(System.Web.UI.WebControls.LinqDataSourceSelectEventArgs)" /> -Methode in einer abgeleiteten Klasse, stellen Sie sicher, dass Sie beim Aufrufen der <see cref="M:System.Web.UI.WebControls.LinqDataSourceView.OnSelecting(System.Web.UI.WebControls.LinqDataSourceSelectEventArgs)" /> Methode für die Basisklasse, damit Delegaten registrierte das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnUpdated">
      <MemberSignature Language="C#" Value="protected virtual void OnUpdated (System.Web.UI.WebControls.LinqDataSourceStatusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUpdated(class System.Web.UI.WebControls.LinqDataSourceStatusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.OnUpdated(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUpdated (e As LinqDataSourceStatusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUpdated(System::Web::UI::WebControls::LinqDataSourceStatusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUpdated : System.Web.UI.WebControls.LinqDataSourceStatusEventArgs -&gt; unit&#xA;override this.OnUpdated : System.Web.UI.WebControls.LinqDataSourceStatusEventArgs -&gt; unit" Usage="linqDataSourceView.OnUpdated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Ereignisdaten.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.LinqDataSourceView.Updated" />-Ereignis aus, nachdem das <see cref="T:System.Web.UI.WebControls.LinqDataSource" />-Steuerelement einen Aktualisierungsvorgang abgeschlossen hat.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [NIB: Nutzen von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 Die <xref:System.Web.UI.WebControls.LinqDataSourceView.OnUpdated%2A> Methode ermöglicht auch die abgeleiteten Klassen, die das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Beim Überschreiben der <see cref="M:System.Web.UI.WebControls.LinqDataSourceView.OnUpdated(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)" /> -Methode in einer abgeleiteten Klasse, stellen Sie sicher, dass Sie beim Aufrufen der <see cref="M:System.Web.UI.WebControls.LinqDataSourceView.OnUpdated(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)" /> Methode für die Basisklasse, damit Delegaten registrierte das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnUpdating">
      <MemberSignature Language="C#" Value="protected virtual void OnUpdating (System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUpdating(class System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.OnUpdating(System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUpdating (e As LinqDataSourceUpdateEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUpdating(System::Web::UI::WebControls::LinqDataSourceUpdateEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUpdating : System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs -&gt; unit&#xA;override this.OnUpdating : System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs -&gt; unit" Usage="linqDataSourceView.OnUpdating e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Ereignisdaten.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.LinqDataSourceView.Updating" />-Ereignis aus, bevor das <see cref="T:System.Web.UI.WebControls.LinqDataSource" />-Steuerelement einen Aktualisierungsvorgang ausführt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [NIB: Nutzen von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 Die <xref:System.Web.UI.WebControls.LinqDataSourceView.OnUpdating%2A> Methode ermöglicht auch die abgeleiteten Klassen, die das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Beim Überschreiben der <see cref="M:System.Web.UI.WebControls.LinqDataSourceView.OnUpdating(System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs)" /> in einer abgeleiteten Klasse, stellen Sie sicher, dass es sich bei Aufruf der <see cref="M:System.Web.UI.WebControls.LinqDataSourceView.OnUpdating(System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs)" /> Methode für die Basisklasse, damit Delegaten registrierte das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OrderBy">
      <MemberSignature Language="C#" Value="public string OrderBy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OrderBy" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceView.OrderBy" />
      <MemberSignature Language="VB.NET" Value="Public Property OrderBy As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OrderBy { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OrderBy : string with get, set" Usage="System.Web.UI.WebControls.LinqDataSourceView.OrderBy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderByParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection OrderByParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection OrderByParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceView.OrderByParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OrderByParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ OrderByParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OrderByParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.LinqDataSourceView.OrderByParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderGroupsBy">
      <MemberSignature Language="C#" Value="public string OrderGroupsBy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OrderGroupsBy" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceView.OrderGroupsBy" />
      <MemberSignature Language="VB.NET" Value="Public Property OrderGroupsBy As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OrderGroupsBy { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OrderGroupsBy : string with get, set" Usage="System.Web.UI.WebControls.LinqDataSourceView.OrderGroupsBy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderGroupsByParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection OrderGroupsByParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection OrderGroupsByParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceView.OrderGroupsByParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OrderGroupsByParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ OrderGroupsByParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OrderGroupsByParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.LinqDataSourceView.OrderGroupsByParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetDataObject">
      <MemberSignature Language="C#" Value="protected virtual void ResetDataObject (object table, object dataObject);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ResetDataObject(object table, object dataObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.ResetDataObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ResetDataObject (table As Object, dataObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ResetDataObject(System::Object ^ table, System::Object ^ dataObject);" />
      <MemberSignature Language="F#" Value="abstract member ResetDataObject : obj * obj -&gt; unit&#xA;override this.ResetDataObject : obj * obj -&gt; unit" Usage="linqDataSourceView.ResetDataObject (table, dataObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Object" />
        <Parameter Name="dataObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="table">Die Tabelle, die Daten enthält.</param>
        <param name="dataObject">Die Entität, die den ursprünglichen Zustand der Daten enthält.</param>
        <summary>Setzt das Objekt, das Daten enthält, in seinen ursprünglichen Zustand zurück.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected virtual object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="abstract member SaveViewState : unit -&gt; obj&#xA;override this.SaveViewState : unit -&gt; obj" Usage="linqDataSourceView.SaveViewState " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable Select (System.Web.UI.DataSourceSelectArguments arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerable Select(class System.Web.UI.DataSourceSelectArguments arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
      <MemberSignature Language="VB.NET" Value="Public Function Select (arguments As DataSourceSelectArguments) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerable ^ Select(System::Web::UI::DataSourceSelectArguments ^ arguments);" />
      <MemberSignature Language="F#" Value="member this.Select : System.Web.UI.DataSourceSelectArguments -&gt; System.Collections.IEnumerable" Usage="linqDataSourceView.Select arguments" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Web.UI.DataSourceSelectArguments" />
      </Parameters>
      <Docs>
        <param name="arguments">Ein Objekt, mit dem Datenvorgänge angefordert werden, die über grundlegende Datenabrufvorgänge hinausgehen.</param>
        <summary>Ruft Daten aus der Datenquelle ab.</summary>
        <returns>Eine Liste mit Datenzeilen.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.LinqDataSourceView.Select%2A> Methodenaufrufe der <xref:System.Web.UI.WebControls.LinqDataSourceView.ExecuteSelect%28System.Web.UI.DataSourceSelectArguments%29> Methode auf und übergibt die `selectArgs` Parameter.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; Selected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; Selected" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LinqDataSourceView.Selected" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selected As EventHandler(Of LinqDataSourceStatusEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::LinqDataSourceStatusEventArgs ^&gt; ^ Selected;" />
      <MemberSignature Language="F#" Value="member this.Selected : EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; " Usage="member this.Selected : System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn ein Datenabrufvorgang abgeschlossen wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Behandeln Sie dieses Ereignis zum Abfangen von Ausnahmen, die während des Auswahlvorgangs ausgelöst wurden, oder um die Werte zu überprüfen, nachdem der Vorgang abgeschlossen ist. Sie können die Werte vom Abrufen der <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> Objekt, das dem Ereignis zugeordnet ist.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.LinqDataSource.Selected" />
        <altmember cref="E:System.Web.UI.WebControls.LinqDataSourceView.Selecting" />
      </Docs>
    </Member>
    <Member MemberName="Selecting">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceSelectEventArgs&gt; Selecting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.LinqDataSourceSelectEventArgs&gt; Selecting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LinqDataSourceView.Selecting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selecting As EventHandler(Of LinqDataSourceSelectEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::LinqDataSourceSelectEventArgs ^&gt; ^ Selecting;" />
      <MemberSignature Language="F#" Value="member this.Selecting : EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceSelectEventArgs&gt; " Usage="member this.Selecting : System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceSelectEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceSelectEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt vor einem Datenabrufvorgang ein.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Behandeln der <xref:System.Web.UI.WebControls.LinqDataSourceView.Selecting> Ereignis, um Werte zu ändern, die während der Datenabrufvorgang verwendet werden. Weitere Informationen finden Sie beim <xref:System.Web.UI.WebControls.LinqDataSource.Selecting?displayProperty=nameWithType>-Ereignis.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.LinqDataSourceView.Selected" />
      </Docs>
    </Member>
    <Member MemberName="SelectNew">
      <MemberSignature Language="C#" Value="public string SelectNew { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectNew" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceView.SelectNew" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectNew As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectNew { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectNew : string with get, set" Usage="System.Web.UI.WebControls.LinqDataSourceView.SelectNew" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectNewParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection SelectNewParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection SelectNewParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceView.SelectNewParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectNewParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ SelectNewParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectNewParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.LinqDataSourceView.SelectNewParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreOriginalValues">
      <MemberSignature Language="C#" Value="protected override void StoreOriginalValues (System.Collections.IList results);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void StoreOriginalValues(class System.Collections.IList results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.StoreOriginalValues(System.Collections.IList)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub StoreOriginalValues (results As IList)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void StoreOriginalValues(System::Collections::IList ^ results);" />
      <MemberSignature Language="F#" Value="override this.StoreOriginalValues : System.Collections.IList -&gt; unit" Usage="linqDataSourceView.StoreOriginalValues results" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="System.Collections.IList" />
      </Parameters>
      <Docs>
        <param name="results">Das Ergebnis des <see langword="Select" />-Vorgangs.</param>
        <summary>Speichert die ursprünglichen Werte des <see langword="Select" />-Vorgangs im Ansichtszustand des Steuerelements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreOriginalValuesInViewState">
      <MemberSignature Language="C#" Value="public bool StoreOriginalValuesInViewState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StoreOriginalValuesInViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceView.StoreOriginalValuesInViewState" />
      <MemberSignature Language="VB.NET" Value="Public Property StoreOriginalValuesInViewState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool StoreOriginalValuesInViewState { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.StoreOriginalValuesInViewState : bool with get, set" Usage="System.Web.UI.WebControls.LinqDataSourceView.StoreOriginalValuesInViewState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der die ursprünglichen Werte des Auswahlvorgangs angibt, die im Ansichtszustand gespeichert werden, wenn Lösch- bzw. Aktualisierungsvorgänge aktualisiert werden, oder legt diesen fest.</summary>
        <value>
          <see langword="true" />, wenn die ursprünglichen Werte im Ansichtszustand gespeichert werden, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Beim Festlegen der <xref:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState%2A> Eigenschaft der <xref:System.Web.UI.WebControls.LinqDataSource> steuern, dass der Wert auch für festgelegt ist die <xref:System.Web.UI.WebControls.LinqDataSourceView.StoreOriginalValuesInViewState%2A> Eigenschaft der <xref:System.Web.UI.WebControls.LinqDataSourceView> Steuerelement.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.IsTrackingViewState">
      <MemberSignature Language="C#" Value="bool System.Web.UI.IStateManager.IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsTrackingViewState As Boolean Implements IStateManager.IsTrackingViewState" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Web.UI.IStateManager.IsTrackingViewState { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.LinqDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.LoadViewState">
      <MemberSignature Language="C#" Value="void IStateManager.LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.System#Web#UI#IStateManager#LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub LoadViewState (savedState As Object) Implements IStateManager.LoadViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.LoadViewState(System::Object ^ savedState) = System::Web::UI::IStateManager::LoadViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.SaveViewState">
      <MemberSignature Language="C#" Value="object IStateManager.SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Web.UI.IStateManager.SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.System#Web#UI#IStateManager#SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Function SaveViewState () As Object Implements IStateManager.SaveViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Web.UI.IStateManager.SaveViewState() = System::Web::UI::IStateManager::SaveViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.TrackViewState">
      <MemberSignature Language="C#" Value="void IStateManager.TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.System#Web#UI#IStateManager#TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Sub TrackViewState () Implements IStateManager.TrackViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.TrackViewState() = System::Web::UI::IStateManager::TrackViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TableName">
      <MemberSignature Language="C#" Value="public string TableName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TableName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceView.TableName" />
      <MemberSignature Language="VB.NET" Value="Public Property TableName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TableName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TableName : string with get, set" Usage="System.Web.UI.WebControls.LinqDataSourceView.TableName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen einer Eigenschaft oder eines Felds der Datenkontextklasse ab, die die Datenauflistung enthält, oder legt diesen fest.</summary>
        <value>Der Name der Eigenschaft, die die Datenauflistung darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Beim Festlegen der <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> Eigenschaft der <xref:System.Web.UI.WebControls.LinqDataSource> steuern, dass der Wert auch für festgelegt ist die <xref:System.Web.UI.WebControls.LinqDataSourceView.TableName%2A> Eigenschaft der <xref:System.Web.UI.WebControls.LinqDataSourceView> Steuerelement.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected virtual void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void TrackViewState();" />
      <MemberSignature Language="F#" Value="abstract member TrackViewState : unit -&gt; unit&#xA;override this.TrackViewState : unit -&gt; unit" Usage="linqDataSourceView.TrackViewState " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(class System.Collections.IDictionary keys, class System.Collections.IDictionary values, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function Update (keys As IDictionary, values As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values, System::Collections::IDictionary ^ oldValues);" />
      <MemberSignature Language="F#" Value="override this.Update : System.Collections.IDictionary * System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="linqDataSourceView.Update (keys, values, oldValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys">To be added.</param>
        <param name="values">To be added.</param>
        <param name="oldValues">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Updated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; Updated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; Updated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LinqDataSourceView.Updated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updated As EventHandler(Of LinqDataSourceStatusEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::LinqDataSourceStatusEventArgs ^&gt; ^ Updated;" />
      <MemberSignature Language="F#" Value="member this.Updated : EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; " Usage="member this.Updated : System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn ein Aktualisierungsvorgang abgeschlossen wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Behandeln der <xref:System.Web.UI.WebControls.LinqDataSourceView.Updated> Ereignis, um die Werte von Ausgabeparametern von Interesse, nachdem ein Vorgang abgeschlossen wurde oder zum Abfangen von Ausnahmen, die während des Aktualisierungsvorgangs ausgelöst wurden. Die Output-Parameter stehen über die <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> Objekt, das dem Ereignis zugeordnet ist.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.LinqDataSource.Updated" />
        <altmember cref="E:System.Web.UI.WebControls.LinqDataSourceView.Updating" />
      </Docs>
    </Member>
    <Member MemberName="UpdateDataObject">
      <MemberSignature Language="C#" Value="protected virtual void UpdateDataObject (object dataContext, object table, object oldDataObject, object newDataObject);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void UpdateDataObject(object dataContext, object table, object oldDataObject, object newDataObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.UpdateDataObject(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub UpdateDataObject (dataContext As Object, table As Object, oldDataObject As Object, newDataObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void UpdateDataObject(System::Object ^ dataContext, System::Object ^ table, System::Object ^ oldDataObject, System::Object ^ newDataObject);" />
      <MemberSignature Language="F#" Value="abstract member UpdateDataObject : obj * obj * obj * obj -&gt; unit&#xA;override this.UpdateDataObject : obj * obj * obj * obj -&gt; unit" Usage="linqDataSourceView.UpdateDataObject (dataContext, table, oldDataObject, newDataObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataContext" Type="System.Object" />
        <Parameter Name="table" Type="System.Object" />
        <Parameter Name="oldDataObject" Type="System.Object" />
        <Parameter Name="newDataObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dataContext">Die zu aktualisierende Datenkontextklasse.</param>
        <param name="table">Die Datenauflistung, die das zu aktualisierende Objekt enthält.</param>
        <param name="oldDataObject">Das zu aktualisierende Objekt.</param>
        <param name="newDataObject">Das aktualisierte Objekt.</param>
        <summary>Aktualisiert ein Datenobjekt.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateObject">
      <MemberSignature Language="C#" Value="protected override int UpdateObject (object oldEntity, object newEntity);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 UpdateObject(object oldEntity, object newEntity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.UpdateObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function UpdateObject (oldEntity As Object, newEntity As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int UpdateObject(System::Object ^ oldEntity, System::Object ^ newEntity);" />
      <MemberSignature Language="F#" Value="override this.UpdateObject : obj * obj -&gt; int" Usage="linqDataSourceView.UpdateObject (oldEntity, newEntity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldEntity" Type="System.Object" />
        <Parameter Name="newEntity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="oldEntity">Das zu aktualisierende Objekt.</param>
        <param name="newEntity">Das neue Objekt, das für die Aktualisierung verwendet werden soll.</param>
        <summary>Aktualisiert ein Datenobjekt.</summary>
        <returns>0 (null), wenn das Update erfolgreich war, oder -1, wenn das Update fehlschlug.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection UpdateParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceView.UpdateParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdateParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ UpdateParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UpdateParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.LinqDataSourceView.UpdateParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Updating">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs&gt; Updating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs&gt; Updating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LinqDataSourceView.Updating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updating As EventHandler(Of LinqDataSourceUpdateEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::LinqDataSourceUpdateEventArgs ^&gt; ^ Updating;" />
      <MemberSignature Language="F#" Value="member this.Updating : EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs&gt; " Usage="member this.Updating : System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt vor einem Aktualisierungsvorgang ein.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Behandeln der <xref:System.Web.UI.WebControls.LinqDataSourceView.Updating> Ereignis zur Überprüfung dieses Objekts aktualisiert werden, um einen Wert vor dem Updatevorgang zu ändern oder den Updatevorgang abgebrochen. Weitere Informationen finden Sie beim <xref:System.Web.UI.WebControls.LinqDataSource.Updating?displayProperty=nameWithType>-Ereignis.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.LinqDataSourceView.Updated" />
      </Docs>
    </Member>
    <Member MemberName="ValidateContextType">
      <MemberSignature Language="C#" Value="protected virtual void ValidateContextType (Type contextType, bool selecting);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ValidateContextType(class System.Type contextType, bool selecting) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.ValidateContextType(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ValidateContextType (contextType As Type, selecting As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ValidateContextType(Type ^ contextType, bool selecting);" />
      <MemberSignature Language="F#" Value="abstract member ValidateContextType : Type * bool -&gt; unit&#xA;override this.ValidateContextType : Type * bool -&gt; unit" Usage="linqDataSourceView.ValidateContextType (contextType, selecting)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contextType" Type="System.Type" />
        <Parameter Name="selecting" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="contextType">Der Typ der Datenkontextklasse, dessen Gültigkeit überprüft werden soll.</param>
        <param name="selecting">Gibt an, ob die Methode beim Beginnen eines Auswahlvorgangs aufgerufen wurde.</param>
        <summary>Überprüft, ob die Datenkontextklasse von <see cref="T:System.Data.Linq.DataContext" /> abgeleitet ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Klasse, die im angegebenen die <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> Eigenschaft muss abgeleitet werden, aus der <xref:System.Data.Linq.DataContext> Klasse in der Reihenfolge aktivieren automatischer INSERT-, Update- und Delete-Vorgänge.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Ein Einfüge-, Aktualisierungs- oder Löschvorgang wird ausgeführt, und die Datenkontextklasse ist nicht von <see cref="T:System.Data.Linq.DataContext" /> abgeleitet.</exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateDeleteSupported">
      <MemberSignature Language="C#" Value="protected virtual void ValidateDeleteSupported (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ValidateDeleteSupported(class System.Collections.IDictionary keys, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.ValidateDeleteSupported(System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ValidateDeleteSupported (keys As IDictionary, oldValues As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ValidateDeleteSupported(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ oldValues);" />
      <MemberSignature Language="F#" Value="abstract member ValidateDeleteSupported : System.Collections.IDictionary * System.Collections.IDictionary -&gt; unit&#xA;override this.ValidateDeleteSupported : System.Collections.IDictionary * System.Collections.IDictionary -&gt; unit" Usage="linqDataSourceView.ValidateDeleteSupported (keys, oldValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys">Ein Wörterbuch mit Schlüsselwerten für die zu löschenden Datensätze.</param>
        <param name="oldValues">Ein Wörterbuch, das die zu löschenden Zeilenwerte enthält.</param>
        <summary>Überprüft, ob die Bedingungen zum Durchführen eines Löschvorgangs vorliegen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kann nicht gelöscht werden Daten bei der <xref:System.Web.UI.WebControls.QueryableDataSourceView.GroupBy%2A> Eigenschaft oder das <xref:System.Web.UI.WebControls.QueryableDataSourceView.SelectNew%2A> Eigenschaft enthält einen Wert als `null`. Weitere Informationen finden Sie in den Ausführungen zur <xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A?displayProperty=nameWithType>-Eigenschaft.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die <see cref="P:System.Web.UI.WebControls.QueryableDataSourceView.GroupBy" />-Eigenschaft bzw. die <see cref="P:System.Web.UI.WebControls.QueryableDataSourceView.SelectNew" />-Eigenschaft enthält einen Wert.</exception>
        <exception cref="T:System.NotSupportedException">
          <see cref="P:System.Web.UI.WebControls.LinqDataSourceView.CanDelete" /> ist <see langword="false" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateEditSupported">
      <MemberSignature Language="C#" Value="protected virtual void ValidateEditSupported ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ValidateEditSupported() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.ValidateEditSupported" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ValidateEditSupported ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ValidateEditSupported();" />
      <MemberSignature Language="F#" Value="abstract member ValidateEditSupported : unit -&gt; unit&#xA;override this.ValidateEditSupported : unit -&gt; unit" Usage="linqDataSourceView.ValidateEditSupported " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Überprüft, ob die Bedingungen zum Durchführen eines Bearbeitungsvorgangs vorliegen.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Die Validierung ist fehlgeschlagen oder wurde abgebrochen.</exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateInsertSupported">
      <MemberSignature Language="C#" Value="protected virtual void ValidateInsertSupported (System.Collections.IDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ValidateInsertSupported(class System.Collections.IDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.ValidateInsertSupported(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ValidateInsertSupported (values As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ValidateInsertSupported(System::Collections::IDictionary ^ values);" />
      <MemberSignature Language="F#" Value="abstract member ValidateInsertSupported : System.Collections.IDictionary -&gt; unit&#xA;override this.ValidateInsertSupported : System.Collections.IDictionary -&gt; unit" Usage="linqDataSourceView.ValidateInsertSupported values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="values">Ein Wörterbuch, das die zu einzufügenden Zeilenwerte enthält.</param>
        <summary>Überprüft, ob die Bedingungen zum Durchführen eines Einfügevorgangs vorliegen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können keine Daten einfügen, bei der <xref:System.Web.UI.WebControls.QueryableDataSourceView.GroupBy%2A> Eigenschaft oder das <xref:System.Web.UI.WebControls.QueryableDataSourceView.SelectNew%2A> Eigenschaft enthält einen Wert als `null`. Weitere Informationen finden Sie in den Ausführungen zur <xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A?displayProperty=nameWithType>-Eigenschaft.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die <see cref="P:System.Web.UI.WebControls.QueryableDataSourceView.GroupBy" />-Eigenschaft oder die <see cref="P:System.Web.UI.WebControls.QueryableDataSourceView.SelectNew" />-Eigenschaft enthält einen Wert, oder der <paramref name="values" />-Parameter enthält keine Elemente.</exception>
        <exception cref="T:System.NotSupportedException">
          <see cref="P:System.Web.UI.WebControls.LinqDataSourceView.CanInsert" /> ist <see langword="false" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateOrderByParameter">
      <MemberSignature Language="C#" Value="protected virtual void ValidateOrderByParameter (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ValidateOrderByParameter(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.ValidateOrderByParameter(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ValidateOrderByParameter (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ValidateOrderByParameter(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member ValidateOrderByParameter : string * string -&gt; unit&#xA;override this.ValidateOrderByParameter : string * string -&gt; unit" Usage="linqDataSourceView.ValidateOrderByParameter (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateParameterName">
      <MemberSignature Language="C#" Value="protected virtual void ValidateParameterName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ValidateParameterName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.ValidateParameterName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ValidateParameterName (name As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ValidateParameterName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member ValidateParameterName : string -&gt; unit&#xA;override this.ValidateParameterName : string -&gt; unit" Usage="linqDataSourceView.ValidateParameterName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateTableType">
      <MemberSignature Language="C#" Value="protected virtual void ValidateTableType (Type tableType, bool selecting);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ValidateTableType(class System.Type tableType, bool selecting) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.ValidateTableType(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ValidateTableType (tableType As Type, selecting As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ValidateTableType(Type ^ tableType, bool selecting);" />
      <MemberSignature Language="F#" Value="abstract member ValidateTableType : Type * bool -&gt; unit&#xA;override this.ValidateTableType : Type * bool -&gt; unit" Usage="linqDataSourceView.ValidateTableType (tableType, selecting)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tableType" Type="System.Type" />
        <Parameter Name="selecting" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="tableType">Der zu überprüfende Tabellentyp.</param>
        <param name="selecting">Gibt an, ob die Methode beim Beginnen eines Auswahlvorgangs aufgerufen wurde.</param>
        <summary>Überprüft, ob der Typ der Klasse, die die Datentabelle darstellt, ein generischer Typ ist.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Der Tabellentyp ist kein generischer Typ.</exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateUpdateSupported">
      <MemberSignature Language="C#" Value="protected virtual void ValidateUpdateSupported (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ValidateUpdateSupported(class System.Collections.IDictionary keys, class System.Collections.IDictionary values, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.ValidateUpdateSupported(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ValidateUpdateSupported (keys As IDictionary, values As IDictionary, oldValues As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ValidateUpdateSupported(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values, System::Collections::IDictionary ^ oldValues);" />
      <MemberSignature Language="F#" Value="abstract member ValidateUpdateSupported : System.Collections.IDictionary * System.Collections.IDictionary * System.Collections.IDictionary -&gt; unit&#xA;override this.ValidateUpdateSupported : System.Collections.IDictionary * System.Collections.IDictionary * System.Collections.IDictionary -&gt; unit" Usage="linqDataSourceView.ValidateUpdateSupported (keys, values, oldValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys">Ein Wörterbuch mit Schlüsselwerten für die zu aktualisierenden Datensätze.</param>
        <param name="values">Ein Wörterbuch, das die neuen Zeilenwerte für den Aktualisierungsvorgang enthält.</param>
        <param name="oldValues">Ein Wörterbuch, das die alten Zeilenwerte für den Aktualisierungsvorgang enthält.</param>
        <summary>Überprüft, ob die Bedingungen zum Durchführen eines Aktualisierungsvorgangs vorliegen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kann nicht aktualisiert werden Daten bei der <xref:System.Web.UI.WebControls.QueryableDataSourceView.GroupBy%2A> Eigenschaft oder das <xref:System.Web.UI.WebControls.QueryableDataSourceView.SelectNew%2A> Eigenschaft enthält einen Wert als `null`. Weitere Informationen finden Sie in den Ausführungen zur <xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A?displayProperty=nameWithType>-Eigenschaft.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Der Aktualisierungsvorgang wird nicht unterstützt.</exception>
      </Docs>
    </Member>
    <Member MemberName="Where">
      <MemberSignature Language="C#" Value="public string Where { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Where" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceView.Where" />
      <MemberSignature Language="VB.NET" Value="Public Property Where As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Where { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Where : string with get, set" Usage="System.Web.UI.WebControls.LinqDataSourceView.Where" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WhereParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection WhereParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection WhereParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceView.WhereParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WhereParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ WhereParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WhereParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.LinqDataSourceView.WhereParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>