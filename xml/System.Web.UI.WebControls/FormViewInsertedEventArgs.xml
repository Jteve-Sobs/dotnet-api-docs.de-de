<Type Name="FormViewInsertedEventArgs" FullName="System.Web.UI.WebControls.FormViewInsertedEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="93a01b61626399a49dc1b1d9ad1b521165fcf9fc" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70402906" /></Metadata><TypeSignature Language="C#" Value="public class FormViewInsertedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FormViewInsertedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.FormViewInsertedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class FormViewInsertedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class FormViewInsertedEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type FormViewInsertedEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt Daten für das <see cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />-Ereignis bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Web.UI.WebControls.FormView> -Steuerelement <xref:System.Web.UI.WebControls.FormView.ItemInserted> löst das-Ereignis aus, <xref:System.Web.UI.WebControls.FormView> wenn auf eine einfügeschaltfläche (eine Schaltfläche, deren `CommandName` -Eigenschaft auf "Einfügen" festgelegt ist) im-Steuerelement geklickt wird Dies ermöglicht es Ihnen, eine Ereignis Behandlungsmethode bereitzustellen, die eine benutzerdefinierte Routine ausführt, z. b. das Überprüfen der Ergebnisse eines Einfügevorgangs, wenn dieses Ereignis auftritt.  
  
 Ein <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs> -Objekt wird an die Ereignis Behandlungsmethode übermittelt, mit der Sie die Anzahl der betroffenen Datensätze und ggf. aufgetretenen Ausnahmen ermitteln können. Verwenden Sie die <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A> -Eigenschaft, um die Anzahl der vom Einfügevorgang betroffenen Datensätze zu bestimmen. Verwenden Sie <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A> die-Eigenschaft, um zu bestimmen, ob Ausnahmen aufgetreten sind. Sie können auch angeben, ob die Ausnahme in der Ereignis Behandlungsmethode behandelt wurde, indem Sie <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A> die-Eigenschaft festlegen. Wenn Sie auf die Werte des eingefügten Datensatzes zugreifen müssen, <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A> verwenden Sie die-Eigenschaft.  
  
 Standardmäßig wird das <xref:System.Web.UI.WebControls.FormView> -Steuerelement nach einem Einfügevorgang in den von der <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> -Eigenschaft angegebenen Modus zurückgegeben. Wenn während des Einfügevorgangs eine Ausnahme auftritt, können Sie <xref:System.Web.UI.WebControls.FormView> das Steuerelement im Einfügemodus belassen `true`, indem Sie die <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A> -Eigenschaft auf festlegen.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Eine Liste der anfänglichen Eigenschaftenwerte für eine Instanz der <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs>-Klasse finden Sie im <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.%23ctor%2A>-Konstruktor.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie das <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs> -Objekt verwendet wird, das an die Ereignis Behandlungs <xref:System.Web.UI.WebControls.FormView.ItemInserted> Methode für das-Ereignis übermittelt wird, um zu bestimmen, ob während eines Einfügevorgangs eine Ausnahme  
  
> [!IMPORTANT]
>  Dieses Beispiel enthält ein Textfeld, das Benutzereingaben akzeptiert. Dies ist eine potenzielle Sicherheitsbedrohung. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[FormViewInsertedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertedEventArgs/CS/formviewinsertedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewInsertedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertedEventArgs/VB/formviewinsertedeventargsvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.FormView" />
    <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventHandler" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormViewInsertedEventArgs (int affectedRows, Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 affectedRows, class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormViewInsertedEventArgs.#ctor(System.Int32,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (affectedRows As Integer, e As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormViewInsertedEventArgs(int affectedRows, Exception ^ e);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.FormViewInsertedEventArgs : int * Exception -&gt; System.Web.UI.WebControls.FormViewInsertedEventArgs" Usage="new System.Web.UI.WebControls.FormViewInsertedEventArgs (affectedRows, e)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="affectedRows" Type="System.Int32" />
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="affectedRows">Die Anzahl der vom Einfügevorgang betroffenen Zeilen.</param>
        <param name="e">Eine <see cref="T:System.Exception" />, die die Ausnahme darstellt, die beim Ausführen eines Einfügevorgangs ausgelöst wurde. Wenn keine Ausnahme ausgelöst wurde, verwenden Sie <see langword="null" /> für diesen Parameter.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.FormViewInsertedEventArgs" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diesen Konstruktor, um eine neue Instanz der <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs> -Klasse zu initialisieren.  
  
 In der folgenden Tabelle werden die anfänglichen Eigenschaftenwerte für eine <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs>-Instanz aufgeführt.  
  
|Eigenschaft|Anfangswert|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A>|Der Wert des `affectedRows`-Parameters.|  
|<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A>|<xref:System.Exception?displayProperty=nameWithType> Das `e`  im-Parameter enthaltene-Objekt.|  
|<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A>|Initialisiert mit `false`.|  
|<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A>|Initialisiert mit `false`.|  
  
> [!NOTE]
>  Dieser Konstruktor wird hauptsächlich von Steuerelement Entwicklern verwendet, wenn Ereignisse erhoben werden.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode" />
      </Docs>
    </Member>
    <Member MemberName="AffectedRows">
      <MemberSignature Language="C#" Value="public int AffectedRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AffectedRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AffectedRows As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AffectedRows { int get(); };" />
      <MemberSignature Language="F#" Value="member this.AffectedRows : int" Usage="System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der vom Einfügevorgang betroffenen Zeilen ab.</summary>
        <value>Die Anzahl der vom Einfügevorgang betroffenen Zeilen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A> die-Eigenschaft, um die Anzahl der vom Einfügevorgang betroffenen Datensätze zu bestimmen. Diese Eigenschaft wird häufig verwendet, um zu überprüfen, ob die richtige Anzahl von Datensätzen in den folgenden Situationen eingefügt wurde:  
  
-   Vergewissern Sie sich, dass nur ein einzelner Datensatz eingefügt wurde. Manchmal kann eine nicht ordnungsgemäß geschriebene INSERT-Anweisung mehrere Datensätze einfügen.  
  
-   Überprüfen Sie, ob ein Datensatz eingefügt wurde, wenn während des Einfügevorgangs ein Fehler auftritt, der keine Ausnahme auslöst.  
  
-   Stellen Sie sicher, dass ein Datensatz eingefügt wurde, wenn ein Datenquellen Steuerelement, das die Konflikterkennung unterstützt ( <xref:System.Web.UI.WebControls.SqlDataSource> optimistische Parallelität) <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> , wie z. `ConflictOptions.CompareAllValues` b. das-Steuerelement und das- <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement, seine-Eigenschaft auf Bei dieser Einstellung wird ein Datensatz, der denselben Schlüsselwert wie ein Datensatz von einem anderen Benutzer gleichzeitig aufweist, möglicherweise nicht eingefügt.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie die <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A> -Eigenschaft verwendet wird, um zu überprüfen, ob ein Datensatz während des Einfügevorgangs eingefügt wurde.  
  
 [!code-aspx-csharp[FormViewInsertedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertedEventArgs/CS/formviewinsertedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewInsertedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertedEventArgs/VB/formviewinsertedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values" />
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Ausnahme (sofern vorhanden) ab, die während des Einfügevorgangs ausgelöst wurde.</summary>
        <value>Eine <see cref="T:System.Exception" />, die die Ausnahme darstellt, die während des Einfügevorgangs ausgelöst wurde.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A> die-Eigenschaft, um die Ausnahme (sofern vorhanden) zu bestimmen, die während des Einfügevorgangs ausgelöst wurde. Wenn keine Ausnahmen ausgelöst wurden, gibt diese Eigenschaft `null` zurück.  
  
> [!NOTE]
>  Wenn eine Ausnahme ausgelöst wurde und Sie die Ausnahme im-Ereignishandler behandeln möchten, achten Sie darauf, dass die <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A> -Eigenschaft `true`auf festgelegt wird <xref:System.Web.UI.WebControls.FormView> . andernfalls löst das Steuerelement die Ausnahme erneut aus.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A> -Eigenschaft verwendet wird, um zu bestimmen, ob eine Ausnahme während eines Einfügevorgangs ausgelöst wurde.  
  
 [!code-aspx-csharp[FormViewInsertedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertedEventArgs/CS/formviewinsertedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewInsertedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertedEventArgs/VB/formviewinsertedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values" />
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled" />
      <MemberSignature Language="VB.NET" Value="Public Property ExceptionHandled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExceptionHandled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExceptionHandled : bool with get, set" Usage="System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob eine Ausnahme, die während des Einfügevorgangs ausgelöst wurde, im Ereignishandler behandelt wurde, oder legt einen entsprechenden Wert fest.</summary>
        <value><see langword="true" />, wenn die Ausnahme im Ereignishandler behandelt wurde, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn während des Einfügevorgangs eine Ausnahme ausgelöst wird, <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A> verwenden Sie die-Eigenschaft, um anzugeben, ob die Ausnahme im Ereignishandler behandelt wurde. Wenn diese Eigenschaft auf `true`festgelegt ist, wird die Ausnahme als behandelt betrachtet und nicht erneut ausgelöst. Wenn diese Eigenschaft auf `false`festgelegt ist, löst das <xref:System.Web.UI.WebControls.FormView> Steuerelement die Ausnahme erneut aus. Verwenden Sie die <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A> -Eigenschaft, um zu bestimmen, welche Ausnahme ausgelöst wurde.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A> -Eigenschaft verwendet wird, um anzugeben, dass die Ausnahme im Ereignishandler behandelt wurde.  
  
 [!code-aspx-csharp[FormViewInsertedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertedEventArgs/CS/formviewinsertedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewInsertedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertedEventArgs/VB/formviewinsertedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values" />
      </Docs>
    </Member>
    <Member MemberName="KeepInInsertMode">
      <MemberSignature Language="C#" Value="public bool KeepInInsertMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepInInsertMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode" />
      <MemberSignature Language="VB.NET" Value="Public Property KeepInInsertMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeepInInsertMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.KeepInInsertMode : bool with get, set" Usage="System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der anzeigt, ob das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement nach einem Einfügevorgang im Einfügemodus belassen werden soll, oder legt diesen Wert fest.</summary>
        <value><see langword="true" />, um nach einem Einfügevorgang im Einfügemodus zu bleiben, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Standardmäßig wird das <xref:System.Web.UI.WebControls.FormView> Steuerelement in den von der <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> -Eigenschaft angegebenen Modus zurückgegeben. Geben Sie <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A> mit der-Eigenschaft an <xref:System.Web.UI.WebControls.FormView> , ob das Steuerelement nach einem Einfügevorgang im Einfügemodus bleiben soll Um das <xref:System.Web.UI.WebControls.FormView> Steuerelement im Einfügemodus zu belassen, `true`legen Sie diese Eigenschaft auf fest.  
  
> [!NOTE]
>  Diese Eigenschaft sollte nur verwendet werden, wenn eine Situation auftritt (z. b. eine Ausnahme, die ausgelöst wird), die erfordert, dass sich das Steuerelement anders verhält als in der Regel. Wenn das <xref:System.Web.UI.WebControls.FormView> Steuerelement standardmäßig im Einfügemodus bleiben muss, <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> legen Sie die-Eigenschaft stattdessen fest.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A> -Eigenschaft verwendet wird <xref:System.Web.UI.WebControls.FormView> , um das Steuerelement im Einfügemodus beizubehalten, wenn während eines INSERT-Vorgangs eine Ausnahme auftritt.  
  
 [!code-aspx-csharp[FormViewInsertedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertedEventArgs/CS/formviewinsertedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewInsertedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertedEventArgs/VB/formviewinsertedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DefaultMode" />
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary Values" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Values As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::IOrderedDictionary ^ Values { System::Collections::Specialized::IOrderedDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Values : System.Collections.Specialized.IOrderedDictionary" Usage="System.Web.UI.WebControls.FormViewInsertedEventArgs.Values" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Wörterbuch ab, das die Name-Wert-Paare der Felder für den eingefügten Datensatz enthält.</summary>
        <value>Ein <see cref="T:System.Collections.Specialized.IOrderedDictionary" />-Objekt, das ein Wörterbuch der Name-Wert-Paare der Schlüsselfelder für den eingefügten Datensatz enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A> die-Eigenschaft, um auf die Werte der Felder für den eingefügten Datensatz zuzugreifen. Beispielsweise können Sie diese Werte verwenden, um ein Protokoll der eingefügten Datensätze zu speichern.  
  
 Die <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A> -Eigenschaft gibt <xref:System.Collections.Specialized.OrderedDictionary> ein Objekt zurück, <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=nameWithType> das die-Schnittstelle implementiert. Das <xref:System.Collections.Specialized.OrderedDictionary> -Objekt <xref:System.Collections.DictionaryEntry?displayProperty=nameWithType> enthält-Objekte, die die Felder des eingefügten Datensatzes darstellen. Um auf die Feldnamen zuzugreifen, verwenden <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> Sie die- <xref:System.Collections.Specialized.OrderedDictionary> Eigenschaft des-Objekts. Auf ähnliche Weise können Sie auf die Feldwerte zugreifen, <xref:System.Collections.Specialized.OrderedDictionary.Values%2A> indem Sie die-Eigenschaft verwenden.  
  
> [!NOTE]
>  Als Verknüpfung können Sie auch den Indexer des <xref:System.Collections.Specialized.OrderedDictionary> -Objekts verwenden, um direkt auf die Feldwerte zuzugreifen. Der Vorteil bei der Verwendung des Indexers besteht darin, dass Feldwerte direkt zurückgegeben werden. Datenquellen Steuerelemente, die auf der Feld Reihenfolge <xref:System.Web.UI.WebControls.AccessDataSource>basieren (z. b.), können nur nach Index auf Feldwerte zugreifen.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die Elemente in der <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A> Auflistung durchlaufen werden.  
  
 [!code-aspx-csharp[FormViewInsertedEventArgsValues#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertedEventArgsValues/CS/formviewinsertedeventargsvaluescs.aspx#1)]
 [!code-aspx-vb[FormViewInsertedEventArgsValues#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertedEventArgsValues/VB/formviewinsertedeventargsvaluesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventHandler" />
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="T:System.Collections.Specialized.OrderedDictionary" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Keys" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Values" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
      </Docs>
    </Member>
  </Members>
</Type>
