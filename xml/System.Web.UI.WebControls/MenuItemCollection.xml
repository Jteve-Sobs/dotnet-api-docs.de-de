<Type Name="MenuItemCollection" FullName="System.Web.UI.WebControls.MenuItemCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e10a49e11209e7bb702b17a0f8c6e113b408da27" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78762914" /></Metadata><TypeSignature Language="C#" Value="public sealed class MenuItemCollection : System.Collections.ICollection, System.Web.UI.IStateManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MenuItemCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Web.UI.IStateManager" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.MenuItemCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MenuItemCollection&#xA;Implements ICollection, IStateManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class MenuItemCollection sealed : System::Collections::ICollection, System::Web::UI::IStateManager" />
  <TypeSignature Language="F#" Value="type MenuItemCollection = class&#xA;    interface ICollection&#xA;    interface IEnumerable&#xA;    interface IStateManager" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IStateManager</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Stellt eine Auflistung von Menüelementen in einem <see cref="T:System.Web.UI.WebControls.Menu" />-Steuerelement dar. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.MenuItemCollection>-Klasse wird verwendet, um eine Auflistung von <xref:System.Web.UI.WebControls.MenuItem> Objekten im <xref:System.Web.UI.WebControls.Menu>-Steuerelement zu speichern und zu verwalten. Das <xref:System.Web.UI.WebControls.Menu>-Steuerelement verwendet die <xref:System.Web.UI.WebControls.MenuItemCollection>-Klasse, um die Stamm Menü Elemente in der <xref:System.Web.UI.WebControls.Menu.Items%2A>-Eigenschaft zu speichern. Diese Auflistung wird auch für die <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A>-Eigenschaft eines <xref:System.Web.UI.WebControls.MenuItem> Objekts verwendet, um die unter Menü Elemente eines Menü Elements (sofern vorhanden) zu speichern.  
  
 Die <xref:System.Web.UI.WebControls.MenuItemCollection>-Klasse unterstützt mehrere Möglichkeiten für den Zugriff auf die Elemente in der Auflistung:  
  
-   Verwenden Sie den <xref:System.Web.UI.WebControls.MenuItemCollection.Item%2A> Indexer, um ein <xref:System.Web.UI.WebControls.MenuItem> Objekt direkt an einem bestimmten Null basierten Index abzurufen.  
  
-   Verwenden Sie die <xref:System.Web.UI.WebControls.MenuItemCollection.GetEnumerator%2A>-Methode, um einen Enumerator zu erstellen, der zum Durchlaufen der Auflistung verwendet werden kann.  
  
-   Verwenden Sie die <xref:System.Web.UI.WebControls.MenuItemCollection.CopyTo%2A>-Methode, um den Inhalt der Auflistung in ein Array zu kopieren.  
  
 Sie können ein <xref:System.Web.UI.WebControls.MenuItemCollection> Objekt Programm gesteuert verwalten, indem Sie <xref:System.Web.UI.WebControls.MenuItem>-Objekte hinzufügen und entfernen. Um der Auflistung Menü Elemente hinzuzufügen, verwenden Sie die-<xref:System.Web.UI.WebControls.MenuItemCollection.Add%2A> oder die <xref:System.Web.UI.WebControls.MenuItemCollection.AddAt%2A>-Methode. Um Knoten aus der Auflistung zu entfernen, verwenden Sie die <xref:System.Web.UI.WebControls.MenuItemCollection.Remove%2A>, die <xref:System.Web.UI.WebControls.MenuItemCollection.RemoveAt%2A>oder die <xref:System.Web.UI.WebControls.MenuItemCollection.Clear%2A>-Methode.  
  
> [!NOTE]
>  Wenn das <xref:System.Web.UI.WebControls.Menu>-Steuerelement an eine Datenquelle gebunden ist, werden die <xref:System.Web.UI.WebControls.Menu.Items%2A>-und <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A>-Auflistungen jedes Mal automatisch aufgefüllt, wenn eine Bindung erfolgt. Alle Änderungen an den Sammlungen zwischen Bindungen gehen verloren. Um diese Änderungen beizubehalten, aktualisieren Sie entweder die Datenquelle, oder erstellen Sie die Sammlung bei jedem binden manuell neu.  
  
 Die <xref:System.Web.UI.WebControls.MenuItemCollection>-Klasse enthält Eigenschaften und Methoden, mit denen Sie Informationen über die Sammlung selbst abrufen können. Verwenden Sie die <xref:System.Web.UI.WebControls.MenuItemCollection.Count%2A>-Eigenschaft, um herauszufinden, wie viele Elemente in der Auflistung sind. Wenn Sie bestimmen möchten, ob die Auflistung ein bestimmtes <xref:System.Web.UI.WebControls.MenuItem> Objekt enthält, verwenden Sie die <xref:System.Web.UI.WebControls.MenuItemCollection.Contains%2A>-Methode. Um den Index eines <xref:System.Web.UI.WebControls.MenuItem> Objekts in der Auflistung zu erhalten, verwenden Sie die <xref:System.Web.UI.WebControls.MenuItemCollection.IndexOf%2A>-Methode.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Menu.Items%2A> und <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> Auflistungen mithilfe von deklarativer Syntax aufgefüllt werden.  
  
 [!code-aspx-csharp[MenuDeclarative#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDeclarative/CS/menudeclarativecs.aspx#1)]
 [!code-aspx-vb[MenuDeclarative#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDeclarative/VB/menudeclarativevb.aspx#1)]  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie ein <xref:System.Web.UI.WebControls.MenuItem>-Objekt Programm gesteuert zur <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> Auflistung eines Stamm Menü Elements hinzugefügt wird.  
  
 [!code-aspx-csharp[MenuItemCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemCollectionAdd/CS/menuitemcollectionaddcs.aspx#1)]
 [!code-aspx-vb[MenuItemCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemCollectionAdd/VB/menuitemcollectionaddvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.Menu" />
    <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
    <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
    <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
    <altmember cref="P:System.Web.UI.WebControls.MenuItemCollection.Count" />
    <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.Add(System.Web.UI.WebControls.MenuItem)" />
    <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.AddAt(System.Int32,System.Web.UI.WebControls.MenuItem)" />
    <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.Clear" />
    <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.Contains(System.Web.UI.WebControls.MenuItem)" />
    <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.CopyTo(System.Array,System.Int32)" />
    <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.CopyTo(System.Web.UI.WebControls.MenuItem[],System.Int32)" />
    <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.GetEnumerator" />
    <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.IndexOf(System.Web.UI.WebControls.MenuItem)" />
    <altmember cref="P:System.Web.UI.WebControls.MenuItemCollection.Item(System.Int32)" />
    <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.RemoveAt(System.Int32)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der Klasse <see cref="T:System.Web.UI.WebControls.MenuItemCollection" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuItemCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItemCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuItemCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.MenuItemCollection" />-Klasse unter Verwendung der Standardwerte.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diesen Konstruktor, um eine neue Instanz der <xref:System.Web.UI.WebControls.MenuItemCollection>-Klasse mit den Standardwerten zu initialisieren. Dieser Konstruktor wird häufig verwendet, wenn eine Auflistung von root-Menü Elementen erstellt wird, in denen kein übergeordnetes Menü (oder Besitzer) erforderlich ist.  
  
> [!NOTE]
>  Beim Erstellen einer Auflistung von untergeordneten Menü Elementen sollten Sie den überladenen Konstruktor verwenden, der anstelle dieses Konstruktors den `owner`-Parameter annimmt, um das übergeordnete Menü Element anzugeben.  
  
 Dieser Konstruktor wird hauptsächlich von Steuerelement Entwicklern verwendet, wenn das <xref:System.Web.UI.WebControls.Menu> Steuerelement erweitert wird, um die <xref:System.Web.UI.WebControls.Menu.Items%2A>-Eigenschaft zu initialisieren.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuItemCollection (System.Web.UI.WebControls.MenuItem owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.MenuItem owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItemCollection.#ctor(System.Web.UI.WebControls.MenuItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As MenuItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuItemCollection(System::Web::UI::WebControls::MenuItem ^ owner);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.MenuItemCollection : System.Web.UI.WebControls.MenuItem -&gt; System.Web.UI.WebControls.MenuItemCollection" Usage="new System.Web.UI.WebControls.MenuItemCollection owner" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.WebControls.MenuItem" />
      </Parameters>
      <Docs>
        <param name="owner">Ein <see cref="T:System.Web.UI.WebControls.MenuItem" />, das das übergeordnete Menüelement der aktuellen <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> darstellt.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.MenuItemCollection" />-Klasse unter Verwendung des angegebenen übergeordneten Menüelements (oder Besitzers).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diesen Konstruktor, um eine neue Instanz der <xref:System.Web.UI.WebControls.MenuItemCollection>-Klasse mit dem angegebenen übergeordneten Menü Element (oder Besitzer) zu initialisieren. Dieser Konstruktor wird häufig verwendet, wenn eine Auflistung von untergeordneten Menü Elementen erstellt wird, in denen Sie das übergeordnete Menü Element angeben müssen.  
  
> [!NOTE]
>  Wenn Sie eine Auflistung von Stamm Menü Elementen erstellen, empfiehlt es sich, den Parameter losen Konstruktor zu verwenden, da Stamm Menü Elemente kein übergeordnetes Menü Element aufweisen.  
  
 Dieser Konstruktor wird hauptsächlich von Steuerelement Entwicklern verwendet, wenn die <xref:System.Web.UI.WebControls.MenuItem>-Klasse erweitert wird, um die <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A>-Eigenschaft zu initialisieren.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Web.UI.WebControls.MenuItem child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Web.UI.WebControls.MenuItem child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItemCollection.Add(System.Web.UI.WebControls.MenuItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (child As MenuItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Web::UI::WebControls::MenuItem ^ child);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Web.UI.WebControls.MenuItem -&gt; unit" Usage="menuItemCollection.Add child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Web.UI.WebControls.MenuItem" />
      </Parameters>
      <Docs>
        <param name="child">Das <see cref="T:System.Web.UI.WebControls.MenuItem" />, das an das Ende der aktuellen <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> angefügt werden soll.</param>
        <summary>Fügt das angegebene <see cref="T:System.Web.UI.WebControls.MenuItem" />-Objekt an das Ende des aktuellen <see cref="T:System.Web.UI.WebControls.MenuItemCollection" />-Objekts an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.Web.UI.WebControls.MenuItemCollection.Add%2A>-Methode, um das angegebene <xref:System.Web.UI.WebControls.MenuItem> Objekt an das Ende der Auflistung anzufügen.  
  
> [!NOTE]
>  Sie können der Auflistung NULL-Werte und doppelte <xref:System.Web.UI.WebControls.MenuItem> Objekte hinzufügen.  
  
 Als Alternative können Sie ein <xref:System.Web.UI.WebControls.MenuItem> Objekt in der Auflistung an einem bestimmten Index einfügen, indem Sie die <xref:System.Web.UI.WebControls.MenuItemCollection.AddAt%2A>-Methode verwenden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.MenuItemCollection.Add%2A>-Methode verwendet wird, um einem <xref:System.Web.UI.WebControls.MenuItemCollection>-Objekt Programm gesteuert ein <xref:System.Web.UI.WebControls.MenuItem> Objekt hinzuzufügen.  
  
 [!code-aspx-csharp[MenuItemCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemCollectionAdd/CS/menuitemcollectionaddcs.aspx#1)]
 [!code-aspx-vb[MenuItemCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemCollectionAdd/VB/menuitemcollectionaddvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="child" /> ist <see langword="null" /></exception>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.AddAt(System.Int32,System.Web.UI.WebControls.MenuItem)" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.Clear" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.Remove(System.Web.UI.WebControls.MenuItem)" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="AddAt">
      <MemberSignature Language="C#" Value="public void AddAt (int index, System.Web.UI.WebControls.MenuItem child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAt(int32 index, class System.Web.UI.WebControls.MenuItem child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItemCollection.AddAt(System.Int32,System.Web.UI.WebControls.MenuItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAt (index As Integer, child As MenuItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAt(int index, System::Web::UI::WebControls::MenuItem ^ child);" />
      <MemberSignature Language="F#" Value="member this.AddAt : int * System.Web.UI.WebControls.MenuItem -&gt; unit" Usage="menuItemCollection.AddAt (index, child)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="child" Type="System.Web.UI.WebControls.MenuItem" />
      </Parameters>
      <Docs>
        <param name="index">Der Speicherort des nullbasierten Index, an dem <see cref="T:System.Web.UI.WebControls.MenuItem" /> eingefügt werden soll.</param>
        <param name="child">Die <see cref="T:System.Web.UI.WebControls.MenuItem" />, die eingefügt werden soll.</param>
        <summary>Fügt das angegebene <see cref="T:System.Web.UI.WebControls.MenuItem" />-Objekt im aktuellen <see cref="T:System.Web.UI.WebControls.MenuItemCollection" />-Objekt an der angegebenen Indexposition ein.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.Web.UI.WebControls.MenuItemCollection.AddAt%2A>-Methode, um das angegebene <xref:System.Web.UI.WebControls.MenuItem> Objekt in der Auflistung am angegebenen Index einzufügen.  
  
> [!NOTE]
>  Sie können der Auflistung NULL-Werte und doppelte <xref:System.Web.UI.WebControls.MenuItem> Objekte hinzufügen.  
  
 Als Alternative können Sie einfach ein <xref:System.Web.UI.WebControls.MenuItem> Objekt an das Ende der Auflistung anfügen, indem Sie die <xref:System.Web.UI.WebControls.MenuItemCollection.Add%2A>-Methode verwenden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.MenuItemCollection.AddAt%2A>-Methode verwendet wird, um ein <xref:System.Web.UI.WebControls.MenuItem> Objekt Programm gesteuert in einem <xref:System.Web.UI.WebControls.MenuItemCollection>-Objekt an einer angegebenen Indexposition einzufügen.  
  
 [!code-aspx-csharp[MenuItemCollectionAddAt#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemCollectionAddAt/CS/menuitemcollectionaddatcs.aspx#1)]
 [!code-aspx-vb[MenuItemCollectionAddAt#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemCollectionAddAt/VB/menuitemcollectionaddatvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.Add(System.Web.UI.WebControls.MenuItem)" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.Clear" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.Remove(System.Web.UI.WebControls.MenuItem)" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItemCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="menuItemCollection.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Entfernt alle Elemente aus dem aktuellen <see cref="T:System.Web.UI.WebControls.MenuItemCollection" />-Objekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.Web.UI.WebControls.MenuItemCollection.Clear%2A>-Methode, um jedes <xref:System.Web.UI.WebControls.MenuItem>-Objekt aus dem aktuellen <xref:System.Web.UI.WebControls.MenuItemCollection>-Objekt zu entfernen.  
  
> [!NOTE]
>  Um einen einzelnen Knoten aus der Auflistung zu entfernen, empfiehlt es sich, die <xref:System.Web.UI.WebControls.MenuItemCollection.Remove%2A> oder die <xref:System.Web.UI.WebControls.MenuItemCollection.RemoveAt%2A>-Methode zu verwenden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.MenuItemCollection.Clear%2A>-Methode verwendet wird, um alle Elemente aus der <xref:System.Web.UI.WebControls.Menu.Items%2A> Auflistung eines <xref:System.Web.UI.WebControls.Menu>-Steuer Elements zu entfernen.  
  
 [!code-aspx-csharp[MenuItemCollectionClear#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemCollectionClear/CS/menuitemcollectionclearcs.aspx#1)]
 [!code-aspx-vb[MenuItemCollectionClear#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemCollectionClear/VB/menuitemcollectionclearvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.Add(System.Web.UI.WebControls.MenuItem)" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.AddAt(System.Int32,System.Web.UI.WebControls.MenuItem)" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.Remove(System.Web.UI.WebControls.MenuItem)" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Web.UI.WebControls.MenuItem c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Web.UI.WebControls.MenuItem c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItemCollection.Contains(System.Web.UI.WebControls.MenuItem)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (c As MenuItem) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Web::UI::WebControls::MenuItem ^ c);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Web.UI.WebControls.MenuItem -&gt; bool" Usage="menuItemCollection.Contains c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Web.UI.WebControls.MenuItem" />
      </Parameters>
      <Docs>
        <param name="c">Das zu suchende <see cref="T:System.Web.UI.WebControls.MenuItem" />.</param>
        <summary>Bestimmt, ob das angegebene <see cref="T:System.Web.UI.WebControls.MenuItem" />-Objekt in der Auflistung vorhanden ist.</summary>
        <returns><see langword="true" />, wenn das angegebene <see cref="T:System.Web.UI.WebControls.MenuItem" />-Objekt in der Auflistung enthalten ist, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.Web.UI.WebControls.MenuItemCollection.Contains%2A>-Methode, um zu bestimmen, ob ein <xref:System.Web.UI.WebControls.MenuItem>-Objekt im aktuellen <xref:System.Web.UI.WebControls.MenuItemCollection>-Objekt enthalten ist. Der <xref:System.Web.UI.WebControls.MenuItem> und seine Eigenschaften werden mit dem Wert "erfolgreich" verglichen. Diese Methode wird häufig verwendet, um zu testen, ob ein <xref:System.Web.UI.WebControls.MenuItem> Objekt vorhanden ist, bevor eine Aufgabe durchgeführt wird, z. b. das Hinzufügen oder Entfernen eines Menü Elements aus der Auflistung.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.MenuItemCollection.Contains%2A>-Methode verwendet wird, um zu bestimmen, ob ein <xref:System.Web.UI.WebControls.MenuItem>-Objekt in einem <xref:System.Web.UI.WebControls.MenuItemCollection>-Objekt enthalten ist.  
  
 [!code-aspx-csharp[MenuItemCollectionContains#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemCollectionContains/CS/menuitemcollectioncontainscs.aspx#1)]
 [!code-aspx-vb[MenuItemCollectionContains#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemCollectionContains/VB/menuitemcollectioncontainsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemCollection.Count" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.IndexOf(System.Web.UI.WebControls.MenuItem)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt den Inhalt des aktuellen <see cref="T:System.Web.UI.WebControls.MenuItemCollection" />-Objekts zurück.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItemCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As Array, index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="menuItemCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">Ein nullbasiertes <see cref="T:System.Array" />, in das Elemente aus der aktuellen <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> kopiert werden.</param>
        <param name="index">Die Position im Zielarray, bei der mit dem Empfang des kopierten Inhalts begonnen werden soll.</param>
        <summary>Kopiert alle Elemente aus dem <see cref="T:System.Web.UI.WebControls.MenuItemCollection" />-Objekt in ein kompatibles eindimensionales <see cref="T:System.Array" />, wobei bei dem angegebenen Index des Zielarrays begonnen wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.Web.UI.WebControls.MenuItemCollection.CopyTo%2A>-Methode, um den Inhalt des aktuellen <xref:System.Web.UI.WebControls.MenuItemCollection> Objekts in den angegebenen Null basierten <xref:System.Array?displayProperty=nameWithType>zu kopieren. Elemente werden beginnend am angegebenen Index des Ziel Arrays kopiert. Mit dem <xref:System.Array?displayProperty=nameWithType>können Sie dann die Array Syntax verwenden, um auf die Elemente im <xref:System.Web.UI.WebControls.MenuItemCollection> Objekt zuzugreifen.  
  
 Als Alternative können Sie auch die <xref:System.Web.UI.WebControls.MenuItemCollection.GetEnumerator%2A>-Methode verwenden, um einen Enumerator zu erstellen, der für den Zugriff auf die Elemente in der Auflistung verwendet werden kann.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="array" /> ist kein Array von <see cref="T:System.Web.UI.WebControls.MenuItem" />-Objekten.</exception>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.GetEnumerator" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemCollection.Item(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Web.UI.WebControls.MenuItem[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Web.UI.WebControls.MenuItem[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItemCollection.CopyTo(System.Web.UI.WebControls.MenuItem[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As MenuItem(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Web::UI::WebControls::MenuItem ^&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.Web.UI.WebControls.MenuItem[] * int -&gt; unit" Usage="menuItemCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Web.UI.WebControls.MenuItem[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">Ein nullbasiertes Array von <see cref="T:System.Web.UI.WebControls.MenuItem" />-Objekten, das die kopierten Elemente aus der aktuellen <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> empfängt.</param>
        <param name="index">Die Position im Zielarray, bei der mit dem Empfang des kopierten Inhalts begonnen werden soll.</param>
        <summary>Kopiert alle Elemente aus dem <see cref="T:System.Web.UI.WebControls.MenuItemCollection" />-Objekt in ein kompatibles eindimensionales Array von <see cref="T:System.Web.UI.WebControls.MenuItem" />-Objekten, wobei am angegebenen Index des Zielarrays begonnen wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.Web.UI.WebControls.MenuItemCollection.CopyTo%2A>-Methode, um den Inhalt des aktuellen <xref:System.Web.UI.WebControls.MenuItemCollection> Objekts in das angegebene null basierte Array zu kopieren. Elemente werden beginnend am angegebenen Index des Ziel Arrays kopiert. Mit dem Array können Sie dann die Array Syntax verwenden, um auf die Elemente im <xref:System.Web.UI.WebControls.MenuItemCollection> Objekt zuzugreifen.  
  
 Als Alternative können Sie auch die <xref:System.Web.UI.WebControls.MenuItemCollection.GetEnumerator%2A>-Methode verwenden, um einen Enumerator zu erstellen, der für den Zugriff auf die Elemente in der Auflistung verwendet werden kann.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.MenuItemCollection.CopyTo%2A>-Methode verwendet wird, um die Elemente in einem <xref:System.Web.UI.WebControls.MenuItemCollection>-Objekt in ein Array von <xref:System.Web.UI.WebControls.MenuItem>-Objekten zu kopieren.  
  
 [!code-aspx-csharp[MenuItemCollectionCopyTo#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemCollectionCopyTo/CS/menuitemcollectioncopytocs.aspx#1)]
 [!code-aspx-vb[MenuItemCollectionCopyTo#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemCollectionCopyTo/VB/menuitemcollectioncopytovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.GetEnumerator" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemCollection.Item(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItemCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Web.UI.WebControls.MenuItemCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der im aktuellen <see cref="T:System.Web.UI.WebControls.MenuItemCollection" />-Objekt enthaltenen Menüelemente ab.</summary>
        <value>Die Anzahl der im aktuellen <see cref="T:System.Web.UI.WebControls.MenuItemCollection" />-Objekt enthaltenen Menüelemente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.Web.UI.WebControls.MenuItemCollection.Count%2A>-Eigenschaft, um die Anzahl von Elementen in einem <xref:System.Web.UI.WebControls.MenuItemCollection>-Objekt zu ermitteln. Diese Eigenschaft wird häufig beim Durchlaufen einer Auflistung verwendet, um die obere Grenze der Auflistung zu bestimmen. Die <xref:System.Web.UI.WebControls.MenuItemCollection.Count%2A>-Eigenschaft wird auch häufig verwendet, um zu bestimmen, ob eine Auflistung leer ist.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.MenuItemCollection.Count%2A>-Eigenschaft verwendet wird, um die Anzahl der Menü Elemente in einem <xref:System.Web.UI.WebControls.MenuItemCollection>-Objekt zu ermitteln.  
  
 [!code-aspx-csharp[MenuItemCollectionCount#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemCollectionCount/CS/menuitemcollectioncountcs.aspx#1)]
 [!code-aspx-vb[MenuItemCollectionCount#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemCollectionCount/VB/menuitemcollectioncountvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.Contains(System.Web.UI.WebControls.MenuItem)" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.IndexOf(System.Web.UI.WebControls.MenuItem)" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItemCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="menuItemCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen Enumerator zurück, mit dem die Elemente im aktuellen <see cref="T:System.Web.UI.WebControls.MenuItemCollection" />-Objekt durchlaufen werden können.</summary>
        <returns>Ein Enumerator, mit dem die Elemente im aktuellen <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> durchlaufen werden können.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.Web.UI.WebControls.MenuItemCollection.GetEnumerator%2A>-Methode, um einen Enumerator zu erstellen, der problemlos durchlaufen werden kann, um jedes Element im aktuellen <xref:System.Web.UI.WebControls.MenuItemCollection> Objekt zu erhalten. Verwenden Sie die <xref:System.Collections.IEnumerator.Current%2A>-Eigenschaft, um das Element zu erhalten, auf das derzeit im Enumerator verwiesen wird. Verwenden Sie die <xref:System.Collections.IEnumerator.MoveNext%2A>-Methode, um zum nächsten Element zu wechseln. Wenn Sie den Enumerator zurück an den Anfang der Auflistung verschieben müssen, verwenden Sie die <xref:System.Collections.IEnumerator.Reset%2A>-Methode.  
  
> [!NOTE]
>  Nachdem Sie einen Enumerator erstellt oder die <xref:System.Collections.IEnumerator.Reset%2A>-Methode verwendet haben, müssen Sie die <xref:System.Collections.IEnumerator.MoveNext%2A>-Methode aufzurufen. Andernfalls ist das durch die <xref:System.Collections.IEnumerator.Current%2A>-Eigenschaft dargestellte Element nicht definiert.  
  
 Als Alternative können Sie auch die <xref:System.Web.UI.WebControls.MenuItemCollection.CopyTo%2A>-Methode verwenden, um die Elemente in der Auflistung in ein Array zu kopieren. Anschließend können Sie das Array verwenden, um auf die Elemente in der Auflistung zuzugreifen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.MenuItemCollection.GetEnumerator%2A>-Methode verwendet wird, um einen Enumerator zu erstellen, der die unter Menü Elemente des `Music` Menü Elements in einem <xref:System.Web.UI.WebControls.Menu>-Steuerelement enthält.  
  
 [!code-aspx-csharp[MenuItemCollectionGetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemCollectionGetEnumerator/CS/menuitemcollectiongetenumeratorcs.aspx#1)]
 [!code-aspx-vb[MenuItemCollectionGetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemCollectionGetEnumerator/VB/menuitemcollectiongetenumeratorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.CopyTo(System.Array,System.Int32)" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemCollection.Item(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Web.UI.WebControls.MenuItem value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Web.UI.WebControls.MenuItem value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItemCollection.IndexOf(System.Web.UI.WebControls.MenuItem)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As MenuItem) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Web::UI::WebControls::MenuItem ^ value);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Web.UI.WebControls.MenuItem -&gt; int" Usage="menuItemCollection.IndexOf value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.UI.WebControls.MenuItem" />
      </Parameters>
      <Docs>
        <param name="value">Das zu suchende <see cref="T:System.Web.UI.WebControls.MenuItem" />-Objekt.</param>
        <summary>Bestimmt den Index des angegebenen <see cref="T:System.Web.UI.WebControls.MenuItem" />-Objekts in der Auflistung.</summary>
        <returns>Der nullbasierte Index des ersten Vorkommens von <paramref name="value" /> in der aktuellen <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> (sofern gefunden), andernfalls -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.Web.UI.WebControls.MenuItemCollection.IndexOf%2A>-Methode, um den Index des angegebenen <xref:System.Web.UI.WebControls.MenuItem>-Objekts im aktuellen <xref:System.Web.UI.WebControls.MenuItemCollection>-Objekt zu ermitteln. Wenn sich das Menü Element nicht in der Auflistung befindet, gibt die Methode-1 zurück.  
  
> [!NOTE]
>  Wenn das angegebene Menü Element mehrmals in der Auflistung angezeigt wird, wird der Index des ersten Vorkommens zurückgegeben.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.MenuItemCollection.IndexOf%2A>-Methode verwendet wird, um den Index eines <xref:System.Web.UI.WebControls.MenuItem> Objekts innerhalb eines <xref:System.Web.UI.WebControls.MenuItemCollection>-Objekts zu bestimmen.  
  
 [!code-aspx-csharp[MenuItemCollectionIndexOf#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemCollectionIndexOf/CS/menuitemcollectionindexofcs.aspx#1)]
 [!code-aspx-vb[MenuItemCollectionIndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemCollectionIndexOf/VB/menuitemcollectionindexofvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItemCollection.Count" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.Contains(System.Web.UI.WebControls.MenuItem)" />
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItemCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Web.UI.WebControls.MenuItemCollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Zugriff auf das <see cref="T:System.Web.UI.WebControls.MenuItemCollection" />-Objekt synchronisiert (threadsicher) ist.</summary>
        <value>Gibt immer <see langword="false" /> zurück.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.MenuItemCollection.IsSynchronized%2A>-Eigenschaft wird verwendet, um anzugeben, ob der Zugriff auf das <xref:System.Web.UI.WebControls.MenuItemCollection> Objekt synchronisiert (Thread sicher) ist. Diese Eigenschaft wird von der <xref:System.Collections.ICollection?displayProperty=nameWithType>-Klasse abgeleitet und wird überschrieben, um immer `false`zurückzugeben.  
  
 Weitere Informationen zur <xref:System.Web.UI.WebControls.MenuItemCollection.IsSynchronized%2A>-Eigenschaft finden Sie in der <xref:System.Collections.ICollection.IsSynchronized%2A>-Eigenschaft der <xref:System.Collections.ICollection>-Schnittstelle.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItem this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItem Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItemCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As MenuItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItem ^ default[int] { System::Web::UI::WebControls::MenuItem ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Web.UI.WebControls.MenuItem" Usage="System.Web.UI.WebControls.MenuItemCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Der nullbasierte Index des abzurufenden <see cref="T:System.Web.UI.WebControls.MenuItem" />.</param>
        <summary>Ruft das <see cref="T:System.Web.UI.WebControls.MenuItem" />-Objekt am angegebenen Index im aktuellen <see cref="T:System.Web.UI.WebControls.MenuItemCollection" />-Objekt ab.</summary>
        <value>Das <see cref="T:System.Web.UI.WebControls.MenuItem" /> am angegebenen Index in der aktuellen <see cref="T:System.Web.UI.WebControls.MenuItemCollection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diesen Indexer, um vom aktuellen <xref:System.Web.UI.WebControls.MenuItemCollection>-Objekt am angegebenen Index mithilfe der Array Notation auf ein <xref:System.Web.UI.WebControls.MenuItem> Objekt zuzugreifen. Der Indexer ermöglicht es Ihnen, in der Auflistung direkt auf ein <xref:System.Web.UI.WebControls.MenuItem> Objekt zuzugreifen, Sie zu ändern oder zu ersetzen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie der Indexer zum Abrufen des Stamm Menü Elements aus der <xref:System.Web.UI.WebControls.Menu.Items%2A>-Auflistung eines <xref:System.Web.UI.WebControls.Menu> Steuer Elements verwendet wird.  
  
 [!code-aspx-csharp[MenuItemCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemCollectionAdd/CS/menuitemcollectionaddcs.aspx#1)]
 [!code-aspx-vb[MenuItemCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemCollectionAdd/VB/menuitemcollectionaddvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.GetEnumerator" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.CopyTo(System.Array,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Web.UI.WebControls.MenuItem value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Web.UI.WebControls.MenuItem value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItemCollection.Remove(System.Web.UI.WebControls.MenuItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (value As MenuItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Web::UI::WebControls::MenuItem ^ value);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Web.UI.WebControls.MenuItem -&gt; unit" Usage="menuItemCollection.Remove value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.UI.WebControls.MenuItem" />
      </Parameters>
      <Docs>
        <param name="value">Das zu entfernende <see cref="T:System.Web.UI.WebControls.MenuItem" /> -Objekt.</param>
        <summary>Entfernt das angegebene <see cref="T:System.Web.UI.WebControls.MenuItem" />-Objekt aus dem <see cref="T:System.Web.UI.WebControls.MenuItemCollection" />-Objekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.Web.UI.WebControls.MenuItemCollection.Remove%2A>-Methode, um das angegebene Menü Element aus der Auflistung zu entfernen. Alle Elemente, die diesem Menü Element folgen, werden dann nach oben verschoben, um die freie Position auszufüllen. Die Indizes der verschoanderen Elemente werden ebenfalls aktualisiert.  
  
> [!NOTE]
>  Das <xref:System.Web.UI.WebControls.MenuItemCollection>-Objekt kann NULL-Werte sowie doppelte <xref:System.Web.UI.WebControls.MenuItem> Objekte enthalten.  
  
 Als Alternative können Sie ein Menü Element aus einem bestimmten Index in der Auflistung entfernen, indem Sie die <xref:System.Web.UI.WebControls.MenuItemCollection.RemoveAt%2A>-Methode verwenden. Sie können auch alle Menü Elemente aus der Auflistung entfernen, indem Sie die <xref:System.Web.UI.WebControls.MenuItemCollection.Clear%2A>-Methode verwenden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.MenuItemCollection.Remove%2A>-Methode verwendet wird, um ein <xref:System.Web.UI.WebControls.MenuItem> Objekt Programm gesteuert aus einem <xref:System.Web.UI.WebControls.MenuItemCollection>-Objekt zu entfernen.  
  
 [!code-aspx-csharp[MenuItemCollectionRemove#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemCollectionRemove/CS/menuitemcollectionremovecs.aspx#1)]
 [!code-aspx-vb[MenuItemCollectionRemove#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemCollectionRemove/VB/menuitemcollectionremovevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" /> ist <see langword="null" /></exception>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.Add(System.Web.UI.WebControls.MenuItem)" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.AddAt(System.Int32,System.Web.UI.WebControls.MenuItem)" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.Clear" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItemCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int -&gt; unit" Usage="menuItemCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Die nullbasierte Position des Index des zu entfernenden Menüelements.</param>
        <summary>Entfernt das <see cref="T:System.Web.UI.WebControls.MenuItem" />-Objekt an der angegebenen Indexposition aus dem aktuellen <see cref="T:System.Web.UI.WebControls.MenuItemCollection" />-Objekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.Web.UI.WebControls.MenuItemCollection.RemoveAt%2A>-Methode, um das <xref:System.Web.UI.WebControls.MenuItem> Objekt an der angegebenen Indexposition aus der Auflistung zu entfernen. Alle Elemente, die diesem Menü Element folgen, werden dann nach oben verschoben, um die freie Position auszufüllen. Die Indizes der verschoanderen Elemente werden ebenfalls aktualisiert.  
  
> [!NOTE]
>  Das <xref:System.Web.UI.WebControls.MenuItemCollection>-Objekt kann NULL-Werte sowie doppelte <xref:System.Web.UI.WebControls.MenuItem> Objekte enthalten.  
  
 Als Alternative können Sie mithilfe der <xref:System.Web.UI.WebControls.MenuItemCollection.Remove%2A>-Methode ein bestimmtes <xref:System.Web.UI.WebControls.MenuItem> Objekt entfernen. Sie können auch alle Menü Elemente aus der Auflistung entfernen, indem Sie die <xref:System.Web.UI.WebControls.MenuItemCollection.Clear%2A>-Methode verwenden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.MenuItemCollection.RemoveAt%2A>-Methode verwendet wird, um ein <xref:System.Web.UI.WebControls.MenuItem> Objekt Programm gesteuert aus einem <xref:System.Web.UI.WebControls.MenuItemCollection>-Objekt an einer angegebenen Indexposition zu entfernen.  
  
 [!code-aspx-csharp[MenuItemCollectionRemoveAt#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemCollectionRemoveAt/CS/menuitemcollectionremoveatcs.aspx#1)]
 [!code-aspx-vb[MenuItemCollectionRemoveAt#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemCollectionRemoveAt/VB/menuitemcollectionremoveatvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.Add(System.Web.UI.WebControls.MenuItem)" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.AddAt(System.Int32,System.Web.UI.WebControls.MenuItem)" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.Clear" />
        <altmember cref="M:System.Web.UI.WebControls.MenuItemCollection.Remove(System.Web.UI.WebControls.MenuItem)" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItemCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Web.UI.WebControls.MenuItemCollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Objekt ab, mit dem der Zugriff auf das <see cref="T:System.Web.UI.WebControls.MenuItemCollection" />-Objekt synchronisiert werden kann.</summary>
        <value>Ein <see cref="T:System.Object" />, mit dem der Zugriff auf das <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> synchronisiert werden kann.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.MenuItemCollection.SyncRoot%2A>-Eigenschaft stellt eine synchronisierte Version des <xref:System.Web.UI.WebControls.MenuItemCollection> Objekts bereit, das mit dem Synchronisierungs Code (Threading) verwendet werden kann.  
  
> [!CAUTION]
>  Die <xref:System.Web.UI.WebControls.MenuItemCollection.IsSynchronized%2A>-Eigenschaft dieser Klasse gibt immer `false`zurück, was darauf hinweist, dass die <xref:System.Web.UI.WebControls.MenuItemCollection> Klasse nicht synchronisiert (nicht Thread sicher) ist.  
  
 Beim Synchronisieren von Code müssen Vorgänge für das <xref:System.Web.UI.WebControls.MenuItemCollection.SyncRoot%2A> Objekt der <xref:System.Web.UI.WebControls.MenuItemCollection> Auflistung, nicht direkt für das <xref:System.Web.UI.WebControls.MenuItemCollection> Objekt selbst durchgeführt werden. Dies gewährleistet die einwandfreie Funktion von Auflistungen, die von anderen Objekten abgeleitet sind. Insbesondere wird die ordnungsgemäße Synchronisierung mit anderen Threads verwaltet, die das <xref:System.Web.UI.WebControls.MenuItemCollection> Objekt gleichzeitig ändern können.  
  
> [!NOTE]
>  Das in dieser Implementierung zurückgegebene Objekt ist das <xref:System.Collections.ArrayList> Objekt, das zum Speichern der <xref:System.Web.UI.WebControls.MenuItem> Objekte in der Auflistung verwendet wird.  
  
 Die Enumeration einer Auflistung ist systemintern keine threadsichere Prozedur. Auch wenn eine Sammlung synchronisiert wird, können andere Threads die Auflistung weiterhin ändern, sodass der Enumerator eine Ausnahme auslöst. Um während der Enumeration Threadsicherheit zu gewährleisten, können Sie entweder die Auflistung während der gesamten Enumeration sperren oder die Ausnahmen, die aus von anderen Threads stammenden Änderungen resultieren, abfangen.  
  
 Weitere Informationen zur <xref:System.Web.UI.WebControls.MenuItemCollection.SyncRoot%2A>-Eigenschaft finden Sie in der <xref:System.Collections.ICollection.SyncRoot%2A>-Eigenschaft der <xref:System.Collections.ICollection>-Schnittstelle.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="P:System.Collections.ArrayList.SyncRoot" />
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.IsTrackingViewState">
      <MemberSignature Language="C#" Value="bool System.Web.UI.IStateManager.IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItemCollection.System#Web#UI#IStateManager#IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsTrackingViewState As Boolean Implements IStateManager.IsTrackingViewState" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Web::UI::IStateManager::IsTrackingViewState { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Web.UI.IStateManager.IsTrackingViewState : bool" Usage="System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Web.UI.WebControls.MenuItemCollection" />-Objekt Änderungen des Ansichtszustands speichert.</summary>
        <value><see langword="true" />, wenn das Steuerelement für das Speichern seines Zustands markiert ist, andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Control.ViewState" />
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.Control.SaveViewState" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.LoadViewState">
      <MemberSignature Language="C#" Value="void IStateManager.LoadViewState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.LoadViewState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItemCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub LoadViewState (state As Object) Implements IStateManager.LoadViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.LoadViewState(System::Object ^ state) = System::Web::UI::IStateManager::LoadViewState;" />
      <MemberSignature Language="F#" Value="abstract member System.Web.UI.IStateManager.LoadViewState : obj -&gt; unit&#xA;override this.System.Web.UI.IStateManager.LoadViewState : obj -&gt; unit" Usage="menuItemCollection.System.Web.UI.IStateManager.LoadViewState state" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">Ein <see cref="T:System.Object" />, das die gespeicherten Ansichtszustandswerte enthält.</param>
        <summary>Lädt den zuvor gespeicherten Ansichtszustand des <see cref="T:System.Web.UI.WebControls.MenuItemCollection" />-Objekts.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="T:System.Web.UI.StateItem" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/75x4ha6s(v=vs.100)">ASP.net State Management (Übersicht)</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.SaveViewState">
      <MemberSignature Language="C#" Value="object IStateManager.SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Web.UI.IStateManager.SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItemCollection.System#Web#UI#IStateManager#SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Function SaveViewState () As Object Implements IStateManager.SaveViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Web.UI.IStateManager.SaveViewState() = System::Web::UI::IStateManager::SaveViewState;" />
      <MemberSignature Language="F#" Value="abstract member System.Web.UI.IStateManager.SaveViewState : unit -&gt; obj&#xA;override this.System.Web.UI.IStateManager.SaveViewState : unit -&gt; obj" Usage="menuItemCollection.System.Web.UI.IStateManager.SaveViewState " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Speichert die Änderungen am Ansichtszustand in einem <see cref="T:System.Object" />.</summary>
        <returns>Das <see cref="T:System.Object" />, das die Ansichtszustandsänderungen enthält.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="T:System.Web.UI.StateItem" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/75x4ha6s(v=vs.100)">ASP.net State Management (Übersicht)</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.TrackViewState">
      <MemberSignature Language="C#" Value="void IStateManager.TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItemCollection.System#Web#UI#IStateManager#TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Sub TrackViewState () Implements IStateManager.TrackViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.TrackViewState() = System::Web::UI::IStateManager::TrackViewState;" />
      <MemberSignature Language="F#" Value="abstract member System.Web.UI.IStateManager.TrackViewState : unit -&gt; unit&#xA;override this.System.Web.UI.IStateManager.TrackViewState : unit -&gt; unit" Usage="menuItemCollection.System.Web.UI.IStateManager.TrackViewState " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Weist das <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> -Objekt an, Änderungen am Ansichtszustand nachzuverfolgen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nachdem diese Methode für ein Server Steuerelement aufgerufen wurde, gibt die <xref:System.Web.UI.Control.IsTrackingViewState%2A>-Eigenschaft `true`zurück.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="T:System.Web.UI.StateItem" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/75x4ha6s(v=vs.100)">ASP.net State Management (Übersicht)</related>
      </Docs>
    </Member>
  </Members>
</Type>
