<Type Name="Menu" FullName="System.Web.UI.WebControls.Menu">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e2b2596101cfac0ff1e1899d14e1669f8426dc8f" />
    <Meta Name="ms.sourcegitcommit" Value="4b4804968da1dfdf71c501075a5b66957b54f2e8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/27/2018" />
    <Meta Name="ms.locfileid" Value="32040201" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Menu : System.Web.UI.WebControls.HierarchicalDataBoundControl, System.Web.UI.INamingContainer, System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Menu extends System.Web.UI.WebControls.HierarchicalDataBoundControl implements class System.Web.UI.INamingContainer, class System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Menu" />
  <TypeSignature Language="VB.NET" Value="Public Class Menu&#xA;Inherits HierarchicalDataBoundControl&#xA;Implements INamingContainer, IPostBackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class Menu : System::Web::UI::WebControls::HierarchicalDataBoundControl, System::Web::UI::INamingContainer, System::Web::UI::IPostBackEventHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.HierarchicalDataBoundControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.INamingContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("MenuItemClick")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.MenuDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlValueProperty("SelectedValue")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Zeigt ein Menü auf einer ASP.NET-Webseite an.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In diesem Thema:  
  
-   [Introduction (Einführung)](#introduction)  
  
-   [Menüelemente](#menu_items)  
  
-   [Statische Daten](#static_data)  
  
-   [Binden an Daten](#binding_to_data)  
  
-   [Anpassen der Benutzeroberfläche](#customizing_the_user_interface)  
  
-   [Ereignisse](#events)  
  
-   [Barrierefreiheit](#accessibility)  
  
-   [Deklarationssyntax](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Einführung  
 Die <xref:System.Web.UI.WebControls.Menu> Steuerelement wird verwendet, um ein Menü auf einer ASP.NET-Webseite angezeigt und wird häufig in Kombination mit einem <xref:System.Web.UI.WebControls.SiteMapDataSource> -Steuerelement für die Navigation auf einer Website. Die <xref:System.Web.UI.WebControls.Menu> -Steuerelement unterstützt die folgenden Funktionen:  
  
-   Datenbindung, die das Steuerelement Menüelemente hierarchische Datenquellen gebunden werden kann.  
  
-   Websitenavigation durch die Integration mit der <xref:System.Web.UI.WebControls.SiteMapDataSource> Steuerelement.  
  
-   Programmgesteuerter Zugriff auf die <xref:System.Web.UI.WebControls.Menu> Objektmodell zum dynamischen Erstellen von Menüs, Menüelemente auffüllen, Eigenschaften festlegen und usw.  
  
-   Anpassbare Darstellung durch Designs, benutzerdefinierte Bilder, Formatvorlagen und benutzerdefinierter Vorlagen.  
  
 Wenn der Benutzer ein Menüelement klickt der <xref:System.Web.UI.WebControls.Menu> Steuerelement navigieren Sie zu einer verknüpften Webseite oder einfach an den Server senden kann. Wenn die <xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A> Eigenschaft eines Menüelements festgelegt ist, die <xref:System.Web.UI.WebControls.Menu> -Steuerelement navigiert zu der verknüpften Seite; andernfalls, sendet es die Seite zurück an den Server zur Verarbeitung. Standardmäßig wird eine verknüpfte Seite angezeigt, in das Fenster oder den Frame als die <xref:System.Web.UI.WebControls.Menu> Steuerelement. Um den verknüpften Inhalt in einem anderen Fenster oder den Frame anzuzeigen, verwenden die <xref:System.Web.UI.WebControls.Menu.Target%2A> Eigenschaft von der <xref:System.Web.UI.WebControls.Menu> Steuerelement.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.Menu.Target%2A> Eigenschaft wirkt sich auf jede Menüelement im Steuerelement. Um ein Fenster oder den Frame für ein einzelnes Menüelement anzugeben, legen Sie die <xref:System.Web.UI.WebControls.MenuItem.Target%2A> Eigenschaft von der <xref:System.Web.UI.WebControls.MenuItem> -Objekts direkt.  
  
 Die <xref:System.Web.UI.WebControls.Menu> -Steuerelement zeigt zwei Arten von Menüs: ein statisches Menü und ein dynamisches Menü. Die Untermenüelemente wird immer angezeigt, einem <xref:System.Web.UI.WebControls.Menu> Steuerelement. Standardmäßig werden die Menüelemente auf der Stammebene (Ebene 0) in einem statischen Menü angezeigt. Sie können zusätzliche Menüebenen (statische Untermenüs) in einem statischen Menü angezeigt, durch Festlegen der <xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A> Eigenschaft. Menüelemente, die sich (falls vorhanden) auf einer höheren Ebene als der Wert von der <xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A> Eigenschaft in einem dynamischen Menü angezeigt werden. Ein dynamisches Menü angezeigt wird, nur, wenn der Benutzer den Mauszeiger über dem übergeordneten Menüelement positioniert, die ein dynamisches Untermenü enthält. Dynamische Menüs werden automatisch ausgeblendet, wenn eine bestimmte Dauer. Verwenden der <xref:System.Web.UI.WebControls.Menu.DisappearAfter%2A> Eigenschaft, um den Zeitraum anzugeben.  
  
> [!NOTE]
>  Ein dynamisches Menü wird nicht mehr klickt der Benutzer außerhalb der Menü.  
  
 Sie können auch die Anzahl der Ebenen in einem dynamischen Menü angezeigt wird, indem die <xref:System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels%2A> Eigenschaft. Menüebenen, die höher als der angegebene Wert werden verworfen.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.Menu> Steuerelement ist nicht entwickelt, die innerhalb einer <xref:System.Web.UI.UpdatePanel> Steuerelement. Können Sie hinzufügen, die <xref:System.Web.UI.WebControls.Menu> Steuerelement nur für eine Seite außerhalb einer <xref:System.Web.UI.UpdatePanel> Steuerelement. <xref:System.Web.UI.UpdatePanel> Steuerelemente werden verwendet, um die ausgewählten Bereiche einer Seite statt zu aktualisieren die gesamte Seite mit einem Postback zu aktualisieren. Weitere Informationen finden Sie unter [Übersicht über das Steuerelement UpdatePanel](http://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a) und [Teilrendering von Seiten Rendering Overview](http://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49).  
  
<a name="menu_items"></a>   
## <a name="menu-items"></a>Menüelemente  
 Ein <xref:System.Web.UI.WebControls.Menu> Steuerelement besteht aus einer Struktur von Menüelementen dargestellte <xref:System.Web.UI.WebControls.MenuItem> Objekte. Menüelemente auf oberster Ebene (Ebene 0) werden als Root-Menüelemente bezeichnet. Ein Menüelement, das ein übergeordnetes Menüelement besitzt, wird ein Menüelement untergeordnete aufgerufen. Alle Menüelemente werden gespeichert, der <xref:System.Web.UI.WebControls.Menu.Items%2A> Auflistung. Untergeordnete Menüelemente werden in einer übergeordneten Menüelement gespeichert <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> Auflistung.  
  
 Jedes Menüelement verfügt über eine <xref:System.Web.UI.WebControls.MenuItem.Text%2A> und ein <xref:System.Web.UI.WebControls.MenuItem.Value%2A> Eigenschaft. Der Wert des der <xref:System.Web.UI.WebControls.MenuItem.Text%2A> Eigenschaft wird angezeigt, der <xref:System.Web.UI.WebControls.Menu> -Steuerelement, während die <xref:System.Web.UI.WebControls.MenuItem.Value%2A> Eigenschaft dient zum Speichern der zusätzlichen Daten über das Menüelement, z. B. Daten, der dem Menüelement zugeordnete Postbackereignis übergeben. Beim Klicken auf ein Menüelement kann navigieren Sie zu einer anderen Webseite erkennbar die <xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A> Eigenschaft.  
  
> [!NOTE]
>  Wenn die <xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A> Eigenschaftensatz ist nicht für ein Menüelement der <xref:System.Web.UI.WebControls.Menu> Steuerelement einfach sendet die Seite an den Server für die Verarbeitung, wenn das Menüelement geklickt wird.  
  
 Sie können optional auch ein Bild in ein Menüelement anzeigen, durch Festlegen der <xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A> Eigenschaft.  
  
 Weitere Informationen zu Menüelementen finden Sie unter <xref:System.Web.UI.WebControls.MenuItem>.  
  
<a name="static_data"></a>   
## <a name="static-data"></a>Statische Daten  
 Das einfachste Datenmodell von der <xref:System.Web.UI.WebControls.Menu> -Steuerelement ist statischen Menüelemente. Zum Anzeigen von statischen Menüelemente verwenden deklarativen Syntax zuerst schachteln, öffnende und schließende `<Items>` zwischen dem Start- und Endtag des Tags der <xref:System.Web.UI.WebControls.Menu> Steuerelement. Als Nächstes erstellen Sie die Menüstruktur von Schachtelung `<asp:MenuItem>` Elemente zwischen den öffnenden und schließenden `<Items>` Tags. Jede `<asp:MenuItem>` Element ein Menüelement im Steuerelement darstellt, und ordnet einen <xref:System.Web.UI.WebControls.MenuItem> Objekt. Sie können die Eigenschaften der einzelnen Menüelemente festlegen, indem die Attribute festlegen seiner `<asp:MenuItem>` Element. Zum Erstellen von Untermenüelemente schachteln zusätzliche `<asp:MenuItem>` Elemente zwischen den öffnenden und schließenden `<asp:MenuItem>` Tags des übergeordneten Menüelements.  
  
<a name="binding_to_data"></a>   
## <a name="binding-to-data"></a>Binden an Daten  
 Die <xref:System.Web.UI.WebControls.Menu> Steuerelement können hierarchische Datenquellen-Steuerelements, wie z. B. ein <xref:System.Web.UI.WebControls.XmlDataSource> Steuerelement oder ein <xref:System.Web.UI.WebControls.SiteMapDataSource> Steuerelement. Um ein hierarchisches Datenquellen-Steuerelement zu binden, legen die <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> Eigenschaft von der <xref:System.Web.UI.WebControls.Menu> die Steuerung an die <xref:System.Web.UI.Control.ID%2A> Wert des Datenquellen-Steuerelements. Die <xref:System.Web.UI.WebControls.Menu> Steuerelement automatisch an das angegebene Datenquellen-Steuerelement gebunden. Dies ist die bevorzugte Methode zum Binden an Daten.  
  
 Beim Binden an eine Datenquelle, in dem jedes Datenelement enthält mehrere Eigenschaften (z. B. ein XML-Element mit mehreren Attributen), ein Menüelement zeigt den Rückgabewert von an das `ToString` Methode des Datenelements in der Standardeinstellung. Im Fall einer XML-Element zeigt das Menüelement den Elementnamen, die die zugrunde liegende Struktur der Menüstruktur zeigt, aber ist andernfalls nicht sehr sinnvoll. Sie können ein Menüelement an eine bestimmte Daten Elementeigenschaft binden, indem die <xref:System.Web.UI.WebControls.Menu.DataBindings%2A> Auflistung, um Bindungen von Menü Element anzugeben. Die <xref:System.Web.UI.WebControls.Menu.DataBindings%2A> Auflistung enthält <xref:System.Web.UI.WebControls.MenuItemBinding> Objekten, definieren die Beziehung zwischen einem Datenelement und dem Menüelement, das es werden soll gebunden. Sie können die Kriterien für die Bindung und die Datenelementeigenschaft so an den Knoten angeben. Weitere Informationen zu Bindungen von Menü Element, finden Sie unter <xref:System.Web.UI.WebControls.MenuItemBinding>.  
  
 Sie können nicht erstellt werden leere Knoten in einem <xref:System.Web.UI.WebControls.Menu> Steuerelement durch Festlegen der <xref:System.Web.UI.WebControls.MenuItemBinding.Text%2A> oder <xref:System.Web.UI.WebControls.MenuItemBinding.TextField%2A> Eigenschaften auf die leere Zeichenfolge (""). Das Festlegen dieser Eigenschaften auf die leere Zeichenfolge hat denselben Effekt wie die Eigenschaften nicht festlegen. In diesem Fall die <xref:System.Web.UI.WebControls.Menu> -Steuerelements erstellt einen Standard-Bindung unter Verwendung der <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> Eigenschaft. Weitere Informationen finden Sie unter [Binden an Datenbanken](http://msdn.microsoft.com/library/ab7b2846-975b-4057-a948-45527497c742).  
  
<a name="customizing_the_user_interface"></a>   
## <a name="customizing-the-user-interface"></a>Anpassen der Benutzeroberfläche  
 Es gibt viele Methoden zum Anpassen der Darstellung der <xref:System.Web.UI.WebControls.Menu> Steuerelement. Erstens können Sie angeben, ob die <xref:System.Web.UI.WebControls.Menu> Steuerelement gerendert horizontal oder vertikal durch Festlegen der <xref:System.Web.UI.WebControls.Menu.Orientation%2A> Eigenschaft. Sie können auch einem anderen Format (z. B. Schriftart und Farbe) für die einzelnen Elementtypen Menü angeben.  
  
 Wenn Sie cascading Stylesheets (CSS) verwenden, um die Darstellung des Steuerelements anzupassen, verwenden Sie Inlineformate oder eine separate CSS-Datei, aber nicht beides. Mit Inlineformatvorlagen und eine separate CSS-Datei könnte unerwartete Ergebnisse verursachen. Weitere Informationen zur Verwendung von Stylesheets mit Steuerelementen finden Sie unter [-Webserversteuerelemente und CSS-Formatvorlagen](http://msdn.microsoft.com/library/782c2db6-fc9b-4243-8df9-a8ffe2f4cc42).  
  
 Die folgende Tabelle enthält die im Kontextmenü verfügbaren Element Stile.  
  
|Menü-Element-Style-Eigenschaft|Beschreibung |  
|------------------------------|-----------------|  
|<xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A>|Die Stileigenschaften für ein dynamisches Menüelement, wenn der Mauszeiger darauf positioniert ist.|  
|<xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A>|Die Stileigenschaften für ein einzelnes dynamischen Menüelement.|  
|<xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A>|Die Stileigenschaften für ein dynamisches Menü.|  
|<xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A>|Die Stileigenschaften für den aktuell ausgewählten dynamischen Menüelements.|  
|<xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A>|Die Stileigenschaften für ein statisches Menüelement, wenn der Mauszeiger darauf positioniert ist.|  
|<xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A>|Die Stileigenschaften für einen einzelnen statischen Menüelements.|  
|<xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A>|Die Stileigenschaften für ein statisches Menü.|  
|<xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A>|Die Stileigenschaften für das aktuell ausgewählte statische Menüelement.|  
  
 Statt das einzelne Stileigenschaften festlegen, können Sie die Formate angeben, die Menüelemente, die basierend auf der Ebene verwenden die folgenden Sammlungen enthalten Stil angewendet werden.  
  
|Formatvorlage Sammlungen|Beschreibung |  
|-----------------------------|-----------------|  
|<xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A>|Eine Auflistung von <xref:System.Web.UI.WebControls.MenuItemStyle> dar, das Format der Menüelemente auf Grundlage der Ebene steuern.|  
|<xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A>|Eine Auflistung von <xref:System.Web.UI.WebControls.MenuItemStyle> Objekte ausgewählt, die den Stil der Menüelemente auf Grundlage der Ebene.|  
|<xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A>|Eine Auflistung von <xref:System.Web.UI.WebControls.MenuItemStyle> dar, das Format der Untermenüelemente auf Grundlage der Ebene steuern.|  
  
 Das erste Format in der Auflistung entspricht dem Format der Menüelemente auf der ersten Ebene in der Menüstruktur. Das zweite Format in der Auflistung entspricht dem Format der Menüelemente auf der zweiten Ebene in der Menüstruktur und So weiter. Dies wird am häufigsten verwendet zum Generieren von Navigationsmenüs Inhalt-Format, in denen sollten Menüelemente auf einer bestimmten Ebene unabhängig davon, ob diese Untermenüs haben die gleiche Darstellung haben.  
  
> [!NOTE]
>  Wenn Sie eine der Formatvorlage Auflistungen in der vorherigen Tabelle aufgeführten verwenden, definieren Sie den Stil für die <xref:System.Web.UI.WebControls.Menu> Steuerelement diese stileinstellungen überschreiben, die einzelne Formateigenschaften des Menüelements.  
  
 Eine weitere Möglichkeit zum Ändern der Darstellung des Steuerelements wird angezeigten Bilder Anpassen der <xref:System.Web.UI.WebControls.Menu> Steuerelement. Sie können Ihr eigenes benutzerdefinierte Image für die verschiedenen Teile des Steuerelements angeben, durch Festlegen der Eigenschaften in der folgenden Tabelle gezeigt.  
  
|Image-Eigenschaft|Beschreibung |  
|--------------------|-----------------|  
|<xref:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl%2A>|Ein optionales Bild angezeigt, die am unteren Rand ein dynamisches Menüelement von anderen Menüelementen abzugrenzen.|  
|<xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A>|Ein optionales Bild angezeigt, in ein dynamisches Menüelement, um anzugeben, dass sie über ein Untermenü verfügt.|  
|<xref:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl%2A>|Ein optionales Bild angezeigt, die am oberen Rand ein dynamisches Menüelement von anderen Menüelementen abzugrenzen.|  
|<xref:System.Web.UI.WebControls.Menu.ScrollDownImageUrl%2A>|Das Bild angezeigt, die am unteren Rand eines Menüelements aus, um anzugeben, dass der Benutzer zum Anzeigen zusätzlicher Menüelemente einen Bildlauf durchführen kann.|  
|<xref:System.Web.UI.WebControls.Menu.ScrollUpImageUrl%2A>|Das Bild angezeigt, die am oberen Rand eines Menüelements aus, um anzugeben, dass der Benutzer bis zum Anzeigen zusätzlicher Menüelemente einen Bildlauf durchführen kann.|  
|<xref:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl%2A>|Ein optionales Bild angezeigt, die am unteren Rand ein statisches Menüelement von anderen Menüelementen abzugrenzen.|  
|<xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A>|Ein optionales Bild angezeigt, in ein statisches Menüelement, um anzugeben, dass sie über ein Untermenü verfügt.|  
|<xref:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl%2A>|Ein optionales Bild angezeigt, die am oberen Rand ein statisches Menüelement von anderen Menüelementen abzugrenzen.|  
  
 Für vollständige Kontrolle über die Benutzeroberfläche (UI), können Sie eigene benutzerdefinierten Vorlagen für definieren die <xref:System.Web.UI.WebControls.Menu> mithilfe der folgenden Vorlageneigenschaften zu steuern.  
  
|Template-Eigenschaft|Beschreibung |  
|-----------------------|-----------------|  
|<xref:System.Web.UI.WebControls.Menu.DynamicItemTemplate%2A>|Die Vorlage, die die benutzerdefinierte Inhalte für ein dynamisches Menüelement gerendert enthält.|  
|<xref:System.Web.UI.WebControls.Menu.StaticItemTemplate%2A>|Die Vorlage, die die benutzerdefinierte Inhalte für ein statisches Menüelement gerendert enthält.|  
  
 Sie können die vertikale und horizontale Position des ein dynamisches Menü relativ zu seinem übergeordneten Menüelement steuern, durch Festlegen der <xref:System.Web.UI.WebControls.Menu.DynamicVerticalOffset%2A> und <xref:System.Web.UI.WebControls.Menu.DynamicHorizontalOffset%2A> Eigenschaften bzw. Um den Einzug der statischen Untermenüelemente in einem statischen Menü zu steuern, verwenden die <xref:System.Web.UI.WebControls.Menu.StaticSubMenuIndent%2A> Eigenschaft.  
  
<a name="events"></a>   
## <a name="events"></a>Ereignisse  
 Die <xref:System.Web.UI.WebControls.Menu> Steuerelement bietet mehrere Ereignisse, die Sie programmieren können. Dadurch können Sie eine benutzerdefinierte Routine ausgeführt wird, sobald ein Ereignis auftritt. Die folgende Tabelle listet die unterstützten Ereignisse.  
  
|event|Beschreibung |  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.Menu.MenuItemClick>|Tritt auf, wenn ein Menüelement geklickt wird. Dieses Ereignis wird häufig zum Synchronisieren einer <xref:System.Web.UI.WebControls.Menu> -Steuerelement mit einem anderen Steuerelement auf der Seite.|  
|<xref:System.Web.UI.WebControls.Menu.MenuItemDataBound>|Tritt auf, wenn ein Menüelement an Daten gebunden ist. Dieses Ereignis wird häufig verwendet, um ein Menüelement zu ändern, bevor er in gerendert wird ein <xref:System.Web.UI.WebControls.Menu> Steuerelement.|  
  
<a name="accessibility"></a>   
## <a name="accessibility"></a>Zugriff  
 Weitere Informationen dazu, wie das Steuerelement so konfigurieren, dass er Markup generiert, das den Accessibility Standards entspricht, finden Sie unter [Barrierefreiheit in Visual Studio und ASP.NET](http://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13) und [ASP.NET-Steuerelemente und Barrierefreiheit](http://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Deklarationssyntax  
  
```  
<asp:Menu  
    AccessKey="string"  
    BackColor="color name|#dddddd"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    CssClass="string"  
    DataSource="string"  
    DataSourceID="string"  
    DisappearAfter="integer"  
    DynamicBottomSeparatorImageUrl="uri"  
    DynamicEnableDefaultPopOutImage="True|False"  
    DynamicHorizontalOffset="integer"  
    DynamicItemFormatString="string"  
    DynamicPopOutImageTextFormatString="string"  
    DynamicPopOutImageUrl="uri"  
    DynamicTopSeparatorImageUrl="uri"  
    DynamicVerticalOffset="integer"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    Height="size"  
    ID="string"  
    ItemWrap="True|False"  
    MaximumDynamicDisplayLevels="integer"  
    OnDataBinding="DataBinding event handler"  
    OnDataBound="DataBound event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnMenuItemClick="MenuItemClick event handler"  
    OnMenuItemDataBound="MenuItemDataBound event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    Orientation="Horizontal|Vertical"  
    PathSeparator="string"  
    runat="server"  
    ScrollDownImageUrl="uri"  
    ScrollDownText="string"  
    ScrollUpImageUrl="uri"  
    ScrollUpText="string"  
    SkinID="string"  
    SkipLinkText="string"  
    StaticBottomSeparatorImageUrl="uri"  
    StaticDisplayLevels="integer"  
    StaticEnableDefaultPopOutImage="True|False"  
    StaticItemFormatString="string"  
    StaticPopOutImageTextFormatString="string"  
    StaticPopOutImageUrl="uri"  
    StaticSubMenuIndent="size"  
    StaticTopSeparatorImageUrl="uri"  
    Style="string"  
    TabIndex="integer"  
    Target="string"  
    ToolTip="string"  
    Visible="True|False"  
    Width="size"  
>  
        <DataBindings>  
                <asp:MenuItemBinding  
                    DataMember="string"  
                    Depth="integer"  
                    Enabled="True|False"  
                    EnabledField="string"  
                    FormatString="string"  
                    ImageUrl="uri"  
                    ImageUrlField="string"  
                    NavigateUrl="uri"  
                    NavigateUrlField="string"  
                    PopOutImageUrl="uri"  
                    PopOutImageUrlField="string"  
                    Selectable="True|False"  
                    SelectableField="string"  
                    SeparatorImageUrl="uri"  
                    SeparatorImageUrlField="string"  
                    Target="string"  
                    TargetField="string"  
                    Text="string"  
                    TextField="string"  
                    ToolTip="string"  
                    ToolTipField="string"  
                    Value="string"  
                    ValueField="string"  
                />  
        </DataBindings>  
        <DynamicHoverStyle />  
        <DynamicItemTemplate>  
            <!-- child controls -->  
        </DynamicItemTemplate>  
        <DynamicMenuItemStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ItemSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <DynamicMenuStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <DynamicSelectedStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ItemSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <Items />  
        <LevelMenuItemStyles>  
                <asp:MenuItemStyle  
                    BackColor="color name|#dddddd"  
                    BorderColor="color name|#dddddd"  
                    BorderStyle="NotSet|None|Dotted|Dashed|Solid|  
                        Double|Groove|Ridge|Inset|Outset"  
                    BorderWidth="size"  
                    CssClass="string"  
                    Font-Bold="True|False"  
                    Font-Italic="True|False"  
                    Font-Names="string"  
                    Font-Overline="True|False"  
                    Font-Size="string|Smaller|Larger|XX-Small|  
                        X-Small|Small|Medium|Large|X-Large|XX-Large"  
                    Font-Strikeout="True|False"  
                    Font-Underline="True|False"  
                    ForeColor="color name|#dddddd"  
                    Height="size"  
                    HorizontalPadding="size"  
                    ItemSpacing="size"  
                    OnDisposed="Disposed event handler"  
                    VerticalPadding="size"  
                    Width="size"  
                />  
        </LevelMenuItemStyles>  
        <LevelSelectedStyles>  
                <asp:MenuItemStyle  
                    BackColor="color name|#dddddd"  
                    BorderColor="color name|#dddddd"  
                    BorderStyle="NotSet|None|Dotted|Dashed|Solid|  
                        Double|Groove|Ridge|Inset|Outset"  
                    BorderWidth="size"  
                    CssClass="string"  
                    Font-Bold="True|False"  
                    Font-Italic="True|False"  
                    Font-Names="string"  
                    Font-Overline="True|False"  
                    Font-Size="string|Smaller|Larger|XX-Small|  
                        X-Small|Small|Medium|Large|X-Large|XX-Large"  
                    Font-Strikeout="True|False"  
                    Font-Underline="True|False"  
                    ForeColor="color name|#dddddd"  
                    Height="size"  
                    HorizontalPadding="size"  
                    ItemSpacing="size"  
                    OnDisposed="Disposed event handler"  
                    VerticalPadding="size"  
                    Width="size"  
                />  
        </LevelSelectedStyles>  
        <LevelSubMenuStyles>  
                <asp:SubMenuStyle  
                    BackColor="color name|#dddddd"  
                    BorderColor="color name|#dddddd"  
                    BorderStyle="NotSet|None|Dotted|Dashed|Solid|  
                        Double|Groove|Ridge|Inset|Outset"  
                    BorderWidth="size"  
                    CssClass="string"  
                    Font-Bold="True|False"  
                    Font-Italic="True|False"  
                    Font-Names="string"  
                    Font-Overline="True|False"  
                    Font-Size="string|Smaller|Larger|XX-Small|  
                        X-Small|Small|Medium|Large|X-Large|XX-Large"  
                    Font-Strikeout="True|False"  
                    Font-Underline="True|False"  
                    ForeColor="color name|#dddddd"  
                    Height="size"  
                    HorizontalPadding="size"  
                    OnDisposed="Disposed event handler"  
                    VerticalPadding="size"  
                    Width="size"  
                />  
        </LevelSubMenuStyles>  
        <StaticHoverStyle />  
        <StaticItemTemplate>  
            <!-- child controls -->  
        </StaticItemTemplate>  
        <StaticMenuItemStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|  
                X-Small|Small|Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ItemSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <StaticMenuStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <StaticSelectedStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ItemSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
</asp:Menu>  
```  
  
   
  
## Examples  
 Ist ein Visual Studio Web Site-Projekt mit Quellcode zu diesem Thema steht verfügbar: [herunterladen](http://go.microsoft.com/fwlink/?LinkId=192868).  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Erstellen einer <xref:System.Web.UI.WebControls.Menu> -Steuerelement mit statischen Menüelemente verwenden deklarativen Syntax.  
  
 [!code-aspx-csharp[MenuDeclarative#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDeclarative/CS/menudeclarativecs.aspx#1)]
 [!code-aspx-vb[MenuDeclarative#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDeclarative/VB/menudeclarativevb.aspx#1)]  
  
 Das folgende Codebeispiel veranschaulicht das Binden der <xref:System.Web.UI.WebControls.Menu> die Steuerung an eine <xref:System.Web.UI.WebControls.SiteMapDataSource> Steuerelement. Für dieses Beispiel ordnungsgemäß funktioniert müssen Sie die Beispiel-Siteübersichtsdaten unten in einer Datei namens Web.sitemap kopieren.  
  
 [!code-aspx-csharp[MenuDataBind#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDataBind/CS/menudatabindcs.aspx#1)]
 [!code-aspx-vb[MenuDataBind#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDataBind/VB/menudatabindvb.aspx#1)]  
  
 Im folgenden finden Beispiel-Siteübersichtsdaten für das vorherige Beispiel.  
  
```  
<siteMap>  
  <siteMapNode url="~\Home.aspx"   
    title="Home"  
    description="Home">  
    <siteMapNode url="~\Music.aspx"  
      title="Music"  
      description="Music">  
      <siteMapNode url="~\Classical.aspx"   
        title="Classical"  
        description="Classical"/>  
      <siteMapNode url="~\Rock.aspx"  
        title="Rock"  
        description="Rock"/>  
      <siteMapNode url="~\Jazz.aspx"  
        title="Jazz"  
        description="Jazz"/>  
    </siteMapNode>  
    <siteMapNode url="~\Movies.aspx"  
      title="Movies"  
      description="Movies">  
      <siteMapNode url="~\Action.aspx"  
        title="Action"  
        description="Action"/>  
      <siteMapNode url="~\Drama.aspx"  
        title="Drama"  
        description="Drama"/>  
      <siteMapNode url="~\Musical.aspx"  
        title="Musical"  
        description="Musical"/>  
    </siteMapNode>  
  </siteMapNode>  
</siteMap>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.TreeView" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Menu ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Menu();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.Menu" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diesen Konstruktor erstellt und initialisiert eine neue Instanz der dem <xref:System.Web.UI.WebControls.Menu> Klasse. Dynamisch Hinzufügen einer <xref:System.Web.UI.WebControls.Menu> zu einer Seite zu steuern, erstellen Sie ein neues <xref:System.Web.UI.WebControls.Menu> Objekt, dessen Eigenschaften festlegen und fügen Sie es auf die <xref:System.Web.UI.Control.Controls%2A> Auflistung eines Containers zu steuern, wie z. B. <xref:System.Web.UI.WebControls.PlaceHolder>.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie mithilfe des Konstruktors dynamisch Hinzufügen einer <xref:System.Web.UI.WebControls.Menu> Steuerelement zu einer Seite.  
  
 [!code-aspx-csharp[MenuCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuCtor/CS/menuctorcs.aspx#1)]
 [!code-aspx-vb[MenuCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuCtor/VB/menuctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="T:System.Web.UI.WebControls.PlaceHolder" />
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Der Ausgabestream, der HTML-Inhalte für den Client rendert.</param>
        <summary>Fügt dem angegebenen <see cref="T:System.Web.UI.HtmlTextWriter" />-Objekt die zu rendernden HTML-Attribute und -Stile hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.Menu> -Steuerelement überschreibt die <xref:System.Web.UI.WebControls.WebControl.AddAttributesToRender%2A> -Methode zum Zurücksetzen der <xref:System.Web.UI.WebControls.WebControl.AccessKey%2A> Eigenschaft <xref:System.String.Empty>. Bei diesem Member wird hauptsächlich von Steuerelemententwicklern beim Ableiten eines benutzerdefinierten Steuerelements aus der <xref:System.Web.UI.WebControls.Menu> Klasse.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public override System.Web.UI.ControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.Controls" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Controls As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ControlCollection ^ Controls { System::Web::UI::ControlCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine <see cref="T:System.Web.UI.ControlCollection" /> ab, die die untergeordneten Steuerelemente des <see cref="T:System.Web.UI.WebControls.Menu" />-Steuerelements enthält.</summary>
        <value>Eine <see cref="T:System.Web.UI.ControlCollection" />, die die untergeordneten Steuerelemente enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.Menu.Controls%2A> Eigenschaft ermöglicht den programmgesteuerten Zugriff auf die Instanz von der <xref:System.Web.UI.ControlCollection> -Klasse für die <xref:System.Web.UI.WebControls.Menu> Steuerelement. Sie können Steuerelemente zur Auflistung hinzufügen, entfernen Sie Steuerelemente aus der Auflistung oder die Serversteuerelemente in der Auflistung durchlaufen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected internal override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.CreateChildControls" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub CreateChildControls ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void CreateChildControls();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt untergeordnete Steuerelemente eines <see cref="T:System.Web.UI.WebControls.Menu" />-Steuerelements.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member wird hauptsächlich von Steuerelemententwicklern beim Ableiten eines benutzerdefinierten Steuerelements aus der <xref:System.Web.UI.WebControls.Menu> Klasse.  
  
 Diese Methode wird aufgerufen, durch die ASP.NET-Infrastruktur, um alle Steuerelemente benachrichtigen, dass kompositionsbasierte Implementierung, einschließlich Steuerelemente, die Ableitung <xref:System.Web.UI.WebControls.CompositeDataBoundControl> und <xref:System.Web.UI.WebControls.CompositeControl>. Um alle untergeordneten Steuerelemente zu erstellen, enthalten sie als Vorbereitung für das Postback oder Rendering.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="public override sealed void DataBind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DataBind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.DataBind" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub DataBind ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void DataBind();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Bindet die Datenquelle an das <see cref="T:System.Web.UI.WebControls.Menu" />-Steuerelement. Diese Methode kann nicht vererbt werden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Element wird hauptsächlich von Steuerelemententwicklern verwendet beim Ableiten eines benutzerdefinierten Steuerelements aus der <xref:System.Web.UI.WebControls.Menu> Klasse.  
  
 Verwenden der <xref:System.Web.UI.WebControls.Menu.DataBind%2A> Methode, um Daten aus einer Datenquelle zu binden die <xref:System.Web.UI.WebControls.Menu> Steuerelement. Diese Methode löst alle Datenbindungsausdrücke in der aktiven Vorlage des Steuerelements.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Datengebundene Steuerelemente sollten überschreiben <see cref="M:System.Web.UI.WebControls.Menu.PerformDataBinding" /> anstelle von <see cref="M:System.Web.UI.WebControls.Menu.DataBind" />. Wenn <see cref="M:System.Web.UI.WebControls.Menu.DataBind" /> überschrieben wird, die <see cref="M:System.Web.UI.WebControls.Menu.OnDataBinding(System.EventArgs)" /> und <see cref="M:System.Web.UI.WebControls.BaseDataBoundControl.OnDataBound(System.EventArgs)" /> Ereignisse in der falschen Reihenfolge ausgelöst werden.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DataBindings">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemBindingCollection DataBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemBindingCollection DataBindings" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DataBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataBindings As MenuItemBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItemBindingCollection ^ DataBindings { System::Web::UI::WebControls::MenuItemBindingCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.MenuBindingsEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Auflistung von <see cref="T:System.Web.UI.WebControls.MenuItemBinding" />-Objekten ab, die die Beziehung zwischen einem Datenelement und dem Menüelement, an das es gebunden werden soll, definieren.</summary>
        <value>Eine <see cref="T:System.Web.UI.WebControls.MenuItemBindingCollection" />, die die Beziehung zwischen einem Datenelement und dem Menüelement, an das es gebunden werden soll, darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.Menu.DataBindings%2A> Auflistung enthält <xref:System.Web.UI.WebControls.MenuItemBinding> Objekten, definieren die Beziehung zwischen einem Datenelement und dem Menüelement, das es werden soll gebunden. Beim Binden an eine Datenquelle, in dem jedes Datenelement enthält mehrere Eigenschaften (z. B. ein XML-Element mit mehreren Attributen), ein Menüelement zeigt den Rückgabewert von an das `ToString()` Methode des Datenelements in der Standardeinstellung. Im Fall einer XML-Element zeigt das Menüelement den Elementnamen, die die zugrunde liegende Struktur des Baums, sondern ist andernfalls nicht sehr sinnvoll. Sie können ein Menüelement zu einer Elementeigenschaft für bestimmte Daten binden, indem Sie Bindungen von Menü Element angeben.  
  
 Wenn Sie die Beziehung zwischen einem Datenelement und ein Menüelement zu definieren, müssen Sie die Kriterien für die Bindung und die Eigenschaft eines Datenelements, zum Binden an angeben. Die Kriterien angeben, wann ein Datenelement an ein Menüelement gebunden werden soll. Die Kriterien können mit einer Tiefe, einen Datenmember oder beides angegeben werden. Die Tiefe gibt an, die im Menüebene, die gebunden wird. Z. B. Wenn Sie eine Tiefe von 0 angeben, werden alle Menüelemente in der Struktur auf der Ebene 0 gebunden mithilfe der Binding des Menüelements. Ein Datenmember gibt den Typ des Datenelements in der zugrunde liegenden Datenquelle, aber Sie können unterschiedliche Informationen je nach Datenquelle dar. Das Datenelement für ein XML-Element gibt z. B. den Namen des Elements.  
  
 Wenn mehrere <xref:System.Web.UI.WebControls.MenuItemBinding> Objekte werden definiert, die miteinander in Konflikt stehen die <xref:System.Web.UI.WebControls.Menu> Steuerelement der Menü-Element-Bindungen in der folgenden Reihenfolge angewendet:  
  
1.  Die <xref:System.Web.UI.WebControls.MenuItemBinding> Objekt, das eine Tiefe und ein Datenmember definiert.  
  
2.  Die <xref:System.Web.UI.WebControls.MenuItemBinding> -Objekt, das nur die Tiefe definiert.  
  
3.  Die <xref:System.Web.UI.WebControls.MenuItemBinding> Objekt, das nur den Datenmember definiert.  
  
4.  Die <xref:System.Web.UI.WebControls.MenuItemBinding> Objekt, das weder die Tiefe noch den Datenmember definiert.  
  
 Wenn die Bindungskriterien hergestellt werden, können Sie eine Eigenschaft Binden einer <xref:System.Web.UI.WebControls.MenuItem> -Objekt, das auf ein Attribut oder ein Feld eines Datenelements gebunden werden kann. Sie können z. B. Binden der <xref:System.Web.UI.WebControls.MenuItem.Text%2A> Eigenschaft eines Menüelements, Text-Attributs auf ein XML-Element durch Festlegen der <xref:System.Web.UI.WebControls.MenuItemBinding.TextField%2A> Eigenschaft ein <xref:System.Web.UI.WebControls.MenuItemBinding> Objekt. Sie können auch in einen statischen Wert binden. Wenn Sie festlegen der <xref:System.Web.UI.WebControls.MenuItemBinding.Text%2A> Eigenschaft eine <xref:System.Web.UI.WebControls.MenuItemBinding> -Objekt, das alle Menüelemente, die <xref:System.Web.UI.WebControls.MenuItemBinding> Objekt angewendet wird die gleiche statische Textwert. Weitere Informationen zum Binden der Eigenschaften von einer <xref:System.Web.UI.WebControls.MenuItem> -Objekts auf einen Wert, finden Sie unter <xref:System.Web.UI.WebControls.MenuItemBinding>.  
  
 Obwohl die <xref:System.Web.UI.WebControls.Menu.DataBindings%2A> Auflistung programmgesteuert gefüllt werden kann, in der Regel deklarativ festgelegt. Zum Angeben der Menü-Element-Bindungen zuerst schachteln, öffnende und schließende `<DataBindings>` zwischen dem Start- und Endtag des Tags der <xref:System.Web.UI.WebControls.Menu> Steuerelement. Platzieren Sie als Nächstes `<asp:MenuItemBinding>` Elemente zwischen den öffnenden und schließenden `<DataBindings>` Tags für jedes Menüelement binden Sie angeben möchten.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Menu.DataBindings%2A> zum Definieren der Beziehung zwischen den Feldern der Auflistung ein <xref:System.Web.UI.WebControls.XmlDataSource> Steuerelement und die Menüelemente im eine <xref:System.Web.UI.WebControls.Menu> Steuerelement. Für dieses Beispiel ordnungsgemäß funktioniert müssen Sie die nachfolgenden Beispiel XML-Daten in eine Datei mit dem Namen Map.xml kopieren.  
  
 [!code-aspx-csharp[MenuBindings#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuBindings/CS/menubindingscs.aspx#1)]
 [!code-aspx-vb[MenuBindings#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuBindings/VB/menubindingsvb.aspx#1)]  
  
 Im folgenden finden Beispiel-Siteübersichtsdaten für das vorherige Beispiel.  
  
```  
<MapHomeNode url="~\Home.aspx"   
  title="Home"  
  description="Home">  
  <MapNode url="~\Music.aspx"  
    title="Music"  
    description="Music">  
    <MapNode url="~\Classical.aspx"   
      title="Classical"  
      description="Classical"/>  
    <MapNode url="~\Rock.aspx"  
      title="Rock"  
      description="Rock"/>  
    <MapNode url="~\Jazz.aspx"  
      title="Jazz"  
      description="Jazz"/>  
  </MapNode>  
  <MapNode url="~\Movies.aspx"  
    title="Movies"  
    description="Movies">  
    <MapNode url="~\Action.aspx"  
      title="Action"  
      description="Action"/>  
    <MapNode url="~\Drama.aspx"  
      title="Drama"  
      description="Drama"/>  
    <MapNode url="~\Musical.aspx"  
      title="Musical"  
      description="Musical"/>  
  </MapNode>  
</MapHomeNode>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.MenuItemBinding" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItemBindingCollection" />
      </Docs>
    </Member>
    <Member MemberName="DisappearAfter">
      <MemberSignature Language="C#" Value="public int DisappearAfter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DisappearAfter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DisappearAfter" />
      <MemberSignature Language="VB.NET" Value="Public Property DisappearAfter As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DisappearAfter { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(500)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Zeitspanne ab, in der ein dynamisches Menü noch angezeigt wird, nachdem der Mauszeiger nicht mehr auf dem Menü positioniert ist, oder legt diese Zeitspanne fest.</summary>
        <value>Die Zeitspanne (in Millisekunden), in der ein dynamisches Menü noch angezeigt wird, nachdem der Mauszeiger nicht mehr auf dem Menü positioniert ist. Der Standard ist 500.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Standardmäßig wird ein dynamisches Menü automatisch nach einer bestimmten Zeit, wenn der Mauszeiger nicht mehr auf dem Menü positioniert ist, ausgeblendet. Verwenden der <xref:System.Web.UI.WebControls.Menu.DisappearAfter%2A> Eigenschaft, um den Zeitraum anzugeben.  
  
> [!NOTE]
>  Ein dynamisches Menü verschwindet sofort, wenn der Benutzer außerhalb der Menü klickt.  
  
 Sie können auch angeben, dass ein dynamisches Menü niemals automatisch ausgeblendet wird durch Festlegen dieser Eigenschaft auf-1 festgelegt. In diesem Fall wird die dynamischen Menüelements nur klickt der Benutzer außerhalb des Menüs nicht mehr angezeigt.  
  
 Diese Eigenschaft kann nicht durch Designs oder Stylesheetdesigns festgelegt werden. Weitere Informationen finden Sie unter <xref:System.Web.UI.ThemeableAttribute> und [ASP.NET-Designs und Skins](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Menu.DisappearAfter%2A> Eigenschaft, um anzugeben, dass ein dynamisches Menü ausgeblendet werden sollte, nachdem der Benutzer mit dem Mauszeiger auf das Menü für mehr als zwei Sekunden verschoben.  
  
 [!code-aspx-csharp[MenuDisappearAfter#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDisappearAfter/CS/menudisappearaftercs.aspx#1)]
 [!code-aspx-vb[MenuDisappearAfter#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDisappearAfter/VB/menudisappearaftervb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der ausgewählte Wert ist kleiner als -1.</exception>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
      </Docs>
    </Member>
    <Member MemberName="DynamicBottomSeparatorImageUrl">
      <MemberSignature Language="C#" Value="public string DynamicBottomSeparatorImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DynamicBottomSeparatorImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicBottomSeparatorImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DynamicBottomSeparatorImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine URL zu einem Bild ab oder legt die URL zu einem Bild fest, das am unteren Rand jedes dynamischen Menüelements angezeigt werden soll, um das Menüelement von anderen Menüelementen abzugrenzen.</summary>
        <value>Die URL zu einem Trennbild, das am unteren Rand jedes dynamischen Menüelements angezeigt wird. Der Standardwert ist eine leere Zeichenfolge (""), die angibt, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl%2A> Eigenschaft an einem optionalen benutzerdefinierten Bild am unteren Rand jedes dynamischen Menüelements angezeigt werden soll. Dieses Bild fungiert als Trennzeichen zwischen den Menüelementen und ist häufig ein Bild von einer Zeile.  
  
> [!NOTE]
>  Sie können auch einem Trennbild, das am oberen Rand jedes dynamischen Menüelements anzeigen, durch Festlegen der <xref:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl%2A> Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl%2A> Eigenschaft zu einem Trennbild, das am unteren Rand jedes dynamischen Menüelements angezeigt.  
  
 [!code-aspx-csharp[MenuDynamicBottomSeparatorImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicBottomSeparatorImageUrl/CS/menudynamicbottomseparatorimageurlcs.aspx#1)]
 [!code-aspx-vb[MenuDynamicBottomSeparatorImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicBottomSeparatorImageUrl/VB/menudynamicbottomseparatorimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="DynamicEnableDefaultPopOutImage">
      <MemberSignature Language="C#" Value="public bool DynamicEnableDefaultPopOutImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DynamicEnableDefaultPopOutImage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicEnableDefaultPopOutImage As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DynamicEnableDefaultPopOutImage { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab oder legt den Wert fest, der angibt, ob das integrierte Bild angezeigt wird, das darauf hinweist, dass ein dynamisches Menüelement über ein Untermenü verfügt.</summary>
        <value>
          <see langword="true" />, um das integrierte Bild für dynamische Menüelemente mit Untermenüs anzuzeigen, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn ein dynamisches Menüelement über ein Untermenü enthält, kann ein Bild angezeigt werden, um anzugeben, dass der Benutzer das Menü erweitert werden kann, durch positionieren den Mauszeiger über das Menüelement. Es gibt zwei Möglichkeiten zur Anzeige dieses Bilds:  
  
-   Legen Sie die <xref:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage%2A> Eigenschaft `true` verwenden Sie das integrierte Bild (Standard).  
  
-   Legen Sie die <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A> Eigenschaft, um ein benutzerdefiniertes Bild anzugeben.  
  
 Wenn die <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A> festgelegt wird, überschreibt dieses Bild das integrierte Bild.  
  
> [!NOTE]
>  Wenn die <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A> Eigenschaft nicht festgelegt ist und die <xref:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage%2A> -Eigenschaftensatz auf `false`, kein Bild angezeigt wird.  
  
 Geben Sie den alternativen Text für das Bild, durch Festlegen der <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString%2A> Eigenschaft. Dieser Text wird als QuickInfo angezeigt, wenn der Benutzer den Mauszeiger über dem Bild positioniert. Dieser Text enthält auch Geräte mit hilfstechnologie mit einer Beschreibung des Abbilds, das verwendet werden kann, um das Steuerelement leichter zugänglich machen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage%2A> Eigenschaft, um das Bild auszublenden, der angibt, dass ein dynamisches Menüelement über ein Untermenü verfügt. Die <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A> Eigenschaft muss ebenfalls festgelegt werden, auf eine leere Zeichenfolge ("") für das Bild ausgeblendet werden.  
  
 [!code-aspx-csharp[MenuDynamicEnableDefaultPopOutImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicEnableDefaultPopOutImage/CS/menudynamicenabledefaultpopoutimagecs.aspx#1)]
 [!code-aspx-vb[MenuDynamicEnableDefaultPopOutImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicEnableDefaultPopOutImage/VB/menudynamicenabledefaultpopoutimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="DynamicHorizontalOffset">
      <MemberSignature Language="C#" Value="public int DynamicHorizontalOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DynamicHorizontalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicHorizontalOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicHorizontalOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DynamicHorizontalOffset { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der Pixel ab, um die ein dynamisches Menü relativ zu seinem übergeordneten Menüelement horizontal verschoben werden soll, oder legt diese Anzahl fest.</summary>
        <value>Die Anzahl der Pixel, um die ein dynamisches Menü relativ zu seinem übergeordneten Menüelement horizontal verschoben werden soll. Der Standard ist 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.Menu.DynamicHorizontalOffset%2A> Eigenschaft, um die horizontale Position des ein dynamisches Menü relativ zu seinem übergeordneten Menüelement anzupassen. Diese Eigenschaft wirkt sich auf die Position eines dynamischen Menüs unterschiedlich, abhängig davon, ob die <xref:System.Web.UI.WebControls.Menu> Steuerelement angezeigt wird, vertikal oder horizontal (gemäß der <xref:System.Web.UI.WebControls.Menu.Orientation%2A> Eigenschaft). Die folgende Tabelle beschreibt die Unterschiede.  
  
|Ausrichtung|Beschreibung |  
|-----------------|-----------------|  
|Horizontal|Standardmäßig wird ein dynamisches Menü direkt unter seinem übergeordneten Menüelement angezeigt. Durch Festlegen dieser Eigenschaft verschiebt die Position des dynamischen Menüs horizontal aus dieser Basis Position.|  
|Vertikal|Standardmäßig wird ein dynamisches Menüelement neben seinem übergeordneten Menüelement ohne die Leerzeichen dazwischen angezeigt. Wenn diese Eigenschaft steuert den horizontalen Abstand zwischen dem dynamischen Menü und seinem übergeordneten Menüelement.|  
  
> [!NOTE]
>  Sie können diese Eigenschaft auf einen negativen Wert um ein dynamisches Menü in einer negativen Richtung verschoben festlegen. Wenn Sie ein vertikales Menü anzeigen, ein negativer Wert bewirkt, dass ein dynamisches Menü und seinem übergeordneten Menüelement überlappen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Menu.DynamicHorizontalOffset%2A> Eigenschaft, um eine 5-Pixel-Lücke zwischen einem dynamischen Menü und seinem übergeordneten Menüelement anzugeben.  
  
 [!code-aspx-csharp[MenuDynamicHorizontalOffset#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicHorizontalOffset/CS/menudynamichorizontaloffsetcs.aspx#1)]
 [!code-aspx-vb[MenuDynamicHorizontalOffset#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicHorizontalOffset/VB/menudynamichorizontaloffsetvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicVerticalOffset" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSubMenuIndent" />
      </Docs>
    </Member>
    <Member MemberName="DynamicHoverStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style DynamicHoverStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style DynamicHoverStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DynamicHoverStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ DynamicHoverStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf das <see cref="T:System.Web.UI.WebControls.Style" />-Objekt ab, mit dem Sie die Darstellung eines dynamischen Menüelements, während ein Mauszeiger darauf positioniert ist, festlegen können.</summary>
        <value>Ein Verweis auf den <see cref="T:System.Web.UI.WebControls.Style" />, der das Format eines dynamischen Menüelements darstellt, während der Mauszeiger darauf positioniert ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A> Eigenschaft, um die Darstellung eines dynamischen Menüelements steuern, wenn der Mauszeiger darauf positioniert ist. Diese Eigenschaft ist schreibgeschützt. Sie können jedoch die Eigenschaften der Festlegen der <xref:System.Web.UI.WebControls.Style> -Objekt wird zurückgegeben. Die Eigenschaften können deklarativ festgelegt werden, in der Form `Property-Subproperty`, wobei `Subproperty` ist eine Eigenschaft der <xref:System.Web.UI.WebControls.Style> Objekt (z. B. `DynamicHoverStyle-ForeColor`). Die Eigenschaften können auch programmgesteuert in das Formular festgelegt werden `Property.Subproperty` (z. B. `DynamicHoverStyle.ForeColor`).  
  
 Stileigenschaften für ein dynamisches Menüelement werden in der folgenden Reihenfolge angewendet:  
  
1.  <xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A>  
  
2.  <xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A> Wenn die <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> Auflistung oder <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> Auflistung definiert ist, es ist zu diesem Zeitpunkt angewendet, überschreiben die anderen Formateigenschaften des Elements.  
  
3.  <xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A> Wenn die <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> Auflistung definiert ist, es ist zu diesem Zeitpunkt angewendet, überschreiben die anderen Formateigenschaften des Elements.  
  
4.  <xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A>  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A> Eigenschaft, um die Farbe des Hintergrunds eines dynamischen Menüelements in ein helles Blau zu ändern, wenn den Mauszeiger darauf positioniert.  
  
 [!code-aspx-csharp[MenuDynamicHoverStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicHoverStyle/CS/menudynamichoverstylecs.aspx#1)]
 [!code-aspx-vb[MenuDynamicHoverStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicHoverStyle/VB/menudynamichoverstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="DynamicItemFormatString">
      <MemberSignature Language="C#" Value="public string DynamicItemFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DynamicItemFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicItemFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicItemFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DynamicItemFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft zusätzlichen Text ab, der für alle dynamisch angezeigten Menüelemente angezeigt wird, oder legt diesen fest.</summary>
        <value>Der zusätzliche Text oder die zusätzlichen Zeichen, der bzw. die für alle Menüelemente angezeigt werden. Der Standardwert für diese Eigenschaft ist "{0}."</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft kann zum Einfügen von Text zum Formatieren der dynamischen Menüelemente in einem Menü angezeigt, die auf mobilen Geräten verwendet werden. Die <xref:System.Web.UI.WebControls.Menu> Steuerelement Vorlagen für die Anzeige von statischen und dynamischen Menüelementen unterstützt. Für mobile Geräte sind Vorlagen ignoriert, sodass diese Eigenschaft Ihnen das Zeichen oder Text ermöglicht zu formatieren, Menüelemente ohne Verwendung einer Vorlage hinzufügen.  
  
> [!NOTE]
>  Sie sollten auch festlegen, um zu erreichen, konsistent formatieren, wenn Sie diese Eigenschaft verwenden, die <xref:System.Web.UI.WebControls.Menu.StaticItemFormatString%2A> Eigenschaft, wenn Sie die Formatierung, um die statischen und dynamischen Menüelemente identisch sein möchten.  
  
 Wenn die Vorlage zu formatieren und diese Eigenschaft angewendet werden, wird die Formatierung der Vorlage für mobile Geräte ignoriert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Menu.StaticItemFormatString%2A> und <xref:System.Web.UI.WebControls.Menu.DynamicItemFormatString%2A> Eigenschaften jedes Menüelement Text hinzu.  
  
 [!code-aspx-csharp[MenuItemFormatString#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemFormatString/CS/menuitemformatstringcs.aspx#1)]
 [!code-aspx-vb[MenuItemFormatString#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemFormatString/VB/menuitemformatstringvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticItemFormatString" />
      </Docs>
    </Member>
    <Member MemberName="DynamicItemTemplate">
      <MemberSignature Language="C#" Value="public System.Web.UI.ITemplate DynamicItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate DynamicItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ITemplate ^ DynamicItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.MenuItemTemplateContainer))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Vorlage mit benutzerdefinierten Inhalten ab, die für ein dynamisches Menü gerendert werden sollen, oder legt diese fest.</summary>
        <value>Eine <see cref="T:System.Web.UI.ITemplate" />, die benutzerdefinierte Inhalte für ein dynamisches Menü enthält. Der Standardwert ist null (0). Dies bedeutet, dass diese Eigenschaft nicht festgelegt wurde.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Anstatt die integrierte Darstellung für ein dynamisches Menü zu verwenden, können Sie eigene Aussehen und Verhalten für ein dynamisches Menüelement definieren, mit der <xref:System.Web.UI.WebControls.Menu.DynamicItemTemplate%2A> Eigenschaft. Um eine benutzerdefinierte Vorlage für ein dynamisches Menüelement angeben möchten, platzieren Sie zuerst `<DynamicItemTemplate>` zwischen dem Start- und Endtag des Tags der <xref:System.Web.UI.WebControls.Menu> Steuerelement. Anschließend können Sie den Inhalt der Vorlage zwischen den öffnenden und schließenden auflisten `<DynamicItemTemplate>` Tags. Sie können das Format eines dynamischen Menüs weiter steuern, indem Sie mit der <xref:System.Web.UI.WebControls.Menu.DynamicItemFormatString%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicItemFormatString" />
      </Docs>
    </Member>
    <Member MemberName="DynamicMenuItemStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemStyle DynamicMenuItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemStyle DynamicMenuItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DynamicMenuItemStyle As MenuItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItemStyle ^ DynamicMenuItemStyle { System::Web::UI::WebControls::MenuItemStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf das <see cref="T:System.Web.UI.WebControls.MenuItemStyle" />-Objekt ab, mit dem Sie die Darstellung der Menüelemente in einem dynamischen Menü festlegen können.</summary>
        <value>Ein Verweis auf den <see cref="T:System.Web.UI.WebControls.MenuItemStyle" />, der das Format der Menüelemente in einem dynamischen Menü darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A> Eigenschaft, um die Darstellung der Menüelemente in einem dynamischen Menü zu steuern. Diese Eigenschaft ist schreibgeschützt. Sie können jedoch die Eigenschaften der Festlegen der <xref:System.Web.UI.WebControls.MenuItemStyle> -Objekt wird zurückgegeben. Die Eigenschaften können deklarativ festgelegt werden, in der Form `Property-Subproperty`, wobei `Subproperty` ist eine Eigenschaft der <xref:System.Web.UI.WebControls.MenuItemStyle> Objekt (z. B. `DynamicMenuItemStyle-ForeColor`). Die Eigenschaften können auch programmgesteuert in das Formular festgelegt werden `Property.Subproperty` (z. B. `DynamicMenuItemStyle.ForeColor`).  
  
 Stileigenschaften für ein dynamisches Menüelement werden in der folgenden Reihenfolge angewendet:  
  
1.  <xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A>  
  
2.  <xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A> Wenn die <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> Auflistung oder <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> Auflistung definiert ist, es ist zu diesem Zeitpunkt angewendet, überschreiben die anderen Formateigenschaften des Elements.  
  
3.  <xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A> Wenn die <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> Auflistung definiert ist, es ist zu diesem Zeitpunkt angewendet, überschreiben die anderen Formateigenschaften des Elements.  
  
4.  <xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A>  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A> Eigenschaft, um ein helles Blau Hintergrundfarbe der Menüelemente in einem dynamischen Menü anzugeben.  
  
 [!code-aspx-csharp[MenuDynamicMenuItemStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/menudynamicmenuitemstyle/CS/MenuDynamicMenuItemStylecs.aspx#1)]
 [!code-aspx-vb[MenuDynamicMenuItemStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/menudynamicmenuitemstyle/VB/MenuDynamicMenuItemStylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="DynamicMenuStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SubMenuStyle DynamicMenuStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.SubMenuStyle DynamicMenuStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DynamicMenuStyle As SubMenuStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SubMenuStyle ^ DynamicMenuStyle { System::Web::UI::WebControls::SubMenuStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SubMenuStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf das <see cref="T:System.Web.UI.WebControls.MenuItemStyle" />-Objekt ab, mit dem Sie die Darstellung eines dynamischen Menüs festlegen können.</summary>
        <value>Ein Verweis auf den <see cref="T:System.Web.UI.WebControls.MenuItemStyle" />, der das Format eines dynamischen Menüs darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A> Eigenschaft, um die Darstellung eines dynamischen Menüs zu steuern. Diese Eigenschaft ist schreibgeschützt. Sie können jedoch die Eigenschaften der Festlegen der <xref:System.Web.UI.WebControls.MenuItemStyle> -Objekt wird zurückgegeben. Die Eigenschaften können deklarativ festgelegt werden, in der Form `Property-Subproperty`, wobei `Subproperty` ist eine Eigenschaft der <xref:System.Web.UI.WebControls.MenuItemStyle> Objekt (z. B. `DynamicMenuStyle-ForeColor`). Die Eigenschaften können auch programmgesteuert in das Formular festgelegt werden `Property.Subproperty` (z. B. `DynamicMenuStyle.ForeColor`).  
  
 Stileigenschaften für ein dynamisches Menüelement werden in der folgenden Reihenfolge angewendet:  
  
1.  <xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A>  
  
2.  <xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A> Wenn die <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> Auflistung oder <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> Auflistung definiert ist, es ist zu diesem Zeitpunkt angewendet, überschreiben die anderen Formateigenschaften des Elements.  
  
3.  <xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A> Wenn die <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> Auflistung definiert ist, es ist zu diesem Zeitpunkt angewendet, überschreiben die anderen Formateigenschaften des Elements.  
  
4.  <xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A>  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A> -Eigenschaft ein helles Blau als Hintergrundfarbe für ein dynamisches Menü an.  
  
 [!code-aspx-csharp[MenuDynamicMenuStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicMenuStyle/CS/menudynamicmenustylecs.aspx#1)]
 [!code-aspx-vb[MenuDynamicMenuStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicMenuStyle/VB/menudynamicmenustylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="DynamicPopOutImageTextFormatString">
      <MemberSignature Language="C#" Value="public string DynamicPopOutImageTextFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DynamicPopOutImageTextFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicPopOutImageTextFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DynamicPopOutImageTextFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den alternativen Text für das Bild ab, das angibt, dass ein dynamisches Menüelement über ein Untermenü verfügt, oder legt diesen Text fest.</summary>
        <value>Der alternative Text für das Bild, das angibt, dass ein dynamisches Menüelement über ein Untermenü verfügt. Der Standardwert ist eine leere Zeichenfolge ("") und gibt an, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn ein dynamisches Menüelement über ein Untermenü enthält, kann ein Bild angezeigt werden, um anzugeben, dass der Benutzer das Menü erweitert werden kann. Verwenden der <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString%2A> Eigenschaft, um den alternativen Text für dieses Bild anzugeben. Der Text, den Sie angeben, enthält Geräte mit hilfstechnologie mit einer Beschreibung des Abbilds, das verwendet werden kann, um das Steuerelement leichter zugänglich machen.  
  
 Es gibt zwei Möglichkeiten zur Anzeige des Bilds:  
  
-   Legen Sie die <xref:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage%2A> Eigenschaft `true` verwenden Sie das integrierte Bild (Standard).  
  
-   Legen Sie die <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A> Eigenschaft, um ein benutzerdefiniertes Bild anzugeben.  
  
> [!NOTE]
>  Diese Eigenschaft gilt für das integrierte Bild und des benutzerdefinierten Images.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString%2A> -Eigenschaft geben Sie den alternativen Text für das Bild verwendet, um anzugeben, dass ein dynamisches Menüelement über ein Untermenü verfügt. Dieser Text wird als QuickInfo angezeigt, wenn der Benutzer den Mauszeiger über dem Bild positioniert.  
  
 [!code-aspx-csharp[MenuDynamicPopoutImageText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicPopoutImageText/CS/menudynamicpopoutimagetextcs.aspx#1)]
 [!code-aspx-vb[MenuDynamicPopoutImageText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicPopoutImageText/VB/menudynamicpopoutimagetextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="DynamicPopOutImageUrl">
      <MemberSignature Language="C#" Value="public string DynamicPopOutImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DynamicPopOutImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicPopOutImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DynamicPopOutImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die URL zu einem benutzerdefinierten Bild ab, das in einem dynamischen Menüelement angezeigt wird, wenn dieses über ein Untermenü verfügt, oder legt diese URL fest.</summary>
        <value>Die URL zu einem Bild, mit dem angegeben wird, dass ein dynamisches Menüelement über ein Untermenü verfügt. Der Standardwert ist eine leere Zeichenfolge (""), die angibt, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn ein dynamisches Menüelement über ein Untermenü enthält, kann ein Bild angezeigt werden, um anzugeben, dass der Benutzer das Menü erweitert werden kann, durch positionieren den Mauszeiger über das Menüelement. Es gibt zwei Möglichkeiten zur Anzeige dieses Bilds:  
  
-   Legen Sie die <xref:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage%2A> Eigenschaft `true` verwenden Sie das integrierte Bild (Standard).  
  
-   Legen Sie die <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A> Eigenschaft, um ein benutzerdefiniertes Bild anzugeben.  
  
 Wenn die <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A> festgelegt wird, überschreibt dieses Bild das integrierte Bild.  
  
 Wenn die <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A> Eigenschaft nicht festgelegt ist und die <xref:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage%2A> -Eigenschaftensatz auf `false`, kein Bild angezeigt wird.  
  
> [!NOTE]
>  Wenn Sie diese Eigenschaft festlegen, verwenden Sie einen Schrägstrich (/) anstelle von einem umgekehrten Schrägstrich (\\). Wenn Sie umgekehrte Schrägstriche im Pfad verwenden, wird das angegebene Bild nicht angezeigt.  
  
 Geben Sie den alternativen Text für das Bild, durch Festlegen der <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString%2A> Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A> -Eigenschaft an ein benutzerdefiniertes Bild angezeigt, in ein dynamisches Menüelement, um anzugeben, dass das Menüelement über ein Untermenü verfügt.  
  
 [!code-aspx-csharp[MenuDynamicPopoutImageText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicPopoutImageText/CS/menudynamicpopoutimagetextcs.aspx#1)]
 [!code-aspx-vb[MenuDynamicPopoutImageText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicPopoutImageText/VB/menudynamicpopoutimagetextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="DynamicSelectedStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemStyle DynamicSelectedStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemStyle DynamicSelectedStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DynamicSelectedStyle As MenuItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItemStyle ^ DynamicSelectedStyle { System::Web::UI::WebControls::MenuItemStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf das <see cref="T:System.Web.UI.WebControls.MenuItemStyle" />-Objekt ab, mit dem Sie die Darstellung des vom Benutzer ausgewählten dynamischen Menüelements festlegen können.</summary>
        <value>Ein Verweis auf den <see cref="T:System.Web.UI.WebControls.MenuItemStyle" />, der das Format des ausgewählten dynamischen Menüelements darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A> Eigenschaft, um die Darstellung eines dynamischen Menüelements steuern, wenn der Benutzer aus dem Menü auswählt. Diese Eigenschaft ist schreibgeschützt. Sie können jedoch die Eigenschaften der Festlegen der <xref:System.Web.UI.WebControls.MenuItemStyle> -Objekt wird zurückgegeben. Die Eigenschaften können deklarativ festgelegt werden, in der Form `Property-Subproperty`, wobei `Subproperty` ist eine Eigenschaft der <xref:System.Web.UI.WebControls.MenuItemStyle> Objekt (z. B. `DynamicSelectedStyle-ForeColor`). Die Eigenschaften können auch programmgesteuert in das Formular festgelegt werden `Property.Subproperty` (z. B. `DynamicSelectedStyle.ForeColor`).  
  
 Stileigenschaften für ein dynamisches Menüelement werden in der folgenden Reihenfolge angewendet:  
  
1.  <xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A>  
  
2.  <xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A> Wenn die <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> Auflistung oder <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> Auflistung definiert ist, es ist zu diesem Zeitpunkt angewendet, überschreiben die anderen Formateigenschaften des Elements.  
  
3.  <xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A> Wenn die <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> Auflistung definiert ist, es ist zu diesem Zeitpunkt angewendet, überschreiben die anderen Formateigenschaften des Elements.  
  
4.  <xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A>  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A> Eigenschaft eine hellblauen Hintergrund versehen Farbe für den ausgewählten dynamischen Menüelements festlegen.  
  
 [!code-aspx-csharp[MenuDynamicSelectedStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicSelectedStyle/CS/menudynamicselectedstylecs.aspx#1)]
 [!code-aspx-vb[MenuDynamicSelectedStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicSelectedStyle/VB/menudynamicselectedstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="DynamicTopSeparatorImageUrl">
      <MemberSignature Language="C#" Value="public string DynamicTopSeparatorImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DynamicTopSeparatorImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicTopSeparatorImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DynamicTopSeparatorImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine URL zu einem Bild ab oder legt die URL zu einem Bild fest, das am oberen Rand jedes dynamischen Menüelements angezeigt werden soll, um das Menüelement von anderen Menüelementen abzugrenzen.</summary>
        <value>Die URL zu einem Trennbild, das am oberen Rand jedes dynamischen Menüelements angezeigt wird. Der Standardwert ist eine leere Zeichenfolge (""), die angibt, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl%2A> Eigenschaft an einem optionalen benutzerdefinierten Bild am oberen Rand jedes dynamischen Menüelements angezeigt werden soll. Dieses Bild fungiert als Trennzeichen zwischen den Menüelementen und ist häufig ein Bild von einer Zeile.  
  
> [!NOTE]
>  Sie können auch einem Trennbild, das am unteren Rand jedes dynamischen Menüelements anzeigen, durch Festlegen der <xref:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl%2A> Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl%2A> Eigenschaft zu einem Trennbild, das am oberen Rand jedes dynamischen Menüelements angezeigt.  
  
 [!code-aspx-csharp[MenuDynamicTopSeparatorImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicTopSeparatorImageUrl/CS/menudynamictopseparatorimageurlcs.aspx#1)]
 [!code-aspx-vb[MenuDynamicTopSeparatorImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicTopSeparatorImageUrl/VB/menudynamictopseparatorimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="DynamicVerticalOffset">
      <MemberSignature Language="C#" Value="public int DynamicVerticalOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DynamicVerticalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicVerticalOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicVerticalOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DynamicVerticalOffset { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der Pixel ab, um die ein dynamisches Menü relativ zu seinem übergeordneten Menüelement vertikal verschoben werden soll, oder legt diese Anzahl fest.</summary>
        <value>Die Anzahl der Pixel, um die ein dynamisches Menü relativ zu seinem übergeordneten Menüelement vertikal verschoben werden soll. Der Standard ist 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.Menu.DynamicVerticalOffset%2A> Eigenschaft, um die vertikale Position der ein dynamisches Menü relativ zu seinem übergeordneten Menüelement anzupassen. Diese Eigenschaft wirkt sich auf die Position eines dynamischen Menüs unterschiedlich, abhängig davon, ob die <xref:System.Web.UI.WebControls.Menu> Steuerelement angezeigt wird, vertikal oder horizontal (gemäß der <xref:System.Web.UI.WebControls.Menu.Orientation%2A> Eigenschaft). Die folgende Tabelle beschreibt die Unterschiede.  
  
|Ausrichtung|Beschreibung |  
|-----------------|-----------------|  
|Horizontal|Standardmäßig wird ein dynamisches Menü direkt unter seinem übergeordneten Menüelement ohne die Leerzeichen dazwischen angezeigt. Wenn diese Eigenschaft steuert den vertikalen Abstand zwischen dem dynamischen Menü und seinem übergeordneten Menüelement.|  
|Vertikal|Standardmäßig wird ein dynamisches Menüelement neben seinem übergeordneten Menüelement mit die oberen Ränder ausgerichtet angezeigt. Durch Festlegen dieser Eigenschaft verlagert die dynamisches Menüposition vertikal aus dieser Basis Position.|  
  
> [!NOTE]
>  Sie können diese Eigenschaft auf einen negativen Wert um ein dynamisches Menü in einer negativen Richtung verschoben festlegen. Wenn Sie ein horizontales Menü anzeigen, ein negativer Wert bewirkt, dass ein dynamisches Menü und seinem übergeordneten Menüelement überlappen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Menu.DynamicVerticalOffset%2A> Eigenschaft, um ein dynamisches Menü 10 Pixel vom oberen Rand von seinem übergeordneten Menüelement verschoben nach unten.  
  
 [!code-aspx-csharp[MenuDynamicHorizontalOffset#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicHorizontalOffset/CS/menudynamichorizontaloffsetcs.aspx#1)]
 [!code-aspx-vb[MenuDynamicHorizontalOffset#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicHorizontalOffset/VB/menudynamichorizontaloffsetvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHorizontalOffset" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Orientation" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSubMenuIndent" />
      </Docs>
    </Member>
    <Member MemberName="EnsureDataBound">
      <MemberSignature Language="C#" Value="protected override void EnsureDataBound ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void EnsureDataBound() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.EnsureDataBound" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub EnsureDataBound ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void EnsureDataBound();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Überprüft vor dem Aufrufen der <see cref="M:System.Web.UI.WebControls.Menu.DataBind" />-Methode, ob für das Menüsteuerelement eine Datenbindung erforderlich ist und ob ein gültiges Datenquellen-Steuerelement angegeben wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Diese Methode wird hauptsächlich von Steuerelemententwicklern verwendet, zum Erweitern der <xref:System.Web.UI.WebControls.Menu> Steuerelement.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindItem">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItem FindItem (string valuePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.WebControls.MenuItem FindItem(string valuePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.FindItem(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindItem (valuePath As String) As MenuItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::WebControls::MenuItem ^ FindItem(System::String ^ valuePath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valuePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="valuePath">Der Wertpfad des abzurufenden Menüelements.</param>
        <summary>Ruft das Menüelement am angegebenen Wertpfad ab.</summary>
        <returns>Ein <see cref="T:System.Web.UI.WebControls.MenuItem" />, das das Menüelement am angegebenen Wertpfad darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.Menu.FindItem%2A> Methode zum Abrufen einer <xref:System.Web.UI.WebControls.MenuItem> -Objekt aus der <xref:System.Web.UI.WebControls.Menu> Steuerelement. Zum Abrufen der <xref:System.Web.UI.WebControls.MenuItem> -Objekt, müssen Sie einen Menüpfad im auf das Menüelement angeben. Der Menüpfad ist eine Zeichenfolge mit durch Trennzeichen getrennten Werten, die den Pfad aus einem Stamm-Menüelement mit dem aktuellen Menüelement zu bilden. Verwenden Sie zum Bestimmen der Trennzeichen die <xref:System.Web.UI.WebControls.Menu.PathSeparator%2A> Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Menu.FindItem%2A> Methode zum Abrufen eines Menüelements aus einem <xref:System.Web.UI.WebControls.Menu> Steuerelements am angegebenen Wertpfad.  
  
 [!code-aspx-csharp[MenuPathSeparator#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuPathSeparator/CS/menupathseparatorcs.aspx#1)]
 [!code-aspx-vb[MenuPathSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuPathSeparator/VB/menupathseparatorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.PathSeparator" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ValuePath" />
      </Docs>
    </Member>
    <Member MemberName="GetDesignModeState">
      <MemberSignature Language="C#" Value="protected override System.Collections.IDictionary GetDesignModeState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.IDictionary GetDesignModeState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.GetDesignModeState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetDesignModeState () As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::IDictionary ^ GetDesignModeState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft den Entwurfszeitzustand des <see cref="T:System.Web.UI.WebControls.Menu" />-Steuerelements ab.</summary>
        <returns>Ein <see cref="T:System.Collections.IDictionary" />, das den Entwurfszeitzustand des <see cref="T:System.Web.UI.WebControls.Menu" />-Steuerelements enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.Menu.GetDesignModeState%2A> Methode ist eine Hilfsmethode, die zum Abrufen der aktuellen Entwurfszeitzustand des verwendet die <xref:System.Web.UI.WebControls.Menu> Steuerelement.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="IncludeStyleBlock">
      <MemberSignature Language="C#" Value="public bool IncludeStyleBlock { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeStyleBlock" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.IncludeStyleBlock" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeStyleBlock As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeStyleBlock { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob von ASP.NET ein Block mit CSS (Cascading Stylesheets)-Definitionen für die im Menü verwendeten Formate gerendert werden soll.</summary>
        <value>Ein Wert, der angibt, ob von ASP.NET ein Block von CSS-Definitionen für die im Menü verwendeten Formate gerendert werden soll. Der Standardwert ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.Menu> Steuerelement CSS-Stilen zur Steuerung der Darstellung in einem Browser verwendet. Standardmäßig gibt es wieder eine `style` Element, das die CSS-Definitionen enthält, für die CSS-Klassen verwendet. Diese Eigenschaft in der Regel auf festlegen `false` in den folgenden Situationen:  
  
-   Geben Sie eigene CSS-Definitionen, um die Darstellung des Menüs anpassen möchten. Dann geben Sie Ihren eigenen Block von CSS-Definitionen auf der Seite, oder einen Link zu einer externen CSS-Datei, die die Definitionen enthält.  
  
-   Möchten die standarddarstellung beibehalten, jedoch die generierten CSS-Definitionen in einer separaten Datei beibehalten möchten. Sie müssen dann die Datei und den entsprechenden Link angeben.  
  
 In beiden Fällen können Sie einer Kopie des Standard-CSS-Blocks abrufen, der die <xref:System.Web.UI.WebControls.Menu> Steuerelement generiert, indem die Eigenschaft auf `true`, die Seite ausgeführt, und die Seite in einem Browser anzeigen. Sie können Anzeigen von Quellcode für die Seite im Browser und kopieren und fügen Sie den CSS-Block, in das Seitenmarkup oder in einer separaten Datei.  
  
 Wenn Sie diese Eigenschaft, um festlegen `false`, Sie können Formateigenschaften können nicht festgelegt. Angenommen, Sie können nicht hinzugefügt werden eine `DynamicHoverStyle-ForeColor` Attribut im Markup oder Festlegen der `DynamicHoverStyle.ForeColor` -Eigenschaft im Code.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemCollection Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemCollection Items" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As MenuItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItemCollection ^ Items { System::Web::UI::WebControls::MenuItemCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.MenuItemCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein <see cref="T:System.Web.UI.WebControls.MenuItemCollection" />-Objekt ab, das alle Menüelemente im <see cref="T:System.Web.UI.WebControls.Menu" />-Steuerelement enthält.</summary>
        <value>Eine <see cref="T:System.Web.UI.WebControls.MenuItemCollection" />, die alle Menüelemente im <see cref="T:System.Web.UI.WebControls.Menu" />-Steuerelement enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.Menu.Items%2A> -Eigenschaft (Auflistung) zum Abrufen einer <xref:System.Web.UI.WebControls.MenuItemCollection> -Objekt, das alle Elemente in einer <xref:System.Web.UI.WebControls.Menu> Steuerelement. Diese Auflistung wird häufig verwendet, schnell durchlaufen alle Menüelemente oder auf ein bestimmtes Menüelement zuzugreifen.  
  
 Die <xref:System.Web.UI.WebControls.Menu.Items%2A> Auflistung kann auch verwendet werden, um die Menüelemente programmgesteuert zu verwalten. Sie können hinzufügen, einfügen, entfernen und abrufen <xref:System.Web.UI.WebControls.MenuItem> Auflistungsobjekten. Alle Updates auf die Auflistung werden automatisch wiedergegeben werden, der <xref:System.Web.UI.WebControls.Menu> Steuerelement nach dem nächsten Roundtrip zum Server.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Menu.Items%2A> Auflistung zum Durchlaufen der Elemente in der <xref:System.Web.UI.WebControls.Menu> Steuerelement.  
  
 [!code-aspx-csharp[MenuItems#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItems/CS/menuitemscs.aspx#1)]
 [!code-aspx-vb[MenuItems#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItems/VB/menuitemsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItemCollection" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
      </Docs>
    </Member>
    <Member MemberName="ItemWrap">
      <MemberSignature Language="C#" Value="public bool ItemWrap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ItemWrap" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.ItemWrap" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemWrap As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ItemWrap { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Text für die Menüelemente umbrochen werden soll, oder legt diesen Wert fest.</summary>
        <value>
          <see langword="true" />, um den Menüelementtext zu umbrechen, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.Menu.ItemWrap%2A> Eigenschaft, um anzugeben, ob der Text in jedem Menüelement angezeigt umbrochen wird. Wenn der Text Speicherplatz verfügbar genügend ist automatisch aufgeteilt und in der folgenden Zeile fortgesetzt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Menu.ItemWrap%2A> Eigenschaft, um den Textumbruch im Aktivieren der <xref:System.Web.UI.WebControls.Menu> Steuerelement.  
  
 [!code-aspx-csharp[MenuItemWrap#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemWrap/CS/menuitemwrapcs.aspx#1)]
 [!code-aspx-vb[MenuItemWrap#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemWrap/VB/menuitemwrapvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Font" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.ForeColor" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHorizontalOffset" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicVerticalOffset" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSubMenuIndent" />
      </Docs>
    </Member>
    <Member MemberName="LevelMenuItemStyles">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemStyleCollection LevelMenuItemStyles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemStyleCollection LevelMenuItemStyles" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LevelMenuItemStyles As MenuItemStyleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItemStyleCollection ^ LevelMenuItemStyles { System::Web::UI::WebControls::MenuItemStyleCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemStyleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein <see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection" />-Objekt ab, das die Formateinstellungen enthält, die auf Grundlage der Ebene der Menüelemente in einem <see cref="T:System.Web.UI.WebControls.Menu" />-Steuerelement auf die Menüelemente angewendet werden.</summary>
        <value>Ein <see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection" />-Objekt, das die Formateinstellungen enthält, die auf Grundlage der Ebene der Menüelemente in einem <see cref="T:System.Web.UI.WebControls.Menu" />-Steuerelement auf die Menüelemente angewendet werden.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> Auflistung als Alternative zu den einzelnen Formateigenschaften (z. B. <xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A>) um das Format der Menüelemente auf den einzelnen Ebenen des Menüs zu steuern. Die Stile, die in dieser Auflistung enthaltenen werden auf die Menüelemente, die basierend auf dem Menü Grad angewendet. Das erste Format in der Auflistung entspricht dem Format der Menüelemente in der ersten Ebene des Menüs. Das zweite Format in der Auflistung entspricht dem Format der Menüelemente in der zweiten Ebene des Menüs und So weiter. Diese Auflistung wird am häufigsten verwendet zum Generieren von Navigationsmenüs Inhalt-Format, in denen sollten Menüelemente auf einer bestimmten Ebene unabhängig davon, ob diese Untermenüs haben die gleiche Darstellung haben.  
  
> [!NOTE]
>  Wenn für eine bestimmte Ebene mithilfe eine Formatvorlage definiert wird die <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> Auflistung, die diese Außerkraftsetzungen formatieren alle Menüelement Einstellungen für den Menüelementen auf dieser Ebene.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> stileinstellungen gelten für die Elemente in diese Auflistung ein <xref:System.Web.UI.WebControls.Menu> Steuerelement auf Grundlage der Ebene.  
  
 [!code-aspx-csharp[MenuLevelMenuItemStyles#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuLevelMenuItemStyles/CS/menulevelmenuitemstylecs.aspx#1)]
 [!code-aspx-vb[MenuLevelMenuItemStyles#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuLevelMenuItemStyles/VB/menulevelmenuitemstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="LevelSelectedStyles">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemStyleCollection LevelSelectedStyles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemStyleCollection LevelSelectedStyles" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LevelSelectedStyles As MenuItemStyleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItemStyleCollection ^ LevelSelectedStyles { System::Web::UI::WebControls::MenuItemStyleCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemStyleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein <see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection" />-Objekt ab, das die Formateinstellungen enthält, die auf Grundlage der Ebene des ausgewählten Menüelements in einem <see cref="T:System.Web.UI.WebControls.Menu" />-Steuerelement auf dieses angewendet werden.</summary>
        <value>Ein <see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection" />-Objekt, das die Formateinstellungen enthält, die auf Grundlage der Ebene des ausgewählten Menüelements in einem <see cref="T:System.Web.UI.WebControls.Menu" />-Steuerelement auf dieses angewendet werden.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> als Alternative zur Auflistung der <xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A> und <xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A> Eigenschaften, um das Format eines ausgewählten Menüelements auf den einzelnen Ebenen des Menüs zu steuern. Die Stile, die in dieser Auflistung enthaltenen werden auf einem ausgewählten Menüelements basierend auf der Menüebene im angewendet. Das erste Format in der Auflistung entspricht der Art des ausgewählten Menüelements in der ersten Ebene des Menüs. Das zweite Format in der Auflistung entspricht das Format des ausgewählten Menüelements in der zweiten Ebene des Menüs und So weiter. Diese Auflistung wird am häufigsten verwendet zum Generieren von Navigationsmenüs Inhalt-Format, in denen sollten Menüelemente auf einer bestimmten Ebene unabhängig davon, ob diese Untermenüs haben die gleiche Darstellung haben.  
  
> [!NOTE]
>  Wenn für eine bestimmte Ebene mithilfe eine Formatvorlage definiert wird die <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> Auflistung Dies überschreibt die <xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A> und <xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A> Eigenschaften auf dieser Ebene.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> Auflistung ausgewählten Menüelements in einem stileinstellung Zuweisen einer <xref:System.Web.UI.WebControls.Menu> Steuerelement auf Grundlage der Ebene.  
  
 [!code-aspx-csharp[MenuLevelMenuItemStyles#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuLevelMenuItemStyles/CS/menulevelmenuitemstylecs.aspx#1)]
 [!code-aspx-vb[MenuLevelMenuItemStyles#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuLevelMenuItemStyles/VB/menulevelmenuitemstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="LevelSubMenuStyles">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SubMenuStyleCollection LevelSubMenuStyles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.SubMenuStyleCollection LevelSubMenuStyles" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LevelSubMenuStyles As SubMenuStyleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SubMenuStyleCollection ^ LevelSubMenuStyles { System::Web::UI::WebControls::SubMenuStyleCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.SubMenuStyleCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SubMenuStyleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein <see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection" />-Objekt ab, das die Formateinstellungen enthält, die auf Grundlage der Ebene der Untermenüelemente in einem <see cref="T:System.Web.UI.WebControls.Menu" />-Steuerelement auf die Untermenüelemente angewendet werden.</summary>
        <value>Ein <see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection" />-Objekt, das die Formateinstellungen enthält, die auf Grundlage der Ebene der Untermenüelemente in einem <see cref="T:System.Web.UI.WebControls.Menu" />-Steuerelement auf die Untermenüelemente angewendet werden.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> Auflistung als Alternative zu den einzelnen Formateigenschaften (z. B. <xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A>) zu steuern, die Art des statischen Untermenüelemente in einem statischen Menü auf den einzelnen Ebenen angezeigt. Die Stile, die in dieser Auflistung enthaltenen werden auf entsprechend ihrer Menüebene statischen Untermenüelemente angewendet. Das erste Format in der Auflistung entspricht, den Stil der ersten statischen Untermenüebene in einem statischen Menü angezeigt. Das zweite Format in der Auflistung entspricht dem Format der zweiten Untermenü in statischen Menüs usw. angezeigt. Diese Auflistung wird am häufigsten verwendet zum Generieren von Navigationsmenüs Inhalt-Format, in denen sollten Menüelemente auf einer bestimmten Ebene unabhängig davon, ob diese Untermenüs haben die gleiche Darstellung haben.  
  
> [!NOTE]
>  Wenn für eine bestimmte Ebene mithilfe eine Formatvorlage definiert wird die <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> Auflistung, die diese Außerkraftsetzungen, formatieren alle statischen Untermenüelement Einstellungen auf dieser Ebene.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> Auflistung der Untermenüelemente in einem statischen Menü des angezeigten formateinstellungen Zuweisen einer <xref:System.Web.UI.WebControls.Menu> Steuerelement auf Grundlage der Ebene.  
  
 [!code-aspx-csharp[MenuLevelSubMenuStyles#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuLevelSubMenuStyles/CS/menulevelsubmenustylescs.aspx#1)]
 [!code-aspx-vb[MenuLevelSubMenuStyles#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuLevelSubMenuStyles/VB/menulevelsubmenustylesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected internal override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.LoadControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub LoadControlState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void LoadControlState(System::Object ^ savedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Ein <see cref="T:System.Object" />, das den wiederherzustellenden Steuerelementzustand darstellt.</param>
        <summary>Lädt den Zustand der beizubehaltenden Eigenschaften im <see cref="T:System.Web.UI.WebControls.Menu" />-Steuerelement.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Diese Methode wird hauptsächlich von Steuerelemententwicklern verwendet, zum Erweitern der <xref:System.Web.UI.WebControls.Menu> Steuerelement.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">Ein <see cref="T:System.Object" />, das die gespeicherten Ansichtszustandswerte für das Steuerelement enthält.</param>
        <summary>Lädt den zuvor gespeicherten Ansichtszustand des <see cref="T:System.Web.UI.WebControls.Menu" />-Steuerelements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumDynamicDisplayLevels">
      <MemberSignature Language="C#" Value="public int MaximumDynamicDisplayLevels { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumDynamicDisplayLevels" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumDynamicDisplayLevels As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaximumDynamicDisplayLevels { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(3)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der Menüebenen ab, die für ein dynamisches Menü gerendert werden sollen, oder legt diese fest.</summary>
        <value>Die Anzahl der Menüebenen, die für ein dynamisches Menü gerendert werden sollen. Der Standard ist 3.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können mehrere Menüebenen in einem statischen Menü angezeigt, durch Festlegen der <xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A> Eigenschaft auf einen Wert größer als 1. Sie können auch zusätzliche Ebenen in dynamischen Menüs anzeigen, indem diese Eigenschaft auf einen Wert größer als 0. Angenommen, Sie zwei Menüebenen in einem statischen Menü angezeigt (durch Festlegen der <xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A> -Eigenschaft auf 2), und legen Sie diese Eigenschaft auf 3 drei zusätzliche Ebenen sind im Menü angezeigten dynamische Menüs. Alle verbleibenden höhere Menüebenen (sofern vorhanden) werden verworfen.  
  
> [!NOTE]
>  Festlegen dieser Eigenschaft auf 0 zeigt flaches Menü bis zur Ebene gemäß der <xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A> -Eigenschaft, ohne dynamische Menüs.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels%2A> Eigenschaft, um die Anzahl der Menüebenen, die in einem dynamischen Menü auf 1 einzuschränken. Nur die Stammebene Menü wird angezeigt.  
  
 [!code-aspx-csharp[MenuMaximumDynamicDisplayLevels#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuMaximumDynamicDisplayLevels/CS/menumaximumdynamicdisplaylevelscs.aspx#1)]
 [!code-aspx-vb[MenuMaximumDynamicDisplayLevels#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuMaximumDynamicDisplayLevels/VB/menumaximumdynamicdisplaylevelsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Die <see cref="P:System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels" />-Eigenschaft wird auf einen Wert kleiner als 0 festgelegt.</exception>
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticDisplayLevels" />
      </Docs>
    </Member>
    <Member MemberName="MenuItemClick">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.MenuEventHandler MenuItemClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.MenuEventHandler MenuItemClick" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Menu.MenuItemClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MenuItemClick As MenuEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::MenuEventHandler ^ MenuItemClick;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn in einem <see cref="T:System.Web.UI.WebControls.Menu" />-Steuerelement auf ein Menüelement geklickt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.Menu.MenuItemClick> Ereignis wird ausgelöst, wenn auf ein Menüelement geklickt wird, in einem <xref:System.Web.UI.WebControls.Menu> Steuerelement. Dadurch können Sie einen Ereignishandler bereitstellen, der eine benutzerdefinierte Routine ausführt, z. B. Synchronisierung mit einem anderen Steuerelement auf der Seite, wenn dieses Ereignis tritt auf.  
  
 Ein <xref:System.Web.UI.WebControls.MenuEventArgs> Objekt übergeben wird, an den Ereignishandler, wodurch Sie die Eigenschaften des Menüelements zugreifen, die das Ereignis ausgelöst hat.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie So erstellen Sie einen Ereignishandler für das <xref:System.Web.UI.WebControls.Menu.MenuItemClick> Ereignis, das den Text der vom Benutzer ausgewählten Menüelements anzeigt.  
  
 [!code-aspx-csharp[MenuMenuItemClick#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuMenuItemClick/CS/menumenuitemclickcs.aspx#1)]
 [!code-aspx-vb[MenuMenuItemClick#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuMenuItemClick/VB/menumenuitemclickvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.MenuEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.MenuEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.Menu.MenuItemDataBound" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.OnMenuItemClick(System.Web.UI.WebControls.MenuEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="MenuItemClickCommandName">
      <MemberSignature Language="C#" Value="public static readonly string MenuItemClickCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string MenuItemClickCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Menu.MenuItemClickCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MenuItemClickCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ MenuItemClickCommandName;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Enthält den Befehlsnamen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses schreibgeschützte Feld enthält den Namen des Befehls verwendet, um die Menüelemente zugreifen. Der Standardwert ist "Click".  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MenuItemDataBound">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.MenuEventHandler MenuItemDataBound;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.MenuEventHandler MenuItemDataBound" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Menu.MenuItemDataBound" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MenuItemDataBound As MenuEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::MenuEventHandler ^ MenuItemDataBound;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn ein Menüelement eines <see cref="T:System.Web.UI.WebControls.Menu" />-Steuerelements an Daten gebunden wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.Menu.MenuItemDataBound> Ereignis wird ausgelöst, wenn ein Menüelement an Daten gebunden ist ein <xref:System.Web.UI.WebControls.Menu> Steuerelement. Dadurch können Sie einen Ereignishandler bereitstellen, der eine benutzerdefinierte Routine, wie das Hinzufügen von benutzerdefinierten Inhalten, oder ändern ein Menüelement aus, bevor er gerendert wird, wenn dieses Ereignis tritt auf, ausführt.  
  
 Ein <xref:System.Web.UI.WebControls.MenuEventArgs> Objekt übergeben wird, an den Ereignishandler, wodurch Sie die Eigenschaften des Menüelements zugreifen, die das Ereignis ausgelöst hat.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie So erstellen Sie einen Ereignishandler für das <xref:System.Web.UI.WebControls.Menu.MenuItemDataBound> Ereignis, das den Text der ändert die `Home` Menüelement vor der Anzeige in eine <xref:System.Web.UI.WebControls.Menu> Steuerelement.  
  
 [!code-aspx-csharp[MenuItemDataBound#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemDataBound/CS/menumenuitemdataboundcs.aspx#1)]
 [!code-aspx-vb[MenuItemDataBound#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemDataBound/VB/menumenuitemdataboundvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.MenuEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.MenuEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.Menu.MenuItemClick" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.OnMenuItemDataBound(System.Web.UI.WebControls.MenuEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnBubbleEvent">
      <MemberSignature Language="C#" Value="protected override bool OnBubbleEvent (object source, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnBubbleEvent(object source, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.OnBubbleEvent(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnBubbleEvent (source As Object, e As EventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnBubbleEvent(System::Object ^ source, EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">Die Quelle des Ereignisses.</param>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das Ereignisdaten enthält.</param>
        <summary>Bestimmt, ob das Ereignis für das <see cref="T:System.Web.UI.WebControls.Menu" />-Steuerelement in der Serversteuerelementhierarchie der für die Seite verwendeten Benutzeroberfläche (UI) nach oben übergeben wird.</summary>
        <returns>
          <see langword="true" />, wenn das Ereignis abgebrochen wurde, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Member überschreibt <xref:System.Web.UI.Control.OnBubbleEvent%2A>.  
  
> [!NOTE]
>  Diese Methode wird hauptsächlich von Steuerelemententwicklern verwendet, zum Erweitern der <xref:System.Web.UI.WebControls.Menu> Steuerelement.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDataBinding">
      <MemberSignature Language="C#" Value="protected override void OnDataBinding (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDataBinding(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.OnDataBinding(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDataBinding (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDataBinding(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.MenuEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.Control.DataBinding" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Control.DataBinding> Ereignis wird ausgelöst, wenn Daten, um gebunden werden die <xref:System.Web.UI.WebControls.Menu> Steuerelement. Diese Methode benachrichtigt das Steuerelement eine Datenbindung Logik ausführen, die mit ihr verbunden ist.  
  
 Die <xref:System.Web.UI.WebControls.Menu.OnDataBinding%2A> Methode kann abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 Diese Methode wird im Allgemeinen von Entwicklern verwendet, beim Erweitern der <xref:System.Web.UI.WebControls.Menu> Klasse.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Wenn Sie <see cref="M:System.Web.UI.WebControls.Menu.OnDataBinding(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Web.UI.WebControls.Menu.OnDataBinding(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.MenuEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.MenuEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.Menu.MenuItemDataBound" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.MenuEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.Control.Init" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei Benachrichtigung durch diese Methode müssen Webserversteuerelemente alle Initialisierungsschritte ausführen, die zum Erstellen und Einrichten einer Instanz erforderlich sind. In dieser Phase des Lebenszyklus des Serversteuerelements muss Ansichtszustand des Steuerelements noch aufgefüllt werden. Darüber hinaus können Sie ein anderes Steuerelement beim diese Methode aufgerufen wird, unabhängig davon, ob es sich um ein untergeordnetes oder übergeordnetes Steuerelement handelt, zugreifen. Andere Steuerelemente sind nicht unbedingt erstellt und für den Zugriff bereit.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Web.UI.WebControls.Menu.OnInit%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Wenn Sie <see cref="M:System.Web.UI.WebControls.Menu.OnInit(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Web.UI.WebControls.Menu.OnInit(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMenuItemClick">
      <MemberSignature Language="C#" Value="protected virtual void OnMenuItemClick (System.Web.UI.WebControls.MenuEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMenuItemClick(class System.Web.UI.WebControls.MenuEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.OnMenuItemClick(System.Web.UI.WebControls.MenuEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMenuItemClick (e As MenuEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMenuItemClick(System::Web::UI::WebControls::MenuEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.MenuEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.MenuEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.Menu.MenuItemClick" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.Menu.OnMenuItemClick%2A> Methode wird aufgerufen, indem Sie die <xref:System.Web.UI.WebControls.Menu> Steuerelement zum Auslösen der <xref:System.Web.UI.WebControls.Menu.MenuItemClick> Ereignis. Es wird im Allgemeinen von Entwicklern verwendet, beim Erweitern der <xref:System.Web.UI.WebControls.Menu> Klasse.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Web.UI.WebControls.Menu.OnMenuItemClick%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Wenn Sie <see cref="M:System.Web.UI.WebControls.Menu.OnMenuItemClick(System.Web.UI.WebControls.MenuEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Web.UI.WebControls.Menu.OnMenuItemClick(System.Web.UI.WebControls.MenuEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.MenuEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.MenuEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.Menu.MenuItemClick" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.OnMenuItemDataBound(System.Web.UI.WebControls.MenuEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMenuItemDataBound">
      <MemberSignature Language="C#" Value="protected virtual void OnMenuItemDataBound (System.Web.UI.WebControls.MenuEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMenuItemDataBound(class System.Web.UI.WebControls.MenuEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.OnMenuItemDataBound(System.Web.UI.WebControls.MenuEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMenuItemDataBound (e As MenuEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMenuItemDataBound(System::Web::UI::WebControls::MenuEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.MenuEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.MenuEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.Menu.MenuItemDataBound" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.Menu.OnMenuItemDataBound%2A> Methode wird aufgerufen, indem Sie die <xref:System.Web.UI.WebControls.Menu> Steuerelement zum Auslösen der <xref:System.Web.UI.WebControls.Menu.MenuItemDataBound> Ereignis. Es wird im Allgemeinen von Entwicklern verwendet, beim Erweitern der <xref:System.Web.UI.WebControls.Menu> Klasse.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Web.UI.WebControls.Menu.OnMenuItemDataBound%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Wenn Sie <see cref="M:System.Web.UI.WebControls.Menu.OnMenuItemDataBound(System.Web.UI.WebControls.MenuEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Web.UI.WebControls.Menu.OnMenuItemDataBound(System.Web.UI.WebControls.MenuEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.MenuEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.MenuEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.Menu.MenuItemDataBound" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.OnMenuItemClick(System.Web.UI.WebControls.MenuEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.Control.PreRender" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.Menu.OnPreRender%2A> Methode wird aufgerufen, indem Sie die <xref:System.Web.UI.WebControls.Menu> Steuerelement zum Auslösen der <xref:System.Web.UI.Control.PreRender> Ereignis. Es wird im Allgemeinen von Entwicklern verwendet, beim Erweitern der <xref:System.Web.UI.WebControls.Menu> Klasse.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Web.UI.WebControls.Menu.OnPreRender%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Wenn Sie <see cref="M:System.Web.UI.WebControls.Menu.OnPreRender(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Web.UI.WebControls.Menu.OnPreRender(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Orientation">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Orientation Orientation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Orientation Orientation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.Orientation" />
      <MemberSignature Language="VB.NET" Value="Public Property Orientation As Orientation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Orientation Orientation { System::Web::UI::WebControls::Orientation get(); void set(System::Web::UI::WebControls::Orientation value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Orientation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Richtung ab, in die das <see cref="T:System.Web.UI.WebControls.Menu" />-Steuerelement gerendert werden soll, oder legt diese fest.</summary>
        <value>Einer der <see cref="T:System.Web.UI.WebControls.Orientation" />-Enumerationswerte. Der Standardwert ist <see langword="Orientation.Vertical" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.Menu.Orientation%2A> -Eigenschaft an die Richtung, in der zum Rendern der <xref:System.Web.UI.WebControls.Menu> Steuerelement. Die folgende Tabelle enthält die Anweisungen zur Verfügung.  
  
|Ausrichtung|Beschreibung |  
|-----------------|-----------------|  
|`Orientation.Horizontal`|Die <xref:System.Web.UI.WebControls.Menu> Steuerelement horizontal gerendert wird.|  
|`Orientation.Vertical`|Die <xref:System.Web.UI.WebControls.Menu> Steuerelement vertikal gerendert wird.|  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Menu.Orientation%2A> Eigenschaft, um ein horizontales Menü angezeigt.  
  
 [!code-aspx-csharp[MenuOrientation#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuOrientation/CS/menuorientationcs.aspx#1)]
 [!code-aspx-vb[MenuOrientation#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuOrientation/VB/menuorientationvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Orientation" />
      </Docs>
    </Member>
    <Member MemberName="PathSeparator">
      <MemberSignature Language="C#" Value="public char PathSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char PathSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.PathSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property PathSeparator As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char PathSeparator { char get(); void set(char value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue('/')</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Zeichen ab, das zur Abtrennung des Pfads eines Menüelements in einem <see cref="T:System.Web.UI.WebControls.Menu" />-Steuerelement verwendet wird, oder legt dieses Zeichen fest.</summary>
        <value>Mit diesem Zeichen wird der Pfad eines Menüelements abgetrennt. Der Standardwert ist ein Schrägstrich (/).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jedes Menüelement (dargestellt durch eine <xref:System.Web.UI.WebControls.MenuItem> Objekt) in der <xref:System.Web.UI.WebControls.Menu> Steuerelement besitzt eine <xref:System.Web.UI.WebControls.MenuItem.ValuePath%2A> Eigenschaft, die die Position des Menüelements angibt. Der Wertpfad ist eine Zeichenfolge mit durch Trennzeichen getrennten Werten, die den Pfad aus einem Stamm-Menüelement mit dem aktuellen Menüelement zu bilden. Verwenden der <xref:System.Web.UI.WebControls.Menu.PathSeparator%2A> Eigenschaft zum Angeben des Trennzeichen zur Trennung der Werte im Menüpfad verwendet. Dieser Wert wird häufig verwendet, wenn die Liste für die einzelnen Werte zu analysieren.  
  
 Je nach den in angezeigten Text die <xref:System.Web.UI.WebControls.Menu> -Steuerelement, das Trennzeichen müssen möglicherweise geändert werden, um Konflikte zu vermeiden. Z. B. Wenn Sie ein Komma als Trennzeichen festlegen, sollten der angezeigte Text keine Kommas enthalten. andernfalls die <xref:System.Web.UI.WebControls.MenuItem.ValuePath%2A> Eigenschaft kann nicht ordnungsgemäß analysiert werden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Menu.PathSeparator%2A> Eigenschaft, die ein Komma als Trennzeichen für ein Menüelement Wertpfad geändert.  
  
 [!code-aspx-csharp[MenuPathSeparator#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuPathSeparator/CS/menupathseparatorcs.aspx#1)]
 [!code-aspx-vb[MenuPathSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuPathSeparator/VB/menupathseparatorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ValuePath" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.FindItem(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="PerformDataBinding">
      <MemberSignature Language="C#" Value="protected internal override void PerformDataBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void PerformDataBinding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.PerformDataBinding" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub PerformDataBinding ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void PerformDataBinding();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Bindet die Elemente aus der Datenquelle an die Menüelemente im <see cref="T:System.Web.UI.WebControls.Menu" />-Steuerelement.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.Menu.PerformDataBinding%2A> Methode ist eine Hilfsmethode wird aufgerufen, indem Sie die <xref:System.Web.UI.WebControls.Menu> Steuerelement, um die Elemente in der Datenquelle zu binden die <xref:System.Web.UI.WebControls.Menu> Steuerelement.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.HierarchicalDataBoundControl.PerformDataBinding" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected internal virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Ein <see cref="T:System.String" />, der das an den Ereignishandler übergebene Ereignisargument darstellt.</param>
        <summary>Verarbeitet ein Ereignis, das beim Senden eines Formulars an den Server ausgelöst wird.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Das <see cref="T:System.Web.UI.HtmlTextWriter" />-Objekt, das den Ausgabestream darstellt, der zum Schreiben des Inhalts auf eine Webseite verwendet wird.</param>
        <summary>Gibt das Menüsteuerelement auf dem Clientbrowser wieder.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderBeginTag">
      <MemberSignature Language="C#" Value="public override void RenderBeginTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderBeginTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RenderBeginTag (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RenderBeginTag(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Der <see cref="T:System.Web.UI.HtmlTextWriter" />, der Methoden für die Erstellung und das Rendern der gerätespezifischen Ausgabe enthält.</param>
        <summary>Fügt Tagattribute hinzu und schreibt das Markup für das Anfangstag des Steuerelements in den Ausgabestream, der an den Browser oder das Gerät ausgegeben wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.Menu.RenderBeginTag%2A> Methode fügt-Tag Attribute und schreibt das Markup für das Anfangstag des Steuerelements in den Ausgabestream, der an den Antwortstream für den Clientbrowser ausgegeben.  
  
 Überschreiben Sie <xref:System.Web.UI.WebControls.Menu.RenderBeginTag%2A> , wenn Sie benutzerdefiniertes Verhalten implementieren möchten, z. B. zum Schreiben von mehreren Tags an den Antwortstream vor allen Steuern des Inhalts, wie z. B. `<table><tr><td>`. Diese Methode überschreibt die <xref:System.Web.UI.WebControls.Menu.RenderBeginTag%2A> -Methode zum Hinzufügen der <xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A> Eigenschaft.  
  
> [!NOTE]
>  Diese Methode wird hauptsächlich von Steuerelemententwicklern verwendet, zum Erweitern der <xref:System.Web.UI.WebControls.Menu> Steuerelement.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected internal override void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderContents (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Der <see cref="T:System.Web.UI.HtmlTextWriter" />, der Methoden für die Erstellung und das Rendern der gerätespezifischen Ausgabe enthält.</param>
        <summary>Dieser Member überschreibt <see cref="M:System.Web.UI.WebControls.WebControl.RenderContents(System.Web.UI.HtmlTextWriter)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Überschreiben Sie die <xref:System.Web.UI.WebControls.WebControl.RenderContents%2A> Methode, um den Inhalt des Steuerelements zwischen den Begin- und End-Tags gerendert. Die standardmäßige Implementierung dieser Methode rendert alle untergeordneten Steuerelemente.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderEndTag">
      <MemberSignature Language="C#" Value="public override void RenderEndTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderEndTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RenderEndTag (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RenderEndTag(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Der <see cref="T:System.Web.UI.HtmlTextWriter" />, der Methoden für die Erstellung und das Rendern der gerätespezifischen Ausgabe enthält.</param>
        <summary>Führt das endgültige Markup aus und schreibt den HTML-Code für das Endtag des Steuerelements in den Ausgabestream, der an den Browser oder das Gerät ausgegeben wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode überschreibt <xref:System.Web.UI.WebControls.WebControl.RenderEndTag%2A?displayProperty=nameWithType> zum Rendern <xref:System.Web.UI.WebControls.Menu> Untermenüs und die <xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A> Eigenschaft.  
  
> [!NOTE]
>  Diese Methode wird hauptsächlich von Steuerelemententwicklern verwendet, zum Erweitern der <xref:System.Web.UI.WebControls.Menu> Steuerelement.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderingMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuRenderingMode RenderingMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.MenuRenderingMode RenderingMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.RenderingMode" />
      <MemberSignature Language="VB.NET" Value="Public Property RenderingMode As MenuRenderingMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuRenderingMode RenderingMode { System::Web::UI::WebControls::MenuRenderingMode get(); void set(System::Web::UI::WebControls::MenuRenderingMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuRenderingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Web.UI.WebControls.Menu" />-Steuerelement HTML-<see langword="table" />-Elemente und Inlineformate oder <see langword="listitem" />-Elemente und Cascading Stylesheet (CSS)-Formate rendert, oder legt ihn fest.</summary>
        <value>Ein Wert, der angibt, ob das <see cref="T:System.Web.UI.WebControls.Menu" />-Steuerelement HTML-<see langword="table" />-Elemente und Inlineformate oder <see langword="listitem" />-Elemente und Cascading Stylesheet (CSS)-Formate rendert. Der Standardwert ist <see cref="F:System.Web.UI.WebControls.MenuRenderingMode.Default" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Wert von der <xref:System.Web.UI.WebControls.Menu.RenderingMode%2A> Eigenschaft bestimmt, wie das Menüsteuerelement Markup rendert die <xref:System.Web.UI.WebControls.Menu> Steuerelement.  
  
 In ASP.NET 3.5 und frühere Versionen die <xref:System.Web.UI.WebControls.Menu> Steuerelement verwendet HTML `table` -Elemente und Inlineformate, die Darstellung des Menüs in einem Browser festzulegen. In ASP.NET 4 und höheren Versionen werden standardmäßig die <xref:System.Web.UI.WebControls.Menu> Steuerelement verwendet HTML `listitem` -Elemente und cascading Stylesheet (CSS)-Formate.  
  
 Wenn Sie diese Eigenschaft nicht Festlegen der <xref:System.Web.UI.WebControls.Menu> Steuerelement rendert Markup, das für die Version von ASP.NET geeignet ist, die durch angegebenen die <xref:System.Web.UI.Control.RenderingCompatibility%2A?displayProperty=nameWithType> Eigenschaft. Die <xref:System.Web.UI.WebControls.Menu> Steuerelement verwendet die folgenden Regeln:  
  
-   Wenn der Wert des der <xref:System.Web.UI.Control.RenderingCompatibility%2A> Eigenschaft ist `3.5`, die <xref:System.Web.UI.WebControls.Menu> Steuerelement verwendet HTML `table` -Elemente und Inlineformate.  
  
-   Wenn der Wert des der <xref:System.Web.UI.Control.RenderingCompatibility%2A> Eigenschaft ist `4.0` oder höher, die <xref:System.Web.UI.WebControls.Menu> Steuerelement verwendet die HTML `listitem` Elemente und CSS-Formatvorlagen.  
  
 Diese Eigenschaft ist für die Abwärtskompatibilität bereitgestellt. Wenn die <xref:System.Web.UI.Control.RenderingCompatibility%2A> Eigenschaft zeigt an, dass Sie Steuerelemente zum HTML-Daten zu generieren, die mit ASP.NET 4 oder höher kompatibel ist, aber Sie möchten die <xref:System.Web.UI.WebControls.Menu> steuern, um eine Ausnahme zu sein, das frühere Verhalten verwendet, Sie können diese Eigenschaft festlegen, um <xref:System.Web.UI.WebControls.MenuRenderingMode.Table>. Z. B. bei einer Webseite, die Text von rechts nach links angezeigt, Sie möchten diese Eigenschaft festgelegt wird, um <xref:System.Web.UI.WebControls.MenuRenderingMode.Table> da von einigen Browsern nicht angezeigt werden die <xref:System.Web.UI.WebControls.MenuRenderingMode.List> Modusmarkup ordnungsgemäß für rechts-nach-links-Text.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.RenderingCompatibility" />
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected internal override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.SaveControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SaveControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ SaveControlState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Speichert den Zustand der beizubehaltenden Eigenschaften im <see cref="T:System.Web.UI.WebControls.Menu" />-Steuerelement.</summary>
        <returns>Ein Objekt, das die Zustandsdaten für das Steuerelement enthält. Wenn der Zustand nicht geändert wurde, gibt diese Methode <see langword="null" /> zurück.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird verwendet, um den Status der Eigenschaften im Speichern der <xref:System.Web.UI.WebControls.Menu> Steuerelement beibehalten werden, selbst wenn die <xref:System.Web.UI.Control.EnableViewState%2A> -Eigenschaftensatz auf `false`. Die <xref:System.Web.UI.WebControls.Menu.SaveControlState%2A> Methode hat Bedenken hinsichtlich Zustandsdaten, die unbedingt für ein Steuerelement-Vorgang (z. B. einen Index oder ein Schlüsselwort) und ist unabhängig von den Steuerelementdaten Ansichtszustand.  
  
> [!NOTE]
>  Diese Methode wird hauptsächlich von Steuerelemententwicklern verwendet, zum Erweitern der <xref:System.Web.UI.WebControls.Menu> Steuerelement.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Speichert den Zustand des <see cref="T:System.Web.UI.WebControls.Menu" />-Steuerelements.</summary>
        <returns>Ein <see cref="T:System.Object" />, das den Zustand des <see cref="T:System.Web.UI.WebControls.Menu" />-Steuerelements enthält.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollDownImageUrl">
      <MemberSignature Language="C#" Value="public string ScrollDownImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScrollDownImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollDownImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ScrollDownImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die URL zu einem Bild ab, das in einem dynamischen Menü angezeigt wird und angibt, dass der Benutzer für zusätzliche Menüelemente einen Bildlauf nach unten durchführen kann, oder legt diese URL zu einem Bild fest.</summary>
        <value>Die URL zu einem Bild, das in einem dynamischen Menü angezeigt wird und angibt, dass der Benutzer für zusätzliche Menüelemente einen Bildlauf nach unten durchführen kann. Der Standardwert ist eine leere Zeichenfolge (""), die angibt, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft wird in den Renderingmodus für .NET 4.0 nicht unterstützt. Wenn diese Eigenschaft erforderlich ist, können Sie im Menü auf das .NET 3.5-Renderingmodus festlegen, durch das Hinzufügen der folgenden im Code der Seite:  
  
```  
menuInstance.RenderingCompatibility = new Version(3, 5);  
```  
  
 Verwenden der <xref:System.Web.UI.WebControls.Menu.ScrollDownImageUrl%2A> Eigenschaft, um ein benutzerdefiniertes Bild angezeigt, die am unteren Rand jedes dynamischen Menüs, um anzugeben, dass der Benutzer für zusätzliche Menüelemente nach unten scrollen kann anzugeben.  
  
> [!NOTE]
>  Wenn diese Eigenschaft nicht das interne festgelegt ist, wird standardmäßig verwendet.  
  
 Geben Sie den alternativen Text für das Bild, durch Festlegen der <xref:System.Web.UI.WebControls.Menu.ScrollDownText%2A> Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Menu.ScrollDownImageUrl%2A> Eigenschaft, um ein benutzerdefiniertes Bild angeben, dass der Benutzer nach unten in einem dynamischen Menü für zusätzliche Menüelemente einen Bildlauf durchführen kann.  
  
 [!code-aspx-csharp[MenuScrollDownImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuScrollDownImage/CS/menuscrolldownimagecs.aspx#1)]
 [!code-aspx-vb[MenuScrollDownImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuScrollDownImage/VB/menuscrolldownimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
      </Docs>
    </Member>
    <Member MemberName="ScrollDownText">
      <MemberSignature Language="C#" Value="public string ScrollDownText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScrollDownText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollDownText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ScrollDownText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den alternativen Text für das in der <see cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />-Eigenschaft angegebene Bild ab oder legt diesen fest.</summary>
        <value>Der alternative Text für das in der <see cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />-Eigenschaft angegebene Bild. Der Standardwert ist eine leere Zeichenfolge ("") und gibt an, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft wird in den Renderingmodus für .NET 4.0 nicht unterstützt. Wenn diese Eigenschaft erforderlich ist, können Sie im Menü auf das .NET 3.5-Renderingmodus festlegen, durch das Hinzufügen der folgenden im Code der Seite:  
  
```  
menuInstance.RenderingCompatibility = new Version(3, 5);  
```  
  
 Wenn ein dynamisches Menüelement am unteren Rand des Menüs zusätzliche Elemente enthält, wird ein Bild angezeigt, um anzugeben, dass der Benutzer zum Anzeigen zusätzlicher Menüelemente einen Bildlauf durchführen kann. Verwenden der <xref:System.Web.UI.WebControls.Menu.ScrollDownText%2A> Eigenschaft, um den alternativen Text für dieses Bild anzugeben. Der Text, den Sie angeben, enthält Geräte mit hilfstechnologie mit einer Beschreibung des Abbilds, das verwendet werden kann, um das Steuerelement leichter zugänglich machen.  
  
 Der Wert dieser Eigenschaft, wenn festgelegt ist, können mit einem Designer-Tool automatisch in einer Ressourcendatei gespeichert werden. Weitere Informationen finden Sie unter <xref:System.ComponentModel.LocalizableAttribute> und [Globalisierung und Lokalisierung](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Menu.ScrollDownText%2A> -Eigenschaft an den alternativen Text für das Bild verwendet, um anzugeben, dass der Benutzer nach unten in einem dynamischen Menü für zusätzliche Menüelemente einen Bildlauf durchführen kann.  
  
 [!code-aspx-csharp[MenuScrollDownImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuScrollDownImage/CS/menuscrolldownimagecs.aspx#1)]
 [!code-aspx-vb[MenuScrollDownImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuScrollDownImage/VB/menuscrolldownimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
      </Docs>
    </Member>
    <Member MemberName="ScrollUpImageUrl">
      <MemberSignature Language="C#" Value="public string ScrollUpImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScrollUpImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollUpImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ScrollUpImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die URL zu einem Bild ab, das in einem dynamischen Menü angezeigt wird und angibt, dass der Benutzer für zusätzliche Menüelemente einen Bildlauf nach oben durchführen kann, oder legt diese URL zu einem Bild fest.</summary>
        <value>Die URL zu einem Bild, das in einem dynamischen Menü angezeigt wird und angibt, dass der Benutzer für zusätzliche Menüelemente einen Bildlauf nach oben durchführen kann. Der Standardwert ist eine leere Zeichenfolge (""), die angibt, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft wird in den Renderingmodus für .NET 4.0 nicht unterstützt. Wenn diese Eigenschaft erforderlich ist, können Sie im Menü auf das .NET 3.5-Renderingmodus festlegen, durch das Hinzufügen der folgenden im Code der Seite:  
  
```  
menuInstance.RenderingCompatibility = new Version(3, 5);  
```  
  
 Verwenden der <xref:System.Web.UI.WebControls.Menu.ScrollUpImageUrl%2A> -Eigenschaft an ein benutzerdefiniertes Bild-Anzeige am oberen Rand jedes dynamischen Menü, um anzugeben, dass der Benutzer für zusätzliche Menüelemente einen Bildlauf durchführen kann.  
  
> [!NOTE]
>  Wenn diese Eigenschaft nicht das interne festgelegt ist, wird standardmäßig verwendet.  
  
 Geben Sie den alternativen Text für das Bild, durch Festlegen der <xref:System.Web.UI.WebControls.Menu.ScrollUpText%2A> Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Menu.ScrollUpImageUrl%2A> Eigenschaft, um ein benutzerdefiniertes Bild angeben, dass der Benutzer sich in einem dynamischen Menü für zusätzliche Menüelemente einen Bildlauf durchführen kann.  
  
 [!code-aspx-csharp[MenuScrollDownImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuScrollDownImage/CS/menuscrolldownimagecs.aspx#1)]
 [!code-aspx-vb[MenuScrollDownImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuScrollDownImage/VB/menuscrolldownimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
      </Docs>
    </Member>
    <Member MemberName="ScrollUpText">
      <MemberSignature Language="C#" Value="public string ScrollUpText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScrollUpText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollUpText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ScrollUpText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den alternativen Text für das in der <see cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />-Eigenschaft angegebene Bild ab oder legt diesen fest.</summary>
        <value>Der alternative Text für das in der <see cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />-Eigenschaft angegebene Bild. Der Standardwert ist eine leere Zeichenfolge ("") und gibt an, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft wird in den Renderingmodus für .NET 4.0 nicht unterstützt. Wenn diese Eigenschaft erforderlich ist, können Sie im Menü auf das .NET 3.5-Renderingmodus festlegen, durch das Hinzufügen der folgenden im Code der Seite:  
  
```  
menuInstance.RenderingCompatibility = new Version(3, 5);  
```  
  
 Wenn ein dynamisches Menüelement über zusätzliche Elemente am Anfang des Menüs enthält, wird ein Bild angezeigt, um anzugeben, dass der Benutzer bis zum Anzeigen zusätzlicher Menüelemente einen Bildlauf durchführen kann. Verwenden der <xref:System.Web.UI.WebControls.Menu.ScrollUpText%2A> Eigenschaft, um den alternativen Text für dieses Bild anzugeben. Der Text, den Sie angeben, enthält Geräte mit hilfstechnologie mit einer Beschreibung des Abbilds, das verwendet werden kann, um das Steuerelement leichter zugänglich machen.  
  
 Der Wert dieser Eigenschaft, wenn festgelegt ist, können mit einem Designer-Tool automatisch in einer Ressourcendatei gespeichert werden. Weitere Informationen finden Sie unter <xref:System.ComponentModel.LocalizableAttribute> und [Globalisierung und Lokalisierung](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Menu.ScrollUpText%2A> -Eigenschaft geben Sie den alternativen Text für das Bild verwendet, um anzugeben, dass der Benutzer sich in einem dynamischen Menü für zusätzliche Menüelemente einen Bildlauf durchführen kann.  
  
 [!code-aspx-csharp[MenuScrollDownImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuScrollDownImage/CS/menuscrolldownimagecs.aspx#1)]
 [!code-aspx-vb[MenuScrollDownImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuScrollDownImage/VB/menuscrolldownimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="SelectedItem">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItem SelectedItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItem SelectedItem" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.SelectedItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedItem As MenuItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItem ^ SelectedItem { System::Web::UI::WebControls::MenuItem ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das ausgewählte Menüelement ab.</summary>
        <value>Ein <see cref="T:System.Web.UI.WebControls.MenuItem" />, das das ausgewählte Menüelement darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.Menu.SelectedItem%2A> Eigenschaft, um zu bestimmen, die vom Benutzer ausgewählten Menüelements.  
  
> [!NOTE]
>  Sie können auch die Tastenkombination können den Text des ausgewählten Menüelements zu bestimmen, direkt mithilfe der <xref:System.Web.UI.WebControls.Menu.SelectedValue%2A> Eigenschaft.  
  
 Wenn der Benutzer wählt ein Menüelement aus einem <xref:System.Web.UI.WebControls.Menu> -Steuerelement, das <xref:System.Web.UI.WebControls.Menu.MenuItemClick> Ereignis ausgelöst wird, können Sie eine benutzerdefinierte Routine durchführen, indem Sie einen Ereignishandler bereitstellen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Menu.SelectedItem%2A> -Eigenschaft zum Bestimmen des ausgewählten Menüelements in einem <xref:System.Web.UI.WebControls.Menu> Steuerelement.  
  
 [!code-aspx-csharp[MenuSelectedItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuSelectedItem/CS/menuselecteditemcs.aspx#1)]
 [!code-aspx-vb[MenuSelectedItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuSelectedItem/VB/menuselecteditemvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.SelectedValue" />
        <altmember cref="E:System.Web.UI.WebControls.Menu.MenuItemClick" />
      </Docs>
    </Member>
    <Member MemberName="SelectedValue">
      <MemberSignature Language="C#" Value="public string SelectedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.SelectedValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectedValue { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert des ausgewählten Menüelements ab.</summary>
        <value>Der Wert des ausgewählten Menüelements. Der Standardwert ist <see cref="F:System.String.Empty" /> und gibt an, dass aktuell kein Menüelement ausgewählt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.Menu.SelectedValue%2A> -Eigenschaft, wie eine Verknüpfung zum Bestimmen des Texts des ausgewählten Menüelements. Um die anderen Eigenschaften des ausgewählten Menüelements zuzugreifen, verwenden die <xref:System.Web.UI.WebControls.Menu.SelectedItem%2A> Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Menu.SelectedValue%2A> -Eigenschaft zum Bestimmen des Texts des ausgewählten Menüelements in einem <xref:System.Web.UI.WebControls.Menu> Steuerelement.  
  
 [!code-aspx-csharp[MenuSelectedItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuSelectedItem/CS/menuselecteditemcs.aspx#1)]
 [!code-aspx-vb[MenuSelectedItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuSelectedItem/VB/menuselecteditemvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.SelectedItem" />
        <altmember cref="E:System.Web.UI.WebControls.Menu.MenuItemClick" />
      </Docs>
    </Member>
    <Member MemberName="SetDesignModeState">
      <MemberSignature Language="C#" Value="protected override void SetDesignModeState (System.Collections.IDictionary data);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetDesignModeState(class System.Collections.IDictionary data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.SetDesignModeState(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetDesignModeState (data As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetDesignModeState(System::Collections::IDictionary ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="data">Ein <see cref="T:System.Collections.IDictionary" />, das die Zustandsdaten zum Anzeigen des Steuerelements enthält.</param>
        <summary>Legt die Entwurfszeitdaten für das <see cref="T:System.Web.UI.WebControls.Menu" />-Steuerelement fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode überschreibt <xref:System.Web.UI.Control.SetDesignModeState%2A>.  
  
> [!NOTE]
>  Diese Methode wird hauptsächlich von Steuerelemententwicklern verwendet, zum Erweitern der <xref:System.Web.UI.WebControls.Menu> Steuerelement.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetItemDataBound">
      <MemberSignature Language="C#" Value="protected void SetItemDataBound (System.Web.UI.WebControls.MenuItem node, bool dataBound);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetItemDataBound(class System.Web.UI.WebControls.MenuItem node, bool dataBound) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.SetItemDataBound(System.Web.UI.WebControls.MenuItem,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetItemDataBound (node As MenuItem, dataBound As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetItemDataBound(System::Web::UI::WebControls::MenuItem ^ node, bool dataBound);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.UI.WebControls.MenuItem" />
        <Parameter Name="dataBound" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="node">Die festzulegende <see cref="T:System.Web.UI.WebControls.MenuItem" />.</param>
        <param name="dataBound">
          <see langword="true" />, um den Knoten als datengebunden festzulegen, andernfalls <see langword="false" />.</param>
        <summary>Legt die <see cref="P:System.Web.UI.WebControls.MenuItem.DataBound" />-Eigenschaft des angegebenen <see cref="T:System.Web.UI.WebControls.MenuItem" />-Objekts mit dem angegebenen Wert fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.Menu.SetItemDataBound%2A> Methode ist eine Hilfsmethode, die zum Festlegen von abgeleiteten Klassen verwendet die <xref:System.Web.UI.WebControls.MenuItem.DataBound%2A> -Eigenschaft des angegebenen <xref:System.Web.UI.WebControls.MenuItem> Objekt.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Menu.SetItemDataItem(System.Web.UI.WebControls.MenuItem,System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.SetItemDataPath(System.Web.UI.WebControls.MenuItem,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SetItemDataItem">
      <MemberSignature Language="C#" Value="protected void SetItemDataItem (System.Web.UI.WebControls.MenuItem node, object dataItem);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetItemDataItem(class System.Web.UI.WebControls.MenuItem node, object dataItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.SetItemDataItem(System.Web.UI.WebControls.MenuItem,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetItemDataItem (node As MenuItem, dataItem As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetItemDataItem(System::Web::UI::WebControls::MenuItem ^ node, System::Object ^ dataItem);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.UI.WebControls.MenuItem" />
        <Parameter Name="dataItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="node">Die festzulegende <see cref="T:System.Web.UI.WebControls.MenuItem" />.</param>
        <param name="dataItem">Das Datenelement für <see cref="T:System.Web.UI.WebControls.MenuItem" />.</param>
        <summary>Legt die <see cref="P:System.Web.UI.WebControls.MenuItem.DataItem" />-Eigenschaft des angegebenen <see cref="T:System.Web.UI.WebControls.MenuItem" />-Objekts mit dem angegebenen Wert fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.Menu.SetItemDataItem%2A> Methode ist eine Hilfsmethode, die zum Festlegen von abgeleiteten Klassen verwendet die <xref:System.Web.UI.WebControls.MenuItem.DataItem%2A> -Eigenschaft des angegebenen <xref:System.Web.UI.WebControls.MenuItem> Objekt.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Menu.SetItemDataBound(System.Web.UI.WebControls.MenuItem,System.Boolean)" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.SetItemDataPath(System.Web.UI.WebControls.MenuItem,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SetItemDataPath">
      <MemberSignature Language="C#" Value="protected void SetItemDataPath (System.Web.UI.WebControls.MenuItem node, string dataPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetItemDataPath(class System.Web.UI.WebControls.MenuItem node, string dataPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.SetItemDataPath(System.Web.UI.WebControls.MenuItem,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetItemDataPath (node As MenuItem, dataPath As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetItemDataPath(System::Web::UI::WebControls::MenuItem ^ node, System::String ^ dataPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.UI.WebControls.MenuItem" />
        <Parameter Name="dataPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="node">Die festzulegende <see cref="T:System.Web.UI.WebControls.MenuItem" />.</param>
        <param name="dataPath">Der Datenpfad für <see cref="T:System.Web.UI.WebControls.MenuItem" />.</param>
        <summary>Legt die <see cref="P:System.Web.UI.WebControls.MenuItem.DataPath" />-Eigenschaft des angegebenen <see cref="T:System.Web.UI.WebControls.MenuItem" />-Objekts mit dem angegebenen Wert fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.Menu.SetItemDataPath%2A> Methode ist eine Hilfsmethode, die zum Festlegen von abgeleiteten Klassen verwendet die <xref:System.Web.UI.WebControls.MenuItem.DataPath%2A> -Eigenschaft des angegebenen <xref:System.Web.UI.WebControls.MenuItem> Objekt.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Menu.SetItemDataItem(System.Web.UI.WebControls.MenuItem,System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.SetItemDataPath(System.Web.UI.WebControls.MenuItem,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SkipLinkText">
      <MemberSignature Language="C#" Value="public string SkipLinkText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SkipLinkText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.SkipLinkText" />
      <MemberSignature Language="VB.NET" Value="Public Property SkipLinkText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SkipLinkText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den alternativen Text für ein ausgeblendetes Bild ab, das von Bildschirmsprachausgaben gelesen wird und das Überspringen der Linkliste ermöglicht, oder legt diesen Text fest.</summary>
        <value>Der alternative Text für ein ausgeblendetes Bild, das von Bildschirmsprachausgaben gelesen wird und das Überspringen der Linkliste ermöglicht. Der Standardwert ist eine leere Zeichenfolge ("") und gibt an, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A> -Eigenschaft an den alternativen Text für ein ausgeblendetes Bild von Bildschirmsprachausgaben gelesen und das Überspringen der Linkliste ermöglicht. Der Text, den Sie angeben, enthält Geräte mit einer Beschreibung des ausgeblendeten hilfstechnologie Link Bild überspringen, die verwendet werden kann, um das Steuerelement leichter zugänglich machen.  
  
 Der Wert dieser Eigenschaft, wenn festgelegt ist, können mit einem Designer-Tool automatisch in einer Ressourcendatei gespeichert werden. Weitere Informationen finden Sie unter <xref:System.ComponentModel.LocalizableAttribute> und [Globalisierung und Lokalisierung](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
 Die <xref:System.Web.UI.WebControls.Menu> Steuerelement verfügt über die <xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A> Eigenschaft als eine Möglichkeit für das gesamte Steuerelement von Bildschirmsprachausgaben übersprungen werden soll. Wenn die <xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A> Eigenschaft festgelegt ist, ein unsichtbaren Bild mit alternativen Text gerendert wird, sodass der Benutzer die Möglichkeit, am Ende des Steuerelements springen. Bildschirmsprachausgaben lesen den alternativen Text vor, und das Bild nimmt nur ein Pixel Platz. Legen Sie für Pixel präzise Kontrolle über die gerenderte Seite, die <xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A> Eigenschaft auf eine leere Zeichenfolge (""), und geben Sie einen eigenen Mechanismus zum Überspringen des Menüs. Die <xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A> Eigenschaft ist standardmäßig auf die leere Zeichenfolge festgelegt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A> -Eigenschaft an den alternativen Text für ein ausgeblendetes Bild von Bildschirmsprachausgaben gelesen und das Überspringen der Linkliste ermöglicht.  
  
 [!code-aspx-csharp[MenuSkipLinkText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuSkipLinkText/CS/menuskiplinktextcs.aspx#1)]
 [!code-aspx-vb[MenuSkipLinkText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuSkipLinkText/VB/menuskiplinktextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="StaticBottomSeparatorImageUrl">
      <MemberSignature Language="C#" Value="public string StaticBottomSeparatorImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StaticBottomSeparatorImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticBottomSeparatorImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StaticBottomSeparatorImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die URL zu einem Bild ab, das als Trennzeichen am unteren Rand der einzelnen statischen Menüelemente angezeigt wird, oder legt diese URL fest.</summary>
        <value>Die URL zu einem Bild, das als Trennzeichen am unteren Rand jedes einzelnen statischen Menüelements angezeigt wird. Der Standardwert ist eine leere Zeichenfolge (""), die angibt, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl%2A> Eigenschaft, um ein benutzerdefiniertes Bild angeben am unteren Rand der einzelnen statischen Menüs angezeigt werden soll, die als Trennzeichen zwischen den Menüelementen fungiert.  
  
> [!NOTE]
>  Als Alternative können Sie auch einem Trennbild, das am oberen Rand jedes einzelnen statischen Menüelements anzeigen, indem Sie die Einstellung der <xref:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl%2A> Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl%2A> Eigenschaft an einem Trennbild, das am unteren Rand jedes einzelnen statischen Menüelements angezeigt werden soll.  
  
 [!code-aspx-csharp[MenuStaticBottomSeparatorImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticBottomSeparatorImageUrl/CS/menustaticbottomseparatorimageurlcs.aspx#1)]
 [!code-aspx-vb[MenuStaticBottomSeparatorImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticBottomSeparatorImageUrl/VB/menustaticbottomseparatorimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="StaticDisplayLevels">
      <MemberSignature Language="C#" Value="public int StaticDisplayLevels { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 StaticDisplayLevels" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticDisplayLevels" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticDisplayLevels As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int StaticDisplayLevels { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der Menüebenen ab, die in einem statischen Menü angezeigt werden, oder legt diese Anzahl fest.</summary>
        <value>Die Anzahl der Menüebenen, die in einem statischen Menü angezeigt werden. Der Standard ist 1.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A> -Eigenschaft an die Anzahl der Menüebenen, die in einem statischen Menü angezeigt. Alle Menüebenen unter dem angegebenen Wert werden in einem dynamischen Menü angezeigt. Sie können auch die Anzahl der Menüebenen, die in einem dynamischen Menü angezeigt die <xref:System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels%2A> Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A> Eigenschaft, um die ersten beiden Menüebenen in einem statischen Menü angezeigt.  
  
 [!code-aspx-csharp[MenuStaticDisplayLevels#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticDisplayLevels/CS/menustaticdisplaylevelscs.aspx#1)]
 [!code-aspx-vb[MenuStaticDisplayLevels#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticDisplayLevels/VB/menustaticdisplaylevelsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der angegebene Wert ist kleiner als 1.</exception>
        <altmember cref="P:System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels" />
      </Docs>
    </Member>
    <Member MemberName="StaticEnableDefaultPopOutImage">
      <MemberSignature Language="C#" Value="public bool StaticEnableDefaultPopOutImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StaticEnableDefaultPopOutImage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticEnableDefaultPopOutImage As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool StaticEnableDefaultPopOutImage { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob das integrierte Bild angezeigt wird und damit angibt, dass das statische Menüelement über ein Untermenü verfügt.</summary>
        <value>
          <see langword="true" />, um das integrierte Bild für statische Menüelemente mit Untermenüs anzuzeigen, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn ein statisches Menüelement über ein Untermenü enthält, kann ein Bild angezeigt werden, um anzugeben, dass der Benutzer das Menü erweitert werden kann. Es gibt zwei Möglichkeiten zur Anzeige dieses Bilds:  
  
-   Legen Sie die <xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A> Eigenschaft `true` verwenden Sie das integrierte Bild (Standard).  
  
-   Legen Sie die <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A> Eigenschaft, um ein benutzerdefiniertes Bild anzugeben.  
  
 Wenn die <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A> festgelegt wird, überschreibt dieses Bild das integrierte Bild unabhängig vom Wert für die <xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A> Eigenschaft.  
  
> [!NOTE]
>  Wenn die <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A> Eigenschaft nicht festgelegt ist und die <xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A> -Eigenschaftensatz auf `false`, kein Bild angezeigt wird.  
  
 Geben Sie den alternativen Text für das Bild, durch Festlegen der <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString%2A> Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A> Eigenschaft, um das Bild auszublenden, der angibt, dass ein statisches Menüelement über ein Untermenü verfügt. Die <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A> Eigenschaft muss ebenfalls festgelegt werden, auf eine leere Zeichenfolge ("") für das Bild ausgeblendet werden.  
  
 [!code-aspx-csharp[MenuStaticEnableDefaultPopOutImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticEnableDefaultPopOutImage/CS/menustaticenabledefaultpopoutimagecs.aspx#1)]
 [!code-aspx-vb[MenuStaticEnableDefaultPopOutImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticEnableDefaultPopOutImage/VB/menustaticenabledefaultpopoutimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="StaticHoverStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style StaticHoverStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style StaticHoverStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StaticHoverStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ StaticHoverStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf das <see cref="T:System.Web.UI.WebControls.Style" />-Objekt ab, mit dem Sie die Darstellung eines statischen Menüelements, während ein Mauszeiger darauf positioniert ist, festlegen können.</summary>
        <value>Ein Verweis auf <see cref="T:System.Web.UI.WebControls.Style" />, das das Format eines statischen Menüelements darstellt, während der Mauszeiger darauf positioniert ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A> Eigenschaft, um die Darstellung eines statischen Menüelements steuern, wenn der Mauszeiger darauf positioniert ist. Diese Eigenschaft ist schreibgeschützt. Sie können jedoch die Eigenschaften der Festlegen der <xref:System.Web.UI.WebControls.Style> -Objekt wird zurückgegeben. Die Eigenschaften können deklarativ festgelegt werden, in der Form `Property-Subproperty`, wobei `Subproperty` ist eine Eigenschaft der <xref:System.Web.UI.WebControls.Style> Objekt (z. B. `StaticHoverStyle-ForeColor`). Die Eigenschaften können auch programmgesteuert in das Formular festgelegt werden `Property.Subproperty` (z. B. `StaticHoverStyle.ForeColor`).  
  
 Stileigenschaften für ein statisches Menüelement werden in der folgenden Reihenfolge angewendet:  
  
1.  <xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A>  
  
2.  <xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A> Wenn die <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> Auflistung oder <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> Auflistung definiert ist, es ist zu diesem Zeitpunkt angewendet, überschreiben die anderen Formateigenschaften des Elements.  
  
3.  <xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A> Wenn die <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> Auflistung definiert ist, es ist zu diesem Zeitpunkt angewendet, überschreiben die anderen Formateigenschaften des Elements.  
  
4.  <xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A>  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A> Eigenschaft, um die Farbe des Hintergrunds eines statischen Menüelements in ein helles Blau zu ändern, wenn den Mauszeiger darauf positioniert.  
  
 [!code-aspx-csharp[MenuStaticHoverStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticHoverStyle/CS/menustatichoverstylecs.aspx#1)]
 [!code-aspx-vb[MenuStaticHoverStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticHoverStyle/VB/menustatichoverstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="StaticItemFormatString">
      <MemberSignature Language="C#" Value="public string StaticItemFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StaticItemFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticItemFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticItemFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StaticItemFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft zusätzlichen Text ab, der für alle statisch angezeigten Menüelemente angezeigt wird, oder legt diesen fest.</summary>
        <value>Der zusätzliche Text oder die zusätzlichen Zeichen, der bzw. die für alle Menüelemente angezeigt werden. Der Standardwert für diese Eigenschaft ist "{0}."</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft kann zum Einfügen von Text zum Formatieren der statischen Menüelemente in einem Menü verwendet werden. Dies ist besonders nützlich für mobile Geräte. Die <xref:System.Web.UI.WebControls.Menu> Steuerelement Vorlagen für die Anzeige von statischen und dynamischen Menüelementen unterstützt, jedoch werden Vorlagen auf mobilen Geräten ignoriert. Diese Eigenschaft können Sie die Zeichen oder Text hinzufügen und zum Anwenden von Formatierungen auf Menüelemente für die mobilen und desktop-Geräte ohne Verwendung einer Vorlage.  
  
> [!NOTE]
>  Sie sollten auch festlegen, um zu erreichen, konsistent formatieren, wenn Sie diese Eigenschaft verwenden, die <xref:System.Web.UI.WebControls.Menu.DynamicItemFormatString%2A> Eigenschaft, wenn Sie die Formatierung, um die statischen und dynamischen Menüelemente identisch sein möchten.  
  
 Wenn die Vorlage zu formatieren und diese Eigenschaft angewendet werden, wird die Formatierung der Vorlage für mobile Geräte ignoriert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Menu.StaticItemFormatString%2A> und <xref:System.Web.UI.WebControls.Menu.DynamicItemFormatString%2A> Eigenschaften jedes Menüelement Text hinzu.  
  
 [!code-aspx-csharp[MenuItemFormatString#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemFormatString/CS/menuitemformatstringcs.aspx#1)]
 [!code-aspx-vb[MenuItemFormatString#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemFormatString/VB/menuitemformatstringvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicItemFormatString" />
      </Docs>
    </Member>
    <Member MemberName="StaticItemTemplate">
      <MemberSignature Language="C#" Value="public System.Web.UI.ITemplate StaticItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate StaticItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ITemplate ^ StaticItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.MenuItemTemplateContainer))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Vorlage mit benutzerdefinierten Inhalten ab, die für ein statisches Menü gerendert werden sollen, oder legt diese fest.</summary>
        <value>Eine <see cref="T:System.Web.UI.ITemplate" />, die benutzerdefinierte Inhalte für ein statisches Menü enthält. Der Standardwert ist null (0). Dies bedeutet, dass diese Eigenschaft nicht festgelegt wurde.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Anstatt die integrierte Darstellung für ein statisches Menü zu verwenden, können Sie eine eigene Benutzeroberfläche (UI) für ein statisches Menüelement definieren, mit der <xref:System.Web.UI.WebControls.Menu.StaticItemTemplate%2A> Eigenschaft. Um eine benutzerdefinierte Vorlage für ein statisches Menüelement angeben möchten, platzieren Sie zuerst `<StaticTemplate>` zwischen dem Start- und Endtag des Tags der <xref:System.Web.UI.WebControls.Menu> Steuerelement. Anschließend können Sie den Inhalt der Vorlage zwischen den öffnenden und schließenden auflisten `<StaticTemplate>` Tags. Sie können das Format eines statischen Menüs weiter steuern, indem Sie mit der <xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StaticMenuItemStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemStyle StaticMenuItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemStyle StaticMenuItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StaticMenuItemStyle As MenuItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItemStyle ^ StaticMenuItemStyle { System::Web::UI::WebControls::MenuItemStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf das <see cref="T:System.Web.UI.WebControls.MenuItemStyle" />-Objekt ab, mit dem Sie die Darstellung der Menüelemente in einem statischen Menü festlegen können.</summary>
        <value>Ein Verweis auf den <see cref="T:System.Web.UI.WebControls.MenuItemStyle" />, der das Format der Menüelemente in einem statischen Menü darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A> Eigenschaft, um die Darstellung der Menüelemente in einem statischen Menü zu steuern. Diese Eigenschaft ist schreibgeschützt. Sie können jedoch die Eigenschaften der Festlegen der <xref:System.Web.UI.WebControls.MenuItemStyle> -Objekt wird zurückgegeben. Die Eigenschaften können deklarativ festgelegt werden, in der Form `Property-Subproperty`, wobei `Subproperty` ist eine Eigenschaft der <xref:System.Web.UI.WebControls.MenuItemStyle> Objekt (z. B. `StaticMenuItemStyle-ForeColor`). Die Eigenschaften können auch programmgesteuert in das Formular festgelegt werden `Property.Subproperty` (z. B. `StaticMenuItemStyle.ForeColor`).  
  
 Stileigenschaften für ein statisches Menüelement werden in der folgenden Reihenfolge angewendet:  
  
1.  <xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A>  
  
2.  <xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A> Wenn die <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> Auflistung oder <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> Auflistung definiert ist, es ist zu diesem Zeitpunkt angewendet, überschreiben die anderen Formateigenschaften des Elements.  
  
3.  <xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A> Wenn die <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> Auflistung definiert ist, es ist zu diesem Zeitpunkt angewendet, überschreiben die anderen Formateigenschaften des Elements.  
  
4.  <xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A>  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A> Eigenschaft, um ein helles Blau Hintergrundfarbe der Menüelemente in einem statischen Menü anzugeben.  
  
 [!code-aspx-csharp[MenuStaticMenuItemStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticMenuItemStyle/CS/menustaticmenuitemstylecs.aspx#1)]
 [!code-aspx-vb[MenuStaticMenuItemStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticMenuItemStyle/VB/menustaticmenuitemstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="StaticMenuStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SubMenuStyle StaticMenuStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.SubMenuStyle StaticMenuStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StaticMenuStyle As SubMenuStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SubMenuStyle ^ StaticMenuStyle { System::Web::UI::WebControls::SubMenuStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SubMenuStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf das <see cref="T:System.Web.UI.WebControls.MenuItemStyle" />-Objekt ab, mit dem Sie die Darstellung eines statischen Menüs festlegen können.</summary>
        <value>Ein Verweis auf <see cref="T:System.Web.UI.WebControls.MenuItemStyle" />, das das Format eines statischen Menüs darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A> Eigenschaft, um die Darstellung eines statischen Menüs zu steuern. Diese Eigenschaft ist schreibgeschützt. Sie können jedoch die Eigenschaften der Festlegen der <xref:System.Web.UI.WebControls.MenuItemStyle> -Objekt wird zurückgegeben. Die Eigenschaften können deklarativ festgelegt werden, in der Form `Property-Subproperty`, wobei `Subproperty` ist eine Eigenschaft der <xref:System.Web.UI.WebControls.MenuItemStyle> Objekt (z. B. `StaticMenuStyle-ForeColor`). Die Eigenschaften können auch programmgesteuert in das Formular festgelegt werden `Property.Subproperty` (z. B. `StaticMenuStyle.ForeColor`).  
  
 Stileigenschaften für ein statisches Menüelement werden in der folgenden Reihenfolge angewendet:  
  
1.  <xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A>  
  
2.  <xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A> Wenn die <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> Auflistung oder <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> Auflistung definiert ist, es ist zu diesem Zeitpunkt angewendet, überschreiben die anderen Formateigenschaften des Elements.  
  
3.  <xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A> Wenn die <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> Auflistung definiert ist, es ist zu diesem Zeitpunkt angewendet, überschreiben die anderen Formateigenschaften des Elements.  
  
4.  <xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A>  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A> -Eigenschaft ein helles Blau als Hintergrundfarbe für die gesamte Untermenüelemente an.  
  
 [!code-aspx-csharp[MenuStaticMenuStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticMenuStyle/CS/menustaticmenustylecs.aspx#1)]
 [!code-aspx-vb[MenuStaticMenuStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticMenuStyle/VB/menustaticmenustylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="StaticPopOutImageTextFormatString">
      <MemberSignature Language="C#" Value="public string StaticPopOutImageTextFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StaticPopOutImageTextFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticPopOutImageTextFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StaticPopOutImageTextFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den alternativen Text für das Popoutbild ab, das angibt, dass ein statisches Menüelement über ein Untermenü verfügt, oder legt diesen Text fest.</summary>
        <value>Der alternative Text für das Popoutbild. Der Standardwert ist eine leere Zeichenfolge ("") und gibt an, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn ein statisches Menüelement über ein Untermenü enthält, kann ein Bild angezeigt werden, um anzugeben, dass der Benutzer das Menü erweitert werden kann. Verwenden der <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString%2A> Eigenschaft, um den alternativen Text für dieses Bild anzugeben.  
  
 Es gibt zwei Möglichkeiten zur Anzeige des Bilds:  
  
-   Legen Sie die <xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A> Eigenschaft `true` verwenden Sie das integrierte Bild (Standard).  
  
-   Legen Sie die <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A> Eigenschaft, um ein benutzerdefiniertes Bild anzugeben.  
  
> [!NOTE]
>  Diese Eigenschaft gilt für das integrierte Bild und des benutzerdefinierten Images.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString%2A> -Eigenschaft geben Sie den alternativen Text für das Bild verwendet, um anzugeben, dass ein statisches Menüelement über ein Untermenü verfügt. Dieser Text wird als QuickInfo angezeigt, wenn der Benutzer den Mauszeiger über dem Bild positioniert.  
  
 [!code-aspx-csharp[MenuStaticPopoutImageText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticPopoutImageText/CS/menustaticpopoutimagetextcs.aspx#1)]
 [!code-aspx-vb[MenuStaticPopoutImageText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticPopoutImageText/VB/menustaticpopoutimagetextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="StaticPopOutImageUrl">
      <MemberSignature Language="C#" Value="public string StaticPopOutImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StaticPopOutImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticPopOutImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StaticPopOutImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die URL zu einem Bild ab, das angezeigt wird und angibt, dass ein statisches Menüelement über ein Untermenü verfügt, oder legt diese URL zu einem Bild fest.</summary>
        <value>Die URL zu einem Bild, das angezeigt wird und angibt, dass ein statisches Menüelement über ein Untermenü verfügt. Der Standardwert ist eine leere Zeichenfolge (""), die angibt, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn ein statisches Menüelement über ein Untermenü enthält, kann ein Bild angezeigt werden, um anzugeben, dass der Benutzer das Menü erweitert werden kann. Es gibt zwei Möglichkeiten zur Anzeige dieses Bilds:  
  
-   Legen Sie die <xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A> Eigenschaft `true` verwenden Sie das integrierte Bild (Standard).  
  
-   Legen Sie die <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A> Eigenschaft, um ein benutzerdefiniertes Bild anzugeben.  
  
 Wenn die <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A> festgelegt wird, überschreibt dieses Bild das integrierte Bild unabhängig vom Wert für die <xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A> Eigenschaft.  
  
 Wenn die <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A> Eigenschaft nicht festgelegt ist und die <xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A> -Eigenschaftensatz auf `false`, kein Bild angezeigt wird.  
  
> [!NOTE]
>  Wenn Sie diese Eigenschaft festlegen, verwenden Sie einen Schrägstrich (/) anstelle von einem umgekehrten Schrägstrich (\\). Wenn Sie umgekehrte Schrägstriche im Pfad verwenden, wird das angegebene Bild nicht angezeigt.  
  
 Geben Sie den alternativen Text für das Bild, durch Festlegen der <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString%2A> Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A> -Eigenschaft an ein benutzerdefiniertes Bild in einem statischen Menüelements angezeigt wird, wenn das Menüelement über ein Untermenü verfügt.  
  
 [!code-aspx-csharp[MenuStaticPopoutImageText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticPopoutImageText/CS/menustaticpopoutimagetextcs.aspx#1)]
 [!code-aspx-vb[MenuStaticPopoutImageText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticPopoutImageText/VB/menustaticpopoutimagetextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="StaticSelectedStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemStyle StaticSelectedStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemStyle StaticSelectedStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StaticSelectedStyle As MenuItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItemStyle ^ StaticSelectedStyle { System::Web::UI::WebControls::MenuItemStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf das <see cref="T:System.Web.UI.WebControls.MenuItemStyle" />-Objekt ab, mit dem Sie die Darstellung des vom Benutzer in einem statischen Menü ausgewählten Menüelements festlegen können.</summary>
        <value>Ein Verweis auf den <see cref="T:System.Web.UI.WebControls.MenuItemStyle" />, der das Format des ausgewählten Menüelements in einem statischen Menü darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A> Eigenschaft, um die Darstellung des vom Benutzer in einem statischen Menü ausgewählten Menüelements zu steuern. Diese Eigenschaft ist schreibgeschützt. Sie können jedoch die Eigenschaften der Festlegen der <xref:System.Web.UI.WebControls.MenuItemStyle> -Objekt wird zurückgegeben. Die Eigenschaften können deklarativ festgelegt werden, in der Form `Property-Subproperty`, wobei `Subproperty` ist eine Eigenschaft der <xref:System.Web.UI.WebControls.MenuItemStyle> Objekt (z. B. `StaticSelectedStyle-ForeColor`). Die Eigenschaften können auch programmgesteuert in das Formular festgelegt werden `Property.Subproperty` (z. B. `StaticSelectedStyle.ForeColor`).  
  
 Stileigenschaften für ein statisches Menüelement werden in der folgenden Reihenfolge angewendet:  
  
1.  <xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A>  
  
2.  <xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A> Wenn die <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> Auflistung oder <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> Auflistung definiert ist, es ist zu diesem Zeitpunkt angewendet, überschreiben die anderen Formateigenschaften des Elements.  
  
3.  <xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A> Wenn die <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> Auflistung definiert ist, es ist zu diesem Zeitpunkt angewendet, überschreiben die anderen Formateigenschaften des Elements.  
  
4.  <xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A>  
  
> [!IMPORTANT]
>  Unterbrechende Änderung, die weiter unten.  
  
 Vor .NET Framework 4.0, beim Definieren einer `<asp:Menu>` Steuerelement in der ASPX-Datei, können Benutzer Festlegen der `StaticSelectedStyle-CssClass` CSS-Klasse des ausgewählten Steuerelements Elements festzulegende Eigenschaft. Benutzer kann beispielsweise ein Menüsteuerelement wie unten beschrieben haben:  
  
```  
<asp:Menu ID="Menu1" runat="server" Orientation="Horizontal"   
    StaticMenuItemStyle-CssClass="MenuItem"  
    StaticSelectedStyle-CssClass="MenuItem_selected"  
    OnMenuItemClick="Menu1_MenuItemClick" Style="margin-bottom: 0px" EnableTheming="True" ClientIDMode="Static">  
    <Items>  
        <asp:MenuItem Text="item_0" Value="0" Selected="True"></asp:MenuItem>  
        <asp:MenuItem Text="itme_1" Value="1"></asp:MenuItem>  
    </Items>  
</asp:Menu>  
```  
  
 Und das Menüsteuerelement wird als gerendert:  
  
```  
<div id="Menu1" style="margin-bottom: 0px">  
    <ul class="level1">  
        <li><a class="level1 MenuItem MenuItem_selected " href="#" onclick="__doPostBack(&#39;Menu1&#39;,&#39;0&#39;)">item_0</a></li>  
        <li><a class="level1 MenuItem" href="#" onclick="__doPostBack(&#39;Menu1&#39;,&#39;1&#39;)">itme_1</a></li>  
    </ul>  
</div>  
```  
  
 In .NET Framework 4.0 und höher, das ausgewählte Menüelement wird jedoch festgelegt die `selected` CSS-Klasse anstelle der vom angegebenen Klasse immer `StaticSelectedStyle-CssClass`. Der oben genannten ASP.NET-Code wird daher stattdessen gerendert als:  
  
```  
<div id="Menu1" style="margin-bottom: 0px">  
    <ul class="level1">  
        <li><a class="level1 MenuItem selected " href="#" onclick="__doPostBack(&#39;Menu1&#39;,&#39;0&#39;)">item_0</a></li>  
        <li><a class="level1 MenuItem" href="#" onclick="__doPostBack(&#39;Menu1&#39;,&#39;1&#39;)">itme_1</a></li>  
    </ul>  
</div>  
  
```  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A> Eigenschaft, um eine Farbe hellblauen Hintergrund versehen, für das ausgewählte statische Menüelement anzugeben.  
  
 [!code-aspx-csharp[MenuStaticSelectedStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticSelectedStyle/CS/menustaticselectedstylecs.aspx#1)]
 [!code-aspx-vb[MenuStaticSelectedStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticSelectedStyle/VB/menustaticselectedstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
      </Docs>
    </Member>
    <Member MemberName="StaticSubMenuIndent">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Unit StaticSubMenuIndent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit StaticSubMenuIndent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticSubMenuIndent" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticSubMenuIndent As Unit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Unit StaticSubMenuIndent { System::Web::UI::WebControls::Unit get(); void set(System::Web::UI::WebControls::Unit value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.WebControls.Unit), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Abstand (in Pixel) für den Einzug der Untermenüs in einem statischen Menü ab oder legt diesen Abstand fest.</summary>
        <value>Eine <see cref="T:System.Web.UI.WebControls.Unit" />, die den Abstand (in Pixel) darstellt, mit dem der Einzug der Untermenüs in einem statischen Menü erfolgen soll. Der Standard ist 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei ein statische Menü wird mehr als ein Menüebene angezeigt (wenn die <xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A> Eigenschaft auf einen höheren Wert als 1 festgelegt ist), verwenden Sie die <xref:System.Web.UI.WebControls.Menu.StaticSubMenuIndent%2A> Eigenschaft, um die Anzahl der Pixel, um den Einzug der Untermenüelemente in einem statischen Menü anzugeben.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Menu.StaticSubMenuIndent%2A> Eigenschaft, um den Einzug der Untermenüelemente in einem statischen Menü 10 Pixel.  
  
 [!code-aspx-csharp[MenuStaticSubMenuIndent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticSubMenuIndent/CS/menustaticsubmenuindentcs.aspx#1)]
 [!code-aspx-vb[MenuStaticSubMenuIndent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticSubMenuIndent/VB/menustaticsubmenuindentvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der Wert der ausgewählten <see cref="T:System.Web.UI.WebControls.Unit" /> ist kleiner als 0 (null).</exception>
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticDisplayLevels" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHorizontalOffset" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicVerticalOffset" />
      </Docs>
    </Member>
    <Member MemberName="StaticTopSeparatorImageUrl">
      <MemberSignature Language="C#" Value="public string StaticTopSeparatorImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StaticTopSeparatorImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticTopSeparatorImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StaticTopSeparatorImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die URL zu einem Bild ab, das als Trennzeichen am oberen Rand der einzelnen statischen Menüelemente angezeigt wird, oder legt diese URL fest.</summary>
        <value>Die URL zu einem Bild, das als Trennzeichen am oberen Rand jedes einzelnen statischen Menüelements angezeigt wird. Der Standardwert ist eine leere Zeichenfolge (""), die angibt, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl%2A> Eigenschaft, um ein benutzerdefiniertes Bild angeben am oberen Rand jedes statischen Menüelements angezeigt, die als Trennzeichen zwischen den Menüelementen fungiert.  
  
> [!NOTE]
>  Als Alternative können Sie auch einem Trennbild, das am unteren Rand jedes einzelnen statischen Menüelements anzeigen, indem Sie die Einstellung der <xref:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl%2A> Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl%2A> Eigenschaft an einem Trennbild, das am oberen Rand jedes einzelnen statischen Menüelements angezeigt werden soll.  
  
 [!code-aspx-csharp[MenuStaticTopSeparatorImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticTopSeparatorImageUrl/CS/menustatictopseparatorimageurlcs.aspx#1)]
 [!code-aspx-vb[MenuStaticTopSeparatorImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticTopSeparatorImageUrl/VB/menustatictopseparatorimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostBackEvent (eventArgument As String) Implements IPostBackEventHandler.RaisePostBackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System::String ^ eventArgument) = System::Web::UI::IPostBackEventHandler::RaisePostBackEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Ein <see cref="T:System.String" />, der das an den Ereignishandler übergebene Ereignisargument darstellt.</param>
        <summary>Verarbeitet ein Ereignis, das beim Senden eines Formulars an den Server ausgelöst wird.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den <see cref="T:System.Web.UI.HtmlTextWriterTag" />-Wert ab, der einem <see cref="T:System.Web.UI.WebControls.Menu" />-Steuerelement entspricht. Diese Eigenschaft wird hauptsächlich von Steuerelemententwicklern verwendet.</summary>
        <value>Gibt immer <see langword="HtmlTextWriterTag.Table" /> zurück.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.Menu.TagKey%2A> -Eigenschaft zum Bestimmen der <xref:System.Web.UI.HtmlTextWriterTag> -Wert, der zugeordnet ist ein <xref:System.Web.UI.WebControls.Menu> Steuerelement. Diese Eigenschaft wird hauptsächlich von Steuerelemententwicklern verwendet.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public string Target { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Target" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.Target" />
      <MemberSignature Language="VB.NET" Value="Public Property Target As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Target { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Zielfenster oder den Zielframe ab, in dem die einem Menüeelement zugeordneten Webseiteninhalte angezeigt werden sollen, oder legt dieses Zielfenster bzw. den Zielframe fest.</summary>
        <value>Das Zielfenster oder der Zielframe, in dem der verknüpfte Webseiteninhalt angezeigt werden soll. Der Standardwert ist eine leere Zeichenfolge (""), die das Fenster oder den Frame mit dem Fokus aktualisiert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.Menu.Target%2A> Eigenschaft an das Fenster oder der Zielframe, in dem den Webinhalt angezeigt verknüpft ein Menüelement, wenn das Menüelement geklickt wird. Werte müssen mit einem Buchstaben aus dem Bereich von A bis Z (ohne Berücksichtigung der Groß- und Kleinschreibung) beginnen, mit Ausnahme der in folgender Tabelle aufgeführten speziellen Werte, die mit einem Unterstrich beginnen:  
  
|Zielwert|Beschreibung |  
|------------------|-----------------|  
|`_blank`|Stellt den Inhalt in einem neuen Fenster ohne Frames dar.|  
|`_parent`|Stellt den Inhalt im unmittelbar übergeordneten Frameset dar.|  
|`_search`|Gibt den Inhalt im Suchbereich wieder.|  
|`_self`|Stellt den Inhalt in dem Frame dar, der den Fokus besitzt.|  
|`_top`|Stellt den Inhalt im gesamten Fenster ohne Frames dar.|  
  
> [!NOTE]
>  Sie können der Browserdokumentation entnehmen, ob der `_search`-Wert unterstützt wird.  Z. B. Internet Explorer-Versionen 5.0 und höher unterstützt die `_search` Zielwert  
  
 Diese Eigenschaft gilt für alle Menüelemente in einem <xref:System.Web.UI.WebControls.Menu> Steuerelement. Sie können diese Eigenschaft selektiv überschreiben, durch Festlegen der <xref:System.Web.UI.WebControls.MenuItem.Target%2A> -Eigenschaft jedes <xref:System.Web.UI.WebControls.MenuItem> -Objekts direkt.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.MenuItem.Target%2A> Eigenschaft wird als ein Zielattribut gerendert. Das Zielattribut auf Ankerelemente ist im strict-Dokumenttypdefinition XHTML 1.1 nicht zulässig. Wenn die gerenderter Ausgabe XHTML oder Accessibility Standards entsprechen muss, legen Sie keine der <xref:System.Web.UI.WebControls.MenuItem.Target%2A> Eigenschaft. Weitere Informationen finden Sie unter [XHTML-Standards in Visual Studio und ASP.NET](http://msdn.microsoft.com/library/1b78d416-66bb-43a5-ac77-c703aab55b97) und [Barrierefreiheit in Visual Studio und ASP.NET](http://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Menu.Target%2A> Eigenschaft, um anzugeben, dass der Inhalt jedes Menüelement verknüpften sollte in einem neuen Fenster angezeigt werden, wenn der Benutzer das Menüelement klickt.  
  
 [!code-aspx-csharp[MenuTarget#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuTarget/CS/menutargetcs.aspx#1)]
 [!code-aspx-vb[MenuTarget#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuTarget/VB/menutargetvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Target" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Verfolgt die am Ansichtszustand des <see cref="T:System.Web.UI.WebControls.Menu" />-Steuerelements vorgenommenen Änderungen und speichert diese im <see cref="T:System.Web.UI.StateBag" />-Objekt des Steuerelements. Auf dieses Objekt kann über die <see cref="P:System.Web.UI.Control.ViewState" />-Eigenschaft zugegriffen werden.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="P:System.Web.UI.Control.ViewState" />
      </Docs>
    </Member>
  </Members>
</Type>