<Type Name="Menu" FullName="System.Web.UI.WebControls.Menu">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4613b18b633cf1e292af5ccd2bf6818f0314bb66" /><Meta Name="ms.sourcegitcommit" Value="f9576bf8c61e3d46834aeeff50f858359f2a99ba" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="02/09/2020" /><Meta Name="ms.locfileid" Value="77106627" /></Metadata><TypeSignature Language="C#" Value="public class Menu : System.Web.UI.WebControls.HierarchicalDataBoundControl, System.Web.UI.INamingContainer, System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Menu extends System.Web.UI.WebControls.HierarchicalDataBoundControl implements class System.Web.UI.INamingContainer, class System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Menu" />
  <TypeSignature Language="VB.NET" Value="Public Class Menu&#xA;Inherits HierarchicalDataBoundControl&#xA;Implements INamingContainer, IPostBackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class Menu : System::Web::UI::WebControls::HierarchicalDataBoundControl, System::Web::UI::INamingContainer, System::Web::UI::IPostBackEventHandler" />
  <TypeSignature Language="F#" Value="type Menu = class&#xA;    inherit HierarchicalDataBoundControl&#xA;    interface IPostBackEventHandler&#xA;    interface INamingContainer" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.HierarchicalDataBoundControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.INamingContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("MenuItemClick")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.MenuDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlValueProperty("SelectedValue")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.MenuDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Zeigt ein Menü auf einer ASP.NET-Webseite an.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Inhalte dieses Themas:  
  
-   [Einführung](#introduction)  
  
-   [Menü Elemente](#menu_items)  
  
-   [Statische Daten](#static_data)  
  
-   [Binden an Daten](#binding_to_data)  
  
-   [Anpassen der Benutzeroberfläche](#customizing_the_user_interface)  
  
-   [Ereignisse](#events)  
  
-   [Barrierefreiheit](#accessibility)  
  
-   [Deklarative Syntax](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Einführung  
 Das <xref:System.Web.UI.WebControls.Menu> Steuerelement wird zum Anzeigen eines Menüs auf einer ASP.NET-Webseite verwendet und wird häufig in Kombination mit einem <xref:System.Web.UI.WebControls.SiteMapDataSource>-Steuerelement für die Navigation in einer Website verwendet. Das <xref:System.Web.UI.WebControls.Menu>-Steuerelement unterstützt die folgenden Funktionen:  
  
-   Datenbindung, mit der die Menü Elemente des Steuer Elements an hierarchale Datenquellen gebunden werden können.  
  
-   Site Navigation durch Integration in das <xref:System.Web.UI.WebControls.SiteMapDataSource>-Steuerelement.  
  
-   Programmgesteuerter Zugriff auf die <xref:System.Web.UI.WebControls.Menu> Objektmodell zum dynamischen Erstellen von Menüs, Menüelemente auffüllen, Eigenschaften festlegen und usw.  
  
-   Anpassbare Darstellung durch Designs, benutzerdefinierte Bilder, Stile und benutzerdefinierte Vorlagen.  
  
 Wenn der Benutzer auf ein Menü Element klickt, kann das <xref:System.Web.UI.WebControls.Menu>-Steuerelement entweder zu einer verknüpften Webseite navigieren oder einfach an den Server zurücksenden. Wenn die <xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A>-Eigenschaft eines Menü Elements festgelegt wird, navigiert das <xref:System.Web.UI.WebControls.Menu>-Steuerelement zur verknüpften Seite. Andernfalls wird die Seite zur Verarbeitung an den Server zurückgesendet. Standardmäßig wird eine verknüpfte Seite im gleichen Fenster oder Frame angezeigt wie das <xref:System.Web.UI.WebControls.Menu> Steuerelement. Um den verknüpften Inhalt in einem anderen Fenster oder Frame anzuzeigen, verwenden Sie die <xref:System.Web.UI.WebControls.Menu.Target%2A>-Eigenschaft des <xref:System.Web.UI.WebControls.Menu> Steuer Elements.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.Menu.Target%2A>-Eigenschaft wirkt sich auf alle Menü Elemente im-Steuerelement aus. Wenn Sie ein Fenster oder einen Frame für ein einzelnes Menü Element angeben möchten, legen Sie die <xref:System.Web.UI.WebControls.MenuItem.Target%2A>-Eigenschaft des <xref:System.Web.UI.WebControls.MenuItem>-Objekts direkt fest.  
  
 Das <xref:System.Web.UI.WebControls.Menu>-Steuerelement zeigt zwei Arten von Menüs an: ein statisches Menü und ein dynamisches Menü. Das statische Menü wird immer in einem <xref:System.Web.UI.WebControls.Menu> Steuerelement angezeigt. Standardmäßig werden die Menü Elemente auf der Stamm Ebene (Ebene 0) im statischen Menü angezeigt. Sie können zusätzliche Menüebenen (statische Untermenüs) im statischen Menü anzeigen, indem Sie die <xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A>-Eigenschaft festlegen. Menü Elemente (sofern vorhanden) mit einer höheren Ebene als der Wert, der durch die <xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A>-Eigenschaft angegeben wird, werden in einem dynamischen Menü angezeigt. Ein dynamisches Menü wird nur angezeigt, wenn der Benutzer den Mauszeiger über dem übergeordneten Menü Element positioniert, das ein dynamisches Untermenü enthält. Dynamische Menüs werden nach einer bestimmten Dauer automatisch ausgeblendet. Verwenden Sie die <xref:System.Web.UI.WebControls.Menu.DisappearAfter%2A>-Eigenschaft, um die Dauer anzugeben.  
  
> [!NOTE]
>  Ein dynamisches Menü verschwindet auch, wenn der Benutzer außerhalb des Menüs klickt.  
  
 Sie können die Anzahl der Ebenen, die in einem dynamischen Menü angezeigt werden, auch einschränken, indem Sie die <xref:System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels%2A>-Eigenschaft festlegen. Menüebenen, die höher sind als der angegebene Wert, werden verworfen.  
  
> [!NOTE]
>  Das <xref:System.Web.UI.WebControls.Menu> Steuerelement ist nicht für die Verwendung in einem <xref:System.Web.UI.UpdatePanel> Steuerelement konzipiert. Sie können das <xref:System.Web.UI.WebControls.Menu>-Steuerelement nur einer Seite außerhalb eines <xref:System.Web.UI.UpdatePanel> Steuer Elements hinzufügen. <xref:System.Web.UI.UpdatePanel> Steuerelemente werden verwendet, um die ausgewählten Bereiche einer Seite zu aktualisieren, anstatt die gesamte Seite mit einem Postback zu aktualisieren. Weitere Informationen finden Sie unter Übersicht über das [Update Panel-Steuer](https://docs.microsoft.com/previous-versions/aspnet/bb386454(v=vs.100)) Element und [Übersicht über das Seiten Rendering](https://docs.microsoft.com/previous-versions/aspnet/bb386573(v=vs.100)).  
  
<a name="menu_items"></a>   
## <a name="menu-items"></a>Menüelemente  
 Ein <xref:System.Web.UI.WebControls.Menu> Steuerelement besteht aus einer Struktur von Menü Elementen, die durch <xref:System.Web.UI.WebControls.MenuItem>-Objekten dargestellt werden. Menü Elemente auf der obersten Ebene (Ebene 0) werden als Stamm Menü Elemente bezeichnet. Ein Menü Element, das über ein übergeordnetes Menü Element verfügt, wird als untergeordnetes Menü Element bezeichnet. Alle Stamm Menü Elemente werden in der <xref:System.Web.UI.WebControls.Menu.Items%2A> Auflistung gespeichert. Untergeordnete Menü Elemente werden in der <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> Auflistung eines übergeordneten Menü Elements gespeichert.  
  
 Jedes Menü Element verfügt über eine <xref:System.Web.UI.WebControls.MenuItem.Text%2A> und eine <xref:System.Web.UI.WebControls.MenuItem.Value%2A>-Eigenschaft. Der Wert der <xref:System.Web.UI.WebControls.MenuItem.Text%2A>-Eigenschaft wird im <xref:System.Web.UI.WebControls.Menu> Steuerelement angezeigt, während die <xref:System.Web.UI.WebControls.MenuItem.Value%2A>-Eigenschaft verwendet wird, um zusätzliche Daten über das Menü Element zu speichern, z. b. Daten, die an das dem Menü Element zugeordnete Post Back Ereignis weitergegeben werden. Wenn Sie darauf klicken, kann ein Menü Element zu einer anderen Webseite navigieren, die durch die <xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A>-Eigenschaft angegeben wird.  
  
> [!NOTE]
>  Wenn die <xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A>-Eigenschaft für ein Menü Element nicht festgelegt ist, sendet das <xref:System.Web.UI.WebControls.Menu>-Steuerelement die Seite einfach zur Verarbeitung an den Server, wenn auf das Menü Element geklickt wird.  
  
 Sie können optional auch ein Bild in einem Menü Element anzeigen, indem Sie die <xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A>-Eigenschaft festlegen.  
  
 Weitere Informationen zu Menü Elementen finden Sie unter <xref:System.Web.UI.WebControls.MenuItem>.  
  
<a name="static_data"></a>   
## <a name="static-data"></a>Statische Daten  
 Das einfachste Datenmodell des <xref:System.Web.UI.WebControls.Menu> Steuer Elements sind statische Menü Elemente. Um statische Menü Elemente mithilfe von deklarativer Syntax anzuzeigen, Schachteln Sie zunächst die öffnenden und schließenden `<Items>` Tags zwischen den öffnenden und schließenden Tags des <xref:System.Web.UI.WebControls.Menu> Steuer Elements. Erstellen Sie als nächstes die Menüstruktur, indem Sie `<asp:MenuItem>` Elemente zwischen den öffnenden und schließenden `<Items>` Tags schachteln. Jedes `<asp:MenuItem>` Element stellt ein Menü Element im-Steuerelement dar und ist einem <xref:System.Web.UI.WebControls.MenuItem>-Objekt zugeordnet. Sie können die Eigenschaften der einzelnen Menü Elemente festlegen, indem Sie die Attribute der `<asp:MenuItem>` Element festlegen. Um unter Menü Elemente zu erstellen, verschachteln Sie zusätzliche `<asp:MenuItem>` Elemente zwischen dem öffnenden und dem schließenden `<asp:MenuItem>` Tags des übergeordneten Menü Elements.  
  
<a name="binding_to_data"></a>   
## <a name="binding-to-data"></a>Binden an Daten  
 Das <xref:System.Web.UI.WebControls.Menu> Steuerelement kann beliebige hierarchale Datenquellen Steuerelemente verwenden, z. b. ein <xref:System.Web.UI.WebControls.XmlDataSource> Steuerelement oder ein <xref:System.Web.UI.WebControls.SiteMapDataSource>-Steuerelement. Legen Sie zum Binden an ein hierarchische-Datenquellen Steuerelement die <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A>-Eigenschaft des <xref:System.Web.UI.WebControls.Menu>-Steuer Elements auf den <xref:System.Web.UI.Control.ID%2A> Wert des Datenquellen-Steuer Elements fest. Das <xref:System.Web.UI.WebControls.Menu>-Steuerelement bindet automatisch an das angegebene Datenquellen-Steuerelement. Dies ist die bevorzugte Methode, um Daten zu binden.  
  
 Beim Binden an eine Datenquelle, in der jedes Datenelement mehrere Eigenschaften enthält (z. b. ein XML-Element mit mehreren Attributen), zeigt ein Menü Element den von der `ToString`-Methode des Datenelements zurückgegebenen Wert standardmäßig an. Im Fall eines XML-Elements zeigt das Menü Element den Elementnamen an, der die zugrunde liegende Struktur der Menüstruktur anzeigt, ansonsten aber nicht sehr nützlich ist. Sie können ein Menü Element an eine bestimmte Datenelement Eigenschaft binden, indem Sie die <xref:System.Web.UI.WebControls.Menu.DataBindings%2A> Auflistung verwenden, um Menü Element Bindungen anzugeben. Die <xref:System.Web.UI.WebControls.Menu.DataBindings%2A>-Auflistung enthält <xref:System.Web.UI.WebControls.MenuItemBinding> Objekte, die die Beziehung zwischen einem Datenelement und dem Menü Element definieren, an das es gebunden wird. Sie können die Kriterien für die Bindung und die Datenelement Eigenschaft angeben, die im Knoten angezeigt werden soll. Weitere Informationen zu Menü Element Bindungen finden Sie unter <xref:System.Web.UI.WebControls.MenuItemBinding>.  
  
 Sie können keine leeren Knoten in einem <xref:System.Web.UI.WebControls.Menu>-Steuerelement erstellen, indem Sie die <xref:System.Web.UI.WebControls.MenuItemBinding.Text%2A>-oder <xref:System.Web.UI.WebControls.MenuItemBinding.TextField%2A>-Eigenschaften auf die leere Zeichenfolge ("") festlegen. Das Festlegen dieser Eigenschaften auf die leere Zeichenfolge hat denselben Effekt wie das Festlegen der Eigenschaften. In diesem Fall erstellt das <xref:System.Web.UI.WebControls.Menu>-Steuerelement mithilfe der <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A>-Eigenschaft eine Standard Bindung. Weitere Informationen finden Sie unter [binden an Datenbanken](https://msdn.microsoft.com/library/ab7b2846-975b-4057-a948-45527497c742).  
  
<a name="customizing_the_user_interface"></a>   
## <a name="customizing-the-user-interface"></a>Anpassen der Benutzeroberfläche  
 Es gibt viele Möglichkeiten, die Darstellung des <xref:System.Web.UI.WebControls.Menu> Steuer Elements anzupassen. Zuerst können Sie angeben, ob das <xref:System.Web.UI.WebControls.Menu> Steuerelement horizontal oder vertikal gerendert wird, indem Sie die <xref:System.Web.UI.WebControls.Menu.Orientation%2A>-Eigenschaft festlegen. Sie können auch einen anderen Stil (z. b. Schriftart Größe und Farbe) für die einzelnen Menü Elementtypen angeben.  
  
 Wenn Sie Cascading Stylesheets (CSS) verwenden, um die Darstellung des Steuer Elements anzupassen, verwenden Sie entweder Inline Stile oder eine separate CSS-Datei, aber nicht beides. Die Verwendung von Inline Formaten und einer separaten CSS-Datei kann zu unerwarteten Ergebnissen führen. Weitere Informationen zur Verwendung von Stylesheets mit Steuerelementen finden Sie unter [Webserver Steuerelemente und CSS-Stile](https://msdn.microsoft.com/library/782c2db6-fc9b-4243-8df9-a8ffe2f4cc42).  
  
 In der folgenden Tabelle sind die verfügbaren Menü Element Stile aufgeführt.  
  
|Menü Element Stil (Eigenschaft)|BESCHREIBUNG|  
|------------------------------|-----------------|  
|<xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A>|Die Stileinstellungen für ein dynamisches Menü Element, wenn der Mauszeiger darauf positioniert ist.|  
|<xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A>|Die Stileinstellungen für ein einzelnes dynamisches Menü Element.|  
|<xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A>|Die Stileinstellungen für ein dynamisches Menü.|  
|<xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A>|Die Stileinstellungen für das aktuell ausgewählte dynamische Menü Element.|  
|<xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A>|Die Stileinstellungen für ein statisches Menü Element, wenn der Mauszeiger darauf positioniert ist.|  
|<xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A>|Die Stileinstellungen für ein einzelnes statisches Menü Element.|  
|<xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A>|Die Stileinstellungen für ein statisches Menü.|  
|<xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A>|Die Stileinstellungen für das aktuell ausgewählte statische Menü Element.|  
  
 Anstatt die einzelnen Stileigenschaften festzulegen, können Sie mithilfe der folgenden Stil Auflistungen Stile angeben, die auf die Menü Elemente basierend auf ihrer Ebene angewendet werden.  
  
|Sammlungen auf Ebene|BESCHREIBUNG|  
|-----------------------------|-----------------|  
|<xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A>|Eine Auflistung von <xref:System.Web.UI.WebControls.MenuItemStyle>-Objekten, die den Stil der Menü Elemente auf einer Ebene steuern.|  
|<xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A>|Eine Auflistung von <xref:System.Web.UI.WebControls.MenuItemStyle>-Objekten, die den Stil ausgewählter Menü Elemente auf einer Ebene steuern.|  
|<xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A>|Eine Auflistung von <xref:System.Web.UI.WebControls.MenuItemStyle>-Objekten, die den Stil der unter Menü Elemente auf einer Ebene steuern.|  
  
 Der erste Stil in der Auflistung entspricht dem Stil der Menü Elemente auf der ersten tiefen Ebene in der Menüstruktur. Der zweite Stil in der Auflistung entspricht dem Stil der Menü Elemente auf der zweiten tiefen Ebene in der Menüstruktur usw. Dies wird am häufigsten verwendet, um Inhalts Stil-Navigationsmenüs zu generieren, bei denen Menü Elemente in einer bestimmten Tiefe die gleiche Darstellung aufweisen sollten, unabhängig davon, ob Sie über Untermenüs verfügen.  
  
> [!NOTE]
>  Wenn Sie eine der in der vorherigen Tabelle aufgeführten Ebenen-Auflistungen verwenden, um den Stil für das <xref:System.Web.UI.WebControls.Menu> Steuerelement zu definieren, überschreiben diese Stileinstellungen die einzelnen Menü Element-Stileigenschaften.  
  
 Eine andere Möglichkeit, die Darstellung des Steuer Elements zu ändern, besteht darin, die im <xref:System.Web.UI.WebControls.Menu> Steuerelement angezeigten Bilder anzupassen. Sie können Ihr eigenes benutzerdefiniertes Image für die verschiedenen Teile des Steuer Elements angeben, indem Sie die in der folgenden Tabelle aufgeführten Eigenschaften festlegen.  
  
|Image-Eigenschaft|BESCHREIBUNG|  
|--------------------|-----------------|  
|<xref:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl%2A>|Ein optionales Bild, das am unteren Rand eines dynamischen Menü Elements angezeigt wird, um es von anderen Menü Elementen zu trennen.|  
|<xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A>|Ein optionales Bild, das in einem dynamischen Menü Element angezeigt wird, um anzugeben, dass es über ein Untermenü verfügt.|  
|<xref:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl%2A>|Ein optionales Bild, das am oberen Rand eines dynamischen Menü Elements angezeigt wird, um es von anderen Menü Elementen zu trennen.|  
|<xref:System.Web.UI.WebControls.Menu.ScrollDownImageUrl%2A>|Das Bild, das am unteren Rand eines Menü Elements angezeigt wird, um anzugeben, dass der Benutzer zum Anzeigen weiterer Menü Elemente einen Bildlauf nach unten durchführen kann.|  
|<xref:System.Web.UI.WebControls.Menu.ScrollUpImageUrl%2A>|Das Bild, das oben in einem Menü Element angezeigt wird, um anzugeben, dass der Benutzer einen Bildlauf nach oben durchführen kann, um weitere Menü Elemente anzuzeigen.|  
|<xref:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl%2A>|Ein optionales Bild, das am unteren Rand eines statischen Menü Elements angezeigt wird, um es von anderen Menü Elementen zu trennen.|  
|<xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A>|Ein optionales Bild, das in einem statischen Menü Element angezeigt wird, um anzugeben, dass es über ein Untermenü verfügt.|  
|<xref:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl%2A>|Ein optionales Bild, das oben in einem statischen Menü Element angezeigt wird, um es von anderen Menü Elementen zu trennen.|  
  
 Um die Benutzeroberfläche zu steuern, können Sie eigene benutzerdefinierte Vorlagen für das <xref:System.Web.UI.WebControls.Menu> Steuerelement mithilfe der folgenden Vorlagen Eigenschaften definieren.  
  
|Template-Eigenschaft|BESCHREIBUNG|  
|-----------------------|-----------------|  
|<xref:System.Web.UI.WebControls.Menu.DynamicItemTemplate%2A>|Die Vorlage, die den benutzerdefinierten Inhalt enthält, der für ein dynamisches Menü Element dargestellt werden soll.|  
|<xref:System.Web.UI.WebControls.Menu.StaticItemTemplate%2A>|Die Vorlage, die den benutzerdefinierten Inhalt enthält, der für ein statisches Menü Element dargestellt werden soll.|  
  
 Sie können die vertikale und horizontale Position des ein dynamisches Menü relativ zu seinem übergeordneten Menüelement steuern, durch Festlegen der <xref:System.Web.UI.WebControls.Menu.DynamicVerticalOffset%2A> und <xref:System.Web.UI.WebControls.Menu.DynamicHorizontalOffset%2A> Eigenschaften bzw. Um den Einzug der statischen unter Menü Elemente in einem statischen Menü zu steuern, verwenden Sie die <xref:System.Web.UI.WebControls.Menu.StaticSubMenuIndent%2A>-Eigenschaft.  
  
<a name="events"></a>   
## <a name="events"></a>Events  
 Das <xref:System.Web.UI.WebControls.Menu>-Steuerelement stellt mehrere Ereignisse bereit, mit denen Sie programmieren können. Dies ermöglicht es Ihnen, eine benutzerdefinierte Routine immer dann auszuführen, wenn ein Ereignis auftritt. In der folgenden Tabelle sind die unterstützten Ereignisse aufgeführt.  
  
|Ereignis|BESCHREIBUNG|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.Menu.MenuItemClick>|Tritt ein, wenn auf ein Menüelement geklickt wird. Dieses Ereignis wird häufig verwendet, um ein <xref:System.Web.UI.WebControls.Menu>-Steuerelement mit einem anderen Steuerelement auf der Seite zu synchronisieren.|  
|<xref:System.Web.UI.WebControls.Menu.MenuItemDataBound>|Tritt ein, wenn ein Menü Element an Daten gebunden wird. Dieses Ereignis wird häufig verwendet, um ein Menü Element zu ändern, bevor es in einem <xref:System.Web.UI.WebControls.Menu> Steuerelement gerendert wird.|  
  
<a name="accessibility"></a>   
## <a name="accessibility"></a>Barrierefreiheit  
 Weitere Informationen zur Verwendung dieses Steuerelement so konfigurieren, dass sie Markup generiert, das Accessibility Standards entspricht, finden Sie unter [Barrierefreiheit in Visual Studio und ASP.NET](https://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13) und [ASP.NET-Steuerelemente und Barrierefreiheit](https://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Deklarative Syntax  
  
```  
<asp:Menu  
    AccessKey="string"  
    BackColor="color name|#dddddd"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    CssClass="string"  
    DataSource="string"  
    DataSourceID="string"  
    DisappearAfter="integer"  
    DynamicBottomSeparatorImageUrl="uri"  
    DynamicEnableDefaultPopOutImage="True|False"  
    DynamicHorizontalOffset="integer"  
    DynamicItemFormatString="string"  
    DynamicPopOutImageTextFormatString="string"  
    DynamicPopOutImageUrl="uri"  
    DynamicTopSeparatorImageUrl="uri"  
    DynamicVerticalOffset="integer"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    Height="size"  
    ID="string"  
    ItemWrap="True|False"  
    MaximumDynamicDisplayLevels="integer"  
    OnDataBinding="DataBinding event handler"  
    OnDataBound="DataBound event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnMenuItemClick="MenuItemClick event handler"  
    OnMenuItemDataBound="MenuItemDataBound event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    Orientation="Horizontal|Vertical"  
    PathSeparator="string"  
    runat="server"  
    ScrollDownImageUrl="uri"  
    ScrollDownText="string"  
    ScrollUpImageUrl="uri"  
    ScrollUpText="string"  
    SkinID="string"  
    SkipLinkText="string"  
    StaticBottomSeparatorImageUrl="uri"  
    StaticDisplayLevels="integer"  
    StaticEnableDefaultPopOutImage="True|False"  
    StaticItemFormatString="string"  
    StaticPopOutImageTextFormatString="string"  
    StaticPopOutImageUrl="uri"  
    StaticSubMenuIndent="size"  
    StaticTopSeparatorImageUrl="uri"  
    Style="string"  
    TabIndex="integer"  
    Target="string"  
    ToolTip="string"  
    Visible="True|False"  
    Width="size"  
>  
        <DataBindings>  
                <asp:MenuItemBinding  
                    DataMember="string"  
                    Depth="integer"  
                    Enabled="True|False"  
                    EnabledField="string"  
                    FormatString="string"  
                    ImageUrl="uri"  
                    ImageUrlField="string"  
                    NavigateUrl="uri"  
                    NavigateUrlField="string"  
                    PopOutImageUrl="uri"  
                    PopOutImageUrlField="string"  
                    Selectable="True|False"  
                    SelectableField="string"  
                    SeparatorImageUrl="uri"  
                    SeparatorImageUrlField="string"  
                    Target="string"  
                    TargetField="string"  
                    Text="string"  
                    TextField="string"  
                    ToolTip="string"  
                    ToolTipField="string"  
                    Value="string"  
                    ValueField="string"  
                />  
        </DataBindings>  
        <DynamicHoverStyle />  
        <DynamicItemTemplate>  
            <!-- child controls -->  
        </DynamicItemTemplate>  
        <DynamicMenuItemStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ItemSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <DynamicMenuStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <DynamicSelectedStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ItemSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <Items />  
        <LevelMenuItemStyles>  
                <asp:MenuItemStyle  
                    BackColor="color name|#dddddd"  
                    BorderColor="color name|#dddddd"  
                    BorderStyle="NotSet|None|Dotted|Dashed|Solid|  
                        Double|Groove|Ridge|Inset|Outset"  
                    BorderWidth="size"  
                    CssClass="string"  
                    Font-Bold="True|False"  
                    Font-Italic="True|False"  
                    Font-Names="string"  
                    Font-Overline="True|False"  
                    Font-Size="string|Smaller|Larger|XX-Small|  
                        X-Small|Small|Medium|Large|X-Large|XX-Large"  
                    Font-Strikeout="True|False"  
                    Font-Underline="True|False"  
                    ForeColor="color name|#dddddd"  
                    Height="size"  
                    HorizontalPadding="size"  
                    ItemSpacing="size"  
                    OnDisposed="Disposed event handler"  
                    VerticalPadding="size"  
                    Width="size"  
                />  
        </LevelMenuItemStyles>  
        <LevelSelectedStyles>  
                <asp:MenuItemStyle  
                    BackColor="color name|#dddddd"  
                    BorderColor="color name|#dddddd"  
                    BorderStyle="NotSet|None|Dotted|Dashed|Solid|  
                        Double|Groove|Ridge|Inset|Outset"  
                    BorderWidth="size"  
                    CssClass="string"  
                    Font-Bold="True|False"  
                    Font-Italic="True|False"  
                    Font-Names="string"  
                    Font-Overline="True|False"  
                    Font-Size="string|Smaller|Larger|XX-Small|  
                        X-Small|Small|Medium|Large|X-Large|XX-Large"  
                    Font-Strikeout="True|False"  
                    Font-Underline="True|False"  
                    ForeColor="color name|#dddddd"  
                    Height="size"  
                    HorizontalPadding="size"  
                    ItemSpacing="size"  
                    OnDisposed="Disposed event handler"  
                    VerticalPadding="size"  
                    Width="size"  
                />  
        </LevelSelectedStyles>  
        <LevelSubMenuStyles>  
                <asp:SubMenuStyle  
                    BackColor="color name|#dddddd"  
                    BorderColor="color name|#dddddd"  
                    BorderStyle="NotSet|None|Dotted|Dashed|Solid|  
                        Double|Groove|Ridge|Inset|Outset"  
                    BorderWidth="size"  
                    CssClass="string"  
                    Font-Bold="True|False"  
                    Font-Italic="True|False"  
                    Font-Names="string"  
                    Font-Overline="True|False"  
                    Font-Size="string|Smaller|Larger|XX-Small|  
                        X-Small|Small|Medium|Large|X-Large|XX-Large"  
                    Font-Strikeout="True|False"  
                    Font-Underline="True|False"  
                    ForeColor="color name|#dddddd"  
                    Height="size"  
                    HorizontalPadding="size"  
                    OnDisposed="Disposed event handler"  
                    VerticalPadding="size"  
                    Width="size"  
                />  
        </LevelSubMenuStyles>  
        <StaticHoverStyle />  
        <StaticItemTemplate>  
            <!-- child controls -->  
        </StaticItemTemplate>  
        <StaticMenuItemStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|  
                X-Small|Small|Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ItemSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <StaticMenuStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <StaticSelectedStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ItemSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
</asp:Menu>  
```  
  
   
  
## Examples  
 Für dieses Thema steht ein Visual Studio-Website Projekt mit Quellcode zur Verfügung: [herunterladen](https://go.microsoft.com/fwlink/?LinkId=192868).  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie ein <xref:System.Web.UI.WebControls.Menu>-Steuerelement mit statischen Menü Elementen mithilfe von deklarativer Syntax erstellt wird.  
  
 [!code-aspx-csharp[MenuDeclarative#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDeclarative/CS/menudeclarativecs.aspx#1)]
 [!code-aspx-vb[MenuDeclarative#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDeclarative/VB/menudeclarativevb.aspx#1)]  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie das <xref:System.Web.UI.WebControls.Menu>-Steuerelement an ein <xref:System.Web.UI.WebControls.SiteMapDataSource> Steuerelement gebunden wird. Damit dieses Beispiel ordnungsgemäß funktioniert, müssen Sie die Beispiel Daten der Site Map unten in eine Datei mit dem Namen "Web. Sitemap" kopieren.  
  
 [!code-aspx-csharp[MenuDataBind#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDataBind/CS/menudatabindcs.aspx#1)]
 [!code-aspx-vb[MenuDataBind#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDataBind/VB/menudatabindvb.aspx#1)]  
  
 Im folgenden finden Sie Beispiele für Site Übersichts Daten für das vorherige Beispiel.  
  
```  
<siteMap>  
  <siteMapNode url="~\Home.aspx"   
    title="Home"  
    description="Home">  
    <siteMapNode url="~\Music.aspx"  
      title="Music"  
      description="Music">  
      <siteMapNode url="~\Classical.aspx"   
        title="Classical"  
        description="Classical"/>  
      <siteMapNode url="~\Rock.aspx"  
        title="Rock"  
        description="Rock"/>  
      <siteMapNode url="~\Jazz.aspx"  
        title="Jazz"  
        description="Jazz"/>  
    </siteMapNode>  
    <siteMapNode url="~\Movies.aspx"  
      title="Movies"  
      description="Movies">  
      <siteMapNode url="~\Action.aspx"  
        title="Action"  
        description="Action"/>  
      <siteMapNode url="~\Drama.aspx"  
        title="Drama"  
        description="Drama"/>  
      <siteMapNode url="~\Musical.aspx"  
        title="Musical"  
        description="Musical"/>  
    </siteMapNode>  
  </siteMapNode>  
</siteMap>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.TreeView" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Menu ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Menu();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der Klasse <see cref="T:System.Web.UI.WebControls.Menu" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diesen Konstruktor, um eine neue Instanz der <xref:System.Web.UI.WebControls.Menu>-Klasse zu erstellen und zu initialisieren. Um einer Seite dynamisch ein <xref:System.Web.UI.WebControls.Menu>-Steuerelement hinzuzufügen, erstellen Sie ein neues <xref:System.Web.UI.WebControls.Menu> Objekt, legen Sie dessen Eigenschaften fest, und fügen Sie es dann der <xref:System.Web.UI.Control.Controls%2A>-Auflistung eines Container Steuer Elements hinzu, z. b. <xref:System.Web.UI.WebControls.PlaceHolder>.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie der-Konstruktor verwendet wird, um einer Seite dynamisch ein <xref:System.Web.UI.WebControls.Menu>-Steuerelement hinzuzufügen.  
  
 [!code-aspx-csharp[MenuCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuCtor/CS/menuctorcs.aspx#1)]
 [!code-aspx-vb[MenuCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuCtor/VB/menuctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="T:System.Web.UI.WebControls.PlaceHolder" />
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.AddAttributesToRender : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="menu.AddAttributesToRender writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Der Ausgabestream, der HTML-Inhalte für den Client rendert.</param>
        <summary>Fügt dem angegebenen <see cref="T:System.Web.UI.HtmlTextWriter" />-Objekt die zu rendernden HTML-Attribute und -Stile hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Web.UI.WebControls.Menu>-Steuerelement überschreibt die <xref:System.Web.UI.WebControls.WebControl.AddAttributesToRender%2A>-Methode, um die <xref:System.Web.UI.WebControls.WebControl.AccessKey%2A>-Eigenschaft auf <xref:System.String.Empty>zurückzusetzen. Dieser Member wird hauptsächlich von Steuerelement Entwicklern verwendet, wenn ein benutzerdefiniertes Steuerelement aus der <xref:System.Web.UI.WebControls.Menu> Klasse abgeleitet wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public override System.Web.UI.ControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.Controls" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Controls As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ControlCollection ^ Controls { System::Web::UI::ControlCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Controls : System.Web.UI.ControlCollection" Usage="System.Web.UI.WebControls.Menu.Controls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine <see cref="T:System.Web.UI.ControlCollection" /> ab, die die untergeordneten Steuerelemente des <see cref="T:System.Web.UI.WebControls.Menu" />-Steuerelements enthält.</summary>
        <value>Eine <see cref="T:System.Web.UI.ControlCollection" />, die die untergeordneten Steuerelemente enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.Menu.Controls%2A>-Eigenschaft ermöglicht den programmgesteuerten Zugriff auf die Instanz der <xref:System.Web.UI.ControlCollection>-Klasse für das <xref:System.Web.UI.WebControls.Menu>-Steuerelement. Sie können der Auflistung Steuerelemente hinzufügen, Steuerelemente aus der Auflistung entfernen oder die Server Steuerelemente in der Auflistung durchlaufen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected internal override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.CreateChildControls" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub CreateChildControls ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void CreateChildControls();" />
      <MemberSignature Language="F#" Value="override this.CreateChildControls : unit -&gt; unit" Usage="menu.CreateChildControls " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt untergeordnete Steuerelemente eines <see cref="T:System.Web.UI.WebControls.Menu" />-Steuerelements.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Member wird hauptsächlich von Steuerelement Entwicklern verwendet, wenn ein benutzerdefiniertes Steuerelement aus der <xref:System.Web.UI.WebControls.Menu> Klasse abgeleitet wird.  
  
 Diese Methode wird von der ASP.NET-Infrastruktur aufgerufen, um alle Steuerelemente zu benachrichtigen, die eine Kompositions basierte Implementierung verwenden, einschließlich Steuerelemente, die von <xref:System.Web.UI.WebControls.CompositeDataBoundControl> und <xref:System.Web.UI.WebControls.CompositeControl>abgeleitet werden. um alle untergeordneten Steuerelemente zu erstellen, die Sie als Vorbereitung auf Postback oder Rendering enthalten.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="public override sealed void DataBind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DataBind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.DataBind" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub DataBind ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void DataBind();" />
      <MemberSignature Language="F#" Value="override this.DataBind : unit -&gt; unit" Usage="menu.DataBind " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Bindet die Datenquelle an das <see cref="T:System.Web.UI.WebControls.Menu" />-Steuerelement. Diese Methode kann nicht vererbt werden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Member wird hauptsächlich von Steuerelement Entwicklern verwendet, wenn ein benutzerdefiniertes Steuerelement aus der <xref:System.Web.UI.WebControls.Menu> Klasse abgeleitet wird.  
  
 Verwenden Sie die <xref:System.Web.UI.WebControls.Menu.DataBind%2A>-Methode, um Daten aus einer Datenquelle an das <xref:System.Web.UI.WebControls.Menu>-Steuerelement zu binden. Diese Methode löst alle Daten Bindungs Ausdrücke in der aktiven Vorlage des-Steuer Elements auf.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Daten gebundene Steuerelemente sollten <see cref="M:System.Web.UI.WebControls.Menu.PerformDataBinding" /> anstelle von <see cref="M:System.Web.UI.WebControls.Menu.DataBind" />überschreiben. Wenn <see cref="M:System.Web.UI.WebControls.Menu.DataBind" /> überschrieben wird, werden die Ereignisse <see cref="M:System.Web.UI.WebControls.Menu.OnDataBinding(System.EventArgs)" /> und <see cref="M:System.Web.UI.WebControls.BaseDataBoundControl.OnDataBound(System.EventArgs)" /> in falscher Reihenfolge ausgelöst.</para></block>
      </Docs>
    </Member>
    <Member MemberName="DataBindings">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemBindingCollection DataBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemBindingCollection DataBindings" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DataBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataBindings As MenuItemBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItemBindingCollection ^ DataBindings { System::Web::UI::WebControls::MenuItemBindingCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataBindings : System.Web.UI.WebControls.MenuItemBindingCollection" Usage="System.Web.UI.WebControls.Menu.DataBindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.MenuBindingsEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.MenuBindingsEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Auflistung von <see cref="T:System.Web.UI.WebControls.MenuItemBinding" />-Objekten ab, die die Beziehung zwischen einem Datenelement und dem Menüelement, an das es gebunden werden soll, definieren.</summary>
        <value>Eine <see cref="T:System.Web.UI.WebControls.MenuItemBindingCollection" />, die die Beziehung zwischen einem Datenelement und dem Menüelement, an das es gebunden werden soll, darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.Menu.DataBindings%2A>-Auflistung enthält <xref:System.Web.UI.WebControls.MenuItemBinding> Objekte, die die Beziehung zwischen einem Datenelement und dem Menü Element definieren, an das es gebunden wird. Beim Binden an eine Datenquelle, in der jedes Datenelement mehrere Eigenschaften enthält (z. b. ein XML-Element mit mehreren Attributen), zeigt ein Menü Element den von der `ToString()`-Methode des Datenelements zurückgegebenen Wert standardmäßig an. Im Fall eines XML-Elements zeigt das Menü Element den Elementnamen an, der die zugrunde liegende Struktur der Struktur anzeigt, aber andernfalls nicht sehr nützlich ist. Sie können ein Menü Element an eine bestimmte Datenelement Eigenschaft binden, indem Sie Menü Element Bindungen angeben.  
  
 Beim Definieren der Beziehung zwischen einem Datenelement und einem Menü Element müssen Sie sowohl die Kriterien für die Bindung als auch die-Eigenschaft eines Datenelements angeben, an das die Bindung erfolgen soll. Die Kriterien geben an, wann ein Datenelement an ein Menü Element gebunden werden soll. Die Kriterien können mit einer Tiefe, einem Datenmember oder beidem angegeben werden. Die Tiefe gibt die Menü Ebene an, die gebunden wird. Wenn Sie z. b. eine Tiefe von 0 angeben, werden alle Menü Elemente in der Baumstruktur auf Ebene 0 mithilfe der Menü Element Bindung gebunden. Ein Datenmember gibt den Typ des Datenelements in der zugrunde liegenden Datenquelle an, kann jedoch unterschiedliche Informationen darstellen, abhängig von der Datenquelle. Der-Datenmember für ein XML-Element gibt z. b. den Namen des Elements an.  
  
 Wenn mehrere <xref:System.Web.UI.WebControls.MenuItemBinding> Objekte definiert sind, die miteinander in Konflikt stehen, wendet das <xref:System.Web.UI.WebControls.Menu>-Steuerelement die Menü Element Bindungen in der folgenden Rangfolge an:  
  
1.  Das <xref:System.Web.UI.WebControls.MenuItemBinding> Objekt, das eine Tiefe und einen Datenmember definiert.  
  
2.  Das <xref:System.Web.UI.WebControls.MenuItemBinding>-Objekt, das nur die Tiefe definiert.  
  
3.  Das <xref:System.Web.UI.WebControls.MenuItemBinding>-Objekt, das nur den Datenmember definiert.  
  
4.  Das <xref:System.Web.UI.WebControls.MenuItemBinding> Objekt, das weder die Tiefe noch den Datenmember definiert.  
  
 Nachdem Sie die Bindungs Kriterien festgelegt haben, können Sie eine Eigenschaft eines <xref:System.Web.UI.WebControls.MenuItem> Objekts binden, das an ein Attribut oder Feld eines Datenelements gebunden werden kann. Beispielsweise können Sie die <xref:System.Web.UI.WebControls.MenuItem.Text%2A>-Eigenschaft eines Menü Elements an das Text-Attribut eines XML-Elements binden, indem Sie die <xref:System.Web.UI.WebControls.MenuItemBinding.TextField%2A>-Eigenschaft eines <xref:System.Web.UI.WebControls.MenuItemBinding>-Objekts festlegen. Sie können auch eine Bindung an einen statischen Wert durch herstellen. Wenn Sie die <xref:System.Web.UI.WebControls.MenuItemBinding.Text%2A>-Eigenschaft eines <xref:System.Web.UI.WebControls.MenuItemBinding> Objekts festlegen, haben alle Menü Elemente, auf die das <xref:System.Web.UI.WebControls.MenuItemBinding>-Objekt angewendet wird, denselben statischen Textwert. Weitere Informationen zum Binden der Eigenschaften eines <xref:System.Web.UI.WebControls.MenuItem> Objekts an einen Wert finden Sie unter <xref:System.Web.UI.WebControls.MenuItemBinding>.  
  
 Obwohl die <xref:System.Web.UI.WebControls.Menu.DataBindings%2A> Auflistung Programm gesteuert aufgefüllt werden kann, wird Sie normalerweise deklarativ festgelegt. Um die Menü Element Bindungen anzugeben, Schachteln Sie zunächst die öffnenden und schließenden `<DataBindings>` Tags zwischen den öffnenden und schließenden Tags des <xref:System.Web.UI.WebControls.Menu> Steuer Elements. Platzieren Sie als nächstes `<asp:MenuItemBinding>` Elemente zwischen den öffnenden und schließenden `<DataBindings>` Tags für jede Menü Element Bindung, die Sie angeben möchten.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie mit der <xref:System.Web.UI.WebControls.Menu.DataBindings%2A>-Auflistung die Beziehung zwischen den Feldern eines <xref:System.Web.UI.WebControls.XmlDataSource> Steuer Elements und den Menü Elementen in einem <xref:System.Web.UI.WebControls.Menu>-Steuerelement definiert wird. Damit dieses Beispiel ordnungsgemäß funktioniert, müssen Sie die folgenden XML-Beispiel Daten in eine Datei mit dem Namen "map. xml" kopieren.  
  
 [!code-aspx-csharp[MenuBindings#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuBindings/CS/menubindingscs.aspx#1)]
 [!code-aspx-vb[MenuBindings#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuBindings/VB/menubindingsvb.aspx#1)]  
  
 Im folgenden finden Sie Beispiele für Site Übersichts Daten für das vorherige Beispiel.  
  
```  
<MapHomeNode url="~\Home.aspx"   
  title="Home"  
  description="Home">  
  <MapNode url="~\Music.aspx"  
    title="Music"  
    description="Music">  
    <MapNode url="~\Classical.aspx"   
      title="Classical"  
      description="Classical"/>  
    <MapNode url="~\Rock.aspx"  
      title="Rock"  
      description="Rock"/>  
    <MapNode url="~\Jazz.aspx"  
      title="Jazz"  
      description="Jazz"/>  
  </MapNode>  
  <MapNode url="~\Movies.aspx"  
    title="Movies"  
    description="Movies">  
    <MapNode url="~\Action.aspx"  
      title="Action"  
      description="Action"/>  
    <MapNode url="~\Drama.aspx"  
      title="Drama"  
      description="Drama"/>  
    <MapNode url="~\Musical.aspx"  
      title="Musical"  
      description="Musical"/>  
  </MapNode>  
</MapHomeNode>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.MenuItemBinding" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItemBindingCollection" />
      </Docs>
    </Member>
    <Member MemberName="DisappearAfter">
      <MemberSignature Language="C#" Value="public int DisappearAfter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DisappearAfter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DisappearAfter" />
      <MemberSignature Language="VB.NET" Value="Public Property DisappearAfter As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DisappearAfter { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.DisappearAfter : int with get, set" Usage="System.Web.UI.WebControls.Menu.DisappearAfter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(500)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Zeitspanne ab, in der ein dynamisches Menü noch angezeigt wird, nachdem der Mauszeiger nicht mehr auf dem Menü positioniert ist, oder legt diese Zeitspanne fest.</summary>
        <value>Die Zeitspanne (in Millisekunden), in der ein dynamisches Menü noch angezeigt wird, nachdem der Mauszeiger nicht mehr auf dem Menü positioniert ist. Der Standard ist 500.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Standardmäßig wird ein dynamisches Menü nach einer bestimmten Zeitspanne automatisch ausgeblendet, wenn der Mauszeiger nicht mehr über dem Menü positioniert ist. Verwenden Sie die <xref:System.Web.UI.WebControls.Menu.DisappearAfter%2A>-Eigenschaft, um die Dauer anzugeben.  
  
> [!NOTE]
>  Ein dynamisches Menü wird sofort ausgeblendet, wenn der Benutzer außerhalb des Menüs klickt.  
  
 Sie können auch angeben, dass ein dynamisches Menü nie automatisch ausgeblendet werden soll, indem Sie diese Eigenschaft auf "-1" festlegen. In diesem Fall wird das dynamische Menü Element nur dann ausgeblendet, wenn der Benutzer außerhalb des Menüs klickt.  
  
 Diese Eigenschaft kann nicht durch Designs oder Stylesheetdesigns festgelegt werden. Weitere Informationen finden Sie unter <xref:System.Web.UI.ThemeableAttribute> und [ASP.NET-Designs und Skins](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Menu.DisappearAfter%2A>-Eigenschaft verwendet wird, um anzugeben, dass ein dynamisches Menü ausgeblendet werden soll, wenn der Benutzer den Mauszeiger seit mehr als zwei Sekunden aus dem Menü entfernt hat.  
  
 [!code-aspx-csharp[MenuDisappearAfter#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDisappearAfter/CS/menudisappearaftercs.aspx#1)]
 [!code-aspx-vb[MenuDisappearAfter#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDisappearAfter/VB/menudisappearaftervb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der ausgewählte Wert ist kleiner als -1.</exception>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
      </Docs>
    </Member>
    <Member MemberName="DynamicBottomSeparatorImageUrl">
      <MemberSignature Language="C#" Value="public string DynamicBottomSeparatorImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DynamicBottomSeparatorImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicBottomSeparatorImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DynamicBottomSeparatorImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicBottomSeparatorImageUrl : string with get, set" Usage="System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine URL zu einem Bild ab oder legt die URL zu einem Bild fest, das am unteren Rand jedes dynamischen Menüelements angezeigt werden soll, um das Menüelement von anderen Menüelementen abzugrenzen.</summary>
        <value>Die URL zu einem Trennbild, das am unteren Rand jedes dynamischen Menüelements angezeigt wird. Der Standardwert ist eine leere Zeichenfolge (""), die angibt, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl%2A>-Eigenschaft, um ein optionales benutzerdefiniertes Bild anzugeben, das am unteren Rand jedes dynamischen Menü Elements angezeigt werden soll. Dieses Bild fungiert als Trennzeichen zwischen Menü Elementen und ist in der Regel ein Bild einer Linie.  
  
> [!NOTE]
>  Sie können auch ein Trennzeichen Bild am oberen Rand jedes dynamischen Menü Elements anzeigen, indem Sie die <xref:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl%2A>-Eigenschaft festlegen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl%2A>-Eigenschaft verwendet wird, um am unteren Rand jedes dynamischen Menü Elements ein Trennzeichen anzuzeigen.  
  
 [!code-aspx-csharp[MenuDynamicBottomSeparatorImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicBottomSeparatorImageUrl/CS/menudynamicbottomseparatorimageurlcs.aspx#1)]
 [!code-aspx-vb[MenuDynamicBottomSeparatorImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicBottomSeparatorImageUrl/VB/menudynamicbottomseparatorimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="DynamicEnableDefaultPopOutImage">
      <MemberSignature Language="C#" Value="public bool DynamicEnableDefaultPopOutImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DynamicEnableDefaultPopOutImage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicEnableDefaultPopOutImage As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DynamicEnableDefaultPopOutImage { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicEnableDefaultPopOutImage : bool with get, set" Usage="System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab oder legt den Wert fest, der angibt, ob das integrierte Bild angezeigt wird, das darauf hinweist, dass ein dynamisches Menüelement über ein Untermenü verfügt.</summary>
        <value><see langword="true" />, um das integrierte Bild für dynamische Menüelemente mit Untermenüs anzuzeigen, andernfalls <see langword="false" />. Der Standardwert lautet <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn ein dynamisches Menü Element ein Untermenü enthält, kann ein Bild angezeigt werden, um anzugeben, dass der Benutzer das Menü durch Positionieren des Mauszeigers über dem Menü Element erweitern kann. Es gibt zwei Möglichkeiten, dieses Bild anzuzeigen:  
  
-   Legen Sie die <xref:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage%2A>-Eigenschaft auf `true` fest, um das integrierte Image (Standard) zu verwenden.  
  
-   Legen Sie die <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A>-Eigenschaft auf ein benutzerdefiniertes Image fest.  
  
 Wenn die <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A>-Eigenschaft festgelegt ist, überschreibt dieses Bild das integrierte Bild.  
  
> [!NOTE]
>  Wenn die <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A>-Eigenschaft nicht festgelegt ist und die <xref:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage%2A>-Eigenschaft auf `false`festgelegt ist, wird kein Bild angezeigt.  
  
 Sie können den alternativen Text für das Bild angeben, indem Sie die <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString%2A>-Eigenschaft festlegen. Dieser Text wird als QuickInfo angezeigt, wenn der Benutzer den Mauszeiger über dem Bild positioniert. Dieser Text bietet hilfstechnologiegeräten mit einer Beschreibung des Abbilds, das verwendet werden kann, um den Zugriff auf das Steuerelement zu erhöhen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage%2A>-Eigenschaft verwendet wird, um das Bild auszublenden, das angibt, dass ein dynamisches Menü Element über ein Untermenü verfügt. Die <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A>-Eigenschaft muss auch auf eine leere Zeichenfolge ("") festgelegt werden, damit das Bild ausgeblendet wird.  
  
 [!code-aspx-csharp[MenuDynamicEnableDefaultPopOutImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicEnableDefaultPopOutImage/CS/menudynamicenabledefaultpopoutimagecs.aspx#1)]
 [!code-aspx-vb[MenuDynamicEnableDefaultPopOutImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicEnableDefaultPopOutImage/VB/menudynamicenabledefaultpopoutimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="DynamicHorizontalOffset">
      <MemberSignature Language="C#" Value="public int DynamicHorizontalOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DynamicHorizontalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicHorizontalOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicHorizontalOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DynamicHorizontalOffset { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicHorizontalOffset : int with get, set" Usage="System.Web.UI.WebControls.Menu.DynamicHorizontalOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der Pixel ab, um die ein dynamisches Menü relativ zu seinem übergeordneten Menüelement horizontal verschoben werden soll, oder legt diese Anzahl fest.</summary>
        <value>Die Anzahl der Pixel, um die ein dynamisches Menü relativ zu seinem übergeordneten Menüelement horizontal verschoben werden soll. Die Standardeinstellung ist 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.Web.UI.WebControls.Menu.DynamicHorizontalOffset%2A>-Eigenschaft, um die horizontale Position eines dynamischen Menüs relativ zum übergeordneten Menü Element anzupassen. Diese Eigenschaft wirkt sich auf die Position eines dynamischen Menüs anders aus, je nachdem, ob das <xref:System.Web.UI.WebControls.Menu> Steuerelement vertikal oder horizontal angezeigt wird (wie durch die <xref:System.Web.UI.WebControls.Menu.Orientation%2A>-Eigenschaft angegeben). In der folgenden Tabelle werden die Unterschiede beschrieben.  
  
|Ausrichtung|BESCHREIBUNG|  
|-----------------|-----------------|  
|Horizontal|Standardmäßig wird ein dynamisches Menü direkt unterhalb des übergeordneten Menü Elements angezeigt. Wenn diese Eigenschaft festgelegt wird, wird die dynamische Menü Position horizontal von dieser Basis Position verschoben.|  
|Vertical|Standardmäßig wird ein dynamisches Menü Element neben seinem übergeordneten Menü Element ohne Abstand dazwischen angezeigt. Durch Festlegen dieser Eigenschaft wird der horizontale Abstand zwischen dem dynamischen Menü und seinem übergeordneten Menü Element gesteuert.|  
  
> [!NOTE]
>  Sie können diese Eigenschaft auf einen negativen Wert festlegen, um ein dynamisches Menü in eine negative Richtung zu verschieben. Wenn Sie ein vertikales Menü anzeigen, überlappen ein negativer-Wert ein dynamisches Menü und dessen übergeordnetes Menü Element.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Menu.DynamicHorizontalOffset%2A>-Eigenschaft verwendet wird, um einen 5-Pixel-Abstand zwischen einem dynamischen Menü und dem zugehörigen übergeordneten Menü Element anzugeben.  
  
 [!code-aspx-csharp[MenuDynamicHorizontalOffset#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicHorizontalOffset/CS/menudynamichorizontaloffsetcs.aspx#1)]
 [!code-aspx-vb[MenuDynamicHorizontalOffset#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicHorizontalOffset/VB/menudynamichorizontaloffsetvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicVerticalOffset" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSubMenuIndent" />
      </Docs>
    </Member>
    <Member MemberName="DynamicHoverStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style DynamicHoverStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style DynamicHoverStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DynamicHoverStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ DynamicHoverStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DynamicHoverStyle : System.Web.UI.WebControls.Style" Usage="System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf das <see cref="T:System.Web.UI.WebControls.Style" />-Objekt ab, mit dem Sie die Darstellung eines dynamischen Menüelements, während ein Mauszeiger darauf positioniert ist, festlegen können.</summary>
        <value>Ein Verweis auf den <see cref="T:System.Web.UI.WebControls.Style" />, der das Format eines dynamischen Menüelements darstellt, während der Mauszeiger darauf positioniert ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A>-Eigenschaft, um die Darstellung eines dynamischen Menü Elements zu steuern, wenn der Mauszeiger darauf positioniert ist. Diese Eigenschaft ist schreibgeschützt. Sie können jedoch die Eigenschaften des <xref:System.Web.UI.WebControls.Style> Objekts festlegen, das zurückgegeben wird. Die Eigenschaften können deklarativ im Formular `Property-Subproperty`festgelegt werden, wobei `Subproperty` eine Eigenschaft des <xref:System.Web.UI.WebControls.Style> Objekts ist (z. b. `DynamicHoverStyle-ForeColor`). Die Eigenschaften können auch Programm gesteuert im Formular `Property.Subproperty` festgelegt werden (z. b. `DynamicHoverStyle.ForeColor`).  
  
 Stileigenschaften für ein dynamisches Menü Element werden in der folgenden Reihenfolge angewendet:  
  
1.  [https://login.microsoftonline.com/consumers/](<xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A>).  
  
2.  [https://login.microsoftonline.com/consumers/](<xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A>). Wenn die <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> Auflistung oder <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> Auflistung definiert ist, wird Sie zu diesem Zeitpunkt angewendet, wobei die Eigenschaften des anderen Menü Element Stils außer Kraft gesetzt werden.  
  
3.  [https://login.microsoftonline.com/consumers/](<xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A>). Wenn die <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> Auflistung definiert ist, wird Sie zu diesem Zeitpunkt angewendet, wobei die Eigenschaften des anderen Menü Element Stils außer Kraft gesetzt werden.  
  
4.  [https://login.microsoftonline.com/consumers/](<xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A>).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A>-Eigenschaft verwendet wird, um die Hintergrundfarbe eines dynamischen Menü Elements in Light Himmel blau zu ändern, wenn der Benutzer den Mauszeiger darüber positioniert.  
  
 [!code-aspx-csharp[MenuDynamicHoverStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicHoverStyle/CS/menudynamichoverstylecs.aspx#1)]
 [!code-aspx-vb[MenuDynamicHoverStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicHoverStyle/VB/menudynamichoverstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="DynamicItemFormatString">
      <MemberSignature Language="C#" Value="public string DynamicItemFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DynamicItemFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicItemFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicItemFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DynamicItemFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicItemFormatString : string with get, set" Usage="System.Web.UI.WebControls.Menu.DynamicItemFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft zusätzlichen Text ab, der für alle dynamisch angezeigten Menüelemente angezeigt wird, oder legt diesen fest.</summary>
        <value>Der zusätzliche Text oder die zusätzlichen Zeichen, der bzw. die für alle Menüelemente angezeigt werden. Der Standardwert für diese Eigenschaft ist "{0}."</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft kann verwendet werden, um Text zum Formatieren dynamischer Menü Elemente in einem Menü einzufügen, das auf mobilen Geräten angezeigt wird. Das <xref:System.Web.UI.WebControls.Menu>-Steuerelement unterstützt Vorlagen für die Anzeige statischer und dynamischer Menü Elemente. Für mobile Geräte werden Vorlagen ignoriert, sodass Sie mit dieser Eigenschaft Zeichen oder Text hinzufügen können, um die Formatierung auf Menü Elemente ohne Verwendung einer Vorlage anzuwenden.  
  
> [!NOTE]
>  Wenn Sie diese Eigenschaft verwenden möchten, sollten Sie auch die <xref:System.Web.UI.WebControls.Menu.StaticItemFormatString%2A>-Eigenschaft festlegen, wenn die Formatierung zwischen den statischen und dynamischen Menü Elementen identisch sein soll.  
  
 Wenn sowohl die Vorlagen Formatierung als auch diese Eigenschaft angewendet werden, wird die Vorlagen Formatierung bei mobilen Geräten ignoriert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die Eigenschaften <xref:System.Web.UI.WebControls.Menu.StaticItemFormatString%2A> und <xref:System.Web.UI.WebControls.Menu.DynamicItemFormatString%2A> verwendet werden, um jedem Menü Element Text hinzuzufügen.  
  
 [!code-aspx-csharp[MenuItemFormatString#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemFormatString/CS/menuitemformatstringcs.aspx#1)]
 [!code-aspx-vb[MenuItemFormatString#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemFormatString/VB/menuitemformatstringvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticItemFormatString" />
      </Docs>
    </Member>
    <Member MemberName="DynamicItemTemplate">
      <MemberSignature Language="C#" Value="public System.Web.UI.ITemplate DynamicItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate DynamicItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ITemplate ^ DynamicItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.Menu.DynamicItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.MenuItemTemplateContainer))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Vorlage mit benutzerdefinierten Inhalten ab, die für ein dynamisches Menü gerendert werden sollen, oder legt diese fest.</summary>
        <value>Eine <see cref="T:System.Web.UI.ITemplate" />, die benutzerdefinierte Inhalte für ein dynamisches Menü enthält. Der Standardwert ist null (0). Dies bedeutet, dass diese Eigenschaft nicht festgelegt wurde.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Anstatt das integrierte Rendering für ein dynamisches Menü zu verwenden, können Sie mit der <xref:System.Web.UI.WebControls.Menu.DynamicItemTemplate%2A>-Eigenschaft ein eigenes Aussehen und Verhalten für ein dynamisches Menü Element definieren. Um eine benutzerdefinierte Vorlage für ein dynamisches Menü Element anzugeben, platzieren Sie zunächst `<DynamicItemTemplate>` Tags zwischen den öffnenden und schließenden Tags des <xref:System.Web.UI.WebControls.Menu> Steuer Elements. Anschließend können Sie den Inhalt der Vorlage zwischen dem öffnenden und dem schließenden `<DynamicItemTemplate>` Tags auflisten. Sie können den Stil eines dynamischen Menüs weiter steuern, indem Sie die <xref:System.Web.UI.WebControls.Menu.DynamicItemFormatString%2A>-Eigenschaft verwenden.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicItemFormatString" />
      </Docs>
    </Member>
    <Member MemberName="DynamicMenuItemStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemStyle DynamicMenuItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemStyle DynamicMenuItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DynamicMenuItemStyle As MenuItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItemStyle ^ DynamicMenuItemStyle { System::Web::UI::WebControls::MenuItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DynamicMenuItemStyle : System.Web.UI.WebControls.MenuItemStyle" Usage="System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf das <see cref="T:System.Web.UI.WebControls.MenuItemStyle" />-Objekt ab, mit dem Sie die Darstellung der Menüelemente in einem dynamischen Menü festlegen können.</summary>
        <value>Ein Verweis auf den <see cref="T:System.Web.UI.WebControls.MenuItemStyle" />, der das Format der Menüelemente in einem dynamischen Menü darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A>-Eigenschaft, um die Darstellung der Menü Elemente in einem dynamischen Menü zu steuern. Diese Eigenschaft ist schreibgeschützt. Sie können jedoch die Eigenschaften des <xref:System.Web.UI.WebControls.MenuItemStyle> Objekts festlegen, das zurückgegeben wird. Die Eigenschaften können deklarativ im Formular `Property-Subproperty`festgelegt werden, wobei `Subproperty` eine Eigenschaft des <xref:System.Web.UI.WebControls.MenuItemStyle> Objekts ist (z. b. `DynamicMenuItemStyle-ForeColor`). Die Eigenschaften können auch Programm gesteuert im Formular `Property.Subproperty` festgelegt werden (z. b. `DynamicMenuItemStyle.ForeColor`).  
  
 Stileigenschaften für ein dynamisches Menü Element werden in der folgenden Reihenfolge angewendet:  
  
1.  [https://login.microsoftonline.com/consumers/](<xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A>).  
  
2.  [https://login.microsoftonline.com/consumers/](<xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A>). Wenn die <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> Auflistung oder <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> Auflistung definiert ist, wird Sie zu diesem Zeitpunkt angewendet, wobei die Eigenschaften des anderen Menü Element Stils außer Kraft gesetzt werden.  
  
3.  [https://login.microsoftonline.com/consumers/](<xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A>). Wenn die <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> Auflistung definiert ist, wird Sie zu diesem Zeitpunkt angewendet, wobei die Eigenschaften des anderen Menü Element Stils außer Kraft gesetzt werden.  
  
4.  [https://login.microsoftonline.com/consumers/](<xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A>).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie mit der <xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A>-Eigenschaft eine helle himmelblaue Hintergrundfarbe für die Menü Elemente in einem dynamischen Menü angegeben wird.  
  
 [!code-aspx-csharp[MenuDynamicMenuItemStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/menudynamicmenuitemstyle/CS/MenuDynamicMenuItemStylecs.aspx#1)]
 [!code-aspx-vb[MenuDynamicMenuItemStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/menudynamicmenuitemstyle/VB/MenuDynamicMenuItemStylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="DynamicMenuStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SubMenuStyle DynamicMenuStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.SubMenuStyle DynamicMenuStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DynamicMenuStyle As SubMenuStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SubMenuStyle ^ DynamicMenuStyle { System::Web::UI::WebControls::SubMenuStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DynamicMenuStyle : System.Web.UI.WebControls.SubMenuStyle" Usage="System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SubMenuStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf das <see cref="T:System.Web.UI.WebControls.MenuItemStyle" />-Objekt ab, mit dem Sie die Darstellung eines dynamischen Menüs festlegen können.</summary>
        <value>Ein Verweis auf den <see cref="T:System.Web.UI.WebControls.MenuItemStyle" />, der das Format eines dynamischen Menüs darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A>-Eigenschaft, um die Darstellung eines dynamischen Menüs zu steuern. Diese Eigenschaft ist schreibgeschützt. Sie können jedoch die Eigenschaften des <xref:System.Web.UI.WebControls.MenuItemStyle> Objekts festlegen, das zurückgegeben wird. Die Eigenschaften können deklarativ im Formular `Property-Subproperty`festgelegt werden, wobei `Subproperty` eine Eigenschaft des <xref:System.Web.UI.WebControls.MenuItemStyle> Objekts ist (z. b. `DynamicMenuStyle-ForeColor`). Die Eigenschaften können auch Programm gesteuert im Formular `Property.Subproperty` festgelegt werden (z. b. `DynamicMenuStyle.ForeColor`).  
  
 Stileigenschaften für ein dynamisches Menü Element werden in der folgenden Reihenfolge angewendet:  
  
1.  [https://login.microsoftonline.com/consumers/](<xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A>).  
  
2.  [https://login.microsoftonline.com/consumers/](<xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A>). Wenn die <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> Auflistung oder <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> Auflistung definiert ist, wird Sie zu diesem Zeitpunkt angewendet, wobei die Eigenschaften des anderen Menü Element Stils außer Kraft gesetzt werden.  
  
3.  [https://login.microsoftonline.com/consumers/](<xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A>). Wenn die <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> Auflistung definiert ist, wird Sie zu diesem Zeitpunkt angewendet, wobei die Eigenschaften des anderen Menü Element Stils außer Kraft gesetzt werden.  
  
4.  [https://login.microsoftonline.com/consumers/](<xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A>).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie mit der <xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A>-Eigenschaft eine helle himmelblaue Hintergrundfarbe für ein dynamisches Menü angegeben wird.  
  
 [!code-aspx-csharp[MenuDynamicMenuStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicMenuStyle/CS/menudynamicmenustylecs.aspx#1)]
 [!code-aspx-vb[MenuDynamicMenuStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicMenuStyle/VB/menudynamicmenustylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="DynamicPopOutImageTextFormatString">
      <MemberSignature Language="C#" Value="public string DynamicPopOutImageTextFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DynamicPopOutImageTextFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicPopOutImageTextFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DynamicPopOutImageTextFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicPopOutImageTextFormatString : string with get, set" Usage="System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den alternativen Text für das Bild ab, das angibt, dass ein dynamisches Menüelement über ein Untermenü verfügt, oder legt diesen Text fest.</summary>
        <value>Der alternative Text für das Bild, das angibt, dass ein dynamisches Menüelement über ein Untermenü verfügt. Der Standardwert ist eine leere Zeichenfolge ("") und gibt an, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn ein dynamisches Menü Element ein Untermenü enthält, kann ein Bild angezeigt werden, um anzugeben, dass der Benutzer das Menü erweitern kann. Verwenden Sie die <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString%2A>-Eigenschaft, um den alternativen Text für dieses Bild anzugeben. Der von Ihnen angegebene Text bietet Hilfstechnologiegeräte mit einer Beschreibung des Bilds, das verwendet werden kann, um das Steuerelement leichter zugänglich zu machen.  
  
 Es gibt zwei Möglichkeiten, das Bild anzuzeigen:  
  
-   Legen Sie die <xref:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage%2A>-Eigenschaft auf `true` fest, um das integrierte Image (Standard) zu verwenden.  
  
-   Legen Sie die <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A>-Eigenschaft auf ein benutzerdefiniertes Image fest.  
  
> [!NOTE]
>  Diese Eigenschaft gilt sowohl für das integrierte Image als auch für das benutzerdefinierte Image.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString%2A>-Eigenschaft verwendet wird, um den alternativen Text für das Bild anzugeben, mit dem angegeben wird, dass ein dynamisches Menü Element über ein Untermenü verfügt. Dieser Text wird als QuickInfo angezeigt, wenn der Benutzer den Mauszeiger über dem Bild positioniert.  
  
 [!code-aspx-csharp[MenuDynamicPopoutImageText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicPopoutImageText/CS/menudynamicpopoutimagetextcs.aspx#1)]
 [!code-aspx-vb[MenuDynamicPopoutImageText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicPopoutImageText/VB/menudynamicpopoutimagetextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="DynamicPopOutImageUrl">
      <MemberSignature Language="C#" Value="public string DynamicPopOutImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DynamicPopOutImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicPopOutImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DynamicPopOutImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicPopOutImageUrl : string with get, set" Usage="System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die URL zu einem benutzerdefinierten Bild ab, das in einem dynamischen Menüelement angezeigt wird, wenn dieses über ein Untermenü verfügt, oder legt diese URL fest.</summary>
        <value>Die URL zu einem Bild, mit dem angegeben wird, dass ein dynamisches Menüelement über ein Untermenü verfügt. Der Standardwert ist eine leere Zeichenfolge (""), die angibt, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn ein dynamisches Menü Element ein Untermenü enthält, kann ein Bild angezeigt werden, um anzugeben, dass der Benutzer das Menü durch Positionieren des Mauszeigers über dem Menü Element erweitern kann. Es gibt zwei Möglichkeiten, dieses Bild anzuzeigen:  
  
-   Legen Sie die <xref:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage%2A>-Eigenschaft auf `true` fest, um das integrierte Image (Standard) zu verwenden.  
  
-   Legen Sie die <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A>-Eigenschaft auf ein benutzerdefiniertes Image fest.  
  
 Wenn die <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A>-Eigenschaft festgelegt ist, überschreibt dieses Bild das integrierte Bild.  
  
 Wenn die <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A>-Eigenschaft nicht festgelegt ist und die <xref:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage%2A>-Eigenschaft auf `false`festgelegt ist, wird kein Bild angezeigt.  
  
> [!NOTE]
>  Wenn Sie diese Eigenschaft festlegen, verwenden Sie einen Schrägstrich (/) anstelle eines umgekehrten Schrägstrichs (\\). Wenn Sie umgekehrte Schrägstriche im Pfad verwenden, wird das angegebene Bild nicht angezeigt.  
  
 Sie können den alternativen Text für das Bild angeben, indem Sie die <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString%2A>-Eigenschaft festlegen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A>-Eigenschaft verwendet wird, um ein benutzerdefiniertes Bild anzugeben, das in einem dynamischen Menü Element angezeigt wird, um anzugeben, dass das Menü Element über ein Untermenü verfügt.  
  
 [!code-aspx-csharp[MenuDynamicPopoutImageText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicPopoutImageText/CS/menudynamicpopoutimagetextcs.aspx#1)]
 [!code-aspx-vb[MenuDynamicPopoutImageText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicPopoutImageText/VB/menudynamicpopoutimagetextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="DynamicSelectedStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemStyle DynamicSelectedStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemStyle DynamicSelectedStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DynamicSelectedStyle As MenuItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItemStyle ^ DynamicSelectedStyle { System::Web::UI::WebControls::MenuItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DynamicSelectedStyle : System.Web.UI.WebControls.MenuItemStyle" Usage="System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf das <see cref="T:System.Web.UI.WebControls.MenuItemStyle" />-Objekt ab, mit dem Sie die Darstellung des vom Benutzer ausgewählten dynamischen Menüelements festlegen können.</summary>
        <value>Ein Verweis auf den <see cref="T:System.Web.UI.WebControls.MenuItemStyle" />, der das Format des ausgewählten dynamischen Menüelements darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A>-Eigenschaft, um die Darstellung eines dynamischen Menü Elements zu steuern, wenn der Benutzer es aus dem Menü auswählt. Diese Eigenschaft ist schreibgeschützt. Sie können jedoch die Eigenschaften des <xref:System.Web.UI.WebControls.MenuItemStyle> Objekts festlegen, das zurückgegeben wird. Die Eigenschaften können deklarativ im Formular `Property-Subproperty`festgelegt werden, wobei `Subproperty` eine Eigenschaft des <xref:System.Web.UI.WebControls.MenuItemStyle> Objekts ist (z. b. `DynamicSelectedStyle-ForeColor`). Die Eigenschaften können auch Programm gesteuert im Formular `Property.Subproperty` festgelegt werden (z. b. `DynamicSelectedStyle.ForeColor`).  
  
 Stileigenschaften für ein dynamisches Menü Element werden in der folgenden Reihenfolge angewendet:  
  
1.  [https://login.microsoftonline.com/consumers/](<xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A>).  
  
2.  [https://login.microsoftonline.com/consumers/](<xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A>). Wenn die <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> Auflistung oder <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> Auflistung definiert ist, wird Sie zu diesem Zeitpunkt angewendet, wobei die Eigenschaften des anderen Menü Element Stils außer Kraft gesetzt werden.  
  
3.  [https://login.microsoftonline.com/consumers/](<xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A>). Wenn die <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> Auflistung definiert ist, wird Sie zu diesem Zeitpunkt angewendet, wobei die Eigenschaften des anderen Menü Element Stils außer Kraft gesetzt werden.  
  
4.  [https://login.microsoftonline.com/consumers/](<xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A>).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie mit der <xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A>-Eigenschaft eine helle blaue Hintergrundfarbe für das ausgewählte dynamische Menü Element angegeben wird.  
  
 [!code-aspx-csharp[MenuDynamicSelectedStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicSelectedStyle/CS/menudynamicselectedstylecs.aspx#1)]
 [!code-aspx-vb[MenuDynamicSelectedStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicSelectedStyle/VB/menudynamicselectedstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="DynamicTopSeparatorImageUrl">
      <MemberSignature Language="C#" Value="public string DynamicTopSeparatorImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DynamicTopSeparatorImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicTopSeparatorImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DynamicTopSeparatorImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicTopSeparatorImageUrl : string with get, set" Usage="System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine URL zu einem Bild ab oder legt die URL zu einem Bild fest, das am oberen Rand jedes dynamischen Menüelements angezeigt werden soll, um das Menüelement von anderen Menüelementen abzugrenzen.</summary>
        <value>Die URL zu einem Trennbild, das am oberen Rand jedes dynamischen Menüelements angezeigt wird. Der Standardwert ist eine leere Zeichenfolge (""), die angibt, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl%2A>-Eigenschaft, um ein optionales benutzerdefiniertes Bild anzugeben, das am oberen Rand jedes dynamischen Menü Elements angezeigt werden soll. Dieses Bild fungiert als Trennzeichen zwischen Menü Elementen und ist in der Regel ein Bild einer Linie.  
  
> [!NOTE]
>  Sie können auch ein Trennzeichen Bild am unteren Rand jedes dynamischen Menü Elements anzeigen, indem Sie die <xref:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl%2A>-Eigenschaft festlegen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl%2A>-Eigenschaft verwendet wird, um am oberen Rand jedes dynamischen Menü Elements ein Trennzeichen anzuzeigen.  
  
 [!code-aspx-csharp[MenuDynamicTopSeparatorImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicTopSeparatorImageUrl/CS/menudynamictopseparatorimageurlcs.aspx#1)]
 [!code-aspx-vb[MenuDynamicTopSeparatorImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicTopSeparatorImageUrl/VB/menudynamictopseparatorimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="DynamicVerticalOffset">
      <MemberSignature Language="C#" Value="public int DynamicVerticalOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DynamicVerticalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicVerticalOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicVerticalOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DynamicVerticalOffset { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicVerticalOffset : int with get, set" Usage="System.Web.UI.WebControls.Menu.DynamicVerticalOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der Pixel ab, um die ein dynamisches Menü relativ zu seinem übergeordneten Menüelement vertikal verschoben werden soll, oder legt diese Anzahl fest.</summary>
        <value>Die Anzahl der Pixel, um die ein dynamisches Menü relativ zu seinem übergeordneten Menüelement vertikal verschoben werden soll. Die Standardeinstellung ist 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.Web.UI.WebControls.Menu.DynamicVerticalOffset%2A>-Eigenschaft, um die vertikale Position eines dynamischen Menüs relativ zum übergeordneten Menü Element anzupassen. Diese Eigenschaft wirkt sich auf die Position eines dynamischen Menüs anders aus, je nachdem, ob das <xref:System.Web.UI.WebControls.Menu> Steuerelement vertikal oder horizontal angezeigt wird (wie durch die <xref:System.Web.UI.WebControls.Menu.Orientation%2A>-Eigenschaft angegeben). In der folgenden Tabelle werden die Unterschiede beschrieben.  
  
|Ausrichtung|BESCHREIBUNG|  
|-----------------|-----------------|  
|Horizontal|Standardmäßig wird ein dynamisches Menü direkt unterhalb seines übergeordneten Menü Elements angezeigt, ohne zwischen Raum. Durch Festlegen dieser Eigenschaft wird der vertikale Abstand zwischen dem dynamischen Menü und seinem übergeordneten Menü Element gesteuert.|  
|Vertical|Standardmäßig wird ein dynamisches Menü Element neben seinem übergeordneten Menü Element mit den oberen Rändern angezeigt. Wenn diese Eigenschaft festgelegt wird, wird die dynamische Menü Position vertikal von dieser Basis Position verschoben.|  
  
> [!NOTE]
>  Sie können diese Eigenschaft auf einen negativen Wert festlegen, um ein dynamisches Menü in eine negative Richtung zu verschieben. Wenn Sie ein horizontales Menü anzeigen, überlappen ein negativer-Wert ein dynamisches Menü und dessen übergeordnetes Menü Element.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Menu.DynamicVerticalOffset%2A>-Eigenschaft verwendet wird, um ein dynamisches Menü um 10 Pixel vom oberen Rand des übergeordneten Menü Elements nach unten zu verschieben.  
  
 [!code-aspx-csharp[MenuDynamicHorizontalOffset#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicHorizontalOffset/CS/menudynamichorizontaloffsetcs.aspx#1)]
 [!code-aspx-vb[MenuDynamicHorizontalOffset#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicHorizontalOffset/VB/menudynamichorizontaloffsetvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHorizontalOffset" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Orientation" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSubMenuIndent" />
      </Docs>
    </Member>
    <Member MemberName="EnsureDataBound">
      <MemberSignature Language="C#" Value="protected override void EnsureDataBound ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void EnsureDataBound() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.EnsureDataBound" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub EnsureDataBound ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void EnsureDataBound();" />
      <MemberSignature Language="F#" Value="override this.EnsureDataBound : unit -&gt; unit" Usage="menu.EnsureDataBound " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Überprüft vor dem Aufrufen der <see cref="M:System.Web.UI.WebControls.Menu.DataBind" />-Methode, ob für das Menüsteuerelement eine Datenbindung erforderlich ist und ob ein gültiges Datenquellen-Steuerelement angegeben wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Diese Methode wird hauptsächlich von Steuerelement Entwicklern verwendet, um das <xref:System.Web.UI.WebControls.Menu> Steuerelement zu erweitern.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindItem">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItem FindItem (string valuePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.WebControls.MenuItem FindItem(string valuePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.FindItem(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindItem (valuePath As String) As MenuItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::WebControls::MenuItem ^ FindItem(System::String ^ valuePath);" />
      <MemberSignature Language="F#" Value="member this.FindItem : string -&gt; System.Web.UI.WebControls.MenuItem" Usage="menu.FindItem valuePath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valuePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="valuePath">Der Wertpfad des abzurufenden Menüelements.</param>
        <summary>Ruft das Menüelement am angegebenen Wertpfad ab.</summary>
        <returns>Ein <see cref="T:System.Web.UI.WebControls.MenuItem" />, das das Menüelement am angegebenen Wertpfad darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.Web.UI.WebControls.Menu.FindItem%2A>-Methode, um ein <xref:System.Web.UI.WebControls.MenuItem>-Objekt aus dem <xref:System.Web.UI.WebControls.Menu>-Steuerelement abzurufen. Zum Abrufen des <xref:System.Web.UI.WebControls.MenuItem> Objekts müssen Sie einen Menüpfad zum Menü Element angeben. Der Menüpfad ist eine Zeichenfolge mit durch Trennzeichen getrennten Werten, die den Pfad von einem Stamm Menü Element zum aktuellen Menü Element bilden. Um das Trennzeichen zu bestimmen, verwenden Sie die <xref:System.Web.UI.WebControls.Menu.PathSeparator%2A>-Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Menu.FindItem%2A>-Methode verwendet wird, um ein Menü Element von einem <xref:System.Web.UI.WebControls.Menu>-Steuerelement an einem angegebenen Wert Pfad abzurufen.  
  
 [!code-aspx-csharp[MenuPathSeparator#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuPathSeparator/CS/menupathseparatorcs.aspx#1)]
 [!code-aspx-vb[MenuPathSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuPathSeparator/VB/menupathseparatorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.PathSeparator" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ValuePath" />
      </Docs>
    </Member>
    <Member MemberName="GetDesignModeState">
      <MemberSignature Language="C#" Value="protected override System.Collections.IDictionary GetDesignModeState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.IDictionary GetDesignModeState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.GetDesignModeState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetDesignModeState () As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::IDictionary ^ GetDesignModeState();" />
      <MemberSignature Language="F#" Value="override this.GetDesignModeState : unit -&gt; System.Collections.IDictionary" Usage="menu.GetDesignModeState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft den Entwurfszeitzustand des <see cref="T:System.Web.UI.WebControls.Menu" />-Steuerelements ab.</summary>
        <returns>Ein <see cref="T:System.Collections.IDictionary" />, das den Entwurfszeitzustand des <see cref="T:System.Web.UI.WebControls.Menu" />-Steuerelements enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.Menu.GetDesignModeState%2A>-Methode ist eine Hilfsmethode, die verwendet wird, um den aktuellen Entwurfszeit Zustand des <xref:System.Web.UI.WebControls.Menu> Steuer Elements zu erhalten.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="IncludeStyleBlock">
      <MemberSignature Language="C#" Value="public bool IncludeStyleBlock { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeStyleBlock" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.IncludeStyleBlock" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeStyleBlock As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeStyleBlock { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludeStyleBlock : bool with get, set" Usage="System.Web.UI.WebControls.Menu.IncludeStyleBlock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.Description("Determines whether or not to render the inline style block (only used in standards compliance mode)")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob von ASP.NET ein Block mit CSS (Cascading Stylesheets)-Definitionen für die im Menü verwendeten Formate gerendert werden soll.</summary>
        <value>Ein Wert, der angibt, ob von ASP.NET ein Block von CSS-Definitionen für die im Menü verwendeten Formate gerendert werden soll. Standardwert: <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Web.UI.WebControls.Menu>-Steuerelement verwendet CSS-Stile, um seine Darstellung in einem Browser zu steuern. Standardmäßig rendert Sie ein `style`-Element, das die CSS-Definitionen für die verwendeten CSS-Klassen enthält. In den folgenden Situationen legen Sie diese Eigenschaft in der Regel auf `false` fest:  
  
-   Sie möchten Ihre eigenen CSS-Definitionen bereitstellen, um die Darstellung des Menüs anzupassen. Sie müssen dann Ihren eigenen Block von CSS-Definitionen auf der Seite bereitstellen oder einen Link zu einer externen CSS-Datei einschließen, die die Definitionen enthält.  
  
-   Sie möchten die Standarddarstellung behalten, aber bevorzugen, die generierten CSS-Definitionen in einer separaten Datei beizubehalten. Sie müssen dann die Datei bereitstellen und verknüpfen.  
  
 In beiden Situationen können Sie eine Kopie des standardmäßigen CSS-Blocks abrufen, die das <xref:System.Web.UI.WebControls.Menu> Steuerelement generiert, indem Sie die-Eigenschaft auf `true`festlegen, die Seite ausführen und die Seite in einem Browser anzeigen. Anschließend können Sie die Seitenquelle im Browser anzeigen und den CSS-Block kopieren und in das Seiten Markup oder in eine separate Datei einfügen.  
  
 Wenn Sie diese Eigenschaft auf `false`festgelegt haben, können Sie keine Stileigenschaften festlegen. Beispielsweise können Sie kein `DynamicHoverStyle-ForeColor` Attribut in Markup hinzufügen oder die `DynamicHoverStyle.ForeColor`-Eigenschaft im Code festlegen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemCollection Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemCollection Items" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As MenuItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItemCollection ^ Items { System::Web::UI::WebControls::MenuItemCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : System.Web.UI.WebControls.MenuItemCollection" Usage="System.Web.UI.WebControls.Menu.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.MenuItemCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.MenuItemCollectionEditor,System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein <see cref="T:System.Web.UI.WebControls.MenuItemCollection" />-Objekt ab, das alle Menüelemente im <see cref="T:System.Web.UI.WebControls.Menu" />-Steuerelement enthält.</summary>
        <value>Eine <see cref="T:System.Web.UI.WebControls.MenuItemCollection" />, die alle Menüelemente im <see cref="T:System.Web.UI.WebControls.Menu" />-Steuerelement enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.Web.UI.WebControls.Menu.Items%2A>-Eigenschaft (Collection), um ein <xref:System.Web.UI.WebControls.MenuItemCollection> Objekt zu erhalten, das alle Menü Elemente in einem <xref:System.Web.UI.WebControls.Menu>-Steuerelement enthält. Diese Auflistung wird häufig verwendet, um schnell alle Menü Elemente zu durchlaufen oder um auf ein bestimmtes Menü Element zuzugreifen.  
  
 Die <xref:System.Web.UI.WebControls.Menu.Items%2A>-Sammlung kann auch verwendet werden, um die Menü Elemente Programm gesteuert zu verwalten. Sie können <xref:System.Web.UI.WebControls.MenuItem> Collection-Objekte hinzufügen, einfügen, entfernen und abrufen. Alle Aktualisierungen der Auflistung werden nach dem nächsten Roundtrip zum Server automatisch im <xref:System.Web.UI.WebControls.Menu>-Steuerelement berücksichtigt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Menu.Items%2A>-Auflistung verwendet wird, um die Menü Elemente im <xref:System.Web.UI.WebControls.Menu>-Steuerelement zu durchlaufen.  
  
 [!code-aspx-csharp[MenuItems#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItems/CS/menuitemscs.aspx#1)]
 [!code-aspx-vb[MenuItems#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItems/VB/menuitemsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItemCollection" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
      </Docs>
    </Member>
    <Member MemberName="ItemWrap">
      <MemberSignature Language="C#" Value="public bool ItemWrap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ItemWrap" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.ItemWrap" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemWrap As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ItemWrap { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ItemWrap : bool with get, set" Usage="System.Web.UI.WebControls.Menu.ItemWrap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Text für die Menüelemente umbrochen werden soll, oder legt diesen Wert fest.</summary>
        <value><see langword="true" />, um den Menüelementtext zu umbrechen, andernfalls <see langword="false" />. Der Standardwert lautet <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.Web.UI.WebControls.Menu.ItemWrap%2A>-Eigenschaft, um anzugeben, ob der Text, der in jedem Menü Element angezeigt wird. Wenn der Text nicht mehr über genügend Speicherplatz verfügt, wird er automatisch in der folgenden Zeile aufgeteilt und fortgesetzt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Menu.ItemWrap%2A>-Eigenschaft verwendet wird, um das Umwickeln von Text im <xref:System.Web.UI.WebControls.Menu> Steuerelement zu ermöglichen.  
  
 [!code-aspx-csharp[MenuItemWrap#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemWrap/CS/menuitemwrapcs.aspx#1)]
 [!code-aspx-vb[MenuItemWrap#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemWrap/VB/menuitemwrapvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Font" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.ForeColor" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHorizontalOffset" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicVerticalOffset" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSubMenuIndent" />
      </Docs>
    </Member>
    <Member MemberName="LevelMenuItemStyles">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemStyleCollection LevelMenuItemStyles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemStyleCollection LevelMenuItemStyles" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LevelMenuItemStyles As MenuItemStyleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItemStyleCollection ^ LevelMenuItemStyles { System::Web::UI::WebControls::MenuItemStyleCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LevelMenuItemStyles : System.Web.UI.WebControls.MenuItemStyleCollection" Usage="System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor,System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemStyleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein <see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection" />-Objekt ab, das die Formateinstellungen enthält, die auf Grundlage der Ebene der Menüelemente in einem <see cref="T:System.Web.UI.WebControls.Menu" />-Steuerelement auf die Menüelemente angewendet werden.</summary>
        <value>Ein <see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection" />-Objekt, das die Formateinstellungen enthält, die auf Grundlage der Ebene der Menüelemente in einem <see cref="T:System.Web.UI.WebControls.Menu" />-Steuerelement auf die Menüelemente angewendet werden.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> Auflistung als Alternative zu den einzelnen Stileigenschaften (z. b. <xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A>), um den Stil der Menü Elemente auf den einzelnen Menüebenen zu steuern. Die in dieser Sammlung enthaltenen Stile werden basierend auf der Menü Ebene auf die Menü Elemente angewendet. Der erste Stil in der Auflistung entspricht dem Stil der Menü Elemente auf der ersten Menü Ebene. Der zweite Stil in der Auflistung entspricht dem Stil der Menü Elemente auf der zweiten Menü Ebene usw. Diese Auflistung wird am häufigsten verwendet, um Inhalts Stil-Navigationsmenüs zu generieren, in denen Menü Elemente auf einer bestimmten Ebene die gleiche Darstellung aufweisen sollten, unabhängig davon, ob Sie über Untermenüs verfügen.  
  
> [!NOTE]
>  Wenn ein Stil für eine bestimmte Ebene mithilfe der <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> Auflistung definiert ist, überschreibt dies alle Menü Element-Stileinstellungen für die Menü Elemente auf dieser Ebene.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie mit der <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A>-Auflistung Stileinstellungen auf die Menü Elemente in einem <xref:System.Web.UI.WebControls.Menu>-Steuerelement basierend auf der jeweiligen Ebene angewendet werden.  
  
 [!code-aspx-csharp[MenuLevelMenuItemStyles#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuLevelMenuItemStyles/CS/menulevelmenuitemstylecs.aspx#1)]
 [!code-aspx-vb[MenuLevelMenuItemStyles#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuLevelMenuItemStyles/VB/menulevelmenuitemstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="LevelSelectedStyles">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemStyleCollection LevelSelectedStyles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemStyleCollection LevelSelectedStyles" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LevelSelectedStyles As MenuItemStyleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItemStyleCollection ^ LevelSelectedStyles { System::Web::UI::WebControls::MenuItemStyleCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LevelSelectedStyles : System.Web.UI.WebControls.MenuItemStyleCollection" Usage="System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor,System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemStyleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein <see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection" />-Objekt ab, das die Formateinstellungen enthält, die auf Grundlage der Ebene des ausgewählten Menüelements in einem <see cref="T:System.Web.UI.WebControls.Menu" />-Steuerelement auf dieses angewendet werden.</summary>
        <value>Ein <see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection" />-Objekt, das die Formateinstellungen enthält, die auf Grundlage der Ebene des ausgewählten Menüelements in einem <see cref="T:System.Web.UI.WebControls.Menu" />-Steuerelement auf dieses angewendet werden.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> Auflistung als Alternative zu den Eigenschaften <xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A> und <xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A>, um den Stil eines ausgewählten Menü Elements auf den einzelnen Menüebenen zu steuern. Die in dieser Auflistung enthaltenen Stile werden basierend auf der Menü Ebene auf ein ausgewähltes Menü Element angewendet. Der erste Stil in der Auflistung entspricht dem Stil eines ausgewählten Menü Elements auf der ersten Menü Ebene. Der zweite Stil in der Auflistung entspricht dem Stil eines ausgewählten Menü Elements auf der zweiten Menü Ebene usw. Diese Auflistung wird am häufigsten verwendet, um Inhalts Stil-Navigationsmenüs zu generieren, in denen Menü Elemente auf einer bestimmten Ebene die gleiche Darstellung aufweisen sollten, unabhängig davon, ob Sie über Untermenüs verfügen.  
  
> [!NOTE]
>  Wenn ein Stil für eine bestimmte Ebene mithilfe der <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> Auflistung definiert ist, überschreibt dies die Eigenschaften <xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A> und <xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A> auf dieser Ebene.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie mit der <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A>-Auflistung eine Formateinstellung auf das ausgewählte Menü Element in einem <xref:System.Web.UI.WebControls.Menu>-Steuerelement basierend auf der jeweiligen Ebene angewendet wird.  
  
 [!code-aspx-csharp[MenuLevelMenuItemStyles#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuLevelMenuItemStyles/CS/menulevelmenuitemstylecs.aspx#1)]
 [!code-aspx-vb[MenuLevelMenuItemStyles#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuLevelMenuItemStyles/VB/menulevelmenuitemstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="LevelSubMenuStyles">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SubMenuStyleCollection LevelSubMenuStyles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.SubMenuStyleCollection LevelSubMenuStyles" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LevelSubMenuStyles As SubMenuStyleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SubMenuStyleCollection ^ LevelSubMenuStyles { System::Web::UI::WebControls::SubMenuStyleCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LevelSubMenuStyles : System.Web.UI.WebControls.SubMenuStyleCollection" Usage="System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.SubMenuStyleCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.SubMenuStyleCollectionEditor,System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SubMenuStyleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein <see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection" />-Objekt ab, das die Formateinstellungen enthält, die auf Grundlage der Ebene der Untermenüelemente in einem <see cref="T:System.Web.UI.WebControls.Menu" />-Steuerelement auf die Untermenüelemente angewendet werden.</summary>
        <value>Ein <see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection" />-Objekt, das die Formateinstellungen enthält, die auf Grundlage der Ebene der Untermenüelemente in einem <see cref="T:System.Web.UI.WebControls.Menu" />-Steuerelement auf die Untermenüelemente angewendet werden.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> Auflistung als Alternative zu den einzelnen Stileigenschaften (z. b. <xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A>), um den Stil der statischen unter Menü Elemente zu steuern, die im statischen Menü auf den einzelnen Ebenen angezeigt werden. Die in dieser Sammlung enthaltenen Stile werden basierend auf der Menü Ebene auf die statischen unter Menü Elemente angewendet. Der erste Stil in der Auflistung entspricht dem Stil der ersten statischen unter Menü Ebene, die im statischen Menü angezeigt wird. Der zweite Stil in der Auflistung entspricht dem Stil der zweiten unter Menü Ebene, die im statischen Menü angezeigt wird usw. Diese Auflistung wird am häufigsten verwendet, um Inhalts Stil-Navigationsmenüs zu generieren, in denen Menü Elemente auf einer bestimmten Ebene die gleiche Darstellung aufweisen sollten, unabhängig davon, ob Sie über Untermenüs verfügen.  
  
> [!NOTE]
>  Wenn ein Stil für eine bestimmte Ebene mithilfe der <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> Auflistung definiert ist, überschreibt dies alle statischen unter Menü Element-Stileinstellungen auf dieser Ebene.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie mit der <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A>-Auflistung Stileinstellungen auf die unter Menü Elemente angewendet werden, die im statischen Menü eines <xref:System.Web.UI.WebControls.Menu> Steuer Elements basierend auf der jeweiligen Ebene angezeigt werden.  
  
 [!code-aspx-csharp[MenuLevelSubMenuStyles#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuLevelSubMenuStyles/CS/menulevelsubmenustylescs.aspx#1)]
 [!code-aspx-vb[MenuLevelSubMenuStyles#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuLevelSubMenuStyles/VB/menulevelsubmenustylesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected internal override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.LoadControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub LoadControlState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void LoadControlState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadControlState : obj -&gt; unit" Usage="menu.LoadControlState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Ein <see cref="T:System.Object" />, das den wiederherzustellenden Steuerelementzustand darstellt.</param>
        <summary>Lädt den Zustand der beizubehaltenden Eigenschaften im <see cref="T:System.Web.UI.WebControls.Menu" />-Steuerelement.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Diese Methode wird hauptsächlich von Steuerelement Entwicklern verwendet, um das <xref:System.Web.UI.WebControls.Menu> Steuerelement zu erweitern.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="menu.LoadViewState state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">Ein <see cref="T:System.Object" />, das die gespeicherten Ansichtszustandswerte für das Steuerelement enthält.</param>
        <summary>Lädt den zuvor gespeicherten Ansichtszustand des <see cref="T:System.Web.UI.WebControls.Menu" />-Steuerelements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumDynamicDisplayLevels">
      <MemberSignature Language="C#" Value="public int MaximumDynamicDisplayLevels { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumDynamicDisplayLevels" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumDynamicDisplayLevels As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaximumDynamicDisplayLevels { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumDynamicDisplayLevels : int with get, set" Usage="System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(3)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der Menüebenen ab, die für ein dynamisches Menü gerendert werden sollen, oder legt diese fest.</summary>
        <value>Die Anzahl der Menüebenen, die für ein dynamisches Menü gerendert werden sollen. Der Standardwert ist 3.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können mehrere Menüebenen im statischen Menü anzeigen, indem Sie die <xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A>-Eigenschaft auf einen Wert größer als 1 festlegen. Sie können auch zusätzliche Ebenen in dynamischen Menüs anzeigen, indem Sie diese Eigenschaft auf einen Wert größer als 0 festlegen. Wenn Sie z. b. zwei Menüebenen im statischen Menü anzeigen (indem Sie die <xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A>-Eigenschaft auf 2 festlegen) und dann diese Eigenschaft auf 3 festlegen, werden in dynamischen Menüs drei weitere Menüebenen angezeigt. Alle verbleibenden höheren Menüebenen (sofern vorhanden) werden verworfen.  
  
> [!NOTE]
>  Wenn Sie diese Eigenschaft auf 0 festlegen, wird ein flaches Menü bis zu der durch die <xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A>-Eigenschaft angegebenen Ebene ohne dynamische Menüs angezeigt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels%2A>-Eigenschaft verwendet wird, um die Anzahl der Menüebenen, die in einem dynamischen Menü angezeigt werden, auf 1 zu begrenzen. Nur die Stamm Menü Ebene wird angezeigt.  
  
 [!code-aspx-csharp[MenuMaximumDynamicDisplayLevels#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuMaximumDynamicDisplayLevels/CS/menumaximumdynamicdisplaylevelscs.aspx#1)]
 [!code-aspx-vb[MenuMaximumDynamicDisplayLevels#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuMaximumDynamicDisplayLevels/VB/menumaximumdynamicdisplaylevelsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Die <see cref="P:System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels" />-Eigenschaft wird auf einen Wert kleiner als 0 festgelegt.</exception>
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticDisplayLevels" />
      </Docs>
    </Member>
    <Member MemberName="MenuItemClick">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.MenuEventHandler MenuItemClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.MenuEventHandler MenuItemClick" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Menu.MenuItemClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MenuItemClick As MenuEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::MenuEventHandler ^ MenuItemClick;" />
      <MemberSignature Language="F#" Value="member this.MenuItemClick : System.Web.UI.WebControls.MenuEventHandler " Usage="member this.MenuItemClick : System.Web.UI.WebControls.MenuEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn in einem <see cref="T:System.Web.UI.WebControls.Menu" />-Steuerelement auf ein Menüelement geklickt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Web.UI.WebControls.Menu.MenuItemClick>-Ereignis wird ausgelöst, wenn in einem <xref:System.Web.UI.WebControls.Menu> Steuerelement auf ein Menü Element geklickt wird. Dies ermöglicht Ihnen die Bereitstellung eines Ereignis Handlers, der eine benutzerdefinierte Routine ausführt, z. b. die Synchronisierung mit einem anderen Steuerelement auf der Seite, wenn dieses Ereignis auftritt.  
  
 Ein <xref:System.Web.UI.WebControls.MenuEventArgs>-Objekt wird an den-Ereignishandler übermittelt, der Ihnen den Zugriff auf die Eigenschaften des Menü Elements ermöglicht, das das Ereignis ausgelöst hat.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie ein Ereignishandler für das <xref:System.Web.UI.WebControls.Menu.MenuItemClick>-Ereignis erstellt wird, das den Text des Menü Elements anzeigt, das vom Benutzer ausgewählt wurde.  
  
 [!code-aspx-csharp[MenuMenuItemClick#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuMenuItemClick/CS/menumenuitemclickcs.aspx#1)]
 [!code-aspx-vb[MenuMenuItemClick#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuMenuItemClick/VB/menumenuitemclickvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.MenuEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.MenuEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.Menu.MenuItemDataBound" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.OnMenuItemClick(System.Web.UI.WebControls.MenuEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="MenuItemClickCommandName">
      <MemberSignature Language="C#" Value="public static readonly string MenuItemClickCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string MenuItemClickCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Menu.MenuItemClickCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MenuItemClickCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ MenuItemClickCommandName;" />
      <MemberSignature Language="F#" Value=" staticval mutable MenuItemClickCommandName : string" Usage="System.Web.UI.WebControls.Menu.MenuItemClickCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Enthält den Befehlsnamen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses schreibgeschützte Feld enthält den Namen des Befehls, der für den Zugriff auf Menü Elemente verwendet wird. Der Standardwert ist "Click".  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MenuItemDataBound">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.MenuEventHandler MenuItemDataBound;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.MenuEventHandler MenuItemDataBound" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Menu.MenuItemDataBound" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MenuItemDataBound As MenuEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::MenuEventHandler ^ MenuItemDataBound;" />
      <MemberSignature Language="F#" Value="member this.MenuItemDataBound : System.Web.UI.WebControls.MenuEventHandler " Usage="member this.MenuItemDataBound : System.Web.UI.WebControls.MenuEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn ein Menüelement eines <see cref="T:System.Web.UI.WebControls.Menu" />-Steuerelements an Daten gebunden wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Web.UI.WebControls.Menu.MenuItemDataBound>-Ereignis wird ausgelöst, wenn ein Menü Element an Daten in einem <xref:System.Web.UI.WebControls.Menu> Steuerelement gebunden ist. Dies ermöglicht Ihnen die Bereitstellung eines Ereignis Handlers, der eine benutzerdefinierte Routine ausführt, z. b. das Hinzufügen von benutzerdefiniertem Inhalt oder das Ändern eines Menü Elements vor dem Rendering, wenn dieses Ereignis auftritt.  
  
 Ein <xref:System.Web.UI.WebControls.MenuEventArgs>-Objekt wird an den-Ereignishandler übermittelt, der Ihnen den Zugriff auf die Eigenschaften des Menü Elements ermöglicht, das das Ereignis ausgelöst hat.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie ein Ereignishandler für das <xref:System.Web.UI.WebControls.Menu.MenuItemDataBound> Ereignis erstellt wird, das den Text des Menü Elements `Home` ändert, bevor es in einem <xref:System.Web.UI.WebControls.Menu>-Steuerelement angezeigt wird.  
  
 [!code-aspx-csharp[MenuItemDataBound#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemDataBound/CS/menumenuitemdataboundcs.aspx#1)]
 [!code-aspx-vb[MenuItemDataBound#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemDataBound/VB/menumenuitemdataboundvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.MenuEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.MenuEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.Menu.MenuItemClick" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.OnMenuItemDataBound(System.Web.UI.WebControls.MenuEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnBubbleEvent">
      <MemberSignature Language="C#" Value="protected override bool OnBubbleEvent (object source, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnBubbleEvent(object source, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.OnBubbleEvent(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnBubbleEvent (source As Object, e As EventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnBubbleEvent(System::Object ^ source, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnBubbleEvent : obj * EventArgs -&gt; bool" Usage="menu.OnBubbleEvent (source, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">Die Quelle des Ereignisses.</param>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das Ereignisdaten enthält.</param>
        <summary>Bestimmt, ob das Ereignis für das <see cref="T:System.Web.UI.WebControls.Menu" />-Steuerelement in der Serversteuerelementhierarchie der für die Seite verwendeten Benutzeroberfläche (UI) nach oben übergeben wird.</summary>
        <returns><see langword="true" />, wenn das Ereignis abgebrochen wurde, andernfalls <see langword="false" />. Der Standardwert lautet <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Member überschreibt <xref:System.Web.UI.Control.OnBubbleEvent%2A>.  
  
> [!NOTE]
>  Diese Methode wird hauptsächlich von Steuerelement Entwicklern verwendet, um das <xref:System.Web.UI.WebControls.Menu> Steuerelement zu erweitern.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDataBinding">
      <MemberSignature Language="C#" Value="protected override void OnDataBinding (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDataBinding(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.OnDataBinding(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDataBinding (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDataBinding(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnDataBinding : EventArgs -&gt; unit" Usage="menu.OnDataBinding e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.MenuEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.Control.DataBinding" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Web.UI.Control.DataBinding>-Ereignis wird ausgelöst, wenn Daten an das <xref:System.Web.UI.WebControls.Menu> Steuerelement gebunden werden. Diese Methode benachrichtigt das-Steuerelement, dass es eine beliebige Daten Bindungs Logik ausführt, die diesem zugeordnet ist.  
  
 Die <xref:System.Web.UI.WebControls.Menu.OnDataBinding%2A>-Methode ermöglicht es abgeleiteten Klassen, das Ereignis zu verarbeiten, ohne einen Delegaten anzufügen. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 Diese Methode wird in der Regel von Steuerelement Entwicklern verwendet, wenn die <xref:System.Web.UI.WebControls.Menu>-Klasse erweitert wird.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Web.UI.WebControls.Menu.OnDataBinding(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Web.UI.WebControls.Menu.OnDataBinding(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="T:System.Web.UI.WebControls.MenuEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.MenuEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.Menu.MenuItemDataBound" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="menu.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.MenuEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.Control.Init" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn diese Methode von dieser Methode benachrichtigt wird, müssen die Webserver Steuerelemente alle Initialisierungs Schritte ausführen, die zum Erstellen und Einrichten einer Instanz erforderlich sind. In dieser Phase des Lebenszyklus des Server Steuer Elements muss der Ansichts Zustand des Steuer Elements noch aufgefüllt werden. Außerdem können Sie nicht auf ein anderes Server Steuerelement zugreifen, wenn diese Methode aufgerufen wird, unabhängig davon, ob es sich um ein untergeordnetes oder übergeordnetes Element dieses Steuer Elements handelt Es ist nicht garantiert, dass andere Server Steuerelemente erstellt werden und für den Zugriff bereit sind.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Web.UI.WebControls.Menu.OnInit%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Web.UI.WebControls.Menu.OnInit(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Web.UI.WebControls.Menu.OnInit(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnMenuItemClick">
      <MemberSignature Language="C#" Value="protected virtual void OnMenuItemClick (System.Web.UI.WebControls.MenuEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMenuItemClick(class System.Web.UI.WebControls.MenuEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.OnMenuItemClick(System.Web.UI.WebControls.MenuEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMenuItemClick (e As MenuEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMenuItemClick(System::Web::UI::WebControls::MenuEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMenuItemClick : System.Web.UI.WebControls.MenuEventArgs -&gt; unit&#xA;override this.OnMenuItemClick : System.Web.UI.WebControls.MenuEventArgs -&gt; unit" Usage="menu.OnMenuItemClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.MenuEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.MenuEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.Menu.MenuItemClick" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.Menu.OnMenuItemClick%2A>-Methode wird vom <xref:System.Web.UI.WebControls.Menu>-Steuerelement aufgerufen, um das <xref:System.Web.UI.WebControls.Menu.MenuItemClick>-Ereignis zu erhöhen. Sie wird in der Regel von Steuerelement Entwicklern verwendet, wenn die <xref:System.Web.UI.WebControls.Menu>-Klasse erweitert wird.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Web.UI.WebControls.Menu.OnMenuItemClick%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Web.UI.WebControls.Menu.OnMenuItemClick(System.Web.UI.WebControls.MenuEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Web.UI.WebControls.Menu.OnMenuItemClick(System.Web.UI.WebControls.MenuEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="T:System.Web.UI.WebControls.MenuEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.MenuEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.Menu.MenuItemClick" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.OnMenuItemDataBound(System.Web.UI.WebControls.MenuEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMenuItemDataBound">
      <MemberSignature Language="C#" Value="protected virtual void OnMenuItemDataBound (System.Web.UI.WebControls.MenuEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMenuItemDataBound(class System.Web.UI.WebControls.MenuEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.OnMenuItemDataBound(System.Web.UI.WebControls.MenuEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMenuItemDataBound (e As MenuEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMenuItemDataBound(System::Web::UI::WebControls::MenuEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMenuItemDataBound : System.Web.UI.WebControls.MenuEventArgs -&gt; unit&#xA;override this.OnMenuItemDataBound : System.Web.UI.WebControls.MenuEventArgs -&gt; unit" Usage="menu.OnMenuItemDataBound e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.MenuEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.MenuEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.Menu.MenuItemDataBound" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.Menu.OnMenuItemDataBound%2A>-Methode wird vom <xref:System.Web.UI.WebControls.Menu>-Steuerelement aufgerufen, um das <xref:System.Web.UI.WebControls.Menu.MenuItemDataBound>-Ereignis zu erhöhen. Sie wird in der Regel von Steuerelement Entwicklern verwendet, wenn die <xref:System.Web.UI.WebControls.Menu>-Klasse erweitert wird.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Web.UI.WebControls.Menu.OnMenuItemDataBound%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Web.UI.WebControls.Menu.OnMenuItemDataBound(System.Web.UI.WebControls.MenuEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Web.UI.WebControls.Menu.OnMenuItemDataBound(System.Web.UI.WebControls.MenuEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="T:System.Web.UI.WebControls.MenuEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.MenuEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.Menu.MenuItemDataBound" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.OnMenuItemClick(System.Web.UI.WebControls.MenuEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="menu.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.Control.PreRender" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.Menu.OnPreRender%2A>-Methode wird vom <xref:System.Web.UI.WebControls.Menu>-Steuerelement aufgerufen, um das <xref:System.Web.UI.Control.PreRender>-Ereignis zu erhöhen. Sie wird in der Regel von Steuerelement Entwicklern verwendet, wenn die <xref:System.Web.UI.WebControls.Menu>-Klasse erweitert wird.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Web.UI.WebControls.Menu.OnPreRender%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Web.UI.WebControls.Menu.OnPreRender(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Web.UI.WebControls.Menu.OnPreRender(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
      </Docs>
    </Member>
    <Member MemberName="Orientation">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Orientation Orientation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Orientation Orientation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.Orientation" />
      <MemberSignature Language="VB.NET" Value="Public Property Orientation As Orientation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Orientation Orientation { System::Web::UI::WebControls::Orientation get(); void set(System::Web::UI::WebControls::Orientation value); };" />
      <MemberSignature Language="F#" Value="member this.Orientation : System.Web.UI.WebControls.Orientation with get, set" Usage="System.Web.UI.WebControls.Menu.Orientation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Orientation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Richtung ab, in die das <see cref="T:System.Web.UI.WebControls.Menu" />-Steuerelement gerendert werden soll, oder legt diese fest.</summary>
        <value>Einer der <see cref="T:System.Web.UI.WebControls.Orientation" />-Enumerationswerte. Der Standardwert lautet <see langword="Orientation.Vertical" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.Web.UI.WebControls.Menu.Orientation%2A>-Eigenschaft, um die Richtung anzugeben, in der das <xref:System.Web.UI.WebControls.Menu> Steuerelement dargestellt werden soll. In der folgenden Tabelle sind die verfügbaren Richtungen aufgeführt.  
  
|Ausrichtung|BESCHREIBUNG|  
|-----------------|-----------------|  
|`Orientation.Horizontal`|Das <xref:System.Web.UI.WebControls.Menu> Steuerelement wird horizontal gerendert.|  
|`Orientation.Vertical`|Das <xref:System.Web.UI.WebControls.Menu> Steuerelement wird vertikal gerendert.|  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie die <xref:System.Web.UI.WebControls.Menu.Orientation%2A>-Eigenschaft verwenden, um ein horizontales Menü anzuzeigen.  
  
 [!code-aspx-csharp[MenuOrientation#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuOrientation/CS/menuorientationcs.aspx#1)]
 [!code-aspx-vb[MenuOrientation#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuOrientation/VB/menuorientationvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Orientation" />
      </Docs>
    </Member>
    <Member MemberName="PathSeparator">
      <MemberSignature Language="C#" Value="public char PathSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char PathSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.PathSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property PathSeparator As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char PathSeparator { char get(); void set(char value); };" />
      <MemberSignature Language="F#" Value="member this.PathSeparator : char with get, set" Usage="System.Web.UI.WebControls.Menu.PathSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue('/')</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Zeichen ab, das zur Abtrennung des Pfads eines Menüelements in einem <see cref="T:System.Web.UI.WebControls.Menu" />-Steuerelement verwendet wird, oder legt dieses Zeichen fest.</summary>
        <value>Mit diesem Zeichen wird der Pfad eines Menüelements abgetrennt. Der Standardwert ist ein Schrägstrich (/).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jedes Menü Element (dargestellt durch ein <xref:System.Web.UI.WebControls.MenuItem> Objekt) im <xref:System.Web.UI.WebControls.Menu> Steuerelement verfügt über eine <xref:System.Web.UI.WebControls.MenuItem.ValuePath%2A>-Eigenschaft, die die Position des Menü Elements angibt. Der Wertpfad ist eine Zeichenfolge mit durch Trennzeichen getrennten Werten, die den Pfad von einem Stamm Menü Element zum aktuellen Menü Element bilden. Verwenden Sie die <xref:System.Web.UI.WebControls.Menu.PathSeparator%2A>-Eigenschaft, um das Trennzeichen anzugeben, das zum Trennen der Werte im Menü Pfad verwendet wird. Dieser Wert wird häufig verwendet, wenn die Liste für die einzelnen Werte verarbeitet wird.  
  
 Abhängig von dem im <xref:System.Web.UI.WebControls.Menu> Steuerelement angezeigten Text muss das Trennzeichen möglicherweise geändert werden, um Konflikte zu vermeiden. Wenn Sie z. b. das Trennzeichen auf ein Komma setzen, sollte der angezeigte Text keine Kommas enthalten. Andernfalls kann die <xref:System.Web.UI.WebControls.MenuItem.ValuePath%2A>-Eigenschaft nicht korrekt analysiert werden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Menu.PathSeparator%2A>-Eigenschaft verwendet wird, um das Trennzeichen für den Wert Pfad eines Menü Elements in ein Komma zu ändern.  
  
 [!code-aspx-csharp[MenuPathSeparator#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuPathSeparator/CS/menupathseparatorcs.aspx#1)]
 [!code-aspx-vb[MenuPathSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuPathSeparator/VB/menupathseparatorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ValuePath" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.FindItem(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="PerformDataBinding">
      <MemberSignature Language="C#" Value="protected internal override void PerformDataBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void PerformDataBinding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.PerformDataBinding" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub PerformDataBinding ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void PerformDataBinding();" />
      <MemberSignature Language="F#" Value="override this.PerformDataBinding : unit -&gt; unit" Usage="menu.PerformDataBinding " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Bindet die Elemente aus der Datenquelle an die Menüelemente im <see cref="T:System.Web.UI.WebControls.Menu" />-Steuerelement.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.Menu.PerformDataBinding%2A>-Methode ist eine Hilfsmethode, die vom <xref:System.Web.UI.WebControls.Menu>-Steuerelement aufgerufen wird, um die Elemente in der Datenquelle an das <xref:System.Web.UI.WebControls.Menu>-Steuerelement zu binden.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.HierarchicalDataBoundControl.PerformDataBinding" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected internal virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaisePostBackEvent : string -&gt; unit&#xA;override this.RaisePostBackEvent : string -&gt; unit" Usage="menu.RaisePostBackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Ein <see cref="T:System.String" />, der das an den Ereignishandler übergebene Ereignisargument darstellt.</param>
        <summary>Verarbeitet ein Ereignis, das beim Senden eines Formulars an den Server ausgelöst wird.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="menu.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Das <see cref="T:System.Web.UI.HtmlTextWriter" />-Objekt, das den Ausgabestream darstellt, der zum Schreiben des Inhalts auf eine Webseite verwendet wird.</param>
        <summary>Gibt das Menüsteuerelement auf dem Clientbrowser wieder.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderBeginTag">
      <MemberSignature Language="C#" Value="public override void RenderBeginTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderBeginTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RenderBeginTag (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RenderBeginTag(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderBeginTag : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="menu.RenderBeginTag writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Der <see cref="T:System.Web.UI.HtmlTextWriter" />, der Methoden für die Erstellung und das Rendern der gerätespezifischen Ausgabe enthält.</param>
        <summary>Fügt Tagattribute hinzu und schreibt das Markup für das Anfangstag des Steuerelements in den Ausgabestream, der an den Browser oder das Gerät ausgegeben wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.Menu.RenderBeginTag%2A>-Methode fügt Tagattribute hinzu und schreibt das Markup für das öffnende Tag des-Steuer Elements in den Ausgabedatenstrom, der für den-Client Browser an den Antwortstream ausgegeben wird.  
  
 Überschreiben Sie <xref:System.Web.UI.WebControls.Menu.RenderBeginTag%2A>, wenn Sie benutzerdefiniertes Verhalten implementieren möchten, z. b., um mehrere Tags in den Antwortstream zu schreiben, bevor Sie den Inhalt eines Steuer Elements wie `<table><tr><td>` Diese Methode überschreibt die <xref:System.Web.UI.WebControls.Menu.RenderBeginTag%2A>-Methode, um die <xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A>-Eigenschaft hinzuzufügen.  
  
> [!NOTE]
>  Diese Methode wird hauptsächlich von Steuerelement Entwicklern verwendet, um das <xref:System.Web.UI.WebControls.Menu> Steuerelement zu erweitern.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected internal override void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderContents (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderContents : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="menu.RenderContents writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Der <see cref="T:System.Web.UI.HtmlTextWriter" />, der Methoden für die Erstellung und das Rendern der gerätespezifischen Ausgabe enthält.</param>
        <summary>Dieser Member überschreibt <see cref="M:System.Web.UI.WebControls.WebControl.RenderContents(System.Web.UI.HtmlTextWriter)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Überschreiben Sie die <xref:System.Web.UI.WebControls.WebControl.RenderContents%2A>-Methode, um den Inhalt des Steuer Elements zwischen den Anfangs-und Endtags zu erzeugen. Die Standard Implementierung dieser Methode rendert alle untergeordneten Steuerelemente.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderEndTag">
      <MemberSignature Language="C#" Value="public override void RenderEndTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderEndTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RenderEndTag (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RenderEndTag(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderEndTag : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="menu.RenderEndTag writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Der <see cref="T:System.Web.UI.HtmlTextWriter" />, der Methoden für die Erstellung und das Rendern der gerätespezifischen Ausgabe enthält.</param>
        <summary>Führt das endgültige Markup aus und schreibt den HTML-Code für das Endtag des Steuerelements in den Ausgabestream, der an den Browser oder das Gerät ausgegeben wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode überschreibt <xref:System.Web.UI.WebControls.WebControl.RenderEndTag%2A?displayProperty=nameWithType>, um <xref:System.Web.UI.WebControls.Menu> Untermenüs und die <xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A>-Eigenschaft zu Rendering.  
  
> [!NOTE]
>  Diese Methode wird hauptsächlich von Steuerelement Entwicklern verwendet, um das <xref:System.Web.UI.WebControls.Menu> Steuerelement zu erweitern.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderingMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuRenderingMode RenderingMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.MenuRenderingMode RenderingMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.RenderingMode" />
      <MemberSignature Language="VB.NET" Value="Public Property RenderingMode As MenuRenderingMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuRenderingMode RenderingMode { System::Web::UI::WebControls::MenuRenderingMode get(); void set(System::Web::UI::WebControls::MenuRenderingMode value); };" />
      <MemberSignature Language="F#" Value="member this.RenderingMode : System.Web.UI.WebControls.MenuRenderingMode with get, set" Usage="System.Web.UI.WebControls.Menu.RenderingMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuRenderingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Web.UI.WebControls.Menu" />-Steuerelement HTML-<see langword="table" />-Elemente und Inlineformate oder <see langword="listitem" />-Elemente und Cascading Stylesheet (CSS)-Formate rendert, oder legt ihn fest.</summary>
        <value>Ein Wert, der angibt, ob das <see cref="T:System.Web.UI.WebControls.Menu" />-Steuerelement HTML-<see langword="table" />-Elemente und Inlineformate oder <see langword="listitem" />-Elemente und Cascading Stylesheet (CSS)-Formate rendert. Standardwert: <see cref="F:System.Web.UI.WebControls.MenuRenderingMode.Default" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Wert der <xref:System.Web.UI.WebControls.Menu.RenderingMode%2A>-Eigenschaft bestimmt, wie das Menü Steuerelement Markup für das <xref:System.Web.UI.WebControls.Menu> Steuerelement rendert.  
  
 In ASP.NET 3,5 und früheren Versionen verwendet das <xref:System.Web.UI.WebControls.Menu>-Steuerelement HTML-`table` Elemente und Inline Stile, um die Darstellung des Menüs in einem Browser anzugeben. In ASP.NET 4 und höheren Versionen verwendet das <xref:System.Web.UI.WebControls.Menu>-Steuerelement standardmäßig HTML-`listitem` Elemente und CSS-Stile (Cascading Stylesheet).  
  
 Wenn Sie diese Eigenschaft nicht festlegen, rendert das <xref:System.Web.UI.WebControls.Menu>-Steuerelement Markup, das für die ASP.NET-Version geeignet ist, die durch die <xref:System.Web.UI.Control.RenderingCompatibility%2A?displayProperty=nameWithType>-Eigenschaft angegeben wird. Das <xref:System.Web.UI.WebControls.Menu>-Steuerelement verwendet die folgenden Regeln:  
  
-   Wenn der Wert der <xref:System.Web.UI.Control.RenderingCompatibility%2A>-Eigenschaft `3.5`ist, verwendet das <xref:System.Web.UI.WebControls.Menu>-Steuerelement HTML-`table` Elemente und Inline Formatvorlagen.  
  
-   Wenn der Wert der <xref:System.Web.UI.Control.RenderingCompatibility%2A>-Eigenschaft `4.0` oder größer ist, verwendet das <xref:System.Web.UI.WebControls.Menu>-Steuerelement HTML-`listitem` Elemente und CSS-Stile.  
  
 Diese Eigenschaft wird aus Gründen der Abwärtskompatibilität bereitgestellt. Wenn die <xref:System.Web.UI.Control.RenderingCompatibility%2A>-Eigenschaft angibt, dass Steuerelemente HTML-Code generieren sollen, der mit ASP.NET 4 oder höher kompatibel ist, Sie jedoch möchten, dass das <xref:System.Web.UI.WebControls.Menu> Steuerelement eine Ausnahme ist, die ein früheres Verhalten verwendet, können Sie diese Eigenschaft auf <xref:System.Web.UI.WebControls.MenuRenderingMode.Table>festlegen. Wenn Sie z. b. über eine Webseite verfügen, die Text von rechts nach Links anzeigt, empfiehlt es sich, diese Eigenschaft auf <xref:System.Web.UI.WebControls.MenuRenderingMode.Table> festzulegen, da in einigen Browsern das <xref:System.Web.UI.WebControls.MenuRenderingMode.List> Modus-Markup für Text von rechts nach Links nicht ordnungsgemäß angezeigt wird.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.RenderingCompatibility" />
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected internal override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.SaveControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SaveControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ SaveControlState();" />
      <MemberSignature Language="F#" Value="override this.SaveControlState : unit -&gt; obj" Usage="menu.SaveControlState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Speichert den Zustand der beizubehaltenden Eigenschaften im <see cref="T:System.Web.UI.WebControls.Menu" />-Steuerelement.</summary>
        <returns>Ein Objekt, das die Zustandsdaten für das Steuerelement enthält. Wenn der Zustand nicht geändert wurde, gibt diese Methode <see langword="null" /> zurück.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird verwendet, um den Zustand der Eigenschaften im <xref:System.Web.UI.WebControls.Menu> Steuerelement zu speichern, das beibehalten werden muss, selbst wenn die Eigenschaft <xref:System.Web.UI.Control.EnableViewState%2A> auf `false`festgelegt ist. Bei der <xref:System.Web.UI.WebControls.Menu.SaveControlState%2A>-Methode geht es um Zustandsdaten, die für den Vorgang eines Steuer Elements (z. b. einen Index oder ein Schlüsselwort) wichtig sind und von den Ansichts Zustandsdaten des Steuer Elements getrennt sind.  
  
> [!NOTE]
>  Diese Methode wird hauptsächlich von Steuerelement Entwicklern verwendet, um das <xref:System.Web.UI.WebControls.Menu> Steuerelement zu erweitern.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="menu.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Speichert den Zustand des <see cref="T:System.Web.UI.WebControls.Menu" />-Steuerelements.</summary>
        <returns>Ein <see cref="T:System.Object" />, das den Zustand des <see cref="T:System.Web.UI.WebControls.Menu" />-Steuerelements enthält.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollDownImageUrl">
      <MemberSignature Language="C#" Value="public string ScrollDownImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScrollDownImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollDownImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ScrollDownImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ScrollDownImageUrl : string with get, set" Usage="System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die URL zu einem Bild ab, das in einem dynamischen Menü angezeigt wird und angibt, dass der Benutzer für zusätzliche Menüelemente einen Bildlauf nach unten durchführen kann, oder legt diese URL zu einem Bild fest.</summary>
        <value>Die URL zu einem Bild, das in einem dynamischen Menü angezeigt wird und angibt, dass der Benutzer für zusätzliche Menüelemente einen Bildlauf nach unten durchführen kann. Der Standardwert ist eine leere Zeichenfolge (""), die angibt, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft wird im .NET 4,0-Renderingmodus nicht unterstützt. Wenn diese Eigenschaft erforderlich ist, können Sie das Menü auf den .NET 3,5-Renderingmodus festlegen, indem Sie Folgendes im Code der Seite hinzufügen:  
  
```  
menuInstance.RenderingCompatibility = new Version(3, 5);  
```  
  
 Verwenden Sie die <xref:System.Web.UI.WebControls.Menu.ScrollDownImageUrl%2A>-Eigenschaft, um ein benutzerdefiniertes Bild anzugeben, das am unteren Rand jedes dynamischen Menüs angezeigt werden soll, um anzugeben, dass der Benutzer für zusätzliche Menü Elemente einen Bildlauf nach unten  
  
> [!NOTE]
>  Wenn diese Eigenschaft nicht festgelegt ist, wird das interne Standardbild verwendet.  
  
 Sie können den alternativen Text für das Bild angeben, indem Sie die <xref:System.Web.UI.WebControls.Menu.ScrollDownText%2A>-Eigenschaft festlegen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Menu.ScrollDownImageUrl%2A>-Eigenschaft verwendet wird, um ein benutzerdefiniertes Bild anzuzeigen, das angibt, dass der Benutzer in einem dynamischen Menü einen Bildlauf nach unten durchführen kann.  
  
 [!code-aspx-csharp[MenuScrollDownImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuScrollDownImage/CS/menuscrolldownimagecs.aspx#1)]
 [!code-aspx-vb[MenuScrollDownImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuScrollDownImage/VB/menuscrolldownimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
      </Docs>
    </Member>
    <Member MemberName="ScrollDownText">
      <MemberSignature Language="C#" Value="public string ScrollDownText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScrollDownText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollDownText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ScrollDownText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ScrollDownText : string with get, set" Usage="System.Web.UI.WebControls.Menu.ScrollDownText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den alternativen Text für das in der <see cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />-Eigenschaft angegebene Bild ab oder legt diesen fest.</summary>
        <value>Der alternative Text für das in der <see cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />-Eigenschaft angegebene Bild. Der Standardwert ist eine leere Zeichenfolge ("") und gibt an, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft wird im .NET 4,0-Renderingmodus nicht unterstützt. Wenn diese Eigenschaft erforderlich ist, können Sie das Menü auf den .NET 3,5-Renderingmodus festlegen, indem Sie Folgendes im Code der Seite hinzufügen:  
  
```  
menuInstance.RenderingCompatibility = new Version(3, 5);  
```  
  
 Wenn ein dynamisches Menü Element am unteren Rand des Menüs weitere Elemente enthält, wird ein Bild angezeigt, das angibt, dass der Benutzer einen Bildlauf nach unten durchführen kann, um weitere Menü Elemente anzuzeigen. Verwenden Sie die <xref:System.Web.UI.WebControls.Menu.ScrollDownText%2A>-Eigenschaft, um den alternativen Text für dieses Bild anzugeben. Der von Ihnen angegebene Text bietet Hilfstechnologiegeräte mit einer Beschreibung des Bilds, das verwendet werden kann, um das Steuerelement leichter zugänglich zu machen.  
  
 Der Wert dieser Eigenschaft, wenn festgelegt, kann mithilfe eines Designers Tools automatisch zu einer Ressourcendatei gespeichert werden. Weitere Informationen finden Sie unter <xref:System.ComponentModel.LocalizableAttribute> und [Globalisierung und Lokalisierung](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Menu.ScrollDownText%2A>-Eigenschaft verwendet wird, um den alternativen Text für das Bild anzugeben, mit dem angegeben wird, dass der Benutzer in einem dynamischen Menü für zusätzliche Menü Elemente einen Bildlauf nach unten durchführen kann.  
  
 [!code-aspx-csharp[MenuScrollDownImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuScrollDownImage/CS/menuscrolldownimagecs.aspx#1)]
 [!code-aspx-vb[MenuScrollDownImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuScrollDownImage/VB/menuscrolldownimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
      </Docs>
    </Member>
    <Member MemberName="ScrollUpImageUrl">
      <MemberSignature Language="C#" Value="public string ScrollUpImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScrollUpImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollUpImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ScrollUpImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ScrollUpImageUrl : string with get, set" Usage="System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die URL zu einem Bild ab, das in einem dynamischen Menü angezeigt wird und angibt, dass der Benutzer für zusätzliche Menüelemente einen Bildlauf nach oben durchführen kann, oder legt diese URL zu einem Bild fest.</summary>
        <value>Die URL zu einem Bild, das in einem dynamischen Menü angezeigt wird und angibt, dass der Benutzer für zusätzliche Menüelemente einen Bildlauf nach oben durchführen kann. Der Standardwert ist eine leere Zeichenfolge (""), die angibt, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft wird im .NET 4,0-Renderingmodus nicht unterstützt. Wenn diese Eigenschaft erforderlich ist, können Sie das Menü auf den .NET 3,5-Renderingmodus festlegen, indem Sie Folgendes im Code der Seite hinzufügen:  
  
```  
menuInstance.RenderingCompatibility = new Version(3, 5);  
```  
  
 Verwenden Sie die <xref:System.Web.UI.WebControls.Menu.ScrollUpImageUrl%2A>-Eigenschaft, um ein benutzerdefiniertes Bild anzugeben, das oben in jedem dynamischen Menü angezeigt werden soll, um anzugeben, dass der Benutzer für zusätzliche Menü Elemente einen Bildlauf durchführen kann  
  
> [!NOTE]
>  Wenn diese Eigenschaft nicht festgelegt ist, wird das interne Standardbild verwendet.  
  
 Sie können den alternativen Text für das Bild angeben, indem Sie die <xref:System.Web.UI.WebControls.Menu.ScrollUpText%2A>-Eigenschaft festlegen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Menu.ScrollUpImageUrl%2A>-Eigenschaft verwendet wird, um ein benutzerdefiniertes Bild anzuzeigen, das angibt, dass der Benutzer in einem dynamischen Menü einen Bildlauf nach oben durchführen kann.  
  
 [!code-aspx-csharp[MenuScrollDownImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuScrollDownImage/CS/menuscrolldownimagecs.aspx#1)]
 [!code-aspx-vb[MenuScrollDownImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuScrollDownImage/VB/menuscrolldownimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
      </Docs>
    </Member>
    <Member MemberName="ScrollUpText">
      <MemberSignature Language="C#" Value="public string ScrollUpText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScrollUpText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollUpText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ScrollUpText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ScrollUpText : string with get, set" Usage="System.Web.UI.WebControls.Menu.ScrollUpText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den alternativen Text für das in der <see cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />-Eigenschaft angegebene Bild ab oder legt diesen fest.</summary>
        <value>Der alternative Text für das in der <see cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />-Eigenschaft angegebene Bild. Der Standardwert ist eine leere Zeichenfolge ("") und gibt an, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft wird im .NET 4,0-Renderingmodus nicht unterstützt. Wenn diese Eigenschaft erforderlich ist, können Sie das Menü auf den .NET 3,5-Renderingmodus festlegen, indem Sie Folgendes im Code der Seite hinzufügen:  
  
```  
menuInstance.RenderingCompatibility = new Version(3, 5);  
```  
  
 Wenn ein dynamisches Menü Element am oberen Rand des Menüs weitere Elemente enthält, wird ein Bild angezeigt, das angibt, dass der Benutzer einen Bildlauf nach oben durchführen kann, um weitere Menü Elemente anzuzeigen. Verwenden Sie die <xref:System.Web.UI.WebControls.Menu.ScrollUpText%2A>-Eigenschaft, um den alternativen Text für dieses Bild anzugeben. Der von Ihnen angegebene Text bietet Hilfstechnologiegeräte mit einer Beschreibung des Bilds, das verwendet werden kann, um das Steuerelement leichter zugänglich zu machen.  
  
 Der Wert dieser Eigenschaft, wenn festgelegt, kann mithilfe eines Designers Tools automatisch zu einer Ressourcendatei gespeichert werden. Weitere Informationen finden Sie unter <xref:System.ComponentModel.LocalizableAttribute> und [Globalisierung und Lokalisierung](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Menu.ScrollUpText%2A>-Eigenschaft verwendet wird, um den alternativen Text für das Bild anzugeben, mit dem angegeben wird, dass der Benutzer in einem dynamischen Menü für zusätzliche Menü Elemente einen Bildlauf nach oben durchführen kann.  
  
 [!code-aspx-csharp[MenuScrollDownImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuScrollDownImage/CS/menuscrolldownimagecs.aspx#1)]
 [!code-aspx-vb[MenuScrollDownImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuScrollDownImage/VB/menuscrolldownimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="SelectedItem">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItem SelectedItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItem SelectedItem" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.SelectedItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedItem As MenuItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItem ^ SelectedItem { System::Web::UI::WebControls::MenuItem ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedItem : System.Web.UI.WebControls.MenuItem" Usage="System.Web.UI.WebControls.Menu.SelectedItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das ausgewählte Menüelement ab.</summary>
        <value>Ein <see cref="T:System.Web.UI.WebControls.MenuItem" />, das das ausgewählte Menüelement darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.Web.UI.WebControls.Menu.SelectedItem%2A>-Eigenschaft, um das Menü Element zu bestimmen, das vom Benutzer ausgewählt wurde.  
  
> [!NOTE]
>  Als Verknüpfung können Sie auch den Text des ausgewählten Menü Elements direkt mithilfe der <xref:System.Web.UI.WebControls.Menu.SelectedValue%2A>-Eigenschaft bestimmen.  
  
 Wenn der Benutzer ein Menü Element aus einem <xref:System.Web.UI.WebControls.Menu>-Steuerelement auswählt, wird das <xref:System.Web.UI.WebControls.Menu.MenuItemClick>-Ereignis ausgelöst, sodass Sie eine benutzerdefinierte Routine durch Bereitstellen eines Ereignis Handlers ausführen können.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Menu.SelectedItem%2A>-Eigenschaft verwendet wird, um das ausgewählte Menü Element in einem <xref:System.Web.UI.WebControls.Menu>-Steuerelement zu bestimmen.  
  
 [!code-aspx-csharp[MenuSelectedItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuSelectedItem/CS/menuselecteditemcs.aspx#1)]
 [!code-aspx-vb[MenuSelectedItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuSelectedItem/VB/menuselecteditemvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.SelectedValue" />
        <altmember cref="E:System.Web.UI.WebControls.Menu.MenuItemClick" />
      </Docs>
    </Member>
    <Member MemberName="SelectedValue">
      <MemberSignature Language="C#" Value="public string SelectedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.SelectedValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectedValue { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedValue : string" Usage="System.Web.UI.WebControls.Menu.SelectedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert des ausgewählten Menüelements ab.</summary>
        <value>Der Wert des ausgewählten Menüelements. Der Standardwert ist <see cref="F:System.String.Empty" /> und gibt an, dass aktuell kein Menüelement ausgewählt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.Web.UI.WebControls.Menu.SelectedValue%2A>-Eigenschaft als Verknüpfung, um den Text des ausgewählten Menü Elements zu bestimmen. Wenn Sie auf die anderen Eigenschaften des ausgewählten Menü Elements zugreifen möchten, verwenden Sie die <xref:System.Web.UI.WebControls.Menu.SelectedItem%2A>-Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Menu.SelectedValue%2A>-Eigenschaft verwendet wird, um den Text des ausgewählten Menü Elements in einem <xref:System.Web.UI.WebControls.Menu>-Steuerelement zu bestimmen.  
  
 [!code-aspx-csharp[MenuSelectedItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuSelectedItem/CS/menuselecteditemcs.aspx#1)]
 [!code-aspx-vb[MenuSelectedItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuSelectedItem/VB/menuselecteditemvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.SelectedItem" />
        <altmember cref="E:System.Web.UI.WebControls.Menu.MenuItemClick" />
      </Docs>
    </Member>
    <Member MemberName="SetDesignModeState">
      <MemberSignature Language="C#" Value="protected override void SetDesignModeState (System.Collections.IDictionary data);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetDesignModeState(class System.Collections.IDictionary data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.SetDesignModeState(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetDesignModeState (data As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetDesignModeState(System::Collections::IDictionary ^ data);" />
      <MemberSignature Language="F#" Value="override this.SetDesignModeState : System.Collections.IDictionary -&gt; unit" Usage="menu.SetDesignModeState data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="data">Ein <see cref="T:System.Collections.IDictionary" />, das die Zustandsdaten zum Anzeigen des Steuerelements enthält.</param>
        <summary>Legt die Entwurfszeitdaten für das <see cref="T:System.Web.UI.WebControls.Menu" />-Steuerelement fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode überschreibt <xref:System.Web.UI.Control.SetDesignModeState%2A>.  
  
> [!NOTE]
>  Diese Methode wird hauptsächlich von Steuerelement Entwicklern verwendet, um das <xref:System.Web.UI.WebControls.Menu> Steuerelement zu erweitern.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetItemDataBound">
      <MemberSignature Language="C#" Value="protected void SetItemDataBound (System.Web.UI.WebControls.MenuItem node, bool dataBound);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetItemDataBound(class System.Web.UI.WebControls.MenuItem node, bool dataBound) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.SetItemDataBound(System.Web.UI.WebControls.MenuItem,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetItemDataBound (node As MenuItem, dataBound As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetItemDataBound(System::Web::UI::WebControls::MenuItem ^ node, bool dataBound);" />
      <MemberSignature Language="F#" Value="member this.SetItemDataBound : System.Web.UI.WebControls.MenuItem * bool -&gt; unit" Usage="menu.SetItemDataBound (node, dataBound)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.UI.WebControls.MenuItem" />
        <Parameter Name="dataBound" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="node">Das festzulegende <see cref="T:System.Web.UI.WebControls.MenuItem" />-Objekt.</param>
        <param name="dataBound"><see langword="true" />, um den Knoten als datengebunden festzulegen, andernfalls <see langword="false" />.</param>
        <summary>Legt die <see cref="P:System.Web.UI.WebControls.MenuItem.DataBound" />-Eigenschaft des angegebenen <see cref="T:System.Web.UI.WebControls.MenuItem" />-Objekts mit dem angegebenen Wert fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.Menu.SetItemDataBound%2A>-Methode ist eine Hilfsmethode, die von abgeleiteten Klassen verwendet wird, um die <xref:System.Web.UI.WebControls.MenuItem.DataBound%2A>-Eigenschaft des angegebenen <xref:System.Web.UI.WebControls.MenuItem> Objekts festzulegen.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Menu.SetItemDataItem(System.Web.UI.WebControls.MenuItem,System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.SetItemDataPath(System.Web.UI.WebControls.MenuItem,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SetItemDataItem">
      <MemberSignature Language="C#" Value="protected void SetItemDataItem (System.Web.UI.WebControls.MenuItem node, object dataItem);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetItemDataItem(class System.Web.UI.WebControls.MenuItem node, object dataItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.SetItemDataItem(System.Web.UI.WebControls.MenuItem,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetItemDataItem (node As MenuItem, dataItem As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetItemDataItem(System::Web::UI::WebControls::MenuItem ^ node, System::Object ^ dataItem);" />
      <MemberSignature Language="F#" Value="member this.SetItemDataItem : System.Web.UI.WebControls.MenuItem * obj -&gt; unit" Usage="menu.SetItemDataItem (node, dataItem)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.UI.WebControls.MenuItem" />
        <Parameter Name="dataItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="node">Das festzulegende <see cref="T:System.Web.UI.WebControls.MenuItem" />-Objekt.</param>
        <param name="dataItem">Das Datenelement für <see cref="T:System.Web.UI.WebControls.MenuItem" />.</param>
        <summary>Legt die <see cref="P:System.Web.UI.WebControls.MenuItem.DataItem" />-Eigenschaft des angegebenen <see cref="T:System.Web.UI.WebControls.MenuItem" />-Objekts mit dem angegebenen Wert fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.Menu.SetItemDataItem%2A>-Methode ist eine Hilfsmethode, die von abgeleiteten Klassen verwendet wird, um die <xref:System.Web.UI.WebControls.MenuItem.DataItem%2A>-Eigenschaft des angegebenen <xref:System.Web.UI.WebControls.MenuItem> Objekts festzulegen.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Menu.SetItemDataBound(System.Web.UI.WebControls.MenuItem,System.Boolean)" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.SetItemDataPath(System.Web.UI.WebControls.MenuItem,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SetItemDataPath">
      <MemberSignature Language="C#" Value="protected void SetItemDataPath (System.Web.UI.WebControls.MenuItem node, string dataPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetItemDataPath(class System.Web.UI.WebControls.MenuItem node, string dataPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.SetItemDataPath(System.Web.UI.WebControls.MenuItem,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetItemDataPath (node As MenuItem, dataPath As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetItemDataPath(System::Web::UI::WebControls::MenuItem ^ node, System::String ^ dataPath);" />
      <MemberSignature Language="F#" Value="member this.SetItemDataPath : System.Web.UI.WebControls.MenuItem * string -&gt; unit" Usage="menu.SetItemDataPath (node, dataPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.UI.WebControls.MenuItem" />
        <Parameter Name="dataPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="node">Das festzulegende <see cref="T:System.Web.UI.WebControls.MenuItem" />-Objekt.</param>
        <param name="dataPath">Der Datenpfad für <see cref="T:System.Web.UI.WebControls.MenuItem" />.</param>
        <summary>Legt die <see cref="P:System.Web.UI.WebControls.MenuItem.DataPath" />-Eigenschaft des angegebenen <see cref="T:System.Web.UI.WebControls.MenuItem" />-Objekts mit dem angegebenen Wert fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.Menu.SetItemDataPath%2A>-Methode ist eine Hilfsmethode, die von abgeleiteten Klassen verwendet wird, um die <xref:System.Web.UI.WebControls.MenuItem.DataPath%2A>-Eigenschaft des angegebenen <xref:System.Web.UI.WebControls.MenuItem> Objekts festzulegen.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Menu.SetItemDataItem(System.Web.UI.WebControls.MenuItem,System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.SetItemDataPath(System.Web.UI.WebControls.MenuItem,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SkipLinkText">
      <MemberSignature Language="C#" Value="public string SkipLinkText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SkipLinkText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.SkipLinkText" />
      <MemberSignature Language="VB.NET" Value="Public Property SkipLinkText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SkipLinkText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SkipLinkText : string with get, set" Usage="System.Web.UI.WebControls.Menu.SkipLinkText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den alternativen Text für ein ausgeblendetes Bild ab, das von Bildschirmsprachausgaben gelesen wird und das Überspringen der Linkliste ermöglicht, oder legt diesen Text fest.</summary>
        <value>Der alternative Text für ein ausgeblendetes Bild, das von Bildschirmsprachausgaben gelesen wird und das Überspringen der Linkliste ermöglicht. Der Standardwert ist eine leere Zeichenfolge ("") und gibt an, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A>-Eigenschaft, um den alternativen Text für ein ausgeblendetes Bild anzugeben, das von Bildschirm Sprachausgaben gelesen wird, damit die Liste der Links übersprungen werden kann. Der von Ihnen angegebene Text stellt Hilfstechnologiegeräte mit einer Beschreibung des ausgeblendeten Link Bilds zur Verfügung, das verwendet werden kann, um das Steuerelement leichter zugänglich zu machen.  
  
 Der Wert dieser Eigenschaft, wenn festgelegt, kann mithilfe eines Designers Tools automatisch zu einer Ressourcendatei gespeichert werden. Weitere Informationen finden Sie unter <xref:System.ComponentModel.LocalizableAttribute> und [Globalisierung und Lokalisierung](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
 Das <xref:System.Web.UI.WebControls.Menu>-Steuerelement stellt die <xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A>-Eigenschaft als Möglichkeit bereit, damit das gesamte Steuerelement von Sprachausgaben übersprungen werden kann. Wenn die <xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A>-Eigenschaft festgelegt ist, wird ein unsichtbares Bild mit einem alternativen Text gerendert, der dem Benutzer die Möglichkeit gibt, zum Ende des Steuer Elements zu springen. Sprachausgaben lesen den alternativen Text, und das Bild belegt nur einen Pixel Bereich. Legen Sie für die pixelgenaue Steuerung des Renderings der Seite die <xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A>-Eigenschaft auf eine leere Zeichenfolge ("") fest, und stellen Sie einen eigenen Mechanismus bereit, um das Menü zu überspringen. Die <xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A>-Eigenschaft wird standardmäßig auf die leere Zeichenfolge festgelegt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A>-Eigenschaft verwendet wird, um den alternativen Text für ein ausgeblendetes Bild anzugeben, das von Bildschirm Sprachausgaben gelesen wird, damit die Liste der Links übersprungen werden kann.  
  
 [!code-aspx-csharp[MenuSkipLinkText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuSkipLinkText/CS/menuskiplinktextcs.aspx#1)]
 [!code-aspx-vb[MenuSkipLinkText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuSkipLinkText/VB/menuskiplinktextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="StaticBottomSeparatorImageUrl">
      <MemberSignature Language="C#" Value="public string StaticBottomSeparatorImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StaticBottomSeparatorImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticBottomSeparatorImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StaticBottomSeparatorImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StaticBottomSeparatorImageUrl : string with get, set" Usage="System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die URL zu einem Bild ab, das als Trennzeichen am unteren Rand der einzelnen statischen Menüelemente angezeigt wird, oder legt diese URL fest.</summary>
        <value>Die URL zu einem Bild, das als Trennzeichen am unteren Rand jedes einzelnen statischen Menüelements angezeigt wird. Der Standardwert ist eine leere Zeichenfolge (""), die angibt, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl%2A>-Eigenschaft, um ein benutzerdefiniertes Bild anzugeben, das am unteren Rand jedes statischen Menü Elements angezeigt wird, das als Trennzeichen zwischen Menü Elementen fungiert.  
  
> [!NOTE]
>  Als Alternative können Sie auch ein Trennzeichen Bild am oberen Rand jedes statischen Menü Elements anzeigen, indem Sie die <xref:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl%2A>-Eigenschaft festlegen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl%2A>-Eigenschaft verwendet wird, um ein Trennbild anzugeben, das am unteren Rand jedes statischen Menü Elements angezeigt werden soll.  
  
 [!code-aspx-csharp[MenuStaticBottomSeparatorImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticBottomSeparatorImageUrl/CS/menustaticbottomseparatorimageurlcs.aspx#1)]
 [!code-aspx-vb[MenuStaticBottomSeparatorImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticBottomSeparatorImageUrl/VB/menustaticbottomseparatorimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="StaticDisplayLevels">
      <MemberSignature Language="C#" Value="public int StaticDisplayLevels { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 StaticDisplayLevels" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticDisplayLevels" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticDisplayLevels As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int StaticDisplayLevels { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.StaticDisplayLevels : int with get, set" Usage="System.Web.UI.WebControls.Menu.StaticDisplayLevels" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der Menüebenen ab, die in einem statischen Menü angezeigt werden, oder legt diese Anzahl fest.</summary>
        <value>Die Anzahl der Menüebenen, die in einem statischen Menü angezeigt werden. Der Standardwert ist 1.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A>-Eigenschaft, um die Anzahl der Menüebenen anzugeben, die in einem statischen Menü angezeigt werden sollen. Alle Menüebenen unterhalb des angegebenen Werts werden in einem dynamischen Menü angezeigt. Sie können auch die Anzahl der Menüebenen beschränken, die in einem dynamischen Menü angezeigt werden sollen, indem Sie die <xref:System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels%2A>-Eigenschaft festlegen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A>-Eigenschaft verwendet wird, um die ersten beiden Menüebenen im statischen Menü anzuzeigen.  
  
 [!code-aspx-csharp[MenuStaticDisplayLevels#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticDisplayLevels/CS/menustaticdisplaylevelscs.aspx#1)]
 [!code-aspx-vb[MenuStaticDisplayLevels#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticDisplayLevels/VB/menustaticdisplaylevelsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der angegebene Wert ist kleiner als 1.</exception>
        <altmember cref="P:System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels" />
      </Docs>
    </Member>
    <Member MemberName="StaticEnableDefaultPopOutImage">
      <MemberSignature Language="C#" Value="public bool StaticEnableDefaultPopOutImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StaticEnableDefaultPopOutImage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticEnableDefaultPopOutImage As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool StaticEnableDefaultPopOutImage { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.StaticEnableDefaultPopOutImage : bool with get, set" Usage="System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob das integrierte Bild angezeigt wird und damit angibt, dass das statische Menüelement über ein Untermenü verfügt.</summary>
        <value><see langword="true" />, um das integrierte Bild für statische Menüelemente mit Untermenüs anzuzeigen, andernfalls <see langword="false" />. Der Standardwert lautet <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn ein statisches Menü Element ein Untermenü enthält, kann ein Bild angezeigt werden, um anzugeben, dass der Benutzer das Menü erweitern kann. Es gibt zwei Möglichkeiten, dieses Bild anzuzeigen:  
  
-   Legen Sie die <xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A>-Eigenschaft auf `true` fest, um das integrierte Image (Standard) zu verwenden.  
  
-   Legen Sie die <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A>-Eigenschaft auf ein benutzerdefiniertes Image fest.  
  
 Wenn die <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A> -Eigenschaft festgelegt ist, überschreibt das integrierte Bild unabhängig vom Wert für dieses Bild der <xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A> Eigenschaft.  
  
> [!NOTE]
>  Wenn die <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A>-Eigenschaft nicht festgelegt ist und die <xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A>-Eigenschaft auf `false`festgelegt ist, wird kein Bild angezeigt.  
  
 Sie können den alternativen Text für das Bild angeben, indem Sie die <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString%2A>-Eigenschaft festlegen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A> Eigenschaft, um das Bild auszublenden, der angibt, dass ein statisches Menüelement über ein Untermenü verfügt. Die <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A>-Eigenschaft muss auch auf eine leere Zeichenfolge ("") festgelegt werden, damit das Bild ausgeblendet wird.  
  
 [!code-aspx-csharp[MenuStaticEnableDefaultPopOutImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticEnableDefaultPopOutImage/CS/menustaticenabledefaultpopoutimagecs.aspx#1)]
 [!code-aspx-vb[MenuStaticEnableDefaultPopOutImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticEnableDefaultPopOutImage/VB/menustaticenabledefaultpopoutimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="StaticHoverStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style StaticHoverStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style StaticHoverStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StaticHoverStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ StaticHoverStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StaticHoverStyle : System.Web.UI.WebControls.Style" Usage="System.Web.UI.WebControls.Menu.StaticHoverStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf das <see cref="T:System.Web.UI.WebControls.Style" />-Objekt ab, mit dem Sie die Darstellung eines statischen Menüelements, während ein Mauszeiger darauf positioniert ist, festlegen können.</summary>
        <value>Ein Verweis auf <see cref="T:System.Web.UI.WebControls.Style" />, das das Format eines statischen Menüelements darstellt, während der Mauszeiger darauf positioniert ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A>-Eigenschaft, um die Darstellung eines statischen Menü Elements zu steuern, wenn der Mauszeiger darauf positioniert ist. Diese Eigenschaft ist schreibgeschützt. Sie können jedoch die Eigenschaften des <xref:System.Web.UI.WebControls.Style> Objekts festlegen, das zurückgegeben wird. Die Eigenschaften können deklarativ im Formular `Property-Subproperty`festgelegt werden, wobei `Subproperty` eine Eigenschaft des <xref:System.Web.UI.WebControls.Style> Objekts ist (z. b. `StaticHoverStyle-ForeColor`). Die Eigenschaften können auch Programm gesteuert im Formular `Property.Subproperty` festgelegt werden (z. b. `StaticHoverStyle.ForeColor`).  
  
 Stileigenschaften für ein statisches Menü Element werden in der folgenden Reihenfolge angewendet:  
  
1.  [https://login.microsoftonline.com/consumers/](<xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A>).  
  
2.  [https://login.microsoftonline.com/consumers/](<xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A>). Wenn die <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> Auflistung oder <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> Auflistung definiert ist, wird Sie zu diesem Zeitpunkt angewendet, wobei die Eigenschaften des anderen Menü Element Stils außer Kraft gesetzt werden.  
  
3.  [https://login.microsoftonline.com/consumers/](<xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A>). Wenn die <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> Auflistung definiert ist, wird Sie zu diesem Zeitpunkt angewendet, wobei die Eigenschaften des anderen Menü Element Stils außer Kraft gesetzt werden.  
  
4.  [https://login.microsoftonline.com/consumers/](<xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A>).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A>-Eigenschaft verwendet wird, um die Hintergrundfarbe eines statischen Menü Elements in Light Himmel blau zu ändern, wenn der Benutzer den Mauszeiger darüber positioniert.  
  
 [!code-aspx-csharp[MenuStaticHoverStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticHoverStyle/CS/menustatichoverstylecs.aspx#1)]
 [!code-aspx-vb[MenuStaticHoverStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticHoverStyle/VB/menustatichoverstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="StaticItemFormatString">
      <MemberSignature Language="C#" Value="public string StaticItemFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StaticItemFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticItemFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticItemFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StaticItemFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StaticItemFormatString : string with get, set" Usage="System.Web.UI.WebControls.Menu.StaticItemFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft zusätzlichen Text ab, der für alle statisch angezeigten Menüelemente angezeigt wird, oder legt diesen fest.</summary>
        <value>Der zusätzliche Text oder die zusätzlichen Zeichen, der bzw. die für alle Menüelemente angezeigt werden. Der Standardwert für diese Eigenschaft ist "{0}."</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft kann zum Einfügen von Text verwendet werden, um statische Menü Elemente in einem Menü zu formatieren. Dies ist besonders nützlich für mobile Geräte. Das <xref:System.Web.UI.WebControls.Menu>-Steuerelement unterstützt Vorlagen für die Anzeige statischer und dynamischer Menü Elemente, aber Vorlagen werden auf mobilen Geräten ignoriert. Diese Eigenschaft ermöglicht Ihnen das Hinzufügen von Zeichen oder Text und das Anwenden von Formatierungen auf Menü Elemente für Mobile und Desktop Geräte ohne Verwendung einer Vorlage.  
  
> [!NOTE]
>  Wenn Sie diese Eigenschaft verwenden möchten, sollten Sie auch die <xref:System.Web.UI.WebControls.Menu.DynamicItemFormatString%2A>-Eigenschaft festlegen, wenn die Formatierung zwischen den statischen und dynamischen Menü Elementen identisch sein soll.  
  
 Wenn sowohl die Vorlagen Formatierung als auch diese Eigenschaft angewendet werden, wird die Vorlagen Formatierung bei mobilen Geräten ignoriert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die Eigenschaften <xref:System.Web.UI.WebControls.Menu.StaticItemFormatString%2A> und <xref:System.Web.UI.WebControls.Menu.DynamicItemFormatString%2A> verwendet werden, um jedem Menü Element Text hinzuzufügen.  
  
 [!code-aspx-csharp[MenuItemFormatString#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemFormatString/CS/menuitemformatstringcs.aspx#1)]
 [!code-aspx-vb[MenuItemFormatString#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemFormatString/VB/menuitemformatstringvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicItemFormatString" />
      </Docs>
    </Member>
    <Member MemberName="StaticItemTemplate">
      <MemberSignature Language="C#" Value="public System.Web.UI.ITemplate StaticItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate StaticItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ITemplate ^ StaticItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StaticItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.Menu.StaticItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.MenuItemTemplateContainer))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Vorlage mit benutzerdefinierten Inhalten ab, die für ein statisches Menü gerendert werden sollen, oder legt diese fest.</summary>
        <value>Eine <see cref="T:System.Web.UI.ITemplate" />, die benutzerdefinierte Inhalte für ein statisches Menü enthält. Der Standardwert ist null (0). Dies bedeutet, dass diese Eigenschaft nicht festgelegt wurde.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Anstatt das integrierte Rendering für ein statisches Menü zu verwenden, können Sie eine eigene Benutzeroberfläche (User Interface, UI) für ein statisches Menü Element definieren, indem Sie die <xref:System.Web.UI.WebControls.Menu.StaticItemTemplate%2A>-Eigenschaft verwenden. Um eine benutzerdefinierte Vorlage für ein statisches Menü Element anzugeben, platzieren Sie zunächst `<StaticTemplate>` Tags zwischen den öffnenden und schließenden Tags des <xref:System.Web.UI.WebControls.Menu> Steuer Elements. Anschließend können Sie den Inhalt der Vorlage zwischen dem öffnenden und dem schließenden `<StaticTemplate>` Tags auflisten. Sie können den Stil eines statischen Menüs weiter steuern, indem Sie die <xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A>-Eigenschaft verwenden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StaticMenuItemStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemStyle StaticMenuItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemStyle StaticMenuItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StaticMenuItemStyle As MenuItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItemStyle ^ StaticMenuItemStyle { System::Web::UI::WebControls::MenuItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StaticMenuItemStyle : System.Web.UI.WebControls.MenuItemStyle" Usage="System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf das <see cref="T:System.Web.UI.WebControls.MenuItemStyle" />-Objekt ab, mit dem Sie die Darstellung der Menüelemente in einem statischen Menü festlegen können.</summary>
        <value>Ein Verweis auf den <see cref="T:System.Web.UI.WebControls.MenuItemStyle" />, der das Format der Menüelemente in einem statischen Menü darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A>-Eigenschaft, um die Darstellung der Menü Elemente in einem statischen Menü zu steuern. Diese Eigenschaft ist schreibgeschützt. Sie können jedoch die Eigenschaften des <xref:System.Web.UI.WebControls.MenuItemStyle> Objekts festlegen, das zurückgegeben wird. Die Eigenschaften können deklarativ im Formular `Property-Subproperty`festgelegt werden, wobei `Subproperty` eine Eigenschaft des <xref:System.Web.UI.WebControls.MenuItemStyle> Objekts ist (z. b. `StaticMenuItemStyle-ForeColor`). Die Eigenschaften können auch Programm gesteuert im Formular `Property.Subproperty` festgelegt werden (z. b. `StaticMenuItemStyle.ForeColor`).  
  
 Stileigenschaften für ein statisches Menü Element werden in der folgenden Reihenfolge angewendet:  
  
1.  [https://login.microsoftonline.com/consumers/](<xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A>).  
  
2.  [https://login.microsoftonline.com/consumers/](<xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A>). Wenn die <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> Auflistung oder <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> Auflistung definiert ist, wird Sie zu diesem Zeitpunkt angewendet, wobei die Eigenschaften des anderen Menü Element Stils außer Kraft gesetzt werden.  
  
3.  [https://login.microsoftonline.com/consumers/](<xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A>). Wenn die <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> Auflistung definiert ist, wird Sie zu diesem Zeitpunkt angewendet, wobei die Eigenschaften des anderen Menü Element Stils außer Kraft gesetzt werden.  
  
4.  [https://login.microsoftonline.com/consumers/](<xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A>).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie mit der <xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A>-Eigenschaft eine helle himmelblaue Hintergrundfarbe für die Menü Elemente in einem statischen Menü angegeben wird.  
  
 [!code-aspx-csharp[MenuStaticMenuItemStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticMenuItemStyle/CS/menustaticmenuitemstylecs.aspx#1)]
 [!code-aspx-vb[MenuStaticMenuItemStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticMenuItemStyle/VB/menustaticmenuitemstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="StaticMenuStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SubMenuStyle StaticMenuStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.SubMenuStyle StaticMenuStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StaticMenuStyle As SubMenuStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SubMenuStyle ^ StaticMenuStyle { System::Web::UI::WebControls::SubMenuStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StaticMenuStyle : System.Web.UI.WebControls.SubMenuStyle" Usage="System.Web.UI.WebControls.Menu.StaticMenuStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SubMenuStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf das <see cref="T:System.Web.UI.WebControls.MenuItemStyle" />-Objekt ab, mit dem Sie die Darstellung eines statischen Menüs festlegen können.</summary>
        <value>Ein Verweis auf <see cref="T:System.Web.UI.WebControls.MenuItemStyle" />, das das Format eines statischen Menüs darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A>-Eigenschaft, um die Darstellung eines statischen Menüs zu steuern. Diese Eigenschaft ist schreibgeschützt. Sie können jedoch die Eigenschaften des <xref:System.Web.UI.WebControls.MenuItemStyle> Objekts festlegen, das zurückgegeben wird. Die Eigenschaften können deklarativ im Formular `Property-Subproperty`festgelegt werden, wobei `Subproperty` eine Eigenschaft des <xref:System.Web.UI.WebControls.MenuItemStyle> Objekts ist (z. b. `StaticMenuStyle-ForeColor`). Die Eigenschaften können auch Programm gesteuert im Formular `Property.Subproperty` festgelegt werden (z. b. `StaticMenuStyle.ForeColor`).  
  
 Stileigenschaften für ein statisches Menü Element werden in der folgenden Reihenfolge angewendet:  
  
1.  [https://login.microsoftonline.com/consumers/](<xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A>).  
  
2.  [https://login.microsoftonline.com/consumers/](<xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A>). Wenn die <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> Auflistung oder <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> Auflistung definiert ist, wird Sie zu diesem Zeitpunkt angewendet, wobei die Eigenschaften des anderen Menü Element Stils außer Kraft gesetzt werden.  
  
3.  [https://login.microsoftonline.com/consumers/](<xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A>). Wenn die <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> Auflistung definiert ist, wird Sie zu diesem Zeitpunkt angewendet, wobei die Eigenschaften des anderen Menü Element Stils außer Kraft gesetzt werden.  
  
4.  [https://login.microsoftonline.com/consumers/](<xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A>).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie mit der <xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A>-Eigenschaft eine helle himmelblaue Hintergrundfarbe für das gesamte statische Menü angegeben wird.  
  
 [!code-aspx-csharp[MenuStaticMenuStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticMenuStyle/CS/menustaticmenustylecs.aspx#1)]
 [!code-aspx-vb[MenuStaticMenuStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticMenuStyle/VB/menustaticmenustylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="StaticPopOutImageTextFormatString">
      <MemberSignature Language="C#" Value="public string StaticPopOutImageTextFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StaticPopOutImageTextFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticPopOutImageTextFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StaticPopOutImageTextFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StaticPopOutImageTextFormatString : string with get, set" Usage="System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den alternativen Text für das Popoutbild ab, das angibt, dass ein statisches Menüelement über ein Untermenü verfügt, oder legt diesen Text fest.</summary>
        <value>Der alternative Text für das Popoutbild. Der Standardwert ist eine leere Zeichenfolge ("") und gibt an, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn ein statisches Menü Element ein Untermenü enthält, kann ein Bild angezeigt werden, um anzugeben, dass der Benutzer das Menü erweitern kann. Verwenden Sie die <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString%2A>-Eigenschaft, um den alternativen Text für dieses Bild anzugeben.  
  
 Es gibt zwei Möglichkeiten, das Bild anzuzeigen:  
  
-   Legen Sie die <xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A>-Eigenschaft auf `true` fest, um das integrierte Image (Standard) zu verwenden.  
  
-   Legen Sie die <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A>-Eigenschaft auf ein benutzerdefiniertes Image fest.  
  
> [!NOTE]
>  Diese Eigenschaft gilt sowohl für das integrierte Image als auch für das benutzerdefinierte Image.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString%2A>-Eigenschaft verwendet wird, um den alternativen Text für das Bild anzugeben, mit dem angegeben wird, dass ein statisches Menü Element über ein Untermenü verfügt. Dieser Text wird als QuickInfo angezeigt, wenn der Benutzer den Mauszeiger über dem Bild positioniert.  
  
 [!code-aspx-csharp[MenuStaticPopoutImageText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticPopoutImageText/CS/menustaticpopoutimagetextcs.aspx#1)]
 [!code-aspx-vb[MenuStaticPopoutImageText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticPopoutImageText/VB/menustaticpopoutimagetextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="StaticPopOutImageUrl">
      <MemberSignature Language="C#" Value="public string StaticPopOutImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StaticPopOutImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticPopOutImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StaticPopOutImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StaticPopOutImageUrl : string with get, set" Usage="System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die URL zu einem Bild ab, das angezeigt wird und angibt, dass ein statisches Menüelement über ein Untermenü verfügt, oder legt diese URL zu einem Bild fest.</summary>
        <value>Die URL zu einem Bild, das angezeigt wird und angibt, dass ein statisches Menüelement über ein Untermenü verfügt. Der Standardwert ist eine leere Zeichenfolge (""), die angibt, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn ein statisches Menü Element ein Untermenü enthält, kann ein Bild angezeigt werden, um anzugeben, dass der Benutzer das Menü erweitern kann. Es gibt zwei Möglichkeiten, dieses Bild anzuzeigen:  
  
-   Legen Sie die <xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A>-Eigenschaft auf `true` fest, um das integrierte Image (Standard) zu verwenden.  
  
-   Legen Sie die <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A>-Eigenschaft auf ein benutzerdefiniertes Image fest.  
  
 Wenn die <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A> -Eigenschaft festgelegt ist, überschreibt das integrierte Bild unabhängig vom Wert für dieses Bild der <xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A> Eigenschaft.  
  
 Wenn die <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A>-Eigenschaft nicht festgelegt ist und die <xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A>-Eigenschaft auf `false`festgelegt ist, wird kein Bild angezeigt.  
  
> [!NOTE]
>  Wenn Sie diese Eigenschaft festlegen, verwenden Sie einen Schrägstrich (/) anstelle eines umgekehrten Schrägstrichs (\\). Wenn Sie umgekehrte Schrägstriche im Pfad verwenden, wird das angegebene Bild nicht angezeigt.  
  
 Sie können den alternativen Text für das Bild angeben, indem Sie die <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString%2A>-Eigenschaft festlegen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A>-Eigenschaft verwendet wird, um ein benutzerdefiniertes Bild anzugeben, das in einem statischen Menü Element angezeigt werden soll, wenn das Menü Element über ein Untermenü verfügt.  
  
 [!code-aspx-csharp[MenuStaticPopoutImageText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticPopoutImageText/CS/menustaticpopoutimagetextcs.aspx#1)]
 [!code-aspx-vb[MenuStaticPopoutImageText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticPopoutImageText/VB/menustaticpopoutimagetextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="StaticSelectedStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemStyle StaticSelectedStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemStyle StaticSelectedStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StaticSelectedStyle As MenuItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItemStyle ^ StaticSelectedStyle { System::Web::UI::WebControls::MenuItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StaticSelectedStyle : System.Web.UI.WebControls.MenuItemStyle" Usage="System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf das <see cref="T:System.Web.UI.WebControls.MenuItemStyle" />-Objekt ab, mit dem Sie die Darstellung des vom Benutzer in einem statischen Menü ausgewählten Menüelements festlegen können.</summary>
        <value>Ein Verweis auf den <see cref="T:System.Web.UI.WebControls.MenuItemStyle" />, der das Format des ausgewählten Menüelements in einem statischen Menü darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A>-Eigenschaft, um die Darstellung des vom Benutzer ausgewählten Menü Elements in einem statischen Menü zu steuern. Diese Eigenschaft ist schreibgeschützt. Sie können jedoch die Eigenschaften des <xref:System.Web.UI.WebControls.MenuItemStyle> Objekts festlegen, das zurückgegeben wird. Die Eigenschaften können deklarativ im Formular `Property-Subproperty`festgelegt werden, wobei `Subproperty` eine Eigenschaft des <xref:System.Web.UI.WebControls.MenuItemStyle> Objekts ist (z. b. `StaticSelectedStyle-ForeColor`). Die Eigenschaften können auch Programm gesteuert im Formular `Property.Subproperty` festgelegt werden (z. b. `StaticSelectedStyle.ForeColor`).  
  
 Stileigenschaften für ein statisches Menü Element werden in der folgenden Reihenfolge angewendet:  
  
1.  [https://login.microsoftonline.com/consumers/](<xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A>).  
  
2.  [https://login.microsoftonline.com/consumers/](<xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A>). Wenn die <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> Auflistung oder <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> Auflistung definiert ist, wird Sie zu diesem Zeitpunkt angewendet, wobei die Eigenschaften des anderen Menü Element Stils außer Kraft gesetzt werden.  
  
3.  [https://login.microsoftonline.com/consumers/](<xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A>). Wenn die <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> Auflistung definiert ist, wird Sie zu diesem Zeitpunkt angewendet, wobei die Eigenschaften des anderen Menü Element Stils außer Kraft gesetzt werden.  
  
4.  [https://login.microsoftonline.com/consumers/](<xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A>).  
  
> [!IMPORTANT]
>  Grundlegende Änderung unten.  
  
 Vor .NET Framework 4,0 können Benutzer beim Definieren eines `<asp:Menu>` Steuer Elements in der ASPX-Datei die `StaticSelectedStyle-CssClass`-Eigenschaft festlegen, um die CSS-Klasse des ausgewählten Steuer Elements festzulegen. Der Benutzer kann z. b. über ein Menü Steuerelement verfügen, wie unten gezeigt:  
  
```  
<asp:Menu ID="Menu1" runat="server" Orientation="Horizontal"   
    StaticMenuItemStyle-CssClass="MenuItem"  
    StaticSelectedStyle-CssClass="MenuItem_selected"  
    OnMenuItemClick="Menu1_MenuItemClick" Style="margin-bottom: 0px" EnableTheming="True" ClientIDMode="Static">  
    <Items>  
        <asp:MenuItem Text="item_0" Value="0" Selected="True"></asp:MenuItem>  
        <asp:MenuItem Text="itme_1" Value="1"></asp:MenuItem>  
    </Items>  
</asp:Menu>  
```  
  
 Das Menü Steuerelement wird wie folgt gerendert:  
  
```  
<div id="Menu1" style="margin-bottom: 0px">  
    <ul class="level1">  
        <li><a class="level1 MenuItem MenuItem_selected " href="#" onclick="__doPostBack(&#39;Menu1&#39;,&#39;0&#39;)">item_0</a></li>  
        <li><a class="level1 MenuItem" href="#" onclick="__doPostBack(&#39;Menu1&#39;,&#39;1&#39;)">itme_1</a></li>  
    </ul>  
</div>  
```  
  
 In .NET Framework 4,0 und höher wird das ausgewählte Menü Element jedoch immer auf die `selected` CSS-Klasse festgelegt, anstatt auf die durch `StaticSelectedStyle-CssClass`angegebene Klasse. Daher wird der obige ASP.NET-Code stattdessen wie folgt gerendert:  
  
```  
<div id="Menu1" style="margin-bottom: 0px">  
    <ul class="level1">  
        <li><a class="level1 MenuItem selected " href="#" onclick="__doPostBack(&#39;Menu1&#39;,&#39;0&#39;)">item_0</a></li>  
        <li><a class="level1 MenuItem" href="#" onclick="__doPostBack(&#39;Menu1&#39;,&#39;1&#39;)">itme_1</a></li>  
    </ul>  
</div>  
  
```  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie mit der <xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A>-Eigenschaft eine helle blaue Hintergrundfarbe für das ausgewählte statische Menü Element angegeben wird.  
  
 [!code-aspx-csharp[MenuStaticSelectedStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticSelectedStyle/CS/menustaticselectedstylecs.aspx#1)]
 [!code-aspx-vb[MenuStaticSelectedStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticSelectedStyle/VB/menustaticselectedstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
      </Docs>
    </Member>
    <Member MemberName="StaticSubMenuIndent">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Unit StaticSubMenuIndent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit StaticSubMenuIndent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticSubMenuIndent" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticSubMenuIndent As Unit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Unit StaticSubMenuIndent { System::Web::UI::WebControls::Unit get(); void set(System::Web::UI::WebControls::Unit value); };" />
      <MemberSignature Language="F#" Value="member this.StaticSubMenuIndent : System.Web.UI.WebControls.Unit with get, set" Usage="System.Web.UI.WebControls.Menu.StaticSubMenuIndent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.WebControls.Unit), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.WebControls.Unit), "16px")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Abstand (in Pixel) für den Einzug der Untermenüs in einem statischen Menü ab oder legt diesen Abstand fest.</summary>
        <value>Eine <see cref="T:System.Web.UI.WebControls.Unit" />, die den Abstand (in Pixel) darstellt, mit dem der Einzug der Untermenüs in einem statischen Menü erfolgen soll. Die Standardeinstellung ist 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn im statischen Menü mehr als eine Menü Ebene angezeigt wird (wenn die <xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A>-Eigenschaft auf einen höheren Wert als 1 festgelegt ist), geben Sie mit der <xref:System.Web.UI.WebControls.Menu.StaticSubMenuIndent%2A>-Eigenschaft die Anzahl der Pixel an, um die die unter Menü Elemente im statischen Menü einziehen werden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie die <xref:System.Web.UI.WebControls.Menu.StaticSubMenuIndent%2A>-Eigenschaft verwenden, um die unter Menü Elemente in einem statischen Menü um 10 Pixel aufzurufenden.  
  
 [!code-aspx-csharp[MenuStaticSubMenuIndent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticSubMenuIndent/CS/menustaticsubmenuindentcs.aspx#1)]
 [!code-aspx-vb[MenuStaticSubMenuIndent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticSubMenuIndent/VB/menustaticsubmenuindentvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der Wert der ausgewählten <see cref="T:System.Web.UI.WebControls.Unit" /> ist kleiner als 0 (null).</exception>
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticDisplayLevels" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHorizontalOffset" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicVerticalOffset" />
      </Docs>
    </Member>
    <Member MemberName="StaticTopSeparatorImageUrl">
      <MemberSignature Language="C#" Value="public string StaticTopSeparatorImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StaticTopSeparatorImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticTopSeparatorImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StaticTopSeparatorImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StaticTopSeparatorImageUrl : string with get, set" Usage="System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die URL zu einem Bild ab, das als Trennzeichen am oberen Rand der einzelnen statischen Menüelemente angezeigt wird, oder legt diese URL fest.</summary>
        <value>Die URL zu einem Bild, das als Trennzeichen am oberen Rand jedes einzelnen statischen Menüelements angezeigt wird. Der Standardwert ist eine leere Zeichenfolge (""), die angibt, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl%2A>-Eigenschaft, um ein benutzerdefiniertes Bild anzugeben, das am oberen Rand jedes statischen Menü Elements angezeigt wird, das als Trennzeichen zwischen Menü Elementen fungiert.  
  
> [!NOTE]
>  Als Alternative können Sie auch ein Trennzeichen Bild unten in jedem statischen Menü Element anzeigen, indem Sie die <xref:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl%2A>-Eigenschaft festlegen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl%2A>-Eigenschaft verwendet wird, um ein Trennbild anzugeben, das am oberen Rand jedes statischen Menü Elements angezeigt werden soll.  
  
 [!code-aspx-csharp[MenuStaticTopSeparatorImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticTopSeparatorImageUrl/CS/menustatictopseparatorimageurlcs.aspx#1)]
 [!code-aspx-vb[MenuStaticTopSeparatorImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticTopSeparatorImageUrl/VB/menustatictopseparatorimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostBackEvent (eventArgument As String) Implements IPostBackEventHandler.RaisePostBackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System::String ^ eventArgument) = System::Web::UI::IPostBackEventHandler::RaisePostBackEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Ein <see cref="T:System.String" />, der das an den Ereignishandler übergebene Ereignisargument darstellt.</param>
        <summary>Verarbeitet ein Ereignis, das beim Senden eines Formulars an den Server ausgelöst wird.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); };" />
      <MemberSignature Language="F#" Value="member this.TagKey : System.Web.UI.HtmlTextWriterTag" Usage="System.Web.UI.WebControls.Menu.TagKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den <see cref="T:System.Web.UI.HtmlTextWriterTag" />-Wert ab, der einem <see cref="T:System.Web.UI.WebControls.Menu" />-Steuerelement entspricht. Diese Eigenschaft wird hauptsächlich von Steuerelemententwicklern verwendet.</summary>
        <value>Gibt immer <see langword="HtmlTextWriterTag.Table" /> zurück.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.Web.UI.WebControls.Menu.TagKey%2A>-Eigenschaft, um den <xref:System.Web.UI.HtmlTextWriterTag> Wert zu bestimmen, der einem <xref:System.Web.UI.WebControls.Menu>-Steuerelement zugeordnet ist. Diese Eigenschaft wird hauptsächlich von Steuerelemententwicklern verwendet.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public string Target { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Target" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.Target" />
      <MemberSignature Language="VB.NET" Value="Public Property Target As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Target { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Target : string with get, set" Usage="System.Web.UI.WebControls.Menu.Target" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Zielfenster oder den Zielframe ab, in dem die einem Menüeelement zugeordneten Webseiteninhalte angezeigt werden sollen, oder legt dieses Zielfenster bzw. den Zielframe fest.</summary>
        <value>Das Zielfenster oder der Zielframe, in dem der verknüpfte Webseiteninhalt angezeigt werden soll. Der Standardwert ist eine leere Zeichenfolge (""), die das Fenster oder den Frame mit dem Fokus aktualisiert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.Web.UI.WebControls.Menu.Target%2A>-Eigenschaft, um das Fenster oder den Frame anzugeben, in dem der mit einem Menü Element verknüpfte Webinhalt angezeigt werden soll, wenn auf dieses Menü Element geklickt wird. Werte müssen mit einem Buchstaben aus dem Bereich von A bis Z (ohne Berücksichtigung der Groß- und Kleinschreibung) beginnen, mit Ausnahme der in folgender Tabelle aufgeführten speziellen Werte, die mit einem Unterstrich beginnen:  
  
|Zielwert|BESCHREIBUNG|  
|------------------|-----------------|  
|`_blank`|Stellt den Inhalt in einem neuen Fenster ohne Frames dar.|  
|`_parent`|Stellt den Inhalt im unmittelbar übergeordneten Frameset dar.|  
|`_search`|Gibt den Inhalt im Suchbereich wieder.|  
|`_self`|Stellt den Inhalt in dem Frame dar, der den Fokus besitzt.|  
|`_top`|Stellt den Inhalt im gesamten Fenster ohne Frames dar.|  
  
> [!NOTE]
>  Sie können der Browserdokumentation entnehmen, ob der `_search`-Wert unterstützt wird.  Beispielsweise unterstützen Internet Explorer, Version 5,0 und höher, den `_search` Zielwert.  
  
 Diese Eigenschaft gilt für alle Menü Elemente in einem <xref:System.Web.UI.WebControls.Menu>-Steuerelement. Sie können diese Eigenschaft selektiv überschreiben, indem Sie die <xref:System.Web.UI.WebControls.MenuItem.Target%2A>-Eigenschaft jedes <xref:System.Web.UI.WebControls.MenuItem>-Objekts direkt festlegen.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.MenuItem.Target%2A>-Eigenschaft wird als Ziel Attribut gerendert. Das target-Attribut für Anker Elemente ist in der XHTML 1,1 Strict-Dokumenttyp Definition nicht zulässig. Wenn die gerenderte Ausgabe XHTML-oder Barrierefreiheits Standards entsprechen muss, legen Sie die <xref:System.Web.UI.WebControls.MenuItem.Target%2A>-Eigenschaft nicht fest. Weitere Informationen finden Sie unter [XHTML-Standards in Visual Studio und ASP.net](https://msdn.microsoft.com/library/1b78d416-66bb-43a5-ac77-c703aab55b97) und [Barrierefreiheit in Visual Studio und ASP.net](https://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Menu.Target%2A>-Eigenschaft verwendet wird, um anzugeben, dass der mit den einzelnen Menü Elementen verknüpfte Inhalt in einem neuen Fenster angezeigt werden soll, wenn der Benutzer auf das Menü Element klickt.  
  
 [!code-aspx-csharp[MenuTarget#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuTarget/CS/menutargetcs.aspx#1)]
 [!code-aspx-vb[MenuTarget#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuTarget/VB/menutargetvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Target" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="menu.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Verfolgt die am Ansichtszustand des <see cref="T:System.Web.UI.WebControls.Menu" />-Steuerelements vorgenommenen Änderungen und speichert diese im <see cref="T:System.Web.UI.StateBag" />-Objekt des Steuerelements. Auf dieses Objekt kann über die <see cref="P:System.Web.UI.Control.ViewState" />-Eigenschaft zugegriffen werden.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="P:System.Web.UI.Control.ViewState" />
      </Docs>
    </Member>
  </Members>
</Type>
