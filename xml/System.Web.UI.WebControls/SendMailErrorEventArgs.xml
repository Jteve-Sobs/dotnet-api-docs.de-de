<Type Name="SendMailErrorEventArgs" FullName="System.Web.UI.WebControls.SendMailErrorEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5b95d733979ca76b58f05f12a7c42688215d4e83" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46676740" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SendMailErrorEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SendMailErrorEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.SendMailErrorEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class SendMailErrorEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class SendMailErrorEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type SendMailErrorEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt Daten für das <see langword="SendMailError" />-Ereignis von Steuerelementen wie <see cref="T:System.Web.UI.WebControls.ChangePassword" />, <see cref="T:System.Web.UI.WebControls.CreateUserWizard" /> und <see cref="T:System.Web.UI.WebControls.PasswordRecovery" /> bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> Objekt enthält eine Fehlermeldung angezeigt, die vom SMTP-Mail-Anbieter ausgelöst wird, wenn eine e-Mail-Nachricht kann, durch gesendet werden die <xref:System.Web.UI.WebControls.ChangePassword> -Steuerelement oder das <xref:System.Web.UI.WebControls.CreateUserWizard> Steuerelement. In diesem Fall die <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> Objekt gesendet wird, um die <xref:System.Web.UI.WebControls.SendMailErrorEventHandler>.  
  
 Erstellen Sie eine <xref:System.Web.UI.WebControls.SendMailErrorEventHandler> Delegat zum Behandeln des Ereignisses. Behandeln des Ereignisses kann Ihre Web-Anwendung weiterhin ausgeführt, obwohl eine Ausnahme aufgetreten ist. Dies ist nützlich, wenn es nicht wichtig, eine e-Mail-Nachricht zu senden. Beispielsweise, wenn die Ausnahme tritt auf, wenn ein Benutzer über einen Assistenten mit mehreren Schritten arbeitet, kann es vorteilhaft sein, der Fehler wird protokolliert, für den Benutzer eine informationsmeldung angezeigt und ermöglicht dem Benutzer, um den Assistenten abzuschließen.  
  
 Überprüfen Sie die <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Exception%2A> Eigenschaft, um die eigentliche Ursache der Ausnahme zu bestimmen. Die häufigste Ursache für die Ausnahme ist ein Fehler bei der Konfiguration in der [ &lt;smtp&gt; -Element (Netzwerkeinstellungen)](~/docs/framework/configure-apps/file-schema/network/smtp-element-network-settings.md) der Konfigurationsdatei des Computers. Obwohl ein Fehler wie dies wird in der Regel während der Entwicklung gefunden und Debuggen einer Anwendung, e-Mail-Server können fehlschlagen, unerwartet in einer produktionsumgebung, und müssen Sie bestimmen, ob die gesamte Anwendung in diesem Fall fehlschlagen soll. Wenn dies nicht der Fall ist, Behandeln des Ereignisses kann Ihre Anwendung aus, um den Vorgang fortzusetzen.  
  
 Sie müssen festlegen, die <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> Eigenschaft `true` zu signalisieren, dass die Ausnahme wurde, andernfalls behandelt, die die Ausnahme erneut ausgelöst wird, und der ursprüngliche Aufrufliste und Fehlermeldung Anrufnachricht enthält.  
  
 Wenn Sie einen Ereignishandler für keine erstellen die <xref:System.Web.UI.WebControls.ChangePassword.SendMailError> Ereignis oder bei der Erstellung eines ereignishandlers, aber lassen die <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> -Eigenschaft auf festgelegt `false`, Ihre Webanwendung nicht mehr ausgeführt werden, wenn ein Fehler, beim Senden einer e-Mail-Nachricht auftritt und wird von ASP.NET Zeigt eine Fehlermeldung an.  
  
 Die <xref:System.Web.UI.WebControls.ChangePassword.OnSendMailError%2A> Methode ermöglicht auch die abgeleiteten Klassen, die Behandlung des Ereignisses, anstatt diese zu erledigende durch die <xref:System.Web.UI.WebControls.SendMailErrorEventHandler>. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in eine abgeleitete Klasse, von <xref:System.Web.UI.WebControls.ChangePassword> oder <xref:System.Web.UI.WebControls.CreateUserWizard>.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [Server Event Handling in ASP.NET Web Forms-Seiten](http://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, eine ASP.NET-Seite, verwendet eine <xref:System.Web.UI.WebControls.ChangePassword> Webserver-Steuerelement, und enthält einen Ereignishandler für die <xref:System.Web.UI.WebControls.ChangePassword.SendMailError> Ereignis mit dem Namen SendMailError. Im Codebeispiel wird vorausgesetzt, die ASP.NET-Website konfiguriert wurde. zum Verwenden von ASP.NET-Mitgliedschaft und Formularauthentifizierung und dass ein Benutzer erstellt wurde, dessen Name und Kennwort Sie bekannt sind. Weitere Informationen finden Sie unter [Vorgehensweise: Implementieren Simple Forms Authentication](http://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e).  
  
 Wenn die kennwortänderung erfolgreich ist, den Code in die `SendingMail` Ereignishandler versucht wird, senden Sie eine e-Mail-Nachricht an den Benutzer aus, um die Änderung zu bestätigen. SMTP muss bereits konfiguriert sein, auf dem Server in der Reihenfolge für dieses Codebeispiel funktioniert. Informationen zum Konfigurieren eines SMTP-Servers finden Sie unter [NIB: Vorgehensweise: Installieren und Konfigurieren von SMTP-Server in IIS 6.0](http://msdn.microsoft.com/library/ed204b58-24af-47d0-9687-60e5df5f17f8). Für die Zwecke dieses Beispiels ist es nicht erforderlich, einen SMTP-Server zu konfigurieren. Im Beispiel wird erstellt, um einen Fehler beim Senden einer e-Mail-Nachricht zu testen.  
  
 Wenn ein e-Mail-Server ist nicht ordnungsgemäß konfiguriert oder ein anderer Fehler tritt auf, und die e-Mail-Nachricht nicht gesendet werden, die `SendMailError` -Funktion aufgerufen wird. Der Benutzer wird eine Meldung angezeigt. Darüber hinaus wird ein Ereignis in der Windows-Anwendungsereignisprotokoll unter der Annahme protokolliert, eine Ereignisquelle, die mit dem Namen MySamplesSite ist bereits vorhanden ist. Finden Sie im Codebeispiel unten, um die angegebene Ereignisquelle zu erstellen. Weitere Informationen zum Erstellen einer Ereignisquelle finden Sie unter [Server Event Handling in ASP.NET Web Forms-Seiten](http://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9). Die <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> Eigenschaft der <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> Objekt nastaven NA hodnotu `true` , um anzugeben, dass der Fehler verarbeitet wurde.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 Verwenden Sie im folgenden Codebeispiel wird, wenn Sie programmgesteuert die Ereignisquelle, die mit der Bezeichnung MySamplesSite Ereignisprotokoll der Anwendung hinzufügen möchten. Diese Ereignisquelle verwendet wurden, muss in der Reihenfolge für das erste Codebeispiel ordnungsgemäß funktioniert vorhanden sein. Im folgenden Codebeispiel sind Administratorrechte erforderlich.  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Beim Überschreiben von <see cref="M:System.Web.UI.WebControls.ChangePassword.OnSendMailError(System.Web.UI.WebControls.SendMailErrorEventArgs)" /> werden Sie in einer abgeleiteten Klasse rufen die <see cref="M:System.Web.UI.WebControls.ChangePassword.OnSendMailError(System.Web.UI.WebControls.SendMailErrorEventArgs)" /> -Methode der Basisklasse, um registrierte Delegaten das Ereignis empfangen können.</para>
    </block>
    <altmember cref="E:System.Web.UI.WebControls.CreateUserWizard.SendMailError" />
    <altmember cref="E:System.Web.UI.WebControls.ChangePassword.SendMailError" />
    <altmember cref="E:System.Web.UI.WebControls.PasswordRecovery.SendMailError" />
    <altmember cref="T:System.Net.Mail.MailMessage" />
    <related type="Article" href="http://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9">Serverereignisbehandlung in ASP.NET Web Pages</related>
    <related type="Article" href="http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f">Behandeln und Auslösen von Ereignissen</related>
    <related type="Article" href="http://msdn.microsoft.com/library/448f7802-0aa8-4304-abf7-82e138877dc8">Registerkarte "Anwendung" Web Site Administration-Tools</related>
    <related type="Article" href="http://msdn.microsoft.com/library/d85075bc-9c1a-4453-8a0c-539b10853c9c">Sichern die Steuerelemente für die Anmeldung</related>
    <related type="Article" href="http://msdn.microsoft.com/library/3eeeee9e-b09f-4c7f-8ce5-d9ca1f9322ad">Grundlegende Sicherheitsmaßnahmen für Webanwendungen</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SendMailErrorEventArgs (Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SendMailErrorEventArgs.#ctor(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (e As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SendMailErrorEventArgs(Exception ^ e);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.SendMailErrorEventArgs : Exception -&gt; System.Web.UI.WebControls.SendMailErrorEventArgs" Usage="new System.Web.UI.WebControls.SendMailErrorEventArgs e" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Exception" />-Objekt, das die Ausnahme enthält.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.SendMailErrorEventArgs" />-Klasse.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Web.UI.WebControls.CreateUserWizard.SendMailError" />
        <altmember cref="E:System.Web.UI.WebControls.ChangePassword.SendMailError" />
        <altmember cref="E:System.Web.UI.WebControls.PasswordRecovery.SendMailError" />
        <altmember cref="T:System.Net.Mail.MailMessage" />
        <related type="Article" href="http://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9">Serverereignisbehandlung in ASP.NET Web Pages</related>
        <related type="Article" href="http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f">Behandeln und Auslösen von Ereignissen</related>
        <related type="Article" href="http://msdn.microsoft.com/library/448f7802-0aa8-4304-abf7-82e138877dc8">Registerkarte "Anwendung" Web Site Administration-Tools</related>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SendMailErrorEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); void set(Exception ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception with get, set" Usage="System.Web.UI.WebControls.SendMailErrorEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt die Ausnahme zurück, die vom SMTP-Maildienst ausgelöst wird, wenn eine E-Mail nicht gesendet werden kann.</summary>
        <value>Ein <see cref="T:System.Exception" />-Objekt, das die Ausnahme enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Exception%2A> Eigenschaft enthält die Ausnahme, die vom SMTP-Mail-Anbieter ausgelöst wird, wenn eine e-Mail-Nachricht kann, durch gesendet werden die <xref:System.Web.UI.WebControls.ChangePassword> Steuerelement oder das <xref:System.Web.UI.WebControls.CreateUserWizard>. Die häufigste Ursache für diese Ausnahme ist ein Fehler bei der Konfiguration in der [ &lt;smtp&gt; -Element (Netzwerkeinstellungen)](~/docs/framework/configure-apps/file-schema/network/smtp-element-network-settings.md) der Konfigurationsdatei des Computers, der erzeugt die folgende Ausnahme angezeigt: `The transport failed to connect to the server.`  
  
 Ausnahmen werden nicht ausgelöst, wenn es in der e-Mail-Nachricht liegt ein Fehler beim Einbetten einer Datei mit <xref:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects%2A>. Stattdessen wird die eingebettete Datei unterbrochen, wenn die e-Mail-Nachricht angezeigt wird.  
  
 Müssen Sie festlegen, die <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> -Objekt, übergeben als die `e` Parameter <xref:System.Web.UI.WebControls.SendMailErrorEventArgs>zu `true` zu signalisieren, dass die Ausnahme wurde, andernfalls behandelt, die Ausnahme erneut ausgelöst wird und der ursprüngliche Aufrufliste und Fehlermeldung Anrufnachricht enthält.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, eine ASP.NET-Seite, verwendet eine <xref:System.Web.UI.WebControls.ChangePassword> Webserver-Steuerelement, und enthält einen Ereignishandler für die <xref:System.Web.UI.WebControls.ChangePassword.SendMailError> Ereignis mit dem Namen `SendMailError`. Im Codebeispiel wird vorausgesetzt, die ASP.NET-Website konfiguriert wurde. zum Verwenden von ASP.NET-Mitgliedschaft und Formularauthentifizierung und dass ein Benutzer erstellt wurde, dessen Name und Kennwort Sie bekannt sind. Weitere Informationen finden Sie unter [Vorgehensweise: Implementieren Simple Forms Authentication](http://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e).  
  
 Wenn die kennwortänderung erfolgreich ist, den Code in die `SendingMail` Ereignishandler versucht wird, senden Sie eine e-Mail-Nachricht an den Benutzer aus, um die Änderung zu bestätigen. SMTP muss bereits konfiguriert sein, auf dem Server in der Reihenfolge für dieses Codebeispiel funktioniert. Informationen zum Konfigurieren eines SMTP-Servers finden Sie unter [NIB: Vorgehensweise: Installieren und Konfigurieren von SMTP-Server in IIS 6.0](http://msdn.microsoft.com/library/ed204b58-24af-47d0-9687-60e5df5f17f8). Für die Zwecke dieses Beispiels ist es nicht erforderlich, einen SMTP-Server zu konfigurieren. Im Beispiel wird erstellt, um einen Fehler beim Senden einer e-Mail-Nachricht zu testen.  
  
 Wenn ein e-Mail-Server ist nicht ordnungsgemäß konfiguriert oder ein anderer Fehler tritt auf, und die e-Mail-Nachricht nicht gesendet werden, die `SendMailError` -Funktion aufgerufen wird. Der Benutzer wird eine Meldung angezeigt. Darüber hinaus wird ein Ereignis in der Windows-Anwendungsereignisprotokoll unter der Annahme protokolliert, eine Ereignisquelle, die mit dem Namen MySamplesSite ist bereits vorhanden ist. Finden Sie im Codebeispiel unten, um die angegebene Ereignisquelle zu erstellen. Weitere Informationen zum Erstellen einer Ereignisquelle finden Sie unter [Server Event Handling in ASP.NET Web Forms-Seiten](http://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9). Die <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> Eigenschaft der <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> Objekt nastaven NA hodnotu `true` , um anzugeben, dass der Fehler verarbeitet wurde.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 Verwenden Sie im folgenden Codebeispiel wird, wenn Sie programmgesteuert die Ereignisquelle, die mit der Bezeichnung MySamplesSite Ereignisprotokoll der Anwendung hinzufügen möchten. Diese Ereignisquelle verwendet wurden, muss in der Reihenfolge für das erste Codebeispiel ordnungsgemäß funktioniert vorhanden sein. Im folgenden Codebeispiel sind Administratorrechte erforderlich.  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.CreateUserWizard.SendMailError" />
        <altmember cref="E:System.Web.UI.WebControls.ChangePassword.SendMailError" />
        <altmember cref="E:System.Web.UI.WebControls.PasswordRecovery.SendMailError" />
        <altmember cref="T:System.Net.Mail.MailMessage" />
        <related type="Article" href="http://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9">Serverereignisbehandlung in ASP.NET Web Pages</related>
        <related type="Article" href="http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f">Behandeln und Auslösen von Ereignissen</related>
        <related type="Article" href="http://msdn.microsoft.com/library/448f7802-0aa8-4304-abf7-82e138877dc8">Registerkarte "Anwendung" Web Site Administration-Tools</related>
      </Docs>
    </Member>
    <Member MemberName="Handled">
      <MemberSignature Language="C#" Value="public bool Handled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Handled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled" />
      <MemberSignature Language="VB.NET" Value="Public Property Handled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Handled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Handled : bool with get, set" Usage="System.Web.UI.WebControls.SendMailErrorEventArgs.Handled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt an, ob die in der <see cref="P:System.Web.UI.WebControls.SendMailErrorEventArgs.Exception" />-Eigenschaft enthaltene SMTP-Ausnahme behandelt wurde.</summary>
        <value>Wenn <see langword="true" />, wird die Ausnahme vom <see cref="T:System.Web.UI.WebControls.SendMailErrorEventHandler" />-Delegaten verwendet und behandelt. Wenn <see langword="false" />, wird die Ausnahme unter Einbeziehung der ursprünglichen Aufrufliste und Fehlermeldung erneut ausgelöst.  
  
Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> Eigenschaft gibt an, ob die <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Exception%2A> behandelt wurde. Wird vom SMTP-Mail-Anbieter die Ausnahme ausgelöst, wenn eine e-Mail-Nachricht kann, durch gesendet werden die <xref:System.Web.UI.WebControls.ChangePassword> Steuerelement oder das <xref:System.Web.UI.WebControls.CreateUserWizard>. Die häufigste Ursache für die Ausnahme ist ein Fehler bei der Konfiguration in der [ &lt;smtp&gt; -Element (Netzwerkeinstellungen)](~/docs/framework/configure-apps/file-schema/network/smtp-element-network-settings.md) der Konfigurationsdatei des Computers. Obwohl ein Fehler wie dies wird in der Regel während der Entwicklung gefunden und Debuggen einer Anwendung, e-Mail-Server können fehlschlagen, unerwartet in einer produktionsumgebung, und müssen Sie bestimmen, ob die gesamte Anwendung in diesem Fall fehlschlagen soll. Wenn dies nicht der Fall ist, Behandeln des Ereignisses kann Ihre Anwendung aus, um den Vorgang fortzusetzen.  
  
 Wenn Sie einen Ereignishandler für keine erstellen die <xref:System.Web.UI.WebControls.ChangePassword.SendMailError> Ereignis oder bei der Erstellung eines ereignishandlers, aber lassen die <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> -Eigenschaft auf festgelegt `false`, Ihre Webanwendung nicht mehr ausgeführt werden, wenn ein Fehler, beim Senden einer e-Mail-Nachricht auftritt und wird von ASP.NET Zeigt eine Fehlermeldung an. Behandeln des Ereignisses kann Ihre Web-Anwendung weiterhin ausgeführt, obwohl eine Ausnahme aufgetreten ist. Dies ist nützlich, wenn es nicht wichtig, eine e-Mail-Nachricht zu senden. Beispielsweise, wenn die Ausnahme tritt auf, wenn ein Benutzer über einen Assistenten mit mehreren Schritten arbeitet, kann es vorteilhaft sein, der Fehler wird protokolliert, für den Benutzer eine informationsmeldung angezeigt und ermöglicht dem Benutzer, um den Assistenten abzuschließen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, eine ASP.NET-Seite, verwendet eine <xref:System.Web.UI.WebControls.ChangePassword> Webserver-Steuerelement, und enthält einen Ereignishandler für die <xref:System.Web.UI.WebControls.ChangePassword.SendMailError> Ereignis mit dem Namen `SendMailError`. Im Codebeispiel wird vorausgesetzt, die ASP.NET-Website konfiguriert wurde. zum Verwenden von ASP.NET-Mitgliedschaft und Formularauthentifizierung und dass ein Benutzer erstellt wurde, dessen Name und Kennwort Sie bekannt sind. Weitere Informationen finden Sie unter [Vorgehensweise: Implementieren Simple Forms Authentication](http://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e).  
  
 Wenn die kennwortänderung erfolgreich ist, den Code in die `SendingMail` Ereignishandler versucht wird, senden Sie eine e-Mail-Nachricht an den Benutzer aus, um die Änderung zu bestätigen. SMTP muss bereits konfiguriert sein, auf dem Server in der Reihenfolge für dieses Codebeispiel funktioniert. Informationen zum Konfigurieren eines SMTP-Servers finden Sie unter [NIB: Vorgehensweise: Installieren und Konfigurieren von SMTP-Server in IIS 6.0](http://msdn.microsoft.com/library/ed204b58-24af-47d0-9687-60e5df5f17f8). Für die Zwecke dieses Beispiels ist es nicht erforderlich, einen SMTP-Server zu konfigurieren. Im Beispiel wird erstellt, um einen Fehler beim Senden einer e-Mail-Nachricht zu testen.  
  
 Wenn ein e-Mail-Server ist nicht ordnungsgemäß konfiguriert oder ein anderer Fehler tritt auf, und die e-Mail-Nachricht nicht gesendet werden, die `SendMailError` -Funktion aufgerufen wird. Der Benutzer wird eine Meldung angezeigt. Darüber hinaus wird ein Ereignis in der Windows-Anwendungsereignisprotokoll unter der Annahme protokolliert, eine Ereignisquelle, die mit dem Namen MySamplesSite ist bereits vorhanden ist. Finden Sie im Codebeispiel unten, um die angegebene Ereignisquelle zu erstellen. Weitere Informationen zum Erstellen einer Ereignisquelle finden Sie unter [Server Event Handling in ASP.NET Web Forms-Seiten](http://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9). Die <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> Eigenschaft der <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> Objekt nastaven NA hodnotu `true` , um anzugeben, dass der Fehler verarbeitet wurde.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 Verwenden Sie im folgenden Codebeispiel wird, wenn Sie programmgesteuert die Ereignisquelle, die mit der Bezeichnung MySamplesSite Ereignisprotokoll der Anwendung hinzufügen möchten. Diese Ereignisquelle verwendet wurden, muss in der Reihenfolge für das erste Codebeispiel ordnungsgemäß funktioniert vorhanden sein. Im folgenden Codebeispiel sind Administratorrechte erforderlich.  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.CreateUserWizard.SendMailError" />
        <altmember cref="E:System.Web.UI.WebControls.ChangePassword.SendMailError" />
        <altmember cref="E:System.Web.UI.WebControls.PasswordRecovery.SendMailError" />
        <altmember cref="T:System.Net.Mail.MailMessage" />
        <related type="Article" href="http://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9">Serverereignisbehandlung in ASP.NET Web Pages</related>
        <related type="Article" href="http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f">Behandeln und Auslösen von Ereignissen</related>
        <related type="Article" href="http://msdn.microsoft.com/library/448f7802-0aa8-4304-abf7-82e138877dc8">Registerkarte "Anwendung" Web Site Administration-Tools</related>
      </Docs>
    </Member>
  </Members>
</Type>