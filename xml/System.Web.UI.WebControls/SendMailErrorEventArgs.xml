<Type Name="SendMailErrorEventArgs" FullName="System.Web.UI.WebControls.SendMailErrorEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="67b6ada54aa22017fa7c4aa9f6e0d8df83ac6f79" /><Meta Name="ms.sourcegitcommit" Value="355778a8154b2dab885accd76cc040b19ea80e32" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="03/03/2020" /><Meta Name="ms.locfileid" Value="78243690" /></Metadata><TypeSignature Language="C#" Value="public class SendMailErrorEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SendMailErrorEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.SendMailErrorEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class SendMailErrorEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class SendMailErrorEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type SendMailErrorEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt Daten für das <see langword="SendMailError" />-Ereignis von Steuerelementen wie <see cref="T:System.Web.UI.WebControls.ChangePassword" />, <see cref="T:System.Web.UI.WebControls.CreateUserWizard" /> und <see cref="T:System.Web.UI.WebControls.PasswordRecovery" /> bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Web.UI.WebControls.SendMailErrorEventArgs>-Objekt enthält eine Fehlermeldung, die vom SMTP-Mail-Anbieter ausgelöst wird, wenn eine e-Mail-Nachricht nicht vom <xref:System.Web.UI.WebControls.ChangePassword>-Steuerelement gesendet werden kann, oder das <xref:System.Web.UI.WebControls.CreateUserWizard>-Steuerelement. In einem solchen Fall wird das <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> Objekt an die <xref:System.Web.UI.WebControls.SendMailErrorEventHandler>gesendet.  
  
 Erstellen Sie einen <xref:System.Web.UI.WebControls.SendMailErrorEventHandler> Delegaten, um das-Ereignis zu behandeln. Wenn Sie das-Ereignis behandeln, kann die Webanwendung auch dann weiterhin ausgeführt werden, wenn eine Ausnahme aufgetreten ist. Dies ist nützlich, wenn es nicht wichtig ist, eine e-Mail-Nachricht zu senden. Wenn z. b. die Ausnahme auftritt, wenn ein Benutzer einen mehrstufigen Assistenten durchläuft, kann es vorteilhaft sein, den Fehler zu protokollieren, eine informative Meldung für den Benutzer anzuzeigen und dem Benutzer das Beenden des Assistenten zu gestatten.  
  
 Überprüfen Sie die <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Exception%2A>-Eigenschaft, um die tatsächliche Ursache der Ausnahme zu bestimmen. Der häufigste Grund für die Ausnahme ist ein Konfigurationsfehler im [&lt;SMTP-&gt;-Element (Netzwerkeinstellungen)](~/docs/framework/configure-apps/file-schema/network/smtp-element-network-settings.md) der Computer Konfigurationsdatei. Obwohl bei der Entwicklung und beim Debuggen einer Anwendung ein solcher Fehler normalerweise entdeckt wird, können e-Mail-Server in einer Produktionsumgebung unerwartet ausfallen, und Sie müssen bestimmen, ob die gesamte Anwendung in dieser Situation fehlschlagen soll. Wenn dies nicht der Fall ist, kann die Anwendung durch Behandeln des Ereignisses fortgesetzt werden.  
  
 Sie müssen die <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A>-Eigenschaft auf `true` festlegen, um zu signalisieren, dass die Ausnahme behandelt wurde. Andernfalls wird die Ausnahme erneut ausgelöst, und Sie enthält die ursprüngliche und die ursprüngliche Fehlermeldung.  
  
 Wenn Sie keinen Ereignishandler für das <xref:System.Web.UI.WebControls.ChangePassword.SendMailError>-Ereignis erstellen oder wenn Sie einen Ereignishandler erstellen, die <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A>-Eigenschaft jedoch auf `false`festgelegt haben, wird die Ausführung der Webanwendung beendet, wenn beim Senden einer e-Mail-Nachricht ein Fehler auftritt, und ASP.net zeigt eine Fehlermeldung an.  
  
 Die <xref:System.Web.UI.WebControls.ChangePassword.OnSendMailError%2A>-Methode ermöglicht es abgeleiteten Klassen auch, das-Ereignis zu behandeln, anstatt dies durch die <xref:System.Web.UI.WebControls.SendMailErrorEventHandler>zu erreichen. Dies ist die bevorzugte Methode für die Behandlung des Ereignisses in einer Klasse, die von <xref:System.Web.UI.WebControls.ChangePassword> oder <xref:System.Web.UI.WebControls.CreateUserWizard>abgeleitet ist.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [Server Ereignis Behandlung auf ASP.net-Web Forms Seiten](https://docs.microsoft.com/previous-versions/aspnet/xax2hw3x(v=vs.100)).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine ASP.NET-Seite veranschaulicht, die ein <xref:System.Web.UI.WebControls.ChangePassword>-websteuer Element verwendet und einen Ereignishandler für das <xref:System.Web.UI.WebControls.ChangePassword.SendMailError> Ereignis namens SendMailError enthält. Im Codebeispiel wird davon ausgegangen, dass die ASP.NET-Website für die Verwendung der ASP.NET-Mitgliedschaft und Formular Authentifizierung konfiguriert wurde und dass ein Benutzer erstellt wurde, dessen Name und Kennwort Ihnen bekannt sind. Weitere Informationen finden Sie unter Gewusst [wie: Implementieren einer einfachen Formular Authentifizierung](https://docs.microsoft.com/previous-versions/aspnet/xdt4thhy(v=vs.100)).  
  
 Wenn die Kenn Wort Änderung erfolgreich ist, versucht der Code im `SendingMail` Ereignishandler, eine e-Mail-Nachricht an den Benutzer zu senden, um die Änderung zu bestätigen. SMTP muss bereits auf dem Server konfiguriert sein, damit dieses Codebeispiel funktioniert. Informationen zum Konfigurieren eines SMTP-Servers finden Sie unter Vorgehens [Weise: Installieren und Konfigurieren virtueller SMTP-Server in IIS 6,0](https://docs.microsoft.com/previous-versions/aspnet/8b83ac7t(v=vs.100)). Im Rahmen dieses Beispiels ist es nicht erforderlich, einen SMTP-Server zu konfigurieren. Das Beispiel wird erstellt, um zu testen, dass ein Fehler beim Senden einer e-Mail-Nachricht vorliegt.  
  
 Wenn ein Mailserver nicht ordnungsgemäß konfiguriert ist oder ein anderer Fehler auftritt und die e-Mail-Nachricht nicht gesendet werden kann, wird die `SendMailError`-Funktion aufgerufen. Dem Benutzer wird eine Meldung angezeigt. Außerdem wird ein Ereignis im Windows-Anwendungs Ereignisprotokoll mit der Annahme protokolliert, dass eine Ereignis Quelle mit dem Namen MySamplesSite bereits vorhanden ist. Weitere Informationen finden Sie im folgenden Codebeispiel, um die angegebene Ereignis Quelle zu erstellen. Weitere Informationen zum Erstellen einer Ereignis Quelle finden Sie unter [Server Ereignis Behandlung auf ASP.net-Web Forms Seiten](https://docs.microsoft.com/previous-versions/aspnet/xax2hw3x(v=vs.100)). Die <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A>-Eigenschaft des <xref:System.Web.UI.WebControls.SendMailErrorEventArgs>-Objekts wird auf `true` festgelegt, um anzugeben, dass der Fehler behandelt wurde.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 Verwenden Sie das folgende Codebeispiel, wenn Sie die Ereignis Quelle namens MySamplesSite Programm gesteuert dem Anwendungsprotokoll hinzufügen müssen. Diese Ereignis Quelle muss vorhanden sein, damit das erste Codebeispiel ordnungsgemäß funktioniert. Für das folgende Codebeispiel sind Administrator Rechte erforderlich.  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Web.UI.WebControls.ChangePassword.OnSendMailError(System.Web.UI.WebControls.SendMailErrorEventArgs)" /> in einer abgeleiteten Klasse überschreiben, stellen Sie sicher, dass Sie die <see cref="M:System.Web.UI.WebControls.ChangePassword.OnSendMailError(System.Web.UI.WebControls.SendMailErrorEventArgs)" />-Methode der Basisklasse aufzurufen, damit registrierte Delegaten das Ereignis empfangen können.</para></block>
    <altmember cref="E:System.Web.UI.WebControls.CreateUserWizard.SendMailError" />
    <altmember cref="E:System.Web.UI.WebControls.ChangePassword.SendMailError" />
    <altmember cref="E:System.Web.UI.WebControls.PasswordRecovery.SendMailError" />
    <altmember cref="T:System.Net.Mail.MailMessage" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/xax2hw3x(v=vs.100)">Behandlung von Server Ereignissen in ASP.net Web Pages</related>
    <related type="Article" href="~/docs/standard/events/index.md">Behandeln und Auslösen von Ereignissen</related>
    <related type="Article" href="https://msdn.microsoft.com/library/448f7802-0aa8-4304-abf7-82e138877dc8">Registerkarte "Websiteverwaltungs-Tool Anwendung"</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178346(v=vs.100)">Sichern von Anmelde Steuerelementen</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/zdh19h94(v=vs.100)">Grundlegende Sicherheitsmaßnahmen für Webanwendungen</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SendMailErrorEventArgs (Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SendMailErrorEventArgs.#ctor(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (e As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SendMailErrorEventArgs(Exception ^ e);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.SendMailErrorEventArgs : Exception -&gt; System.Web.UI.WebControls.SendMailErrorEventArgs" Usage="new System.Web.UI.WebControls.SendMailErrorEventArgs e" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Exception" />-Objekt, das die Ausnahme enthält.</param>
        <summary>Initialisiert eine neue Instanz der Klasse <see cref="T:System.Web.UI.WebControls.SendMailErrorEventArgs" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Web.UI.WebControls.CreateUserWizard.SendMailError" />
        <altmember cref="E:System.Web.UI.WebControls.ChangePassword.SendMailError" />
        <altmember cref="E:System.Web.UI.WebControls.PasswordRecovery.SendMailError" />
        <altmember cref="T:System.Net.Mail.MailMessage" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/xax2hw3x(v=vs.100)">Behandlung von Server Ereignissen in ASP.net Web Pages</related>
        <related type="Article" href="~/docs/standard/events/index.md">Behandeln und Auslösen von Ereignissen</related>
        <related type="Article" href="https://msdn.microsoft.com/library/448f7802-0aa8-4304-abf7-82e138877dc8">Registerkarte "Websiteverwaltungs-Tool Anwendung"</related>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SendMailErrorEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); void set(Exception ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception with get, set" Usage="System.Web.UI.WebControls.SendMailErrorEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt die Ausnahme zurück, die vom SMTP-Maildienst ausgelöst wird, wenn eine E-Mail nicht gesendet werden kann.</summary>
        <value>Ein <see cref="T:System.Exception" />-Objekt, das die Ausnahme enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Exception%2A>-Eigenschaft enthält die Ausnahme, die vom SMTP-e-Mail-Anbieter ausgelöst wird, wenn eine e-Mail-Nachricht nicht vom <xref:System.Web.UI.WebControls.ChangePassword> Steuerelement oder vom <xref:System.Web.UI.WebControls.CreateUserWizard>gesendet werden kann. Der häufigste Grund für diese Ausnahme ist ein Konfigurationsfehler im [&lt;SMTP-&gt;-Element (Netzwerkeinstellungen)](~/docs/framework/configure-apps/file-schema/network/smtp-element-network-settings.md) der Computer Konfigurationsdatei, das die folgende Ausnahme Meldung erzeugt: `The transport failed to connect to the server.`  
  
 Ausnahmen werden nicht ausgelöst, wenn in der e-Mail-Nachricht beim Einbetten einer Datei mit <xref:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects%2A>ein Fehler auftritt. Stattdessen wird die eingebettete Datei beschädigt, wenn die e-Mail-Nachricht angezeigt wird.  
  
 Sie müssen das <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> Objekt, das als `e`-Parameter von <xref:System.Web.UI.WebControls.SendMailErrorEventArgs>übergeben wird, auf `true` festlegen, um zu signalisieren, dass die Ausnahme behandelt wurde. Andernfalls wird die Ausnahme erneut ausgelöst, und Sie enthält die ursprüngliche und die ursprüngliche Fehlermeldung.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine ASP.NET-Seite veranschaulicht, die ein <xref:System.Web.UI.WebControls.ChangePassword>-websteuer Element verwendet und einen Ereignishandler für das <xref:System.Web.UI.WebControls.ChangePassword.SendMailError> Ereignis namens `SendMailError`enthält. Im Codebeispiel wird davon ausgegangen, dass die ASP.NET-Website für die Verwendung der ASP.NET-Mitgliedschaft und Formular Authentifizierung konfiguriert wurde und dass ein Benutzer erstellt wurde, dessen Name und Kennwort Ihnen bekannt sind. Weitere Informationen finden Sie unter Gewusst [wie: Implementieren einer einfachen Formular Authentifizierung](https://docs.microsoft.com/previous-versions/aspnet/xdt4thhy(v=vs.100)).  
  
 Wenn die Kenn Wort Änderung erfolgreich ist, versucht der Code im `SendingMail` Ereignishandler, eine e-Mail-Nachricht an den Benutzer zu senden, um die Änderung zu bestätigen. SMTP muss bereits auf dem Server konfiguriert sein, damit dieses Codebeispiel funktioniert. Informationen zum Konfigurieren eines SMTP-Servers finden Sie unter Vorgehens [Weise: Installieren und Konfigurieren virtueller SMTP-Server in IIS 6,0](https://docs.microsoft.com/previous-versions/aspnet/8b83ac7t(v=vs.100)). Im Rahmen dieses Beispiels ist es nicht erforderlich, einen SMTP-Server zu konfigurieren. Das Beispiel wird erstellt, um zu testen, dass ein Fehler beim Senden einer e-Mail-Nachricht vorliegt.  
  
 Wenn ein Mailserver nicht ordnungsgemäß konfiguriert ist oder ein anderer Fehler auftritt und die e-Mail-Nachricht nicht gesendet werden kann, wird die `SendMailError`-Funktion aufgerufen. Dem Benutzer wird eine Meldung angezeigt. Außerdem wird ein Ereignis im Windows-Anwendungs Ereignisprotokoll mit der Annahme protokolliert, dass eine Ereignis Quelle mit dem Namen MySamplesSite bereits vorhanden ist. Weitere Informationen finden Sie im folgenden Codebeispiel, um die angegebene Ereignis Quelle zu erstellen. Weitere Informationen zum Erstellen einer Ereignis Quelle finden Sie unter [Server Ereignis Behandlung auf ASP.net-Web Forms Seiten](https://docs.microsoft.com/previous-versions/aspnet/xax2hw3x(v=vs.100)). Die <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A>-Eigenschaft des <xref:System.Web.UI.WebControls.SendMailErrorEventArgs>-Objekts wird auf `true` festgelegt, um anzugeben, dass der Fehler behandelt wurde.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 Verwenden Sie das folgende Codebeispiel, wenn Sie die Ereignis Quelle namens MySamplesSite Programm gesteuert dem Anwendungsprotokoll hinzufügen müssen. Diese Ereignis Quelle muss vorhanden sein, damit das erste Codebeispiel ordnungsgemäß funktioniert. Für das folgende Codebeispiel sind Administrator Rechte erforderlich.  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.CreateUserWizard.SendMailError" />
        <altmember cref="E:System.Web.UI.WebControls.ChangePassword.SendMailError" />
        <altmember cref="E:System.Web.UI.WebControls.PasswordRecovery.SendMailError" />
        <altmember cref="T:System.Net.Mail.MailMessage" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/xax2hw3x(v=vs.100)">Behandlung von Server Ereignissen in ASP.net Web Pages</related>
        <related type="Article" href="~/docs/standard/events/index.md">Behandeln und Auslösen von Ereignissen</related>
        <related type="Article" href="https://msdn.microsoft.com/library/448f7802-0aa8-4304-abf7-82e138877dc8">Registerkarte "Websiteverwaltungs-Tool Anwendung"</related>
      </Docs>
    </Member>
    <Member MemberName="Handled">
      <MemberSignature Language="C#" Value="public bool Handled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Handled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled" />
      <MemberSignature Language="VB.NET" Value="Public Property Handled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Handled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Handled : bool with get, set" Usage="System.Web.UI.WebControls.SendMailErrorEventArgs.Handled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt an, ob die in der <see cref="P:System.Web.UI.WebControls.SendMailErrorEventArgs.Exception" />-Eigenschaft enthaltene SMTP-Ausnahme behandelt wurde.</summary>
        <value>Wenn <see langword="true" />, wird die Ausnahme vom <see cref="T:System.Web.UI.WebControls.SendMailErrorEventHandler" />-Delegaten verwendet und behandelt. Wenn <see langword="false" />, wird die Ausnahme unter Einbeziehung der ursprünglichen Aufrufliste und Fehlermeldung erneut ausgelöst.  
  
Der Standardwert lautet <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A>-Eigenschaft gibt an, ob die <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Exception%2A> behandelt wurde. Diese Ausnahme wird vom SMTP-e-Mail-Anbieter ausgelöst, wenn eine e-Mail-Nachricht nicht vom <xref:System.Web.UI.WebControls.ChangePassword>-Steuerelement oder vom <xref:System.Web.UI.WebControls.CreateUserWizard>gesendet werden kann. Der häufigste Grund für die Ausnahme ist ein Konfigurationsfehler im [&lt;SMTP-&gt;-Element (Netzwerkeinstellungen)](~/docs/framework/configure-apps/file-schema/network/smtp-element-network-settings.md) der Computer Konfigurationsdatei. Obwohl bei der Entwicklung und beim Debuggen einer Anwendung ein solcher Fehler normalerweise entdeckt wird, können e-Mail-Server in einer Produktionsumgebung unerwartet ausfallen, und Sie müssen bestimmen, ob die gesamte Anwendung in dieser Situation fehlschlagen soll. Wenn dies nicht der Fall ist, kann die Anwendung durch Behandeln des Ereignisses fortgesetzt werden.  
  
 Wenn Sie keinen Ereignishandler für das <xref:System.Web.UI.WebControls.ChangePassword.SendMailError>-Ereignis erstellen oder wenn Sie einen Ereignishandler erstellen, die <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A>-Eigenschaft jedoch auf `false`festgelegt haben, wird die Ausführung der Webanwendung beendet, wenn beim Senden einer e-Mail-Nachricht ein Fehler auftritt, und ASP.net zeigt eine Fehlermeldung an. Wenn Sie das-Ereignis behandeln, kann die Webanwendung auch dann weiterhin ausgeführt werden, wenn eine Ausnahme aufgetreten ist. Dies ist nützlich, wenn es nicht wichtig ist, eine e-Mail-Nachricht zu senden. Wenn z. b. die Ausnahme auftritt, wenn ein Benutzer einen mehrstufigen Assistenten durchläuft, kann es vorteilhaft sein, den Fehler zu protokollieren, eine informative Meldung für den Benutzer anzuzeigen und dem Benutzer das Beenden des Assistenten zu gestatten.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine ASP.NET-Seite veranschaulicht, die ein <xref:System.Web.UI.WebControls.ChangePassword>-websteuer Element verwendet und einen Ereignishandler für das <xref:System.Web.UI.WebControls.ChangePassword.SendMailError> Ereignis namens `SendMailError`enthält. Im Codebeispiel wird davon ausgegangen, dass die ASP.NET-Website für die Verwendung der ASP.NET-Mitgliedschaft und Formular Authentifizierung konfiguriert wurde und dass ein Benutzer erstellt wurde, dessen Name und Kennwort Ihnen bekannt sind. Weitere Informationen finden Sie unter Gewusst [wie: Implementieren einer einfachen Formular Authentifizierung](https://docs.microsoft.com/previous-versions/aspnet/xdt4thhy(v=vs.100)).  
  
 Wenn die Kenn Wort Änderung erfolgreich ist, versucht der Code im `SendingMail` Ereignishandler, eine e-Mail-Nachricht an den Benutzer zu senden, um die Änderung zu bestätigen. SMTP muss bereits auf dem Server konfiguriert sein, damit dieses Codebeispiel funktioniert. Informationen zum Konfigurieren eines SMTP-Servers finden Sie unter Vorgehens [Weise: Installieren und Konfigurieren virtueller SMTP-Server in IIS 6,0](https://docs.microsoft.com/previous-versions/aspnet/8b83ac7t(v=vs.100)). Im Rahmen dieses Beispiels ist es nicht erforderlich, einen SMTP-Server zu konfigurieren. Das Beispiel wird erstellt, um zu testen, dass ein Fehler beim Senden einer e-Mail-Nachricht vorliegt.  
  
 Wenn ein Mailserver nicht ordnungsgemäß konfiguriert ist oder ein anderer Fehler auftritt und die e-Mail-Nachricht nicht gesendet werden kann, wird die `SendMailError`-Funktion aufgerufen. Dem Benutzer wird eine Meldung angezeigt. Außerdem wird ein Ereignis im Windows-Anwendungs Ereignisprotokoll mit der Annahme protokolliert, dass eine Ereignis Quelle mit dem Namen MySamplesSite bereits vorhanden ist. Weitere Informationen finden Sie im folgenden Codebeispiel, um die angegebene Ereignis Quelle zu erstellen. Weitere Informationen zum Erstellen einer Ereignis Quelle finden Sie unter [Server Ereignis Behandlung auf ASP.net-Web Forms Seiten](https://docs.microsoft.com/previous-versions/aspnet/xax2hw3x(v=vs.100)). Die <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A>-Eigenschaft des <xref:System.Web.UI.WebControls.SendMailErrorEventArgs>-Objekts wird auf `true` festgelegt, um anzugeben, dass der Fehler behandelt wurde.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 Verwenden Sie das folgende Codebeispiel, wenn Sie die Ereignis Quelle namens MySamplesSite Programm gesteuert dem Anwendungsprotokoll hinzufügen müssen. Diese Ereignis Quelle muss vorhanden sein, damit das erste Codebeispiel ordnungsgemäß funktioniert. Für das folgende Codebeispiel sind Administrator Rechte erforderlich.  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.CreateUserWizard.SendMailError" />
        <altmember cref="E:System.Web.UI.WebControls.ChangePassword.SendMailError" />
        <altmember cref="E:System.Web.UI.WebControls.PasswordRecovery.SendMailError" />
        <altmember cref="T:System.Net.Mail.MailMessage" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/xax2hw3x(v=vs.100)">Behandlung von Server Ereignissen in ASP.net Web Pages</related>
        <related type="Article" href="~/docs/standard/events/index.md">Behandeln und Auslösen von Ereignissen</related>
        <related type="Article" href="https://msdn.microsoft.com/library/448f7802-0aa8-4304-abf7-82e138877dc8">Registerkarte "Websiteverwaltungs-Tool Anwendung"</related>
      </Docs>
    </Member>
  </Members>
</Type>
