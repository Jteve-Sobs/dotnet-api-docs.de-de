<Type Name="FormView" FullName="System.Web.UI.WebControls.FormView">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ad692010f4442830c3129eec8b972e5ca7a37e88" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37594909" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FormView : System.Web.UI.WebControls.CompositeDataBoundControl, System.Web.UI.IDataItemContainer, System.Web.UI.IPostBackEventHandler, System.Web.UI.WebControls.IDataBoundItemControl, System.Web.UI.WebControls.IPostBackContainer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FormView extends System.Web.UI.WebControls.CompositeDataBoundControl implements class System.Web.UI.IDataItemContainer, class System.Web.UI.INamingContainer, class System.Web.UI.IPostBackEventHandler, class System.Web.UI.WebControls.IDataBoundControl, class System.Web.UI.WebControls.IDataBoundItemControl, class System.Web.UI.WebControls.IPostBackContainer" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.FormView" />
  <TypeSignature Language="VB.NET" Value="Public Class FormView&#xA;Inherits CompositeDataBoundControl&#xA;Implements IDataBoundItemControl, IDataItemContainer, IPostBackContainer, IPostBackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class FormView : System::Web::UI::WebControls::CompositeDataBoundControl, System::Web::UI::IDataItemContainer, System::Web::UI::IPostBackEventHandler, System::Web::UI::WebControls::IDataBoundItemControl, System::Web::UI::WebControls::IPostBackContainer" />
  <TypeSignature Language="F#" Value="type FormView = class&#xA;    inherit CompositeDataBoundControl&#xA;    interface IDataItemContainer&#xA;    interface INamingContainer&#xA;    interface IPostBackEventHandler&#xA;    interface IPostBackContainer&#xA;    interface IDataBoundItemControl&#xA;    interface IDataBoundControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.CompositeDataBoundControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IDataItemContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IDataBoundItemControl</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IPostBackContainer</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("PageIndexChanging")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.FormViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlValueProperty("SelectedValue")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.DataKeyProperty("DataKey")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Zeigt die Werte eines einzelnen Datensatzes aus einer Datenquelle mithilfe benutzerdefinierter Vorlagen an. Das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement ermöglicht es Ihnen, Datensätze zu bearbeiten, zu löschen und einzufügen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In diesem Thema:  
  
-   [Introduction (Einführung)](#introduction)  
  
-   [Vorlagen](#templates)  
  
-   [Binden an Daten](#binding_to_data)  
  
-   [Datenvorgänge](#data_operations)  
  
-   [Anpassen der Benutzeroberfläche](#customizing_the_user_interface)  
  
-   [Ereignisse](#events)  
  
-   [Barrierefreiheit](#accessibility)  
  
-   [Anwenden von CSS-Stilen](#applying_styles)  
  
-   [Deklarative Syntax](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Einführung  
 Die <xref:System.Web.UI.WebControls.FormView> Steuerelement wird verwendet, um die Anzeige eines einzelnen Datensatzes aus einer Datenquelle. Es ähnelt der <xref:System.Web.UI.WebControls.DetailsView> zu steuern, mit der Ausnahme von benutzerdefinierten Vorlagen anstelle von Zeilenfeldern wird angezeigt. Erstellen eigener Vorlagen bietet Ihnen mehr Flexibilität bei der Steuerung, wie die Daten angezeigt werden. Die <xref:System.Web.UI.WebControls.FormView> -Steuerelement unterstützt die folgenden Funktionen:  
  
-   Bindung an Datenquellen-Steuerelemente, z. B. <xref:System.Web.UI.WebControls.SqlDataSource> und <xref:System.Web.UI.WebControls.ObjectDataSource>.  
  
-   Integrierte Einfügefunktionen.  
  
-   Integrierte aktualisieren und Löschen von Funktionen.  
  
-   Integrierte Pagingfunktionen.  
  
-   Den programmgesteuerten Zugriff auf die <xref:System.Web.UI.WebControls.FormView> Objektmodell, um dynamisch festlegen von Eigenschaften, Ereignisse verarbeiten und so weiter.  
  
-   Anpassbare Darstellung durch benutzerdefinierte Vorlagen, Designs und Stile.  
  
<a name="templates"></a>   
## <a name="templates"></a>Vorlagen  
 Für die <xref:System.Web.UI.WebControls.FormView> steuern, um Inhalt anzuzeigen, müssen Sie zum Erstellen von Vorlagen für die verschiedenen Teile des Steuerelements. Die meisten Vorlagen ist optional. Allerdings müssen Sie eine Vorlage für den Modus erstellen, in denen das Steuerelement konfiguriert ist. Z. B. eine <xref:System.Web.UI.WebControls.FormView> -Steuerelement, das Einfügen von Datensätzen unterstützt, müssen eine Vorlage zum Einfügen von Elementen definiert. Die folgende Tabelle enthält die verschiedenen Vorlagen, die Sie erstellen können.  
  
|Vorlagentyp|Beschreibung |  
|-------------------|-----------------|  
|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|Definiert den Inhalt der Datenzeile, wenn die <xref:System.Web.UI.WebControls.FormView> Steuerelement befindet sich im Bearbeitungsmodus befindet. Diese Vorlage enthält normalerweise die Benutzereingabe-Steuerelemente und Befehlsschaltflächen, mit denen der Benutzer einen vorhandenen Datensatz bearbeiten kann.|  
|<xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A>|Definiert den Inhalt für die leere Datenzeile angezeigt wird, wenn die <xref:System.Web.UI.WebControls.FormView> gebunden ist mit einer Datenquelle, die keine Datensätze enthält. Diese Vorlage enthält in der Regel Inhalte an den Benutzer darauf aufmerksam, dass die Datenquelle keine Datensätze enthält.|  
|<xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>|Definiert den Inhalt für die Footerzeile. Diese Vorlage enthält in der Regel zusätzliche Inhalte, die Sie in der Fußzeile anzeigen möchten. **Hinweis:** als Alternative können Sie einfach durch Festlegen von in der Footerzeile anzuzeigende Text angeben der <xref:System.Web.UI.WebControls.FormView.FooterText%2A> Eigenschaft.|  
|<xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>|Definiert den Inhalt für die Headerzeile. Diese Vorlage enthält in der Regel zusätzliche Inhalte, die Sie in der Kopfzeile anzeigen möchten. **Hinweis:** als Alternative können Sie einfach Text, der in der Kopfzeile angezeigt, durch Festlegen von angeben der <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> Eigenschaft.|  
|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|Definiert den Inhalt der Datenzeile, wenn die <xref:System.Web.UI.WebControls.FormView> Steuerelement befindet sich im schreibgeschützten Modus. Diese Vorlage enthält in der Regel Inhalte aus, um die Werte eines vorhandenen Datensatzes anzuzeigen.|  
|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|Definiert den Inhalt der Datenzeile, wenn die <xref:System.Web.UI.WebControls.FormView> Steuerelement befindet sich im Einfügemodus befindet. Diese Vorlage enthält normalerweise die Benutzereingabe-Steuerelemente und Befehlsschaltflächen, mit denen der Benutzer einen neuen Datensatz hinzufügen kann.|  
|<xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A>|Definiert den Inhalt der Pagerzeile angezeigt, wenn das Pagingfeature aktiviert ist (wenn die <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> -Eigenschaftensatz auf `true`). Diese Vorlage enthält in der Regel Steuerelemente, die mit denen der Benutzer zu einem anderen Datensatz navigieren kann. **Hinweis:** der <xref:System.Web.UI.WebControls.FormView> Steuerelement verfügt über eine integrierte Pager-Zeile-Benutzeroberfläche (UI). Sie müssen eine Pagervorlage erstellen, nur, wenn Sie Ihre eigenen benutzerdefinierten Pagerzeile erstellen möchten.|  
  
 Verwenden Sie zum Anzeigen des Wert eines Felds in einer Elementvorlage einen Datenbindungsausdruck aus. Weitere Informationen zu Datenbindungsausdrücken finden Sie unter [Data-Syntax von Datenbindungsausdrücken](http://msdn.microsoft.com/library/676beb1d-ddfa-4153-bba8-3c86dcb7ceca).  
  
 Benutzereingabe-Steuerelemente in der Elementvorlage bearbeiten und Einfügen-Item-Vorlage können auf die Felder für die Datenquelle gebunden werden, mithilfe eines Ausdrucks für die bidirektionale Bindung. Dadurch wird die <xref:System.Web.UI.WebControls.FormView> Steuerelement automatisch Extrahieren der Werte des Eingabesteuerelements für ein Update oder insert-Vorgang. Bidirektionale Bindungsausdrücke ermöglichen außerdem die Benutzereingabe-Steuerelemente in einer Elementvorlage bearbeiten, die ursprünglichen Werte des Felds automatisch angezeigt. Weitere Informationen zu Ausdrücken für bidirektionale Bindung finden Sie unter [Binden an Datenbanken](http://msdn.microsoft.com/library/ab7b2846-975b-4057-a948-45527497c742).  
  
<a name="binding_to_data"></a>   
## <a name="binding-to-data"></a>Binden an Daten  
 Die <xref:System.Web.UI.WebControls.FormView> Steuerelement an ein Datenquellensteuerelement gebunden werden kann (z. B. <xref:System.Web.UI.WebControls.SqlDataSource>, <xref:System.Web.UI.WebControls.ObjectDataSource>, oder <xref:System.Web.UI.WebControls.AccessDataSource>) oder jede Data-Source-Auflistung, implementiert die <xref:System.Collections.IEnumerable?displayProperty=nameWithType> Schnittstelle, z. B. <xref:System.Data.DataView?displayProperty=nameWithType>, <xref:System.Collections.ArrayList?displayProperty=nameWithType>, <xref:System.Collections.Generic.List%601?displayProperty=nameWithType>, oder andere Sammlungstypen. Verwenden Sie eine der folgenden Methoden zum Binden der <xref:System.Web.UI.WebControls.FormView> Steuerelement auf den entsprechenden Datenquellentyp:  
  
-   Legen Sie zum Binden an ein Datenquellen-Steuerelement die <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> Eigenschaft der <xref:System.Web.UI.WebControls.FormView> die Steuerung an die <xref:System.Web.UI.Control.ID%2A> Wert, der das Datenquellen-Steuerelement. Die <xref:System.Web.UI.WebControls.FormView> Steuerelement automatisch an der angegebenen Datenquellen-Steuerelement gebunden, und profitieren von der Datenquelle des Steuerelements-Funktionen zum Einfügen, aktualisieren, löschen und Pagingfunktionen ausführen. Dies ist die bevorzugte Methode zum Binden an Daten.  
  
-   Mit einer Datenquelle zu binden, implementiert die <xref:System.Collections.IEnumerable?displayProperty=nameWithType> Schnittstelle, die programmgesteuert festgelegt die <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> Eigenschaft der <xref:System.Web.UI.WebControls.FormView> die Steuerung an die Datenquelle, und rufen Sie dann die <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> Methode. Bei Verwendung dieser Methode, die <xref:System.Web.UI.WebControls.FormView> Steuerelement bietet keine integrierte einfügen, aktualisieren, löschen und Pagingfunktionen. Sie müssen diese Funktionen bereitstellen, indem Sie die Verwendung des entsprechenden Ereignisses.  
  
 Weitere Informationen zur Datenbindung finden Sie unter [ASP.NET Data Access Content Map](http://msdn.microsoft.com/library/f9219396-a0fa-481f-894d-e3d9c67d64f2).  
  
> [!NOTE]
>  Dieses Steuerelement kann verwendet werden, zum Anzeigen von Benutzereingaben, u. u. bösartige Clientskripts enthalten können. Überprüfen Sie alle Informationen, die für das ausführbare Skript, SQL-Anweisungen oder anderen Code von einem Client gesendet wird, vor der Anzeige in Ihrer Anwendung. Wann immer möglich, es wird jedoch dringend empfohlen, dass Werte HTML-codiert werden, bevor sie in diesem Steuerelement angezeigt werden. ASP.NET bietet eine Funktion für den Überprüfung eingabeanforderung blockskript und HTML in einer Benutzereingabe. Validierungssteuerelemente werden auch bereitgestellt, um Benutzereingaben zu bewerten. Weitere Informationen finden Sie unter [Einführung in die Steuerelemente zur gültigkeitsprüfung](http://msdn.microsoft.com/library/3c0e7514-cff2-4bed-936d-ee3f7b740190).  
  
<a name="data_operations"></a>   
## <a name="data-operations"></a>Datenvorgänge  
 Die <xref:System.Web.UI.WebControls.FormView> Steuerelement stellt zahlreiche integrierte Funktionen, mit denen den Benutzer zu aktualisieren, löschen, einfügen und Paging von Elementen im Steuerelement. Wenn die <xref:System.Web.UI.WebControls.FormView> -Steuerelement an ein Datenquellensteuerelement gebunden ist die <xref:System.Web.UI.WebControls.FormView> Steuerelement der Datenquelle des Steuerelements-Funktionen nutzen kann, und geben Sie automatische Updates, löschen, einfügen und Pagingfunktionen.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.FormView> Steuerelement bieten Unterstützung für das Update, Delete, Insert und Pagingvorgänge bei anderen Arten von Datenquellen; Sie müssen jedoch einen entsprechenden Ereignishandler mit der Implementierung für diese Vorgänge bereitstellen.  
  
 Da die <xref:System.Web.UI.WebControls.FormView> Steuerelement Vorlagen verwendet, er bietet eine Möglichkeit zum automatischen Generieren von Befehlsschaltflächen zum Ausführen, aktualisieren, löschen oder Einfügen von Vorgängen. Sie müssen diese Befehlsschaltflächen manuell in die entsprechende Vorlage einschließen. Die <xref:System.Web.UI.WebControls.FormView> Steuerelement erkennt bestimmte Schaltflächen, die ihre `CommandName` Eigenschaften, die auf bestimmte Werte festgelegt sind. Die folgende Tabelle enthält die Befehlsschaltflächen, die die <xref:System.Web.UI.WebControls.FormView> Steuerelement erkannt.  
  
|Schaltfläche|CommandName-Wert|Beschreibung |  
|------------|-----------------------|-----------------|  
|Abbrechen|"Abbrechen"|Verwendet, aktualisieren oder Einfügen von Vorgängen, den Vorgang abzubrechen und um die vom Benutzer eingegebenen Werte zu verwerfen. Die <xref:System.Web.UI.WebControls.FormView> steuern Sie anschließend zurück in den Modus gemäß der <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> Eigenschaft.|  
|Löschen|"Löschen"|Zum Löschen der Vorgänge um angezeigten Datensatzes aus der Datenquelle zu löschen. Löst die <xref:System.Web.UI.WebControls.FormView.ItemDeleting> und <xref:System.Web.UI.WebControls.FormView.ItemDeleted> Ereignisse.|  
|Bearbeiten|"Bearbeiten"|Wird die in Aktualisierungsvorgängen verwendet wird, stellen die <xref:System.Web.UI.WebControls.FormView> Steuerelement im Bearbeitungsmodus befindet. Der Inhalt die <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> Eigenschaft wird für die Datenzeile angezeigt.|  
|Insert|"Insert"|Wird in Einfügevorgängen verwendet, um zu versuchen, einen neuen Datensatz in der Datenquelle, die mit den Werten, die vom Benutzer bereitgestellte einzufügen. Löst die <xref:System.Web.UI.WebControls.FormView.ItemInserting> und <xref:System.Web.UI.WebControls.FormView.ItemInserted> Ereignisse.|  
|Neu|"New"|In Einfügevorgängen verwendet wird, stellen die <xref:System.Web.UI.WebControls.FormView> Steuerelement im Einfügemodus befindet. Der Inhalt die <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> Eigenschaft wird für die Datenzeile angezeigt.|  
|Seite|"Page"|In Pagingvorgänge verwendet, um die eine Schaltfläche in der Pagerzeile darstellt, die Paging ausführt. Legen Sie zum Angeben des Pagingvorgangs der `CommandArgument` Eigenschaft der Schaltfläche "Weiter", "Prev", "First", "Last" oder der Index der Seite, zu der navigiert. Löst die <xref:System.Web.UI.WebControls.FormView.PageIndexChanging> und <xref:System.Web.UI.WebControls.FormView.PageIndexChanged> Ereignisse. **Hinweis:** diese Art von Schaltfläche wird in der Regel nur in der Pagervorlage verwendet.|  
|Update|"Aktualisieren"|In Aktualisierungsvorgängen verwendet, um zu versuchen, den angezeigten Datensatz in der Datenquelle mit den Werten, die vom Benutzer bereitgestellte aktualisieren. Löst die <xref:System.Web.UI.WebControls.FormView.ItemUpdating> und <xref:System.Web.UI.WebControls.FormView.ItemUpdated> Ereignisse.|  
  
 Im Gegensatz zu der Schaltfläche "löschen" (die angezeigten Datensatzes sofort gelöscht wird), wenn die Schaltfläche "Bearbeiten" oder "New" geklickt wird, die <xref:System.Web.UI.WebControls.FormView> vielschichtiger Steuerelement bearbeiten oder einfügen. Im Bearbeitungsmodus befindet, der Inhalt enthalten, der <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> Eigenschaft wird für das aktuelle Datenelement angezeigt. In der Regel ist die Bearbeitungselementvorlage so definiert, dass die Schaltfläche "Bearbeiten" mit einem Update und Schaltfläche "Abbrechen" ersetzt wird. Eingabesteuerelemente, die für den Datentyp des Felds geeignet sind (z. B. eine <xref:System.Web.UI.WebControls.TextBox> oder ein <xref:System.Web.UI.WebControls.CheckBox> Control) werden auch in der Regel angezeigt, mit der Wert eines Felds für den Benutzer zu ändern. Den Datensatz in der Datenquelle, klicken Sie auf die Schaltfläche "Aktualisieren" aktualisiert werden, während Änderungen auf die Schaltfläche "Abbrechen" abgebrochen werden.  
  
 Entsprechend den Inhalt in die <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> Eigenschaft wird für das Datenelement angezeigt, wenn das Steuerelement im Einfügemodus befindet. Die Insert-Item-Vorlage ist in der Regel so definiert, dass die Schaltfläche "neue" wird mit einem Einfüge- und Schaltfläche "Abbrechen" ersetzt, und leeren Benutzereingabe-Steuerelemente werden angezeigt, für den Benutzer die Werte für den neuen Datensatz eingeben. Klicken Sie auf die Schaltfläche "Insert" Einfügen des Datensatzes in der Datenquelle, während Änderungen auf die Schaltfläche "Abbrechen" abgebrochen werden.  
  
 Die <xref:System.Web.UI.WebControls.FormView> Steuerelement verfügt über eine Paging-Funktion, die dem Benutzer ermöglicht, navigieren Sie zu anderen Datensätzen in der Datenquelle. Wenn aktiviert, wird eine Pagerzeile angezeigt, der <xref:System.Web.UI.WebControls.FormView> Steuerelement, das die Steuerelemente für die Seitennavigation enthält. Legen Sie zum Aktivieren von Paging das <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> Eigenschaft `true`. Sie können die Pagerzeile anpassen, durch Festlegen der Eigenschaften der Objekte in der <xref:System.Web.UI.WebControls.FormView.PagerStyle%2A> und <xref:System.Web.UI.WebControls.FormView.PagerSettings%2A> Eigenschaft. Anstatt die Pagerzeile integrierte Benutzeroberfläche zu verwenden, können Sie Ihre eigene Benutzeroberfläche erstellen, mit der <xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A> Eigenschaft.  
  
<a name="customizing_the_user_interface"></a>   
## <a name="customizing-the-user-interface"></a>Anpassen der Benutzeroberfläche  
 Sie können die Darstellung der Anpassen der <xref:System.Web.UI.WebControls.FormView> Steuerelement durch Festlegen der Eigenschaften für die verschiedenen Teile des Steuerelements. Die folgende Tabelle enthält die verschiedenen Stileigenschaften.  
  
|Style-Eigenschaft|Beschreibung |  
|--------------------|-----------------|  
|<xref:System.Web.UI.WebControls.FormView.EditRowStyle%2A>|Die stileinstellungen für die Daten Datenzeile, wenn die <xref:System.Web.UI.WebControls.FormView> Steuerelement befindet sich im Bearbeitungsmodus befindet.|  
|<xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A>|Die stileinstellungen für die leere Datenzeile angezeigt, der <xref:System.Web.UI.WebControls.FormView> steuern, wenn die Datenquelle keine Datensätze enthält.|  
|<xref:System.Web.UI.WebControls.FormView.FooterStyle%2A>|Die stileinstellungen für die Fußzeile, der die <xref:System.Web.UI.WebControls.FormView> Steuerelement.|  
|<xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A>|Die stileinstellungen für die Kopfzeile der der <xref:System.Web.UI.WebControls.FormView> Steuerelement.|  
|<xref:System.Web.UI.WebControls.FormView.InsertRowStyle%2A>|Die stileinstellungen für die Daten Datenzeile, wenn die <xref:System.Web.UI.WebControls.FormView> Steuerelement befindet sich im Einfügemodus befindet.|  
|<xref:System.Web.UI.WebControls.FormView.PagerStyle%2A>|Die stileinstellungen für die Pagerzeile angezeigt, der <xref:System.Web.UI.WebControls.FormView> steuern, wenn das Pagingfeature aktiviert ist.|  
|<xref:System.Web.UI.WebControls.FormView.RowStyle%2A>|Die stileinstellungen für die Daten Datenzeile, wenn die <xref:System.Web.UI.WebControls.FormView> Steuerelement befindet sich im schreibgeschützten Modus.|  
  
<a name="events"></a>   
## <a name="events"></a>Ereignisse  
 Die <xref:System.Web.UI.WebControls.FormView> Steuerelement bietet mehrere Ereignisse, die Sie programmieren können. Dadurch können Sie eine benutzerdefinierte Routine ausgeführt wird, sobald ein Ereignis eintritt. Die folgende Tabelle enthält die Ereignisse, die von unterstützt die <xref:System.Web.UI.WebControls.FormView> Steuerelement.  
  
|event|Beschreibung |  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.FormView.ItemCommand>|Tritt auf, wenn innerhalb eines <xref:System.Web.UI.WebControls.FormView>-Steuerelements auf eine Schaltfläche geklickt wird. Dieses Ereignis wird häufig verwendet, um eine Aufgabe auszuführen, wenn eine Schaltfläche in das Steuerelement geklickt wird.|  
|<xref:System.Web.UI.WebControls.FormView.ItemCreated>|Tritt auf, nachdem alle <xref:System.Web.UI.WebControls.FormViewRow> Objekte werden erstellt, der <xref:System.Web.UI.WebControls.FormView> Steuerelement. Dieses Ereignis wird häufig verwendet, um die Werte eines Datensatzes zu ändern, bevor er angezeigt wird.|  
|<xref:System.Web.UI.WebControls.FormView.ItemDeleted>|Tritt auf, wenn eine Schaltfläche "löschen" (eine Schaltfläche mit der `CommandName` -Eigenschaft auf "Löschen" festgelegt) geklickt wird, allerdings nachdem das <xref:System.Web.UI.WebControls.FormView> Steuerelement löscht den Datensatz aus der Datenquelle. Dieses Ereignis wird häufig verwendet, um die Ergebnisse des Löschvorgangs zu überprüfen.|  
|<xref:System.Web.UI.WebControls.FormView.ItemDeleting>|Tritt auf, wenn eine Löschen-Schaltfläche, jedoch bevor geklickt wird die <xref:System.Web.UI.WebControls.FormView> Steuerelement löscht den Datensatz aus der Datenquelle. Dieses Ereignis wird häufig verwendet, um den Löschvorgang abzubrechen.|  
|<xref:System.Web.UI.WebControls.FormView.ItemInserted>|Tritt auf, wenn eine Schaltfläche Einfügen (eine Schaltfläche mit der `CommandName` -Eigenschaft auf "Insert" festgelegt) geklickt wird, allerdings nachdem das <xref:System.Web.UI.WebControls.FormView> Steuerelement einfügen des Datensatzes. Dieses Ereignis wird häufig verwendet, um die Ergebnisse der Insert-Vorgang zu überprüfen.|  
|<xref:System.Web.UI.WebControls.FormView.ItemInserting>|Tritt auf, wenn eine Einfügeschaltfläche, jedoch bevor geklickt wird die <xref:System.Web.UI.WebControls.FormView> Steuerelement einfügen des Datensatzes. Dieses Ereignis wird häufig verwendet, den Insert-Vorgang abgebrochen.|  
|<xref:System.Web.UI.WebControls.FormView.ItemUpdated>|Tritt auf, wenn eine Aktualisieren-Schaltfläche (eine Schaltfläche mit der `CommandName` -Eigenschaft auf "Aktualisieren" festgelegt) geklickt wird, allerdings nachdem das <xref:System.Web.UI.WebControls.FormView> -Steuerelement die Zeile aktualisiert. Dieses Ereignis wird häufig verwendet, um die Ergebnisse der Update-Vorgang zu überprüfen.|  
|<xref:System.Web.UI.WebControls.FormView.ItemUpdating>|Tritt auf, wenn eine Aktualisieren-Schaltfläche, jedoch bevor geklickt wird die <xref:System.Web.UI.WebControls.FormView> Steuerelement aktualisiert den Datensatz. Dieses Ereignis wird häufig verwendet, um den Updatevorgang abzubrechen.|  
|<xref:System.Web.UI.WebControls.FormView.ModeChanged>|Tritt ein, nachdem die <xref:System.Web.UI.WebControls.FormView> -Steuerelement ändert seine Modi (zu bearbeiten, einfügen oder nur-Lese Modus). Dieses Ereignis wird häufig verwendet, zum Ausführen einer Aufgabe bei der <xref:System.Web.UI.WebControls.FormView> Steuerelement Modus ändert.|  
|<xref:System.Web.UI.WebControls.FormView.ModeChanging>|Tritt auf, bevor die <xref:System.Web.UI.WebControls.FormView> -Steuerelement ändert seine Modi (zu bearbeiten, einfügen oder nur-Lese Modus). Dieses Ereignis wird häufig verwendet, eine die modusänderung abzubrechen.|  
|<xref:System.Web.UI.WebControls.FormView.PageIndexChanged>|Tritt ein, wenn auf eine der Pagerschaltflächen geklickt wird, allerdings nachdem das <xref:System.Web.UI.WebControls.FormView>-Steuerelement den Pagingvorgang behandelt hat. Dieses Ereignis wird häufig verwendet, wenn eine Aufgabe auszuführen, nachdem der Benutzer zu einem anderen Datensatz in das Steuerelement navigiert werden muss.|  
|<xref:System.Web.UI.WebControls.FormView.PageIndexChanging>|Tritt ein, wenn auf eine der Pagerschaltflächen geklickt wird, allerdings bevor das <xref:System.Web.UI.WebControls.FormView>-Steuerelement den Pagingvorgang behandelt. Dieses Ereignis wird häufig verwendet, um den Pagingvorgang abzubrechen.|  
  
<a name="accessibility"></a>   
## <a name="accessibility"></a>Zugriff  
 Weitere Informationen zur Verwendung dieses Steuerelement so konfigurieren, dass sie Markup generiert, das Accessibility Standards entspricht, finden Sie unter [Barrierefreiheit in Visual Studio und ASP.NET](http://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13) und [ASP.NET-Steuerelemente und Barrierefreiheit](http://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).  
  
<a name="applying_styles"></a>   
## <a name="applying-css-styles"></a>Anwenden von CSS-Stilen  
 Die <xref:System.Web.UI.WebControls.FormView> -Steuerelement können Sie die CSS-Stilregeln im Markup angeben. Wenn Sie Vorlagen verwenden, um die Darstellung Anpassen der <xref:System.Web.UI.WebControls.FormView> -Steuerelement, können Sie CSS-Formatvorlagen im Markup in den Vorlagen angeben. In diesem Fall ist keine zusätzliche äußere Tabelle erforderlich. Sie können verhindern, dass die Tabelle gerendert wird, indem Sie die Einstellung der <xref:System.Web.UI.WebControls.FormView.RenderOuterTable%2A> Eigenschaft `false`.  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Deklarative Syntax  
  
```  
<asp:FormView  
    AccessKey="string"  
    AllowPaging="True|False"  
    BackColor="color name|#dddddd"  
    BackImageUrl="uri"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    Caption="string"  
    CaptionAlign="NotSet|Top|Bottom|Left|Right"  
    CellPadding="integer"  
    CellSpacing="integer"  
    CssClass="string"  
    DataKeyNames="string"  
    DataMember="string"  
    DataSource="string"  
    DataSourceID="string"  
    DefaultMode="ReadOnly|Edit|Insert"  
    EmptyDataText="string"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    FooterText="string"  
    ForeColor="color name|#dddddd"  
    GridLines="None|Horizontal|Vertical|Both"  
    HeaderText="string"  
    Height="size"  
    HorizontalAlign="NotSet|Left|Center|Right|Justify"  
    ID="string"  
    OnDataBinding="DataBinding event handler"  
    OnDataBound="DataBound event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnItemCommand="ItemCommand event handler"  
    OnItemCreated="ItemCreated event handler"  
    OnItemDeleted="ItemDeleted event handler"  
    OnItemDeleting="ItemDeleting event handler"  
    OnItemInserted="ItemInserted event handler"  
    OnItemInserting="ItemInserting event handler"  
    OnItemUpdated="ItemUpdated event handler"  
    OnItemUpdating="ItemUpdating event handler"  
    OnLoad="Load event handler"  
    OnModeChanged="ModeChanged event handler"  
    OnModeChanging="ModeChanging event handler"  
    OnPageIndexChanged="PageIndexChanged event handler"  
    OnPageIndexChanging="PageIndexChanging event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    PageIndex="integer"  
    PagerSettings-FirstPageImageUrl="uri"  
    PagerSettings-FirstPageText="string"  
    PagerSettings-LastPageImageUrl="uri"  
    PagerSettings-LastPageText="string"  
    PagerSettings-Mode="NextPrevious|Numeric|NextPreviousFirstLast|  
        NumericFirstLast"  
    PagerSettings-NextPageImageUrl="uri"  
    PagerSettings-NextPageText="string"  
    PagerSettings-PageButtonCount="integer"  
    PagerSettings-Position="Bottom|Top|TopAndBottom"  
    PagerSettings-PreviousPageImageUrl="uri"  
    PagerSettings-PreviousPageText="string"  
    PagerSettings-Visible="True|False"  
    RenderTable="True|False"  
    runat="server"  
    SkinID="string"  
    Style="string"  
    TabIndex="integer"  
    ToolTip="string"  
    Visible="True|False"  
    Width="size"  
>  
        <EditItemTemplate>  
            <!-- child controls -->  
        </EditItemTemplate>  
        <EditRowStyle />  
        <EmptyDataRowStyle />  
        <EmptyDataTemplate>  
            <!-- child controls -->  
        </EmptyDataTemplate>  
        <FooterStyle />  
        <FooterTemplate>  
            <!-- child controls -->  
        </FooterTemplate>  
        <HeaderStyle />  
        <HeaderTemplate>  
            <!-- child controls -->  
        </HeaderTemplate>  
        <InsertItemTemplate>  
            <!-- child controls -->  
        </InsertItemTemplate>  
        <InsertRowStyle />  
        <ItemTemplate>  
            <!-- child controls -->  
        </ItemTemplate>  
        <PagerSettings  
            FirstPageImageUrl="uri"  
            FirstPageText="string"  
            LastPageImageUrl="uri"  
            LastPageText="string"  
            Mode="NextPrevious|Numeric|NextPreviousFirstLast|  
                NumericFirstLast"  
            NextPageImageUrl="uri"  
            NextPageText="string"  
            OnPropertyChanged="PropertyChanged event handler"  
            PageButtonCount="integer"  
            Position="Bottom|Top|TopAndBottom"  
            PreviousPageImageUrl="uri"  
            PreviousPageText="string"  
            Visible="True|False"  
        />  
        <PagerStyle />  
        <PagerTemplate>  
            <!-- child controls -->  
        </PagerTemplate>  
        <RowStyle />  
</asp:FormView>  
```  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie eine <xref:System.Web.UI.WebControls.FormView> Steuerelement zur Anzeige der Werte aus einer <xref:System.Web.UI.WebControls.SqlDataSource> Steuerelement.  
  
 [!code-aspx-csharp[FormViewSimple#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewSimple/CS/formviewsimplecs.aspx#1)]
 [!code-aspx-vb[FormViewSimple#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewSimple/VB/formviewsimplevb.aspx#1)]  
  
 Im folgenden Beispiel wird veranschaulicht, wie eine <xref:System.Web.UI.WebControls.FormView> Steuerelement zum Bearbeiten von vorhandener Datensätzen.  
  
> [!IMPORTANT]
>  Das Steuerelement in diesem Beispiel hat es sich um ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko dar. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[FormView#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormView/CS/formvieweditcs.aspx#1)]
 [!code-aspx-vb[FormView#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormView/VB/formvieweditvb.aspx#1)]  
  
 Im folgenden Beispiel wird veranschaulicht, wie eine <xref:System.Web.UI.WebControls.FormView> Steuerelement zum Einfügen neuer Datensätze.  
  
> [!IMPORTANT]
>  Das Steuerelement in diesem Beispiel hat es sich um ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko dar. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[FormViewInsertItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertItemTemplate/CS/formviewinsertitemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewInsertItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertItemTemplate/VB/formviewinsertitemtemplatevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
    <altmember cref="T:System.Web.UI.WebControls.GridView" />
    <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
    <altmember cref="T:System.Web.UI.WebControls.FormViewMode" />
    <altmember cref="T:System.Web.UI.WebControls.AccessDataSource" />
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSource" />
    <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.AllowPaging" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.CurrentMode" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.DataKeyNames" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.DefaultMode" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCreated" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCommand" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemDeleted" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemDeleting" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserting" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanged" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanging" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormView();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.FormView" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diesen Konstruktor initialisiert eine neue Instanz der dem <xref:System.Web.UI.WebControls.FormView> Klasse. Dynamisch hinzufügen eine <xref:System.Web.UI.WebControls.FormView> die Steuerung an eine Seite, erstellen Sie ein neues <xref:System.Web.UI.WebControls.FormView> Objekt, seine Eigenschaften festlegen, und fügen Sie es auf die <xref:System.Web.UI.Control.Controls%2A?displayProperty=nameWithType> Auflistung eines Containers zu steuern, wie z. B. <xref:System.Web.UI.WebControls.PlaceHolder>.  
  
   
  
## Examples  
 Im folgende Beispiel wird veranschaulicht, wie dynamisch Hinzufügen einer <xref:System.Web.UI.WebControls.FormView> Steuerelement zu einer Seite.  
  
 [!code-aspx-csharp[FormViewCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCtor/CS/formviewctorcs.aspx#1)]
 [!code-aspx-vb[FormViewCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCtor/VB/formviewctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="T:System.Web.UI.WebControls.PlaceHolder" />
      </Docs>
    </Member>
    <Member MemberName="AllowPaging">
      <MemberSignature Language="C#" Value="public virtual bool AllowPaging { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowPaging" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.AllowPaging" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowPaging As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowPaging { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowPaging : bool with get, set" Usage="System.Web.UI.WebControls.FormView.AllowPaging" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das Pagingfeature aktiviert ist, oder legt diesen fest.</summary>
        <value>
          <see langword="true" />, um das Pagingfeature zu aktivieren, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView> Steuerelement verfügt über integrierte Pagingfunktionen zur Verfügung, die einen Benutzer zum Navigieren zu einem anderen Datensatz in der Datenquelle zu ermöglichen. Das Pagingfeature kann verwendet werden, mit jedem Datenquellenobjekt, das unterstützt die <xref:System.Collections.ICollection?displayProperty=nameWithType> -Schnittstelle oder eine Datenquelle, die Paging unterstützt.  
  
 Um das Pagingfeature zu aktivieren, legen die <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> Eigenschaft `true`. Sie können die Gesamtzahl der Elemente in der zugrunde liegenden Datenquelle bestimmen, indem Sie mit der <xref:System.Web.UI.WebControls.FormView.PageCount%2A> Eigenschaft. Um den Index des derzeit angezeigten Elements zu bestimmen, verwenden die <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> Eigenschaft.  
  
 Wenn Paging aktiviert ist, eine zusätzliche Zeile, die die Pagerzeile aufgerufen wird automatisch die <xref:System.Web.UI.WebControls.FormView> Steuerelement. Die Pagerzeile enthält Steuerelemente für die Seitennavigation und kann am oben, unten, oder die oberen und unteren Rand des Steuerelements angezeigt werden. Die Pagerzeile verfügt über vier integrierte Pager Anzeigemodi. Die folgende Tabelle beschreibt die vier Modi.  
  
|Modus|Beschreibung |  
|----------|-----------------|  
|`PagerButton.NextPrevious`|Eine Gruppe von Paginierungssteuerelementen Schaltflächen zurück und weiter bestehen.|  
|`PagerButton.NextPreviousFirstLast`|Eine Gruppe von Paginierungssteuerelementen bestehend aus vorherigen, als Nächstes Schaltflächen erste und letzte.|  
|`PagerButton.Numeric`|Eine aus nummerierten Linkschaltflächen für den direkten Zugriff auf Seiten bestehende Gruppe von Paginierungssteuerelementen. Dies ist der Standardmodus.|  
|`PagerButton.NumericFirstLast`|Eine Gruppe von Paginierungssteuerelementen nummerierte und vor- und Nachnamen Linkschaltflächen bestehen.|  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.FormView> Steuerelement blendet die Pagerzeile automatisch aus, wenn die Datenquelle weniger als zwei Datensätze enthält.  
  
 Sie können die Einstellungen der Pagerzeile (z. B. den Pager-Anzeigemodus, die Anzahl der Seite enthält Links zu, wodurch das Pagersteuerelement textbezeichnung angezeigt) steuern, mit der <xref:System.Web.UI.WebControls.FormView.PagerSettings%2A> Eigenschaft. Um die Darstellung der Pagerzeile (einschließlich Hintergrundfarbe und Schriftfarbe) zu steuern, verwenden die <xref:System.Web.UI.WebControls.FormView.PagerStyle%2A> Eigenschaft. Die <xref:System.Web.UI.WebControls.FormView> Steuerelement auch können Sie eine benutzerdefinierte Vorlage für die Pagerzeile definieren. Weitere Informationen zum Erstellen einer benutzerdefinierten Pager-Zeile-Vorlage finden Sie unter <xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A>.  
  
 Die <xref:System.Web.UI.WebControls.FormView> Steuerelement bietet mehrere Ereignisse, die Sie verwenden können, um eine benutzerdefinierte Aktion ausführen, wenn Paging auftritt. In der folgende Tabelle sind die verfügbaren Ereignisse.  
  
|event|Beschreibung |  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.FormView.PageIndexChanged>|Tritt ein, wenn auf eine der Pagerschaltflächen geklickt wird, allerdings nachdem das <xref:System.Web.UI.WebControls.FormView>-Steuerelement den Pagingvorgang behandelt hat. Dieses Ereignis wird häufig verwendet, wenn eine Aufgabe auszuführen, nachdem der Benutzer zu einem anderen Datensatz in das Steuerelement navigiert werden muss.|  
|<xref:System.Web.UI.WebControls.FormView.PageIndexChanging>|Tritt ein, wenn auf eine der Pagerschaltflächen geklickt wird, allerdings bevor das <xref:System.Web.UI.WebControls.FormView>-Steuerelement den Pagingvorgang behandelt. Dieses Ereignis wird häufig verwendet, um den Pagingvorgang abzubrechen.|  
  
> [!NOTE]
>  Diese Ereignisse werden nicht ausgelöst, wenn Sie ändern die <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> Eigenschaft programmgesteuert.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> Eigenschaft zum Aktivieren des Pagingfeatures in einem <xref:System.Web.UI.WebControls.FormView> Steuerelement.  
  
 [!code-aspx-csharp[FormViewAllowPaging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewAllowPaging/CS/formviewallowpagingcs.aspx#1)]
 [!code-aspx-vb[FormViewAllowPaging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewAllowPaging/VB/formviewallowpagingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="BackImageUrl">
      <MemberSignature Language="C#" Value="public virtual string BackImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BackImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.BackImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BackImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ BackImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BackImageUrl : string with get, set" Usage="System.Web.UI.WebControls.FormView.BackImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die URL eines Bildes ab, das im Hintergrund eines <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelements angezeigt werden soll, oder legt diesen fest.</summary>
        <value>Die URL eines Bildes, das im Hintergrund des <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelements angezeigt werden soll. Der Standardwert ist eine leere Zeichenfolge ("") und gibt an, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.FormView.BackImageUrl%2A> -Eigenschaft an die URL zu einem Bild für die anzuzeigenden im Hintergrund eine <xref:System.Web.UI.WebControls.FormView> Steuerelement.  
  
> [!NOTE]
>  Wenn das angegebene Image kleiner ist als die <xref:System.Web.UI.WebControls.FormView> -Steuerelement, das Bild wird gekachelt, um im Hintergrund zu füllen. Wenn das Bild größer als das Steuerelement ist, wird das Bild zugeschnitten.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.BackImageUrl%2A> Eigenschaft zum Anzeigen eines benutzerdefinierten Images in den Hintergrund einer <xref:System.Web.UI.WebControls.FormView> Steuerelement.  
  
 [!code-aspx-csharp[FormViewBackImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewBackImageUrl/CS/formviewbackimageurlcs.aspx#1)]
 [!code-aspx-vb[FormViewBackImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewBackImageUrl/VB/formviewbackimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellPadding" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellSpacing" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.GridLines" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HorizontalAlign" />
      </Docs>
    </Member>
    <Member MemberName="BottomPagerRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewRow BottomPagerRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FormViewRow BottomPagerRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property BottomPagerRow As FormViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FormViewRow ^ BottomPagerRow { System::Web::UI::WebControls::FormViewRow ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BottomPagerRow : System.Web.UI.WebControls.FormViewRow" Usage="System.Web.UI.WebControls.FormView.BottomPagerRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das <see cref="T:System.Web.UI.WebControls.FormViewRow" />-Objekt ab, das die am unteren Rand des <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelements angezeigte Pagerzeile darstellt.</summary>
        <value>Ein <see cref="T:System.Web.UI.WebControls.FormViewRow" />-Objekt, das die am unteren Rand eines <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelements angezeigte Pagerzeile darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Paging aktiviert ist (wenn die <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> -Eigenschaftensatz auf `true`), eine zusätzliche Zeile, die die Pagerzeile aufgerufen wird automatisch angezeigt, der <xref:System.Web.UI.WebControls.FormView> Steuerelement. Die Pagerzeile enthält Steuerelemente, mit denen den Benutzer mit anderen Datensätzen navigieren und können am oben, unten oder die oberen und unteren Rand des Steuerelements angezeigt werden. Verwenden der <xref:System.Web.UI.WebControls.FormView.BottomPagerRow%2A> Eigenschaft, die den programmgesteuerten Zugriff auf die <xref:System.Web.UI.WebControls.FormViewRow> Objekt, das in der unten angezeigte Pagerzeile darstellt. die <xref:System.Web.UI.WebControls.FormView> Steuerelement.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.FormView.BottomPagerRow%2A> Eigenschaft ist erst verfügbar, nachdem die <xref:System.Web.UI.WebControls.FormView> Steuerelement erstellt, die unten angezeigte Pagerzeile in die <xref:System.Web.UI.WebControls.FormView.ItemCreated> Ereignis.  
  
 Diese Eigenschaft wird häufig verwendet, wenn Sie die unten angezeigte Pagerzeile, z. B. beim Hinzufügen von benutzerdefinierten Inhalts programmgesteuert zu bearbeiten möchten. Änderungen an der <xref:System.Web.UI.WebControls.FormView.BottomPagerRow%2A> Eigenschaft muss ausgeführt werden, nachdem die <xref:System.Web.UI.WebControls.FormViewRow> -Objekt, die unten angezeigte Pagerzeile darstellt, erstellt wurde, andernfalls die <xref:System.Web.UI.WebControls.FormView> Steuerelement überschreibt alle Änderungen.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.BottomPagerRow%2A> Eigenschaft, um die unten angezeigte Pagerzeile zuzugreifen eine <xref:System.Web.UI.WebControls.FormView> Steuerelement. Die Pagerzeile wird dann mit zusätzlichem Inhalt aktualisiert.  
  
 [!code-aspx-csharp[FormViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPagerTemplate/CS/formviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPagerTemplate/VB/formviewpagertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCreated" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="Caption">
      <MemberSignature Language="C#" Value="public virtual string Caption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Caption" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.Caption" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Caption As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Caption { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Caption : string with get, set" Usage="System.Web.UI.WebControls.FormView.Caption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Text ab, der in einem HTML-Beschriftungselement eines <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelements gerendert werden soll, oder legt diesen Text fest. Diese Eigenschaft wird bereitgestellt, um Benutzern von Hilfsgeräten die Verwendung des Steuerelements zu erleichtern.</summary>
        <value>Eine Zeichenfolge, die den Text darstellt, der in einem HTML-Beschriftungselement eines <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelements gerendert werden soll. Der Standardwert ist eine leere Zeichenfolge („“).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.FormView.Caption%2A> Eigenschaft zum Angeben des Texts in einem HTML-Beschriftungselement Rendern einer <xref:System.Web.UI.WebControls.FormView> Steuerelement. Der Text, den Sie angeben, enthält Hilfsgeräten mit einer Beschreibung der Tabelle, die verwendet werden kann, um das Steuerelement besser zugänglich zu machen.  
  
 Weitere Unterstützung für die <xref:System.Web.UI.WebControls.FormView> Steuerelement erfolgt über die <xref:System.Web.UI.WebControls.FormView.CaptionAlign%2A> Eigenschaft. Verwenden der <xref:System.Web.UI.WebControls.FormView.CaptionAlign%2A> -Eigenschaft an die Ausrichtung des HTML-Beschriftungselements in einem <xref:System.Web.UI.WebControls.FormView> Steuerelement.  
  
 Der Wert dieser Eigenschaft, wenn festgelegt, kann mithilfe eines Designers Tools automatisch zu einer Ressourcendatei gespeichert werden. Weitere Informationen finden Sie unter <xref:System.ComponentModel.LocalizableAttribute> und [Globalisierung und Lokalisierung](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.Caption%2A> Eigenschaft zum Angeben des Texts für HTML-Beschriftungselements in gerenderte einem <xref:System.Web.UI.WebControls.FormView> Steuerelement.  
  
 [!code-aspx-csharp[FormViewCaption#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCaption/CS/formviewcaptioncs.aspx#1)]
 [!code-aspx-vb[FormViewCaption#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCaption/VB/formviewcaptionvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.CaptionAlign" />
      </Docs>
    </Member>
    <Member MemberName="CaptionAlign">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableCaptionAlign CaptionAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.TableCaptionAlign CaptionAlign" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.CaptionAlign" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CaptionAlign As TableCaptionAlign" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableCaptionAlign CaptionAlign { System::Web::UI::WebControls::TableCaptionAlign get(); void set(System::Web::UI::WebControls::TableCaptionAlign value); };" />
      <MemberSignature Language="F#" Value="member this.CaptionAlign : System.Web.UI.WebControls.TableCaptionAlign with get, set" Usage="System.Web.UI.WebControls.FormView.CaptionAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableCaptionAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die horizontale oder vertikale Position des HTML-Beschriftungselements in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement ab oder legt sie fest. Diese Eigenschaft wird bereitgestellt, um Benutzern von Hilfsgeräten die Verwendung des Steuerelements zu erleichtern.</summary>
        <value>Einer der <see cref="T:System.Web.UI.WebControls.TableCaptionAlign" />-Werte. Der Standardwert ist <see langword="TableCaptionAlign.NotSet" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.FormView.CaptionAlign%2A> -Eigenschaft an die horizontale oder vertikale Position des HTML-Beschriftungselements in einem <xref:System.Web.UI.WebControls.FormView> Steuerelement. Diese Eigenschaft wird bereitgestellt, um Benutzern von Hilfsgeräten die Verwendung des Steuerelements zu erleichtern.  
  
 Diese Eigenschaft wird festgelegt durch eines der <xref:System.Web.UI.WebControls.TableCaptionAlign> -Enumerationswerte fest. Die folgende Tabelle enthält die möglichen Werte.  
  
|Wert|Beschreibung |  
|-----------|-----------------|  
|`TableCaptionAlign.Bottom`|Das Beschriftungselement wird am unteren Tabellenrand ausgerichtet.|  
|`TableCaptionAlign.Left`|Das Beschriftungselement wird an der linken Seite der Tabelle ausgerichtet.|  
|`TableCaptionAlign.NotSet`|Das Beschriftungselement Ausrichtung ist nicht festgelegt.|  
|`TableCaptionAlign.Right`|Das Beschriftungselement wird an der rechten Seite der Tabelle ausgerichtet.|  
|`TableCaptionAlign.Top`|Das Beschriftungselement wird am oberen Tabellenrand ausgerichtet.|  
  
> [!NOTE]
>  Wenn diese Eigenschaft auf festgelegt ist `TableCaptionAlign.NotSet`, wird der Standardwert des Browsers verwendet.  
  
 Weitere Unterstützung für die <xref:System.Web.UI.WebControls.FormView> Steuerelement erfolgt über die <xref:System.Web.UI.WebControls.FormView.Caption%2A> Eigenschaft. Verwenden der <xref:System.Web.UI.WebControls.FormView.Caption%2A> Eigenschaft zum Angeben des Texts in einem HTML-Beschriftungselement Rendern einer <xref:System.Web.UI.WebControls.FormView> Steuerelement.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.CaptionAlign%2A> Eigenschaft, um anzugeben, dass die HTML-Beschriftungselement eine <xref:System.Web.UI.WebControls.FormView> Steuerelement auf der linken Seite des Steuerelements gerendert werden soll.  
  
 [!code-aspx-csharp[FormViewCaption#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCaption/CS/formviewcaptioncs.aspx#1)]
 [!code-aspx-vb[FormViewCaption#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCaption/VB/formviewcaptionvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der angegebene Wert ist keiner der <see cref="T:System.Web.UI.WebControls.TableCaptionAlign" />-Enumerationswerte.</exception>
        <altmember cref="T:System.Web.UI.WebControls.TableCaptionAlign" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.Caption" />
      </Docs>
    </Member>
    <Member MemberName="CellPadding">
      <MemberSignature Language="C#" Value="public virtual int CellPadding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CellPadding" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.CellPadding" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CellPadding As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CellPadding { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CellPadding : int with get, set" Usage="System.Web.UI.WebControls.FormView.CellPadding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Abstand zwischen dem Inhalt einer Zelle und ihrem Rahmen ab oder legt diesen fest.</summary>
        <value>Der Abstand in Pixel zwischen Inhalt und Rahmen einer Zelle. Der Standardwert ist -1 und gibt an, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.FormView.CellPadding%2A> Eigenschaft, um den Abstand zwischen dem Inhalt einer Zelle und Ihrem Rahmen zu steuern. Der angegebene Leerraum wird allen vier Seiten der Zelle hinzugefügt.  
  
 Alle Zellen in der gleichen Spalte von einem <xref:System.Web.UI.WebControls.FormView> Steuerelement die gleiche Breite aufweisen. Der Leerraum wird angewendet, auf die breiteste Zelle aus, und alle anderen Zellen in der Spalte werden an die Zellenbreite angepasst. Auf ähnliche Weise ist für alle Zellen in der gleichen Zeile die gleiche Höhe. Der Leerraum wird angewendet, auf die höchste Zelle in der Zeile, und alle anderen Zellen in der Zeile an, Zellenhöhe angepasst werden. Größen der einzelnen Zelle können nicht angegeben werden.  
  
 Verwenden Sie zum Anpassen der Abstände zwischen den Zellen der <xref:System.Web.UI.WebControls.FormView.CellSpacing%2A> Eigenschaft.  
  
> [!NOTE]
>  Wenn diese Eigenschaft nicht festgelegt ist, wird der Standardwert des Browsers verwendet.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.CellPadding%2A> Eigenschaft, um die Größe des Abstands zwischen dem Inhalt einer Zelle und Ihrem Rahmen anzugeben.  
  
 [!code-aspx-csharp[FormViewCellPadding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCellPadding/CS/formviewcellpaddingcs.aspx#1)]
 [!code-aspx-vb[FormViewCellPadding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCellPadding/VB/formviewcellpaddingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.BackImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellSpacing" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.GridLines" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HorizontalAlign" />
      </Docs>
    </Member>
    <Member MemberName="CellSpacing">
      <MemberSignature Language="C#" Value="public virtual int CellSpacing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CellSpacing" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.CellSpacing" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CellSpacing As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CellSpacing { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CellSpacing : int with get, set" Usage="System.Web.UI.WebControls.FormView.CellSpacing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Abstand zwischen den Zellen ab oder legt diesen fest.</summary>
        <value>Der Abstand zwischen den Zellen in Pixel. Der Standardwert ist 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.FormView.CellSpacing%2A> Eigenschaft, um den Abstand zwischen angrenzenden Zellen im Steuern der <xref:System.Web.UI.WebControls.FormView> Steuerelement. Dieser Abstand wird vertikal und horizontal angewendet. Der Abstand zwischen Zellen, die für das gesamte Steuerelement einheitlich ist. Einzelne Zellenabstand zwischen Zeilen oder Spalten kann nicht angegeben werden.  
  
> [!NOTE]
>  Wenn Sie diese Eigenschaft auf einen Wert größer 0 festgelegt, und klicken Sie dann die <xref:System.Web.UI.WebControls.FormView.GridLines%2A> Eigenschaft ein Wert, der die Zellrahmen angezeigt wird, wird eine Lücke zwischen den Rahmenlinien angrenzender Zellen angezeigt. In diesem Fall die <xref:System.Web.UI.WebControls.FormView.CellSpacing%2A> Eigenschaft steuert die Größe des Abstands.  
  
 Verwenden Sie zum Anpassen des Abstands zwischen dem Inhalt einer Zelle und dem Rahmen der <xref:System.Web.UI.WebControls.FormView.CellPadding%2A> Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.CellSpacing%2A> Eigenschaft, um die Größe des Abstands zwischen angrenzenden Zellen anzugeben.  
  
 [!code-aspx-csharp[FormViewCellPadding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCellPadding/CS/formviewcellpaddingcs.aspx#1)]
 [!code-aspx-vb[FormViewCellPadding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCellPadding/VB/formviewcellpaddingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.BackImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellPadding" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.GridLines" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HorizontalAlign" />
      </Docs>
    </Member>
    <Member MemberName="ChangeMode">
      <MemberSignature Language="C#" Value="public void ChangeMode (System.Web.UI.WebControls.FormViewMode newMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ChangeMode(valuetype System.Web.UI.WebControls.FormViewMode newMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.ChangeMode(System.Web.UI.WebControls.FormViewMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChangeMode (newMode As FormViewMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ChangeMode(System::Web::UI::WebControls::FormViewMode newMode);" />
      <MemberSignature Language="F#" Value="member this.ChangeMode : System.Web.UI.WebControls.FormViewMode -&gt; unit" Usage="formView.ChangeMode newMode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newMode" Type="System.Web.UI.WebControls.FormViewMode" />
      </Parameters>
      <Docs>
        <param name="newMode">Einer der <see cref="T:System.Web.UI.WebControls.FormViewMode" />-Enumerationswerte.</param>
        <summary>Schaltet das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement in den angegebenen Dateneingabemodus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.FormView.ChangeMode%2A> Methode, um programmgesteuert Umschalten der <xref:System.Web.UI.WebControls.FormView> -Steuerelement zwischen Bearbeitungsmodus, Einfügemodus und nur-Lese Modus. Diese Methode wird auch aktualisiert die <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> Eigenschaft mit dem angegebenen Modus. Die folgende Tabelle enthält die Werte der anderen Modus.  
  
|Modus|Beschreibung |  
|----------|-----------------|  
|`FormViewMode.Edit`|Die <xref:System.Web.UI.WebControls.FormView> Steuerelement befindet sich im Bearbeitungsmodus befindet, die dem Benutzer ermöglicht, die Werte eines Datensatzes zu aktualisieren.|  
|`FormViewMode.Insert`|Die <xref:System.Web.UI.WebControls.FormView> Steuerelement befindet sich im Einfügemodus, der dem Benutzer ermöglicht, einen neuen Datensatz mit der Datenquelle hinzuzufügen.|  
|`FormView.ReadOnly`|Die <xref:System.Web.UI.WebControls.FormView> Steuerelement befindet sich im schreibgeschützten Modus, die den normalen Anzeigemodus ist.|  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.FormView.ModeChanged> und <xref:System.Web.UI.WebControls.FormView.ModeChanging> Ereignisse werden nicht ausgelöst, wenn diese Methode aufgerufen wird.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.ChangeMode%2A> -Methode zur Rückgabe der <xref:System.Web.UI.WebControls.FormView> Steuerelement schreibgeschützten Modus, wenn der Benutzer zu einem anderen Datensatz wechselt.  
  
 [!code-aspx-csharp[FormViewChangeMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewChangeMode/CS/formviewchangemodecs.aspx#1)]
 [!code-aspx-vb[FormViewChangeMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewChangeMode/VB/formviewchangemodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewMode" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CurrentMode" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanging" />
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected override int CreateChildControls (System.Collections.IEnumerable dataSource, bool dataBinding);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 CreateChildControls(class System.Collections.IEnumerable dataSource, bool dataBinding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.CreateChildControls(System.Collections.IEnumerable,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateChildControls (dataSource As IEnumerable, dataBinding As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int CreateChildControls(System::Collections::IEnumerable ^ dataSource, bool dataBinding);" />
      <MemberSignature Language="F#" Value="override this.CreateChildControls : System.Collections.IEnumerable * bool -&gt; int" Usage="formView.CreateChildControls (dataSource, dataBinding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Collections.IEnumerable" />
        <Parameter Name="dataBinding" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dataSource">Ein <see cref="T:System.Collections.IEnumerable" />, das die Datenquelle darstellt, die zum Erstellen der Steuerelementhierarchie verwendet wird.</param>
        <param name="dataBinding">
          <see langword="true" /> zeigt an, dass die Steuerelementhierarchie direkt aus der Datenquelle erstellt wird; <see langword="false" /> zeigt an, dass die Steuerelementhierarchie aus dem Ansichtszustand erstellt wird.</param>
        <summary>Erstellt die Steuerelementhierarchie, mit der das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement unter Verwendung der angegebenen Datenquelle gerendert wird.</summary>
        <returns>Die Anzahl der unter Verwendung der Datenquelle erstellten Elemente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView.CreateChildControls%28System.Collections.IEnumerable%2CSystem.Boolean%29> Methode ist eine Hilfsmethode wird aufgerufen, indem die <xref:System.Web.UI.WebControls.FormView> Steuerelement erstellt die Steuerelementhierarchie für das <xref:System.Web.UI.WebControls.FormView> Steuerelement. Wenn die `dataBinding` Parameter `true`, Datenbindung erfolgt, bevor die Hierarchie der Steuerelemente erstellt wird.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Der Wert der <see cref="T:System.Web.UI.DataSourceView" /> der <see cref="T:System.Web.UI.IDataSource" />, an die das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement gebunden ist, beträgt <see langword="null" />.</exception>
        <block subset="none" type="overrides">
          <para>Beim Erweitern der <see cref="T:System.Web.UI.WebControls.FormView" /> -Klasse, Sie können diese Methode, um das Erstellen eigener Steuerelementhierarchie überschreiben.</para>
        </block>
        <altmember cref="T:System.Collections.IEnumerable" />
        <altmember cref="M:System.Web.UI.Control.CreateChildControls" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlStyle">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.Style CreateControlStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.Style CreateControlStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.CreateControlStyle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlStyle () As Style" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::Style ^ CreateControlStyle();" />
      <MemberSignature Language="F#" Value="override this.CreateControlStyle : unit -&gt; System.Web.UI.WebControls.Style" Usage="formView.CreateControlStyle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt ein standardmäßiges Tabellenformatobjekt für das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement.</summary>
        <returns>Eine <see cref="T:System.Web.UI.WebControls.Style" />-Klasse, die das Standardtabellenformat für das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView.CreateControlStyle%2A> Methode ist eine Hilfsmethode wird aufgerufen, indem die <xref:System.Web.UI.WebControls.FormView> Steuerelement seine standardmäßiges Tabellenformatobjekt erstellt. Zusätzlich zum Festlegen der Standard-Format eine <xref:System.Web.UI.WebControls.TableStyle> Objekt ist, wird diese Methode legt auch fest. die <xref:System.Web.UI.WebControls.FormView.CellPadding%2A> Eigenschaft auf 0.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Beim Erweitern der <see cref="T:System.Web.UI.WebControls.FormView" /> -Klasse, Sie können diese Methode zum Erstellen eigener Standardstil überschreiben.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="T:System.Web.UI.WebControls.TableStyle" />
      </Docs>
    </Member>
    <Member MemberName="CreateDataSourceSelectArguments">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.CreateDataSourceSelectArguments" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDataSourceSelectArguments () As DataSourceSelectArguments" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::DataSourceSelectArguments ^ CreateDataSourceSelectArguments();" />
      <MemberSignature Language="F#" Value="override this.CreateDataSourceSelectArguments : unit -&gt; System.Web.UI.DataSourceSelectArguments" Usage="formView.CreateDataSourceSelectArguments " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceSelectArguments</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt das <see cref="T:System.Web.UI.DataSourceSelectArguments" />-Objekt mit den Argumenten, die zur Verarbeitung an die Datenquelle übergeben werden.</summary>
        <returns>Ein <see cref="T:System.Web.UI.DataSourceSelectArguments" />, das die Argumente enthält, die an die Datenquelle übergeben werden.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView.CreateDataSourceSelectArguments%2A> Methode ist eine Hilfsmethode wird aufgerufen, indem die <xref:System.Web.UI.WebControls.FormView> -Steuerelement zum Erstellen der <xref:System.Web.UI.DataSourceSelectArguments> -Objekt mit den Argumenten übergeben, mit der Datenquelle. In dieser Implementierung die <xref:System.Web.UI.DataSourceSelectArguments> Objekt die Argumente für Pagingvorgänge enthält.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Beim Erweitern der <see cref="T:System.Web.UI.WebControls.FormView" /> -Klasse können Sie überschreiben diese Methode, um Ihre eigenen Werte angeben, die an die Datenquelle übergeben werden.</para>
        </block>
        <altmember cref="T:System.Web.UI.DataSourceSelectArguments" />
        <altmember cref="M:System.Web.UI.WebControls.DataBoundControl.CreateDataSourceSelectArguments" />
      </Docs>
    </Member>
    <Member MemberName="CreateRow">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.FormViewRow CreateRow (int itemIndex, System.Web.UI.WebControls.DataControlRowType rowType, System.Web.UI.WebControls.DataControlRowState rowState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.FormViewRow CreateRow(int32 itemIndex, valuetype System.Web.UI.WebControls.DataControlRowType rowType, valuetype System.Web.UI.WebControls.DataControlRowState rowState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.CreateRow(System.Int32,System.Web.UI.WebControls.DataControlRowType,System.Web.UI.WebControls.DataControlRowState)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateRow (itemIndex As Integer, rowType As DataControlRowType, rowState As DataControlRowState) As FormViewRow" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::FormViewRow ^ CreateRow(int itemIndex, System::Web::UI::WebControls::DataControlRowType rowType, System::Web::UI::WebControls::DataControlRowState rowState);" />
      <MemberSignature Language="F#" Value="abstract member CreateRow : int * System.Web.UI.WebControls.DataControlRowType * System.Web.UI.WebControls.DataControlRowState -&gt; System.Web.UI.WebControls.FormViewRow&#xA;override this.CreateRow : int * System.Web.UI.WebControls.DataControlRowType * System.Web.UI.WebControls.DataControlRowState -&gt; System.Web.UI.WebControls.FormViewRow" Usage="formView.CreateRow (itemIndex, rowType, rowState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemIndex" Type="System.Int32" />
        <Parameter Name="rowType" Type="System.Web.UI.WebControls.DataControlRowType" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
      </Parameters>
      <Docs>
        <param name="itemIndex">Der nullbasierte Index des anzuzeigenden Datenelements.</param>
        <param name="rowType">Einer der <see cref="T:System.Web.UI.WebControls.DataControlRowType" />-Enumerationswerte.</param>
        <param name="rowState">Eine bitweise Kombination der <see cref="T:System.Web.UI.WebControls.DataControlRowState" />-Enumerationswerte.</param>
        <summary>Erstellt ein <see cref="T:System.Web.UI.WebControls.FormViewRow" />-Objekt mit dem angegebenen Elementindex, Zeilentyp und Zeilenzustand.</summary>
        <returns>Ein <see cref="T:System.Web.UI.WebControls.FormViewRow" /> mit dem angegebenen Elementindex, Zeilentyp und Zeilenzustand.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView.CreateRow%2A> Methode ist eine Hilfsmethode wird aufgerufen, indem die <xref:System.Web.UI.WebControls.FormView> -Steuerelement zum Erstellen einer <xref:System.Web.UI.WebControls.FormViewRow> Objekt verwendet, um eine Zeile innerhalb des Steuerelements darstellt.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Beim Erweitern der <see cref="T:System.Web.UI.WebControls.FormView" /> -Klasse, Sie können diese Methode zurückgibt Überschreiben einer <see cref="T:System.Web.UI.WebControls.FormViewRow" /> Objekt mit benutzerdefinierten Einstellungen.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
        <altmember cref="T:System.Web.UI.WebControls.DataControlRowType" />
        <altmember cref="T:System.Web.UI.WebControls.DataControlRowState" />
      </Docs>
    </Member>
    <Member MemberName="CreateTable">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.Table CreateTable ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.Table CreateTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.CreateTable" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateTable () As Table" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::Table ^ CreateTable();" />
      <MemberSignature Language="F#" Value="abstract member CreateTable : unit -&gt; System.Web.UI.WebControls.Table&#xA;override this.CreateTable : unit -&gt; System.Web.UI.WebControls.Table" Usage="formView.CreateTable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Table</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt die enthaltende Tabelle für das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement.</summary>
        <returns>Eine <see cref="T:System.Web.UI.WebControls.Table" />, die die enthaltende Tabelle für das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView.CreateTable%2A> Methode ist eine Hilfsmethode wird aufgerufen, indem die <xref:System.Web.UI.WebControls.FormView> Steuerelement zum Erstellen einer Tabelle, die als Container für das Steuerelement fungiert.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Table" />
      </Docs>
    </Member>
    <Member MemberName="CurrentMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.FormViewMode CurrentMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.FormViewMode CurrentMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.CurrentMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentMode As FormViewMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::FormViewMode CurrentMode { System::Web::UI::WebControls::FormViewMode get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentMode : System.Web.UI.WebControls.FormViewMode" Usage="System.Web.UI.WebControls.FormView.CurrentMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den aktuellen Dateneingabemodus des <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelements ab.</summary>
        <value>Einer der <see cref="T:System.Web.UI.WebControls.FormViewMode" />-Werte.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> Eigenschaft, um zu bestimmen, ob die <xref:System.Web.UI.WebControls.FormView> Steuerelement befindet sich im bearbeiten, einfügen oder nur-Lese Modus. Die folgende Tabelle enthält die Werte der anderen Modus.  
  
|Modus|Beschreibung |  
|----------|-----------------|  
|`FormViewMode.Edit`|Die <xref:System.Web.UI.WebControls.FormView> Steuerelement befindet sich im Bearbeitungsmodus befindet, die dem Benutzer ermöglicht, die Werte eines Datensatzes zu aktualisieren.|  
|`FormViewMode.Insert`|Die <xref:System.Web.UI.WebControls.FormView> Steuerelement befindet sich im Einfügemodus, der dem Benutzer ermöglicht, einen neuen Datensatz mit der Datenquelle hinzuzufügen.|  
|`FormView.ReadOnly`|Die <xref:System.Web.UI.WebControls.FormView> Steuerelement befindet sich im schreibgeschützten Modus, die den normalen Anzeigemodus ist.|  
  
 Dieser Wert wird normalerweise automatisch vom festgelegt, die <xref:System.Web.UI.WebControls.FormView> steuern, wenn die Schaltflächen neu, Update, Insert, Delete oder "Abbrechen" geklickt wird. Wenn die <xref:System.Web.UI.WebControls.FormView> -Steuerelement ändert seine Modi als Reaktion auf eine Aktion, die Ereignisse in der folgenden Tabelle werden ausgelöst. Dadurch können Sie einen benutzerdefinierten Ereignishandler zu erstellen, der die entsprechende Routine durchführt, wenn das Ereignis eintritt.  
  
|event|Beschreibung |  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.FormView.ModeChanged>|Tritt auf, wenn die <xref:System.Web.UI.WebControls.FormView> Steuerelement Modus ändert, allerdings erst nachdem der Modus ändert. Dieses Ereignis wird häufig zum Ausführen einer Aufgabe verwendet immer die <xref:System.Web.UI.WebControls.FormView> Steuerelement Modus ändert.|  
|<xref:System.Web.UI.WebControls.FormView.ModeChanging>|Tritt auf, wenn die <xref:System.Web.UI.WebControls.FormView> Steuerelement Modus ändert, aber vor der Modus ändert. Dieses Ereignis wird häufig verwendet, um die Änderung abzubrechen.|  
  
 **Beachten Sie** diese Ereignisse werden nicht ausgelöst, wenn Sie den Modus programmgesteuert mithilfe von Ändern der <xref:System.Web.UI.WebControls.FormView.ChangeMode%2A> Methode.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> Eigenschaft, um zu bestimmen, ob die <xref:System.Web.UI.WebControls.FormView> Steuerelement befindet sich im bearbeiten, einfügen oder nur-Lese Modus. Wenn der Benutzer versucht, navigieren Sie zu einem anderen Datensatz While der <xref:System.Web.UI.WebControls.FormView> Steuerelement im Bearbeitungsmodus befindet, wird der Pagingvorgang abgebrochen.  
  
 [!code-aspx-csharp[FormViewCurrentMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCurrentMode/CS/formviewcurrentmodecs.aspx#1)]
 [!code-aspx-vb[FormViewCurrentMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCurrentMode/VB/formviewcurrentmodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewMode" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DefaultMode" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.ChangeMode(System.Web.UI.WebControls.FormViewMode)" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanging" />
      </Docs>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="public override sealed void DataBind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DataBind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.DataBind" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub DataBind ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void DataBind();" />
      <MemberSignature Language="F#" Value="override this.DataBind : unit -&gt; unit" Usage="formView.DataBind " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Bindet die Datenquelle an das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.FormView.DataBind> Methode, um Daten aus einer Datenquelle zum Binden der <xref:System.Web.UI.WebControls.FormView> Steuerelement. Diese Methode löst alle Ausdrücke in der Datenbindung in der aktiven Vorlage des Steuerelements.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" />
      </Docs>
    </Member>
    <Member MemberName="DataItem">
      <MemberSignature Language="C#" Value="public virtual object DataItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataItem" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DataItem" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DataItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ DataItem { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataItem : obj" Usage="System.Web.UI.WebControls.FormView.DataItem" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IDataItemContainer.DataItem</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das an das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement gebundene Datenelement ab.</summary>
        <value>Ein <see cref="T:System.Object" />, das das an das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement gebundene Datenelement darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.FormView.DataItem%2A> -Eigenschaft auf das Datenelement gebunden wird, um die <xref:System.Web.UI.WebControls.FormView> Steuerelement. Das Datenelement wird häufig verwendet, um die Feldwerte des aktuellen Datensatzes direkt zuzugreifen. Der Typ des der <xref:System.Object> zurückgegeben, die von dieser Eigenschaft variiert je nach Datenquelle. Z. B., wenn eine <xref:System.Web.UI.WebControls.SqlDataSource> -Steuerelement gebunden ist, die <xref:System.Web.UI.WebControls.FormView> -Steuerelement, ein <xref:System.Data.DataRowView> Objekt zurückgegeben.  
  
> [!NOTE]
>  Diese Eigenschaft ist nur aus, nach der Datenbindung verfügbar. Bevor Daten Bindung auftritt, gibt diese Eigenschaft `null`. Diese Eigenschaft ist auch nicht anwendbar, wenn die <xref:System.Web.UI.WebControls.FormView> Steuerelement im Einfügemodus und gibt `null`.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.DataItem%2A> Eigenschaft, um den Wert eines Felds im Datenelement zu ermitteln.  
  
 [!code-aspx-csharp[FormViewCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCtor/CS/formviewctorcs.aspx#1)]
 [!code-aspx-vb[FormViewCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCtor/VB/formviewctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="Overload:System.Web.UI.DataBinder.Eval" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataItemCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataItemIndex" />
      </Docs>
    </Member>
    <Member MemberName="DataItemCount">
      <MemberSignature Language="C#" Value="public int DataItemCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DataItemCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DataItemCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataItemCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DataItemCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.DataItemCount : int" Usage="System.Web.UI.WebControls.FormView.DataItemCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der Datenelemente in der Datenquelle ab.</summary>
        <value>Die Anzahl der Datenelemente in der Datenquelle.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.FormView.DataItemCount%2A> Eigenschaft, um die Anzahl der Datenelemente, die in der Datenquelle zu ermitteln. Diese Eigenschaft enthält den gleichen Wert wie die <xref:System.Web.UI.WebControls.FormView.PageCount%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataItem" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataItemIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
      </Docs>
    </Member>
    <Member MemberName="DataItemIndex">
      <MemberSignature Language="C#" Value="public virtual int DataItemIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DataItemIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DataItemIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DataItemIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int DataItemIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.DataItemIndex : int" Usage="System.Web.UI.WebControls.FormView.DataItemIndex" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IDataItemContainer.DataItemIndex</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Index des an das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement gebundenen Datenelements aus der Datenquelle ab.</summary>
        <value>Der Index des an das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement gebundenen Datenelements aus der Datenquelle.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.FormView.DataItemIndex%2A> -Eigenschaft bestimmt den Index des Datenelements gebunden, um die <xref:System.Web.UI.WebControls.FormView> Steuerelement aus der Datenquelle. Diese Eigenschaft enthält den gleichen Wert wie die <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> Eigenschaft.  
  
> [!NOTE]
>  Diese Eigenschaft ist nicht anwendbar, wenn die <xref:System.Web.UI.WebControls.FormView> Steuerelement befindet sich im Einfügemodus befindet. Wenn das Steuerelement im Einfügemodus befindet, wird die <xref:System.Web.UI.WebControls.FormView.DataItemIndex%2A> Eigenschaft gibt-1 zurück.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataItem" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataItemCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
      </Docs>
    </Member>
    <Member MemberName="DataKey">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataKey DataKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKey DataKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DataKey" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DataKey As DataKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::DataKey ^ DataKey { System::Web::UI::WebControls::DataKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataKey : System.Web.UI.WebControls.DataKey" Usage="System.Web.UI.WebControls.FormView.DataKey" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundItemControl.DataKey</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein <see cref="T:System.Web.UI.WebControls.DataKey" />-Objekt ab, das den Primärschlüssel des angezeigten Datensatzes darstellt.</summary>
        <value>Ein <see cref="T:System.Web.UI.WebControls.DataKey" />-Objekt, das den Primärschlüssel des angezeigten Datensatzes darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei der <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> Eigenschaft festgelegt ist, die <xref:System.Web.UI.WebControls.FormView> -Steuerelement erstellt automatisch eine <xref:System.Web.UI.WebControls.DataKey> Objekt, das Schlüssel/Wert-Paare des Felds oder der Felder aufgeführt, die enthält, die <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> -Eigenschaft für den aktuellen Datensatz. Verwenden der <xref:System.Web.UI.WebControls.FormView.DataKey%2A> Eigenschaft abrufen <xref:System.Web.UI.WebControls.DataKey> Objekt. Diese Eigenschaft wird häufig verwendet, um die Schlüssel und die entsprechenden Werte für die im angegebenen Felder abzurufen der <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> Eigenschaft.  
  
> [!NOTE]
>  Als abgekürztes, können Sie auch die <xref:System.Web.UI.WebControls.FormView.SelectedValue%2A> -Eigenschaft bestimmt den Wert des ersten Schlüsselfelds der <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.DataKey%2A> Eigenschaft, um den Wert des Schlüsselfelds zu ermitteln.  
  
 [!code-aspx-csharp[FormViewDataKey#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewDataKey/CS/formviewdatakeycs.aspx#1)]
 [!code-aspx-vb[FormViewDataKey#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewDataKey/VB/formviewdatakeyvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataKeyNames" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.SelectedValue" />
      </Docs>
    </Member>
    <Member MemberName="DataKeyNames">
      <MemberSignature Language="C#" Value="public virtual string[] DataKeyNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] DataKeyNames" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DataKeyNames" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataKeyNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::String ^&gt; ^ DataKeyNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataKeyNames : string[] with get, set" Usage="System.Web.UI.WebControls.FormView.DataKeyNames" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataKeyNames</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataFieldEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.StringArrayConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Array ab, das die Namen der Schlüsselfelder für die Datenquelle enthält.</summary>
        <value>Ein Array, das die Namen der Schlüsselfelder für die Datenquelle enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> Eigenschaft, um eine durch Trennzeichen getrennte Liste von Feldnamen anzugeben, die den Primärschlüssel der Datenquelle darstellen. Bei der <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> Eigenschaft festgelegt ist, die <xref:System.Web.UI.WebControls.FormView> -Steuerelement erstellt automatisch eine <xref:System.Web.UI.WebControls.DataKey> Objekt, das Schlüssel/Wert-Paare des Felds oder der Felder aufgeführt, die enthält, die <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> -Eigenschaft für den aktuellen Datensatz. Die <xref:System.Web.UI.WebControls.DataKey> Objekt befindet sich dann in der <xref:System.Web.UI.WebControls.FormView.DataKey%2A> Eigenschaft.  
  
> [!NOTE]
>  Müssen Sie festlegen, die <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> -Eigenschaft für den integrierten aktualisieren, löschen und Einfügen von Funktionen der <xref:System.Web.UI.WebControls.FormView> Steuerelement funktioniert.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> -Eigenschaft an das Schlüsselfeld für die Datenquelle gebunden wird, um die <xref:System.Web.UI.WebControls.FormView> Steuerelement.  
  
 [!code-aspx-csharp[FormViewEditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEditItemTemplate/CS/formviewedititemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEditItemTemplate/VB/formviewedititemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.SelectedValue" />
      </Docs>
    </Member>
    <Member MemberName="DefaultMode">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewMode DefaultMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.FormViewMode DefaultMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DefaultMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DefaultMode As FormViewMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FormViewMode DefaultMode { System::Web::UI::WebControls::FormViewMode get(); void set(System::Web::UI::WebControls::FormViewMode value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultMode : System.Web.UI.WebControls.FormViewMode with get, set" Usage="System.Web.UI.WebControls.FormView.DefaultMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Dateneingabemodus ab, in den das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement nach einem Aktualisierungs-, Einfüge- oder Abbruchvorgang zurückkehrt, oder legt diesen fest.</summary>
        <value>Einer der <see cref="T:System.Web.UI.WebControls.FormViewMode" />-Werte. Der Standardwert ist <see langword="FormViewMode.ReadOnly" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> Eigenschaft, um anzugeben, ob die <xref:System.Web.UI.WebControls.FormView> Steuerelement gibt zurück, zu bearbeiten, einfügen oder nur-Lese Modus nach einer Aktualisierung Einfüge- oder Abbruchvorgang ausgeführt wird. In der Standardeinstellung die <xref:System.Web.UI.WebControls.FormView> Steuerung wird an den schreibgeschützten Modus zurückgegeben; Sie können jedoch beibehalten der <xref:System.Web.UI.WebControls.FormView> steuern, in Bearbeitung oder durch Festlegen dieser Eigenschaft auf den entsprechenden Wert einfügen. Die folgende Tabelle enthält die Werte der anderen Modus.  
  
|Modus|Beschreibung |  
|----------|-----------------|  
|`FormViewMode.Edit`|Die <xref:System.Web.UI.WebControls.FormView> Steuerelement befindet sich im Bearbeitungsmodus befindet, die dem Benutzer ermöglicht, die Werte eines Datensatzes zu aktualisieren.|  
|`FormViewMode.Insert`|Die <xref:System.Web.UI.WebControls.FormView> Steuerelement befindet sich im Einfügemodus, der dem Benutzer ermöglicht, einen neuen Datensatz mit der Datenquelle hinzuzufügen.|  
|`FormViewMode.ReadOnly`|Die <xref:System.Web.UI.WebControls.FormView> Steuerelement befindet sich im schreibgeschützten Modus, die den normalen Anzeigemodus ist.|  
  
 Diese Eigenschaft ist im Allgemeinen verwendet, wenn die <xref:System.Web.UI.WebControls.FormView> Steuerelement verfügt über einen einzigen Zweck, z. B. nur zum Einfügen oder Bearbeiten von Datensätzen.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> Eigenschaft zu einer <xref:System.Web.UI.WebControls.FormView> Steuerelement nach einem Aktualisierungsvorgang im Bearbeitungsmodus.  
  
 [!code-aspx-csharp[FormViewDefaultMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewDefaultMode/CS/formviewdefaultmodecs.aspx#1)]
 [!code-aspx-vb[FormViewDefaultMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewDefaultMode/VB/formviewdefaultmodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der angegebene Wert ist keiner der <see cref="T:System.Web.UI.WebControls.FormViewMode" />-Enumerationswerte.</exception>
        <altmember cref="T:System.Web.UI.WebControls.FormViewMode" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CurrentMode" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.ChangeMode(System.Web.UI.WebControls.FormViewMode)" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanging" />
      </Docs>
    </Member>
    <Member MemberName="DeleteItem">
      <MemberSignature Language="C#" Value="public virtual void DeleteItem ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteItem() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.DeleteItem" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DeleteItem ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DeleteItem();" />
      <MemberSignature Language="F#" Value="abstract member DeleteItem : unit -&gt; unit&#xA;override this.DeleteItem : unit -&gt; unit" Usage="formView.DeleteItem " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Löscht den aktuellen Datensatz im <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement aus der Datenquelle.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.FormView.DeleteItem%2A> Methode, um den aktuellen Datensatz in programmgesteuert zu löschen. die <xref:System.Web.UI.WebControls.FormView> Steuerelement aus der Datenquelle. Diese Methode wird häufig verwendet, wenn beim Löschen des aktuellen Datensatzes von außerhalb von muss die <xref:System.Web.UI.WebControls.FormView> zu steuern, z.B. über ein anderes Steuerelement auf der Seite. Aufrufen dieser Methode löst auch die <xref:System.Web.UI.WebControls.FormView.ItemDeleted> und <xref:System.Web.UI.WebControls.FormView.ItemDeleting> Ereignisse.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.DeleteItem%2A> Methode, um den aktuellen Datensatz in programmgesteuert zu löschen einer <xref:System.Web.UI.WebControls.FormView> Steuerelement aus der Datenquelle.  
  
 [!code-aspx-csharp[FormViewDeleteItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewDeleteItem/CS/formviewdeleteitemcs.aspx#1)]
 [!code-aspx-vb[FormViewDeleteItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewDeleteItem/VB/formviewdeleteitemvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemDeleted" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemDeleting" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.InsertItem(System.Boolean)" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.UpdateItem(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="DeleteMethod">
      <MemberSignature Language="C#" Value="public virtual string DeleteMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeleteMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DeleteMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DeleteMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DeleteMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteMethod : string with get, set" Usage="System.Web.UI.WebControls.FormView.DeleteMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Methode auf der Seite ab, die aufgerufen wird, wenn das Steuerelement einen Löschvorgang ausführt, oder legt diesen fest.</summary>
        <value>Der Name der Methode auf der Seite, die aufgerufen wird, wenn das Steuerelement einen Löschvorgang ausführt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Reihe von Tutorials zur Verwendung von modellbindung mit Web Forms, finden Sie unter [Modellbindung und Web Forms](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EditItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate EditItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate EditItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EditItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ EditItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EditItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.FormView.EditItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den benutzerdefinierten Inhalt eines Elements im Bearbeitungsmodus ab oder legt diesen fest.</summary>
        <value>Eine <see cref="T:System.Web.UI.ITemplate" />, die den benutzerdefinierten Inhalt der Datenzeile enthält, wenn sich das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement im Bearbeitungsmodus befindet. Der Standardwert ist null (0). Dies bedeutet, dass diese Eigenschaft nicht festgelegt wurde.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView> Steuerelement rendert eine andere Vorlage für die Datenzeile, die basierend auf den aktuellen Modus des Steuerelements (angegeben durch die <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> Eigenschaft). Die folgende Tabelle zeigt, welche Vorlage für jeden Modus verwendet wird.  
  
|Modus|Vorlage gerendert|  
|----------|-----------------------|  
|Bearbeiten|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|  
|Insert|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|  
|Schreibgeschützt|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|  
  
 Verwenden der <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> Datenzeile Eigenschaft, um eine eigene Benutzeroberfläche (UI) für die Daten zu definieren, wenn die <xref:System.Web.UI.WebControls.FormView> Steuerelement befindet sich im Bearbeitungsmodus befindet. Die Bearbeitungselementvorlage enthält normalerweise die Benutzereingabe-Steuerelemente für den Benutzer zum Aktualisieren der Werte von einem vorhandenen Datensatz als auch Befehlsschaltflächen zur Aktualisierung des Datensatzes und den Updatevorgang abgebrochen.  
  
 Um anzugeben, die benutzerdefinierte Vorlage, die zuerst `<EditItemTemplate>` Tags zwischen die öffnenden und schließenden Tags eines der <xref:System.Web.UI.WebControls.FormView> Steuerelement. Anschließend können Sie den Inhalt der Vorlage zwischen den öffnenden und schließenden auflisten `<EditItemTemplate>` Tags. Mithilfe eines Ausdrucks für die bidirektionale Bindung zu verwenden, können Sie ein Feld eines Eingabesteuerelements zuordnen. Dadurch wird die <xref:System.Web.UI.WebControls.FormView> -Steuerelement zum Anzeigen von des ursprünglichen Wert automatisch in das zugeordnete Eingabesteuerelement im Bearbeitungsmodus befindet. Wenn ein Datensatz aktualisiert wird, die <xref:System.Web.UI.WebControls.FormView> -Steuerelement extrahiert automatisch den Wert des aktualisierten Felds aus dem zugeordneten Steuerelement. Weitere Informationen zu Ausdrücken für bidirektionale Bindung finden Sie unter [Binden an Datenbanken](http://msdn.microsoft.com/library/ab7b2846-975b-4057-a948-45527497c742). Um Befehlsschaltflächen erstellen, die die integrierte "Abbrechen" und Update-Vorgänge ausführen, fügen Sie auf den ein Befehl Schaltflächen-Steuerelement, auf die Vorlage mit der `CommandName` -Eigenschaft auf einen der Werte in der folgenden Tabelle aufgeführt.  
  
|Befehlstyp für die Schaltfläche "|CommandName-Wert|  
|-------------------------|-----------------------|  
|Abbrechen|"Abbrechen"|  
|Update|"Aktualisieren"|  
  
 Sie können die Darstellung der Elementvorlage steuern, mit der <xref:System.Web.UI.WebControls.FormView.EditRowStyle%2A> Eigenschaft.  
  
   
  
## Examples  
 Im folgende Beispiel wird veranschaulicht, wie eine benutzerdefinierte Vorlage für eine Datenzeile in den Bearbeitungsmodus zu definieren.  
  
 [!code-aspx-csharp[FormViewEditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEditItemTemplate/CS/formviewedititemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEditItemTemplate/VB/formviewedititemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
      </Docs>
    </Member>
    <Member MemberName="EditRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle EditRowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle EditRowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EditRowStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ EditRowStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EditRowStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.FormView.EditRowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf das <see cref="T:System.Web.UI.WebControls.TableItemStyle" />-Objekt ab, mit dem Sie die Darstellung der Datenzeile in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement festlegen können, wenn sich dieses im Bearbeitungsmodus befindet.</summary>
        <value>Ein Verweis auf den <see cref="T:System.Web.UI.WebControls.TableItemStyle" />, der den Stil der Datenzeile in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement darstellt, wenn sich dieses im Bearbeitungsmodus befindet.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.FormView.EditRowStyle%2A> -Eigenschaft zur Steuerung der Darstellung der Datenzeile, wenn eine <xref:System.Web.UI.WebControls.FormView> Steuerelement befindet sich im Bearbeitungsmodus befindet. Wenn die <xref:System.Web.UI.WebControls.FormView> Steuerelement befindet sich im Bearbeitungsmodus befindet, die die Datenzeile zeigt den benutzerdefinierten Inhalt, der gemäß der <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> Eigenschaft. Diese Eigenschaft ist schreibgeschützt. Sie können jedoch festlegen, die Eigenschaften der <xref:System.Web.UI.WebControls.TableItemStyle> -Objekt wird zurückgegeben. Die Eigenschaften können deklarativ mithilfe einer der folgenden Methoden festgelegt werden:  
  
-   Fügen Sie in das öffnende Tag ein Attribut der <xref:System.Web.UI.WebControls.FormView> Steuerelement im Formular `Property-Subproperty`, wobei `Subproperty` ist eine Eigenschaft der <xref:System.Web.UI.WebControls.TableItemStyle> Objekt (z. B. `EditRowStyle-ForeColor`).  
  
-   Schachteln einer `<EditRowStyle>` Element zwischen dem öffnenden und schließenden Tags eines der <xref:System.Web.UI.WebControls.FormView> Steuerelement.  
  
 Die Eigenschaften können auch programmgesteuert in das Formular festgelegt werden `Property.Subproperty` (z. B. `EditRowStyle.ForeColor`). Allgemeine Einstellungen enthalten normalerweise eine benutzerdefinierte Hintergrundfarbe, Vordergrundfarbe und Schriftarteigenschaften.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.EditRowStyle%2A> -Eigenschaft an einen benutzerdefinierten Stil für eine Datenzeile, wenn eine <xref:System.Web.UI.WebControls.FormView> Steuerelement befindet sich im Bearbeitungsmodus befindet.  
  
 [!code-aspx-csharp[FormViewEditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEditItemTemplate/CS/formviewedititemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEditItemTemplate/VB/formviewedititemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
      </Docs>
    </Member>
    <Member MemberName="EmptyDataRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle EmptyDataRowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle EmptyDataRowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EmptyDataRowStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ EmptyDataRowStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EmptyDataRowStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf das <see cref="T:System.Web.UI.WebControls.TableItemStyle" />-Objekt ab, mit dem Sie die Darstellung der leeren Datenzeile festlegen können, die angezeigt wird, wenn die an ein <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement gebundene Datenquelle keine Datensätze enthält.</summary>
        <value>Ein Verweis auf den <see cref="T:System.Web.UI.WebControls.TableItemStyle" />, mit dem die Darstellung der leeren Datenzeile festgelegt werden kann.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A> -Eigenschaft zur Steuerung der Darstellung der leeren Datenzeile in einem <xref:System.Web.UI.WebControls.FormView> Steuerelement. Die leere Datenzeile wird angezeigt, wenn die Datenquelle, die auf das Steuerelement gebunden ist keine Datensätze enthält. Diese Eigenschaft ist schreibgeschützt. Sie können jedoch festlegen, die Eigenschaften der <xref:System.Web.UI.WebControls.TableItemStyle> -Objekt wird zurückgegeben. Die Eigenschaften können deklarativ mithilfe einer der folgenden Methoden festgelegt werden:  
  
-   Fügen Sie in das öffnende Tag ein Attribut der <xref:System.Web.UI.WebControls.FormView> Steuerelement im Formular `Property-Subproperty`, wobei `Subproperty` ist eine Eigenschaft der <xref:System.Web.UI.WebControls.TableItemStyle> Objekt (z. B. `EmptyDataRowStyle-ForeColor`).  
  
-   Schachteln einer `<EmptyDataRowStyle>` Element zwischen dem öffnenden und schließenden Tags eines der <xref:System.Web.UI.WebControls.FormView> Steuerelement.  
  
 Die Eigenschaften können auch programmgesteuert in das Formular festgelegt werden `Property.Subproperty` (z. B. `EmptyDataRowStyle.ForeColor`). Allgemeine Einstellungen enthalten normalerweise eine benutzerdefinierte Hintergrundfarbe, Vordergrundfarbe und Schriftarteigenschaften.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A> Eigenschaft, um einen benutzerdefinierten Stil anzugeben, für die leere Datenzeile angezeigt wird, wenn eine <xref:System.Web.UI.WebControls.FormView> gebunden ist mit einer Datenquelle, die keine Datensätze enthält.  
  
 [!code-aspx-csharp[FormViewEmptyDataText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEmptyDataText/CS/formviewemptydatatextcs.aspx#1)]
 [!code-aspx-vb[FormViewEmptyDataText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEmptyDataText/VB/formviewemptydatatextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
      </Docs>
    </Member>
    <Member MemberName="EmptyDataTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate EmptyDataTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate EmptyDataTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EmptyDataTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ EmptyDataTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EmptyDataTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.FormView))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den benutzerdefinierten Inhalt für die leere Datenzeile ab, die gerendert wird, wenn ein <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement an eine Datenquelle ohne Datensätze gebunden ist, oder legt diesen Inhalt fest.</summary>
        <value>Eine <see cref="T:System.Web.UI.ITemplate" />, die den benutzerdefinierten Inhalt für die leere Datenzeile enthält. Der Standardwert ist <see langword="null" /> und gibt an, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die leere Datenzeile wird angezeigt, einem <xref:System.Web.UI.WebControls.FormView> steuern, wenn die Datenquelle, die auf das Steuerelement gebunden ist keine Datensätze enthält. Sie können eigene benutzerdefinierte Benutzeroberfläche (UI) für die leere Datenzeile definieren, mit der <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> Eigenschaft. Um eine benutzerdefinierte Vorlage für die leere Datenzeile anzugeben, fügen Sie zunächst `<EmptyDataTemplate>` Tags zwischen die öffnenden und schließenden Tags eines der <xref:System.Web.UI.WebControls.FormView> Steuerelement. Anschließend können Sie den Inhalt der Vorlage zwischen den öffnenden und schließenden auflisten `<EmptyDataTemplate>` Tags. Um den Stil der leeren Datenzeile zu steuern, verwenden Sie die <xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A> Eigenschaft. Sie können auch die integrierte Benutzeroberfläche für die leere Datenzeile verwenden, durch Festlegen der <xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A> Eigenschaft anstelle dieser Eigenschaft.  
  
> [!NOTE]
>  Wenn beide die <xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A> und <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> Eigenschaften festgelegt werden, die <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> Eigenschaft austauschverarbeitungsmodi Vorrang vor.  
  
   
  
## Examples  
 Im folgende Beispiel wird veranschaulicht, wie Sie eine benutzerdefinierte Vorlage zu definieren, für die leere Datenzeile angezeigt wird, wenn eine <xref:System.Web.UI.WebControls.FormView> gebunden ist mit einer Datenquelle, die keine Datensätze enthält.  
  
 [!code-aspx-csharp[FormViewEmptyDataTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEmptyDataTemplate/CS/formviewemptydatatemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEmptyDataTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEmptyDataTemplate/VB/formviewemptydatatemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
      </Docs>
    </Member>
    <Member MemberName="EmptyDataText">
      <MemberSignature Language="C#" Value="public virtual string EmptyDataText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EmptyDataText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EmptyDataText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EmptyDataText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ EmptyDataText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EmptyDataText : string with get, set" Usage="System.Web.UI.WebControls.FormView.EmptyDataText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Text für die leere Datenzeile ab, die gerendert wird, wenn ein <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement an eine Datenquelle ohne Datensätze gebunden ist, oder legt den Text fest.</summary>
        <value>Der Text, der in der leeren Datenzeile angezeigt werden soll. Der Standardwert ist eine leere Zeichenfolge ("") und gibt an, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die leere Datenzeile wird angezeigt, einem <xref:System.Web.UI.WebControls.FormView> steuern, wenn die Datenquelle, die auf das Steuerelement gebunden ist keine Datensätze enthält. Verwenden der <xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A> Eigenschaft zum Angeben des Texts in der leeren Datenzeile angezeigt. Um den Stil der leeren Datenzeile zu steuern, verwenden Sie die <xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A> Eigenschaft. Alternativ können Sie eigene benutzerdefinierte Benutzeroberfläche (UI) für die leere Datenzeile definieren, durch Festlegen der <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> Eigenschaft anstelle dieser Eigenschaft.  
  
> [!NOTE]
>  Wenn beide die <xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A> und <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> Eigenschaften festgelegt werden, die <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> Eigenschaft austauschverarbeitungsmodi Vorrang vor.  
  
 Der Wert dieser Eigenschaft, wenn festgelegt, kann mithilfe eines Designers Tools automatisch zu einer Ressourcendatei gespeichert werden. Weitere Informationen finden Sie unter <xref:System.ComponentModel.LocalizableAttribute> und [Globalisierung und Lokalisierung](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A> Eigenschaft zum Angeben des Texts in der leeren Datenzeile angezeigt.  
  
 [!code-aspx-csharp[FormViewEmptyDataText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEmptyDataText/CS/formviewemptydatatextcs.aspx#1)]
 [!code-aspx-vb[FormViewEmptyDataText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEmptyDataText/VB/formviewemptydatatextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderText" />
      </Docs>
    </Member>
    <Member MemberName="EnableModelValidation">
      <MemberSignature Language="C#" Value="public virtual bool EnableModelValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableModelValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EnableModelValidation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EnableModelValidation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableModelValidation { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableModelValidation : bool with get, set" Usage="System.Web.UI.WebControls.FormView.EnableModelValidation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob ein Validierungssteuerelement Ausnahmen behandelt, die während Einfüge- oder Aktualisierungsvorgängen auftreten, oder legt diesen fest.</summary>
        <value>
          <see langword="true" />, wenn in Einfüge- oder Aktualisierungsvorgängen auftretende Ausnahmen von einem Validierungssteuerelement behandelt werden; andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureDataBound">
      <MemberSignature Language="C#" Value="protected override void EnsureDataBound ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void EnsureDataBound() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.EnsureDataBound" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub EnsureDataBound ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void EnsureDataBound();" />
      <MemberSignature Language="F#" Value="override this.EnsureDataBound : unit -&gt; unit" Usage="formView.EnsureDataBound " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Stellt sicher, dass das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement zum gegebenen Zeitpunkt an Daten gebunden wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView.EnsureDataBound%2A> Methode ist eine Hilfsmethode, die von der <xref:System.Web.UI.WebControls.FormView> Klasse, um sicherzustellen, dass die <xref:System.Web.UI.WebControls.FormView> -Steuerelement an Daten bei Bedarf gebunden ist. Die <xref:System.Web.UI.WebControls.FormView.EnsureDataBound%2A> Methode wird in der Regel aufgerufen, während die <xref:System.Web.UI.WebControls.BaseDataBoundControl.OnPreRender%2A> Methode, um das Steuerelement an die Datenquelle zu binden, wenn noch nicht das datengebundene Steuerelement gebunden ist, erfordert jedoch die Datenbindung. Diese Version der Methode wurde überschrieben, um zu verhindern, dass bei der Datenbindung auftreten bei dem <xref:System.Web.UI.WebControls.FormView> Steuerelement befindet sich im Einfügemodus befindet.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.BaseDataBoundControl.EnsureDataBound" />
      </Docs>
    </Member>
    <Member MemberName="ExtractRowValues">
      <MemberSignature Language="C#" Value="protected virtual void ExtractRowValues (System.Collections.Specialized.IOrderedDictionary fieldValues, bool includeKeys);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ExtractRowValues(class System.Collections.Specialized.IOrderedDictionary fieldValues, bool includeKeys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.ExtractRowValues(System.Collections.Specialized.IOrderedDictionary,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ExtractRowValues (fieldValues As IOrderedDictionary, includeKeys As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ExtractRowValues(System::Collections::Specialized::IOrderedDictionary ^ fieldValues, bool includeKeys);" />
      <MemberSignature Language="F#" Value="abstract member ExtractRowValues : System.Collections.Specialized.IOrderedDictionary * bool -&gt; unit&#xA;override this.ExtractRowValues : System.Collections.Specialized.IOrderedDictionary * bool -&gt; unit" Usage="formView.ExtractRowValues (fieldValues, includeKeys)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fieldValues" Type="System.Collections.Specialized.IOrderedDictionary" />
        <Parameter Name="includeKeys" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fieldValues">Ein <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> zur Speicherung der Feldwerte des aktuellen Datenelements.</param>
        <param name="includeKeys">
          <see langword="true" /> bei Einbeziehung von Schlüsselfeldern, andernfalls <see langword="false" />.</param>
        <summary>Ruft die Werte jedes innerhalb der Datenzeile deklarierten Felds ab und speichert sie in dem angegebenen <see cref="T:System.Collections.Specialized.IOrderedDictionary" />-Objekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView.ExtractRowValues%2A> Methode ist eine Hilfsmethode wird aufgerufen, indem die <xref:System.Web.UI.WebControls.FormView> Steuerelement zum Abrufen der Werte jedes innerhalb der Datenzeile deklarierten Felds. Da die Datenzeile eine andere Vorlage basierend auf den aktuellen Modus angezeigt wird, ruft diese Methode nur die Feldwerte, die in der Vorlage, die den aktuellen Modus entspricht, deklariert. Die folgende Tabelle zeigt die verfügbaren Modi und die entsprechenden Vorlagen.  
  
|Modus|Vorlage|  
|----------|--------------|  
|Insert|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|  
|Bearbeiten|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|  
|Schreibgeschützt|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|  
  
 Sie können angeben, ob die extrahierten Werte mit das oder Primärschlüsselfelder enthalten die `includeKeys` Parameter.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Beim Erweitern der <see cref="T:System.Web.UI.WebControls.FormView" /> -Klasse können Sie überschreiben diese Methode, um Ihre eigene Routine zum Abrufen der Werte der Felder zu erstellen.</para>
        </block>
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="M:System.Web.UI.IBindableTemplate.ExtractValues(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="FooterRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewRow FooterRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FormViewRow FooterRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.FooterRow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FooterRow As FormViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FormViewRow ^ FooterRow { System::Web::UI::WebControls::FormViewRow ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FooterRow : System.Web.UI.WebControls.FormViewRow" Usage="System.Web.UI.WebControls.FormView.FooterRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das <see cref="T:System.Web.UI.WebControls.FormViewRow" />-Objekt ab, das die Footerzeile in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement darstellt.</summary>
        <value>Eine <see cref="T:System.Web.UI.WebControls.FormViewRow" />, die die Footerzeile in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Fußzeile wird am unteren Rand der <xref:System.Web.UI.WebControls.FormView> steuern, wann die <xref:System.Web.UI.WebControls.FormView.FooterText%2A> oder <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> festgelegt wird. Verwenden der <xref:System.Web.UI.WebControls.FormView.FooterRow%2A> Eigenschaft, die den programmgesteuerten Zugriff auf die <xref:System.Web.UI.WebControls.FormViewRow> -Objekt, das die Footerzeile darstellt.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.FormView.FooterRow%2A> Eigenschaft ist erst verfügbar, nachdem die <xref:System.Web.UI.WebControls.FormView> Steuerelement erstellt, das die Footerzeile in die <xref:System.Web.UI.WebControls.FormView.ItemCreated> Ereignis.  
  
 Diese Eigenschaft wird häufig verwendet, wenn die Footerzeile, z. B. beim Hinzufügen von benutzerdefinierten Inhalts programmgesteuert bearbeitet werden muss. Änderungen an der <xref:System.Web.UI.WebControls.FormView.FooterRow%2A> Eigenschaft muss ausgeführt werden, nachdem die <xref:System.Web.UI.WebControls.FormView> Steuerelement wurde, gerendert, andernfalls die <xref:System.Web.UI.WebControls.FormView> Steuerelement überschreibt alle Änderungen.  
  
 Um den Stil der Footerzeile steuern möchten, verwenden Sie die <xref:System.Web.UI.WebControls.FormView.FooterStyle%2A> Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.FooterRow%2A> Eigenschaft, um die Eigenschaften der Footerzeile während programmgesteuert ändern der <xref:System.Web.UI.WebControls.FormView.ItemCreated> Ereignis.  
  
 [!code-aspx-csharp[FormViewFooterTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewFooterTemplate/CS/formviewfootertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewFooterTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewFooterTemplate/VB/formviewfootertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
      </Docs>
    </Member>
    <Member MemberName="FooterStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle FooterStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle FooterStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.FooterStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FooterStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ FooterStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FooterStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.FormView.FooterStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf das <see cref="T:System.Web.UI.WebControls.TableItemStyle" />-Objekt ab, mit dem Sie die Darstellung der Footerzeile in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement festlegen können.</summary>
        <value>Ein Verweis auf das <see cref="T:System.Web.UI.WebControls.TableItemStyle" />-Objekt, das den Stil der Footerzeile in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Fußzeile wird am unteren Rand der <xref:System.Web.UI.WebControls.FormView> steuern, wann die <xref:System.Web.UI.WebControls.FormView.FooterText%2A> oder <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> festgelegt wird. Verwenden der <xref:System.Web.UI.WebControls.FormView.FooterStyle%2A> -Eigenschaft zur Steuerung der Darstellung der Footerzeile in einem <xref:System.Web.UI.WebControls.FormView> Steuerelement. Diese Eigenschaft ist schreibgeschützt. Sie können jedoch festlegen, die Eigenschaften der <xref:System.Web.UI.WebControls.TableItemStyle> -Objekt wird zurückgegeben. Die Eigenschaften können deklarativ mithilfe einer der folgenden Methoden festgelegt werden:  
  
-   Fügen Sie in das öffnende Tag ein Attribut der <xref:System.Web.UI.WebControls.FormView> Steuerelement im Formular `Property-Subproperty`, wobei `Subproperty` ist eine Eigenschaft der <xref:System.Web.UI.WebControls.TableItemStyle> Objekt (z. B. `FooterStyle-ForeColor`).  
  
-   Schachteln einer `<FooterStyle>` Element zwischen dem öffnenden und schließenden Tags eines der <xref:System.Web.UI.WebControls.FormView> Steuerelement.  
  
 Die Eigenschaften können auch programmgesteuert in das Formular festgelegt werden `Property.Subproperty` (z. B. `FooterStyle.ForeColor`). Allgemeine Einstellungen enthalten normalerweise eine benutzerdefinierte Hintergrundfarbe, Vordergrundfarbe und Schriftarteigenschaften.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.FooterStyle%2A> Eigenschaft, um einen benutzerdefinierten Stil für die Footerzeile anzugeben.  
  
 [!code-aspx-csharp[FormViewFooterText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewFooterText/CS/formviewfootertextcs.aspx#1)]
 [!code-aspx-vb[FormViewFooterText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewFooterText/VB/formviewfootertextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
      </Docs>
    </Member>
    <Member MemberName="FooterTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate FooterTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate FooterTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property FooterTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ FooterTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FooterTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.FormView.FooterTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.FormView))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den benutzerdefinierten Inhalt für die Footerzeile in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement ab oder legt diesen fest.</summary>
        <value>Eine <see cref="T:System.Web.UI.ITemplate" />, die den benutzerdefinierten Inhalt für die Footerzeile enthält. Der Standardwert ist <see langword="null" /> und gibt an, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Fußzeile wird am unteren Rand der <xref:System.Web.UI.WebControls.FormView> steuern, wann die <xref:System.Web.UI.WebControls.FormView.FooterText%2A> oder <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> festgelegt wird. Sie können eigene benutzerdefinierte Benutzeroberfläche (UI) für die Fußzeile definieren, mit der <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> Eigenschaft. Platzieren Sie zuerst zum Angeben einer benutzerdefinierten Vorlage für die Footerzeile `<FooterTemplate>` Tags zwischen die öffnenden und schließenden Tags eines der <xref:System.Web.UI.WebControls.FormView> Steuerelement. Anschließend können Sie den Inhalt der Vorlage zwischen den öffnenden und schließenden auflisten `<FooterTemplate>` Tags. Um den Stil der Footerzeile steuern möchten, verwenden Sie die <xref:System.Web.UI.WebControls.FormView.FooterStyle%2A> Eigenschaft. Alternativ können Sie einfach Text anzeigen in der Fußzeile durch Festlegen der <xref:System.Web.UI.WebControls.FormView.FooterText%2A> Eigenschaft anstelle dieser Eigenschaft.  
  
> [!NOTE]
>  Wenn beide die <xref:System.Web.UI.WebControls.FormView.FooterText%2A> und <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> Eigenschaften festgelegt werden, die <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> Eigenschaft austauschverarbeitungsmodi Vorrang vor.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> Eigenschaft, um eine benutzerdefinierte Vorlage für die Footerzeile Rendern zu definieren.  
  
 [!code-aspx-csharp[FormViewFooterTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewFooterTemplate/CS/formviewfootertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewFooterTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewFooterTemplate/VB/formviewfootertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
      </Docs>
    </Member>
    <Member MemberName="FooterText">
      <MemberSignature Language="C#" Value="public virtual string FooterText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FooterText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.FooterText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property FooterText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FooterText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FooterText : string with get, set" Usage="System.Web.UI.WebControls.FormView.FooterText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Text ab, der in der Footerzeile eines <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelements angezeigt werden soll, oder legt diesen fest.</summary>
        <value>Der in der Footerzeile anzuzeigende Text. Der Standardwert ist eine leere Zeichenfolge ("") und gibt an, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Fußzeile wird am unteren Rand der <xref:System.Web.UI.WebControls.FormView> steuern, wann die <xref:System.Web.UI.WebControls.FormView.FooterText%2A> oder <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> festgelegt wird. Verwenden der <xref:System.Web.UI.WebControls.FormView.FooterText%2A> Eigenschaft zum Angeben des Texts in der Fußzeile angezeigt. Um den Stil der Footerzeile steuern möchten, verwenden Sie die <xref:System.Web.UI.WebControls.FormView.FooterStyle%2A> Eigenschaft. Sie können auch eigene benutzerdefinierte Benutzeroberfläche (UI) für die Footerzeile definieren, durch Festlegen der <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> Eigenschaft anstelle dieser Eigenschaft.  
  
> [!NOTE]
>  Wenn beide die <xref:System.Web.UI.WebControls.FormView.FooterText%2A> und <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> Eigenschaften festgelegt werden, die <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> Eigenschaft austauschverarbeitungsmodi Vorrang vor.  
  
 Der Wert dieser Eigenschaft, wenn festgelegt, kann mithilfe eines Designers Tools automatisch zu einer Ressourcendatei gespeichert werden. Weitere Informationen finden Sie unter <xref:System.ComponentModel.LocalizableAttribute> und [Globalisierung und Lokalisierung](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.FooterText%2A> Eigenschaft zum Angeben des Texts in der Fußzeile angezeigt.  
  
 [!code-aspx-csharp[FormViewFooterText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewFooterText/CS/formviewfootertextcs.aspx#1)]
 [!code-aspx-vb[FormViewFooterText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewFooterText/VB/formviewfootertextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderText" />
      </Docs>
    </Member>
    <Member MemberName="GridLines">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.GridLines GridLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.GridLines GridLines" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.GridLines" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property GridLines As GridLines" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::GridLines GridLines { System::Web::UI::WebControls::GridLines get(); void set(System::Web::UI::WebControls::GridLines value); };" />
      <MemberSignature Language="F#" Value="member this.GridLines : System.Web.UI.WebControls.GridLines with get, set" Usage="System.Web.UI.WebControls.FormView.GridLines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridLines</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Rasterlinienstil für ein <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement ab oder legt diesen fest.</summary>
        <value>Einer der <see cref="T:System.Web.UI.WebControls.GridLines" />-Werte. Der Standardwert ist <see langword="GridLines.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.FormView.GridLines%2A> -Eigenschaft an den Rasterlinienstil für ein <xref:System.Web.UI.WebControls.FormView> Steuerelement. Die folgende Tabelle listet die verfügbaren Formate.  
  
|Stil|Beschreibung |  
|-----------|-----------------|  
|`GridLines.None`|Es werden keine Rasterlinien angezeigt.|  
|`GridLines.Horizontal`|Zeigt nur die horizontalen Rasterlinien an.|  
|`GridLines.Vertical`|Zeigt nur die vertikalen Rasterlinien an.|  
|`GridLines.Both`|Zeigt die horizontalen und vertikalen Rasterlinien an.|  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.GridLines%2A> Eigenschaft, um die horizontalen und vertikalen Gitternetzlinien anzuzeigen.  
  
 [!code-aspx-csharp[FormViewCellPadding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCellPadding/CS/formviewcellpaddingcs.aspx#1)]
 [!code-aspx-vb[FormViewCellPadding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCellPadding/VB/formviewcellpaddingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridLines" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BackImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellPadding" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellSpacing" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HorizontalAlign" />
      </Docs>
    </Member>
    <Member MemberName="HeaderRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewRow HeaderRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FormViewRow HeaderRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.HeaderRow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HeaderRow As FormViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FormViewRow ^ HeaderRow { System::Web::UI::WebControls::FormViewRow ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HeaderRow : System.Web.UI.WebControls.FormViewRow" Usage="System.Web.UI.WebControls.FormView.HeaderRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das <see cref="T:System.Web.UI.WebControls.FormViewRow" />-Objekt ab, das die Headerzeile in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement darstellt.</summary>
        <value>Ein <see cref="T:System.Web.UI.WebControls.FormViewRow" />-Objekt, das die Headerzeile in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Kopfzeile angezeigt wird, am oberen Rand der <xref:System.Web.UI.WebControls.FormView> steuern, wann die <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> oder <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> festgelegt wird. Verwenden der <xref:System.Web.UI.WebControls.FormView.HeaderRow%2A> Eigenschaft, die den programmgesteuerten Zugriff auf die <xref:System.Web.UI.WebControls.FormViewRow> Objekt, das die Kopfzeile darstellt.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.FormView.HeaderRow%2A> Eigenschaft ist erst verfügbar, nachdem die <xref:System.Web.UI.WebControls.FormView> Steuerelement erstellt, das die Headerzeile in die <xref:System.Web.UI.WebControls.FormView.ItemCreated> Ereignis.  
  
 Diese Eigenschaft wird häufig verwendet, wenn Sie die Kopfzeile, z. B. beim Hinzufügen von benutzerdefinierten Inhalts programmgesteuert zu bearbeiten möchten. Änderungen an der <xref:System.Web.UI.WebControls.FormView.HeaderRow%2A> Eigenschaft muss ausgeführt werden, nachdem die <xref:System.Web.UI.WebControls.FormView> Steuerelement wurde, gerendert, andernfalls die <xref:System.Web.UI.WebControls.FormView> Steuerelement überschreibt alle Änderungen.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.HeaderRow%2A> Eigenschaft, um programmgesteuert ändern der Eigenschaften der Kopfzeile, während die <xref:System.Web.UI.WebControls.FormView.ItemCreated> Ereignis.  
  
 [!code-aspx-csharp[FormViewHeaderTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewHeaderTemplate/CS/formviewheadertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewHeaderTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewHeaderTemplate/VB/formviewheadertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
      </Docs>
    </Member>
    <Member MemberName="HeaderStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle HeaderStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle HeaderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HeaderStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ HeaderStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HeaderStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.FormView.HeaderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf das <see cref="T:System.Web.UI.WebControls.TableItemStyle" />-Objekt ab, mit dem Sie die Darstellung der Headerzeile in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement festlegen können.</summary>
        <value>Ein Verweis auf das <see cref="T:System.Web.UI.WebControls.TableItemStyle" />-Objekt, das den Stil der Headerzeile in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Kopfzeile angezeigt wird, am oberen Rand der <xref:System.Web.UI.WebControls.FormView> steuern, wann die <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> oder <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> festgelegt wird. Verwenden der <xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A> -Eigenschaft zur Steuerung der Darstellung der Headerzeile in einem <xref:System.Web.UI.WebControls.FormView> Steuerelement. Diese Eigenschaft ist schreibgeschützt. Sie können jedoch festlegen, die Eigenschaften der <xref:System.Web.UI.WebControls.TableItemStyle> -Objekt wird zurückgegeben. Die Eigenschaften können deklarativ mithilfe einer der folgenden Methoden festgelegt werden:  
  
-   Fügen Sie in das öffnende Tag ein Attribut der <xref:System.Web.UI.WebControls.FormView> Steuerelement im Formular `Property-Subproperty`, wobei `Subproperty` ist eine Eigenschaft der <xref:System.Web.UI.WebControls.TableItemStyle> Objekt (z. B. `HeaderStyle-ForeColor`).  
  
-   Schachteln einer `<HeaderStyle>` Element zwischen dem öffnenden und schließenden Tags eines der <xref:System.Web.UI.WebControls.FormView> Steuerelement.  
  
 Die Eigenschaften können auch programmgesteuert in das Formular festgelegt werden `Property.Subproperty` (z. B. `HeaderStyle.ForeColor`). Allgemeine Einstellungen enthalten normalerweise eine benutzerdefinierte Hintergrundfarbe, Vordergrundfarbe und Schriftarteigenschaften.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A> Eigenschaft, um einen benutzerdefinierten Stil für die Headerzeile anzugeben.  
  
 [!code-aspx-csharp[FormViewHeaderText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewHeaderText/CS/formviewheadertextcs.aspx#1)]
 [!code-aspx-vb[FormViewHeaderText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewHeaderText/VB/formviewheadertextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
      </Docs>
    </Member>
    <Member MemberName="HeaderTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate HeaderTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate HeaderTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HeaderTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ HeaderTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.FormView.HeaderTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.FormView))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den benutzerdefinierten Inhalt für die Headerzeile in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement ab oder legt diesen fest.</summary>
        <value>Eine <see cref="T:System.Web.UI.ITemplate" />, die den benutzerdefinierten Inhalt für die Headerzeile enthält. Der Standardwert ist <see langword="null" /> und gibt an, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Kopfzeile angezeigt wird, am oberen Rand der <xref:System.Web.UI.WebControls.FormView> steuern, wann die <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> oder <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> festgelegt wird. Sie können eigene benutzerdefinierte Benutzeroberfläche (UI) für die Headerzeile definieren, mit der <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> Eigenschaft. Platzieren Sie zuerst zum Angeben einer benutzerdefinierten Vorlage für die Headerzeile `<HeaderTemplate>` Tags zwischen die öffnenden und schließenden Tags eines der <xref:System.Web.UI.WebControls.FormView> Steuerelement. Anschließend können Sie den Inhalt der Vorlage zwischen den öffnenden und schließenden auflisten `<HeaderTemplate>` Tags. Um den Stil der Headerzeile zu steuern, verwenden Sie die <xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A> Eigenschaft. Alternativ können Sie einfach Text anzeigen in der Kopfzeile durch Festlegen der <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> Eigenschaft anstelle dieser Eigenschaft.  
  
> [!NOTE]
>  Wenn beide die <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> und <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> Eigenschaften festgelegt werden, die <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> Eigenschaft austauschverarbeitungsmodi Vorrang vor.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> Eigenschaft, um eine benutzerdefinierte Vorlage für die Headerzeile Rendern zu definieren.  
  
 [!code-aspx-csharp[FormViewHeaderTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewHeaderTemplate/CS/formviewheadertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewHeaderTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewHeaderTemplate/VB/formviewheadertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
      </Docs>
    </Member>
    <Member MemberName="HeaderText">
      <MemberSignature Language="C#" Value="public virtual string HeaderText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.HeaderText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HeaderText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HeaderText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderText : string with get, set" Usage="System.Web.UI.WebControls.FormView.HeaderText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Text ab, der in der Headerzeile eines <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelements angezeigt werden soll, oder legt diesen fest.</summary>
        <value>Der in der Headerzeile anzuzeigende Text. Der Standardwert ist eine leere Zeichenfolge ("") und gibt an, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Kopfzeile angezeigt wird, am oberen Rand der <xref:System.Web.UI.WebControls.FormView> steuern, wann die <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> oder <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> festgelegt wird. Verwenden der <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> Eigenschaft zum Angeben des Texts in der Kopfzeile angezeigt. Um den Stil der Headerzeile zu steuern, verwenden Sie die <xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A> Eigenschaft. Sie können auch eigene benutzerdefinierte Benutzeroberfläche (UI) für die Headerzeile definieren, durch Festlegen der <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> Eigenschaft anstelle dieser Eigenschaft.  
  
> [!NOTE]
>  Wenn beide die <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> und <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> Eigenschaften festgelegt werden, die <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> Eigenschaft austauschverarbeitungsmodi Vorrang vor.  
  
 Der Wert dieser Eigenschaft, wenn festgelegt, kann mithilfe eines Designers Tools automatisch zu einer Ressourcendatei gespeichert werden. Weitere Informationen finden Sie unter <xref:System.ComponentModel.LocalizableAttribute> und [Globalisierung und Lokalisierung](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> Eigenschaft zum Angeben des Texts in der Kopfzeile angezeigt.  
  
 [!code-aspx-csharp[FormViewHeaderText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewHeaderText/CS/formviewheadertextcs.aspx#1)]
 [!code-aspx-vb[FormViewHeaderText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewHeaderText/VB/formviewheadertextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterText" />
      </Docs>
    </Member>
    <Member MemberName="HorizontalAlign">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.HorizontalAlign HorizontalAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.HorizontalAlign HorizontalAlign" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.HorizontalAlign" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HorizontalAlign As HorizontalAlign" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::HorizontalAlign HorizontalAlign { System::Web::UI::WebControls::HorizontalAlign get(); void set(System::Web::UI::WebControls::HorizontalAlign value); };" />
      <MemberSignature Language="F#" Value="member this.HorizontalAlign : System.Web.UI.WebControls.HorizontalAlign with get, set" Usage="System.Web.UI.WebControls.FormView.HorizontalAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.HorizontalAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die horizontale Ausrichtung eines <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelements auf der Seite ab bzw. legt die Ausrichtung fest.</summary>
        <value>Einer der <see cref="T:System.Web.UI.WebControls.HorizontalAlign" />-Werte. Der Standardwert ist <see langword="HorizontalAlign.NotSet" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.FormView.HorizontalAlign%2A> -Eigenschaft an die horizontale Ausrichtung des eine <xref:System.Web.UI.WebControls.FormView> Steuerelement auf der Seite. Die folgende Tabelle enthält die Stile unterschiedliche horizontale Ausrichtung.  
  
|HorizontalAlign-Wert|Beschreibung |  
|---------------------------|-----------------|  
|`HorizontalAlign.NotSet`|Die horizontale Ausrichtung des den <xref:System.Web.UI.WebControls.FormView> Steuerelement wurde nicht festgelegt.|  
|`HorizontalAlign.Left`|Die <xref:System.Web.UI.WebControls.FormView> Steuerelement wird auf der Seite linksbündig ausgerichtet.|  
|`HorizontalAlign.Center`|Die <xref:System.Web.UI.WebControls.FormView> Steuerelement auf der Seite zentriert ist.|  
|`HorizontalAlign.Right`|Die <xref:System.Web.UI.WebControls.FormView> Steuerelement wird auf der Seite rechtsbündig ausgerichtet.|  
|`HorizontalAlign.Justify`|Die <xref:System.Web.UI.WebControls.FormView> Steuerelement wird mit der linken und rechten Rand der Seite ausgerichtet.|  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.HorizontalAlign%2A> Eigenschaft, um anzugeben, dass eine <xref:System.Web.UI.WebControls.FormView> Steuerelement auf der Seite zentriert werden soll.  
  
 [!code-aspx-csharp[FormViewHorizontalAlign#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewHorizontalAlign/CS/formviewhorizontalaligncs.aspx#1)]
 [!code-aspx-vb[FormViewHorizontalAlign#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewHorizontalAlign/VB/formviewhorizontalalignvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.HorizontalAlign" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BackImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellPadding" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellSpacing" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.GridLines" />
      </Docs>
    </Member>
    <Member MemberName="InitializePager">
      <MemberSignature Language="C#" Value="protected virtual void InitializePager (System.Web.UI.WebControls.FormViewRow row, System.Web.UI.WebControls.PagedDataSource pagedDataSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializePager(class System.Web.UI.WebControls.FormViewRow row, class System.Web.UI.WebControls.PagedDataSource pagedDataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.InitializePager(System.Web.UI.WebControls.FormViewRow,System.Web.UI.WebControls.PagedDataSource)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializePager(System::Web::UI::WebControls::FormViewRow ^ row, System::Web::UI::WebControls::PagedDataSource ^ pagedDataSource);" />
      <MemberSignature Language="F#" Value="abstract member InitializePager : System.Web.UI.WebControls.FormViewRow * System.Web.UI.WebControls.PagedDataSource -&gt; unit&#xA;override this.InitializePager : System.Web.UI.WebControls.FormViewRow * System.Web.UI.WebControls.PagedDataSource -&gt; unit" Usage="formView.InitializePager (row, pagedDataSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Web.UI.WebControls.FormViewRow" />
        <Parameter Name="pagedDataSource" Type="System.Web.UI.WebControls.PagedDataSource" />
      </Parameters>
      <Docs>
        <param name="row">Die <see cref="T:System.Web.UI.WebControls.FormViewRow" />, die die Pagerzeile enthält.</param>
        <param name="pagedDataSource">Eine <see cref="T:System.Web.UI.WebControls.PagedDataSource" />, die die Daten für die aktuelle Seite enthält.</param>
        <summary>Erstellt die Pagerzeile für das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView.InitializePager%2A> Methode ist eine Hilfsmethode wird aufgerufen, indem die <xref:System.Web.UI.WebControls.FormView> Steuerelement erstellt die Pagerzeile. Erstellt eine <xref:System.Web.UI.WebControls.TableCell> Objekt, das mit den Eigenschaften der Steuerelemente für die Navigation enthält die <xref:System.Web.UI.WebControls.PagedDataSource> -Objekt in der `pagedDataSource` Parameter. Die Zelle wird dann hinzugefügt, auf die Zeile, die gemäß der `row` Parameter.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Beim Erweitern der <see cref="T:System.Web.UI.WebControls.FormView" /> -Klasse, können Sie diese Methode zum Erstellen eigener Pagerzeile überschreiben.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
        <altmember cref="T:System.Web.UI.WebControls.PagedDataSource" />
        <altmember cref="T:System.Web.UI.WebControls.TableCell" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.AllowPaging" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.InitializeRow(System.Web.UI.WebControls.FormViewRow)" />
      </Docs>
    </Member>
    <Member MemberName="InitializeRow">
      <MemberSignature Language="C#" Value="protected virtual void InitializeRow (System.Web.UI.WebControls.FormViewRow row);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeRow(class System.Web.UI.WebControls.FormViewRow row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.InitializeRow(System.Web.UI.WebControls.FormViewRow)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitializeRow (row As FormViewRow)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializeRow(System::Web::UI::WebControls::FormViewRow ^ row);" />
      <MemberSignature Language="F#" Value="abstract member InitializeRow : System.Web.UI.WebControls.FormViewRow -&gt; unit&#xA;override this.InitializeRow : System.Web.UI.WebControls.FormViewRow -&gt; unit" Usage="formView.InitializeRow row" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Web.UI.WebControls.FormViewRow" />
      </Parameters>
      <Docs>
        <param name="row">Die zu initialisierende <see cref="T:System.Web.UI.WebControls.FormViewRow" />.</param>
        <summary>Initialisiert das angegebene <see cref="T:System.Web.UI.WebControls.FormViewRow" />-Objekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView.InitializeRow%2A> Methode ist eine Hilfsmethode wird aufgerufen, indem die <xref:System.Web.UI.WebControls.FormView> Steuerelement zum Initialisieren des angegebenen <xref:System.Web.UI.WebControls.FormViewRow> Objekt. Die <xref:System.Web.UI.WebControls.FormViewRow> -Objekt initialisiert wird, basierend auf den Zeilentyp und Zeilenstatus gemäß seiner <xref:System.Web.UI.WebControls.FormViewRow.RowType%2A> und <xref:System.Web.UI.WebControls.FormViewRow.RowState%2A> Eigenschaften bzw. Der entsprechende Inhalt wird dann hinzugefügt, um die <xref:System.Web.UI.WebControls.FormViewRow> Objekt. In der folgende Tabelle wird beschrieben, wie jede Zeilentyp initialisiert wird.  
  
|Zeilentyp|Beschreibung |  
|--------------|-----------------|  
|Datenzeile|Den Inhalt der <xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>, <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>, oder <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> Eigenschaft hinzugefügt werden die <xref:System.Web.UI.WebControls.FormViewRow> -Objekt, abhängig vom Wert der <xref:System.Web.UI.WebControls.FormViewRow.RowState%2A> Eigenschaft.|  
|Leere Datenzeile|Der Wert des der <xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A> Eigenschaft oder den Inhalt des der <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> Eigenschaft hinzugefügt wird die <xref:System.Web.UI.WebControls.FormViewRow> Objekts, je nachdem, welche Eigenschaft festgelegt wird. Wenn beide Eigenschaften festgelegt werden, die <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> Eigenschaft austauschverarbeitungsmodi Vorrang vor.|  
|Fußzeile|Der Wert des der <xref:System.Web.UI.WebControls.FormView.FooterText%2A> Eigenschaft oder den Inhalt des der <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> Eigenschaft hinzugefügt wird die <xref:System.Web.UI.WebControls.FormViewRow> Objekts, je nachdem, welche Eigenschaft festgelegt wird. Wenn beide Eigenschaften festgelegt werden, die <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> Eigenschaft austauschverarbeitungsmodi Vorrang vor.|  
|Kopfzeile|Der Wert des der <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> Eigenschaft oder den Inhalt des der <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> Eigenschaft hinzugefügt wird die <xref:System.Web.UI.WebControls.FormViewRow> Objekts, je nachdem, welche Eigenschaft festgelegt wird. Wenn beide Eigenschaften festgelegt werden, die <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> Eigenschaft austauschverarbeitungsmodi Vorrang vor.|  
  
> [!NOTE]
>  Diese Methode initialisiert die Pagerzeile nicht. Verwenden Sie zum Erstellen der Pagerzeile der <xref:System.Web.UI.WebControls.FormView.InitializePager%2A> Methode.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Beim Erweitern der <see cref="T:System.Web.UI.WebControls.FormView" /> -Klasse können Sie überschreiben diese Methode, um eine eigene benutzerdefinierte Zeile erstellen.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
        <altmember cref="T:System.Web.UI.WebControls.DataControlRowState" />
        <altmember cref="T:System.Web.UI.WebControls.DataControlRowType" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.InitializePager(System.Web.UI.WebControls.FormViewRow,System.Web.UI.WebControls.PagedDataSource)" />
      </Docs>
    </Member>
    <Member MemberName="InsertItem">
      <MemberSignature Language="C#" Value="public virtual void InsertItem (bool causesValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertItem(bool causesValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.InsertItem(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InsertItem (causesValidation As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InsertItem(bool causesValidation);" />
      <MemberSignature Language="F#" Value="abstract member InsertItem : bool -&gt; unit&#xA;override this.InsertItem : bool -&gt; unit" Usage="formView.InsertItem causesValidation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="causesValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="causesValidation">
          <see langword="true" />, wenn beim Aufrufen der Methode eine Seitenvalidierung ausgeführt werden soll, andernfalls <see langword="false" />.</param>
        <summary>Fügt den aktuellen Datensatz in der Datenquelle ein.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Web.UI.WebControls.FormView> -Steuerelement im Einfügemodus befindet, verwenden Sie die <xref:System.Web.UI.WebControls.FormView.InsertItem%2A> Methode, um programmgesteuert den aktuellen Datensatz in der Datenquelle einzufügen. Diese Methode wird häufig verwendet, wenn Sie den aktuellen Datensatz von außerhalb des einfügen müssen die <xref:System.Web.UI.WebControls.FormView> zu steuern, z.B. über ein anderes Steuerelement auf der Seite.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.FormView> -Steuerelement muss im Einfügemodus sein, wenn diese Methode aufgerufen wird, andernfalls ein <xref:System.Web.HttpException> ausgelöst.  
  
 Um anzugeben, ob die Validierung der Seite vor der Insert-Vorgang ausgeführt wird, verwenden Sie die `causesValidation` Parameter. Aufrufen dieser Methode löst auch die <xref:System.Web.UI.WebControls.FormView.ItemInserted> und <xref:System.Web.UI.WebControls.FormView.ItemInserting> Ereignisse.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.InsertItem%2A> Methode, um programmgesteuert legen Sie den aktuellen Datensatz in einer <xref:System.Web.UI.WebControls.FormView> -Steuerelement in der Datenquelle.  
  
 [!code-aspx-csharp[FormViewInsertItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertItem/CS/formviewinsertitemcs.aspx#1)]
 [!code-aspx-vb[FormViewInsertItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertItem/VB/formviewinsertitemvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Diese Methode wird aufgerufen, wenn sich das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement nicht im Einfügemodus befindet.  Oder:  Das <see cref="T:System.Web.UI.DataSourceView" />-Objekt, das dem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement zugeordnet ist, ist NULL.</exception>
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserting" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.DeleteItem" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.UpdateItem(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="InsertItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate InsertItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate InsertItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InsertItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ InsertItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.FormView.InsertItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den benutzerdefinierten Inhalt eines Elements im Einfügemodus ab oder legt diesen fest.</summary>
        <value>Eine <see cref="T:System.Web.UI.ITemplate" />, die den benutzerdefinierten Inhalt der Datenzeile enthält, wenn sich das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement im Einfügemodus befindet. Der Standardwert ist null (0). Dies bedeutet, dass diese Eigenschaft nicht festgelegt wurde.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView> Steuerelement rendert eine andere Vorlage für die Datenzeile, die basierend auf den aktuellen Modus des Steuerelements (angegeben durch die <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> Eigenschaft). Die folgende Tabelle zeigt, welche Vorlage für jeden Modus verwendet wird.  
  
|Modus|Vorlage gerendert|  
|----------|-----------------------|  
|Bearbeiten|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|  
|Insert|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|  
|Schreibgeschützt|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|  
  
 Verwenden der <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> Datenzeile Eigenschaft, um eine eigene Benutzeroberfläche (UI) für die Daten zu definieren, wenn die <xref:System.Web.UI.WebControls.FormView> Steuerelement befindet sich im Einfügemodus befindet. Die Insert-Item-Vorlage enthält normalerweise die Benutzereingabe-Steuerelemente für den Benutzer geben die Werte für den neuen Datensatz als auch Befehlsschaltflächen, den Datensatz einzufügen, und den Insert-Vorgang abgebrochen.  
  
 Um anzugeben, die benutzerdefinierte Vorlage, die zuerst `<InsertItemTemplate>` Tags zwischen die öffnenden und schließenden Tags eines der <xref:System.Web.UI.WebControls.FormView> Steuerelement. Anschließend können Sie den Inhalt der Vorlage zwischen den öffnenden und schließenden auflisten `<InsertItemTemplate>` Tags. Mithilfe eines Ausdrucks für die bidirektionale Bindung zu verwenden, können Sie ein Feld eines Eingabesteuerelements zuordnen. Wenn ein Datensatz eingefügt wird, die <xref:System.Web.UI.WebControls.FormView> -Steuerelement extrahiert automatisch den Wert des Felds aus dem zugeordneten Steuerelement. Weitere Informationen zu Ausdrücken für bidirektionale Bindung finden Sie unter [Binden an Datenbanken](http://msdn.microsoft.com/library/ab7b2846-975b-4057-a948-45527497c742). Um Befehlsschaltflächen zu erstellen, die die integrierten Abbruch- und insert-Vorgänge, fügen Sie ein Befehl Schaltflächen-Steuerelement für die Vorlage mit der `CommandName` -Eigenschaft auf einen der Werte in der folgenden Tabelle aufgeführt.  
  
|Befehlstyp für die Schaltfläche "|CommandName-Wert|  
|-------------------------|-----------------------|  
|Abbrechen|"Abbrechen"|  
|Insert|"Insert"|  
  
 Sie können die Darstellung der Elementvorlage steuern, mit der <xref:System.Web.UI.WebControls.FormView.InsertRowStyle%2A> Eigenschaft.  
  
   
  
## Examples  
 Im folgende Beispiel veranschaulicht eine benutzerdefinierte Vorlage für eine Datenzeile im Einfügemodus zu definieren.  
  
 [!code-aspx-csharp[FormViewInsertItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertItemTemplate/CS/formviewinsertitemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewInsertItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertItemTemplate/VB/formviewinsertitemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserting" />
      </Docs>
    </Member>
    <Member MemberName="InsertMethod">
      <MemberSignature Language="C#" Value="public virtual string InsertMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InsertMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.InsertMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InsertMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InsertMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertMethod : string with get, set" Usage="System.Web.UI.WebControls.FormView.InsertMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Methode auf der Seite ab, die aufgerufen wird, wenn das Steuerelement einen Einfügevorgang ausführt, oder legt diesen fest.</summary>
        <value>Der Name der Methode auf der Seite, die aufgerufen wird, wenn das Steuerelement einen Einfügevorgang ausführt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Reihe von Tutorials zur Verwendung von modellbindung mit Web Forms, finden Sie unter [Modellbindung und Web Forms](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle InsertRowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle InsertRowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InsertRowStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ InsertRowStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InsertRowStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.FormView.InsertRowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf das <see cref="T:System.Web.UI.WebControls.TableItemStyle" />-Objekt ab, mit dem die Darstellung der Datenzeile in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement festgelegt werden kann, wenn sich das Steuerelement im Einfügemodus befindet.</summary>
        <value>Ein Verweis auf den <see cref="T:System.Web.UI.WebControls.TableItemStyle" />, der den Stil der Datenzeile in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement darstellt, wenn sich dieses im Einfügemodus befindet.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.FormView.InsertRowStyle%2A> -Eigenschaft zur Steuerung der Darstellung der Datenzeile, wenn eine <xref:System.Web.UI.WebControls.FormView> Steuerelement befindet sich im Einfügemodus befindet. Wenn die <xref:System.Web.UI.WebControls.FormView> -Steuerelement im Einfügemodus befindet, die Datenzeile zeigt den benutzerdefinierten Inhalt, der gemäß der <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> Eigenschaft. Diese Eigenschaft ist schreibgeschützt. Sie können jedoch festlegen, die Eigenschaften der <xref:System.Web.UI.WebControls.TableItemStyle> -Objekt wird zurückgegeben.  
  
 Die Eigenschaften können deklarativ mithilfe einer der folgenden Methoden festgelegt werden:  
  
-   Fügen Sie in das öffnende Tag ein Attribut der <xref:System.Web.UI.WebControls.FormView> Steuerelement im Formular `Property-Subproperty`, wobei `Subproperty` ist eine Eigenschaft der <xref:System.Web.UI.WebControls.TableItemStyle> Objekt (z. B. `InsertRowStyle-ForeColor`).  
  
-   Schachteln einer `<InsertRowStyle>` Element zwischen dem öffnenden und schließenden Tags eines der <xref:System.Web.UI.WebControls.FormView> Steuerelement.  
  
 Die Eigenschaften können auch programmgesteuert in das Formular festgelegt werden `Property.Subproperty` (z. B. `InsertRowStyle.ForeColor`). Allgemeine Einstellungen enthalten normalerweise eine benutzerdefinierte Hintergrundfarbe, Vordergrundfarbe und Schriftarteigenschaften.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.InsertRowStyle%2A> -Eigenschaft an einen benutzerdefinierten Stil für eine Datenzeile, wenn eine <xref:System.Web.UI.WebControls.FormView> Steuerelement befindet sich im Einfügemodus befindet.  
  
 [!code-aspx-csharp[FormViewInsertItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertItemTemplate/CS/formviewinsertitemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewInsertItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertItemTemplate/VB/formviewinsertitemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
      </Docs>
    </Member>
    <Member MemberName="IsBindableType">
      <MemberSignature Language="C#" Value="public virtual bool IsBindableType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsBindableType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.IsBindableType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsBindableType(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member IsBindableType : Type -&gt; bool&#xA;override this.IsBindableType : Type -&gt; bool" Usage="formView.IsBindableType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">Ein <see cref="T:System.Type" />, der den zu überprüfenden Datentyp darstellt.</param>
        <summary>Bestimmt, ob der angegebene Datentyp an ein Feld im <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement gebunden werden kann.</summary>
        <returns>
          <see langword="true" />, wenn der angegebene Datentyp an ein Feld im<see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement gebunden werden kann, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView.IsBindableType%2A> Methode ist eine Hilfsmethode wird aufgerufen, indem die <xref:System.Web.UI.WebControls.FormView> Steuerelement, um zu bestimmen, ob der angegebene Datentyp an ein Feld in das Steuerelement gebunden werden kann. Die <xref:System.Web.UI.WebControls.FormView> Steuerelement unterstützt die folgenden Datentypen:  
  
-   Alle primitiven Datentypen, z. B. <xref:System.Boolean>, <xref:System.Byte>, <xref:System.Int32>und so weiter.  
  
-   <xref:System.DateTime>  
  
-   <xref:System.Decimal>  
  
-   <xref:System.Guid>  
  
-   <xref:System.String>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Beim Erweitern der <see cref="T:System.Web.UI.WebControls.FormView" /> -Klasse, können Sie diese Methode zum Hinzufügen oder Einschränken der Datentypen, die verwendet werden können Überschreiben einer <see cref="T:System.Web.UI.WebControls.FormView" /> Steuerelement.</para>
        </block>
        <altmember cref="P:System.Type.IsPrimitive" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.Decimal" />
        <altmember cref="T:System.Guid" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ItemCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewCommandEventHandler ItemCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewCommandEventHandler ItemCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemCommand As FormViewCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewCommandEventHandler ^ ItemCommand;" />
      <MemberSignature Language="F#" Value="member this.ItemCommand : System.Web.UI.WebControls.FormViewCommandEventHandler " Usage="member this.ItemCommand : System.Web.UI.WebControls.FormViewCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn innerhalb eines <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelements auf eine Schaltfläche geklickt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView.ItemCommand> Ereignis wird ausgelöst, wenn auf eine Schaltfläche in der <xref:System.Web.UI.WebControls.FormView> -Steuerelement geklickt wird. Dadurch können Sie eine Methode zur Verarbeitung von Ereignissen bereitzustellen, die eine benutzerdefinierte Routine ausführt, wenn dieses Ereignis tritt auf.  
  
 Schaltflächen innerhalb einer <xref:System.Web.UI.WebControls.FormView> Steuerelement kann auch einige der integrierten Funktionen des Steuerelements aufrufen. Um einen dieser Vorgänge auszuführen, legen die `CommandName` -Eigenschaft einer Schaltfläche auf einen der Werte in der folgenden Tabelle.  
  
|CommandName-Wert|Beschreibung |  
|-----------------------|-----------------|  
|"Abbrechen"|Bricht einen bearbeiten oder Insert-Vorgang ab und gibt die <xref:System.Web.UI.WebControls.FormView> Steuerelement in den Modus gemäß der <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> Eigenschaft. Löst die <xref:System.Web.UI.WebControls.FormView.ModeChanged> und <xref:System.Web.UI.WebControls.FormView.ModeChanging> Ereignisse.|  
|"Löschen"|Löscht den aktuellen Datensatz. Löst die <xref:System.Web.UI.WebControls.FormView.ItemDeleted> und <xref:System.Web.UI.WebControls.FormView.ItemDeleting> Ereignisse.|  
|"Bearbeiten"|Legt die <xref:System.Web.UI.WebControls.FormView> Steuerelement im Bearbeitungsmodus befindet. Löst die <xref:System.Web.UI.WebControls.FormView.ModeChanged> und <xref:System.Web.UI.WebControls.FormView.ModeChanging> Ereignisse.|  
|"Insert"|Fügt den aktuellen Datensatz in der Datenquelle ein. Löst die <xref:System.Web.UI.WebControls.FormView.ItemInserted> und <xref:System.Web.UI.WebControls.FormView.ItemInserting> Ereignisse.|  
|"New"|Legt die <xref:System.Web.UI.WebControls.FormView> Steuerelement im Einfügemodus befindet. Löst die <xref:System.Web.UI.WebControls.FormView.ModeChanged> und <xref:System.Web.UI.WebControls.FormView.ModeChanging> Ereignisse.|  
|"Page"|Führt einen Pagingvorgang. Legen Sie die `CommandArgument` Eigenschaft der Schaltfläche auf "First", "Last", "Weiter", "Prev" oder eine Seitenzahl, geben Sie den Typ der Pagingvorgang ausführen. Löst die <xref:System.Web.UI.WebControls.FormView.PageIndexChanged> und <xref:System.Web.UI.WebControls.FormView.PageIndexChanging> Ereignisse.|  
|"Aktualisieren"|Aktualisiert den aktuellen Datensatz in der Datenquelle. Löst die <xref:System.Web.UI.WebControls.FormView.ItemUpdated> und <xref:System.Web.UI.WebControls.FormView.ItemUpdating> Ereignisse.|  
  
 Obwohl die <xref:System.Web.UI.WebControls.FormView.ItemCommand> Ereignis wird ausgelöst, wenn eine Schaltfläche in der vorherigen Tabelle aufgeführten geklickt wird, wird empfohlen, dass Sie die Ereignisse in der Tabelle für den Vorgang verwenden.  
  
 Ein <xref:System.Web.UI.WebControls.FormViewCommandEventArgs> Objekt übergeben wird, an die Methode zur Verarbeitung von Ereignissen, in dem Sie den Namen des Befehls und Befehlsargument der Schaltfläche geklickt ermitteln kann. Name des Befehls und Befehlsargument ermitteln Sie mithilfe der <xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A> und <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> Eigenschaften bzw. Sie können auch zugreifen, das Steuerelement, das das Ereignis ausgelöst, mithilfe hat der <xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs.CommandSource%2A> Eigenschaft.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Nutzen von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.ItemCommand> zu auf die Schaltfläche im zu behandelnden Ereignisses eine <xref:System.Web.UI.WebControls.FormView> Steuerelement. Klickt der Benutzer auf die Schaltfläche "hinzufügen", das aktuell angezeigte Element wird hinzugefügt ein <xref:System.Web.UI.WebControls.ListBox> Steuerelement.  
  
 [!code-aspx-csharp[FormViewItemCommandEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewItemCommandEventArgs/CS/formviewcommandeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewItemCommandEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewItemCommandEventArgs/VB/formviewcommandeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewCommandEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewCommandEventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.CommandEventArgs.CommandName" />
        <altmember cref="P:System.Web.UI.WebControls.CommandEventArgs.CommandArgument" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemCreated">
      <MemberSignature Language="C#" Value="public event EventHandler ItemCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ItemCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemCreated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ItemCreated;" />
      <MemberSignature Language="F#" Value="member this.ItemCreated : EventHandler " Usage="member this.ItemCreated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, nachdem alle Zeilen in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement erstellt sind.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView.ItemCreated> -Ereignis wird ausgelöst, nachdem alle Zeilen, in erstellt werden eine <xref:System.Web.UI.WebControls.FormView> Steuerelement. Dies kann auftreten, wenn das Steuerelement gerendert wird oder wenn der Benutzer zu einem anderen Datensatz wechselt. Sie können dieses Ereignis verwenden, um eine Methode zur Verarbeitung von Ereignissen bereitzustellen, die eine benutzerdefinierte Routine ausführt, z. B. hinzufügen oder ändern den Inhalt einer Zeile aus, wenn dieses Ereignis tritt auf.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.FormView.ItemCreated> Ereignis tritt auf, bevor Sie die <xref:System.Web.UI.WebControls.FormView> Steuerelement an Daten gebunden ist. Um den Wert eines gebundenen Felds zu ändern, verwenden die <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBound> Ereignis.  
  
 Sie erreichen die Header, Footer und Pager Zeilen in der <xref:System.Web.UI.WebControls.FormView> -Steuerelement mithilfe der <xref:System.Web.UI.WebControls.FormView.HeaderRow%2A>, <xref:System.Web.UI.WebControls.FormView.FooterRow%2A>, <xref:System.Web.UI.WebControls.FormView.TopPagerRow%2A>, oder <xref:System.Web.UI.WebControls.FormView.BottomPagerRow%2A> Eigenschaften bzw. Verwenden Sie den Zugriff auf die Datenzeile der <xref:System.Web.UI.WebControls.FormView.Row%2A> Eigenschaft.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Nutzen von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.ItemCreated> Ereignis, um den Text der aktualisieren eine <xref:System.Web.UI.WebControls.Label> Steuerelement die Pagerzeile im.  
  
 [!code-aspx-csharp[FormViewItemCreated#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewItemCreated/CS/formviewitemcreatedcs.aspx#1)]
 [!code-aspx-vb[FormViewItemCreated#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewItemCreated/VB/formviewitemcreatedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.EventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.Row" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemCreated(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemDeleted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewDeletedEventHandler ItemDeleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewDeletedEventHandler ItemDeleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemDeleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemDeleted As FormViewDeletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewDeletedEventHandler ^ ItemDeleted;" />
      <MemberSignature Language="F#" Value="member this.ItemDeleted : System.Web.UI.WebControls.FormViewDeletedEventHandler " Usage="member this.ItemDeleted : System.Web.UI.WebControls.FormViewDeletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewDeletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement auf eine Schaltfläche Löschen geklickt wird, allerdings erst nachdem der Löschvorgang ausgeführt wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView> -Steuerelement löst die <xref:System.Web.UI.WebControls.FormView.ItemDeleted> Ereignis aus, wenn eine Löschen-Schaltfläche (eine Schaltfläche mit der `CommandName` -Eigenschaft auf "Löschen") im Steuerelement geklickt wird, allerdings nachdem die <xref:System.Web.UI.WebControls.FormView> Steuerelement löscht den Datensatz. Dadurch können Sie eine Methode zur Verarbeitung von Ereignissen bereitzustellen, die eine benutzerdefinierte Routine, wie z. B. das Überprüfen der Ergebnisse einen Löschvorgang aus, wenn dieses Ereignis tritt auf, ausführt.  
  
 Ein <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs> Objekt wird an die Methode zur Verarbeitung von Ereignissen, können Sie bestimmen die Anzahl der betroffenen Datensätze und alle möglicherweise aufgetretenen Ausnahmen übergeben. Um die Anzahl der vom Löschvorgang betroffenen Datensätze zu ermitteln, verwenden die <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.AffectedRows%2A> Eigenschaft. Verwenden der <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Exception%2A> Eigenschaft, um zu bestimmen, ob Ausnahmen aufgetreten sind. Sie können auch angeben, ob die Ausnahme in der Methode zur Verarbeitung von Ereignissen, indem behandelt wurde die <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.ExceptionHandled%2A> Eigenschaft. Wenn Sie die Name-Wert-Paare der Schlüsselfelder und nichtschlüsselfelder des gelöschten Datensatzes zugreifen möchten, verwenden Sie die <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Keys%2A> und <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Values%2A> Eigenschaften bzw.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Nutzen von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.ItemDeleted> Ereignis, um zu bestimmen, ob eine Ausnahme während eines Löschvorgangs aufgetreten ist.  
  
 [!code-aspx-csharp[FormViewDeletedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewDeletedEventArgs/CS/formviewdeletedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewDeletedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewDeletedEventArgs/VB/formviewdeletedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewDeletedEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewDeletedEventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeletedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeletedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeletedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeletedEventArgs.Keys" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeletedEventArgs.Values" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemDeleted(System.Web.UI.WebControls.FormViewDeletedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemDeleting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewDeleteEventHandler ItemDeleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewDeleteEventHandler ItemDeleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemDeleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemDeleting As FormViewDeleteEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewDeleteEventHandler ^ ItemDeleting;" />
      <MemberSignature Language="F#" Value="member this.ItemDeleting : System.Web.UI.WebControls.FormViewDeleteEventHandler " Usage="member this.ItemDeleting : System.Web.UI.WebControls.FormViewDeleteEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewDeleteEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement auf eine Schaltfläche Löschen geklickt wird, allerdings bevor der Löschvorgang ausgeführt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView> -Steuerelement löst die <xref:System.Web.UI.WebControls.FormView.ItemDeleting> Ereignis aus, wenn eine Löschen-Schaltfläche (eine Schaltfläche mit der `CommandName` -Eigenschaft auf "Löschen") im Steuerelement geklickt wird, aber vor der <xref:System.Web.UI.WebControls.FormView> Steuerelement löscht den Datensatz. Dadurch können Sie eine Methode zur Verarbeitung von Ereignissen bereitzustellen, die eine benutzerdefinierte Routine, wie z. B. das Überprüfen eines Datensatzes, bevor Sie Sie löschen, wenn dieses Ereignis tritt auf, ausführt.  
  
 Ein <xref:System.Web.UI.WebControls.FormViewDeleteEventArgs> Objekt übergeben wird, an die Methode zur Verarbeitung von Ereignissen, wodurch Sie, um zu bestimmen, den Index des Datensatzes, der gelöscht, und um anzugeben, dass der Delete-Vorgang abgebrochen werden soll. Um den Index eines Datensatzes zu bestimmen, verwenden die <xref:System.Web.UI.WebControls.FormViewDeleteEventArgs.RowIndex%2A> Eigenschaft. Um den Löschvorgang abzubrechen, legen die <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> Eigenschaft `true`. Sie können auch die Schlüsselfelder und nichtschlüsselfelder zugreifen, mithilfe der <xref:System.Web.UI.WebControls.FormViewDeleteEventArgs.Keys%2A> und <xref:System.Web.UI.WebControls.FormViewDeleteEventArgs.Values%2A> Eigenschaften bzw.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Nutzen von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.ItemDeleting> Ereignis, um einen Löschvorgang abzubrechen.  
  
 [!code-aspx-csharp[FormViewDeleteEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewDeleteEventArgs/CS/formviewdeleteeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewDeleteEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewDeleteEventArgs/VB/formviewdeleteeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewDeleteEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewDeleteEventHandler" />
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeleteEventArgs.RowIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeleteEventArgs.Keys" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeleteEventArgs.Values" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemDeleting(System.Web.UI.WebControls.FormViewDeleteEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemInserted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewInsertedEventHandler ItemInserted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewInsertedEventHandler ItemInserted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemInserted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemInserted As FormViewInsertedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewInsertedEventHandler ^ ItemInserted;" />
      <MemberSignature Language="F#" Value="member this.ItemInserted : System.Web.UI.WebControls.FormViewInsertedEventHandler " Usage="member this.ItemInserted : System.Web.UI.WebControls.FormViewInsertedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewInsertedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement auf eine Schaltfläche Einfügen geklickt wird, allerdings erst nachdem der Einfügevorgang ausgeführt wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView> -Steuerelement löst die <xref:System.Web.UI.WebControls.FormView.ItemInserted> Ereignis aus, wenn eine Schaltfläche Einfügen (eine Schaltfläche mit der `CommandName` -Eigenschaft auf "Insert") im Steuerelement geklickt wird, allerdings nachdem die <xref:System.Web.UI.WebControls.FormView> Steuerelement einfügen des Datensatzes. Dadurch können Sie eine Methode zur Verarbeitung von Ereignissen bereitzustellen, die eine benutzerdefinierte Routine, wie z. B. das Überprüfen der Ergebnisse einer Insert-Vorgang, bei jedem dieses Ereignisses auftreten ausführt.  
  
 Ein <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs> Objekt wird an die Methode zur Verarbeitung von Ereignissen, können Sie bestimmen die Anzahl der betroffenen Datensätze und alle möglicherweise aufgetretenen Ausnahmen übergeben. Um die Anzahl der vom Einfügevorgang betroffenen Datensätze zu ermitteln, verwenden die <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A> Eigenschaft. Verwenden der <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A> Eigenschaft, um zu bestimmen, ob Ausnahmen aufgetreten sind. Sie können auch angeben, ob die Ausnahme in der Methode zur Verarbeitung von Ereignissen, indem behandelt wurde die <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A> Eigenschaft. Wenn Sie die Werte des eingefügten Datensatzes zugreifen möchten, verwenden Sie die <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A> Eigenschaft.  
  
 In der Standardeinstellung die <xref:System.Web.UI.WebControls.FormView> Steuerung an den vom angegebenen Modus zurückgegeben, die <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> Eigenschaft nach einem Einfügevorgang. Zu den <xref:System.Web.UI.WebControls.FormView> im Einfügemodus zu steuern, legen Sie die <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A> Eigenschaft `true`.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Nutzen von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.ItemInserted> Ereignis, um zu bestimmen, ob eine Ausnahme bei einem Einfügevorgang aufgetreten ist.  
  
 [!code-aspx-csharp[FormViewInsertedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertedEventArgs/CS/formviewinsertedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewInsertedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertedEventArgs/VB/formviewinsertedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemInserted(System.Web.UI.WebControls.FormViewInsertedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemInserting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewInsertEventHandler ItemInserting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewInsertEventHandler ItemInserting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemInserting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemInserting As FormViewInsertEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewInsertEventHandler ^ ItemInserting;" />
      <MemberSignature Language="F#" Value="member this.ItemInserting : System.Web.UI.WebControls.FormViewInsertEventHandler " Usage="member this.ItemInserting : System.Web.UI.WebControls.FormViewInsertEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewInsertEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement auf eine Schaltfläche Einfügen geklickt wird, allerdings bevor der Einfügevorgang ausgeführt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView> -Steuerelement löst die <xref:System.Web.UI.WebControls.FormView.ItemInserting> Ereignis aus, wenn eine Schaltfläche Einfügen (eine Schaltfläche mit der `CommandName` -Eigenschaft auf "Insert") im Steuerelement geklickt wird, aber vor der <xref:System.Web.UI.WebControls.FormView> Steuerelement einfügen des Datensatzes. Dadurch können Sie eine Methode zur Verarbeitung von Ereignissen bereitzustellen, die eine benutzerdefinierte Routine, wie z. B. HTML-Codierung der Werte eines Datensatzes, bevor Sie in der Datenquelle eingefügt werden, wenn dieses Ereignis tritt auf, ausführt.  
  
 Ein <xref:System.Web.UI.WebControls.FormViewInsertEventArgs> Objekt wird an die Methode zur Verarbeitung von Ereignissen, die Ihnen ermöglicht, den Wert des ein optionales Befehlsargument gesendet, um zu bestimmen, übergeben die <xref:System.Web.UI.WebControls.FormView> Steuerelement und anzugeben, dass der Insert-Vorgang abgebrochen werden soll. Den Wert des Arguments entspricht der `CommandArgument` Eigenschaft der Schaltfläche einfügen. Wenn die `CommandArgument` Eigenschaft der Schaltfläche "Insert" festgelegt ist, verwenden die <xref:System.Web.UI.WebControls.FormViewInsertEventArgs.CommandArgument%2A> Eigenschaft, um den Wert für das Befehlsargument ermitteln. Legen Sie zum Abbrechen des Insert-Vorgangs die <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> Eigenschaft `true`. Sie können auch lesen oder ändern Sie die Feldwerte für den neuen Datensatz mit den <xref:System.Web.UI.WebControls.FormViewInsertEventArgs.Values%2A> Eigenschaft.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Nutzen von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.ItemInserting> Ereignis, um ein Einfügevorgang abgebrochen.  
  
 [!code-aspx-csharp[FormViewInsertEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertEventArgs/CS/formviewinserteventargscs.aspx#1)]
 [!code-aspx-vb[FormViewInsertEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertEventArgs/VB/formviewinserteventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertEventHandler" />
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertEventArgs.CommandArgument" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertEventArgs.Values" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemInserting(System.Web.UI.WebControls.FormViewInsertEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate ItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ ItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.FormView.ItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den benutzerdefinierten Inhalt für die Datenzeile in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement ab, wenn sich das Steuerelement im schreibgeschützten Modus befindet, oder legt diesen fest.</summary>
        <value>Eine <see cref="T:System.Web.UI.ITemplate" />, die den benutzerdefinierten Inhalt für die Datenzeile enthält, wenn sich das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement im schreibgeschützten Modus befindet. Der Standardwert ist null (0). Dies bedeutet, dass diese Eigenschaft nicht festgelegt wurde.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView> Steuerelement rendert eine andere Vorlage für die Datenzeile, die basierend auf den aktuellen Modus des Steuerelements (angegeben durch die <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> Eigenschaft). Die folgende Tabelle zeigt, welche Vorlage für jeden Modus verwendet wird.  
  
|Modus|Vorlage gerendert|  
|----------|-----------------------|  
|Bearbeiten|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|  
|Insert|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|  
|Schreibgeschützt|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|  
  
 Verwenden der <xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A> Datenzeile Eigenschaft, um eine eigene Benutzeroberfläche (UI) für die Daten zu definieren, wenn die <xref:System.Web.UI.WebControls.FormView> Steuerelement befindet sich im schreibgeschützten Modus. Die Elementvorlage enthält in der Regel Steuerelemente, um die Felder eines Datensatzes angezeigt sowie Befehlsschaltflächen zu bearbeiten, einfügen und Löschen eines Datensatzes.  
  
 Um anzugeben, die benutzerdefinierte Vorlage, die zuerst `<ItemTemplate>` Tags zwischen die öffnenden und schließenden Tags eines der <xref:System.Web.UI.WebControls.FormView> Steuerelement. Anschließend können Sie den Inhalt der Vorlage zwischen den öffnenden und schließenden auflisten `<ItemTemplate>` Tags. Um die Feldwerte aus der Datenquelle an das Steuerelement gebunden zu anzuzeigen, verwenden Sie eine XPath-Datenbindungsausdruck aus. Weitere Informationen zu Datenbindungsausdrücke, finden Sie unter [Data-Syntax von Datenbindungsausdrücken](http://msdn.microsoft.com/library/676beb1d-ddfa-4153-bba8-3c86dcb7ceca). Um Befehlsschaltflächen erstellen, die die integrierte löschen, bearbeiten und neue Datensätze Vorgänge ausführen, fügen Sie auf den ein Befehl Schaltflächen-Steuerelement, auf die Vorlage mit der `CommandName` -Eigenschaft auf einen der Werte in der folgenden Tabelle aufgeführt.  
  
|Befehlstyp für die Schaltfläche "|CommandName-Wert|  
|-------------------------|-----------------------|  
|Löschen|"Löschen"|  
|Bearbeiten|"Bearbeiten"|  
|Neu|"New"|  
  
 Sie können die Darstellung der Elementvorlage steuern, mit der <xref:System.Web.UI.WebControls.FormView.RowStyle%2A> Eigenschaft.  
  
   
  
## Examples  
 Im folgende Beispiel wird veranschaulicht, wie Sie eine benutzerdefinierte Vorlage für eine Datenzeile in nur-Lese Modus zu definieren.  
  
 [!code-aspx-csharp[FormViewEditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEditItemTemplate/CS/formviewedititemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEditItemTemplate/VB/formviewedititemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
      </Docs>
    </Member>
    <Member MemberName="ItemUpdated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewUpdatedEventHandler ItemUpdated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewUpdatedEventHandler ItemUpdated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemUpdated As FormViewUpdatedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewUpdatedEventHandler ^ ItemUpdated;" />
      <MemberSignature Language="F#" Value="member this.ItemUpdated : System.Web.UI.WebControls.FormViewUpdatedEventHandler " Usage="member this.ItemUpdated : System.Web.UI.WebControls.FormViewUpdatedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewUpdatedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement auf eine Schaltfläche Aktualisieren geklickt wird, allerdings erst nachdem der Aktualisierungsvorgang ausgeführt wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView> -Steuerelement löst die <xref:System.Web.UI.WebControls.FormView.ItemUpdated> Ereignis aus, wenn eine Aktualisieren-Schaltfläche (eine Schaltfläche mit der `CommandName` -Eigenschaft auf "Aktualisieren" festgelegt) im Steuerelement geklickt wird, allerdings nachdem die <xref:System.Web.UI.WebControls.FormView> Steuerelement aktualisiert den Datensatz. Dadurch können Sie eine Methode zur Verarbeitung von Ereignissen bereitzustellen, die eine benutzerdefinierte Routine, wie z. B. das Überprüfen der Ergebnisse einen Update-Vorgang, bei jedem dieses Ereignisses auftreten ausführt.  
  
 Ein <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs> Objekt wird an die Methode zur Verarbeitung von Ereignissen, können Sie bestimmen die Anzahl der betroffenen Datensätze und alle möglicherweise aufgetretenen Ausnahmen übergeben. Um die Anzahl der vom Aktualisierungsvorgang betroffenen Datensätze zu ermitteln, verwenden die <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows%2A> Eigenschaft. Verwenden der <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A> Eigenschaft, um zu bestimmen, ob Ausnahmen aufgetreten sind. Sie können auch angeben, ob die Ausnahme in der Methode zur Verarbeitung von Ereignissen, indem behandelt wurde die <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A> Eigenschaft. Wenn Sie die Werte der Schlüsselfelder für den aktualisierten Datensatz zugreifen möchten, verwenden Sie die <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A> Eigenschaft. Die ursprünglichen und die aktualisierten nicht schlüsselbezogene Feldwerte können zugegriffen werden, mithilfe der <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues%2A> und <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A> Eigenschaften bzw.  
  
 In der Standardeinstellung die <xref:System.Web.UI.WebControls.FormView> Steuerung an den vom angegebenen Modus zurückgegeben, die <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> Eigenschaft nach einem Aktualisierungsvorgang. Zu den <xref:System.Web.UI.WebControls.FormView> -Steuerelement im Bearbeitungsmodus befindet, legen die <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode%2A> Eigenschaft `true`.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Nutzen von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.ItemUpdated> Ereignis, um zu bestimmen, ob eine Ausnahme während eines Aktualisierungsvorgangs aufgetreten ist.  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemUpdated(System.Web.UI.WebControls.FormViewUpdatedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemUpdating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewUpdateEventHandler ItemUpdating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewUpdateEventHandler ItemUpdating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemUpdating As FormViewUpdateEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewUpdateEventHandler ^ ItemUpdating;" />
      <MemberSignature Language="F#" Value="member this.ItemUpdating : System.Web.UI.WebControls.FormViewUpdateEventHandler " Usage="member this.ItemUpdating : System.Web.UI.WebControls.FormViewUpdateEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewUpdateEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement auf eine Schaltfläche Aktualisieren geklickt wird, allerdings bevor der Aktualisierungsvorgang ausgeführt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView> -Steuerelement löst die <xref:System.Web.UI.WebControls.FormView.ItemUpdating> Ereignis aus, wenn eine Aktualisieren-Schaltfläche (eine Schaltfläche mit der `CommandName` -Eigenschaft auf "Aktualisieren" festgelegt) im Steuerelement geklickt wird, aber vor der <xref:System.Web.UI.WebControls.FormView> Steuerelement aktualisiert den Datensatz. Dadurch können Sie eine Methode zur Verarbeitung von Ereignissen bereitzustellen, die eine benutzerdefinierte Routine, wie z. B. HTML-Codierung der Werte eines Datensatzes, bevor Sie es in der Datenquelle zu aktualisieren, wenn dieses Ereignis tritt auf, ausführt.  
  
 Ein <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs> Objekt wird an die Methode zur Verarbeitung von Ereignissen, die Ihnen ermöglicht, den Wert des ein optionales Befehlsargument gesendet, um zu bestimmen, übergeben die <xref:System.Web.UI.WebControls.FormView> Steuerelement und anzugeben, dass der Update-Vorgang abgebrochen werden soll. Den Wert des Arguments entspricht der `CommandArgument` Eigenschaft der Schaltfläche "Aktualisieren". Wenn die `CommandArgument` Eigenschaft der Schaltfläche "Aktualisieren" festgelegt ist, verwenden die <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument%2A> Eigenschaft, um den Wert für das Befehlsargument ermitteln. Legen Sie zum Abbrechen des Update-Vorgangs die <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> Eigenschaft `true`. Können Sie auch lesen oder ändern Sie die neuen Werte, die vom Benutzer eingegeben werden, mithilfe der <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A> und <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> Eigenschaften. Die <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> Eigenschaft enthält die Schlüsselfelder, während die <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> Eigenschaft enthält den nicht-Schlüsselfelder. Wenn Sie die ursprünglichen Werte mit nicht-Schlüsselfelder zugreifen müssen, verwenden Sie die <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues%2A> Eigenschaft.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Nutzen von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.ItemUpdating> -Ereignis einen Update-Vorgang abgebrochen.  
  
 [!code-aspx-csharp[FormViewUpdateEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdateEventArgs/CS/formviewupdateeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdateEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdateEventArgs/VB/formviewupdateeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdateEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdateEventHandler" />
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemUpdating(System.Web.UI.WebControls.FormViewUpdateEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected internal override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.LoadControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub LoadControlState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void LoadControlState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadControlState : obj -&gt; unit" Usage="formView.LoadControlState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Ein <see cref="T:System.Object" />, das den Zustand des <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelements darstellt.</param>
        <summary>Lädt den Zustand der Eigenschaften des <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelements, die auch dann beibehalten werden müssen, wenn die <see cref="P:System.Web.UI.Control.EnableViewState" />-Eigenschaft auf <see langword="false" /> festgelegt ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView.LoadControlState%2A> Methode wird verwendet, um den Status der laden die <xref:System.Web.UI.WebControls.FormView> Steuerelementeigenschaften, die beibehalten werden muss, auch wenn die <xref:System.Web.UI.Control.EnableViewState%2A> -Eigenschaftensatz auf `false`.  
  
> [!NOTE]
>  Diese Methode wird hauptsächlich von Steuerelemententwicklern verwendet, wenn Sie erweitern die <xref:System.Web.UI.WebControls.FormView> Steuerelement.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="P:System.Web.UI.Control.EnableViewState" />
        <altmember cref="M:System.Web.UI.Control.LoadControlState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="formView.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Ein <see cref="T:System.Object" />, das den Zustand des <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelements darstellt.</param>
        <summary>Lädt den zuvor gespeicherten Ansichtszustand des <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelements.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView.LoadViewState%2A> Methode wird verwendet, um den zuvor gespeicherten Ansichtszustand des laden die <xref:System.Web.UI.WebControls.FormView> Steuerelement.  
  
> [!NOTE]
>  Diese Methode wird hauptsächlich von Steuerelemententwicklern verwendet, wenn Sie erweitern die <xref:System.Web.UI.WebControls.FormView> Steuerelement.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ModeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ModeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ModeChanged;" />
      <MemberSignature Language="F#" Value="member this.ModeChanged : EventHandler " Usage="member this.ModeChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement zwischen Bearbeitungsmodus, Einfügemodus und schreibgeschütztem Modus wechselt, allerdings erst, nachdem sich der Modus geändert hat.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView.ModeChanged> Ereignis wird ausgelöst, wenn eine <xref:System.Web.UI.WebControls.FormView> -Steuerelement versucht, wechseln Sie zwischen dem Bearbeitungsmodus, Einfügemodus und nur-Lese Modus, und zwar nachdem der Modus tatsächlich ändert. Dadurch können Sie eine Methode zur Verarbeitung von Ereignissen bereitzustellen, die eine benutzerdefinierte Routine, wie z. B. Synchronisierung führt der <xref:System.Web.UI.WebControls.FormView> Steuerelement mit einem anderen Steuerelement, wenn dieses Ereignis tritt auf.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Nutzen von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.ModeChanged> anzuzeigenden den aktuellen Modus in der Kopfzeile des Ereignisses eine <xref:System.Web.UI.WebControls.FormView> Steuerelement.  
  
 [!code-aspx-csharp[FormViewModeChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewModeChanged/CS/formviewmodechangedcs.aspx#1)]
 [!code-aspx-vb[FormViewModeChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewModeChanged/VB/formviewmodechangedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.EventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnModeChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ModeChanging">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewModeEventHandler ModeChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewModeEventHandler ModeChanging" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ModeChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ModeChanging As FormViewModeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewModeEventHandler ^ ModeChanging;" />
      <MemberSignature Language="F#" Value="member this.ModeChanging : System.Web.UI.WebControls.FormViewModeEventHandler " Usage="member this.ModeChanging : System.Web.UI.WebControls.FormViewModeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewModeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement zwischen Bearbeitungsmodus, Einfügemodus und schreibgeschütztem Modus wechselt, allerdings bevor sich der Modus ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView.ModeChanging> Ereignis wird ausgelöst, wenn eine <xref:System.Web.UI.WebControls.FormView> -Steuerelement versucht, wechseln Sie zwischen dem Bearbeitungsmodus, Einfügemodus und nur-Lese Modus, jedoch bevor der Modus tatsächlich ändert. Dadurch können Sie eine Methode zur Verarbeitung von Ereignissen bereitzustellen, die führt eine benutzerdefinierte Routine, z. B. das Konfigurieren der <xref:System.Web.UI.WebControls.FormView> für einen bestimmten Modus zu steuern oder die modusänderung Abbrechen, wenn dieses Ereignis tritt auf.  
  
 Ein <xref:System.Web.UI.WebControls.FormViewModeEventArgs> Objekt wird an die Methode zur Verarbeitung von Ereignissen, die Ihnen ermöglicht, die bestimmen, übergeben die <xref:System.Web.UI.WebControls.FormView> Steuerelement wechseln, um zu bestimmen, ob die <xref:System.Web.UI.WebControls.FormView.ModeChanging> Ereignis ausgelöst wurde, weil der Benutzer einen Bearbeitungsvorgang abgebrochen oder um anzugeben, dass ein Insert-Vorgang abgebrochen werden soll. Verwenden Sie zum Bestimmen des neuen Modus der <xref:System.Web.UI.WebControls.FormViewModeEventArgs.NewMode%2A> Eigenschaft. Können Sie auch die <xref:System.Web.UI.WebControls.FormViewModeEventArgs.NewMode%2A> Eigenschaft, um in einen anderen Modus wechseln, durch Festlegung auf eine der der <xref:System.Web.UI.WebControls.FormViewMode> -Enumerationswerte fest. Verwenden der <xref:System.Web.UI.WebControls.FormViewModeEventArgs.CancelingEdit%2A> Eigenschaft, um zu bestimmen, ob der Benutzer einen Bearbeitungsvorgang abgebrochen hat. Legen Sie zum Abbrechen eines Insert-Vorgangs die <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> Eigenschaft `true`.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Nutzen von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.ModeChanging> Ereignis an den Pager ausblenden Datenzeile, wenn die <xref:System.Web.UI.WebControls.FormView> steuern, in den Bearbeitungsmodus wechselt.  
  
 [!code-aspx-csharp[FormViewModeEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewModeEventArgs/CS/formviewmodeeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewModeEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewModeEventArgs/VB/formviewmodeeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewModeEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewModeEventHandler" />
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewModeEventArgs.CancelingEdit" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewModeEventArgs.NewMode" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnModeChanging(System.Web.UI.WebControls.FormViewModeEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ModifiedOuterTableStylePropertyName">
      <MemberSignature Language="C#" Value="protected internal virtual string ModifiedOuterTableStylePropertyName ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string ModifiedOuterTableStylePropertyName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.ModifiedOuterTableStylePropertyName" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function ModifiedOuterTableStylePropertyName () As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::String ^ ModifiedOuterTableStylePropertyName();" />
      <MemberSignature Language="F#" Value="abstract member ModifiedOuterTableStylePropertyName : unit -&gt; string&#xA;override this.ModifiedOuterTableStylePropertyName : unit -&gt; string" Usage="formView.ModifiedOuterTableStylePropertyName " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Bestimmt, ob die tabellenspezifischen CSS-Formatierungsregeln, die dem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement zugeordnet sind, auf ihre Standardwerte festgelegt werden.</summary>
        <returns>Die standardmäßigen CSS-Formatierungsregeln, die dem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement zugeordnet sind.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Table-spezifischen CSS-Stilregeln werden auf ihre Standardwerte festgelegt, mithilfe der <xref:System.Web.UI.WebControls.FormView.BackImageUrl%2A>, <xref:System.Web.UI.WebControls.FormView.CellPadding%2A>, <xref:System.Web.UI.WebControls.FormView.CellSpacing%2A>, <xref:System.Web.UI.WebControls.FormView.GridLines%2A>, <xref:System.Web.UI.WebControls.FormView.HorizontalAlign%2A> und <xref:System.Web.UI.WebControls.Style.Font%2A> Eigenschaften.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBubbleEvent">
      <MemberSignature Language="C#" Value="protected override bool OnBubbleEvent (object source, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnBubbleEvent(object source, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnBubbleEvent(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnBubbleEvent (source As Object, e As EventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnBubbleEvent(System::Object ^ source, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnBubbleEvent : obj * EventArgs -&gt; bool" Usage="formView.OnBubbleEvent (source, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">Die Quelle des Ereignisses.</param>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Behandelt ein Ereignis, das in der Steuerelementhierarchie nach oben weitergegeben wird.</summary>
        <returns>
          <see langword="true" /> zeigt an, dass das Ereignis in der Steuerelementhierarchie nach oben weitergegeben werden soll, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Control.OnBubbleEvent%2A?displayProperty=nameWithType> Methode wird vom Steuerelement verwendet, optional Ereignisse, die der Steuerelementhierarchie nach oben weitergegeben behandeln die <xref:System.Web.UI.Control.RaiseBubbleEvent%2A> Methode. Bestimmt, ob ein Ereignis zu behandeln, durch Untersuchen der Eigenschaften von den <xref:System.EventArgs> -Objekt in der `e` Parameter. Wenn ein Ereignis verarbeitet werden muss, führt die Methode die entsprechende Aktion aus. Andere Ereignisse werden ignoriert, und der Steuerelementhierarchie nach oben übergeben. Diese Methode gibt an, ob das Ereignis die Hierarchie der Steuerelemente über den Rückgabewert zu übergeben.  
  
 Die <xref:System.Web.UI.WebControls.FormView> Steuerelement überschreibt die basisimplementierung dieser Methode die entsprechende Aktion ausführen, wenn eine der vom Steuerelement erkannten Schaltflächen geklickt wird. Die folgende Tabelle enthält die Befehlsschaltflächen, die die <xref:System.Web.UI.WebControls.FormView> Steuerelement erkannt.  
  
|Schaltfläche|CommandName-Wert|Beschreibung |  
|------------|-----------------------|-----------------|  
|Abbrechen|"Abbrechen"|Verwendet, aktualisieren oder Einfügen von Vorgängen, den Vorgang abzubrechen und um die vom Benutzer eingegebenen Werte zu verwerfen. Die <xref:System.Web.UI.WebControls.FormView> steuern Sie anschließend zurück in den Modus gemäß der <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> Eigenschaft.|  
|Löschen|"Löschen"|Zum Löschen der Vorgänge um angezeigten Datensatzes aus der Datenquelle zu löschen. Löst die <xref:System.Web.UI.WebControls.FormView.ItemDeleting> und <xref:System.Web.UI.WebControls.FormView.ItemDeleted> Ereignisse.|  
|Bearbeiten|"Bearbeiten"|Wird die in Aktualisierungsvorgängen verwendet wird, stellen die <xref:System.Web.UI.WebControls.FormView> Steuerelement im Bearbeitungsmodus befindet. Der Inhalt die <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> Eigenschaft wird für die Datenzeile angezeigt.|  
|Insert|"Insert"|Wird in Einfügevorgängen verwendet, um zu versuchen, einen neuen Datensatz in der Datenquelle mit den vom Benutzer bereitgestellten Werten einfügen. Löst die <xref:System.Web.UI.WebControls.FormView.ItemInserting> und <xref:System.Web.UI.WebControls.FormView.ItemInserted> Ereignisse.|  
|Neu|"New"|In Einfügevorgängen verwendet wird, stellen die <xref:System.Web.UI.WebControls.FormView> Steuerelement im Einfügemodus befindet. Der Inhalt die <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> Eigenschaft wird für die Datenzeile angezeigt.|  
|Seite|"Page"|In Pagingvorgänge verwendet, um die eine Schaltfläche in der Pagerzeile darstellt, die Paging ausführt. Legen Sie zum Angeben des Pagingvorgangs der `CommandArgument` Eigenschaft der Schaltfläche "Weiter", "Prev", "First", "Last" oder der Index der Seite, zu der navigiert. Löst die <xref:System.Web.UI.WebControls.FormView.PageIndexChanging> und <xref:System.Web.UI.WebControls.FormView.PageIndexChanged> Ereignisse. **Hinweis:** diese Art von Schaltfläche wird in der Regel nur in der Pagervorlage verwendet.|  
|Update|"Aktualisieren"|In Aktualisierungsvorgängen verwendet, um zu versuchen, den angezeigten Datensatz in der Datenquelle mit den Werten, die vom Benutzer bereitgestellte aktualisieren. Löst die <xref:System.Web.UI.WebControls.FormView.ItemUpdating> und <xref:System.Web.UI.WebControls.FormView.ItemUpdated> Ereignisse.|  
  
 Diese Version der Methode gibt `true` Wenn eine dieser Schaltflächen wird verarbeitet. Weitere Informationen zum Eventbubbling finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Beim Erweitern der <see cref="T:System.Web.UI.WebControls.FormView" /> -Klasse können Sie überschreiben diese Methode, um Ihre eigenen Ereignisse zu behandeln. Stellen Sie sicher, dass den Rückgabewert zu verwenden, um anzugeben, ob das Ereignis der Steuerelementhierarchie nach oben übergeben werden sollen.</para>
        </block>
        <altmember cref="M:System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="formView.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.Control.Init" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView.OnInit%2A> Methode wird aufgerufen, indem die <xref:System.Web.UI.WebControls.FormView> Steuerelement zum Auslösen der <xref:System.Web.UI.Control.Init> Ereignis. Es wird im Allgemeinen von Entwicklern verwendet, wenn erweitern die <xref:System.Web.UI.WebControls.FormView> Klasse.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Web.UI.WebControls.FormView.OnInit%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Beim Überschreiben von <see cref="M:System.Web.UI.WebControls.FormView.OnInit(System.EventArgs)" /> in einer abgeleiteten Klasse, werden Sie sicher, dass der Basisklasse aufrufen <see cref="M:System.Web.UI.WebControls.FormView.OnInit(System.EventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
        <altmember cref="E:System.Web.UI.Control.Init" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCommand (System.Web.UI.WebControls.FormViewCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCommand(class System.Web.UI.WebControls.FormViewCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemCommand (e As FormViewCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemCommand(System::Web::UI::WebControls::FormViewCommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemCommand : System.Web.UI.WebControls.FormViewCommandEventArgs -&gt; unit&#xA;override this.OnItemCommand : System.Web.UI.WebControls.FormViewCommandEventArgs -&gt; unit" Usage="formView.OnItemCommand e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.FormViewCommandEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.FormView.ItemCommand" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView.OnItemCommand%2A> Methode wird aufgerufen, indem die <xref:System.Web.UI.WebControls.FormView> Steuerelement zum Auslösen der <xref:System.Web.UI.WebControls.FormView.ItemCommand> Ereignis. Es wird im Allgemeinen von Entwicklern verwendet, wenn erweitern die <xref:System.Web.UI.WebControls.FormView> Klasse.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Web.UI.WebControls.FormView.OnItemCommand%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Beim Überschreiben von <see cref="M:System.Web.UI.WebControls.FormView.OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)" /> in einer abgeleiteten Klasse, werden Sie sicher, dass der Basisklasse aufrufen <see cref="M:System.Web.UI.WebControls.FormView.OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCommand" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewCommandEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemCreated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemCreated : EventArgs -&gt; unit&#xA;override this.OnItemCreated : EventArgs -&gt; unit" Usage="formView.OnItemCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.FormView.ItemCreated" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView.OnItemCreated%2A> Methode wird aufgerufen, indem die <xref:System.Web.UI.WebControls.FormView> Steuerelement zum Auslösen der <xref:System.Web.UI.WebControls.FormView.ItemCreated> Ereignis. Es wird im Allgemeinen von Entwicklern verwendet, wenn erweitern die <xref:System.Web.UI.WebControls.FormView> Klasse.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Web.UI.WebControls.FormView.OnItemCreated%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Beim Überschreiben von <see cref="M:System.Web.UI.WebControls.FormView.OnItemCreated(System.EventArgs)" /> in einer abgeleiteten Klasse, werden Sie sicher, dass der Basisklasse aufrufen <see cref="M:System.Web.UI.WebControls.FormView.OnItemCreated(System.EventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCreated" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemDeleted">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDeleted (System.Web.UI.WebControls.FormViewDeletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemDeleted(class System.Web.UI.WebControls.FormViewDeletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemDeleted(System.Web.UI.WebControls.FormViewDeletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemDeleted (e As FormViewDeletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemDeleted(System::Web::UI::WebControls::FormViewDeletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemDeleted : System.Web.UI.WebControls.FormViewDeletedEventArgs -&gt; unit&#xA;override this.OnItemDeleted : System.Web.UI.WebControls.FormViewDeletedEventArgs -&gt; unit" Usage="formView.OnItemDeleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewDeletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.FormViewDeletedEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.FormView.ItemDeleted" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView.OnItemDeleted%2A> Methode wird aufgerufen, indem die <xref:System.Web.UI.WebControls.FormView> Steuerelement zum Auslösen der <xref:System.Web.UI.WebControls.FormView.ItemDeleted> Ereignis. Es wird im Allgemeinen von Entwicklern verwendet, wenn erweitern die <xref:System.Web.UI.WebControls.FormView> Klasse.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Web.UI.WebControls.FormView.OnItemDeleted%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Beim Überschreiben von <see cref="M:System.Web.UI.WebControls.FormView.OnItemDeleted(System.Web.UI.WebControls.FormViewDeletedEventArgs)" /> in einer abgeleiteten Klasse, werden Sie sicher, dass der Basisklasse aufrufen <see cref="M:System.Web.UI.WebControls.FormView.OnItemDeleted(System.Web.UI.WebControls.FormViewDeletedEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemDeleted" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewDeletedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemDeleting">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDeleting (System.Web.UI.WebControls.FormViewDeleteEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemDeleting(class System.Web.UI.WebControls.FormViewDeleteEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemDeleting(System.Web.UI.WebControls.FormViewDeleteEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemDeleting (e As FormViewDeleteEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemDeleting(System::Web::UI::WebControls::FormViewDeleteEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemDeleting : System.Web.UI.WebControls.FormViewDeleteEventArgs -&gt; unit&#xA;override this.OnItemDeleting : System.Web.UI.WebControls.FormViewDeleteEventArgs -&gt; unit" Usage="formView.OnItemDeleting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewDeleteEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.FormViewDeleteEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.FormView.ItemDeleting" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView.OnItemDeleting%2A> Methode wird aufgerufen, indem die <xref:System.Web.UI.WebControls.FormView> Steuerelement zum Auslösen der <xref:System.Web.UI.WebControls.FormView.ItemDeleting> Ereignis. Es wird im Allgemeinen von Entwicklern verwendet, wenn erweitern die <xref:System.Web.UI.WebControls.FormView> Klasse.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Web.UI.WebControls.FormView.OnItemDeleting%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Diese Methode wird aufgerufen, wenn das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement nicht an ein Datenquellensteuerelement gebunden ist, der Benutzer den Löschvorgang nicht abgebrochen hat und kein Ereignishandler für das Ereignis registriert ist.</exception>
        <block subset="none" type="overrides">
          <para>Beim Überschreiben von <see cref="M:System.Web.UI.WebControls.FormView.OnItemDeleting(System.Web.UI.WebControls.FormViewDeleteEventArgs)" /> in einer abgeleiteten Klasse, werden Sie sicher, dass der Basisklasse aufrufen <see cref="M:System.Web.UI.WebControls.FormView.OnItemDeleting(System.Web.UI.WebControls.FormViewDeleteEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemDeleting" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewDeleteEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemInserted">
      <MemberSignature Language="C#" Value="protected virtual void OnItemInserted (System.Web.UI.WebControls.FormViewInsertedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemInserted(class System.Web.UI.WebControls.FormViewInsertedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemInserted(System.Web.UI.WebControls.FormViewInsertedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemInserted (e As FormViewInsertedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemInserted(System::Web::UI::WebControls::FormViewInsertedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemInserted : System.Web.UI.WebControls.FormViewInsertedEventArgs -&gt; unit&#xA;override this.OnItemInserted : System.Web.UI.WebControls.FormViewInsertedEventArgs -&gt; unit" Usage="formView.OnItemInserted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewInsertedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.FormViewInsertedEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView.OnItemInserted%2A> Methode wird aufgerufen, indem die <xref:System.Web.UI.WebControls.FormView> Steuerelement zum Auslösen der <xref:System.Web.UI.WebControls.FormView.ItemInserted> Ereignis. Es wird im Allgemeinen von Entwicklern verwendet, wenn erweitern die <xref:System.Web.UI.WebControls.FormView> Klasse.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Web.UI.WebControls.FormView.OnItemInserted%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Beim Überschreiben von <see cref="M:System.Web.UI.WebControls.FormView.OnItemInserted(System.Web.UI.WebControls.FormViewInsertedEventArgs)" /> in einer abgeleiteten Klasse, werden Sie sicher, dass der Basisklasse aufrufen <see cref="M:System.Web.UI.WebControls.FormView.OnItemInserted(System.Web.UI.WebControls.FormViewInsertedEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemInserting">
      <MemberSignature Language="C#" Value="protected virtual void OnItemInserting (System.Web.UI.WebControls.FormViewInsertEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemInserting(class System.Web.UI.WebControls.FormViewInsertEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemInserting(System.Web.UI.WebControls.FormViewInsertEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemInserting (e As FormViewInsertEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemInserting(System::Web::UI::WebControls::FormViewInsertEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemInserting : System.Web.UI.WebControls.FormViewInsertEventArgs -&gt; unit&#xA;override this.OnItemInserting : System.Web.UI.WebControls.FormViewInsertEventArgs -&gt; unit" Usage="formView.OnItemInserting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewInsertEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.FormViewInsertEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.FormView.ItemInserting" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView.OnItemInserting%2A> Methode wird aufgerufen, indem die <xref:System.Web.UI.WebControls.FormView> Steuerelement zum Auslösen der <xref:System.Web.UI.WebControls.FormView.ItemInserting> Ereignis. Es wird im Allgemeinen von Entwicklern verwendet, wenn erweitern die <xref:System.Web.UI.WebControls.FormView> Klasse.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Web.UI.WebControls.FormView.OnItemInserting%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Diese Methode wird aufgerufen, wenn das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement nicht an ein Datenquellensteuerelement gebunden ist, der Benutzer den Einfügevorgang nicht abgebrochen hat und kein Ereignishandler für das Ereignis registriert ist.</exception>
        <block subset="none" type="overrides">
          <para>Beim Überschreiben von <see cref="M:System.Web.UI.WebControls.FormView.OnItemInserting(System.Web.UI.WebControls.FormViewInsertEventArgs)" /> in einer abgeleiteten Klasse, werden Sie sicher, dass der Basisklasse aufrufen <see cref="M:System.Web.UI.WebControls.FormView.OnItemInserting(System.Web.UI.WebControls.FormViewInsertEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserting" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemUpdated">
      <MemberSignature Language="C#" Value="protected virtual void OnItemUpdated (System.Web.UI.WebControls.FormViewUpdatedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemUpdated(class System.Web.UI.WebControls.FormViewUpdatedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemUpdated(System.Web.UI.WebControls.FormViewUpdatedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemUpdated (e As FormViewUpdatedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemUpdated(System::Web::UI::WebControls::FormViewUpdatedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemUpdated : System.Web.UI.WebControls.FormViewUpdatedEventArgs -&gt; unit&#xA;override this.OnItemUpdated : System.Web.UI.WebControls.FormViewUpdatedEventArgs -&gt; unit" Usage="formView.OnItemUpdated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewUpdatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.FormViewUpdatedEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView.OnItemUpdated%2A> Methode wird aufgerufen, indem die <xref:System.Web.UI.WebControls.FormView> Steuerelement zum Auslösen der <xref:System.Web.UI.WebControls.FormView.ItemUpdated> Ereignis. Es wird im Allgemeinen von Entwicklern verwendet, wenn erweitern die <xref:System.Web.UI.WebControls.FormView> Klasse.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Web.UI.WebControls.FormView.OnItemUpdated%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Beim Überschreiben von <see cref="M:System.Web.UI.WebControls.FormView.OnItemUpdated(System.Web.UI.WebControls.FormViewUpdatedEventArgs)" /> in einer abgeleiteten Klasse, werden Sie sicher, dass der Basisklasse aufrufen <see cref="M:System.Web.UI.WebControls.FormView.OnItemUpdated(System.Web.UI.WebControls.FormViewUpdatedEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemUpdating">
      <MemberSignature Language="C#" Value="protected virtual void OnItemUpdating (System.Web.UI.WebControls.FormViewUpdateEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemUpdating(class System.Web.UI.WebControls.FormViewUpdateEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemUpdating(System.Web.UI.WebControls.FormViewUpdateEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemUpdating (e As FormViewUpdateEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemUpdating(System::Web::UI::WebControls::FormViewUpdateEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemUpdating : System.Web.UI.WebControls.FormViewUpdateEventArgs -&gt; unit&#xA;override this.OnItemUpdating : System.Web.UI.WebControls.FormViewUpdateEventArgs -&gt; unit" Usage="formView.OnItemUpdating e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewUpdateEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.FormViewUpdateEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView.OnItemUpdating%2A> Methode wird aufgerufen, indem die <xref:System.Web.UI.WebControls.FormView> Steuerelement zum Auslösen der <xref:System.Web.UI.WebControls.FormView.ItemUpdating> Ereignis. Es wird im Allgemeinen von Entwicklern verwendet, wenn erweitern die <xref:System.Web.UI.WebControls.FormView> Klasse.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Web.UI.WebControls.FormView.OnItemUpdating%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Diese Methode wird aufgerufen, wenn das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement nicht an ein Datenquellensteuerelement gebunden ist, der Benutzer den Aktualisierungsvorgang nicht abgebrochen hat und kein Ereignishandler für das Ereignis registriert ist.</exception>
        <block subset="none" type="overrides">
          <para>Beim Überschreiben von <see cref="M:System.Web.UI.WebControls.FormView.OnItemUpdating(System.Web.UI.WebControls.FormViewUpdateEventArgs)" /> in einer abgeleiteten Klasse, werden Sie sicher, dass der Basisklasse aufrufen <see cref="M:System.Web.UI.WebControls.FormView.OnItemUpdating(System.Web.UI.WebControls.FormViewUpdateEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdateEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnModeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnModeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnModeChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnModeChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnModeChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnModeChanged : EventArgs -&gt; unit&#xA;override this.OnModeChanged : EventArgs -&gt; unit" Usage="formView.OnModeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.FormView.ModeChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView.OnModeChanged%2A> Methode wird aufgerufen, indem die <xref:System.Web.UI.WebControls.FormView> Steuerelement zum Auslösen der <xref:System.Web.UI.WebControls.FormView.ModeChanged> Ereignis. Es wird im Allgemeinen von Entwicklern verwendet, wenn erweitern die <xref:System.Web.UI.WebControls.FormView> Klasse.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Web.UI.WebControls.FormView.OnModeChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Beim Überschreiben von <see cref="M:System.Web.UI.WebControls.FormView.OnModeChanged(System.EventArgs)" /> in einer abgeleiteten Klasse, werden Sie sicher, dass der Basisklasse aufrufen <see cref="M:System.Web.UI.WebControls.FormView.OnModeChanged(System.EventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanged" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnModeChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnModeChanging (System.Web.UI.WebControls.FormViewModeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnModeChanging(class System.Web.UI.WebControls.FormViewModeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnModeChanging(System.Web.UI.WebControls.FormViewModeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnModeChanging (e As FormViewModeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnModeChanging(System::Web::UI::WebControls::FormViewModeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnModeChanging : System.Web.UI.WebControls.FormViewModeEventArgs -&gt; unit&#xA;override this.OnModeChanging : System.Web.UI.WebControls.FormViewModeEventArgs -&gt; unit" Usage="formView.OnModeChanging e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewModeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.FormViewModeEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.FormView.ModeChanging" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView.OnModeChanging%2A> Methode wird aufgerufen, indem die <xref:System.Web.UI.WebControls.FormView> Steuerelement zum Auslösen der <xref:System.Web.UI.WebControls.FormView.ModeChanging> Ereignis. Es wird im Allgemeinen von Entwicklern verwendet, wenn erweitern die <xref:System.Web.UI.WebControls.FormView> Klasse.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Web.UI.WebControls.FormView.OnModeChanging%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Diese Methode wird aufgerufen, wenn das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement nicht an ein Datenquellensteuerelement gebunden ist, die Modusänderung nicht abgebrochen wurde und kein Ereignishandler für das Ereignis registriert ist.</exception>
        <block subset="none" type="overrides">
          <para>Beim Überschreiben von <see cref="M:System.Web.UI.WebControls.FormView.OnModeChanging(System.Web.UI.WebControls.FormViewModeEventArgs)" /> in einer abgeleiteten Klasse, werden Sie sicher, dass der Basisklasse aufrufen <see cref="M:System.Web.UI.WebControls.FormView.OnModeChanging(System.Web.UI.WebControls.FormViewModeEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanging" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewModeEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnPageIndexChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPageIndexChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPageIndexChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnPageIndexChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPageIndexChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPageIndexChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPageIndexChanged : EventArgs -&gt; unit&#xA;override this.OnPageIndexChanged : EventArgs -&gt; unit" Usage="formView.OnPageIndexChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView.OnPageIndexChanged%2A> Methode wird aufgerufen, indem die <xref:System.Web.UI.WebControls.FormView> Steuerelement zum Auslösen der <xref:System.Web.UI.WebControls.FormView.PageIndexChanged> Ereignis. Es wird im Allgemeinen von Entwicklern verwendet, wenn erweitern die <xref:System.Web.UI.WebControls.FormView> Klasse.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Web.UI.WebControls.FormView.OnPageIndexChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Beim Überschreiben von <see cref="M:System.Web.UI.WebControls.FormView.OnPageIndexChanged(System.EventArgs)" /> in einer abgeleiteten Klasse, werden Sie sicher, dass der Basisklasse aufrufen <see cref="M:System.Web.UI.WebControls.FormView.OnPageIndexChanged(System.EventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnPageIndexChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnPageIndexChanging (System.Web.UI.WebControls.FormViewPageEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPageIndexChanging(class System.Web.UI.WebControls.FormViewPageEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnPageIndexChanging(System.Web.UI.WebControls.FormViewPageEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPageIndexChanging (e As FormViewPageEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPageIndexChanging(System::Web::UI::WebControls::FormViewPageEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPageIndexChanging : System.Web.UI.WebControls.FormViewPageEventArgs -&gt; unit&#xA;override this.OnPageIndexChanging : System.Web.UI.WebControls.FormViewPageEventArgs -&gt; unit" Usage="formView.OnPageIndexChanging e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewPageEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.FormViewPageEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView.OnPageIndexChanging%2A> Methode wird aufgerufen, indem die <xref:System.Web.UI.WebControls.FormView> Steuerelement zum Auslösen der <xref:System.Web.UI.WebControls.FormView.PageIndexChanging> Ereignis. Es wird im Allgemeinen von Entwicklern verwendet, wenn erweitern die <xref:System.Web.UI.WebControls.FormView> Klasse.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Web.UI.WebControls.FormView.OnPageIndexChanging%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Diese Methode wird aufgerufen, wenn das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement nicht an ein Datenquellensteuerelement gebunden ist, der Pagingvorgang nicht abgebrochen wurde und kein Ereignishandler für das Ereignis registriert ist.</exception>
        <block subset="none" type="overrides">
          <para>Beim Überschreiben von <see cref="M:System.Web.UI.WebControls.FormView.OnPageIndexChanging(System.Web.UI.WebControls.FormViewPageEventArgs)" /> in einer abgeleiteten Klasse, werden Sie sicher, dass der Basisklasse aufrufen <see cref="M:System.Web.UI.WebControls.FormView.OnPageIndexChanging(System.Web.UI.WebControls.FormViewPageEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewPageEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="PageCount">
      <MemberSignature Language="C#" Value="public virtual int PageCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.PageCount" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PageCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int PageCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PageCount : int" Usage="System.Web.UI.WebControls.FormView.PageCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Gesamtzahl der Seiten ab, die zum Anzeigen sämtlicher Datensätze aus der Datenquelle erforderlich sind.</summary>
        <value>Die Anzahl der Elemente in der zugrunde liegenden Datenquelle.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn das Pagingfeature aktiviert ist (wenn die <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> -Eigenschaftensatz auf `true`), verwenden die <xref:System.Web.UI.WebControls.FormView.PageCount%2A> Eigenschaft, um die Gesamtzahl der Datensätze in der zugrunde liegenden Datenquelle zu ermitteln.  
  
> [!NOTE]
>  Da die <xref:System.Web.UI.WebControls.FormView> Steuerelement zeigt nur einen Datensatz zu einem Zeitpunkt, dieser Wert entspricht der Gesamtanzahl von Seiten erforderlich, um alle Datensätze in der Datenquelle anzuzeigen. Dieser Wert ist nicht präzise bis, nach dem Auftreten der Datenbindung.  
  
 Um den Index des aktuellen Datensatzes aus der zugrunde liegenden Datenquelle zu ermitteln, verwenden die <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.PageCount%2A> Eigenschaft, um zu bestimmen, die Gesamtzahl der Datensätze, die im Steuerelement angezeigt.  
  
 [!code-aspx-csharp[FormViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPagerTemplate/CS/formviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPagerTemplate/VB/formviewpagertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="PageIndex">
      <MemberSignature Language="C#" Value="public virtual int PageIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.PageIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PageIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int PageIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.PageIndex : int with get, set" Usage="System.Web.UI.WebControls.FormView.PageIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Index der angezeigten Seite ab oder legt diesen fest.</summary>
        <value>Der nullbasierte Index des Datenelements aus der zugrunde liegenden Datenquelle, das in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement angezeigt wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn das Pagingfeature aktiviert ist (wenn die <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> -Eigenschaftensatz auf `true`), verwenden Sie die <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> Eigenschaft, um den Index des derzeit angezeigten Datensatzes zu bestimmen. Diese Eigenschaft können auch um programmgesteuert angezeigten Datensatzes zu ändern.  
  
> [!NOTE]
>  Wenn das Pagingfeature aktiviert ist, können Sie diese Eigenschaft auch verwenden, um zu bestimmen, die Seitenzahl des angezeigten Datensatzes; Bedenken Sie jedoch, dass diese Eigenschaft nullbasiert ist.  
  
 Verwenden Sie zum Bestimmen der Gesamtzahl der Elemente in der Datenquelle die <xref:System.Web.UI.WebControls.FormView.PageCount%2A> Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> Eigenschaft, um den Seitenindex des angezeigten Datensatzes zu bestimmen.  
  
 [!code-aspx-csharp[FormViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPagerTemplate/CS/formviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPagerTemplate/VB/formviewpagertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der ausgewählte Wert ist kleiner als -1.</exception>
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="PageIndexChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PageIndexChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PageIndexChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PageIndexChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PageIndexChanged;" />
      <MemberSignature Language="F#" Value="member this.PageIndexChanged : EventHandler " Usage="member this.PageIndexChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn sich nach einem Pagingvorgang der Wert der <see cref="P:System.Web.UI.WebControls.FormView.PageIndex" />-Eigenschaft ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView> -Steuerelement löst die <xref:System.Web.UI.WebControls.FormView.PageIndexChanged> Ereignis aus, wenn eine Schaltfläche "Pager" (eine Schaltfläche mit der `CommandName` -Eigenschaft auf "Page") im Steuerelement geklickt wird, allerdings nachdem die <xref:System.Web.UI.WebControls.FormView> -Steuerelement den Pagingvorgang behandelt. Dadurch können Sie eine Methode zur Verarbeitung von Ereignissen bereitzustellen, die eine benutzerdefinierte Routine ausführt, wenn dieses Ereignis tritt auf.  
  
> [!NOTE]
>  Dieses Ereignis wird nicht ausgelöst, wenn Sie programmgesteuert festlegen der <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> Eigenschaft.  
  
 Pager-Schaltflächen befinden sich in der Regel in der Pagerzeile eine <xref:System.Web.UI.WebControls.FormView> Steuerelement. Dieses Ereignis wird häufig verwendet, um zu synchronisieren ein <xref:System.Web.UI.WebControls.FormView> steuern Sie mit einer <xref:System.Web.UI.WebControls.GridView> Steuerelement oder das Verhalten der Festlegen der <xref:System.Web.UI.WebControls.FormView> Steuerelement nach einem Pagingvorgang.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Nutzen von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.PageIndexChanged> Ereignis Zurückgeben der <xref:System.Web.UI.WebControls.FormView> zu nur-Lese Modus aus, wenn der Benutzer zu einem anderen Datensatz wechselt.  
  
 [!code-aspx-csharp[FormViewPageIndexChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPageIndexChanged/CS/formviewpageindexchangedcs.aspx#1)]
 [!code-aspx-vb[FormViewPageIndexChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPageIndexChanged/VB/formviewpageindexchangedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.EventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnPageIndexChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PageIndexChanging">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewPageEventHandler PageIndexChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewPageEventHandler PageIndexChanging" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PageIndexChanging As FormViewPageEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewPageEventHandler ^ PageIndexChanging;" />
      <MemberSignature Language="F#" Value="member this.PageIndexChanging : System.Web.UI.WebControls.FormViewPageEventHandler " Usage="member this.PageIndexChanging : System.Web.UI.WebControls.FormViewPageEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewPageEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn sich vor einem Pagingvorgang der Wert der <see cref="P:System.Web.UI.WebControls.FormView.PageIndex" />-Eigenschaft ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView> -Steuerelement löst die <xref:System.Web.UI.WebControls.FormView.PageIndexChanging> Ereignis aus, wenn eine Schaltfläche "Pager" (eine Schaltfläche mit der `CommandName` -Eigenschaft auf "Page") im Steuerelement geklickt wird, aber vor der <xref:System.Web.UI.WebControls.FormView> -Steuerelement den Pagingvorgang behandelt. Dadurch können Sie eine Methode zur Verarbeitung von Ereignissen bereitzustellen, die eine benutzerdefinierte Routine, wie z. B. den Pagingvorgang Abbrechen, wenn dieses Ereignis tritt auf, ausführt.  
  
> [!NOTE]
>  Dieses Ereignis wird nicht ausgelöst, wenn Sie programmgesteuert festlegen der <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> Eigenschaft.  
  
 Pager-Schaltflächen befinden sich in der Regel in der Pagerzeile eine <xref:System.Web.UI.WebControls.FormView> Steuerelement.  
  
 Ein <xref:System.Web.UI.WebControls.FormViewPageEventArgs> Objekt übergeben wird, an die Methode zur Verarbeitung von Ereignissen, sodass Sie den Index der vom Benutzer ausgewählten Seite bestimmen und um anzugeben, dass die Pagingvorgang abgebrochen werden soll. Verwenden Sie zum Bestimmen des Indexes der vom Benutzer ausgewählten Seite die <xref:System.Web.UI.WebControls.FormViewPageEventArgs.NewPageIndex%2A> Eigenschaft. Legen Sie zum Abbrechen des Pagingvorgangs der <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> Eigenschaft der <xref:System.Web.UI.WebControls.FormViewPageEventArgs> -Objekt `true`.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Nutzen von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.PageIndexChanging> Ereignis, um ein Pagingvorgang abgebrochen.  
  
> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[FormViewPageEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPageEventArgs/CS/formviewmodeeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewPageEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPageEventArgs/VB/formviewmodeeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewPageEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewPageEventHandler" />
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewPageEventArgs.NewPageIndex" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnPageIndexChanging(System.Web.UI.WebControls.FormViewPageEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PagerSettings">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.PagerSettings PagerSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.PagerSettings PagerSettings" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.PagerSettings" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PagerSettings As PagerSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::PagerSettings ^ PagerSettings { System::Web::UI::WebControls::PagerSettings ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PagerSettings : System.Web.UI.WebControls.PagerSettings" Usage="System.Web.UI.WebControls.FormView.PagerSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.PagerSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf das <see cref="T:System.Web.UI.WebControls.PagerSettings" />-Objekt ab, mit dem Sie die Eigenschaften der Pagerschaltflächen in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement festlegen können.</summary>
        <value>Ein Verweis auf die <see cref="T:System.Web.UI.WebControls.PagerSettings" />, mit dem Sie die Eigenschaften der Pagerschaltflächen in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement festlegen können.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.FormView.PagerSettings%2A> -Eigenschaft steuern Sie die Einstellungen der Pagerzeile in einem <xref:System.Web.UI.WebControls.FormView> Steuerelement. Die Pagerzeile wird angezeigt, wenn das Pagingfeature aktiviert ist (wenn die <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> -Eigenschaftensatz auf `true`), und enthält die Steuerelemente, mit denen den Benutzer auf die anderen Datensätze in das Steuerelement navigieren können. Diese Eigenschaft ist schreibgeschützt. Sie können jedoch festlegen, die Eigenschaften der <xref:System.Web.UI.WebControls.PagerSettings> -Objekt wird zurückgegeben. Die Eigenschaften können deklarativ festgelegt werden, in der Form `Property-Subproperty`, wobei `Subproperty` ist eine Eigenschaft der <xref:System.Web.UI.WebControls.PagerSettings> Objekt (z. B. `PagerSettings-Mode`). Die Eigenschaften können auch programmgesteuert in das Formular festgelegt werden `Property.Subproperty` (z. B. `PagerSettings.Mode`). Allgemeine Einstellungen enthalten normalerweise die Pagerzeile Anzeigemodus und benutzerdefinierten Text oder Bilder für die Navigationssteuerelemente.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.PagerSettings%2A> Eigenschaft, um die Eigenschaften der Pagerzeile anzugeben.  
  
 [!code-aspx-csharp[FormViewAllowPaging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewAllowPaging/CS/formviewallowpagingcs.aspx#1)]
 [!code-aspx-vb[FormViewAllowPaging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewAllowPaging/VB/formviewallowpagingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="PagerStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle PagerStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle PagerStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.PagerStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PagerStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ PagerStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PagerStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.FormView.PagerStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf das <see cref="T:System.Web.UI.WebControls.TableItemStyle" />-Objekt ab, mit dem Sie die Darstellung der Pagerzeile in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement festlegen können.</summary>
        <value>Ein Verweis auf das <see cref="T:System.Web.UI.WebControls.TableItemStyle" />-Objekt, das den Stil der Pagerzeile in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.FormView.PagerStyle%2A> -Eigenschaft zur Steuerung der Darstellung der Pagerzeile in einem <xref:System.Web.UI.WebControls.FormView> Steuerelement. Die Pagerzeile wird angezeigt, wenn das Pagingfeature aktiviert ist (wenn die <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> -Eigenschaftensatz auf `true`), und die Steuerelemente, mit denen den Benutzer navigieren zu den einzelnen Seiten im Steuerelement enthält. Diese Eigenschaft ist schreibgeschützt. Sie können jedoch festlegen, die Eigenschaften der <xref:System.Web.UI.WebControls.TableItemStyle> -Objekt wird zurückgegeben. Die Eigenschaften können deklarativ mithilfe einer der folgenden Methoden festgelegt werden:  
  
-   Fügen Sie in das öffnende Tag ein Attribut der <xref:System.Web.UI.WebControls.FormView> Steuerelement im Formular `Property-Subproperty`, wobei `Subproperty` ist eine Eigenschaft der <xref:System.Web.UI.WebControls.TableItemStyle> Objekt (z. B. `PagerStyle-ForeColor`).  
  
-   Schachteln einer `<PagerRowStyle>` Element zwischen dem öffnenden und schließenden Tags eines der <xref:System.Web.UI.WebControls.FormView> Steuerelement.  
  
 Die Eigenschaften können auch programmgesteuert in das Formular festgelegt werden `Property.Subproperty` (z. B. `PagerStyle.ForeColor`). Allgemeine Einstellungen enthalten normalerweise eine benutzerdefinierte Hintergrundfarbe, Vordergrundfarbe und Schriftarteigenschaften.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.PagerStyle%2A> Eigenschaft an die stileinstellungen für die Pagerzeile.  
  
 [!code-aspx-csharp[FormViewAllowPaging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewAllowPaging/CS/formviewallowpagingcs.aspx#1)]
 [!code-aspx-vb[FormViewAllowPaging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewAllowPaging/VB/formviewallowpagingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="PagerTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate PagerTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate PagerTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PagerTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ PagerTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PagerTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.FormView.PagerTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.FormView))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den benutzerdefinierten Inhalt der Pagerzeile in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement ab oder legt diesen fest.</summary>
        <value>Eine <see cref="T:System.Web.UI.ITemplate" />, die den benutzerdefinierten Inhalt für die Pagerzeile enthält. Der Standardwert ist null (0). Dies bedeutet, dass diese Eigenschaft nicht festgelegt wurde.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wird in eine Pagerzeile angezeigt ein <xref:System.Web.UI.WebControls.FormView> steuern, wenn das Pagingfeature aktiviert ist (wenn der <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> -Eigenschaftensatz auf "true"). Die Pagerzeile enthält die Steuerelemente, die der Benutzer zu den verschiedenen Seiten im Steuerelement navigieren können. Sie können Ihre eigene Benutzeroberfläche mithilfe von definieren, anstatt die integrierte Pager-Zeile-Benutzeroberfläche (UI), die <xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A> Eigenschaft.  
  
> [!NOTE]
>  Wenn der <xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A> festgelegt wird er überschreibt die Pagerzeile integrierte Benutzeroberfläche.  
  
 Platzieren Sie zuerst zum Angeben einer benutzerdefinierten Vorlage für die Pagerzeile `<PagerTemplate>` Tags zwischen die öffnenden und schließenden Tags eines der <xref:System.Web.UI.WebControls.FormView> Steuerelement. Anschließend können Sie den Inhalt der Vorlage zwischen den öffnenden und schließenden auflisten `<PagerTemplate>` Tags. Um die Darstellung der Pagerzeile steuern möchten, verwenden Sie die <xref:System.Web.UI.WebControls.FormView.PagerStyle%2A> Eigenschaft.  
  
 Schaltflächen-Steuerelemente werden in der Regel die Pagervorlage zum Ausführen der Pagingvorgänge hinzugefügt. Die <xref:System.Web.UI.WebControls.FormView> Steuerelement ausführt, einen Pagingvorgang, wenn ein Schaltflächen-Steuerelement, mit dessen `CommandName` -Eigenschaft auf "Page" geklickt wird. Der Schaltfläche `CommandArgument` Eigenschaft bestimmt den Typ des Pagingvorgangs. Die folgende Tabelle enthält die Befehlsargumentwerte, die von unterstützt die <xref:System.Web.UI.WebControls.FormView> Steuerelement.  
  
|CommandArgument Wert|Beschreibung |  
|---------------------------|-----------------|  
|"Weiter"|Wechselt zur nächsten Seite.|  
|"Prev"|Wechselt zur vorherigen Seite.|  
|"First"|Navigiert zur ersten Seite.|  
|"Last"|Navigiert zur letzten Seite.|  
|Ganzzahliger Wert|Navigiert zur angegebenen Seitenzahl.|  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie eine benutzerdefinierte Pagervorlage definiert wird.  
  
 [!code-aspx-csharp[FormViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPagerTemplate/CS/formviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPagerTemplate/VB/formviewpagertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="PerformDataBinding">
      <MemberSignature Language="C#" Value="protected internal override void PerformDataBinding (System.Collections.IEnumerable data);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void PerformDataBinding(class System.Collections.IEnumerable data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.PerformDataBinding(System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub PerformDataBinding (data As IEnumerable)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void PerformDataBinding(System::Collections::IEnumerable ^ data);" />
      <MemberSignature Language="F#" Value="override this.PerformDataBinding : System.Collections.IEnumerable -&gt; unit" Usage="formView.PerformDataBinding data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="data">Ein <see cref="T:System.Collections.IEnumerable" />, das die Datenquelle darstellt.</param>
        <summary>Bindet die angegebene Datenquelle an das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView.PerformDataBinding%2A> Methode ist eine Hilfsmethode wird aufgerufen, indem die <xref:System.Web.UI.WebControls.FormView> Steuerelement, das die angegebene Datenquelle an das Steuerelement zu binden.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Da die <see cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" /> Methode ist versiegelt, sollten Sie diese Methode überschreiben, wenn Sie zusätzliche Aufgaben ausgeführt werden, beim Binden von Daten müssen.</para>
        </block>
        <altmember cref="T:System.Collections.IEnumerable" />
      </Docs>
    </Member>
    <Member MemberName="PrepareControlHierarchy">
      <MemberSignature Language="C#" Value="protected internal virtual void PrepareControlHierarchy ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void PrepareControlHierarchy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.PrepareControlHierarchy" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub PrepareControlHierarchy ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void PrepareControlHierarchy();" />
      <MemberSignature Language="F#" Value="abstract member PrepareControlHierarchy : unit -&gt; unit&#xA;override this.PrepareControlHierarchy : unit -&gt; unit" Usage="formView.PrepareControlHierarchy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Richtet die Steuerelementhierarchie für dieses <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement ein.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView.PrepareControlHierarchy%2A> Methode ist eine Hilfsmethode wird aufgerufen, indem die <xref:System.Web.UI.WebControls.FormView> Steuerelement zum Einrichten der Hierarchie der Steuerelemente in der <xref:System.Web.UI.WebControls.FormView> steuern, bevor das Steuerelement gerendert wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaisePostBackEvent : string -&gt; unit&#xA;override this.RaisePostBackEvent : string -&gt; unit" Usage="formView.RaisePostBackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Das Ereignisargument, aus dem ein <see cref="T:System.Web.UI.WebControls.CommandEventArgs" /> für die ausgelösten Ereignisse erstellt wird.</param>
        <summary>Löst die entsprechenden Ereignisse für das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement aus, wenn es an den Server zurückgesendet wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Seite ruft die <xref:System.Web.UI.WebControls.FormView.RaisePostBackEvent%2A> Methode, wenn ein postback-Ereignis auftritt, löst die entsprechenden Ereignisse für eine <xref:System.Web.UI.WebControls.FormView> Steuerelement. Dieser Aufruf erfolgt im Lebenszyklus Seite nach dem Laden und ändern Sie eine Benachrichtigung abgeschlossen sind, aber bevor Prerendering auftritt. Diese Methode wurde implementiert, um das Erstellen einer <xref:System.Web.UI.WebControls.CommandEventArgs> -Objekt für die Ereignisse, die ausgelöst werden.  
  
> [!NOTE]
>  Diese Methode wird hauptsächlich von Steuerelemententwicklern verwendet, zum Erweitern der <xref:System.Web.UI.WebControls.FormView> Steuerelement.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.CommandEventArgs" />
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
        <altmember cref="M:System.Web.UI.Page.RaisePostBackEvent(System.Web.UI.IPostBackEventHandler,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="formView.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Ein <see cref="T:System.Web.UI.HtmlTextWriter" />, der den auf dem Client zu rendernden Ausgabestream enthält.</param>
        <summary>Zeigt das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement auf dem Client an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView.Render%2A> Methode wird verwendet, um den Inhalt des Server-Steuerelements auf dem Clientbrowser mit dem angegebenen Rendern <xref:System.Web.UI.HtmlTextWriter> Objekt.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderOuterTable">
      <MemberSignature Language="C#" Value="public virtual bool RenderOuterTable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RenderOuterTable" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.RenderOuterTable" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RenderOuterTable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RenderOuterTable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RenderOuterTable : bool with get, set" Usage="System.Web.UI.WebControls.FormView.RenderOuterTable" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IRenderOuterTableControl.RenderOuterTable</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das Steuerelement gerendertes HTML in einem <see langword="table" />-Element einschließt, um Inlinestile zu übernehmen.</summary>
        <value>
          <see langword="true" />, wenn das Steuerelement gerendertes HTML in einem <see langword="table" />-Element einschließt, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um Inlineformatvorlagen treffen, wie z. B. <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A> gelten für alle HTML-Elemente, die für das Steuerelement gerendert wird, schließt ASP.NET den gerenderte HTML in einem `table` Element. Wenn Sie nicht die äußere möchten `table` Element gerendert werden soll, legen Sie diese Eigenschaft auf `false`. Wenn Sie versuchen, Inline Stileigenschaften festgelegt, die für das gesamte Steuerelement gelten, wird in diesem Fall eine Ausnahme ausgelöst.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Row">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewRow Row { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FormViewRow Row" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.Row" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Row As FormViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FormViewRow ^ Row { System::Web::UI::WebControls::FormViewRow ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Row : System.Web.UI.WebControls.FormViewRow" Usage="System.Web.UI.WebControls.FormView.Row" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das <see cref="T:System.Web.UI.WebControls.FormViewRow" />-Objekt ab, das die Datenzeile in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement darstellt.</summary>
        <value>Eine <see cref="T:System.Web.UI.WebControls.FormViewRow" />, die die Datenzeile in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.FormView.Row%2A> Eigenschaft, die den programmgesteuerten Zugriff auf die <xref:System.Web.UI.WebControls.FormViewRow> -Objekt, das die Datenzeile darstellt. Die Datenzeile enthält unterschiedliche Inhalte basierend auf der Vorlage für den aktuellen Modus gerendert (angegeben durch die <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> Eigenschaft). Sie können nur den Inhalt der Vorlage für den aktuellen Modus zugreifen. Die folgende Tabelle zeigt, welche Vorlage für jeden Modus verwendet wird.  
  
|Modus|Vorlage gerendert|  
|----------|-----------------------|  
|Bearbeiten|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|  
|Insert|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|  
|Schreibgeschützt|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.FormView.Row%2A> Eigenschaft ist erst verfügbar, nachdem die <xref:System.Web.UI.WebControls.FormView> Steuerelement erstellt, die die Datenzeile in der <xref:System.Web.UI.WebControls.FormView.ItemCreated> Ereignis.  
  
 Diese Eigenschaft wird häufig verwendet, wenn die Datenzeile, z. B. beim Hinzufügen von benutzerdefinierten Inhalts programmgesteuert bearbeitet werden muss. Änderungen an der <xref:System.Web.UI.WebControls.FormView.Row%2A> Eigenschaft muss ausgeführt werden, nachdem die <xref:System.Web.UI.WebControls.FormView> Steuerelement wurde Daten gebunden ist, andernfalls die <xref:System.Web.UI.WebControls.FormView> Steuerelement überschreibt alle Änderungen.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.Row%2A> Eigenschaft, um die Eigenschaften der Datenzeile während der Zugriff auf die <xref:System.Web.UI.WebControls.FormView.ItemCreated> Ereignis.  
  
 [!code-aspx-csharp[FormViewRow#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewRow/CS/formviewrowcs.aspx#1)]
 [!code-aspx-vb[FormViewRow#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewRow/VB/formviewrowvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
      </Docs>
    </Member>
    <Member MemberName="RowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle RowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle RowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.RowStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RowStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ RowStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RowStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.FormView.RowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf das <see cref="T:System.Web.UI.WebControls.TableItemStyle" />-Objekt ab, mit dem Sie die Darstellung der Datenzeile in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement festlegen können, wenn sich das Steuerelement im schreibgeschützten Modus befindet.</summary>
        <value>Ein Verweis auf den <see cref="T:System.Web.UI.WebControls.TableItemStyle" />, der den Stil der Datenzeile in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement darstellt, wenn sich dieses im schreibgeschützten Modus befindet.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.FormView.RowStyle%2A> -Eigenschaft zur Steuerung der Darstellung der Datenzeile, wenn eine <xref:System.Web.UI.WebControls.FormView> Steuerelement befindet sich im schreibgeschützten Modus. Wenn die <xref:System.Web.UI.WebControls.FormView> Steuerelement befindet sich im schreibgeschützten Modus, die die Datenzeile zeigt den benutzerdefinierten Inhalt, der gemäß der <xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A> Eigenschaft. Diese Eigenschaft ist schreibgeschützt. Sie können jedoch festlegen, die Eigenschaften der <xref:System.Web.UI.WebControls.TableItemStyle> -Objekt wird zurückgegeben. Die Eigenschaften können deklarativ mithilfe einer der folgenden Methoden festgelegt werden:  
  
-   Fügen Sie in das öffnende Tag ein Attribut der <xref:System.Web.UI.WebControls.FormView> Steuerelement im Formular `Property-Subproperty`, wobei `Subproperty` ist eine Eigenschaft der <xref:System.Web.UI.WebControls.TableItemStyle> Objekt (z. B. `RowStyle-ForeColor`).  
  
-   Schachteln einer `<RowStyle>` Element zwischen dem öffnenden und schließenden Tags eines der <xref:System.Web.UI.WebControls.FormView> Steuerelement.  
  
 Die Eigenschaften können auch programmgesteuert in das Formular festgelegt werden `Property.Subproperty` (z. B. `RowStyle.ForeColor`). Allgemeine Einstellungen enthalten normalerweise eine benutzerdefinierte Hintergrundfarbe, Vordergrundfarbe und Schriftarteigenschaften.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.RowStyle%2A> -Eigenschaft an einen benutzerdefinierten Stil für eine Datenzeile, wenn eine <xref:System.Web.UI.WebControls.FormView> Steuerelement befindet sich im schreibgeschützten Modus.  
  
 [!code-aspx-csharp[FormViewEditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEditItemTemplate/CS/formviewedititemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEditItemTemplate/VB/formviewedititemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected internal override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.SaveControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SaveControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ SaveControlState();" />
      <MemberSignature Language="F#" Value="override this.SaveControlState : unit -&gt; obj" Usage="formView.SaveControlState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Speichert den Zustand der Eigenschaften des <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelements, die auch dann beibehalten werden müssen, wenn die <see cref="P:System.Web.UI.Control.EnableViewState" />-Eigenschaft auf <see langword="false" /> festgelegt ist.</summary>
        <returns>Gibt den aktuellen Ansichtszustand des Serversteuerelements zurück. Wenn dem Steuerelement kein Ansichtszustand zugeordnet ist, gibt diese Methode <see langword="null" /> zurück.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird verwendet, um den Zustand speichern die <xref:System.Web.UI.WebControls.FormView> Steuerelementeigenschaften, die beibehalten werden muss, auch wenn die <xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=nameWithType> -Eigenschaftensatz auf `false`.  
  
> [!NOTE]
>  Diese Methode wird hauptsächlich von Steuerelemententwicklern verwendet, zum Erweitern der <xref:System.Web.UI.WebControls.FormView> Steuerelement.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.EnableViewState" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="formView.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Speichert den aktuellen Ansichtszustand des <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelements.</summary>
        <returns>Ein <see cref="T:System.Object" />, das den gespeicherten Zustand des <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelements enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView.SaveViewState%2A> Methode ist eine Hilfsmethode wird aufgerufen, indem die <xref:System.Web.UI.WebControls.FormView> Steuerelement den Zustand des Steuerelements zu speichern.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedValue">
      <MemberSignature Language="C#" Value="public object SelectedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SelectedValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.SelectedValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SelectedValue { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedValue : obj" Usage="System.Web.UI.WebControls.FormView.SelectedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Datenschlüsselwert des aktuellen Datensatzes in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement ab.</summary>
        <value>Der Datenschlüsselwert des aktuellen Datensatzes in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei der <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> Eigenschaft festgelegt ist, die <xref:System.Web.UI.WebControls.FormView> -Steuerelement erstellt automatisch eine <xref:System.Web.UI.WebControls.DataKey> Objekt, das Schlüssel/Wert-Paare des Felds oder der Felder aufgeführt, die enthält, die <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> -Eigenschaft für den aktuellen Datensatz. Die <xref:System.Web.UI.WebControls.DataKey> Objekt, das die primären Schlüsselfelder für den aktuellen Datensatz darstellt und befindet sich in der <xref:System.Web.UI.WebControls.FormView.DataKey%2A> Eigenschaft. Anstatt die <xref:System.Web.UI.WebControls.FormView.DataKey%2A> Eigenschaft, um Zugriff auf den Daten-Schlüssel-Wert, können Sie die <xref:System.Web.UI.WebControls.FormView.SelectedValue%2A> -Eigenschaft, wie eine Verknüpfung.  
  
> [!NOTE]
>  Wenn die <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> Eigenschaftenlisten mehrere Felder, die diese Eigenschaft gibt den Wert des ersten Felds aufgeführt.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.SelectedValue%2A> Eigenschaft, um den Wert des Schlüsselfelds zu ermitteln.  
  
 [!code-aspx-csharp[FormViewSelectedValue#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewSelectedValue/CS/formviewselectedvaluecs.aspx#1)]
 [!code-aspx-vb[FormViewSelectedValue#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewSelectedValue/VB/formviewselectedvaluevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataKeyNames" />
      </Docs>
    </Member>
    <Member MemberName="SetPageIndex">
      <MemberSignature Language="C#" Value="public void SetPageIndex (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPageIndex(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.SetPageIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPageIndex (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPageIndex(int index);" />
      <MemberSignature Language="F#" Value="member this.SetPageIndex : int -&gt; unit" Usage="formView.SetPageIndex index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Der festzulegende Index.</param>
        <summary>Legt den Index der derzeit angezeigten Seite im <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement fest.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataItemContainer.DataItemIndex">
      <MemberSignature Language="C#" Value="int System.Web.UI.IDataItemContainer.DataItemIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Web.UI.IDataItemContainer.DataItemIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#IDataItemContainer#DataItemIndex" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DataItemIndex As Integer Implements IDataItemContainer.DataItemIndex" />
      <MemberSignature Language="C++ CLI" Value="property int System.Web.UI.IDataItemContainer.DataItemIndex { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.FormView.System.Web.UI.IDataItemContainer.DataItemIndex" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IDataItemContainer.DataItemIndex</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.Web.UI.IDataItemContainer.DataItemIndex" />.</summary>
        <value>Ein Objekt, das den Anzeigeindex darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.UI.WebControls.FormView>-Instanz in eine <xref:System.Web.UI.IDataItemContainer>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IDataItemContainer" />
        <altmember cref="P:System.Web.UI.IDataItemContainer.DataItemIndex" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataItemContainer.DisplayIndex">
      <MemberSignature Language="C#" Value="int System.Web.UI.IDataItemContainer.DisplayIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Web.UI.IDataItemContainer.DisplayIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#IDataItemContainer#DisplayIndex" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DisplayIndex As Integer Implements IDataItemContainer.DisplayIndex" />
      <MemberSignature Language="C++ CLI" Value="property int System.Web.UI.IDataItemContainer.DisplayIndex { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.FormView.System.Web.UI.IDataItemContainer.DisplayIndex" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IDataItemContainer.DisplayIndex</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.Web.UI.IDataItemContainer.DisplayIndex" />.</summary>
        <value>Gibt immer 0 zurück.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.UI.WebControls.FormView>-Instanz in eine <xref:System.Web.UI.IDataItemContainer>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IDataItemContainer" />
        <altmember cref="P:System.Web.UI.IDataItemContainer.DisplayIndex" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostBackEvent (eventArgument As String) Implements IPostBackEventHandler.RaisePostBackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System::String ^ eventArgument) = System::Web::UI::IPostBackEventHandler::RaisePostBackEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Das Argument für das Ereignis.</param>
        <summary>Löst Ereignisse für das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement aus, wenn es ein Postback an den Server ausführt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Seite ruft die <xref:System.Web.UI.WebControls.FormView.System%23Web%23UI%23IPostBackEventHandler%23RaisePostBackEvent%2A> Methode, wenn ein Postbackereignis eintritt. Dieser Aufruf erfolgt im Lebenszyklus Seite nach dem Laden und ändern Sie eine Benachrichtigung abgeschlossen sind, aber bevor die Seite gerendert wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataKeyNames">
      <MemberSignature Language="C#" Value="string[] System.Web.UI.WebControls.IDataBoundControl.DataKeyNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] System.Web.UI.WebControls.IDataBoundControl.DataKeyNames" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames" />
      <MemberSignature Language="VB.NET" Value=" Property DataKeyNames As String() Implements IDataBoundControl.DataKeyNames" />
      <MemberSignature Language="C++ CLI" Value="property cli::array &lt;System::String ^&gt; ^ System.Web.UI.WebControls.IDataBoundControl.DataKeyNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundControl.DataKeyNames" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataKeyNames</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Array ab, das die Namen der primären Schlüsselfelder der im <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement angezeigten Elemente enthält, bzw. legt das Array fest.</summary>
        <value>Ein Array, das die Namen der primären Schlüsselfelder der im <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement angezeigten Elemente enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.UI.WebControls.FormView>-Instanz in eine <xref:System.Web.UI.WebControls.IDataBoundControl>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataMember">
      <MemberSignature Language="C#" Value="string System.Web.UI.WebControls.IDataBoundControl.DataMember { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string System.Web.UI.WebControls.IDataBoundControl.DataMember" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataMember" />
      <MemberSignature Language="VB.NET" Value=" Property DataMember As String Implements IDataBoundControl.DataMember" />
      <MemberSignature Language="C++ CLI" Value="property System::String ^ System.Web.UI.WebControls.IDataBoundControl.DataMember { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundControl.DataMember" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataMember</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Datenelementliste ab, an die das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement gebunden wird, wenn die Datenquelle mehrere Listen mit Datenelementen enthält, oder legt den Namen fest.</summary>
        <value>Der Name der Datenelementliste, an die das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement gebunden wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.UI.WebControls.FormView>-Instanz in eine <xref:System.Web.UI.WebControls.IDataBoundControl>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataSource">
      <MemberSignature Language="C#" Value="object System.Web.UI.WebControls.IDataBoundControl.DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Web.UI.WebControls.IDataBoundControl.DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSource" />
      <MemberSignature Language="VB.NET" Value=" Property DataSource As Object Implements IDataBoundControl.DataSource" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Web.UI.WebControls.IDataBoundControl.DataSource { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundControl.DataSource" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataSource</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Objekt ab, das die Liste der Daten enthält, die vom <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement abgerufen werden, oder legt das Objekt fest.</summary>
        <value>Das Objekt, das die Liste der Daten enthält, die vom <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement abgerufen werden.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.UI.WebControls.FormView>-Instanz in eine <xref:System.Web.UI.WebControls.IDataBoundControl>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataSourceID">
      <MemberSignature Language="C#" Value="string System.Web.UI.WebControls.IDataBoundControl.DataSourceID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string System.Web.UI.WebControls.IDataBoundControl.DataSourceID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID" />
      <MemberSignature Language="VB.NET" Value=" Property DataSourceID As String Implements IDataBoundControl.DataSourceID" />
      <MemberSignature Language="C++ CLI" Value="property System::String ^ System.Web.UI.WebControls.IDataBoundControl.DataSourceID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundControl.DataSourceID" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataSourceID</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die ID des Datenquellensteuerelements ab, das die Liste der Datenelemente enthält, die vom <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement abgerufen werden, oder legt die ID fest.</summary>
        <value>Die ID des Datenquellensteuerelements, das die Liste der Datenelemente enthält, die vom <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement abgerufen werden.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.UI.WebControls.FormView>-Instanz in eine <xref:System.Web.UI.WebControls.IDataBoundControl>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataSourceObject">
      <MemberSignature Language="C#" Value="System.Web.UI.IDataSource System.Web.UI.WebControls.IDataBoundControl.DataSourceObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.IDataSource System.Web.UI.WebControls.IDataBoundControl.DataSourceObject" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DataSourceObject As IDataSource Implements IDataBoundControl.DataSourceObject" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::IDataSource ^ System.Web.UI.WebControls.IDataBoundControl.DataSourceObject { System::Web::UI::IDataSource ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundControl.DataSourceObject" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataSourceObject</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.IDataSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Datenquellenobjekt ab, das die Liste der Datenelemente enthält, die vom <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement abgerufen werden.</summary>
        <value>Das Datenquellenobjekt, das die Liste der Datenelemente enthält, die vom <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement abgerufen werden.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.UI.WebControls.FormView>-Instanz in eine <xref:System.Web.UI.WebControls.IDataBoundControl>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundItemControl.DataKey">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IDataBoundItemControl.DataKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IDataBoundItemControl.DataKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundItemControl#DataKey" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DataKey As DataKey Implements IDataBoundItemControl.DataKey" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::WebControls::DataKey ^ System.Web.UI.WebControls.IDataBoundItemControl.DataKey { System::Web::UI::WebControls::DataKey ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundItemControl.DataKey" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundItemControl.DataKey</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Objekt ab, das den Datenschlüsselwert der Zeile im <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement darstellt.</summary>
        <value>Das Objekt, das den Datenschlüsselwert der Zeile im <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.UI.WebControls.FormView>-Instanz in eine <xref:System.Web.UI.WebControls.IDataBoundControl>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundItemControl.Mode">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.DataBoundControlMode System.Web.UI.WebControls.IDataBoundItemControl.Mode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.DataBoundControlMode System.Web.UI.WebControls.IDataBoundItemControl.Mode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundItemControl#Mode" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Mode As DataBoundControlMode Implements IDataBoundItemControl.Mode" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::WebControls::DataBoundControlMode System.Web.UI.WebControls.IDataBoundItemControl.Mode { System::Web::UI::WebControls::DataBoundControlMode get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundItemControl.Mode" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundItemControl.Mode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataBoundControlMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den aktuellen Modus des <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelements ab.</summary>
        <value>Der aktuelle Modus des <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelements.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.UI.WebControls.FormView>-Instanz in eine <xref:System.Web.UI.WebControls.IDataBoundControl>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions">
      <MemberSignature Language="C#" Value="System.Web.UI.PostBackOptions IPostBackContainer.GetPostBackOptions (System.Web.UI.WebControls.IButtonControl buttonControl);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Web.UI.PostBackOptions System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(class System.Web.UI.WebControls.IButtonControl buttonControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)" />
      <MemberSignature Language="VB.NET" Value="Function GetPostBackOptions (buttonControl As IButtonControl) As PostBackOptions Implements IPostBackContainer.GetPostBackOptions" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Web::UI::PostBackOptions ^ System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(System::Web::UI::WebControls::IButtonControl ^ buttonControl) = System::Web::UI::WebControls::IPostBackContainer::GetPostBackOptions;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.PostBackOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buttonControl" Type="System.Web.UI.WebControls.IButtonControl" />
      </Parameters>
      <Docs>
        <param name="buttonControl">Das Schaltflächensteuerelement, das die Seite zurück an den Server gesendet hat.</param>
        <summary>Bestimmt die Postbackereignisoptionen für das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement.</summary>
        <returns>Die Postbackereignisoptionen für das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView.System%23Web%23UI%23WebControls%23IPostBackContainer%23GetPostBackOptions%2A> Methode ist eine Hilfsmethode, die aufgerufen wird, werden die <xref:System.Web.UI.WebControls.FormView> -Steuerelement zum Erstellen einer <xref:System.Web.UI.PostBackOptions> -Objekt, das die Postbackereignisoptionen für das Steuerelement enthält. Die <xref:System.Web.UI.PostBackOptions> Objekt wird normalerweise verwendet, als Parameter für die <xref:System.Web.UI.Page.GetPostBackEventReference%2A> Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Das im <paramref name="buttonControl" />-Parameter enthaltene Objekt hat den Wert <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Die <see cref="P:System.Web.UI.WebControls.IButtonControl.CausesValidation" />-Eigenschaft von <paramref name="buttonControl" /> ist <see langword="true" />.</exception>
        <altmember cref="T:System.Web.UI.PostBackOptions" />
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); };" />
      <MemberSignature Language="F#" Value="member this.TagKey : System.Web.UI.HtmlTextWriterTag" Usage="System.Web.UI.WebControls.FormView.TagKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den <see cref="T:System.Web.UI.HtmlTextWriterTag" />-Wert für das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement ab.</summary>
        <value>Gibt immer <see langword="HtmlTextWriterTag.Table" /> zurück.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView.TagKey%2A> Eigenschaft ermöglicht dem Ausgabestream schreiben Sie die entsprechenden HTML-Markup für die <xref:System.Web.UI.WebControls.FormView> Steuerelement.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Sie können diese Eigenschaft, um anzugeben, welcher überschreiben <see cref="T:System.Web.UI.HtmlTextWriterTag" /> Wert, der für das abgeleitete Steuerelement.</para>
        </block>
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.TagKey" />
      </Docs>
    </Member>
    <Member MemberName="TopPagerRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewRow TopPagerRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FormViewRow TopPagerRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TopPagerRow As FormViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FormViewRow ^ TopPagerRow { System::Web::UI::WebControls::FormViewRow ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TopPagerRow : System.Web.UI.WebControls.FormViewRow" Usage="System.Web.UI.WebControls.FormView.TopPagerRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das <see cref="T:System.Web.UI.WebControls.FormViewRow" />-Objekt ab, das die am oberen Rand eines <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelements angezeigte Pagerzeile darstellt.</summary>
        <value>Ein <see cref="T:System.Web.UI.WebControls.FormViewRow" />, der die obere Pagerzeile im <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Paging aktiviert ist (wenn die <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> -Eigenschaftensatz auf `true`), eine zusätzliche Zeile, die die Pagerzeile aufgerufen wird automatisch angezeigt, der <xref:System.Web.UI.WebControls.FormView> Steuerelement. Die Pagerzeile enthält Steuerelemente, mit denen den Benutzer mit anderen Datensätzen navigieren und können am oben, unten oder die oberen und unteren Rand des Steuerelements angezeigt werden. Verwenden der <xref:System.Web.UI.WebControls.FormView.TopPagerRow%2A> Eigenschaft, die den programmgesteuerten Zugriff auf die <xref:System.Web.UI.WebControls.FormViewRow> Objekt, das in die obere Pagerzeile darstellt. die <xref:System.Web.UI.WebControls.FormView> Steuerelement.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.FormView.TopPagerRow%2A> Eigenschaft ist erst verfügbar, nachdem die <xref:System.Web.UI.WebControls.FormView> Steuerelement erstellt, die obere Pagerzeile im der <xref:System.Web.UI.WebControls.FormView.ItemCreated> Ereignis.  
  
 Diese Eigenschaft wird häufig verwendet, wenn Sie die obere Pagerzeile, z. B. beim Hinzufügen von benutzerdefinierten Inhalts programmgesteuert zu bearbeiten möchten. Änderungen an der <xref:System.Web.UI.WebControls.FormView.TopPagerRow%2A> Eigenschaft muss ausgeführt werden, nachdem die <xref:System.Web.UI.WebControls.FormView> Steuerelement wurde an Daten gebunden ist, andernfalls die <xref:System.Web.UI.WebControls.FormView> Steuerelement überschreibt alle Änderungen.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.TopPagerRow%2A> Eigenschaft, um die oben angezeigte Pagerzeile zuzugreifen eine <xref:System.Web.UI.WebControls.FormView> Steuerelement. Die Pagerzeile wird dann mit zusätzlichem Inhalt aktualisiert.  
  
 [!code-aspx-csharp[FormViewTopPagerRow#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewTopPagerRow/CS/formviewtoppagerrowcs.aspx#1)]
 [!code-aspx-vb[FormViewTopPagerRow#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewTopPagerRow/VB/formviewtoppagerrowvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCreated" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="formView.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Markiert den Anfangspunkt, an dem begonnen werden soll, Änderungen am Ansichtszustand des <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelements zu verfolgen und zu speichern.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird überschrieben, um zu kennzeichnen der Ausgangspunkt, nachzuverfolgen und zu speichern von Änderungen auf das Steuerelement im Rahmen des Ansichtszustands des Steuerelements ab.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="P:System.Web.UI.Control.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="UpdateItem">
      <MemberSignature Language="C#" Value="public virtual void UpdateItem (bool causesValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateItem(bool causesValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.UpdateItem(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UpdateItem (causesValidation As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UpdateItem(bool causesValidation);" />
      <MemberSignature Language="F#" Value="abstract member UpdateItem : bool -&gt; unit&#xA;override this.UpdateItem : bool -&gt; unit" Usage="formView.UpdateItem causesValidation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="causesValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="causesValidation">
          <see langword="true" />, wenn beim Aufrufen der Methode eine Seitenvalidierung ausgeführt werden soll, andernfalls <see langword="false" />.</param>
        <summary>Aktualisiert den aktuellen Datensatz in der Datenquelle.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Web.UI.WebControls.FormView> Steuerelement befindet sich im Bearbeitungsmodus befindet, verwenden Sie die <xref:System.Web.UI.WebControls.FormView.UpdateItem%2A> Methode, um den aktuellen Datensatz in der Datenquelle programmgesteuert zu aktualisieren. Diese Methode wird häufig verwendet, wenn Sie den aktuellen Datensatz von außerhalb des aktualisieren müssen die <xref:System.Web.UI.WebControls.FormView> zu steuern, z.B. über ein anderes Steuerelement auf der Seite.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.FormView> -Steuerelement muss in den Bearbeitungsmodus sein, wenn diese Methode aufgerufen wird, andernfalls ein <xref:System.Web.HttpException> ausgelöst.  
  
 Um anzugeben, ob die Validierung der Seite vor dem Updatevorgang ausgeführt wird, verwenden die `causesValidation` Parameter. Aufrufen dieser Methode löst auch die <xref:System.Web.UI.WebControls.FormView.ItemUpdated> und <xref:System.Web.UI.WebControls.FormView.ItemUpdating> Ereignisse.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.UpdateItem%2A> Methode, um programmgesteuert aktualisieren Sie den aktuellen Datensatz in eine <xref:System.Web.UI.WebControls.FormView> -Steuerelement in der Datenquelle.  
  
 [!code-aspx-csharp[FormViewUpdateItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdateItem/CS/formviewupdateitemcs.aspx#1)]
 [!code-aspx-vb[FormViewUpdateItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdateItem/VB/formviewupdateitemvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Diese Methode wird aufgerufen, wenn sich das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement nicht im Bearbeitungsmodus befindet.  Oder:  Das <see cref="T:System.Web.UI.DataSourceView" />-Objekt, das dem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement zugeordnet ist, ist NULL.</exception>
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.DeleteItem" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.InsertItem(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="UpdateMethod">
      <MemberSignature Language="C#" Value="public virtual string UpdateMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdateMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.UpdateMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UpdateMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ UpdateMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateMethod : string with get, set" Usage="System.Web.UI.WebControls.FormView.UpdateMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Methode auf der Seite ab, die aufgerufen wird, wenn das Steuerelement einen Aktualisierungsvorgang ausführt, oder legt diesen fest.</summary>
        <value>Der Name der Methode auf der Seite, die aufgerufen wird, wenn das Steuerelement einen Updatevorgang ausführt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Reihe von Tutorials zur Verwendung von modellbindung mit Web Forms, finden Sie unter [Modellbindung und Web Forms](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>